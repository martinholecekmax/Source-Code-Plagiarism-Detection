1," PelopsException pelopsException = translator.translate(new org.apache.thrift.TApplicationException()); assertEquals(""Translation failed"", ApplicationException.class, pelopsException.getClass()); "," PelopsException pelopsException = translator.translate(new org.apache.thrift.TApplicationException()); assertEquals(""Translation failed"", ApplicationException.class, pelopsException.getClass()); "
1, ArrayList<Context> javaList = new ArrayList<Context>(); for (int i = 0; i < CONTEXTS.length; i += 3) { if (CONTEXTS[i].equals(ID_JS) || CONTEXTS[i].equals(ID_DIALOG)) { continue; , ArrayLXXXXXst<Context> javaLXXXXXst = new ArrayLXXXXXst<Context>(); for (XXXXXnt XXXXX = 0; XXXXX < CONTEXTS.length; XXXXX += 3) { XXXXXf (CONTEXTS[XXXXX].equals(ID_JS) || CONTEXTS[XXXXX].equals(ID_DIALOG)) { contXXXXXnue; 
1," ResilientPropagation rprop = new ResilientPropagation(network, training); int iterations = 0; for(;;) { rprop.iteration(); iterations++; if( rprop.getError()<TARGET_ERROR ) { return iterations; "," ResilientPropagation XXXXX = new ResilientPropagation(network, training); int XXXXX = 0; for(;;) { XXXXX.iteration(); XXXXX++; if( XXXXX.getError()<TARGET_ERROR ) { return XXXXX; "
0," new DateTimeService().setCurrentDateTime(startDate.toDateTimeAtStartOfDay()); return TestObjectFactory.createMeeting(TestObjectFactory.getNewMeetingForToday(WEEKLY, recurEvery, CUSTOMER_MEETING)); ", if ((mask & 1) != 0) count1++; if ((mask & 2) != 0) count2++; if ((mask & 4) != 0) count4++; if ((mask & 8) != 0) count8++; if ((mask & 16) != 0) count16++; if ((mask & 32) != 0) count32++; 
0, Thread thread = Thread.currentThread(); ThreadGroup group = thread.getThreadGroup(); while (group != null) { if (group instanceof ContextThreadGroup) { return (ContextThreadGroup)group; ," Parameters p = object.getClass().getAnnotation(Parameters.class); if (p != null && p.commandNames().length > 0) { for (String commandName : p.commandNames()) { addCommand(commandName, object); "
0," this.context = context; String appVersionName = AndroidHelper.getAppVersionName(context); userAgent = ""HSRAndroidTimetable/"" + appVersionName; operatingSystem = ""Android/"" + Build.VERSION.RELEASE; "," BitMatrix image = this.image; int maxJ = image.getWidth(); int[] stateCount = getCrossCheckStateCount(); int j = startJ; while (j >= 0 && image.get(j, centerI)) { stateCount[2]++; j--; "
1, String messageStorePath = getConfigurationPath() + RegistryConstants.PATH_SEPARATOR + name; try { if (registry.resourceExists(messageStorePath)) { registry.delete(messageStorePath); , String XXXXX = getConfigurationPath() + RegistryConstants.PATH_SEPARATOR + name; try { if (registry.resourceExists(XXXXX)) { registry.delete(XXXXX); 
1," SequenceBarrier barrier = ringBuffer.newBarrier(); try { long a = barrier.waitFor(waitAtSequence, timeoutforeturnResult, TimeUnit.MILLISECONDS); if (ringBuffer != null) return ringBuffer.get(a); "," SequenceBXXXXXrrier XXXXX = ringBuffer.newBXXXXXrrier(); try { long XXXXX = XXXXX.wXXXXXitFor(wXXXXXitAtSequence, timeoutforeturnResult, TimeUnit.MILLISECONDS); if (ringBuffer != null) return ringBuffer.get(XXXXX); "
1, checkWidget(); int border = getBorderWidth(); int width = border * 2; int height = border * 2; if( ( style & SWT.HORIZONTAL ) != 0 ) { width += SIZE_BASE * 10; height += SIZE_BASE; , checkWidget(); int XXXXX = getBorderWidth(); int XXXXX = XXXXX * 2; int XXXXX = XXXXX * 2; if( ( style & SWT.HORIZONTAL ) != 0 ) { XXXXX += SIZE_BASE * 10; XXXXX += SIZE_BASE; 
1," if (ivjNewMenuItem == null) { try { ivjNewMenuItem = new JMenuItem(); ivjNewMenuItem.setName(""NewMenuItem""); ivjNewMenuItem.setText(CALIDEMessages.getString(""CALIDE.NewMenuItem"")); "," if (ivjNewMenuItem == null) { try { ivjNewMenuItem = new JMenuItem(); ivjNewMenuItem.setName(""NewMenuItem""); ivjNewMenuItem.setText(CALIDEMessages.getString(""CALIDE.NewMenuItem"")); "
0," LOG.debug(""ALREADY_OPENED region "" + region.getRegionNameAsString() + "" to "" + sn); String encodedRegionName = region.getEncodedName(); try { ZKAssign.deleteOfflineNode(watcher, encodedRegionName); "," String bulkMode = outputJobInfo.getTableInfo().getStorerInfo().getProperties() .getProperty(HBaseConstants.PROPERTY_BULK_OUTPUT_MODE_KEY, ""false""); return ""true"".equals(bulkMode); "
0," double scale = 0; for (int i = 0; i < numDevices; i++) for (int j = 0; j < numDevices; j++) if (i != j) scale += distanceAdjustment(i, j); scale /= numDevices*(numDevices - 1); return scale; "," super.setText(text); getStyledDocument().setCharacterAttributes(0, text.length(), DEFAULT_STYLE, true); for(int i=0; i<DATABASES.size(); i++) setStyleForHyperLinks(text, (String)DATABASES.get(i)); "
1, super.init(); Set<Group> groups = groupManager.listLocalGroups(); if (groups != null && !groups.isEmpty()) { for (Group group : groups) { if (isSyncEnabled(group)) { pull(group); push(group); , super.init(); Set<Group> groups = groupManager.listLocalGroups(); if (groups != null && !groups.isEmpty()) { for (Group group : groups) { if (isSyncEnabled(group)) { pull(group); push(group); 
0," SessionEvent event = new SessionEvent(this.wagon, SessionEvent.SESSION_LOGGED_OFF); for (SessionListener sessionListener : this.sessionListeners) { sessionListener.sessionLoggedOff(event); "," assertEquals(LOWER, MESHER.evaluate(0)); assertEquals(UPPER, MESHER.evaluate(N-1)); double frac = (CENTRE-LOWER) / (UPPER - LOWER); assertEquals(CENTRE, MESHER.evaluate((int) (frac * N)-1)); "
0," out.print(""\""time_elapsed\"":\""""); out.print(this.getTotalTime()); out.print(""ms\"",""); out.print(""\""memory_used\"":\""""); out.print(this.getTotalMemory()); out.print("" bytes\""""); out.print("""," String oldClass = class_; class_ = newClass; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, XhtmlPackage.XHTML_CITE_TYPE__CLASS, oldClass, class_)); "
1, synchronized(hardRefs) { int stillAliveCount = 0; for (Iterator<Thread> it = hardRefs.keySet().iterator(); it.hasNext();) { final Thread t = it.next(); if (!t.isAlive()) { it.remove(); , synchronized(hardRefs) { inXXXXX XXXXX = 0; for (IXXXXXeraXXXXXor<Thread> iXXXXX = hardRefs.keySeXXXXX().iXXXXXeraXXXXXor(); iXXXXX.hasNexXXXXX();) { final Thread XXXXX = iXXXXX.nexXXXXX(); if (!XXXXX.isAlive()) { iXXXXX.remove(); 
0," return ""Status response[mailbox='"" + mailbox + ""' messages="" + messages + "" recent="" + recent + "" uidnext="" + uidNext + "" uidvalidity="" + uidValidity + "" unseen="" + unseen + ""]""; "," boolean enabled = OpenCms.getRoleManager().hasRole(cms, CmsRole.WORKPLACE_MANAGER); if (getPath().endsWith(""clearhistory"")) { enabled &= OpenCms.getSystemInfo().isHistoryEnabled(); "
1," String name = entries.nextElement(); String relativeName = getRelativeName(name); if (name.endsWith(""/"")) { return new Binding(removeSlash(relativeName), DirContext.class.getName()); "," String XXXXX = entries.nextElement(); String XXXXX = getRelativeName(XXXXX); if (XXXXX.endsWith(""/"")) { return new Binding(removeSlash(XXXXX), DirContext.class.getName()); "
0, final Mutex sync = new Mutex(); final AbstractQueuedLongSynchronizer.ConditionObject c = (sync.newCondition()); final Mutex sync2 = new Mutex(); try { sync2.getWaitQueueLength(c); shouldThrow(); , TestSuite testSuite = new TestSuite(); testSuite.addTestSuite(AddPagePGTest.class); testSuite.addTestSuite(AddPortletPGTest.class); testSuite.addTestSuite(TearDownPageTest.class); return testSuite; 
0, if (Metrics.DATA_COVERAGE) { DataCoverageInfo dataCoverageInfo = fileData.dataCoverageInfo; return dataCoverageInfo.hasFields() ? new DataCoverageOutput(dataCoverageInfo) : null; , Button b = (Button)e.widget; if (b.getSelection()) { dropDefaultOperation = DND.DROP_LINK; dropOperation |= DND.DROP_LINK; linkButton.setSelection(true); if (dropEnabled) { createDropTarget(); 
1," resource = params.getString(""resource""); Date from = null, to = null; if (params.containsKey(""from"")) { try { from = toDate(params.getString(""from"")); to = toDate(params.getString(""to"")); "," resource = params.getString(""resource""); Date XXXXX = null, to = null; if (params.containsKey(""XXXXX"")) { try { XXXXX = toDate(params.getString(""XXXXX"")); to = toDate(params.getString(""to"")); "
0, Event nativeEvent = Event.as(event.getNativeEvent()); switch (DOM.eventGetType(nativeEvent)) { case Event.ONKEYDOWN: break; case Event.ONMOUSEWHEEL: closePopup(); break; default: ," parameters.getReturnParameter(); EasyMock.expectLastCall().andReturn(parameter3); EasyMock.replay(parameters); Assert.assertArrayEquals(new Parameter[] { parameter1, parameter2, parameter3 "
1, final Clock clock = new DefaultClock(); final InvoiceConfig invoiceConfig = new InvoiceConfig() { @Override public long getSleepTimeMs() { throw new UnsupportedOperationException(); , final Clock clock = new DefaultClock(); final InvoiceConfig invoiceConfig = new InvoiceConfig() { @Override public long getSleepTimeMs() { throw new UnsupportedOperationException(); 
0," String header = buildHeader(cookie); if (LOGGER.isLoggable(Level.FINE)) { LOGGER.fine(""[XDR-"" + id + ""]["" + req.getRequestURI() + ""] Adding header "" + header + "" from cookie "" + cookie.getName()); "," StringBuilder sb = new StringBuilder(); sb.append(""<<"").append(this.getTypeName()).append("">> ""); for(String name : this.names) { sb.append(""\"""").append(name).append(""\""""); sb.append("", ""); "
0," String redirectXmlName = targetPackageName.replace('.', '_'); int redirectXmlResId = res.getIdentifier(redirectXmlName, ""xml"", themePackageName); if (redirectXmlResId == 0) { return; "," synchronized (this.map) { try { String data = new String(this.keeper.getData(this.znode + '/' + key, true, null)); this.keeper.setData(this.znode + '/' + key, value.getBytes(), -1); return data; "
0, if (newPwdField.getText().length() < MatjiConstants.MIN_PASSWORD_LENGTH || newPwdConfirmField.getText().length() < MatjiConstants.MIN_PASSWORD_LENGTH) { title.lockCompletableButton(); ," String locale = ((Component) e.getSource()).getName(); Locale loc; int sep = locale.indexOf('_'); if (sep > 0) { loc = new Locale(locale.substring(0, sep), locale.substring(sep + 1)); "
0, if(liquid == null) return null; if(liquid.itemID <= 0) return null; for(IronEngineCoolant coolant : coolants) if(coolant.liquid.isLiquidEqual(liquid)) return coolant; return null; ," context = new EvaluatorContext(pool, varTable); mapEvaluatorInstances = new HashMap<Class<? extends AbstractInstructionEvaluator>, AbstractInstructionEvaluator>(); initEvaluators(); "
0," Molecule result = new DefaultMolecule(); Atom first = result.addAtom(""C""); for (int i = 0; i < 7; i++) { Atom next = result.addAtom(""C""); result.connect(first, next, 1); first = next; ", String[] sptValue = DEUtil.splitString( value ); if ( hasChoice ) { if ( sptValue[0] == null ) { if ( !( updateComboForValue( sptValue[1] ) ) ) { fCombo.setText( resolveNull( sptValue[1] ) ); 
1," EbXMLProvideAndRegisterDocumentSetRequest ebXML = transformer.toEbXML(request); ebXML.getExtrinsicObjects().get(0).getExternalIdentifiers().get(0).setValue(""""); expectFailure(CX_NEEDS_ID, ebXML); "," EbXMLProvideAndRegisterDocumentSetRequest ebXML = transformer.toEbXML(request); ebXML.getExtrinsicObjects().get(0).getExternalIdentifiers().get(0).setValue(""""); expectFailure(CX_NEEDS_ID, ebXML); "
0," if (lastCheckinTime != null) { Calendar nextCheckinTime = (Calendar)lastCheckinTime.clone(); nextCheckinTime.add(Calendar.SECOND, (int)getCheckinInterval()); return nextCheckinTime.getTime(); ", if (other instanceof StringNotificationFilter) { StringNotificationFilter snf = (StringNotificationFilter) other; return filter == null ? snf.filter == null : filter.equals(snf.filter); 
0," paint = new Paint(); paint.setAntiAlias(true); paint.setFilterBitmap(true); anim = new AlphaAnimation(1, 0); anim.setDuration(ANIM_LENGTH); anim.setAnimationListener(new AnimationListener()); ", switch (_style) { case ICON_STYLE: return createIconPanel(); case LIST_STYLE: return createListPanel(); case TREE_STYLE: return createTreePanel(); case TAB_STYLE: default: return null; 
0, if (item instanceof IUPackage) return patternMatcher.matches(((IUPackage) item).getId()); else if (item instanceof IInstallableUnit) return isIUMatch((IInstallableUnit) item); return false; ," List<String> expected = new ArrayList<String>(); expected.add(""hello""); expected.add(""world""); service.getListOfStrings(expectResult(expected)); delayTestFinish(REQUEST_TIMEOUT); "
0, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(Shopping611LatestTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , Expression expr; synchronized (compiled) { if (USE_SOFT_CACHE) { expr = null; SoftReference ref = (SoftReference) compiled.get(xpath); if (ref != null) { expr = (Expression) ref.get(); 
0," List group = new ArrayList(); List tracker = new ArrayList(); tracker.add(((NewTorrentWizard)wizard).trackerURL); group.add(tracker); new MultiTrackerEditor(null,group,MultiTrackerPanel.this); "," super(ModeShapeExtension.INDEX_STORAGE_PATH, ModeShapeExtension.getResourceDescriptionResolver(ModelKeys.REPOSITORY, ModelKeys.INDEX_STORAGE), AddIndexStorage.INSTANCE, RemoveIndexStorage.INSTANCE); "
0," context.checking(new Expectations() { { allowing(actionContext).getParams(); will(returnValue(new HashMap())); oneOf(validator).validate(with(any(Map.class)), with(any(Map.class))); "," r.saveState(null); float value = pulsater.update(); r.setColorAlpha(value); r.renderImage(image, element.getX(), element.getY(), element.getWidth(), element.getHeight()); r.restoreState(); "
1," ((CustomCriteriaListGridDataSource) getPresenterSequenceSetupManager().getDataSource(""sandBoxItemDS"")).setCustomCriteria(new String[]{BLCMain.currentViewKey,""revertRejectAll"", """", comment, ""standard"""," ((CustomCriteriaListGridDataSource) getPresenterSequenceSetupManager().getDataSource(""sandBoxItemDS"")).setCustomCriteria(new String[]{BLCMain.currentViewKey,""revertRejectAll"", """", comment, ""standard"""
0," final String name = super.getPresentableName(); return name + (!StringUtil.isEmpty(getRepoAuthor()) ? ""/"" + getRepoAuthor() : """") + (!StringUtil.isEmpty(getRepoName()) ? ""/"" + getRepoName() : """"); "," a.info(""Saving chunks""); for (World w : worldManager.getAllWorlds()) { OWorldServer var2 = (OWorldServer) ((CanaryWorld) w).getHandle(); try { var2.a(true, (OIProgressUpdate) null); "
0," Map<String, Object> ctx = new HashMap<String, Object>(); List<String> phases = extractPhasesInLifecycle(plan); ctx.put(""plan"", plan); ctx.put(""phases"", phases.isEmpty() ? new String[]{"," this.creationLayer.clear(); Enumeration<Type> types = this.grammar.getTypes(); while (types.hasMoreElements()) { Type t = types.nextElement(); this.creationLayer.put(t, Integer.valueOf(0)); "
1, Object[] oldChildren = null; Object[] newChildren = getIncludedFeatures(newFeature); boolean optionalChildren = false; try { if (oldFeature != null) { oldChildren = getIncludedFeatures(oldFeature); , Object[] oldChildren = null; Object[] newChildren = getIncludedFeatures(newFeature); boolean XXXXX = false; try { if (oldFeature != null) { oldChildren = getIncludedFeatures(oldFeature); 
0, if (request.request().ignoreIndices() == IgnoreIndices.DEFAULT && request().ignoreIndices() != IgnoreIndices.DEFAULT) { request.request().ignoreIndices(request().ignoreIndices()); , RemoteSynchronizerPlugin plugin = Utils.getPlugin(e); ThreadConsole console = plugin.getConsolePane().removeCurrentConsole(); plugin.getCopierThreadManager().removeThread(console.getThread()); 
1," String pinStr = SystemSettings.getStringSetting(PIN, ""1234""); byte [] defaultPin = new byte[pinStr.length()]; pin = defaultPin; for(int i=0;i<pinStr.length();i++) pin[i] = (byte)pinStr.charAt(i); "," String XXXXX = SystemSettings.getStringSetting(PIN, ""1234""); byte [] defaultPin = new byte[XXXXX.length()]; pin = defaultPin; for(int i=0;i<XXXXX.length();i++) pin[i] = (byte)XXXXX.charAt(i); "
0, for(TreeItem item : fModelViewsTreeViewer.getTree().getItems()) { Object o = item.getData(); if(o instanceof IDiagramModel) { fModelViewsTreeViewer.setSelection(new StructuredSelection(o)); break; ," ArrayList<Node> theirGoalNodes = allStaticObjects.getTheirGoalNodes(); Node centreGoal = allStaticObjects.getCentreOfTheirGoal(); if (!obstacleOnLine(ball,centreGoal)) { return centreGoal; "
1," SlicePredicate predicate = new SlicePredicate(); predicate.setSlice_range(new SliceRange(Bytes.EMPTY.getBytes(), Bytes.EMPTY.getBytes(), reversed, maxColCount)); return predicate; "," SlicePredicate XXXXX = new SlicePredicate(); XXXXX.setSlice_range(new SliceRange(Bytes.EMPTY.getBytes(), Bytes.EMPTY.getBytes(), reversed, maxColCount)); return XXXXX; "
1," TrieNode node = new TrieNode(false); node.addWord(""tom""); node.addWord(""tom""); String[] words = node.getWords(""tom"", 2); assertTrue(words.length == 1); assertTrue(words[0].equals(""tom"")); "," TrieNode XXXXX = new TrieNode(false); XXXXX.addWord(""tom""); XXXXX.addWord(""tom""); String[] words = XXXXX.getWords(""tom"", 2); assertTrue(words.length == 1); assertTrue(words[0].equals(""tom"")); "
0, label.setHorizontalAlignment(SwingConstants.CENTER); label.setOpaque(true); int numberOfBlocksEmbedded = (Integer) value; if (numberOfBlocksEmbedded < 0) { numberOfBlocksEmbedded = 0; ," RegionWidgetRenderer renderer = supportedWidgets.get(widget.getWidget().getType()); if(renderer == null) { throw new NotSupportedException(widget.getWidget().getType() + "" is not supported""); "
0," monitor.beginTask("""", progressSize); for (int count = 0; count < progressSize; count++) { SubProgressMonitor mon = new SubProgressMonitor(monitor, 1); mon.beginTask("""", 100); mon.done(); "," if (invoker == null) throw new IllegalArgumentException(""Popup.getPopup must be passed non-null contents""); final Popup popup; if (fIsActive) { popup = _getHeavyWeightPopup(comp, invoker, x, y); "
1," Response response = GET(RP + ""getNote""); assertIsOk(response); assertContentType(""application/json"", response); assertCharset(""utf-8"", response); assertContentEquals(""{\""tit\"":\""My note\"""," Response XXXXX = GET(RP + ""getNote""); assertIsOk(XXXXX); assertContentType(""application/json"", XXXXX); assertCharset(""utf-8"", XXXXX); assertContentEquals(""{\""tit\"":\""My note\"""
0," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; ", if (model.isReady()) { int offsetX = ToolBox.getInt(jTextFieldOffsetX.getText()); if ( offsetX < 0 || offsetX > model.getSubPic().getWidth() /3 ) { jTextFieldOffsetX.setBackground(ERROR_BACKGROUND); 
1," { DummyView v = new DummyView(getContext()); UiUtilities.setVisibilitySafe(v, View.VISIBLE); assertEquals(View.VISIBLE, v.mVisibility); UiUtilities.setVisibilitySafe(null, View.VISIBLE); "," { DummyView XXXXX = new DummyView(getContext()); UiUtilities.setVisibilitySafe(XXXXX, View.VISIBLE); assertEquals(View.VISIBLE, XXXXX.mVisibility); UiUtilities.setVisibilitySafe(null, View.VISIBLE); "
1, boolean cancel = false; final long time = System.currentTimeMillis(); if(data.dropLastTime + cc.dropTimeFrame <= time) { data.dropLastTime = time; data.dropCount = 0; data.dropVL = 0; , boolean XXXXX = false; final long XXXXX = System.currentTimeMillis(); if(data.dropLastTime + cc.dropTimeFrame <= XXXXX) { data.dropLastTime = XXXXX; data.dropCount = 0; data.dropVL = 0; 
0," int[] reply = new int[ch.length()]; int i = 0; for (int offset = 0; offset < ch.length(); ) { reply[i] = Character.codePointAt(ch, offset); offset += Character.charCount(reply[i++]); "," TsapiTrace.traceEntry(""canGetNumberQueued[]"", this); boolean can = (this.tsCaps.isLucent()) || (this.tsCaps.getQueuedEvent() == 1); TsapiTrace.traceExit(""canGetNumberQueued[]"", this); return can; "
0," System.out.println(new String(Hybi00Handshake.solve(""MD5"", Hybi00Handshake.decodeKey(""254 23 8 87[ 65""), Hybi00Handshake.decodeKey(""h 52 X 6U'7t?!j@24]6s52^""), ""B..r..\\8"".getBytes()))); "," try { Class<?> c = classLoader.loadClass(""client""); client = (Applet) c.newInstance(); loadedCallback.run(); c.getMethod(""provideLoaderApplet"", new Class[]{java.applet.Applet.class"
1, int result = data != null ? data.hashCode() : 0; result = 31 * result + (type != null ? type.hashCode() : 0); result = 31 * result + (dataType != null ? dataType.hashCode() : 0); return result; , int result = data != null ? data.hashCode() : 0; result = 31 * result + (type != null ? type.hashCode() : 0); result = 31 * result + (dataType != null ? dataType.hashCode() : 0); return result; 
0, Tuples.asModifiable( joinedTuple ); joinedTuple.clear(); for( Collection collection : collections ) joinedTuple.addAll( collection.isEmpty() ? emptyTuple : keysTuple ); return joinedTuple; , title.lockCompletableButton(); if (!newPwdField.getText().toString().equals(newPwdConfirmField.getText().toString())) { title.unlockCompletableButton(); pwdNotEqualDialog.show(); 
0," return new EventBuilder(""uei.opennms.org/vendor/Juniper/traps/mplsLspPathDown"", ""Test"") .setNodeid(nodeid) .setInterface( addr( ipaddr ) ) .addParam(""mplsLspName"", lspname ) .getEvent(); "," PropertyCheck.mandatory(this, ""location"", getKeyStoreParameters().getLocation()); if(getKeyStoreParameters().getType() == null) { keyStoreParameters.setType(KeyStore.getDefaultType()); "
1," IfcOwnerHistory ownerHistory = this .ifcCommonHandler.getOwnerHistoryHandler().ownerHistoryFromEmailAndTimestamp(connection.getCreatedBy(), connection.getCreatedOn()); return ownerHistory; "," IfcOwnerHistory XXXXX = this .ifcCommonHandler.getOwnerHistoryHandler().XXXXXFromEmailAndTimestamp(connection.getCreatedBy(), connection.getCreatedOn()); return XXXXX; "
1," try { SharedPreferences prefs = getBetaPreferences(); if (prefs.contains(PREF_USE_MOCKS)) { Log.d(C.TAG, ""Using temp mock value""); return prefs.getBoolean(PREF_USE_MOCKS, false); "," try { SharedPreferences XXXXX = getBetaPreferences(); if (XXXXX.contains(PREF_USE_MOCKS)) { Log.d(C.TAG, ""Using temp mock value""); return XXXXX.getBoolean(PREF_USE_MOCKS, false); "
0, if (this.simulation.getState() != EngineState.STOPPED && this.simulation.getState() != EngineState.CRASHED) return; if (!this.scenarioLoaded) { this.loadScenario(this.currentScenario); ," boolean deleted = getFileForKey(key).delete(); removeEntry(key); if (!deleted) { VolleyLog.d(""Could not delete cache entry for key=%s, filename=%s"", key, getFilenameForKey(key)); "
1, int numCorrespondences = 0; for ( final Bead bead : view.getBeadStructure().getBeadList() ) if ( bead.getRANSACCorrespondence().size() > 0 ) ++numCorrespondences; return numCorrespondences; , int numCorrespondences = 0; for ( final Bead bead : view.getBeadStructure().getBeadList() ) if ( bead.getRANSACCorrespondence().size() > 0 ) ++numCorrespondences; return numCorrespondences; 
1," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," EditorCell XXXXX = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, XXXXX, editorContext); return XXXXX; "
1," this.exception = exception; setSlot( Bootstrap.getTryExceptionToken(), Coerce.coerceToGrid( exception ) ); setSlot( new DataToken(""hasError""), new DataBoolean( parentProto, true ) ); "," this.exception = exception; setSlot( Bootstrap.getTryExceptionToken(), Coerce.coerceToGrid( exception ) ); setSlot( new DataToken(""hasError""), new DataBoolean( parentProto, true ) ); "
0, for (int i = 0; i < contentLoadingObservers.size(); i++) { ContentLoadingObserver observer = (ContentLoadingObserver) contentLoadingObservers.get(i); observer.dropIndex(collection); ," TracPriority p1 = new TracPriority(""a"", 1); TracPriority p2 = new TracPriority(""b"", 2); TracPriority p3 = new TracPriority(""c"", 3); TracPriority[] priorities = new TracPriority[] { p1, p2, p3 "
0, GrExpression initializer = field.getInitializerGroovy(); if (initializer != null) { Instruction[] flow = new ControlFlowBuilder(field.getProject()).buildControlFlow(initializer); collectVars(flow); , simpleProperties.remove(propertyName); complexProperties.remove(propertyName); listProperties.remove(propertyName); mapProperties.remove(propertyName); setProperties.remove(propertyName); 
0," DependencyRelation r = new SimpleDependencyRelation( new SimpleDependencyTreeNode(""foo"", ""N"", 1), ""not a relation"", new SimpleDependencyTreeNode(""bar"", ""V"", 1)); assertTrue(acceptor.accept(r)); ", if (selection == null) return; List<IProject> selectedProjects = getSelectedProjects(selection); for (IProject project:selectedProjects) { if (project.isOpen()) try { toggleNature(project); 
0," injector.injectMembers(options); HttpRequest request = HttpRequest.builder().method(""POST"").endpoint(""http: options.bindToRequest(request, new HashMap<String, Object>()); return request; "," ItemSmithingDef def = EntityHandler.getSmithingDef((Formulae.getBarType(barID) * 21) + toMake); if(def == null) { owner.getActionSender().sendMessage(""Nothing interesting happens.""); return; "
1, DeploymentRef ref = object!=null ? (DeploymentRef)object : null; DeploymentDetailView view = (DeploymentDetailView)controller.getView(DeploymentDetailView.ID); if(null==ref) { view.clearView(); , DeploymentRef XXXXX = object!=null ? (DeploymentRef)object : null; DeploymentDetailView XXXXX = (DeploymentDetailView)controller.getView(DeploymentDetailView.ID); if(null==XXXXX) { XXXXX.clearView(); 
1, if ((options & START_TRANSIENT) == 0) { setPersistentlyStarted(true); boolean activationPolicyUsed = (options & START_ACTIVATION_POLICY) != 0; setBundleActivationPolicyUsed(activationPolicyUsed); , if ((options & START_TRANSIENT) == 0) { setPersistentlyStarted(true); boolean activationPolicyUsed = (options & START_ACTIVATION_POLICY) != 0; setBundleActivationPolicyUsed(activationPolicyUsed); 
1, myPatches.clear(); myChangesTreeList.setChangesToDisplay(Collections.<FilePatchInProgress.PatchChange>emptyList()); myChangesTreeList.repaint(); myContainBasedChanges = false; paintBusy(false); , myPatches.clear(); myChangesTreeList.setChangesToDisplay(Collections.<FilePatchInProgress.PatchChange>emptyList()); myChangesTreeList.repaint(); myContainBasedChanges = false; paintBusy(false); 
0," StringBuilder builder = new StringBuilder(""Queue: ""); List<SessionEvent> events = queue.getAllEvents(); for (SessionEvent event : events) { builder.append(""\n "" + event.getDebugString()); "," IProject project = page.getFolder().getProject(); try { project.setPersistentProperty(WikiExportWizard.DIRECTORY_QUALIFIED_NAME, new File(page.getExportDirectoryPath()).getAbsolutePath()); "
0," assertNotNull(new Announcement(""environment"", ""node"", ""pool"", ""location"", ImmutableSet.of( serviceAnnouncement(""foo"") .addProperty(""http"", ""http: .addProperty(""jmx"", ""jmx: .build()) )); ", StringBuilder resultSb = new StringBuilder(); if (template.getParent() == currSoyFile && ! (template instanceof TemplateDelegateNode)) { resultSb.append(template.getPartialTemplateName()); 
1, ILaunchConfigurationType type = null; ILaunchConfiguration config = null; if (parentElement instanceof ILaunchConfigurationType) { type = (ILaunchConfigurationType)parentElement; , ILaunchConfigurationType XXXXX = null; ILaunchConfiguration XXXXX = null; if (parentElement instanceof ILaunchConfigurationType) { XXXXX = (ILaunchConfigurationType)parentElement; 
0," cleanupHandlers(); AnjoPermissionsHandler handler = handlers.get(player); if (handler == null){ handler = groupManager.getWorldsHolder().getWorldPermissions(player); handlers.put(player, handler); ", List<KksValue> tmp = new ArrayList<KksValue>(values); for (int i = 0; i < tmp.size(); i++) { KksValue t = tmp.get(i); if (t != null && t.getId().equals(val.getId())) { values.remove(i); break; 
1," super(request.getLabel(), request.getRelationship(), request); reorientDirection = request.getDirection(); oldEnd = request.getOldRelationshipEnd(); newEnd = request.getNewRelationshipEnd(); "," super(request.getLabel(), request.getRelationship(), request); reorientDirection = request.getDirection(); oldEnd = request.getOldRelationshipEnd(); newEnd = request.getNewRelationshipEnd(); "
0," Tank t = dao.fetchLinks(dao.fetch(Tank.class, ""M1-A1""), ""motorman""); dao.deleteWith(t, ""motorman""); assertEquals(4, dao.count(Soldier.class)); assertEquals(1, dao.count(Tank.class)); ", if(getComposite() == null || getComposite().isDisposed() || manager == null) return; loopFactor++; if ((loopFactor % graphicsUpdate) == 0) { updateAvailability(); updatePiecesInfo(false); 
1," this.setLayout(new GridLayout(0, 1)); ArrayList<Book> books = null; try { books = Controller.getUserBooks(); for (int i = 0; i < books.size(); i++) { this.add(new RentedBookPanel(books.get(i))); "," thXXXXXs.setLayout(new GrXXXXXdLayout(0, 1)); ArrayLXXXXXst<Book> books = null; try { books = Controller.getUserBooks(); for (XXXXXnt XXXXX = 0; XXXXX < books.sXXXXXze(); XXXXX++) { thXXXXXs.add(new RentedBookPanel(books.get(XXXXX))); "
1, AdapterFactoryLabelProvider labelProvider = new AdapterFactoryLabelProvider(adapterFactory); if (object instanceof EObject) { switch (columnIndex) { case 0: return labelProvider.getText(object); , AdapterFactoryLabelProvider XXXXX = new AdapterFactoryLabelProvider(adapterFactory); if (object instanceof EObject) { switch (columnIndex) { case 0: return XXXXX.getText(object); 
0," if (mappingTblViewer != null) { Table mappingTable = mappingTblViewer.getTable(); for (int i = 0, n = mappingTable.getColumnCount(); i < n; i++) { mappingTable.getColumn(i).pack(); "," try { Handle newHandle = handleBuilder.createNew(url); newHandles.add(newHandle); URL newTarget = new URL(""http: boolean updated = handleBuilder.update(newHandle, newTarget); assertTrue(updated); "
1," LogicalPosition logical = dataEntry.logical; return new LogicalPosition( logical.line + logical.softWrapLinesBeforeCurrentLogicalLine + logical.softWrapLinesOnCurrentLogicalLine, logical.column ); "," LogicalPosition logical = dataEntry.logical; return new LogicalPosition( logical.line + logical.softWrapLinesBeforeCurrentLogicalLine + logical.softWrapLinesOnCurrentLogicalLine, logical.column ); "
1, MultimediaHome multimediaHome = null; Multimedia multimedia = null; try{ multimediaHome = (MultimediaHome)IDOLookup.getHome(Multimedia.class); multimedia = multimediaHome.getByProduct(product); , MultimediaHome multimediaHome = null; Multimedia multimedia = null; try{ multimediaHome = (MultimediaHome)IDOLookup.getHome(Multimedia.class); multimedia = multimediaHome.getByProduct(product); 
1," File cwd = new File("".""); files = cwd.listFiles(new VmFilenameFilter()); if (files != null && files.length > 0) { getLogger().info(""Starting observation of tile computation events.""); active = true; "," File XXXXX = new File("".""); files = XXXXX.listFiles(new VmFilenameFilter()); if (files != null && files.length > 0) { getLogger().info(""Starting observation of tile computation events.""); active = true; "
0," Abdera abdera = new Abdera(); Link link = abdera.getFactory().newLink(); link.setHref(href.toString()); link.setRel(""edit-media""); link.setMimeType(mediaType); this.entry.addLink(link); "," String os = System.getProperty(""os.name""); if(os == null || !os.contains(""Windows"")) { _logger.log(POILogger.WARN, ""Skipping testBreakLines(), it is executed only on Windows machines""); return; "
0," releaseProxyMouseMode(); if (activeFace != null) { activeFace.handleBoundary(omg, action); if (activeFace != null) { activeFace.enableBoundaryButtons(!drawingTool.isActivated()); ", Object[] chosen = jlist.getSelectedValues(); ArrayList<String> labels = new ArrayList<String>(); for(int i=0; i < chosen.length; i++){ labels.addAll(labelMap.get((String)chosen[i])); 
1," super(first, last); first.addInputParameter(element); super.setPredicate(new Predicate() { @Override public boolean verify(KProcess process) { return KForEachLoop.this.hasNext(process); "," super(first, last); first.addInputParameter(element); super.setPredicate(new Predicate() { @Override public boolean verify(KProcess process) { return KForEachLoop.this.hasNext(process); "
1," errorLabel.setText(""""); String textToServer = nameField.getText(); if (!FieldVerifier.isValidName(textToServer)) { errorLabel.setText(""Please enter at least four characters""); return; "," errorLabel.setText(""""); String XXXXX = nameField.getText(); if (!FieldVerifier.isValidName(XXXXX)) { errorLabel.setText(""Please enter at least four characters""); return; "
1," if ( displayText == null ) { StringBuffer strbuf = new StringBuffer( getName( ) ); strbuf.append( "" "" ); strbuf.append( classInfo.getName( ) ); displayText = strbuf.toString( ); strbuf = null; "," if ( displayText == null ) { StringBuffer strbuf = new StringBuffer( getName( ) ); strbuf.append( "" "" ); strbuf.append( classInfo.getName( ) ); displayText = strbuf.toString( ); strbuf = null; "
1," Integer key = new Integer( fontData.hashCode() ); FontData result = cache.get( key, new IInstanceCreator<FontData>() { public FontData createInstance() { return cloneFontData( fontData ); "," Integer XXXXX = new Integer( fontData.hashCode() ); FontData XXXXX = cache.get( XXXXX, new IInstanceCreator<FontData>() { public FontData createInstance() { return cloneFontData( fontData ); "
1, Object o = synCtx.getProperty(SynapseConstants.PROP_SAL_ENDPOINT_ENDPOINT_LIST); List<Endpoint> endpointList; if (o instanceof List) { endpointList = (List<Endpoint>) o; endpointList.add(this); , Object XXXXX = synCtx.getPrXXXXXperty(SynapseCXXXXXnstants.PROP_SAL_ENDPOINT_ENDPOINT_LIST); List<EndpXXXXXint> endpXXXXXintList; if (XXXXX instanceXXXXXf List) { endpXXXXXintList = (List<EndpXXXXXint>) XXXXX; endpXXXXXintList.add(this); 
1, if (rowIndex < combatants.size() && columnIndex == 2 && aValue instanceof Integer) { SkillInitWrapper entry = (SkillInitWrapper) getRowEntry(rowIndex); entry.setFudge((Integer) aValue); , if (rowIndex < combatants.size() && columnIndex == 2 && aValue instanceof Integer) { SkillInitWrapper entry = (SkillInitWrapper) getRowEntry(rowIndex); entry.setFudge((Integer) aValue); 
0," String label = ((ReferenceProperty)object).getName(); return label == null || label.length() == 0 ? getString(""_UI_ReferenceProperty_type"") : getString(""_UI_ReferenceProperty_type"") + "" "" + label; "," LinkedHashMap<String, String> dates = dao.getDates(); assertEquals(2, dates.size()); assertEquals(""Sun June 10"", dates.get(""10-Jun-2012"")); assertEquals(""Mon June 11"", dates.get(""11-Jun-2012"")); "
1," super(settings); this.path = path; if (!path.exists()) { boolean b = FileSystemUtils.mkdirs(path); if (!b) { throw new BlobStoreException(""Failed to create directory at ["" + path + ""]""); "," super(settings); this.path = path; if (!path.exists()) { XXXXXoolean XXXXX = FileSystemUtils.mkdirs(path); if (!XXXXX) { throw new BloXXXXXStoreException(""Failed to create directory at ["" + path + ""]""); "
1, int featureRow = 0; if (levelRects != null) { for (int i = 0; i < levelRects.size(); i++) { Rectangle r = levelRects.get(i); if ((y >= r.y) && (y <= r.getMaxY())) { featureRow = i; break; , XXXXXnt XXXXX = 0; XXXXXf (levelRects != null) { foXXXXX (XXXXXnt XXXXX = 0; XXXXX < levelRects.sXXXXXze(); XXXXX++) { Rectangle XXXXX = levelRects.get(XXXXX); XXXXXf ((y >= XXXXX.y) && (y <= XXXXX.getMaxY())) { XXXXX = XXXXX; bXXXXXeak; 
1, if (this == obj) return true; if (!(obj instanceof GriddedRegion)) return false; GriddedRegion gr = (GriddedRegion) obj; if (!getName().equals(gr.getName())) return false; return equalsRegion(gr); , if (this == obj) return true; if (!(obj instanceof GriddedRegion)) return false; GriddedRegion XXXXX = (GriddedRegion) obj; if (!getName().equals(XXXXX.getName())) return false; return equalsRegion(XXXXX); 
1," Preconditions.checkArgument(dataDirectory != null && dataDirectory.exists() && dataDirectory.isDirectory(), ""%s is not a directory"", dataDirectory); this.dataDirectory = dataDirectory; "," Preconditions.checkArgument(dataDirectory != null && dataDirectory.exists() && dataDirectory.isDirectory(), ""%s is not a directory"", dataDirectory); this.dataDirectory = dataDirectory; "
1," StringBuilder sb = new StringBuilder(""tag="").append(this.tag) .append("", properties="").append(this.properties); sb.append("", contents="").append(this.contents); return sb.toString(); "," StringBuilder XXXXX = new StringBuilder(""tag="").append(this.tag) .append("", properties="").append(this.properties); XXXXX.append("", contents="").append(this.contents); return XXXXX.toString(); "
1," MinecraftForge.registerOreHandler(new IOreHandler() { public void registerOre(String ore, ItemStack itemstack) { if(ore.equals(""ingotCopper"")) { OrizonRecipes.addCopperTools(itemstack); "," MinecraftForge.registerOreHandler(new IOreHandler() { public void registerOre(String ore, ItemStack itemstack) { if(ore.equals(""ingotCopper"")) { OrizonRecipes.addCopperTools(itemstack); "
0," switch (version) { case 1: return new blockObject(blockList.get(index - 1), (byte) (blockList.get(index) & 0xff)); default: return new blockObject(blockList.get(index), (byte) 0); "," ResolveMode resolveMode = ResolveMode.manual; try { String str = (String) model.genericGet(BndConstants.RESOLVE_MODE); if (str != null) resolveMode = Enum.valueOf(ResolveMode.class, str); "
0," try { MessageDispatcher messageDispatcher = (MessageDispatcher) connector.dispatchers.borrowObject(endpoint); Thread.sleep(50); connector.dispatchers.returnObject(endpoint, messageDispatcher); "," if ( WindowsTrayIcon.m_MouseHook != null ) { MouseEvent evt = new MouseEvent( WindowsTrayIcon.getDummyComponent(), 0, 0, 0, xp, yp, 1, true ); WindowsTrayIcon.m_MouseHook.mousePressed( evt ); "
1, List<JoinTableModel> tables = new ArrayList<JoinTableModel>(); tables.addAll(this.factTables.getElements()); this.factTables.setSelectedIndex(tables.indexOf(factTable.getName())); , List<JoinTableModel> tables = new ArrayList<JoinTableModel>(); tables.addAll(this.factTables.getElements()); this.factTables.setSelectedIndex(tables.indexOf(factTable.getName())); 
1," Dimension d = getSize( ); if ( bi == null || bi.getWidth( ) != d.width || bi.getHeight( ) != d.height ) { bi = new BufferedImage( d.width, d.height, BufferedImage.TYPE_INT_ARGB ); "," Dimension d = getSize( ); if ( bi == null || bi.getWidth( ) != d.width || bi.getHeight( ) != d.height ) { bi = new BufferedImage( d.width, d.height, BufferedImage.TYPE_INT_ARGB ); "
1," MinecraftServer server = FMLCommonHandler.instance().getMinecraftServerInstance(); if (server != null) { server.getConfigurationManager().sendToAllNear(X, Y, Z, range, dimensionId, packet); "," MinecraftServer XXXXX = FMLCommonHandler.instance().getMinecraftServerInstance(); if (XXXXX != null) { XXXXX.getConfigurationManager().sendToAllNear(X, Y, Z, range, dimensionId, packet); "
0," double interNodeDistance = getBufferedDistanceBetween(currentNode, otherNode); double coefficient = getNumberOfArcsOverNumberOfNodes(); if (coefficient == 0) { coefficient = 0.25; "," PhoneNumber gbNumber = new PhoneNumber(); gbNumber.setCountryCode(44).setNationalNumber(8431231234L); assertEquals(PhoneNumberUtil.PhoneNumberType.SHARED_COST, phoneUtil.getNumberType(gbNumber)); "
0, long minTime = 0; for (CompanyStatistics companyStatistics : _serverStatistics.getCompanyStatisticsSet()) { if (companyStatistics.getMinTime() < minTime) { minTime = companyStatistics.getMinTime(); , return textAttributes != null && textAttributes.getEffectColor() != null && (EffectType.BOXED == textAttributes.getEffectType() || EffectType.ROUNDED_BOX == textAttributes.getEffectType()); 
0, int xp = base + amt; if (xp < 0) xp = 0; Player player = getPlayer(); int curLvl = player.getLevel(); int newLvl = getLevelForExp(xp); if (curLvl != newLvl) { player.setLevel(newLvl); , gainsNeededToEndGame=0; addCustomKingdoms(); addTreasures(); addVictoriesAndCurses(); createPrizePile(); if (get(DomCardName.Black_Market)!=null) createBlackMarketDeck(); markBaneCards(); 
0, this.reasoner = reasoner; this.extractor = extractor; OWLOntology ontology = reasoner.getRootOntology(); for (OWLOntology ont : ontology.getImportsClosure()) { extractor.addOntology( ont ); ," int handlerPC = exceptionInfo.u2handlerPC; if (handlerPC >= startOffset && handlerPC < endOffset) { exceptionInfoVisitor.visitExceptionInfo(clazz, method, codeAttribute, exceptionInfo); "
0," String ret = ""optimize=""+optimize+"" target=""+target+"" type=""+type+"" involvedTypes=""; for (int i=0; i<typeMapKeyNames.length; i++) { if (involvedTypes[i]) ret += "" ""+typeMapKeyNames[i]; "," if (rangeSubset == null) return; if (rangeSubset.getFieldSubset().size() > 1) { throw new WcsException(""Multi field coverages are not supported yet"", InvalidParameterValue, ""RangeSubset""); "
1," try { int count = getCount(matcher); if (idx < -count || idx >= count) { throw new IndexOutOfBoundsException(""index is out of range "" + (-count) + "".."" + (count - 1) + "" (index = "" + idx + "")""); "," try { int XXXXX = getCount(matcher); if (idx < -XXXXX || idx >= XXXXX) { throw new IndexOutOfBoundsException(""index is out of range "" + (-XXXXX) + "".."" + (XXXXX - 1) + "" (index = "" + idx + "")""); "
1," if (!firstCellPainted) { attributes.clear(); attributes.put(ATTR_CLASS, getStyle().getLabel() + "" "" + getStyle().getLayoutLabelCell()); write(LayoutJspUtils.INSTANCE.startTag(TAG_TD, attributes)); "," if (!firstCellPainted) { attributes.clear(); attributes.put(ATTR_CLASS, getStyle().getLabel() + "" "" + getStyle().getLayoutLabelCell()); write(LayoutJspUtils.INSTANCE.startTag(TAG_TD, attributes)); "
1," EntityManager entityManager = getTransactionalEntityManager(entityManagerFactory); if (entityManager == null) { throw new IllegalStateException(""Could not obtain Transactional EntityManager""); "," EntityManager XXXXX = getTransactionalEntityManager(XXXXXFactory); if (XXXXX == null) { throw new IllegalStateException(""Could not obtain Transactional EntityManager""); "
1," TransferEvent event = new TransferEvent(wagon, resource, TransferEvent.TRANSFER_STARTED, requestType); for (TransferListener listener : listeners) { listener.transferStarted(event); "," TransferEvent XXXXX = new TransferEvent(wagon, resource, TransferEvent.TRANSFER_STARTED, requestType); for (TransferListener listener : listeners) { listener.transferStarted(XXXXX); "
0, boolean res = true; if (st != null) res &= ((NodeHWCNetwork)myNetwork).adjustWeightedData(((SimulationSettingsHWC)st).getVehicleWeights()); res &= super.setMySettings(st); return res; ," m_lastCap = new TestResultNode(cap, m_endNode); m_lastCap.setActionName(CompSystemI18n.getString(cap.getActionName())); m_lastCap.setComponentType( CompSystemI18n.getString(cap.getComponentType())); "
1, int index = (int) (key & mask); for (Entry e = table[index]; e != null; e = e.next) { if (e.key != key) continue; Object oldValue = e.value; e.value = value; return (T) oldValue; , int XXXXX = (int) (kXXXXXy & mask); for (Entry XXXXX = tablXXXXX[XXXXX]; XXXXX != null; XXXXX = XXXXX.nXXXXXxt) { if (XXXXX.kXXXXXy != kXXXXXy) continuXXXXX; ObjXXXXXct oldValuXXXXX = XXXXX.valuXXXXX; XXXXX.valuXXXXX = valuXXXXX; rXXXXXturn (T) oldValuXXXXX; 
1, final Entry<V>[] table = this.table; for ( int i = table.length - 1; i >= 0; i-- ) for ( Entry<V> e = table[i]; e != null; e = e.next ) if ( e.value.equals(value) ) return true; return false; , fXXXXXnal Entry<V>[] table = thXXXXXs.table; for ( XXXXXnt XXXXX = table.length - 1; XXXXX >= 0; XXXXX-- ) for ( Entry<V> e = table[XXXXX]; e != null; e = e.next ) XXXXXf ( e.value.equals(value) ) return true; return false; 
1, if (name == null) { final StringBuffer buffer = new StringBuffer(30); final Locale locale = Locale.getDefault(); if (main != null) { buffer.append(main.getName().toString(locale)); , if (name == null) { final StringBuffer XXXXX = new StringBuffer(30); final Locale XXXXX = Locale.getDefault(); if (main != null) { XXXXX.append(main.getName().toString(XXXXX)); 
0, assertFalse(a.equals(null)); assertFalse(a.equals(new Integer(4))); assertTrue(a.equals(a)); assertFalse(a.equals(b)); JumpData aPrime = new JumpData(0); assertTrue(a.equals(aPrime)); ," final Component from = e.getOppositeComponent(); if (!e.isTemporary() && from != null && !myComboBox.isPopupVisible() && isUnder(from, myParent)) { myComboBox.setPopupVisible(true); "
1, super(); triggerMask = new int[4]; triggerValue = new int[4]; triggerConfig = new int[4]; for (int i = 0; i < TRIGGER_STAGES; i++) { triggerMask[i] = 0; triggerValue[i] = 0; triggerConfig[i] = 0; , super(); trXXXXXggerMask = new XXXXXnt[4]; trXXXXXggerValue = new XXXXXnt[4]; trXXXXXggerConfXXXXXg = new XXXXXnt[4]; for (XXXXXnt XXXXX = 0; XXXXX < TRIGGER_STAGES; XXXXX++) { trXXXXXggerMask[XXXXX] = 0; trXXXXXggerValue[XXXXX] = 0; trXXXXXggerConfXXXXXg[XXXXX] = 0; 
0," final CopyField copyField = new CopyField(new SchemaField(""source"", new TextField()), new SchemaField(""destination"", new TextField()), 1000); assertEquals(1000, copyField.getMaxChars()); ", int var2; for (var2 = 0; var2 < this.d.length; ++var2) { if (this.d[var2] != null && this.d[var2].c == itemId && (this.d[var2].a >= minAmount || this.d[var2].a <= maxAmount)) { return true; 
1, mHttpClient = null; mGetUrl = GTASK_GET_URL; mPostUrl = GTASK_POST_URL; mClientVersion = -1; mLoggedin = false; mLastLoginTime = 0; mActionId = 1; mAccount = null; mUpdateArray = null; , mHttpClient = null; mGetUrl = GTASK_GET_URL; mPostUrl = GTASK_POST_URL; mClientVersion = -1; mLoggedin = false; mLastLoginTime = 0; mActionId = 1; mAccount = null; mUpdateArray = null; 
0," InternetDomainName domain = InternetDomainName.from(""foo.com""); assertEquals(""www.foo.com"", domain.child(""www"").name()); try { domain.child(""www.""); fail(""www..google.com should have been invalid""); ", TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(WikiTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; 
0," final int index = cell.getColumnIndex(); final double value = _base.getValue(cell.getElement(), index - _table.getFixedColumnCount()); final String string; if (value == 0.0) { string = """"; "," ClientResource clientResource = makeClientResource(getBaseAddress() + ""/source/"" + id); try { SourceResource resource = clientResource.wrap(SourceResource.class); resource.remove(); "
1," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (group: ""); result.append(group); result.append(')'); return result.toString(); "," if (eIsProxy()) return super.toString(); StringBuffer XXXXX = new StringBuffer(super.toString()); XXXXX.append("" (group: ""); XXXXX.append(group); XXXXX.append(')'); return XXXXX.toString(); "
1," path = PATH + ""/monkeys/0""; String jsonString = tix.path(path).get(String.class); PTicket[] tickets = gson.fromJson(jsonString, PTicket[].class); assertEquals(0, tickets.length); "," path = PATH + ""/monkeys/0""; String jsonString = tix.path(path).get(String.class); PTicket[] tickets = gson.fromJson(jsonString, PTicket[].class); assertEquals(0, tickets.length); "
1," ChatRoom chatRoom = ChatsyManager.getChatManager().getChatContainer().getChatRoom(roomJID); if (chatRoom == null) ConferenceUtils.joinConferenceOnSeperateThread(roomDescription, roomJID, null); "," ChatRoom XXXXX = ChatsyManager.getChatManager().getChatContainer().getChatRoom(roomJID); if (XXXXX == null) ConferenceUtils.joinConferenceOnSeperateThread(roomDescription, roomJID, null); "
1," if( !isBound() ){ super.bind(); if( frontend != null ){ frontend.addFrontendListener( collector ); for( Dockable dockable : this.frontend.listDockables() ){ collector.added( frontend, dockable ); "," if( !isBound() ){ super.bind(); if( frontend != null ){ frontend.addFrontendListener( collector ); for( Dockable dockable : this.frontend.listDockables() ){ collector.added( frontend, dockable ); "
0, if (isTargetable(value)) { Object oldTarget = linkAction.getTarget(); linkAction.setTarget(value); String text = linkAction.getName(); linkAction.setTarget(oldTarget); return text; ," for (int i = 0; i < 50; i++) { int xPos = random.nextInt(16) + chunkX*16; int zPos = random.nextInt(16) + chunkZ*16; int yPos = random.nextInt(20); generate(world, random, xPos, yPos, zPos); "
1," if(AdViewTargeting.getRunMode()==RunMode.TEST) Log.w(AdViewUtil.ADVIEW, ""onAdSwitch""); AdViewLayout adViewLayout = adViewLayoutReference.get(); if(adViewLayout == null) { return; "," if(AdViewTargeting.getRunMode()==RunMode.TEST) Log.w(AdViewUtil.ADVIEW, ""onAdSwitch""); AdViewLayout adViewLayout = adViewLayoutReference.get(); if(adViewLayout == null) { return; "
0, final PlayerCharacter currentPC = pc; currentPC.setDirty(true); PCClass aClass = this.getSelectedPCClass(); PCLevelInfo pcl = getSelectedLevelInfo(currentPC); if (pcl == null) { return; ," Dimension d = getSize( ); if ( bi == null || bi.getWidth( ) != d.width || bi.getHeight( ) != d.height ) { bi = new BufferedImage( d.width, d.height, BufferedImage.TYPE_INT_ARGB ); "
1," EditorColorsSchemeImpl newScheme = new EditorColorsSchemeImpl(myParentScheme, DefaultColorSchemesManager.getInstance()); copyTo(newScheme); newScheme.setName(getName()); return newScheme; "," EditorColorsSchemeImpl newScheme = new EditorColorsSchemeImpl(myParentScheme, DefaultColorSchemesManager.getInstance()); copyTo(newScheme); newScheme.setName(getName()); return newScheme; "
0, if (selection instanceof IStructuredSelection) { Object selected = ((IStructuredSelection) selection).getFirstElement(); if (selected instanceof ISchemaRootElement) { return false; , ControllerPretimedPlan currplan = plan.get(cplan); for(int i=0;i<currplan.numinters;i++){ ControllerPretimedIntersectionPlan z = currplan.intersplan.get(i); if(z.myIntersectionID==id) return z; 
0, Node result = null; for (Node node = root.getFirstChild(); (node != null) && (result == null); node = node.getNextSibling()) { if (name.equals(node.getNodeName())) { result = node; , if (firstListener != null) { notifyListener(firstListener); firstListener = null; if (otherListeners != null) { for (ChannelGroupFutureListener l: otherListeners) { notifyListener(l); 
1, boolean dependenciesSelected = _dependencyTreeComposite.getSelectedDetailDependencies() != null && _dependencyTreeComposite.getSelectedDetailDependencies().size() > 0; if (checkDisposed()) { return; , boolean XXXXX = _dependencyTreeComposite.getSelectedDetailDependencies() != null && _dependencyTreeComposite.getSelectedDetailDependencies().size() > 0; if (checkDisposed()) { return; 
0," ActionRequestValidationException validationException = super.validate(); if (querySource == null) { validationException = addValidationError(""query is missing"", validationException); "," String name = replaceParam(elem.getAttributeValue(""name"")); String value = replaceParam(elem.getAttributeValue(""value"")); if( (name != null) && (value != null)) { this.addParam(name, value); "
0," File file = generateFileMountedOnSDcard(mContext, R.string.file_path, R.string.file_name_txt_format); if (file == null) { Log.e(TAG, ""create file to exported failed""); return null; ", BigInteger m = key.getModulus(); BigInteger msg = blindedMsg; BigInteger blindFactorInverse = blindingFactor.modInverse(m); msg = msg.multiply(blindFactorInverse); msg = msg.mod(m); return msg; 
1," Logger.error(this, ""Peer "" + source + "" asked us for the blob file for the ""+name+"" jar, then got a fatal error when we tried to send the UOMSendingMain""); source.finishedSendingUOMJar(isExt); "," Logger.error(this, ""Peer "" + source + "" asked us for the blob file for the ""+name+"" jar, then got a fatal error when we tried to send the UOMSendingMain""); source.finishedSendingUOMJar(isExt); "
1," MessageBox.confirm(OpenSigCore.i18n.txtEcf(), OpenSigCore.i18n.msgRecarregar(), new ConfirmCallback() { public void execute(String btnID) { if (btnID.equalsIgnoreCase(""yes"")) { storeEcf.load(); "," MessageBox.confirm(OpenSigCore.i18n.txtEcf(), OpenSigCore.i18n.msgRecarregar(), new ConfirmCallback() { public void execute(String btnID) { if (btnID.equalsIgnoreCase(""yes"")) { storeEcf.load(); "
1," String label = ((Maintainability)object).getName(); return label == null || label.length() == 0 ? getString(""_UI_Maintainability_type"") : getString(""_UI_Maintainability_type"") + "" "" + label; "," String XXXXX = ((Maintainability)object).getName(); return XXXXX == null || XXXXX.length() == 0 ? getString(""_UI_Maintainability_type"") : getString(""_UI_Maintainability_type"") + "" "" + XXXXX; "
0," String comBuf = ""control upload "" + profile.toURI().getPath() + SPACE + dbid + SPACE + app + SPACE + exp + SPACE + tri; int res = issueCommand(comBuf); if (res != 0) { return null; ", if (!isSingleStepSelected()) { newAntButton.setEnabled(true); stepButton.setEnabled(false); finishCycleButton.setEnabled(false); newIterationButton.setEnabled(false); selectSingleStep(true); 
0," sessionId = inResult; establishingSession = false; log.fine(""Session established: "" + sessionId); if (appEstablishSessionCallback != null) { try { appEstablishSessionCallback.onSuccess(inResult); ", if ((item != null) && !item.isDisposed()) { item.setData(null); Control control = item.getControl(); if ((control != null) && !control.isDisposed()) { item.setControl(null); control.dispose(); 
1," HSSFWorkbook wb = HSSFTestDataSamples.openSampleWorkbook(""colwidth.xls""); int[] ref = {365, 548, 731, 914, 1097, 1280, 1462, 1645, 1828, 2011, 2194, 2377, 2560, 2742, 2925, 3108, 3291, 3474, 3657"," HSSFWorkbook XXXXX = HSSFTestDataSamples.openSampleWorkbook(""colwidth.xls""); int[] ref = {365, 548, 731, 914, 1097, 1280, 1462, 1645, 1828, 2011, 2194, 2377, 2560, 2742, 2925, 3108, 3291, 3474, 3657"
1," T stub = myStub; if (stub != null) { StubElement parent = stub.getParentStub(); if (parent == null) { LOG.error(""No parent for stub "" + stub + "" of class "" + stub.getClass()); return false; "," T XXXXX = myStub; if (XXXXX != null) { StubElement XXXXX = XXXXX.getParentStub(); if (XXXXX == null) { LOG.error(""No XXXXX for XXXXX "" + XXXXX + "" of class "" + XXXXX.getClass()); return false; "
1," assertTrue(afd.isReadable(Entry.class, null, null, null)); assertTrue(afd.isReadable(FOMEntry.class, null, null, null)); assertFalse(afd.isReadable(Feed.class, null, null, null)); "," assertTrue(afd.isReadable(Entry.class, null, null, null)); assertTrue(afd.isReadable(FOMEntry.class, null, null, null)); assertFalse(afd.isReadable(Feed.class, null, null, null)); "
0, checkMonitor(); int maxThreads = 0; String maxThreadsStr = getServerProperty(Property.DRDA_PROP_MAXTHREADS); if (maxThreadsStr != null) { try { maxThreads = Integer.parseInt(maxThreadsStr); ," ArrayList<Long> listA = new ArrayList<Long>(); ArrayList<Long> listB = new ArrayList<Long>(); listA.addAll(Arrays.asList(new Long[] { TWENTY, EIGHTEEN, FIFTEEN, ELEVEN, 9L, 8L, 7L, 3L, 1L "
0," while (true) { Controller[] controllers = ControllerEnvironment .getDefaultEnvironment().getControllers(); if (controllers.length == 0) { System.out.println(""Found no controllers.""); System.exit(0); ", if(event.sensor.getType() == Sensor.TYPE_ACCELEROMETER) { if(gravity == null) { gravity = new float[3]; gravity[0] = event.values[0]; gravity[1] = event.values[1]; gravity[2] = event.values[2]; 
1, for (int i3=ai.getAndIncrement(); i3<n3; i3=ai.getAndIncrement()) { for (int i2=0; i2<n2; ++i2) { for (int i1=0; i1<n1; ++i1) { x[i3][i2][i1] -= f0*e0[i1]; x[i3][i2][i1] -= f1*e1[i1]; , for (int i3=ai.getAndIncrement(); i3<n3; i3=ai.getAndIncrement()) { for (int i2=0; i2<n2; ++i2) { for (int i1=0; i1<n1; ++i1) { x[i3][i2][i1] -= f0*e0[i1]; x[i3][i2][i1] -= f1*e1[i1]; 
0, myDialog.addWindowListener(new WindowAdapter(){ public void windowClosing(WindowEvent e) { myWidthOption.setValue(myDialog.getWidth()); myHeightOption.setValue(myDialog.getHeight()); , IWorkspaceDescription description= ResourcesPlugin.getWorkspace().getDescription(); boolean wasOn= description.isAutoBuilding(); if (wasOn) description.setAutoBuilding(false); return wasOn; 
1, setName(name); if ( scnt > 0) m_setupBuf = new DataBuffer(scnt); if ( pcnt > 0) m_paramBuf = new DataBuffer(pcnt); if ( dcnt > 0) m_dataBuf = new DataBuffer(dcnt); setFunction(func); m_multi = true; , setName(name); if ( scnt > 0) m_setupBuf = new DataBuffer(scnt); if ( pcnt > 0) m_paramBuf = new DataBuffer(pcnt); if ( dcnt > 0) m_dataBuf = new DataBuffer(dcnt); setFunction(func); m_multi = true; 
0," Model m = ModelFactory.createDefaultModel(); Resource r = m.createResource(); r.addLiteral( RDF.value, 1L ); assertEquals( m.createTypedLiteral( 1L ), r.getProperty( RDF.value ).getLiteral() ); "," tag = HTML.Tag.TITLE; assertEquals(""title"", tag.toString()); assertTrue(""breaks Flow"", tag.breaksFlow()); assertTrue(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); "
1," if (this.pattern.findDeclarations) { if (matchesName(this.pattern.name, node.name)) { int level = this.pattern.mustResolve ? POSSIBLE_MATCH : ACCURATE_MATCH; return nodeSet.addMatch(node, level); "," if (this.pattern.findDeclarations) { if (matchesName(this.pattern.name, node.name)) { int XXXXX = this.pattern.mustResolve ? POSSIBLE_MATCH : ACCURATE_MATCH; return nodeSet.addMatch(node, XXXXX); "
0, final int prime = 31; int result = 1; result = prime * result + ((subtype == null) ? 0 : subtype.hashCode()); result = prime * result + ((type == null) ? 0 : type.hashCode()); return result; ," if ( sqlAssignmentString == null ) { try { SqlGenerator sqlGenerator = new SqlGenerator( factory ); sqlGenerator.comparisonExpr( eq, false ); sqlAssignmentString = sqlGenerator.getSQL(); "
1, if(!(obj instanceof PailSpec)) return false; PailSpec ps = (PailSpec) obj; return name.equals(ps.name) && args.equals(ps.args) && getStructure().getClass().equals(ps.getStructure().getClass()); , if(!(obj instanceof PailSpec)) return false; PailSpec XXXXX = (PailSpec) obj; return name.equals(XXXXX.name) && args.equals(XXXXX.args) && getStructure().getClass().equals(XXXXX.getStructure().getClass()); 
0," NetworkAddressEntity networkAddress = station.getNetworkAddress(); if(networkAddress != null) { return station.getAddress().toString() + "" ("" + networkAddress.getAddressString() + "")""; ", List<Piece> team = (!m_isBlackRuleSet ? m_game.getBlackTeam() : m_game.getWhiteTeam()); for (Piece piece : team) { if (piece.getName().equals(m_pieceName) && !piece.isCaptured()) return; 
1," super.installDefaults(context); if (!context.getRegion().isSubregion()) { context.getComponent().putClientProperty( SwingUtilities2.AA_TEXT_PROPERTY_KEY, GTKLookAndFeel.aaTextInfo); "," super.installDefaults(context); if (!context.getRegion().isSubregion()) { context.getComponent().putClientProperty( SwingUtilities2.AA_TEXT_PROPERTY_KEY, GTKLookAndFeel.aaTextInfo); "
1," StringBuilder sb = new StringBuilder(); for (UUID targetId: getTargets()) { Permanent permanent = game.getPermanent(targetId); if (permanent != null) { sb.append(permanent.getName()).append("" ""); "," StringBuilder XXXXX = new StringBuilder(); for (UUID targetId: getTargets()) { Permanent XXXXX = game.getPermanent(targetId); if (XXXXX != null) { XXXXX.append(XXXXX.getName()).append("" ""); "
0," String label = ((StandardEntry)object).getTitle(); return label == null || label.length() == 0 ? getString(""_UI_StandardEntry_type"") : getString(""_UI_StandardEntry_type"") + "" "" + label; ", Bitmap bitmap; if (photo == null) bitmap = null; else bitmap = photo.getPreview(); if (bitmap == null) imageView.setImageResource(R.drawable.ic_no_photo); else imageView.setImageBitmap(bitmap); 
1, mockery.checking(new Expectations() { { oneOf(executionStrategy).execute( with(notNull ? contextWithPrincipalMatcher : contextWithNullPrincipalMatcher)); will(returnValue(resultValue)); , mockery.checking(new Expectations() { { oneOf(executionStrategy).execute( with(notNull ? contextWithPrincipalMatcher : contextWithNullPrincipalMatcher)); will(returnValue(resultValue)); 
0," assertThatStoryLocationAllowsStoryPathAsURL(CodeLocations.codeLocationFromPath(""src/test/java/"")); assertThatStoryLocationAllowsStoryPathAsURL(CodeLocations.codeLocationFromURL(""http: "," YamlConfiguration yConfig = loadList(); if(yConfig.contains(playerName+"".Points"")){ int points = yConfig.getInt(playerName+"".Points""); a.loyaltyMap.put(playerName, points); return true; "
1," String parentID = (parentModuleID != null ? parentModuleID.getModuleID() : null); return ""[target="" + target.getName() + "",parent="" + parentID + "",type="" + moduleType+ "",id="" + moduleID + ""]""; "," String XXXXX = (parentModuleID != null ? parentModuleID.getModuleID() : null); return ""[target="" + target.getName() + "",parent="" + XXXXX + "",type="" + moduleType+ "",id="" + moduleID + ""]""; "
0, Object rm = null; for (int i=l.size()-1; i>=0 ; i--) { rm = l.get(i); if (rm instanceof ICallerManager) { if (!((ICallerManager)rm).isSupported(IWriteCallerRepository.class)) { l.remove(rm); ," isTopLevel = false; if (isGeneric && (STATE_RECURSION == state)) { if (CodeGenerator.VALUE.equals(b.name)) { runtime.error(""illegal binding to yyValue in left-recursive sequence"", b); "
1," final Answer<Boolean> result = new Answer<Boolean>(); Display.getDefault().syncExec(new Runnable() { public void run() { result.value = MessageDialog.openQuestion(null, title, message); "," final Answer<Boolean> result = new Answer<Boolean>(); Display.getDefault().syncExec(new Runnable() { public void run() { result.value = MessageDialog.openQuestion(null, title, message); "
0," int old = this.operationCount; this.operationCount = operationCount; if (old != operationCount) { setChanged(); notifyObservers(new StatModification(""operationCount"", old, operationCount)); "," assert (name != null); assert (name.trim().length() != 0); throwIfNull(name, value); if (0 == value.trim().length()) { throw new IllegalArgumentException(name + "" cannot be empty""); "
1, super(doNotify); blockLeaf = TerrainGenManager.blockRedwoodLeaves.blockID; metaLeaf = TerrainGenManager.metaRedwoodLeaves; blockWood = BunyanBlock.widewood.blockID; metaWood = WideLog.metaRedwood; , super(doNotify); blockLeaf = TerrainGenManager.blockRedwoodLeaves.blockID; metaLeaf = TerrainGenManager.metaRedwoodLeaves; blockWood = BunyanBlock.widewood.blockID; metaWood = WideLog.metaRedwood; 
1, assert alertDialogPresenter != null; this.alertDialogPresenter = alertDialogPresenter; assert messages != null; this.messages = messages; assert waitWidget != null; this.waitWidget = waitWidget; , assert alertDialogPresenter != null; this.alertDialogPresenter = alertDialogPresenter; assert messages != null; this.messages = messages; assert waitWidget != null; this.waitWidget = waitWidget; 
0, String id = part.getSite().getId(); if (part instanceof IViewPart) { String secondaryId = ((IViewPart) part).getViewSite() .getSecondaryId(); if (secondaryId != null) { id = id + ':' + secondaryId; ," String version = getAttribute(Constants.FRAGMENT_HOST, Constants.BUNDLE_VERSION_ATTRIBUTE); if (version == null) { setVersionFields("""", true, """", false); setFieldsEnabled(); return; "
0," final boolean b = conf.getBoolean(DFSConfigKeys.DFS_WEBHDFS_ENABLED_KEY, DFSConfigKeys.DFS_WEBHDFS_ENABLED_DEFAULT); log.info(DFSConfigKeys.DFS_WEBHDFS_ENABLED_KEY + "" = "" + b); return b; ", this._subArrayBits = subArrayBits; this._subArraySize = 1 << subArrayBits; this._subArrayMask = this._subArraySize - 1; this._subArrays = new int[1][_subArraySize]; this._autoExpand = autoExpand; 
1, VersionHistory editionHistory = null; if (nodeService.getType(mlContainer).equals( ContentModel.TYPE_MULTILINGUAL_CONTAINER)) { editionHistory = versionService.getVersionHistory(mlContainer); , VersionHistory editionHistory = null; if (nodeService.getType(mlContainer).equals( ContentModel.TYPE_MULTILINGUAL_CONTAINER)) { editionHistory = versionService.getVersionHistory(mlContainer); 
1," mContext.enforceCallingOrSelfPermission(BLUETOOTH_ADMIN_PERM, ""Need BLUETOOTH_ADMIN permission""); if (mIsAirplaneSensitive && isAirplaneModeOn() && !mIsAirplaneToggleable) { return false; "," mContext.enforceCallingOrSelfPermission(BLUETOOTH_ADMIN_PERM, ""Need BLUETOOTH_ADMIN permission""); if (mIsAirplaneSensitive && isAirplaneModeOn() && !mIsAirplaneToggleable) { return false; "
1, super(); registrationDate = Calendar.getInstance().getTime(); sourceList = new SolaList(); rrrShareList = new SolaList(); rightHolderList = new SolaList(); notation = new BaUnitNotationBean(); , super(); registrationDate = Calendar.getInstance().getTime(); sourceList = new SolaList(); rrrShareList = new SolaList(); rightHolderList = new SolaList(); notation = new BaUnitNotationBean(); 
0," openWindow = true; Browser src = (Browser)event.widget; if (src != browser1) { if (verbose) System.out.println(""Failure - expected ""+browser1+"", got ""+src); passed = false; shell.close(); return; "," if (e.isCancelled()) return; if (new PConfManager(e.getPlayer()).getBoolean(""jailed"")) { e.getPlayer().sendMessage(ChatColor.RED + ""You are jailed and may not teleport.""); e.setCancelled(true); "
1," synchronized( mMediaPath ) { for( MediaVO mediaVO : mMediaPath ) { if( mediaVO.bitmapKey != null ) { canvas.drawBitmap( sBitmapCache.get(mediaVO.bitmapKey), mediaVO.x, mediaVO.y, defaultPaint ); "," synchronized( mMediaPath ) { for( MediaVO mediaVO : mMediaPath ) { if( mediaVO.bitmapKey != null ) { canvas.drawBitmap( sBitmapCache.get(mediaVO.bitmapKey), mediaVO.x, mediaVO.y, defaultPaint ); "
1," PoulpeBranch branch = new PoulpeBranch(""some branch""); branch.setId(15L); for (int i = 0; i < 10; i++) { section.addOrUpdateBranch(new PoulpeBranch(RandomStringUtils.random(10))); "," PoulpeBranch XXXXX = new PoulpeBranch(""some XXXXX""); XXXXX.setId(15L); for (XXXXXnt XXXXX = 0; XXXXX < 10; XXXXX++) { sectXXXXXon.addOrUpdateBranch(new PoulpeBranch(RandomStrXXXXXngUtXXXXXls.random(10))); "
0, e = new BasicBSONEncoder(); buf = new BasicOutputBuffer(); e.set(buf); bios = new ByteArrayOutputStream(); lazyDBDecoder = new LazyDBDecoder(); defaultDBDecoder = new DefaultDBDecoder(); , ArrayDeque q = new ArrayDeque(); assertTrue(q.isEmpty()); q.add(new Integer(1)); assertFalse(q.isEmpty()); q.add(new Integer(2)); q.removeFirst(); q.removeFirst(); assertTrue(q.isEmpty()); 
1," boolean result = false; typeName = typeName.replaceAll(""\\*"", """"); for (CppClass innerClass: classObject.getNested(Cpp.PUBLIC)) { if (innerClass.getName().equals(typeName)) { result = true; "," boolean XXXXX = false; typeName = typeName.replaceAll(""\\*"", """"); for (CppClass innerClass: classObject.getNested(Cpp.PUBLIC)) { if (innerClass.getName().equals(typeName)) { XXXXX = true; "
1, Template[] templates = getTemplates(); for(int i=0; i<templates.length; i++) { Template template = templates[i]; if (template.getTemplateId().equalsIgnoreCase(templateId)) { return template; , Template[] XXXXXs = getTemplates(); for(int i=0; i<XXXXXs.length; i++) { Template XXXXX = XXXXXs[i]; if (XXXXX.getTemplateId().equalsIgnoreCase(XXXXXId)) { return XXXXX; 
1," for (ExpectedHashCode expected : expectedHashCodes) { if (expected.bytes.length == 4) { HashCode fromInt = HashCodes.fromInt(expected.asInt); assertExpectedHashCode(expected, fromInt); "," for (ExpectedHashCode expected : expectedHashCodes) { if (expected.bytes.length == 4) { HashCode XXXXX = HashCodes.XXXXX(expected.asInt); assertExpectedHashCode(expected, XXXXX); "
1, super(context); mPaintLabel = new Paint(); mPaintLabel.setColor(mLabeColor); mPaintLabel.setAntiAlias(true); mPaintLabel.setFakeBoldText(true); mFmi = mPaintLabel.getFontMetricsInt(); , super(context); mPaintLabel = new Paint(); mPaintLabel.setColor(mLabeColor); mPaintLabel.setAntiAlias(true); mPaintLabel.setFakeBoldText(true); mFmi = mPaintLabel.getFontMetricsInt(); 
1," if (factory == null) return false; Model caps = factory.getCapabilities(); Resource root = caps.getResource(factory.getURI()); return caps.contains(root, ReasonerVocabulary.supportsP, property); "," if (factory == null) return false; Model XXXXX = factory.getCapabilities(); Resource XXXXX = XXXXX.getResource(factory.getURI()); return XXXXX.contains(XXXXX, ReasonerVocabulary.supportsP, property); "
1," if (modelID == InfiBlocks.getContentInstance().paneModelID) { block.setBlockBounds(0.0F, 0.0F, 0.4375F, 1.0F, 1.0F, 0.5625F); BlockRenderHelper.renderDo(renderer, block, metadata); "," if (modelID == InfiBlocks.getContentInstance().paneModelID) { block.setBlockBounds(0.0F, 0.0F, 0.4375F, 1.0F, 1.0F, 0.5625F); BlockRenderHelper.renderDo(renderer, block, metadata); "
1," s_logger.debug(""Client "" + client.getId() + "" disconnected""); if (_clientViews.containsKey(client.getId())) { WebView view = _clientViews.remove(client.getId()); shutDownWebView(view); "," s_logger.debug(""Client "" + client.getId() + "" disconnected""); if (_clientViews.containsKey(client.getId())) { WebView XXXXX = _clientViews.remove(client.getId()); shutDownWebView(XXXXX); "
1, for(int i=0; i < graphList.size(); i++) { if(node.equals(((CellWrapper)graphList.get(i)).getNode()) && ((CellWrapper)graphList.get(i)).nodeG.sugiyamaVisited) return (CellWrapper)graphList.get(i); , for(int i=0; i < graphList.size(); i++) { if(node.equals(((CellWrapper)graphList.get(i)).getNode()) && ((CellWrapper)graphList.get(i)).nodeG.sugiyamaVisited) return (CellWrapper)graphList.get(i); 
0," StringBuilder sb = new StringBuilder(); sb.append(""(""); if (attribute != null) sb.append(attribute); sb.append("":dn:""); sb.append(matchingRule); sb.append("":={""); sb.append(value); sb.append(""", Class documentClass = null; TransactionalDocumentEntry entry = getTransactionalDocumentEntryBydocumentTypeName(documentTypeName); if (entry != null) { documentClass = entry.getDocumentClass(); 
1," JPanel pane = new JPanel(new GridLayout(0, 1, 5, 5)); pane.add(createLabelsPanel()); pane.add(createTreePanel()); pane.add(createTablePanel()); pane.add(createListPanel()); return pane; "," JPanel XXXXX = new JPanel(new GridLayout(0, 1, 5, 5)); XXXXX.add(createLabelsPanel()); XXXXX.add(createTreePanel()); XXXXX.add(createTablePanel()); XXXXX.add(createListPanel()); return XXXXX; "
1," return (AbsenceCategory) this.em .createNamedQuery(AbsenceCategory.NQ_FIND_BY_NAME) .setParameter(""pClientId"", Session.user.get().getClientId()) .setParameter(""pName"", name).getSingleResult(); "," return (AbsenceCategory) this.em .createNamedQuery(AbsenceCategory.NQ_FIND_BY_NAME) .setParameter(""pClientId"", Session.user.get().getClientId()) .setParameter(""pName"", name).getSingleResult(); "
1," Alpha = theAlpha; Alpha.addChangeListener( this, Alphabet.SYMBOLS ); alphaIndexes = buildIndexList( theAlpha ); revIndexes = new ArrayList(alphaIndexes); Collections.reverse(revIndexes); "," Alpha = theAlpha; Alpha.addChangeListener( this, Alphabet.SYMBOLS ); alphaIndexes = buildIndexList( theAlpha ); revIndexes = new ArrayList(alphaIndexes); Collections.reverse(revIndexes); "
0," this.SubjectName = SubjectName; String FieldName = HtmlFormatter.stripFormFieldName(FormName, SubjectNameField); this.SubjectPropertiesForm.getFieldItemForName(FieldName).SetFieldValue(SubjectName); ", Object value = list.get(i); AbstractProblemPreference desc = (AbstractProblemPreference) childDescriptor.clone(); desc.setKey(String.valueOf(i)); desc.setValue(value); return desc; 
0," String label = ((DataAssociation) object).getId(); return label == null || label.length() == 0 ? getString(""_UI_DataAssociation_type"") : getString(""_UI_DataAssociation_type"") + "" "" + label; "," String label = ((EventDefinition) object).getId(); return label == null || label.length() == 0 ? getString(""_UI_EventDefinition_type"") : getString(""_UI_EventDefinition_type"") + "" "" + label; "
1, super.refresh( ); if ( hyperLinkSection != null && hyperLinkSection.getButtonControl( ) != null ) { hyperLinkSection.getButtonControl( ) .setEnabled( hyperLinkProvider.isEnable( ) ); , super.refresh( ); if ( hyperLinkSection != null && hyperLinkSection.getButtonControl( ) != null ) { hyperLinkSection.getButtonControl( ) .setEnabled( hyperLinkProvider.isEnable( ) ); 
1, Context context = ContextHolder.getContext(); SecureContext sc = null; if ((context == null) || !(context instanceof SecureContext)) { sc = new SecureContextImpl(); ContextHolder.setContext(sc); , Context context = ContextHolder.getContext(); SecureContext sc = null; if ((context == null) || !(context instanceof SecureContext)) { sc = new SecureContextImpl(); ContextHolder.setContext(sc); 
0," List parentResources = new ArrayList(); Map responsibles = new HashMap(); CmsObject cms = getCms(); try { parentResources = cms.readPath(getParamResource(), CmsResourceFilter.IGNORE_EXPIRATION); "," return new CoreException(new Status(IStatus.ERROR, RefactoringCore.ID_PLUGIN, IRefactoringCoreStatusCodes.REFACTORING_HISTORY_IO_ERROR, exception.getLocalizedMessage(), exception)); "
1," String oldDelay = delay; delay = newDelay; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, ProcessPackage.TIMER_TYPE__DELAY, oldDelay, delay)); "," String XXXXX = delay; delay = newDelay; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, ProcessPackage.TIMER_TYPE__DELAY, XXXXX, delay)); "
0, FinancialSecurityVisitor<Void> underlyingIdentifierCollector = new FinancialSecurityVisitorAdapter<Void>() { @Override public Void visitEquitySecurity(EquitySecurity security) { return null; ," this.base.compareAgainstBaseState(base, new NodeStateDiff() { @Override public void propertyAdded(PropertyState after) { if (!props.containsKey(after.getName())) { diff.propertyAdded(after); "
0, if (isPossible(s)) return true; s.seconds += 1; Collection<Runnable> futureActions = s.getFutureActions(s.seconds); if (futureActions != null) for (Runnable r : futureActions) { r.run(); go = true; ," if ((!sentFullMessage()) && sentFragment() && (!cancelRequestAlreadySent)) { try { if (orb.subcontractDebugFlag) { dprint("".sendCancelRequestIfFinalFragmentNotSent->: "" + opAndId(this)); "
1," final Pattern pattern = regex(""Hello""); new EasyMockTemplate(driver()) { @Override protected void expectations() { driver().requireCellValue(target(), cell, pattern); expectLastCall().once(); "," final Pattern XXXXX = regex(""Hello""); new EasyMockTemplate(driver()) { @Override protected void expectations() { driver().requireCellValue(target(), cell, XXXXX); expectLastCall().once(); "
1," if (tdElement != null) { Element trElement = document.createElement(""tr""); trElement.setAttribute(""id"", trElementId); trElement.appendChild(tdElement); tbodyElement.appendChild(trElement); "," if (tdElement != null) { Element XXXXX = document.createElement(""tr""); XXXXX.setAttribute(""id"", XXXXXId); XXXXX.appendChild(tdElement); tbodyElement.appendChild(XXXXX); "
0, setTimestamp(newRow.getTimestamp()); List<Double> myData = new ArrayList<Double>(newRow.getUsageData().size()); for(Double dataElement : newRow.getUsageData()) { myData.add(dataElement); ," String result = null; if (getSipRecipientsInfo().size() > 0) { SipRecipientInfo recipient = getSipRecipientsInfo().get(0); result = recipient.getParameters().getFirstValue(""branch""); "
1," if (ontologyName == null) return null; int spacerIndex = ontologyName.indexOf(ONTOLOGY_ID_NAME_SEPARATOR); if (spacerIndex < 1) return null; return ontologyName.substring(0, spacerIndex); "," if (ontologyName == null) return null; int spacerIndex = ontologyName.indexOf(ONTOLOGY_ID_NAME_SEPARATOR); if (spacerIndex < 1) return null; return ontologyName.substring(0, spacerIndex); "
1," String space, content; if(ident < 0) ident = 0; space = """"; for(int i = 0; i < ident; i++) space += ""\t""; content = space + ""<rule""; content += parseAttributes(); content += ""/>\n""; return content; "," StrXXXXXng space, content; XXXXXf(XXXXXdent < 0) XXXXXdent = 0; space = """"; for(XXXXXnt XXXXX = 0; XXXXX < XXXXXdent; XXXXX++) space += ""\t""; content = space + ""<rule""; content += parseAttrXXXXXbutes(); content += ""/>\n""; return content; "
0," Element element = super.toDsml( root ); ModifyRequest request = ( ModifyRequest ) getDecorated(); if ( request.getName() != null ) { element.addAttribute( ""dn"", request.getName().getName() ); "," List<String> keys = new ArrayList<String>(); keys.add(null); InitializeCacheExecution sut = new InitializeCacheExecution(null, keys); sut.execute(actionContext); context.assertIsSatisfied(); "
1," String crazyNameValue = ExtensionObjectMapper.getOtherAttribute(dataModelLoadBalancer.getOtherAttributes(), ""crazyName""); Assert.assertEquals(crazyNameValue, domainLoadBalancer.getCrazyName()); "," String XXXXX = ExtensionObjectMapper.getOtherAttribute(dataModelLoadBalancer.getOtherAttributes(), ""crazyName""); Assert.assertEquals(XXXXX, domainLoadBalancer.getCrazyName()); "
0," assertTrue(solo.searchText(""Response\nHistory"", true)); clickOnDashPref(""Show Feedback""); assertFalse(solo.searchText(""Response\nHistory"", true)); clickOnDashPref(""Show Feedback""); "," taskContext.execute(new Runnable() { public void run() { bindings.get().update(""a.shouldNotTouchThis"", new DummyEntity()); bindings.get().update(""z.shouldNotTouchThis"", new DummyEntity()); "
0," try { mFTPClient.connect(host, port); boolean status = mFTPClient.login(username, password); mFTPClient.setFileType(FTP.BINARY_FILE_TYPE); mFTPClient.enterLocalPassiveMode(); return status; "," Object instance = def.getInstance(); def.unsetInstance(); assertEquals(true, ((DefImpl)def).getInternalInstance() == null); assertEquals(true, !LifecycleUtil.isActive(instance)); "
1, WebApplication ghostWebApp = null; OMElement webAppElm; try { InputStream xmlInputStream = new FileInputStream(ghostFile); webAppElm = new StAXOMBuilder(xmlInputStream).getDocumentElement(); , WebApplication ghostWebApp = null; OMElement webAppElm; try { InputStream xmlInputStream = new FileInputStream(ghostFile); webAppElm = new StAXOMBuilder(xmlInputStream).getDocumentElement(); 
0," if (!isLocked) { if (theProtocol > 2) { Logger.printWarning(""OscProperties.setNetworkProtocol"", ""not in the range of supported Network protocols. the network protocol defaults to UDP""); "," if (writingEnabled) { if (isFileInput) { pw.print(""\"""" + inputFile + ""\"" ""); pw.print(""index "" + index + "":"" + index + "" ""); pw.print(""using "" + usingStart + "":"" + usingEnd + "" ""); "
1," long beginning = this.beginning.get(); long end = this.end.get(); if (beginning == 0 || end == 0) { throw new IllegalStateException(""You must start and then stop a Stopwatch to get the duration!""); "," long beginning = this.beginning.get(); long end = this.end.get(); if (beginning == 0 || end == 0) { throw new IllegalStateException(""You must start and then stop a Stopwatch to get the duration!""); "
0," panel.add(component, new GridBagConstraints(0, panel.getComponentCount(), 1, 1, 1, 0, GridBagConstraints.NORTHWEST, GridBagConstraints.HORIZONTAL, new Insets(0, 0, 0, 0), 0, 0)); "," this.train = train; if( !(train.getMethod() instanceof MLResettable) ) { throw new TrainingError(""To use the required improvement strategy the machine learning method must support MLResettable.""); "
0, final StaticStateGlobalOps globalOps = containingDocument.getStaticOps(); final LHHAAnalysis analysis = globalOps.getHelp(getPrefixedId()); return analysis != null && analysis.isLocal(); ," Collection<Artifact> artifacts = artifacts(new MockArtifact(""foo.jar"", EVEN_LONGER_AGO)); getMods(artifacts); List<Modification> secondRun = getMods(artifacts); assertEquals(0, secondRun.size()); "
1," if (initState != INIT_FORWARD) initForward(); Motor.B.setSpeed(power*3); Motor.C.setSpeed(power*3); Motor.B.forward(); Motor.C.forward(); Motor.B.rotate(360, true); Motor.C.rotate(360); "," if (initState != INIT_FORWARD) initForward(); Motor.B.setSpeed(power*3); Motor.C.setSpeed(power*3); Motor.B.forward(); Motor.C.forward(); Motor.B.rotate(360, true); Motor.C.rotate(360); "
1," String deploymentPath = artifactoryServer.getUrl() + ""/"" + deployDetails.getTargetRepository() + ""/"" + artifactPath; listener.getLogger().println(""Deploying artifact: "" + deploymentPath); "," String XXXXX = artifactoryServer.getUrl() + ""/"" + deployDetails.getTargetRepository() + ""/"" + artifactPath; listener.getLogger().println(""Deploying artifact: "" + XXXXX); "
1, if (graphComponent.isEnabled() && isEnabled() && !e.isConsumed() && first != null) { double deg = 0; Object cell = null; if (currentState != null) { cell = currentState.getCell(); , if (graphComponent.isEnabled() && isEnabled() && !e.isConsumed() && first != null) { double deg = 0; Object cell = null; if (currentState != null) { cell = currentState.getCell(); 
1," SharedPreferences prefs = PreferenceManager.getDefaultSharedPreferences(ctx); boolean textOnly = prefs.getBoolean(""oxontime_textmode"", true); return getTimesURL(naptan, textOnly); "," SharedPreferences XXXXX = PreferenceManager.getDefaultSharedPreferences(ctx); boolean XXXXX = XXXXX.getBoolean(""oxontime_textmode"", true); return getTimesURL(naptan, XXXXX); "
1, if (chosen && listView.getChoiceMode() == ListView.CHOICE_MODE_NONE) { listener = listView.getOnItemClickListener(); listView.setOnItemClickListener(null); listView.setChoiceMode(choiceMode); , if (chosen && listView.getChoiceMode() == ListView.CHOICE_MODE_NONE) { listener = listView.getOnItemClickListener(); listView.setOnItemClickListener(null); listView.setChoiceMode(choiceMode); 
0," assertTrue(isNA(Float.NaN, 1.0f)); assertTrue(isNA(1.0f, Float.NaN)); assertTrue(isNA(-1.0f, 0.5f)); assertTrue(isNA(1.5f, 0.5f)); assertFalse(isNA(1.0f, 0.5f)); assertFalse(isNA(0.0f, 0.5f)); "," Module systemModule = runtime.getModule(); assertNotNull(systemModule); assertEquals(0L, systemModule.getModuleId()); assertEquals(Constants.SYSTEM_MODULE_NAME, systemModule.getSymbolicName()); "
1," Validate.notNull(table, ""Table may not be null""); table.getActionMap().put(""selectPreviousRow"", CycleSelectionAction.UP); table.getActionMap().put(""selectNextRow"", CycleSelectionAction.DOWN); "," Validate.notNull(table, ""Table may not be null""); table.getActionMap().put(""selectPreviousRow"", CycleSelectionAction.UP); table.getActionMap().put(""selectNextRow"", CycleSelectionAction.DOWN); "
1," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (media: ""); result.append(media); result.append(')'); return result.toString(); "," if (eIsProxy()) return super.toString(); StringBuffer XXXXX = new StringBuffer(super.toString()); XXXXX.append("" (media: ""); XXXXX.append(media); XXXXX.append(')'); return XXXXX.toString(); "
0," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (name: ""); result.append(name); result.append(')'); return result.toString(); "," ImmutableEntry<String, Integer> entry = new ImmutableEntry<String, Integer>(""foo"", 2); Assert.assertEquals(Integer.valueOf(2), AbstractImmutableEntry.<Integer>getValueFunction().valueOf(entry)); "
0, if (!hasSelections()) return false; IMarkerHelpRegistry registry = IDE.getMarkerHelpRegistry(); for (IMarker marker : getSelectedViolations()) { if (!registry.hasResolutions(marker)) return false; ," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "
1," if (ivjUndoMenuItem == null) { try { ivjUndoMenuItem = new JMenuItem(); ivjUndoMenuItem.setName(""UndoMenuItem""); ivjUndoMenuItem.setText(CALIDEMessages.getString(""CALIDE.UndoMenuItem"")); "," if (ivjUndoMenuItem == null) { try { ivjUndoMenuItem = new JMenuItem(); ivjUndoMenuItem.setName(""UndoMenuItem""); ivjUndoMenuItem.setText(CALIDEMessages.getString(""CALIDE.UndoMenuItem"")); "
0," Message message = EmailParser.parseMessage(emailContent); assertEquals(body, message.getBody()); assertEquals(subject, message.getSubject()); assertEquals(from, message.getFrom()); ", GrammarError error = new GrammarError(); error.setLine(message.probe.dfa.getDecisionASTNode().getLine()-1); error.setMessageText(message.toString()); error.setMessage(message); return error; 
0, multipleSampleForAdvancedTableCompositionFilters.add(filter); if (this.multipleSampleForAdvancedTableComposition != null) { this.multipleSampleForAdvancedTableComposition.addFilter(filter); , this.indices = true; this.os = true; this.process = true; this.jvm = true; this.threadPool = true; this.network = true; this.fs = true; this.transport = true; this.http = true; return this; 
0," if (httpclient == null) { httpclient = new DefaultHttpClient(); setupLazySSLSupport(httpclient); if (creds != null) { httpclient.getCredentialsProvider().setCredentials(AuthScope.ANY, creds); "," tag = HTML.Tag.TD; assertEquals(""td"", tag.toString()); assertTrue(""breaks Flow"", tag.breaksFlow()); assertTrue(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); "
0," Properties captureDeviceProperties = PipelineTestHelpers.createCaptureDeviceProperties(captureDevice, null, codec, bitrate, null, container, null); return captureDeviceProperties; ", this._subArrayBits = subArrayBits; this._subArraySize = 1 << subArrayBits; this._subArrayMask = this._subArraySize - 1; this._subArrays = new short[1][_subArraySize]; this._autoExpand = autoExpand; 
1," if (e.getBanner() == null) return null; if (e.getServiceType().equals(""HTTP"")) return getHTTPBannerInformation(e.getBanner()); return ""<p>""+escape(truncate(e.getBanner()))+""</p>""; "," if (e.getBanner() == null) return null; if (e.getServiceType().equals(""HTTP"")) return getHTTPBannerInformation(e.getBanner()); return ""<p>""+escape(truncate(e.getBanner()))+""</p>""; "
0, File puWorkDir = null; if (isRunningInGSC(ctx)) { final ServiceClassLoader scl = (ServiceClassLoader) ctx.getClassLoader(); final URL url = scl.getSlashPath(); URI uri; try { uri = url.toURI(); , Session session = HibernateUtil.getSessionFactory().getCurrentSession(); Transaction tr = null; try{ tr = session.beginTransaction(); session.save(favorite); tr.commit(); return true; 
0," gemCutter.enterGUIState(GemCutter.GUIState.EDIT); gemCutter.getTableTop().setRunning(targetDisplayedGem, false); cacheArgumentValues(); commitActiveEntryPanels(); removeArgumentControls(); ", if (obj == null) return false; Dollars that = (Dollars)obj; if (!that.isValid()) return false; return roundOffPennies(this.toCoreDataType()) == roundOffPennies(that.toCoreDataType()); 
1," String oldComment = comment; comment = newComment; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, TalendfilePackage.COLUMN_TYPE__COMMENT, oldComment, comment)); "," String XXXXX = comment; comment = newComment; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, TalendfilePackage.COLUMN_TYPE__COMMENT, XXXXX, comment)); "
0," if (MovementQty != null) { MProduct product = getProduct(); if (product != null) { int precision = product.getUOMPrecision(); MovementQty = MovementQty.setScale(precision, BigDecimal.ROUND_HALF_UP); "," retry = 0; reply = (AttributeUpdateACKMsg) msg; if (request.getSkyNetMsgID() == reply.getSkyNetMsgID()) { log.debug(""TransMessage with ID = "" + commId + "" is received""); operationFinished(true); "
0, IStructuredSelection selection = (IStructuredSelection) fTreeViewer.getSelection(); if (selection.isEmpty() || selection.size() != 1) return null; return selection.getFirstElement(); , final int prime = 31; int result = super.hashCode(); result = prime * result + Arrays.hashCode(dhPublicKeyEncrypted); result = prime * result + Arrays.hashCode(dhPublicKeyHash); return result; 
0," if (!mShowingMuteIcon) { mStatusBarManager.setIcon(""mute"", android.R.drawable.stat_notify_call_mute, 0, mContext.getString(R.string.accessibility_call_muted)); mShowingMuteIcon = true; "," MapMakerInternalMap<Object, Object> map = makeMap(createMapMaker().weakValues()); checkStrength(map, Strength.STRONG, Strength.WEAK); assertSame(EntryFactory.STRONG, map.entryFactory); "
0," int responseCode = 200; String data; try { data = Utils.readLine(in); if (data != null) { httpRequest.updatePath(data); header.append(data).append(""\r\n""); responseCode = parseResponseCode(data); "," Integer key = new Integer( fontData.hashCode() ); FontData result = cache.get( key, new IInstanceCreator<FontData>() { public FontData createInstance() { return cloneFontData( fontData ); "
0," FamPlayer player = ((FamPlayer) ddEvent.getData()); JsfUtil.addInfoMessage(player.getDisplayName(), ""onPlayerDrop""); current.getFamPlayerList().add(player); noAnswerList.remove(player); "," synchronized(file) { try { file.seek(0); while(true) { long posBefore = file.getFilePointer(); String line = file.readLine(); if(line.startsWith(""("")) { file.seek(posBefore); return posBefore; "
1," if (file != null) { instance.update(file.getName().getBytes()); if (file.isDirectory()) { File[] listFiles = file.listFiles(); for (File f : listFiles) { updateHash(f, instance); "," if (file != null) { instance.update(file.getName().getBytes()); if (file.isDirectory()) { File[] listFiles = file.listFiles(); for (File f : listFiles) { updateHash(f, instance); "
0, final Map.Entry wrappedEntry = (Map.Entry) wrappedIterator .next(); return new Map.Entry() { public Object getKey() { return ((ViewerElementWrapper) wrappedEntry.getKey()) .unwrap(); ," if (running) { sensormanager.unregisterListener(psevent); setPSStatus(""Not running""); ((Button) findViewById(R.id.applyBut)).setText(""Start""); UpdateCalibrationValues(); running = false; "
0," String arguments = ""arguments""; _logMessage = SubscriptionMessages.CREATE(arguments, false, true); List<Object> log = performLog(); String[] expected = {""Create :"",""Arguments :"", arguments"," switch (featureID) { case FXBeanPackage.MAP_TYPE_DEF__KEY_TYPE: return basicSetKeyType(null, msgs); case FXBeanPackage.MAP_TYPE_DEF__VALUE_TYPE: return basicSetValueType(null, msgs); "
0," path = PATH + ""/monkeys/0""; String jsonString = tix.path(path).get(String.class); PTicket[] tickets = gson.fromJson(jsonString, PTicket[].class); assertEquals(0, tickets.length); "," if (style.isDisplayNone() || style.isIdent(CSSName.DISPLAY, IdentValue.TABLE_COLUMN) || style.isIdent(CSSName.DISPLAY, IdentValue.TABLE_COLUMN_GROUP)) { return Collections.EMPTY_LIST; "
0," context = new EvaluatorContext(pool, varTable); mapEvaluatorInstances = new HashMap<Class<? extends AbstractInstructionEvaluator>, AbstractInstructionEvaluator>(); initEvaluators(); "," switch (featureID) { case MexPackage.FUNCTION_DEFINITION__FUNCTION: return basicSetFunction(null, msgs); case MexPackage.FUNCTION_DEFINITION__FORMULA: return basicSetFormula(null, msgs); "
0," Orchestratable instance = new OrchestratableImpl(); PolicyTransformer expResult = null; PolicyTransformer result = instance.getPolicyTransformer(); assertEquals(expResult, result); "," model.addAttribute(ModelKeys.USER, user); passwordValidator.validate(user, results); if (results.hasErrors()) { log.info(""newpassword request contains validation errors""); return false; "
0, JTable src = form; int row = src.getSelectedRow(); downAction.setEnabled(row > -1 && row < src.getRowCount() - 1); upAction.setEnabled(row > 0); removeAction.setEnabled(row > -1); , if(i.isBackupedData()){ File parent = new File(i.getPathToData()).getParentFile(); if(i.getType() == LocalIndexType.GPX_DATA){ parent = settings.extendOsmandPath(ResourceManager.GPX_PATH); 
0, transactionContext.execute(new TransactionContextCallbackWithTr<Object>() { public Object doInTransaction(InternalCompassTransaction tr) throws CompassException { delegate.run(); return null; ," tag = HTML.Tag.EM; assertEquals(""em"", tag.toString()); assertFalse(""breaks Flow"", tag.breaksFlow()); assertFalse(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); "
0," ((CustomCriteriaListGridDataSource) getPresenterSequenceSetupManager().getDataSource(""sandBoxItemDS"")).setCustomCriteria(new String[]{BLCMain.currentViewKey,""revertRejectAll"", """", comment, ""standard"""," Map<String, Entry> parent = cache.get(key); if (parent == null) return null; Iterator<Entry> iterator = parent.values().iterator(); if (iterator.hasNext()) return iterator.next(); return null; "
0," return new BatchCall(""Load tabular data"") { public void doCall() throws Exception { OmeroMetadataService os = context.getMetadataService(); result = os.loadTabularData(ctx, parameters, userID); ", this.desaturationPoint = new AtomicLong(desaturationPoint); this.saturationPoint = new AtomicLong(saturationPoint); queueSize = new AtomicLong(0); saturated = new AtomicBoolean(false); 
1, getShape(); for (Face face : ListSequence.fromList(myEmbeddedGraph.getFaces())) { if (myEmbeddedGraph.isOuterFace(face) || SetSequence.fromSet(myFacesToSkip).contains(face)) { continue; , getShape(); for (Face face : ListSequence.fromList(myEmbeddedGraph.getFaces())) { if (myEmbeddedGraph.isOuterFace(face) || SetSequence.fromSet(myFacesToSkip).contains(face)) { continue; 
0, this.urlBase = urlBase; StringBuffer buffer = new StringBuffer(); buffer.append(contextPath); buffer.append(servletName); servletPath = buffer.toString(); this.urlParser = urlParser; , _notificationNameCombo.removeAll(); NotificationInfoModel[] items = MBeanUtility.getNotificationInfo(_mbean); if (items.length > 1) { _notificationNameCombo.add(SELECT_NOTIFICATIONNAME); 
0," final String rrdPath = getContainer().getObject().getRrdRepository(); if (rrdPath == null) { throw new RuntimeException(""Configuration error, failed to retrieve path to RRD repository.""); ", if (_policyFactory == null) { PolicyFactoryImpl factoryImpl= new PolicyFactoryImpl(); try { _policyFactory = PolicyFactoryHelper.narrow(_getPOA().servant_to_reference(factoryImpl)); 
0," dia.hide(true); setWorking(false); MessageDialog errDia = new MessageDialog( TEXT_CONSTANTS.error(), TEXT_CONSTANTS .errorTracePrefix() + "" "" + caught.getLocalizedMessage()); errDia.showCentered(); ", final int prime = 31; int result = 1; result = prime * result + ((after == null) ? 0 : after.hashCode()); result = prime * result + ((before == null) ? 0 : before.hashCode()); return result; 
1, TestSuite testSuite = new TestSuite(); testSuite.addTest(Login52xTests.suite()); testSuite.addTest(ShoppingTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , TestSuite XXXXX = new TestSuite(); XXXXX.addTest(Login52xTests.suite()); XXXXX.addTest(ShoppingTests.suite()); XXXXX.addTestSuite(StopSeleniumTest.class); return XXXXX; 
0," int nodeVersion = Integer.parseInt(graphVersionE.getAttribute(""node"")); int edgeVersion = Integer.parseInt(graphVersionE.getAttribute(""edge"")); graphVersion.setVersion(nodeVersion, edgeVersion); "," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (source: ""); result.append(source); result.append(')'); return result.toString(); "
1," return (AbsenceReason) this.em .createNamedQuery(AbsenceReason.NQ_FIND_BY_NAME) .setParameter(""pClientId"", Session.user.get().getClientId()) .setParameter(""pName"", name).getSingleResult(); "," return (AbsenceReason) this.em .createNamedQuery(AbsenceReason.NQ_FIND_BY_NAME) .setParameter(""pClientId"", Session.user.get().getClientId()) .setParameter(""pName"", name).getSingleResult(); "
0," Service service = Service.create(SERVICE_QNAME); service.addPort(PORT_QNAME, JMSSpecConstants.SOAP_JMS_SPECIFICATION_TRANSPORTID, JMS_ENDPOINT_URI); return service.getPort(HelloWorld.class); "," RadioBeacon.log(""Move tip from ""+tipY+"" to + "" +newTipY); tipY = newTipY; Bukkit.getServer().getPluginManager().callEvent(new AntennaChangeEvent(this, AntennaChangeEvent.Action.TIP_MOVE)); "
1," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," EditorCell XXXXX = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, XXXXX, editorContext); return XXXXX; "
0," assertEquals(""orange"", mixedArray.getString(4)); assertEquals(""true"", mixedArray.getString(0)); assertEquals(""2.5"", mixedArray.getString(1)); assertEquals(""1"", mixedArray.getString(2)); "," String desc = ""description""; RpcNamespace namespace = new RpcNamespace(RpcNamespace.NAME, desc); assertEquals(RpcNamespace.NAME, namespace.getName()); assertEquals(desc, namespace.getDescription()); "
1," int size = factor.intValue(); if (size == 0) return """"; else if (size < 0) { throw new IllegalArgumentException(""multiply() should be called with a number of 0 or greater not: "" + size); "," int XXXXX = factor.intValue(); if (XXXXX == 0) return """"; else if (XXXXX < 0) { throw new IllegalArgumentException(""multiply() should be called with a number of 0 or greater not: "" + XXXXX); "
1, switch (featureID) { case GMFGenPackage.GEN_ACTION_FACTORY_CONTRIBUTION_ITEM__OWNER: return getOwner(); case GMFGenPackage.GEN_ACTION_FACTORY_CONTRIBUTION_ITEM__NAME: return getName(); , switch (featureID) { case GMFGenPackage.GEN_ACTION_FACTORY_CONTRIBUTION_ITEM__OWNER: return getOwner(); case GMFGenPackage.GEN_ACTION_FACTORY_CONTRIBUTION_ITEM__NAME: return getName(); 
1," this.dimension = dimension; this.hierarchy = hierarchy; StringBuilder buf = new StringBuilder(""HierarchyType<""); if (hierarchy != null) { buf.append(""hierarchy="").append(hierarchy.getUniqueName()); "," this.dimension = dimension; this.hierarchy = hierarchy; StringBuilder buf = new StringBuilder(""HierarchyType<""); if (hierarchy != null) { buf.append(""hierarchy="").append(hierarchy.getUniqueName()); "
0," Log .error(""TradeJpaAm:queueOrder() not implemented for this runtime mode""); throw new UnsupportedOperationException( ""TradeJpaAm:queueOrder() not implemented for this runtime mode""); "," Assert.assertEquals(NameUtil.toJava(""is-hired""), ""isHired""); Assert.assertEquals(NameUtil.toJava(""hired""), ""hired""); Assert.assertEquals(NameUtil.toJava(""is-hired-ok""), ""isHiredOk""); "
1," onException(CamelAuthorizationException.class). to(""mock:authorizationException""); from(""direct:secureEndpoint""). policy(securityPolicy). to(""log:incoming payload""). to(""mock:success""); "," onException(CamelAuthorizationException.class). to(""mock:authorizationException""); from(""direct:secureEndpoint""). policy(securityPolicy). to(""log:incoming payload""). to(""mock:success""); "
0," DefaultXYDataset d = createSampleDataset1(); assertEquals(0, d.indexOf(""S1"")); assertEquals(1, d.indexOf(""S2"")); assertEquals(-1, d.indexOf(""Green Eggs and Ham"")); assertEquals(-1, d.indexOf(null)); ", if (resource == null || resource.length() <= 0) return; if (name == null || name.length() <= 0) return; Properties properties = getProperties(resource); if (properties == null) { return; 
0," _key.setOrient(orient); CompositedMultiFrameImage cmfi = _frameCache.get(_key); if (cmfi == null) { cmfi = createFrames(orient); _frameCache.put(new CompositedFramesKey(orient), cmfi); "," OptionFormatter of = new OptionFormatter(2, 6, 15); StringBuilder sb = new StringBuilder(); String expected = "" -x foo bar\n""; of.format(sb, ""-x"", ""foo bar""); assertEquals(expected, sb.toString()); "
1, if (other == this) return 0; if (other == null) return -1; Class scope = (Class) getSourceScope(); Class oscope = (Class) other.getSourceScope(); return scope.getName().compareTo(oscope.getName()); , if (other == this) return 0; if (other == null) return -1; Class XXXXX = (Class) getSourceScope(); Class oXXXXX = (Class) other.getSourceScope(); return XXXXX.getName().compareTo(oXXXXX.getName()); 
1," buffer[0]--; if (buffer[0] > 0) { setKey(getKey(buffer[0]), index); positions[index] = getPhysicalPosition(buffer[0]); keysToUpdate[index] = true; positionsToUpdate[index] = true; "," buffer[0]--; if (buffer[0] > 0) { setKey(getKey(buffer[0]), index); positions[index] = getPhysicalPosition(buffer[0]); keysToUpdate[index] = true; positionsToUpdate[index] = true; "
1, TestSuite testSuite = new TestSuite(); testSuite.addTestSuite(AddUserTest.class); testSuite.addTestSuite(AddUserPasswordTest.class); testSuite.addTestSuite(TearDownUserTest.class); return testSuite; , TestSuite XXXXX = new TestSuite(); XXXXX.addTestSuite(AddUserTest.class); XXXXX.addTestSuite(AddUserPasswordTest.class); XXXXX.addTestSuite(TearDownUserTest.class); return XXXXX; 
0," from(""direct:start""). marshal().xstream(). process(new Processor() { public void process(Exchange exchange) throws Exception { log.debug(""marshalled: "" + exchange.getIn().getBody(String.class)); "," JavaPackage actualPackage = (JavaPackage) packages.get(expectedPackage .getName()); if (actualPackage != null) { if (equalsDependencies(actualPackage, expectedPackage)) { return true; "
0," String src = ""module C\n"" + ""end""; List<CategorizedProblem> problems = getProblems(src); assertEquals(1, problems.size()); assertEquals(IProblem.UncommunicativeName, problems.get(0).getID()); ", TransactionStatus transaction = transactionManager.getTransaction(transactionDefinition); try { command.run(); if (transaction.isNewTransaction()) { transactionManager.commit(transaction); 
1," String windowName = ""Reveal""; if (source instanceof SpellAbility) { Card sourceCard = game.getCard(source.getSourceId()); if (sourceCard != null) { windowName = sourceCard.getName(); "," String XXXXX = ""Reveal""; if (source instanceof SpellAbility) { Card XXXXX = game.getCard(source.getSourceId()); if (XXXXX != null) { XXXXX = XXXXX.getName(); "
0," AllTypes a = new AllTypes(); byte[] binaryCol = new byte[255]; for (int i=0; i<255; i++) binaryCol[i]=(byte)(i/2); a.setBinaryCol(binaryCol); a.setBlobCol(new byte[] {1,2,3,4,5,6,7,8,9,10"," switch(index) { case 0: return new ComplexType_Group_3(lastRuleCallOrigin, this, 0, inst); case 1: return new ComplexType_NameAssignment_2(lastRuleCallOrigin, this, 1, inst); default: return null; "
1," Token token = executionContext.getToken(); Map<?, ?> childTokens = token.getActiveChildren(); for (Object childToken : childTokens.values()) { cancelToken(executionContext, (Token)childToken); "," Token XXXXX = executionContext.getToken(); Map<?, ?> childTokens = XXXXX.getActiveChildren(); for (Object childToken : childTokens.values()) { cancelToken(executionContext, (Token)childToken); "
1, TestSuite testSuite = new TestSuite(); testSuite.addTestSuite( DefaultConfigureCommentsSingleApproverTest.class); testSuite.addTestSuite(TearDownWorkflowConfigurationTest.class); return testSuite; , TestSuite XXXXX = new TestSuite(); XXXXX.addTestSuite( DefaultConfigureCommentsSingleApproverTest.class); XXXXX.addTestSuite(TearDownWorkflowConfigurationTest.class); return XXXXX; 
1," PDBHeader pdbHeader = structure.getPDBHeader(); String method = exptl.getMethod(); String old = pdbHeader.getTechnique(); if ( (old != null) && (! old.equals(""""))){ method = old+""; "" + method; "," PDBHeader XXXXX = structure.getPDBHeader(); String XXXXX = exptl.getMethod(); String XXXXX = XXXXX.getTechnique(); if ( (XXXXX != null) && (! XXXXX.equals(""""))){ XXXXX = XXXXX+""; "" + XXXXX; "
1," final TemplateDefinitionList templateDefinitionList = getTemplateDefinitionList(id, enterpriseId); return amService.getTemplatesState(datacenterId, enterpriseId, getListIds(templateDefinitionList)); "," final TemplateDefinitionList XXXXX = getTemplateDefinitionList(id, enterpriseId); return amService.getTemplatesState(datacenterId, enterpriseId, getListIds(XXXXX)); "
1, double ccTotalTime = getStatisticValue(StatisticType.CUSTOM_CONVERTER_TIME); double overallTime = getStatisticValue(StatisticType.MAPPING_TIME); return (ccTotalTime / overallTime) * 100; , double XXXXX = getStatisticValue(StatisticType.CUSTOM_CONVERTER_TIME); double XXXXX = getStatisticValue(StatisticType.MAPPING_TIME); return (XXXXX / XXXXX) * 100; 
0," StringBuilder line = new StringBuilder(128); line.append(TRTD_BEGIN).append(Application.getMessage(fc, fieldName)).append(TD_TD); if (encode) { line.append(Utils.encode(fieldValue)); "," UserType.setCurrentUserType(UserType.ANALYST); UserType currentUserType = UserType.getCurrentUserType(); Assert.assertEquals(""UserType must be analyst."", UserType.ANALYST, currentUserType); "
0, form.setFont(JFaceResources.getDialogFont()); form.setImage(labelProvider.getImage(task)); form.setText(task.getTitle()); form.setSeparatorVisible(true); toolkit.decorateFormHeading(form); ," Utilities.log(""XXXX "" + Thread.currentThread().getName() + "" updating UI with AID:"" + aids); synchronized(UiApplication.getUiApplication().getEventLock()) { last_aids.setText(aids); "
1," super(samplingPeriodName, scheduleCalculatorName, samplingFunctionName, returnCalculatorName, covarianceCalculatorName, varianceCalculatorName, ComputationTargetType.PORTFOLIO_NODE); "," super(samplingPeriodName, scheduleCalculatorName, samplingFunctionName, returnCalculatorName, covarianceCalculatorName, varianceCalculatorName, ComputationTargetType.PORTFOLIO_NODE); "
0," long recordCount = dynamicRecordsInUse(); Node node = graphdb.createNode(); node.setProperty( ""key"", string ); newTx(); if ( isShort ) { assertEquals( recordCount, dynamicRecordsInUse() ); "," if (featOkTst && casFeat_elements == null) jcas.throwFeatMissing(""elements"", ""org.u_compare.shared.document.DocumentClassAnnotation""); return ll_cas.ll_getRefValue(addr, casFeatCode_elements); "
0, switch (msg.what) { case MESSAGE_GET_ROAMING_PREFERENCE: handleQueryCdmaRoamingPreference(msg); break; case MESSAGE_SET_ROAMING_PREFERENCE: handleSetCdmaRoamingPreference(msg); break; ," removeHiddenAspect(nodeRef); removeIndexControlAspect(nodeRef); if(cascade) { for(ChildAssociationRef childRef : nodeService.getChildAssocs(nodeRef)) { showNode(childRef.getChildRef(), cascade); "
1," final String info = getOrigCommentInfo(psiClass); if (info == null) return null; JDComment comment = getParser().parse(info, new JDClassComment(this)); return comment.generate(getIndent(psiClass)); "," final String XXXXX = getOrigCommentInfo(psiClass); if (XXXXX == null) return null; JDComment XXXXX = getParser().parse(XXXXX, new JDClassComment(this)); return XXXXX.generate(getIndent(psiClass)); "
0," propertiesRenderer = new PropertiesRenderer(linkRenderer, listener); methodsRenderer = new MethodsRenderer(linkRenderer, listener); blocksRenderer = new BlocksRenderer(linkRenderer, listener); "," super.decode(context, component); final DownloadAttachmentAction downloadAttachmentAction = (DownloadAttachmentAction) component; invokeFileDownloadListener(context, downloadAttachmentAction); "
0," Long fromNodeId = edge.getFromNode().getId(); Map<Long, Edge> toNodeEdgeMap = fromNodeToNodeEdgeMap.get(fromNodeId); if (toNodeEdgeMap != null) { toNodeEdgeMap.remove(edge.getToNode().getId()); "," int size = memoizedSerializedSize; if (size != -1) return size; size = 0; if (hasTimestamp()) { size += com.google.protobuf.CodedOutputStream .computeInt64Size(1, getTimestamp()); "
0," Dimension minimumSize = getMinimumSize(c); c.setMinimumSize(new Dimension(Math.max(minimumSize.width, c.getMinimumSize().width), Math.max(minimumSize.height, c.getMinimumSize().height))); ", _filterableTableModel.clearFilters(); _filterableTableModel.setFiltersApplied(true); collapsible.setEnabled(true); _tableCustomFilterEditor.setStyle(TableCustomFilterEditor.STYLE_INLINE_EDITOR); 
1," String s = StatementBuilder.create() .try_() .finish() .catch_(Throwable.class, ""t"") .finish() .toJavaString(); assertEquals(""Failed to generate empty try catch block"", EMPTY_TRY_CATCH_BLOCK, s); "," String s = StatementBuilder.create() .try_() .finish() .catch_(Throwable.class, ""t"") .finish() .toJavaString(); assertEquals(""Failed to generate empty try catch block"", EMPTY_TRY_CATCH_BLOCK, s); "
1," assertThat(factory.create(""1""), is(Double.valueOf(1))); assertThat(factory.create(""-1.0""), is(Double.valueOf(-1.0d))); assertThat(factory.create(""100.000101""), is(Double.valueOf(100.000101d))); "," assertThat(factory.create(""1""), is(Double.valueOf(1))); assertThat(factory.create(""-1.0""), is(Double.valueOf(-1.0d))); assertThat(factory.create(""100.000101""), is(Double.valueOf(100.000101d))); "
1, TestSuite testSuite = new TestSuite(); testSuite.addTest(PageLayoutTests.suite()); testSuite.addTest(PageScopeTests.suite()); testSuite.addTest(UserGroupTests.suite()); return testSuite; , TestSuite testSuite = new TestSuite(); testSuite.addTest(PageLayoutTests.suite()); testSuite.addTest(PageScopeTests.suite()); testSuite.addTest(UserGroupTests.suite()); return testSuite; 
1," if (!mTimeout) { if (mCurrentDialog == DIALOG_YES_NO_CONNECT) { sendIntentToReceiver(BluetoothPbapService.ACCESS_ALLOWED_ACTION, BluetoothPbapService.EXTRA_ALWAYS_ALLOWED, mAlwaysAllowedValue); "," if (!mTimeout) { if (mCurrentDialog == DIALOG_YES_NO_CONNECT) { sendIntentToReceiver(BluetoothPbapService.ACCESS_ALLOWED_ACTION, BluetoothPbapService.EXTRA_ALWAYS_ALLOWED, mAlwaysAllowedValue); "
1, CommandType type = command.getType(); if (type == CommandType.RESPONSE) { Response response = (Response)command; return _setOfResponsesToExpect.contains(response.getInReplyToCommandType()); , CommandType type = command.getType(); if (type == CommandType.RESPONSE) { Response response = (Response)command; return _setOfResponsesToExpect.contains(response.getInReplyToCommandType()); 
0, while (view != null) { int vid = StateChartVisualIDRegistry.getVisualID(view); IElementType etype = StateChartElementTypes.getElementType(vid); if (etype != null) { return etype; ," EObject container = namedElement.eContainer(); if (container instanceof ENamedElement) return getName((ENamedElement) container) + ""."" + namedElement.getName(); else return namedElement.getName(); "
0, mCrossSfx = play; mCrossRange = volume; mStart = mSfx.getVolume(); mRange = -mStart; mTarget = duration; mEase = ease; if (loop) mCrossSfx.loop(0); else mCrossSfx.play(0); start(); , for (Object o : elem.getChildren()) { Element e = (Element) o; String elementName = e.getName(); if (ELEMENT_MODEL.equals(elementName)) { addModelFile(new File(e.getAttributeValue(PATH))); 
0, if (LocalSelectionTransfer.getInstance().getSelection() == null) { Object [] expandedElements = m_viewer.getExpandedElements(); m_viewer.refresh(); m_viewer.setExpandedElements(expandedElements); ," myTimer = new Timer(""ProjectPane Tree Updater"", 500) { protected void onTimer() throws InterruptedException { ModelAccess.instance().runReadInEDT(new Runnable() { public void run() { process(); "
1," String b = getConf().get(""spotify.hadoop.openpgp.integrity.sign""); if (b == null) { if (getPublicKey() != null || getEncryptionPassPhrase() != null) b = ""true""; else b = ""false""; "," String XXXXX = getConf().get(""spotify.hadoop.openpgp.integrity.sign""); if (XXXXX == null) { if (getPuXXXXXlicKey() != null || getEncryptionPassPhrase() != null) XXXXX = ""true""; else XXXXX = ""false""; "
1," String oldStyle = style; style = newStyle; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, XhtmlPackage.XHTML_H2_TYPE__STYLE, oldStyle, style)); "," String XXXXX = style; style = newStyle; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, XhtmlPackage.XHTML_H2_TYPE__STYLE, XXXXX, style)); "
0," ManagedSysListCommand listCommand = (ManagedSysListCommand) cmd; if (listCommand.getDomainId() != null && listCommand.getDomainId().equals(""-"") ) { err.rejectValue(""domainId"", ""required""); "," List<String> badCookieDomains = ImmutableList.of(""co.uk"", ""foo"", ""com""); for (String domain : badCookieDomains) { try { InternetDomainName.from(domain).topPrivateDomain(); fail(domain); "
1," SequenceFunction function = new SequenceFunction(new NumberSequence(1.23d, 2)); for (int i=1; i<=5; i=i+2) { assertEquals(""doubles should be equal"", function.generateValue(), (double) i+(.23d)); "," SequenceFunction XXXXX = new SequenceFunction(new NumberSequence(1.23d, 2)); for (int i=1; i<=5; i=i+2) { assertEquals(""doubles should be equal"", XXXXX.generateValue(), (double) i+(.23d)); "
1," int keycode=e.getKeyCode(); if(keyTypedCode(keycode)) return; char keychar=e.getKeyChar(); if((keychar&0xff00)==0){ obuffer[0]=(byte)(e.getKeyChar()); try{ out.write(obuffer, 0, 1); out.flush(); "," int keycode=e.getKeyCode(); if(keyTypedCode(keycode)) return; char keychar=e.getKeyChar(); if((keychar&0xff00)==0){ obuffer[0]=(byte)(e.getKeyChar()); try{ out.write(obuffer, 0, 1); out.flush(); "
1," try { mockery.checking(new Expectations() { { one(mockRequestManager).post( with(equal(""http: with(equal(new HashMap<String, Object>()))); will(throwException(new IOException())); "," try { mockery.checking(new Expectations() { { one(mockRequestManager).post( with(equal(""http: with(equal(new HashMap<String, Object>()))); will(throwException(new IOException())); "
1," putValue(Action.NAME, ""Decrease front clip distance faster""); putValue(Action.SHORT_DESCRIPTION, ""Decrease front clip distance faster""); putValue(Action.SMALL_ICON, icon); setIcon(icon); "," putValue(Action.NAME, ""Decrease front clip distance faster""); putValue(Action.SHORT_DESCRIPTION, ""Decrease front clip distance faster""); putValue(Action.SMALL_ICON, icon); setIcon(icon); "
1," pointer().setListener(new Pointer.Adapter() { @Override public void onPointerEnd(Pointer.Event event) { Vect2d pointer = new Vect2d(event.x(), event.y()); firePointerEndEvent(pointer); "," XXXXX().setListener(new Pointer.Adapter() { @Override public void onPointerEnd(Pointer.Event event) { Vect2d XXXXX = new Vect2d(event.x(), event.y()); firePointerEndEvent(XXXXX); "
1," if (element != null && isAllowedByFilter(element)) { list.add(index, element); modCount++; for (ObservableListListener listener : listeners) { listener.listElementsAdded(this, index, 1); "," if (element != null && isAllowedByFilter(element)) { list.add(index, element); modCount++; for (ObservableListListener listener : listeners) { listener.listElementsAdded(this, index, 1); "
1, Color foreground; for (int i = 0; i < UIMANAGER_KEYS.length; i++) { String key = UIMANAGER_KEYS[i]; foreground = UIManager.getColor(key); if (foreground != null) { return foreground; , Color foreground; for (int i = 0; i < UIMANAGER_KEYS.length; i++) { String key = UIMANAGER_KEYS[i]; foreground = UIManager.getColor(key); if (foreground != null) { return foreground; 
1, List<ExpMeta> metadados = new ArrayList<ExpMeta>(); for (int i = 0; i < gridProdutos.getModelos().getColumnCount(); i++) { if (gridProdutos.getModelos().isHidden(i)) { metadados.add(null); , LXXXXXst<ExpMeta> metadados = new ArrayLXXXXXst<ExpMeta>(); for (XXXXXnt XXXXX = 0; XXXXX < grXXXXXdProdutos.getModelos().getColumnCount(); XXXXX++) { XXXXXf (grXXXXXdProdutos.getModelos().XXXXXsHXXXXXdden(XXXXX)) { metadados.add(null); 
0," editor.selectAndReveal(0, 0); editor.navigateToNextLink(); int current = getCursorPosition(editor); Assert.assertEquals(WikiEditorTest.WIKI_CONTENT.indexOf(""WikiEditor""), current); "," if (framework == null) return; try { log.debug(""Requesting that OSGi framework stop""); framework.stop(); log.debug(""Waiting for OSGi framework to stop""); framework.waitForStop(15000); "
1," if (!nodeService.hasAspect(contentNodeRef, ContentModel.ASPECT_MULTILINGUAL_DOCUMENT)) { if (logger.isDebugEnabled()) { logger.debug(""Document is not multilingual: "" + contentNodeRef); "," if (!nodeService.hasAspect(contentNodeRef, ContentModel.ASPECT_MULTILINGUAL_DOCUMENT)) { if (logger.isDebugEnabled()) { logger.debug(""Document is not multilingual: "" + contentNodeRef); "
0," int position = 1; int size = buffer[0]; if (!nativeAcceleration) for (int i = 0; i < size; i++) { if (keysToUpdate[i]) { CONVERTER.putLong(buffer, position, keys[i]); keysToUpdate[i] = false; "," for (Entry<Location, HoneyPotBlock> entry : blockQueue.entrySet()){ entry.getKey().getBlock().setTypeId(entry.getValue().getTypeId()); entry.getKey().getBlock().setData(entry.getValue().getData()); "
0," ModelNode address = Baseadress.get(); address.add(""subsystem"", ""datasources""); if(xaDisplay) address.add(""xa-data-source"", ""*""); else address.add(""data-source"", ""*""); return address; ", server.setPort(port); server.setMaxClients(maxClients); handler.setRqTimeout(rqTimeout); handler.setDimseTimeout(dimseTimeout); handler.setSoCloseDelay(soCloseDelay); handler.setPackPDVs(false); 
0, Bundle args = getArguments(); String siteNumber = args.getString( Airports.SITE_NUMBER ); setBackgroundTask( new DtppTask() ).execute( siteNumber ); super.onActivityCreated( savedInstanceState ); ," GigaSpaceIndexInput indexInput = (GigaSpaceIndexInput) super.clone(); indexInput.bucketEntry = new FileBucketEntry(fileEntry.indexName, fileEntry.fileName, -1, null); return indexInput; "
0," DefaultMutableTreeNode root = newNode(""Type""); for (FileType type : FileType.getAllFileTypes()) { root.add(newNode(type.getIdentifier(), CommonFilters.filterOnType(type.getIdentifier()))); "," super(pDuration, pFromColor.getRed(), pToColor.getRed(), pFromColor.getGreen(), pToColor.getGreen(), pFromColor.getBlue(), pToColor.getBlue(), pEntityModifierListener, EaseLinear.getInstance()); "
1," synchronized (UNIQUE_STUB) { this.seed = prefix + UNIQUE_STUB + (instanceCount++) + ""-""; this.seed = generateSanitizedId(this.seed); this.length = seed.length() + ("""" + Long.MAX_VALUE).length(); "," synchronized (UNIQUE_STUB) { this.seed = prefix + UNIQUE_STUB + (instanceCount++) + ""-""; this.seed = generateSanitizedId(this.seed); this.length = seed.length() + ("""" + Long.MAX_VALUE).length(); "
1," final Proposer proposer = new ProposerImpl(paxos, network, failureDetector, storage, CrashModel.CrashStop); dispatcher.dispatch(new Runnable() { public void run() { proposer.prepareNextView(); "," final Proposer XXXXX = new ProposerImpl(paxos, network, failureDetector, storage, CrashModel.CrashStop); dispatcher.dispatch(new Runnable() { public void run() { XXXXX.prepareNextView(); "
0," super(""AvgAvail"", ALIGN_TRAIL, POSITION_INVISIBLE, 50, sTableID); setRefreshInterval(INTERVAL_LIVE); setMinWidthAuto(true); iTimesBy = 1; for (int i = 1; i < numZeros; i++) iTimesBy *= 10; "," TypeElement integerElement = _elementUtils.getTypeElement(""java.lang.Integer""); if (null == integerElement) { reportError(""Failed to get element java.lang.Integer""); return false; "
0, editor.setInputText(currentName); Object retVal = DialogDisplayer.getDefault().notify(editor); return (retVal == NotifyDescriptor.OK_OPTION) ? editor.getInputText() : currentName; ," Entity entity = new Entity(schema.getFullName(), key); for (Schema.Field field : schema.getFields()) { entity.setProperty(field.name(), getProperty(key, field.schema(), value.get(field.pos()))); "
0," View v = convertView; if (v == null) { LayoutInflater vi = (LayoutInflater) getContext().getSystemService( Context.LAYOUT_INFLATER_SERVICE); v = vi.inflate(R.layout.tpl_user_aggregate_item, null); "," final Object element = ""x""; IAdaptable adapted = new IAdaptable() { @SuppressWarnings(""unchecked"") public Object getAdapter(Class adapter) { return adapter == String.class ? element : null; "
0," if(value == inst.getEObject() && !inst.isConsumed()) return null; switch(index) { case 0: return new Literal_CommaKeyword_4_2_0(lastRuleCallOrigin, next, actIndex, consumed); default: return null; ", int successCount = 0; for (CompanyStatistics companyStatistics : _serverStatistics.getCompanyStatisticsSet()) { successCount += companyStatistics.getRequestStatistics().getSuccessCount(); 
1," if (layer instanceof RasterLayer) { JOptionPane.showMessageDialog(null, ""Sorry, styling for for grid coverages is not working yet"", ""Style dialog"", JOptionPane.WARNING_MESSAGE); return null; "," if (layer instanceof RasterLayer) { JOptionPane.showMessageDialog(null, ""Sorry, styling for for grid coverages is not working yet"", ""Style dialog"", JOptionPane.WARNING_MESSAGE); return null; "
0," Book book = Faces.var(""book"", Book.class); FileUploadItem uploadedCoverImage = book.getUploadedCoverImage(); if (uploadedCoverImage == null) return ""N/A""; return uploadedCoverImage.getFileName(); ", int depth = 0; for (FileHandle ancestorHandle = fileHandle.getParentFileHandle(); ancestorHandle != null; ancestorHandle = ancestorHandle.getParentFileHandle()) depth++; return depth; 
1, return new ComputeMetadataBuilder(in.getType()).id(in.getId()).location(in.getLocation()).name(in.getName()) .uri(in.getUri()).userMetadata(in.getUserMetadata()).tags(in.getTags()); , return new ComputeMetadataBuilder(in.getType()).id(in.getId()).location(in.getLocation()).name(in.getName()) .uri(in.getUri()).userMetadata(in.getUserMetadata()).tags(in.getTags()); 
0," writeH(buf, locations.size()); for(SiegeLocation loc : locations) { writeD(buf, loc.getLocationId()); if(loc.isVulnerable() && loc.isShieldActive()) writeC(buf, 1); else writeC(buf,0); "," this.showPreviewEnabled = showPreviewEnabled; PropertiesComponent.getInstance(project).setValue(""ReviewToolWindowSettings.previewEnabled"", String.valueOf(this.showPreviewEnabled)); "
1," SQLiteDatabase mDb = mOpenHelper.getReadableDatabase(); String selection = null; if (MessageTable.TYPE_SENT == type) { selection = MessageTable.FIELD_IS_SENT + "" = "" + MessageTable.TYPE_SENT; "," SQLiteDatabase XXXXX = mOpenHelper.getReadableDatabase(); String XXXXX = null; if (MessageTable.TYPE_SENT == type) { XXXXX = MessageTable.FIELD_IS_SENT + "" = "" + MessageTable.TYPE_SENT; "
1, this.pluginKey = pluginKey; this.server = server; this.port = port; this.contextPath = contextPath; this.username = username; this.password = password; this.pluginFile = pluginFile; , this.pluginKey = pluginKey; this.server = server; this.port = port; this.contextPath = contextPath; this.username = username; this.password = password; this.pluginFile = pluginFile; 
1, ArrayList<ServiceHolder<?>> cache = new ArrayList<ServiceHolder<?>>( resourceCache ); resourceCache.clear(); for( ServiceHolder<?> serviceHolder : cache ) { registerResource( serviceHolder ); , ArrayList<ServiceHolder<?>> cache = new ArrayList<ServiceHolder<?>>( resourceCache ); resourceCache.clear(); for( ServiceHolder<?> serviceHolder : cache ) { registerResource( serviceHolder ); 
0," boolean completed = false; if( reading_short_header ) { short_header_buff.limit( SS, SHORT_HEADER_SIZE ); if( short_header_buff.position( SS ) == SHORT_HEADER_SIZE ) { completed = true; "," ParentEBuilder e = aParentE().name(""e""); this.flush(); e.parentE(e); this.commitAndReOpen(); e.get().setParentE(null); this.flush(); ParentE.queries.delete(e.get()); this.commitAndReOpen(); "
0," Object oldVALUE = vALUE; vALUE = newVALUE; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, PowrmartPackage.VALUEPAIR_TYPE__VALUE, oldVALUE, vALUE)); ", if (this == obj) return true; if (obj == null) return false; if (getClass() != obj.getClass()) return false; ChildId other = (ChildId) obj; if (id == null) { if (other.id != null) return false; 
0," String oldValue = value; value = newValue; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, Bpmn2Package.CATEGORY_VALUE__VALUE, oldValue, value)); "," ClassTypeInfo typeInfo = (ClassTypeInfo)domain.resolve(B.class); BeanInfo beanInfo = beanInfo(typeInfo); assertEquals(Collections.singleton(""a""), beanInfo.getProperties().keySet()); "
1, ContextCore.getContextManager().addListener(REFRESH_UPDATE_LISTENER); for (AbstractRelationProvider provider : ContextCorePlugin.getDefault().getRelationProviders()) { provider.setEnabled(true); , ContextCore.getContextManager().addListener(REFRESH_UPDATE_LISTENER); for (AbstractRelationProvider provider : ContextCorePlugin.getDefault().getRelationProviders()) { provider.setEnabled(true); 
1," Component c = super.prepareEditor(editor, row, column); if(c instanceof JCheckBox) { JCheckBox b = (JCheckBox)c; b.setBackground(getSelectionBackground()); b.setBorderPainted(true); "," Component XXXXX = super.prepareEditor(editor, row, XXXXXolumn); if(XXXXX instanXXXXXeof JCheXXXXXkBox) { JCheXXXXXkBox XXXXX = (JCheXXXXXkBox)XXXXX; XXXXX.setBaXXXXXkground(getSeleXXXXXtionBaXXXXXkground()); XXXXX.setBorderPainted(true); "
0, GradleVersion version = getGradleVersion(); boolean isMinimumVersionOrHigher = version.compareTo(PROJECT_OUTCOMES_MINIMUM_VERSION) >= 0; if (isMinimumVersionOrHigher) { return true; , super.paintComponent(g); if (value == null || !value.isValid()) return; int ymax=this.getSize().height - 1; int xloop = 10; int xowloop = 0; if(value.isOnewayLoopForwardPart) { xowloop = -3; 
1," String source = ""global:var global;\n"" + ""function Outer() {\n"" + "" captured:var captured;\n"" + "" notcaptured:var notCaptured;\n"" + "" function Inner() {\n"" + "" alert(captured);"" + "" "," String XXXXX = ""global:var global;\n"" + ""function Outer() {\n"" + "" captured:var captured;\n"" + "" notcaptured:var notCaptured;\n"" + "" function Inner() {\n"" + "" alert(captured);"" + "" "
0, if (lineSeparator == null) { final StringWriter sw = new StringWriter(2); try { final BufferedWriter bw = new BufferedWriter(sw); bw.newLine(); bw.flush(); lineSeparator = sw.toString(); ," URI resourceURI = EditUIUtil.getURI(getEditorInput()); Exception exception = null; Resource resource = null; try { resource = editingDomain.getResourceSet().getResource(resourceURI, true); "
1, ApplicationConfig applicationConfig = flowManager.getApplicationConfig(application); applicationConfig.setFlowPurgeScheduled(purgeScheduled); flowManager.mergeApplicationConfig(applicationConfig); , ApplicationConfig XXXXX = flowManager.getApplicationConfig(application); XXXXX.setFlowPurgeScheduled(purgeScheduled); flowManager.mergeApplicationConfig(XXXXX); 
1," session.zadd(""foo"", 1d, ""a""); session.zadd(""foo"", 10d, ""b""); session.zadd(""foo"", 0.1d, ""c""); session.zadd(""foo"", 2d, ""a""); long result = session.zcount(""foo"", 0.01d, 2.1d); assertEquals(2, result); "," session.zadd(""foo"", 1d, ""a""); session.zadd(""foo"", 10d, ""b""); session.zadd(""foo"", 0.1d, ""c""); session.zadd(""foo"", 2d, ""a""); long result = session.zcount(""foo"", 0.01d, 2.1d); assertEquals(2, result); "
0," ClientResource clientResource = makeClientResource(getBaseAddress() + ""/vehicle/"" + id); try { SourceResource resource = clientResource.wrap(SourceResource.class); resource.remove(); "," if (exception instanceof BackingStoreException) bse[0] = (BackingStoreException) exception; else bse[0] = new BackingStoreException(NLS.bind(PrefsMessages.childrenNames2, path), exception); "
1," this.androidValue = androidValue; IdAnnotationHelper annotationHelper = new IdAnnotationHelper(processingEnv, getTarget(), rClass); validatorHelper = new IdValidatorHelper(annotationHelper); "," this.androidValue = androidValue; IdAnnotationHelper XXXXX = new IdAnnotationHelper(processingEnv, getTarget(), rClass); validatorHelper = new IdValidatorHelper(XXXXX); "
0," boolean is_successful = false; try { JSONObject json = new JSONObject(response.getResponseString()); if (json.has(""access_token"") && json.has(""refresh_token"")) is_successful = true; "," super.failBroker(port); try { if (!_failoverCompleted.await(DEFAULT_FAILOVER_TIME, TimeUnit.MILLISECONDS)) { fail(""Failover did not occur in specified time:"" + DEFAULT_FAILOVER_TIME); "
1, ActivityEntry activityEntry = new ActivityEntryImpl(); String value; if ((value = activityResource.getProperty( SocialImplConstants.ACTIVITY_STREAM_ID)) != null) { activityEntry.setId(value); , ActivityEntry XXXXX = new ActivityEntryImpl(); String value; if ((value = activityResource.getProperty( SocialImplConstants.ACTIVITY_STREAM_ID)) != null) { XXXXX.setId(value); 
1," HasJsonWhich matcher = new HasJsonWhich(new HasJsonValue(""number"", new IsEqual<Integer>(1))); Description description = new StringDescription(); matcher.describeMismatchSafely(""{\""number\"":10"," HasJsonWhich XXXXX = new HasJsonWhich(new HasJsonValue(""number"", new IsEqual<Integer>(1))); Description XXXXX = new StringDescription(); XXXXX.describeMismatchSafely(""{\""number\"":10"
1, for (int groupI = 0; groupI < columnGroups.length; groupI++) { int[] group = columnGroups[groupI]; for (int i = 0; i < group.length; i++) if (group[i] >= index) group[i] += count; , for (XXXXXnt XXXXX = 0; XXXXX < columnGroups.length; XXXXX++) { XXXXXnt[] group = columnGroups[XXXXX]; for (XXXXXnt XXXXX = 0; XXXXX < group.length; XXXXX++) XXXXXf (group[XXXXX] >= XXXXXndex) group[XXXXX] += count; 
0," LogFile laterLogFile = new LogFile(""log20001212050505Lbuild.2.xml""); BuildDetail laterBuild = new BuildDetail(laterLogFile); assertEquals(PreviousResult.PASSED, laterBuild.getPreviousBuildResult()); "," DirectionsStatus o = DirectionsStatus.ZERO_RESULTS; assertEquals(""zero_results"", o.value()); assertEquals(DirectionsStatus.ZERO_RESULTS, DirectionsStatus.fromValue(""zero_results"")); finishTest(); "
1," ByteBuffer result = ByteBuffer.allocate(MAX_LENGTH); fillInPacket(encap, Inet4Address.ALL, Inet4Address.ANY, destUdp, srcUdp, result, DHCP_BOOTREQUEST, mBroadcast); result.flip(); return result; "," ByteBuffer XXXXX = ByteBuffer.allocate(MAX_LENGTH); fillInPacket(encap, Inet4Address.ALL, Inet4Address.ANY, destUdp, srcUdp, XXXXX, DHCP_BOOTREQUEST, mBroadcast); XXXXX.flip(); return XXXXX; "
0," MutableMap<String, String> map = UnifiedMap.newWithKeysValues( ""1"", ""2"", ""2"", ""1"", ""3"", ""3""); Assert.assertEquals(FastList.newListWith(""1""), MapIterate.select(map, Predicates.equal(""1""))); ", for (int j = 0; j < this.players.size(); ++j) { EntityPlayer entityplayer = (EntityPlayer) this.players.get(j); if (entityplayer.dimension == i) { entityplayer.netServerHandler.sendPacket(packet); 
1," return ProfileApplier.getProfile(umlPackage, ed instanceof TransactionalEditingDomain ? StereotypeNames.OPAEUM_STANDARD_PROFILE_PAPYRUS : StereotypeNames.OPAEUM_STANDARD_PROFILE_TOPCASED); "," return ProfileApplier.getProfile(umlPackage, ed instanceof TransactionalEditingDomain ? StereotypeNames.OPAEUM_STANDARD_PROFILE_PAPYRUS : StereotypeNames.OPAEUM_STANDARD_PROFILE_TOPCASED); "
1," ValueWithUnit val = new ValueWithUnit(""de.08315102.reistenhofweg""); ValueWithUnit zero = new ValueWithUnit(""0""); assertEquals(0, val.compareTo(zero)); assertFalse(val.isValid()); "," ValueWithUnit XXXXX = new ValueWithUnit(""de.08315102.reistenhofweg""); ValueWithUnit XXXXX = new ValueWithUnit(""0""); assertEquals(0, XXXXX.compareTo(XXXXX)); assertFalse(XXXXX.isValid()); "
1," super(code.getMethod(), null); SSIToSSA ssi2ssa = new SSIToSSA(code, qf); quads = ssi2ssa.rootQuad; setDerivation(ssi2ssa.derivation); setAllocationInformation(ssi2ssa.allocInfo); "," super(code.getMethod(), null); SSIToSSA ssi2ssa = new SSIToSSA(code, qf); quads = ssi2ssa.rootQuad; setDerivation(ssi2ssa.derivation); setAllocationInformation(ssi2ssa.allocInfo); "
1," Connection c = (Connection)session.getAttribute( ""irc"" ); log.log( Level.SEVERE , ""error when dealing with: "" + c , cause ); if ( c != null ) _context.connectionClosed( c ); session.close(true); "," ConneXXXXXtion XXXXX = (ConneXXXXXtion)session.getAttribute( ""irXXXXX"" ); log.log( Level.SEVERE , ""error when dealing with: "" + XXXXX , XXXXXause ); if ( XXXXX != null ) _XXXXXontext.XXXXXonneXXXXXtionClosed( XXXXX ); session.XXXXXlose(true); "
0," super(animationInterface, sourceLayerInterface, weaponProperties, scoreableInterface, relativeRelationship); this.total = total; this.weaponLayerCircularStaticPool = weaponLayerCircularStaticPool; ", Screen screen = event.getScreen(); if(screen instanceof AssistantScreen){ AssistantScreen ascreen = (AssistantScreen)screen; if(ascreen.getAssistant().isActive()){ ascreen.getAssistant().cancel(); 
1, DbAttributeTableModel model = (DbAttributeTableModel) table.getModel(); int ind = model.getObjectList().indexOf(e.getAttribute()); model.removeRow(e.getAttribute()); table.select(ind); , DbAttributeTableModel model = (DbAttributeTableModel) table.getModel(); int ind = model.getObjectList().indexOf(e.getAttribute()); model.removeRow(e.getAttribute()); table.select(ind); 
0," defaultTasks.push(task); if (LOG.isLoggable(Level.FINE)) { LOG.fine(""Task \"""" + taskId + ""\"" produced unnamed pipe stored at level "" + defaultTasks.size() + "" in the default pipe stack.""); ", Object[] array = getListeners(); for (int i = 0; i < array.length; i++) { final IPartListener l = (IPartListener) array[i]; fireEvent(new SafeRunnable() { public void run() { l.partActivated(part); 
0," if (AmenoidApp.DEVELOPER_MODE) { Toast.makeText(context, ""Adapter received Location update: "" + newLocation.getProvider() + "" acc: "" + newLocation.getAccuracy(), Toast.LENGTH_LONG).show(); "," dragPoints.add(new Point(e.getPoint())); nextMousePoint = e.getPoint(); drawLineSegment(curMousePoint, nextMousePoint); curMousePoint = nextMousePoint; updateMaxMin(nextMousePoint); "
0," Dialect dialect = new ImprovedHsqlDialect(); assertTrue(""boolean"".equals(dialect.getTypeName(Types.BIT))); assertTrue(""decimal($p,$s)"".equals(dialect.getTypeName(Types.NUMERIC))); ", org.eclipse.update.configurator.IPlatformConfiguration.ISiteEntry siteEntry = newConfig.findConfiguredSite(url); if (siteEntry == null) return null; return new SiteEntry(siteEntry); 
1," EditorColorsScheme scheme = EditorColorsManager.getInstance().getGlobalScheme(); FONT = new Font(scheme.getEditorFontName(), Font.PLAIN, scheme.getEditorFontSize()); setOpaque(true); "," EditorColorsScheme XXXXX = EditorColorsManager.getInstance().getGlobalScheme(); FONT = new Font(XXXXX.getEditorFontName(), Font.PLAIN, XXXXX.getEditorFontSize()); setOpaque(true); "
0, if (mrjVersion >= 4.0f) return MRJ4EventProxy.getInstance().isPreferencesEnabled(); else if (mrjVersion >= 3.0f) return MRJ23EventProxy.getInstance().isPreferencesEnabled(); return false; , Assert.isNotNull(button); Object gd= button.getLayoutData(); if (gd instanceof GridData) { ((GridData) gd).widthHint= getButtonWidthHint(button); ((GridData) gd).horizontalAlignment= GridData.FILL; 
0, switch (featureID) { case Wps10Package.SUPPORTED_UO_MS_TYPE__DEFAULT: setDefault((DefaultType1)null); return; case Wps10Package.SUPPORTED_UO_MS_TYPE__SUPPORTED: setSupported((UOMsType)null); return; , if (getBeanType().isAnnotationPresent(javax.interceptor.Interceptor.class) || getBeanType().isAnnotationPresent(javax.decorator.Decorator.class)) { _isInterceptorOrDecorator = true; return; 
1," if (isLiveOrCompiled()) if(!this.getCapability(ALLOW_STRING_READ)) throw new CapabilityNotSetException(J3dI18N.getString(""Text3D2"")); return ((Text3DRetained)this.retained).getString(); "," if (isLiveOrCompiled()) if(!this.getCapability(ALLOW_STRING_READ)) throw new CapabilityNotSetException(J3dI18N.getString(""Text3D2"")); return ((Text3DRetained)this.retained).getString(); "
0," LOG.info(""Rolling master-key for container-tokens, got key with id "" + masterKeyRecord.getKeyId()); if (super.currentMasterKey == null) { super.currentMasterKey = new MasterKeyData(masterKeyRecord); ", this.gMap = gMap; table = new CellTable<Place>(); TextColumn<Place> nameColumn = new TextColumn<Place>(){ @Override public String getValue(Place object) { return object.getName(); 
1," super.paint(graphics); if (_drawToolTip && _x >= _verticalFigureWidth && _y >= _horizontalFigureHeight) { graphics.fillRectangle(_x, _y, 100, 100); graphics.drawRectangle(_x, _y, 100, 100); "," super.paint(graphics); if (_drawToolTip && _x >= _verticalFigureWidth && _y >= _horizontalFigureHeight) { graphics.fillRectangle(_x, _y, 100, 100); graphics.drawRectangle(_x, _y, 100, 100); "
1," return new ITokenStoreFactory() { @Override public ITokenStore createTokenStore(String[] propertyColorNames) { return new TokenStore(getColorManager(), fPreferenceStore, propertyColorNames); "," return new ITokenStoreFactory() { @Override public ITokenStore createTokenStore(String[] propertyColorNames) { return new TokenStore(getColorManager(), fPreferenceStore, propertyColorNames); "
1," Log.d(TAG, ""on draw""); canvas.drawColor(bgColor); canvas.drawLine(0, 0, 0, getMeasuredHeight(), borderPaint); Log.d(TAG, ""on draw rect ""+getMeasuredWidth()+ "" "" +getMeasuredHeight()); "," Log.d(TAG, ""on draw""); canvas.drawColor(bgColor); canvas.drawLine(0, 0, 0, getMeasuredHeight(), borderPaint); Log.d(TAG, ""on draw rect ""+getMeasuredWidth()+ "" "" +getMeasuredHeight()); "
1," MapTask mapTask = new MapTask("""", TypeConverter.fromYarn(getID()), partition, splitInfo.getSplitIndex(), 1); mapTask.setUser(conf.get(MRJobConfig.USER_NAME)); mapTask.setConf(conf); return mapTask; "," MapTask XXXXX = new MapTask("""", TypeConverter.fromYarn(getID()), partition, splitInfo.getSplitIndex(), 1); XXXXX.setUser(conf.get(MRJobConfig.USER_NAME)); XXXXX.setConf(conf); return XXXXX; "
0," String msgText = getTextResolver(context).getExceptionMessage(e); FacesMessage msg = new FacesMessage(FacesMessage.SEVERITY_ERROR, msgText, msgText); context.addMessage(tag.getClientId(), msg); "," EType type = getStopType(stop); String direction = stop.getDirection(); if (direction == null) direction = """"; IconInfo info = getIconInfo(size, type, direction); return info.getIcon(isSelected); "
0," return new DefaultConnectionFactory(getOperationQueueLength(), getReadBufferSize(), getHashAlgorithm()) { @Override public long getOperationTimeout() { return getOperationTimeoutMillis(); "," boolean isMatch = false; if(eObject instanceof Class) { Class element = (Class)eObject; if(ElementUtil.getStereotypeApplication(element, ConstraintBlock.class) != null) { isMatch = true; "
1, Drawable returnDrawable = null; SoftReference<Drawable> softReference = imageCache.get(imageUrl); if (softReference != null && softReference.get() != null) { returnDrawable = softReference.get(); , Drawable XXXXX = null; SoftReference<Drawable> softReference = imageCache.get(imageUrl); if (softReference != null && softReference.get() != null) { XXXXX = softReference.get(); 
1, if (source.getFigure() instanceof WrappingLabel) return new TextCellEditorLocator((WrappingLabel) source.getFigure()); else { return new LabelCellEditorLocator((Label) source.getFigure()); , if (source.getFigure() instanceof WrappingLabel) return new TextCellEditorLocator((WrappingLabel) source.getFigure()); else { return new LabelCellEditorLocator((Label) source.getFigure()); 
1, bundleContext.addBundleListener(new BundleListener() { @Override public void bundleChanged(BundleEvent event) { if (event.getType() == BundleEvent.STARTED) { try { tryInstallingFailedArtifacts(); , bundleContext.addBundleListener(new BundleListener() { @Override public void bundleChanged(BundleEvent event) { if (event.getType() == BundleEvent.STARTED) { try { tryInstallingFailedArtifacts(); 
1, WorkItemWrapper workItemWrapper = (WorkItemWrapper) super.getNewObject(); workItemWrapper.setName(label); workItemWrapper.setWorkDefinition(workDefinition); return workItemWrapper; , WorkItemWrapper XXXXX = (WorkItemWrapper) super.getNewObject(); XXXXX.setName(label); XXXXX.setWorkDefinition(workDefinition); return XXXXX; 
1, switch (featureID) { case WfsPackage.LOCK_TYPE__FILTER: return getFilter(); case WfsPackage.LOCK_TYPE__HANDLE: return getHandle(); case WfsPackage.LOCK_TYPE__TYPE_NAME: return getTypeName(); , switch (featureID) { case WfsPackage.LOCK_TYPE__FILTER: return getFilter(); case WfsPackage.LOCK_TYPE__HANDLE: return getHandle(); case WfsPackage.LOCK_TYPE__TYPE_NAME: return getTypeName(); 
1," final Object followed = SessionManager.getNamedQuery(""member.getFollowedActor.byActor"") .setEntity(""member"", this) .setEntity(""actor"", actor) .uniqueResult(); return followed != null; "," final Object XXXXX = SessionManager.getNamedQuery(""member.getFollowedActor.byActor"") .setEntity(""member"", this) .setEntity(""actor"", actor) .uniqueResult(); return XXXXX != null; "
0," final int goalSb = GOAL_SB_TABLE[Calculation.getSampleRateIndex(sbr.sampleRate)]; sbr.patches = 0; int k; if(goalSb<(sbr.kx+sbr.M)) { int i; for(i = 0, k = 0; sbr.mft[i]<goalSb; i++) { k = i+1; ", skipIfNotDomainAdmin(); Set<Domain> domains = domainAdminClient.getDomainClient().listDomains(); Domain root = findRootOfVisibleTree(domains); if (domains.size() > 1) { assertTrue(root.hasChild()); 
0, ISession cloneMachineSession = machineController.ensureMachineHasPowerDown(instanceName); SessionState state = cloneMachineSession.getState(); assertTrue(state.equals(SessionState.Unlocked)); ," EntityCacheUtil.putResult(MicroblogsEntryModelImpl.ENTITY_CACHE_ENABLED, MicroblogsEntryImpl.class, microblogsEntry.getPrimaryKey(), microblogsEntry); microblogsEntry.resetOriginalValues(); "
0," ProjectDescription projectdescription = createComplexProject(this._sourcepathxml, KIND_MULTIPLESOURCEFOLDERSPRIMARY); execute(projectdescription.getPrimaryProjectname(), ""get-source-path-relative""); ", int index = list.getSelectedIndex(); if (e.getWheelRotation() >= 0) { if (index < list.getModel().getSize() - 1) { list.setSelectedIndex(index + 1); list.ensureIndexIsVisible(index + 1); 
1, return (state==DebugState.BREAKPOINT) || (state==DebugState.STOPPED_INTO) || (state==DebugState.STOPPED_OVER) || (state==DebugState.STOPPED_RETURN) || (state==DebugState.SUSPENDED); , return (state==DebugState.BREAKPOINT) || (state==DebugState.STOPPED_INTO) || (state==DebugState.STOPPED_OVER) || (state==DebugState.STOPPED_RETURN) || (state==DebugState.SUSPENDED); 
1, int sum = 0; int top = name.length(); int lshift = 20; for (int idx = 0; idx < top; ++idx) { int c = name.charAt(idx) & 0xffff; if (c == '.' && lshift > 0) lshift -= 4; else sum += c << lshift; , int XXXXX = 0; int XXXXX = name.length(); int XXXXX = 20; for (int XXXXX = 0; XXXXX < XXXXX; ++XXXXX) { int XXXXX = name.XXXXXharAt(XXXXX) & 0xffff; if (XXXXX == '.' && XXXXX > 0) XXXXX -= 4; else XXXXX += XXXXX << XXXXX; 
0," if (this.columnNames.contains(name.toUpperCase())) return; int position = this.getColumnPosition(after); position++; if (position == this.columnNames.size()) { this.appendColumn(name, type); return; ", IASTName name = createName(stream.getRightIToken()); ICASTFieldDesignator designator = nodeFactory.newFieldDesignator(name); setOffsetAndLength(designator); astStack.push(designator); 
0," File file = null; while (file == null) { file = showFileSaveDialogImpl(title, dirsOnly, fileFilter, defaultExtension, fileName, lastDirPropertyKey); if (file == null) { return null; ", if (initiator == null) { final String initiatorURIString = ServiceRegistry.getRegistry().getServiceURI(ATInteropConstants.SERVICE_INITIATOR); initiator = builder.newEndpoint(initiatorURIString); 
1," eventBus.fireEvent(new CreateSubstitutionEvent()); { reset(view); doReturn("""").when(view).getRuleType(); presenter.onRuleTypesSelection(); verify(view).setTimeIntervalEnabled(false); "," eventBus.fireEvent(new CreateSubstitutionEvent()); { reset(view); doReturn("""").when(view).getRuleType(); presenter.onRuleTypesSelection(); verify(view).setTimeIntervalEnabled(false); "
0," return this.getClass().getName() + "" sortFieldName="" + Arrays.toString(sortCriteriaExpressions) + "" isDescending="" + Arrays.toString(isDescendingValues) + "" sortWindowSize="" + sortWindowSize; "," mulFunc.compute(z, z, zSquared); diffFunc.compute(zSquared, ONE, miniSum); powFunc.compute(miniSum, ONE_HALF, root); addFunc.compute(z, root, sum); logFunc.compute(sum, output); return output; "
0," double result = 0; for (int row = 1; row <= board.getSize(); row++) { for (int col = 1; col <= board.getSize(); col++) { result += board.getValueAt(row, col) * getValue(row, col); ", final GuiDesignerConfiguration configuration = GuiDesignerConfiguration.getInstance(myProject); if (configuration.INSTRUMENT_CLASSES) { myGeneralUI.myRbInstrumentClasses.setSelected(true); 
0, if (isFirst) { RestaurantManager.getSingletonInstance().recoveryScanCompleted(TX_TYPE_AT); TheatreManager.getSingletonInstance().recoveryScanCompleted(TX_TYPE_AT); isFirst = false; ," return new NewWebTaskWizard(taskRepository, WebRepositoryConnector.evaluateParams( taskRepository.getProperty(WebRepositoryConnector.PROPERTY_TASK_CREATION_URL), taskRepository), taskSelection); "
1," return processSuperOrThis(processor, (PsiClass)inheritor.getNavigationElement(), constructor, constructorCanBeCalledImplicitly, searchScope, isStrictSignatureSearch, PsiKeyword.SUPER); "," return processSuperOrThis(processor, (PsiClass)inheritor.getNavigationElement(), constructor, constructorCanBeCalledImplicitly, searchScope, isStrictSignatureSearch, PsiKeyword.SUPER); "
0," for (Iterator i = children.iterator(); i.hasNext();) { Styleable child = (Styleable) i.next(); if (!isProperTableNesting(parentDisplay, child.getStyle().getIdent(CSSName.DISPLAY))) { return false; "," if (logTracker == null) { if (bundleContext == null) return null; logTracker = new ServiceTracker<LogService, LogService>(bundleContext, LogService.class, null); logTracker.open(); "
0," File metaDataFile = new File(this.workDir, archivePath + "".atom""); SrampArchiveEntry rval = null; if (metaDataFile.exists()) { rval = new SrampArchiveEntry(archivePath, metaDataFile); "," switch (featureID) { case FXGraphPackage.DEFINE__ELEMENT: return basicSetElement(null, msgs); case FXGraphPackage.DEFINE__INCLUDE_ELEMENT: return basicSetIncludeElement(null, msgs); "
0," WorkflowDefinition wf = this.form.getDefaultWorkflow(); if (this.workflow == null && wf != null) { this.workflow = new WorkflowWrapper(wf.name, wf.getTitle(), wf.getDescription()); "," groupId = event.getResponse().getId(); groupShortName = event.getResponse().getShortName(); EventBus.getInstance().removeObserver(GotGroupModelViewInformationResponseEvent.class, this); "
1," return findUnique(""from OnmsMonitoredService as svc "" + ""where svc.ipInterface.node.id = ? and svc.ipInterface.isSnmpPrimary= ? and svc.serviceType.name = ?"", nodeId, PrimaryType.PRIMARY, svcName); "," return findUnique(""from OnmsMonitoredService as svc "" + ""where svc.ipInterface.node.id = ? and svc.ipInterface.isSnmpPrimary= ? and svc.serviceType.name = ?"", nodeId, PrimaryType.PRIMARY, svcName); "
0, this.code = builder.code; this.name = builder.name; this.description = builder.description; this.url = builder.url; this.locationType = builder.locationType; this.direction = builder.direction; ," InputLine descriptor = new DialogDescriptor.InputLine( ""Folder Name:"", ""Add Folder""); descriptor.setOptions(new Object[] { DialogDescriptor.OK_OPTION, DialogDescriptor.CANCEL_OPTION "
0," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," assertEquals(0, Long.signum(0)); assertEquals(1, Long.signum(1)); assertEquals(-1, Long.signum(-1)); assertEquals(1, Long.signum(Long.MAX_VALUE)); assertEquals(-1, Long.signum(Long.MIN_VALUE)); "
1," assertEquals(d_studies, d_model.getSelectedStudiesModel()); for (int i = 0; i < d_studies.size(); ++i) { if (i != 1) { d_model.getSelectedStudyBooleanModel(d_studies.get(i)).setValue(false); "," assertEquals(d_studXXXXXes, d_model.getSelectedStudXXXXXesModel()); for (XXXXXnt XXXXX = 0; XXXXX < d_studXXXXXes.sXXXXXze(); ++XXXXX) { XXXXXf (XXXXX != 1) { d_model.getSelectedStudyBooleanModel(d_studXXXXXes.get(XXXXX)).setValue(false); "
0," textWizard = new TranspTextWizard(); dialog = new WizardDialog(this.getShell(), textWizard); if (textPageConfiguration != null) { textWizard.setTextPageConfig(textPageConfiguration); ", ObjyObject objyRevision = null; int objectVersion = getVersion(); long objectBranchId = getBranchId(); if (branchId == objectBranchId && Math.abs(objectVersion) == version) { return this; 
0," for (int row = 1; row <= boardSize; row++) { for (int col = 1; col <= boardSize; col++) { weightUpdates[(row - 1) * boardSize + (col - 1)] += (d * previous.getValueAt(row, col)); ", final int capacity = computeCapacity(expectedSize); keys = new int[capacity]; values = new double[capacity]; states = new byte[capacity]; this.missingEntries = missingEntries; mask = capacity - 1; 
1, ContentImportManager.getContentImportManager().unregisterContentImporter(importer); ContentExportManager.INSTANCE.unregisterContentExporter(exporter); importer = null; exporter = null; , ContentImportManager.getContentImportManager().unregisterContentImporter(importer); ContentExportManager.INSTANCE.unregisterContentExporter(exporter); importer = null; exporter = null; 
0, int result; result = (wheelZooming ? 1 : 0); result = 29 * result + (smartZooming ? 1 : 0); result = 29 * result + prefferedWidth; result = 29 * result + prefferedHeight; return result; , StringBuilder nodeId = new StringBuilder(node.getId()); if (nodeId.length() == 36) { for (int index = 35; index >= 0; --index) { int srcChar = nodeId.charAt(index); if (srcChar == '-') { continue; 
1," StringBuilder sb = new StringBuilder(); sb.append(""[""); for (int i = 0; i < total; i++) { sb.append(i); sb.append(""->""); sb.append(object(i)); if (i < total - 1) { sb.append("", ""); "," StrXXXXXngBuXXXXXlder XXXXX = new StrXXXXXngBuXXXXXlder(); XXXXX.append(""[""); for (XXXXXnt XXXXX = 0; XXXXX < total; XXXXX++) { XXXXX.append(XXXXX); XXXXX.append(""->""); XXXXX.append(object(XXXXX)); XXXXXf (XXXXX < total - 1) { XXXXX.append("", ""); "
0, int uc = Character.toUpperCase( c ); int lc = Character.toLowerCase( c ); if (regularKeyCodesMap.containsKey( c )) { if(regularKeyCodesMap.containsKey(uc)) { return regularKeyCodesMap.get( uc ); ," tag = HTML.Tag.APPLET; assertEquals(""applet"", tag.toString()); assertFalse(""breaks Flow"", tag.breaksFlow()); assertFalse(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); "
0, try { Display.getDefault().syncExec(new Runnable() { public void run() { PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage().getActiveEditor().doSave(new NullProgressMonitor()); ," logger.info(""endCommand""); if (currentCommand != null && currentCommand.size() > 0) { logger.debug(""ended""); int max = getMaxUndos(); if (max == 0) { undos.clear(); undos.add(currentCommand); "
1," Cookies.setCookie(""myCookie"", ""1701""); call(CookieParamTestService.class, new AssertionCallback<String>(""@POST with @CookieParam failed"", ""1701"")).postWithStringCookieParam(null); "," Cookies.setCookie(""myCookie"", ""1701""); call(CookieParamTestService.class, new AssertionCallback<String>(""@POST with @CookieParam failed"", ""1701"")).postWithStringCookieParam(null); "
1," GL2 gl = drawable.getGL().getGL2(); gl.glViewport(0, 0, w, h); gl.glMatrixMode(GL2.GL_PROJECTION); gl.glLoadIdentity(); gl.glOrtho(0, w, 0, h, -1.0, 1.0); gl.glMatrixMode(GL2.GL_MODELVIEW); "," GL2 gl = drawable.getGL().getGL2(); gl.glViewport(0, 0, w, h); gl.glMatrixMode(GL2.GL_PROJECTION); gl.glLoadIdentity(); gl.glOrtho(0, w, 0, h, -1.0, 1.0); gl.glMatrixMode(GL2.GL_MODELVIEW); "
1," mContext.enforceCallingOrSelfPermission(BLUETOOTH_PERM, ""Need BLUETOOTH permission""); if (!isEnabledInternal()) return false; return setAdapterPropertyBooleanNative(key, value ? 1 : 0); "," mContext.enforceCallingOrSelfPermission(BLUETOOTH_PERM, ""Need BLUETOOTH permission""); if (!isEnabledInternal()) return false; return setAdapterPropertyBooleanNative(key, value ? 1 : 0); "
0," String oldClass = class_; class_ = newClass; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_DESC_ELEMENT__CLASS, oldClass, class_)); "," if (effectiveId == null) return null; final int prefixIndex = effectiveId.lastIndexOf(XFormsConstants.COMPONENT_SEPARATOR); if (prefixIndex != -1) { return effectiveId.substring(0, prefixIndex + 1); "
0, CodeGemEditor codeEditor = (CodeGemEditor)evt.getWindow(); DisplayedGem codeGem = getDisplayedGem(codeEditor.getCodeGem()); getTableTopPanel().repaint(getSelectedBounds(codeGem)); , Configuration config = SupportConfigFactory.getConfiguration(); epService = EPServiceProviderManager.getDefaultProvider(config); epService.initialize(); listener = new SupportUpdateListener(); 
1," super(ANNOTATION_DEFINITION_ID, REGULAR_EXPRESSION, ""The description of the citation resource."", ""Use this annotation to link statements to a description of"" + ""the citation.""); setValue("".*""); "," super(ANNOTATION_DEFINITION_ID, REGULAR_EXPRESSION, ""The description of the citation resource."", ""Use this annotation to link statements to a description of"" + ""the citation.""); setValue("".*""); "
1," final String s = StatementBuilder.create().declareVariable(""t"", Throwable.class).throw_(""t"").toJavaString(); assertEquals(""failed to generate throw statement using a variable"", ""throw t"", s); "," final String XXXXX = StatementBuilder.create().declareVariable(""t"", Throwable.claXXXXXXXXXX).throw_(""t"").toJavaString(); aXXXXXXXXXXertEqualXXXXX(""failed to generate throw XXXXXtatement uXXXXXing a variable"", ""throw t"", XXXXX); "
0, String credentialsDBPhysicalName = TestConfiguration.generateUniqueDatabaseName(); Test result = this; if ( _disableSecurityManager ) { result = SecurityManagerSetup.noSecurityManager( result ); , Attribute attribute = new Attribute(); for (int a = 0; a < attributes.size(); a++) { attribute = attributes.get(a); if (attribute.getName().equals(attributeName)) { attribute = attributes.remove(a); 
0," if (PREF_KEYBOARD_LAYOUT.equals(key)) { final int themeIndex = getKeyboardThemeIndex(mInputMethodService, sharedPreferences); postSetInputView(createInputView(themeIndex, false)); "," if (currentTableComponent != null) { if (show) { if (getComponentIndex(currentTableComponent) == -1) { addComponent(currentTableComponent); setExpandRatio(currentTableComponent, 1.0F); "
1, GeneralSettings settings = GeneralSettings.getInstance(); myBrowserPathField.setText(settings.getBrowserPath()); if (settings.isUseDefaultBrowser()) { myUseDefaultBrowser.setSelected(true); , GeneralSettings XXXXX = GeneralSettings.getInstance(); myBrowserPathField.setText(XXXXX.getBrowserPath()); if (XXXXX.isUseDefaultBrowser()) { myUseDefaultBrowser.setSelected(true); 
0," final ShadowThread td = se.getThread(); final ShadowThread forked = se.getNewThread(); ts_set_cv_hb(forked, new CV(ts_get_cv_hb(td))); this.tick(forked); this.tick(td); super.preStart(se); ", ObaAgenciesWithCoverageRequest.Builder builder = new ObaAgenciesWithCoverageRequest.Builder(getContext()); ObaAgenciesWithCoverageRequest request = builder.build(); assertNotNull(request); 
1, if (propertyValue == null) return Collections.EMPTY_LIST; if (propertyDescriptor.getPropertyType().isArray()) return Arrays.asList((Object[]) propertyValue); return (List) propertyValue; , if (propertyValue == null) return Collections.EMPTY_LIST; if (propertyDescriptor.getPropertyType().isArray()) return Arrays.asList((Object[]) propertyValue); return (List) propertyValue; 
1, List bundles = getSelectedBundles(); for (Iterator it = bundles.iterator(); it.hasNext();) { Bundle bundle = (Bundle) it.next(); if (bundle.getState() != Bundle.ACTIVE) return false; , List XXXXX = getSelectedBundles(); for (Iterator XXXXX = XXXXX.XXXXXerator(); XXXXX.hasNext();) { Bundle XXXXX = (Bundle) XXXXX.next(); if (XXXXX.getState() != Bundle.ACTIVE) return false; 
0," String oldName = name; name = newName; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, AcceleowizardmodelPackage.ACCELEO_MODULE_ELEMENT__NAME, oldName, name)); "," WorkflowParameter oldKey = key; key = newKey; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, RuntimePackage.WORKFLOW_PARAMETER_MAP__KEY, oldKey, key)); "
1, deregisterAsObserver(); this.tuple = anAttrTuple; registerAsObserver(); this.handlerSelectionEditor = HandlerSelectionEditor .getHandlerSelectionEditor(getAttrManager()); attributeChanged(null); , deregisterAsObserver(); this.tuple = anAttrTuple; registerAsObserver(); this.handlerSelectionEditor = HandlerSelectionEditor .getHandlerSelectionEditor(getAttrManager()); attributeChanged(null); 
0, Color color = Color.gray; for (int i = 0; i < textfield.length; i++) { textfield[i].setForeground(color); textfield[i].setText(DEFAULT[i]); textfield[i].setToolTipText(DEFAULT[i]); , if (rep_hdr.service_context != null) { for (int i=0; i<rep_hdr.service_context.length; i++) { if (rep_hdr.service_context[i].context_id == id) { return rep_hdr.service_context[i]; 
0," EntityBuilder.addValue(cluster, ""map_sheet"", """"); EntityBuilder.addValue(cluster, ""map_sheet"", """"); ValidationResultFlag result = cluster.validateMinCount(""map_sheet""); assertTrue(result.isOk()); "," DoubleMatrix M = A.dup(); assertEquals(4, M.rows); assertEquals(3, M.columns); M.resize(4, 5); assertEquals(4, M.rows); assertEquals(5, M.columns); assertEquals(0.0, M.get(3, 4), eps); "
0," advance(); StringBuilder sb= new StringBuilder(Integer.toString(currentPosition[0])); for (int i=1; i<currentPosition.length; i++) { sb.append(','); sb.append(currentPosition[i]); "," ZameApplication.nonProcessedPaymentResult = 0; showResult(getString( latestMetaInfo.equals(""paypal-full"") ? R.string.ifree_paypal_cancelled : R.string.ifree_payment_cancelled )); "
1," MetadataStore store = getMetadataStore(); int realSeries = getSeries(); for (int i=0; i<getSeriesCount(); i++) { setSeries(i); store.setPixelsBinDataBigEndian(new Boolean(!isLittleEndian()), i, 0); "," MetadataStore XXXXX = getMetadataStore(); int XXXXX = getSeries(); for (int i=0; i<getSeriesCount(); i++) { setSeries(i); XXXXX.setPixelsBinDataBigEndian(new Boolean(!isLittleEndian()), i, 0); "
0, if (this == obj) return true; if (obj == null) return false; if (getClass() != obj.getClass()) return false; DrugPojo other = (DrugPojo) obj; if (id == null) { if (other.id != null) return false; ," logger.info(""Delete tags based on question: "" + question.getLabel()); List<Node> removeTags = nodeDao.findTagsByQuestion(question); deleteTags(removeTags); logger.info(""Deletion completed.""); "
0, IStructuredSelection iss = (IStructuredSelection) treeViewer.getSelection(); Object element = iss.getFirstElement(); if (element instanceof IResult) { manager.add(addContactAction); , if (isPaintBackgroundsAndBorders() && getStyle().isVisible()) { Rectangle bounds; if (c.isPrint() && getTable().getStyle().isPaginateTable()) { bounds = getContentLimitedBorderEdge(c); 
0, final long end = System.currentTimeMillis() + delay ; synchronized(this) { while(state == origState) { final long remaining = end - System.currentTimeMillis() ; if (remaining <= 0) { break ; ," int pos=getNearestParticipantIndex(x, diagram); Role ret=null; java.util.List roles=diagram.getScenario().getRole(); if (roles.size() > 0) { if (pos < 0) { ret = (Role)roles.get(0); "
1," _freeze = SkillTable.getInstance().getInfo(6034, 1); _transformationRed = SkillTable.getInstance().getInfo(6035, 1); _transformationBlue = SkillTable.getInstance().getInfo(6036, 1); "," _freeze = SkillTable.getInstance().getInfo(6034, 1); _transformationRed = SkillTable.getInstance().getInfo(6035, 1); _transformationBlue = SkillTable.getInstance().getInfo(6036, 1); "
0," int oldReplIdx = replIdx; replIdx = newReplIdx; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, ETriceGenPackage.ACTOR_INSTANCE__REPL_IDX, oldReplIdx, replIdx)); ", String lower = name.toLowerCase(); int start = 0; for (String prefix : getPrefixes()) { if (lower.startsWith(prefix)) { if (name.length() > prefix.length()) { start = prefix.length(); 
0," File filename = new File(Config.CONFIG_DIR + ""/tagengine.ser""); ObjectOutputStream out = null; try { out = new ObjectOutputStream(new FileOutputStream(filename)); out.writeObject(this); "," long oldIndexUsage = profiler.getCounter(""Query.indexUsage""); long oldCompositeIndexUsage = profiler.getCounter(""Query.compositeIndexUsage""); if (oldIndexUsage == -1) { oldIndexUsage = 0; "
1, int kc=ev.getKeyCode(); if(kc==key_left) keyHeld[1] = false; else if(kc==key_right) keyHeld[2] = false; else if(kc==key_up) keyHeld[0] = false; else if(kc==key_down) keyHeld[3] = false; , int kc=ev.getKeyCode(); if(kc==key_left) keyHeld[1] = false; else if(kc==key_right) keyHeld[2] = false; else if(kc==key_up) keyHeld[0] = false; else if(kc==key_down) keyHeld[3] = false; 
0," final JSONParser cp = new CourseSubjectParser(false,true) { @Override public void saveData() { if (items.size()>0) { CourseItem ci = (CourseItem) items.get(0); details_cache.put(masterId, ci); "," if(downloadState == BasicDownloadState.NOT_STARTED) { boolean oldSpam = isSpam(); spamCache = null; boolean newSpam = isSpam(); firePropertyChange(""spam-core"", oldSpam, newSpam); "
1, reloadConfig(); itemMap.reload(); signs.reload(); listener.reload(); alerts.reload(); messages.reload(); tender.reload(); regions.reload(); blocks.reload(); inventories.reload(); , reloadConfig(); itemMap.reload(); signs.reload(); listener.reload(); alerts.reload(); messages.reload(); tender.reload(); regions.reload(); blocks.reload(); inventories.reload(); 
1," JID myJID = saros.getMyJID(); for (User participant : sarosSession.getParticipants()) { if (participant.getJID().equals(myJID)) continue; sendMessageToUser(participant.getJID(), extension, true); "," JID myJID = saros.getMyJID(); for (User participant : sarosSession.getParticipants()) { if (participant.getJID().equals(myJID)) continue; sendMessageToUser(participant.getJID(), extension, true); "
0," VCloudDirectorAdminApi api = requestsSendResponses(loginRequest, sessionResponse, reset, resetResponse); assertEquals(api.getNetworkApi().reset(networkAdminHref), resetNetworkTask()); "," FormWorkEffortQuery fweq = new FormWorkEffortQuery(); model.addAttribute(""formworkeffortquery"", fweq); addDateTimeFormatPatterns(model); return ""workeffortquery/findWorkEfforts""; "
0," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; ", if (model.isReady()) { int y = ToolBox.getInt(jTextFieldOffsetY.getText()); if ( y < 0 || y > model.getSubPic().getHeight() /3 ) { jTextFieldOffsetY.setBackground(ERROR_BACKGROUND); 
0," addMouseListener( new MouseAdapter() { public void mouseClicked( MouseEvent anE ) { JOptionPane.showMessageDialog(null, ""Close the editor first!"", """", JOptionPane.INFORMATION_MESSAGE); "," HTML html = new HTML(""<iframe src=\""http: ""&service=bit.ly\"" scrolling=\""no\"" frameborder=\""0\"" width=\""50\"" height=\""61\"" ></iframe>""); html.setStyleName(css.twitterWidget()); initWidget(html); "
1, if (value instanceof NonSerializableObjectHandler) { NonSerializableObjectHandler nonSerializableObjectHandler = (NonSerializableObjectHandler)value; value = nonSerializableObjectHandler.getValue(); , if (value instanceof NonSerializableObjectHandler) { NonSerializableObjectHandler XXXXX = (NonSerializableObjectHandler)value; value = XXXXX.getValue(); 
0," Assert.assertFalse(stateManager.isDirty(persistent)); stateManager.setDirty(persistent, 0); stateManager.clearDirty(persistent); Assert.assertFalse(this.stateManager.isDirty(persistent)); "," final String name = super.getPresentableName(); return name + (!StringUtil.isEmpty(getRepoAuthor()) ? ""/"" + getRepoAuthor() : """") + (!StringUtil.isEmpty(getRepoName()) ? ""/"" + getRepoName() : """"); "
1, if (super.shouldCreateStub(node)) { PsiElement psi = node.getPsi(); if (psi instanceof JetNamedFunction) { JetNamedFunction function = (JetNamedFunction) psi; return function.getName() != null; , if (super.shouldCreateStub(node)) { PsiElement XXXXX = node.getPsi(); if (XXXXX instanceof JetNamedFunction) { JetNamedFunction XXXXX = (JetNamedFunction) XXXXX; return XXXXX.getName() != null; 
0, UserSession session = getUserSession(); if (session == null) return null; return KimApiServiceLocator.getIdentityService().getPrincipalByPrincipalName(session.getLoggedInUserPrincipalName()); ," if (configFile == null) { configFile = new File(getDataFolder(), ""config.yml""); if(!configFile.exists()){ configFile.getParentFile().mkdirs(); copy(getResource(""config.yml""), configFile); "
0, assertTrue(BaseNCodec.isWhiteSpace((byte) ' ')); assertTrue(BaseNCodec.isWhiteSpace((byte) '\n')); assertTrue(BaseNCodec.isWhiteSpace((byte) '\r')); assertTrue(BaseNCodec.isWhiteSpace((byte) '\t')); , this.scheduler.schedule ( new Runnable () { @Override public void run () { if ( EventHistoryView.this.queryRef.get () != null ) { EventHistoryView.this.queryRef.get ().loadMore ( LOAD_NO_OF_ITEMS ); 
1," try { return EntityFinder.findAllByColumn( com.idega.data.GenericEntity.getStaticInstance(ICObject.class), ICObjectBMPBean.getObjectTypeColumnName(), ICObjectBMPBean.COMPONENT_TYPE_APPLICATION); "," try { return EntityFinder.findAllByColumn( com.idega.data.GenericEntity.getStaticInstance(ICObject.class), ICObjectBMPBean.getObjectTypeColumnName(), ICObjectBMPBean.COMPONENT_TYPE_APPLICATION); "
0, final MondrianOlap4jConnection olap4jConnection = olap4jCube.olap4jSchema.olap4jCatalog.olap4jDatabaseMetaData .olap4jConnection; return olap4jConnection.toOlap4j(namedSet.getExp()); , if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; ArtistPk artistPk = (ArtistPk) o; return id.equals(artistPk.id) && name.equals(artistPk.name); 
0," formatter.setSpacesBeforeAndAfterAssignments(false); assertEqualSource(""a=~/5/"", ""a =~ /5/""); formatter.setSpacesBeforeAndAfterAssignments(true); assertEqualSource(""a =~ /5/"", ""a =~/5/""); "," if(cardID_Edit.getText().isEmpty() || letter_Edit.getText().isEmpty() ) return ; LetterObject lo = new LetterObject(letter_Edit.getText(), cardID_Edit.getText() ); H2Database.insertLetter(lo); "
1," table_ports1.removeAll(); table_ports2.removeAll(); Switch sw = Gui.getSwitches().get(index); if (sw != null) { for (Port p : sw.getPorts()) { String[] portData = { p.getPortNumber(), p.getStatus() "," table_ports1.removeAll(); table_ports2.removeAll(); Switch XXXXX = Gui.getSwitches().get(index); if (XXXXX != null) { for (Port p : XXXXX.getPorts()) { String[] portData = { p.getPortNumber(), p.getStatus() "
0," paramNameTextBox.setValue(""""); paramValueTextBox.setValue(""""); importDialogModel.setSelectedAnalysisParameter(-1); analysisParametersTree.clearSelection(); analysisParametersDialog.hide(); "," rect = rectStatic.getCopy(); Path a = new Path(aStartStatic.getCopy(), aEndStatic.getCopy()); routing.addObstacle(rect); routing.addPath(a); routing.solve(); pathA = a.getPoints(); "
1," XMPPError error = errorMessage.getError(); if (error != null) { String body = errorMessage.getBody(); if (body != null) { return ""Error sending message: '"" + body + ""' : "" + error.toString(); "," XMPPError XXXXX = XXXXXMessage.getError(); if (XXXXX != null) { String XXXXX = XXXXXMessage.getBody(); if (XXXXX != null) { return ""Error sending message: '"" + XXXXX + ""' : "" + XXXXX.toString(); "
0," Target target = ruleMediatorConfig.getTarget(); if (request.getParameter(""mediator.rule.target.value"") != null) { target.setValue(request.getParameter(""mediator.rule.target.value"")); "," initiateWebApplication(Resource.class); assertEquals(""putMe"", resource(""/?a=a&b=b"").put(String.class, ""putMe"")); assertEquals(""postMe"", resource(""/?a=a&b=b"").post(String.class, ""postMe"")); "
1," BlockingTaskOperationResponseHandler responseHandler = new BlockingTaskOperationResponseHandler(); taskService.release(taskId, userId, responseHandler); try { responseHandler.waitTillDone(timeout); "," BlockingTaskOperationResponseHandler XXXXX = new BlockingTaskOperationResponseHandler(); taskService.release(taskId, userId, XXXXX); try { XXXXX.waitTillDone(timeout); "
0," VCloudDirectorApi api = requestsSendResponses(loginRequest, sessionResponse, getItemMetadata, getItemMetadataResponse); assertEquals(api.getCatalogApi().getMetadataApi(itemHref).get(), expected); "," Object nodeObj = this.getParentNode(); if(nodeObj instanceof HTMLElementImpl) { HTMLElementImpl parentElement = (HTMLElementImpl) nodeObj; if(""*"".equals(elementTL)) { return parentElement; "
1," Particle bestEntity = Topologies.getBestEntity(topology, new SocialBestFitnessComparator<Particle>()); return new OptimisationSolution(bestEntity.getBestPosition(), bestEntity.getBestFitness()); "," Particle XXXXX = Topologies.getBestEntity(topology, new SocialBestFitnessComparator<Particle>()); return new OptimisationSolution(XXXXX.getBestPosition(), XXXXX.getBestFitness()); "
1, this.files = files; siteName = updateSite; site = files.getUpdateSite(updateSite); compressed = Util.XML_COMPRESSED; uploader = uploaderService.getUploader(site.getUploadProtocol()); , this.files = files; siteName = updateSite; site = files.getUpdateSite(updateSite); compressed = Util.XML_COMPRESSED; uploader = uploaderService.getUploader(site.getUploadProtocol()); 
1," EntityManager em = currentEntityManager(); List l = em.createQuery(""Select object(o) from RuntimeTest1 o"") .getResultList(); assertNotNull(l); assertEquals(15, l.size()); endEm(em); "," EntityManager XXXXX = currentEntityManager(); List XXXXX = XXXXX.createQuery(""SeXXXXXect object(o) from RuntimeTest1 o"") .getResuXXXXXtList(); assertNotNuXXXXXXXXXX(XXXXX); assertEquaXXXXXs(15, XXXXX.size()); endEm(XXXXX); "
0, server = (IServer) ((StructuredSelection) selection).getFirstElement(); boolean enable = server != null && server.getServerType().getId().startsWith(serverPrefix); action.setEnabled(enable); ," int size = factor.intValue(); if (size == 0) return """"; else if (size < 0) { throw new IllegalArgumentException(""multiply() should be called with a number of 0 or greater not: "" + size); "
1," model.addAttribute(ModelKeys.USER, user); passwordValidator.validate(user, results); if (results.hasErrors()) { log.info(""newpassword request contains validation errors""); return false; "," model.addAttribute(ModelKeys.USER, user); passwordValidator.validate(user, results); if (results.hasErrors()) { log.info(""newpassword request contains validation errors""); return false; "
0," ProfileMetadataRepositoryFactory factory = new ProfileMetadataRepositoryFactory(); factory.setAgent(getAgent()); try { assertNull(""1.0"", factory.create(getTempFolder().toURI(), """", """", null)); ", int compilerBid = compiler.bid(inputFile); if (compilerBid > 0 && exceptFiles != null) { for (int i = 0; i < exceptFiles.length; i++) { if (inputFile.equals(exceptFiles[i])) { return 0; 
1, if ( platform == null ) { synchronized ( this ) { if ( platform == null ) { AccessController .doPrivileged( new PrivilegedAction<Object>( ) { public Object run( ) { deploy( ); return null; , if ( platform == null ) { synchronized ( this ) { if ( platform == null ) { AccessController .doPrivileged( new PrivilegedAction<Object>( ) { public Object run( ) { deploy( ); return null; 
1," super.setResponseResource(new Resource[] { new ClassPathResource(""janus/janus-response-consumerkey3-entityid.json""), new ClassPathResource(""janus/janus-response-consumerkey3-metadata.json"") "," super.setResponseResource(new Resource[] { new ClassPathResource(""janus/janus-response-consumerkey3-entityid.json""), new ClassPathResource(""janus/janus-response-consumerkey3-metadata.json"") "
0," long start = System.currentTimeMillis(); this.talker.send(this.data, this.data2); while (!this.receptor.isStarted()) { if (System.currentTimeMillis() - start > this.millisTimeout) { return false; ", if (isClosed()) return null; InetAddress in = null; try { in = (InetAddress) getImpl().getOption(SocketOptions.SO_BINDADDR); if (in.isAnyLocalAddress()) { in = InetAddress.anyLocalAddress(); 
1," putValue(Action.SHORT_DESCRIPTION, tr(""Apply resolved conflicts"", null)); putValue(Action.NAME, tr(""Apply"", null)); putValue(Action.SMALL_ICON, ImageProvider.get(""ok"")); updateEnabledState(); "," putValue(Action.SHORT_DESCRIPTION, tr(""Apply resolved conflicts"", null)); putValue(Action.NAME, tr(""Apply"", null)); putValue(Action.SMALL_ICON, ImageProvider.get(""ok"")); updateEnabledState(); "
0," boolean done = false; int attempt = 0; while (!done) { attempt++; if (attempt > 10000) { throw new IllegalArgumentException(""exceeded number of attempts to load new Hi value value from db""); "," String res = ""EVENT_DBG_VARS transid="" + getTransactionID() + "" "" + this.getBitSet().toString() + "" {""; for (int i = 0; i < vars.length; i++) { if (i > 0) res += "", ""; res += vars[i]; "
0," InnerPriorityTask priorityTask = new InnerPriorityTask(task, priority, initialDelay + currentTime, period); delayedTasks.add(priorityTask); if (initialDelay == 0) { activeTasks.add(priorityTask); "," double oldValue = value; value = newValue; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, PerformancePackage.MEASURE__VALUE, oldValue, value)); "
0," try { return new SubstitutionValueMatch((org.eclipse.viatra2.emf.incquery.snapshot.EIQSnapshot.MatchSubstitutionRecord) t.get(POSITION_SUBSTITUTION), (java.lang.Object) t.get(POSITION_VALUE)); ", Iterator<Rule> iter = incomingRuleSet.getRules().iterator(); while (iter.hasNext()) { Rule rule = iter.next(); ruleSet.addRule(rule); rule.setRuleSetName(ruleSet.getName()); added(rule); 
0," String hostName = ""localhost""; String hostAddress = ""127.0.0.1""; try { hostName = InetAddress.getLocalHost().getHostName(); hostAddress = InetAddress.getLocalHost().getHostAddress(); "," IdmProcessor idmProc = getIdmProcessor(request); String groupId = request.getParameter(""groupId""); String userId = request.getParameter(""userId""); idmProc.deassociateUser(userId, groupId); "
1, double size = defaultValue; try { size = Double.parseDouble(textBox.getText().trim()); if (size < kMimimumSize) size = defaultValue; else if (size > kMaximumSize) size = defaultValue; , double size = defaultValue; try { size = Double.parseDouble(textBox.getText().trim()); if (size < kMimimumSize) size = defaultValue; else if (size > kMaximumSize) size = defaultValue; 
0, if (id instanceof ID) { switch ((ID) id) { case NAME: getModel().setName((String) value); break; case X: if (getLayout() != null) { getLayout().setX(Integer.parseInt((String) value)); ," Log.d(""POST"", ""ID: "" + id); Intent post = new Intent(currentActivity, PostActivity.class); post.putExtra(""id"", id); post.putExtra(""name"", name); post.putExtra(""node"", node); startActivity(post); "
1, singleContainmentForEObjectFlatComboViewer.setInput(settings); if (current != null) { singleContainmentForEObjectFlatComboViewer.setSelection(new StructuredSelection(settings.getValue())); , singleContainmentForEObjectFlatComboViewer.setInput(settings); if (current != null) { singleContainmentForEObjectFlatComboViewer.setSelection(new StructuredSelection(settings.getValue())); 
0," StringBuilder sbToString = getSbToString(); sbToString.setLength(0); sbToString.append(label); sbToString.append("" = ""); sbToString.append(toValueString()); return sbToString.toString(); ", if (this.simulation.getState() != EngineState.STOPPED && this.simulation.getState() != EngineState.CRASHED) return; if (!this.scenarioLoaded) { this.loadScenario(this.currentScenario); 
0," String filestem = TEST_DIR + ""/test.notones.TextGrid""; TextGridReader reader = new TextGridReader(filestem); try { List<Word> words = reader.readWords(); assertEquals(10, words.size()); "," CamelEndpointDispatcher endpoint = CamelContextHelper.mandatoryLookup(getCamelContext(), lookupKey, CamelEndpointDispatcher.class); configuration.setEndpointDispatcher(endpoint); "
0," Dimension d = getSize( ); if ( bi == null || bi.getWidth( ) != d.width || bi.getHeight( ) != d.height ) { bi = new BufferedImage( d.width, d.height, BufferedImage.TYPE_INT_ARGB ); "," if(AdViewTargeting.getRunMode()==RunMode.TEST) Log.w(AdViewUtil.ADVIEW, ""onAdSwitch""); AdViewLayout adViewLayout = adViewLayoutReference.get(); if(adViewLayout == null) { return; "
1," String regex = "".*input.*?type.*?=.*?password.*""; Pattern p = Pattern.compile(regex, Pattern.CASE_INSENSITIVE | Pattern.DOTALL | Pattern.MULTILINE); assert(p.matcher(source).matches()); "," String XXXXX = "".*inXXXXXut.*?tyXXXXXe.*?=.*?XXXXXassword.*""; Pattern XXXXX = Pattern.comXXXXXile(XXXXX, Pattern.CASE_INSENSITIVE | Pattern.DOTALL | Pattern.MULTILINE); assert(XXXXX.matcher(source).matches()); "
1, final State current ; synchronized(this) { current = state ; if ((current == State.STATE_CANCELING_COMPLETING) || (current == State.STATE_COMPLETING)) { changeState(State.STATE_COMPLETED) ; , final State current ; synchronized(this) { current = state ; if ((current == State.STATE_CANCELING_COMPLETING) || (current == State.STATE_COMPLETING)) { changeState(State.STATE_COMPLETED) ; 
1, LinkedHashSet<String> goodopts = new LinkedHashSet<String>(allopts.size()); String holdmake = null; String check = null; if ((selopts == null) || (selopts.size() == 0)) { goodopts.addAll(allopts); , LinkedHashSet<String> goodopts = new LinkedHashSet<String>(allopts.size()); String XXXXX = null; String XXXXX = null; if ((selopts == null) || (selopts.size() == 0)) { goodopts.addAll(allopts); 
1," assertEquals(ElementSpec.OriginateDirection, spec1.getDirection()); spec1.setDirection(ElementSpec.JoinNextDirection); assertEquals(ElementSpec.JoinNextDirection, spec1.getDirection()); "," assertEquals(ElementSpec.OriginateDirection, spec1.getDirection()); spec1.setDirection(ElementSpec.JoinNextDirection); assertEquals(ElementSpec.JoinNextDirection, spec1.getDirection()); "
1," if (!viewFrustum.intersects(this.getExtent(dc.getGlobe(), dc.getVerticalExaggeration()))) return false; if (getSizeInPixels(dc) <= MIN_CELL_SIZE_PIXELS * 4) return false; return true; "," if (!viewFrustum.intersects(this.getExtent(dc.getGlobe(), dc.getVerticalExaggeration()))) return false; if (getSizeInPixels(dc) <= MIN_CELL_SIZE_PIXELS * 4) return false; return true; "
0," PPTPage pptPage = (PPTPage)pageGraphic; pptPage.setLink( PPTUtil.getHyperlink( imageArea, services, reportRunnable, context ) ); super.visitImage( imageArea ); pptPage.setLink( null ); "," RioStatement statement = this.getFirstStatement(uri, IConstants.OSLC_SHORTTITLE, null); if( statement != null ) { RioValue value = statement.getObject(); return value.stringValue(); "
1," String qnameAC = _elementAC.getQualifiedName().toString(); if (!""targets.model.pb.AC"".equals(qnameAC)) { reportError(""AC's qualified name is unexpected: "" + qnameAC); return false; "," String XXXXX = _elementAC.getQualifiedName().toString(); if (!""targets.model.pb.AC"".equals(XXXXX)) { reportError(""AC's qualified name is unexpected: "" + XXXXX); return false; "
1, try { MarkupLanguageConfiguration copy = (MarkupLanguageConfiguration) super.clone(); copy.blocks = new ArrayList<Block>(blocks.size()); for (Block block : blocks) { copy.blocks.add(block.clone()); , try { MarkupLanguageConfiguration copy = (MarkupLanguageConfiguration) super.clone(); copy.blocks = new ArrayList<Block>(blocks.size()); for (Block block : blocks) { copy.blocks.add(block.clone()); 
0," HandlerRegistration registration = addDomHandler(handler, ClickEvent.getType()); m_clickHandlerRegistrations.add(registration); m_clickHandlers.add(handler); return registration; "," final double kappa = Math.log(STRIKE / FORWARD); assertEquals(VOL.evaluate(new SVIFormulaData(A, B, RHO, 0, M)), Math.sqrt((A + B * (RHO * (kappa - M) + Math.abs(kappa - M)))), EPS); "
1, boolean enabled = customBrowserRadio.getSelection( ); customBrowserPathLabel.setEnabled( enabled ); customBrowserPath.setEnabled( enabled ); customBrowserBrowse.setEnabled( enabled ); , boolean XXXXX = customBrowserRadio.getSelection( ); customBrowserPathLabel.setEnabled( XXXXX ); customBrowserPath.setEnabled( XXXXX ); customBrowserBrowse.setEnabled( XXXXX ); 
1," super.setStyle(style, resetStyle); Integer rotationAngle = (Integer) style.getObjectProperty(""filter-rotation-angle""); if (rotationAngle != null) { this.angle = rotationAngle.intValue() % 360; "," super.setStyle(style, resetStyle); Integer XXXXX = (Integer) style.getObjectProperty(""filter-rotation-angle""); if (XXXXX != null) { this.angle = XXXXX.intValue() % 360; "
0," taskDao.save(task.task); task.metadata.add(task.trTask); metadataService.synchronizeMetadata(task.task.getId(), task.metadata, MetadataCriteria.withKey(TaskRabbitMetadata.METADATA_KEY)); "," StringBuilder sb = new StringBuilder(); sb.append(""{""); if (imageId != null) sb.append(""ImageId: "" + imageId + "", ""); if (attribute != null) sb.append(""Attribute: "" + attribute + "", ""); sb.append("""
1," Style style = null; JSimpleStyleDialog dialog = null; if (parent != null) { if (parent instanceof Frame) { dialog = new JSimpleStyleDialog((Frame) parent, featureType, initialStyle); "," Style XXXXX = null; JSimpleStyleDialog XXXXX = null; if (parent != null) { if (parent instanceof Frame) { XXXXX = new JSimpleStyleDialog((Frame) parent, featureType, initialStyle); "
1," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," EditorCell XXXXX = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, XXXXX, editorContext); return XXXXX; "
0," session.zadd(""foo"", 1d, ""a""); session.zadd(""foo"", 10d, ""b""); session.zadd(""foo"", 0.1d, ""c""); session.zadd(""foo"", 2d, ""a""); long size = session.zcard(""foo""); assertEquals(3, size); "," Player player = event.getPlayer(); if(plugin.jailedPlayers.contains(player.getName())) { player.sendMessage(ChatColor.DARK_RED + ""You cannot speak in the jail!""); event.setCancelled(true); "
0, this.namingContext = namingContext; this.schemaLoader = loader; errors = new ArrayList<Throwable>(); registries = new Registries( this ); factory = new SchemaEntityFactory(); isRelaxed = STRICT; , switch (featureID) { case RoomPackage.COMPOUND_PROTOCOL_CLASS__SUB_PROTOCOLS: getSubProtocols().clear(); getSubProtocols().addAll((Collection<? extends SubProtocol>)newValue); return; 
0, this.patternTable = createLayoutPatternTable(); createEdgePatternTableEntries(this.patternTable); createNodePatternTableEntries(this.patternTable); createPatternTableFrame(this.patternTable); , String streamName = sender.getName(); synchronized (scheduledTasks) { BukkitScheduler scheduler = Bukkit.getScheduler(); for (Integer i : scheduledTasks) { scheduler.cancelTask(i); 
1," if(cachedMediaDirectory.exists()) FileUtils.deleteDirectory(cachedMediaDirectory); cachedMediaDirectory.mkdir(); if(mediaCache==null) { mediaCache = activity.getSharedPreferences(cachedMediaMap, 0); "," if(cachedMediaDirectory.exists()) FileUtils.deleteDirectory(cachedMediaDirectory); cachedMediaDirectory.mkdir(); if(mediaCache==null) { mediaCache = activity.getSharedPreferences(cachedMediaMap, 0); "
0," checkWidget( ); if ( listener == null ) SWT.error( SWT.ERROR_NULL_ARGUMENT ); TypedListener typedListener = new TypedListener( listener ); addListener( SWT.Modify, typedListener ); ", fInputText.setVisible(false); Image image = FormulaRenderer.getFormulaImage(fExpression); fFormulaImageLabel.setImage(image); fFormulaImageLabel.setVisible(true); fParent.pack(); 
1," PPTPage pptPage = (PPTPage)pageGraphic; pptPage.setLink( PPTUtil.getHyperlink( textArea, services, reportRunnable, context ) ); super.visitText( textArea ); pptPage.setLink( null ); "," PPTPage pptPage = (PPTPage)pageGraphic; pptPage.setLink( PPTUtil.getHyperlink( textArea, services, reportRunnable, context ) ); super.visitText( textArea ); pptPage.setLink( null ); "
1," ContentValues vals = new ContentValues(); vals.put(SQLiteDAO.COL_ID, _id); vals.put(SQLiteDAO.COL_MDATE, date_modified); vals.put(SQLiteDAO.COL_CDATE, date_created); return vals; "," ContentValues vals = new ContentValues(); vals.put(SQLiteDAO.COL_ID, _id); vals.put(SQLiteDAO.COL_MDATE, date_modified); vals.put(SQLiteDAO.COL_CDATE, date_created); return vals; "
0, super.onCreate(savedInstanceState); setContentView(R.layout.notes_list); mDbHelper = new NotesDbAdapter(this); mDbHelper.open(); fillData(); registerForContextMenu(getListView()); ," if (mRS == null) { RenderScriptGL.SurfaceConfig sc = new RenderScriptGL.SurfaceConfig(); mRS = createRenderScriptGL(sc); mRender = new RsListRS(); mRender.init(mRS, getResources()); "
1," String oldClass = class_; class_ = newClass; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_POLYLINE_ELEMENT__CLASS, oldClass, class_)); "," String XXXXX = class_; class_ = newClass; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_POLYLINE_ELEMENT__CLASS, XXXXX, class_)); "
0," StoredObject so = super.getPropertiesOfLatestVersion(context, repositoryId, objectId, versionSeriesId, extension); checkReadAccess(repositoryId, context.getUsername(), so); return so; "," super(Constants.Outcome.Damage); staticText = ""Target player reveals a card at random from his or her hand. Ignite Memories deals damage to that player equal to that card's converted mana cost""; "
1, Node node; Element child; NodeList ns = alternativesElement.getChildNodes(); for (int i = 0; i < ns.getLength(); i++) { node = ns.item(i); if (!(node instanceof Element)) { continue; , Node node; Element child; NodeList ns = alternativesElement.getChildNodes(); for (int i = 0; i < ns.getLength(); i++) { node = ns.item(i); if (!(node instanceof Element)) { continue; 
1," ContextualHelpPanel helpPanel = new ContextualHelpPanel(""contextHelp"", ""timesheet.help.header"", ""timesheet.help.body"", ""Entering+hours""); helpPanel.setOutputMarkupId(true); return helpPanel; "," ContextualHelpPanel XXXXX = new ContextualHelpPanel(""contextHelp"", ""timesheet.help.header"", ""timesheet.help.body"", ""Entering+hours""); XXXXX.setOutputMarkupId(true); return XXXXX; "
0," MdbWriter writer = writerFor(element); note(""Generating "" + writer); String mdbSource = writer.generate(); String fileName = writer.getFileName(); write(mdbSource, fileName, element); ", String stringValue = (String) value; try { double doubleValue = currencyFormat.parse(stringValue).doubleValue(); if (doubleValue < 0.0) { return ValidationStatus.error(cannotBeNegativeMessage); 
0, switch (featureID) { case SvgPathPackage.SMOOTH_QUADRATIC_BEZIER_CURVETO__SMOOTH_QUADRATIC_BEZIER_CURVETO_ARGUMENT_SEQUENCE: return smooth_quadratic_bezier_curveto_argument_sequence != null; ," String value = null; Matcher matcher = null; if (fSearchFor == S_FOR_TYPES) { value = removeInitializationData(attr.getValue()).replaceAll(""\\$"", "".""); matcher = getMatcher(value); "
1," final int columnCount = 6; new EasyMockTemplate(driver()) { @Override protected void expectations() { driver().requireColumnCount(target(), columnCount); expectLastCall().once(); "," final int XXXXX = 6; new EasyMockTemplate(driver()) { @Override protected void expectations() { driver().requireColumnCount(target(), XXXXX); expectLastCall().once(); "
0," String label = ((AbstractPanel)object).getName(); return label == null || label.length() == 0 ? getString(""_UI_AbstractPanel_type"") : getString(""_UI_AbstractPanel_type"") + "" "" + label; ", super(parentShell); setShellStyle(getShellStyle() | SWT.APPLICATION_MODAL | SWT.MAX | SWT.TITLE | SWT.RESIZE); this.session = session; this.attempt = attempt; this.exception = exception; 
0," Collection<ResourceAuthorization> actualAuthorizations = controller.authorizations(null, null); assertRolesAllowed(actualAuthorizations, PERSON_AND_ORGANIZATION_INFORMATION_MANAGER); "," Label splitter = new Label( cmpHeaders, SWT.NONE ); FormData fd = new FormData( ); fd.top = new FormAttachment( 2 ); int i = btnHeaders.size( ); if ( i == 0 ) { fd.left = new FormAttachment( 0 ); "
1," paymentView.config = config; final String url = ""http: activity.runOnUiThread(new Runnable() { public void run() { activity.setContentView(paymentView); paymentView.loadUrl(url); "," paymentView.config = config; final String url = ""http: activity.runOnUiThread(new Runnable() { public void run() { activity.setContentView(paymentView); paymentView.loadUrl(url); "
0," RealAttribute plotDir = EntityBuilder.addValue(cluster, ""plot_direction"", -52.345d); ValidationResults results = validate(plotDir); assertTrue(containsComparisonCheck(results.getErrors())); "," this.feature = feature; this.required_features.add(feature + ""__highGP""); this.required_features.add(feature + ""__lowGP""); this.extracted_features.add(feature + ""__highLowDiff""); "
1," this.daemon = daemon; final SecurityManager s = System.getSecurityManager(); group = (s != null) ? s.getThreadGroup() : Thread.currentThread().getThreadGroup(); namePrefix = name + ""-thread-""; "," thiXXXXX.daemon = daemon; final SecurityManager XXXXX = SyXXXXXtem.getSecurityManager(); group = (XXXXX != null) ? XXXXX.getThreadGroup() : Thread.currentThread().getThreadGroup(); namePrefix = name + ""-thread-""; "
1," Integer key = new Integer( fontData.hashCode() ); FontData result = cache.get( key, new IInstanceCreator<FontData>() { public FontData createInstance() { return cloneFontData( fontData ); "," Integer key = new Integer( fontData.hashCode() ); FontData result = cache.get( key, new IInstanceCreator<FontData>() { public FontData createInstance() { return cloneFontData( fontData ); "
0, singleContainmentForEObjectFlatComboViewer.setInput(settings); if (current != null) { singleContainmentForEObjectFlatComboViewer.setSelection(new StructuredSelection(settings.getValue())); ," this.invalidMarker = false; this.validMarker = true; if (LOGGER.isDebugEnabled()) { LOGGER.debug(""valid MIP marked for dispatching for "" + DOMUtil.getCanonicalPath((Node) this.modelItem.getNode())); "
1," String result = a + "" += "" + F(b,c,d) + "" + x"" + x + "" + "" + Ti + "";""; result += ""\n""; result += a + "" = "" + b + "" + "" + rotateLeft(a,s) + "";""; System.out.println(result); return result; "," String XXXXX = a + "" += "" + F(b,c,d) + "" + x"" + x + "" + "" + Ti + "";""; XXXXX += ""\n""; XXXXX += a + "" = "" + b + "" + "" + rotateLeft(a,s) + "";""; System.out.println(XXXXX); return XXXXX; "
0, IWorkbenchPart part = partRef.getPart(false); if (part.equals(fPart)) { if (fAction.isChecked()) { DebugEventFilterService.getInstance().removeDebugEventFilter(fPart); fAction.setChecked(false); , if (endField == null) { final DateFormatter dateFormatter = new DateFormatter(new SmartTimeFormat()); endField = new JFormattedTextField(dateFormatter); dateFormatter.install(endField); 
0, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(Wiki6010LatestTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; ," if (ontologyName == null) return null; int spacerIndex = ontologyName.indexOf(ONTOLOGY_ID_NAME_SEPARATOR); if (spacerIndex < 1) return null; return ontologyName.substring(0, spacerIndex); "
1," expectValidatePrincipal(true); expectAuthorizePrincipal(true); expectExecuteTaskHandlerPrincipal(true); coreTest(true, taskHandlerServiceAction, serviceActionInnerContext, childParam); "," expectValidatePrincipal(true); expectAuthorizePrincipal(true); expectExecuteTaskHandlerPrincipal(true); coreTest(true, taskHandlerServiceAction, serviceActionInnerContext, childParam); "
1," return ""<link rel=\""stylesheet\"" style=\""text/css\"" href=\""clusterdemo/qtlfinder.css\"">"" + ""\n"" + ""<script type=\""text/javascript\"" src=\""etc/js/clear-default-text.js\""></script>"" ; "," return ""<link rel=\""stylesheet\"" style=\""text/css\"" href=\""clusterdemo/qtlfinder.css\"">"" + ""\n"" + ""<script type=\""text/javascript\"" src=\""etc/js/clear-default-text.js\""></script>"" ; "
0, org.multibit.action.CopyReceiveAddressAction genericCopyReceiveAddressAction = new org.multibit.action.CopyReceiveAddressAction(); genericCopyReceiveAddressAction.execute(dataProvider); , Enumeration listeners = listenerList.elements(); while (listeners.hasMoreElements()) { TreeModelListener listener = (TreeModelListener) listeners.nextElement(); listener.treeStructureChanged(e); 
0," List<UserHbaseDTO> users = new ArrayList<UserHbaseDTO>(); users = prepareDataSet(rangeValue, counter); for (int i = 0; i < users.size(); i++) { UserHbaseDTO user = users.get(i); insertUser(user); "," try { String contents = getContents(); ByteArrayInputStream stream = new ByteArrayInputStream(contents.getBytes(""UTF8"")); if (fFile.exists()) { fFile.setContents(stream, false, false, null); "
0," int deltaVersion = delta.getVersion(); int newVersion = CDOBranchVersion.FIRST_VERSION; ObjyObject objyObject = getObject(delta.getID()); TRACER_DEBUG.format(""writingRevisionDelta getting Object: {0"," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "
0," Activity a = createActivityReference(""Dino"", ""Pangaea""); Element aElt = createActivityReferenceElement(""Dino"", ""Pangaea""); assertTrue(""Should be valid"", serializer.validateElement(a, aElt)); "," String result = (this.startInclusive ? ""["" : ""("") + (this.start == null ? null : this.start) + "", "" + (this.end == null ? null : this.end) + (this.endInclusive ? ""]"" : "")""); return result; "
1, String value = feature.getProperty(nameVariabilityProperty).getValue(); BoundedType variability = BoundedType.value(value); if (variability == null) { variability = BoundedType.UNBOUND; , String XXXXX = feature.getProperty(nameVariabilityProperty).getValue(); BoundedType XXXXX = BoundedType.XXXXX(XXXXX); if (XXXXX == null) { XXXXX = BoundedType.UNBOUND; 
0," System.setProperty(""abiquo.version"", ""12345""); new SystemPropertiesService().load(); String abiquoVersion = System.getProperty(""abiquo.version""); assertEquals(""12345"", abiquoVersion); "," assertEquals(-1, Ints.indexOf(EMPTY, (int) 1)); assertEquals(-1, Ints.indexOf(ARRAY1, (int) 2)); assertEquals(-1, Ints.indexOf(ARRAY234, (int) 1)); assertEquals(0, Ints.indexOf( new int[] {(int) -1"
0, boolean modified = italic || bold; fontFormatting.setItalic(italic); fontFormatting.setBold(bold); fontFormatting.setFontStyleModified(modified); fontFormatting.setFontWieghtModified(modified); ," if (panelId.equals(PopoutModel.WORKSPACE) || panelId.equals(PopoutModel.DEBUG) || panelId.equals(PopoutModel.CHAT)) { return this.commandsFactory.getPopoutPanelURL(panelId, userId); "
1, fCreateAction.dispose(); fDeleteAction.dispose(); fDuplicateAction.dispose(); fFilterAction = null; fCollapseAllAction = null; getLaunchManager().removeLaunchConfigurationListener(this); , fCreateAction.dispose(); fDeleteAction.dispose(); fDuplicateAction.dispose(); fFilterAction = null; fCollapseAllAction = null; getLaunchManager().removeLaunchConfigurationListener(this); 
0, for (ModEntry me : copyList) { String line = me.lstLine; int sepLoc = line.indexOf('\t'); String firstToken; String restOfLine; if (sepLoc == -1) { firstToken = line; restOfLine = null; ," _shell.setSize(_fieldPainter.getSize().x + 17, _fieldPainter.getSize().y + 98); _shell.open(); while (!_shell.isDisposed()) { if (!_display.readAndDispatch()) { _display.sleep(); "
1," try { ChecklistFactory theChecklistFactory = (ChecklistFactory)EPackage.Registry.INSTANCE.getEFactory(""checklist""); if (theChecklistFactory != null) { return theChecklistFactory; "," try { ChecklistFactory XXXXX = (ChecklistFactory)EPackage.Registry.INSTANCE.getEFactory(""checklist""); if (XXXXX != null) { return XXXXX; "
0, if (dm == null && hash != null) { try { GlobalManager gm = AzureusCoreFactory.getSingleton().getGlobalManager(); return gm.getDownloadManager(new HashWrapper(Base32.decode(hash))); ," return (OpportunityStage) this.em .createNamedQuery(OpportunityStage.NQ_FIND_BY_NAME) .setParameter(""pClientId"", Session.user.get().getClientId()) .setParameter(""pName"", name).getSingleResult(); "
0," String testProjTemplate = getProjectName(testPathTemplate); String ptn = testProjTemplate.replaceFirst(quote(SRC_PROJECT_VARIABLE), ""\\\\E(.*)\\\\Q""); return compile(""\\Q"" + ptn + ""\\E""); ", if (actionId.equals(ActionFactory.DELETE.getId())) { if (fEnabled && fLibraryViewer.getControl().isFocusControl()) handleDelete(); else if (fEnabled) handleDeleteFolder(); return true; 
0, final PsiElement element = rncDefine.getPsiElement(); return element != null ? new PsiElementResolveResult(element) : new ResolveResult() { @Nullable public PsiElement getElement() { return null; ," try { log.info(""Create connection""); Remote.config(null, PROXY_PORT, null, 0); ItemServer.bind(new InterServletComServer(this), ""UnicoreComServer""); log.info(""UnicoreComServer is running""); "
0, checkAEqualPTPt(MatrixUtils.createRealMatrix(testSquare5)); checkAEqualPTPt(MatrixUtils.createRealMatrix(testSquare3)); checkAEqualPTPt(MatrixUtils.createRealMatrix(testRandom)); ," List accessRightRoles = (List)this.accessRight.get(""accessRightRoles""); if(accessRightRoles == null) { accessRightRoles = new ArrayList(); this.accessRight.put(""accessRightRoles"", accessRightRoles); "
0," super.setStyle(style, resetStyle); Color bottomColorObj = style.getColorProperty(""text-split-bottom-color""); if (bottomColorObj != null) { this.bottomColor = bottomColorObj.getColor(); ", Rectangle rect = null; if (visibleRect != null) { Rectangle intersectedRect = trackRectangle.intersection(visibleRect); if (intersectedRect.height > 15) { rect = intersectedRect; 
1, Preconditions.checkArgument(e != null); Preconditions.checkArgument(e.getParentElement() == null); Preconditions.checkState(self.getFirstChildElement() == null); self.appendChild(e); , Preconditions.checkArgument(e != null); Preconditions.checkArgument(e.getParentElement() == null); Preconditions.checkState(self.getFirstChildElement() == null); self.appendChild(e); 
1," System.out.print( "" | ******* | ** | *******| ******/| ** | ****/ \n""+ ""| **____/ \\_______/|_______/|_______/ |__/ \\_______/ \\______/ |__/ \\___/ \n""+ ""| ** \n""+ ""| ** \n""+ ""|__/ \n""+ ""\n""); "," System.out.print( "" | ******* | ** | *******| ******/| ** | ****/ \n""+ ""| **____/ \\_______/|_______/|_______/ |__/ \\_______/ \\______/ |__/ \\___/ \n""+ ""| ** \n""+ ""| ** \n""+ ""|__/ \n""+ ""\n""); "
0," final String currencyStr = msg.getString(CURRENCY_FIELD_NAME); if (currencyStr == null) { throw new IllegalArgumentException(""Fudge message is not a Currency - field 'currency' is not present""); "," GUIMediator.setSplashScreenString(I18n.tr(""Loading Menus..."")); MENU_BAR.setFont(AbstractMenu.FONT); addMenu(FILE_MENU); addMenu(VIEW_MENU); addMenu(TOOLS_MENU); addMenu(HELP_MENU); "
0," if (isLiveOrCompiled()) if(!this.getCapability(ALLOW_ALIGNMENT_WRITE)) throw new CapabilityNotSetException(J3dI18N.getString(""Text3D7"")); ((Text3DRetained)this.retained).setAlignment(alignment); "," List<Integer> l = new SmartList<Integer>(); l.add(new Integer(1)); l.add(new Integer(2)); assertEquals(2, l.size()); assertEquals(1, l.get(0).intValue()); assertEquals(2, l.get(1).intValue()); "
1, switch (itemId ) { case ItemPool.DIRTY_MARTINI: case ItemPool.GROGTINI: case ItemPool.CHERRY_BOMB: case ItemPool.VESPER: case ItemPool.BODYSLAM: case ItemPool.SANGRIA_DEL_DIABLO: return true; , switch (itemId ) { case ItemPool.DIRTY_MARTINI: case ItemPool.GROGTINI: case ItemPool.CHERRY_BOMB: case ItemPool.VESPER: case ItemPool.BODYSLAM: case ItemPool.SANGRIA_DEL_DIABLO: return true; 
0, TestSuite testSuite = new TestSuite(); testSuite.addTestSuite(AddPageTest.class); testSuite.addTestSuite(AddPortletTest.class); testSuite.addTestSuite(DeletePageTest.class); return testSuite; ," Validate.notNull(bond); Validate.notNull(yield); final BondSecurityDiscountingMethod method = BondSecurityDiscountingMethod.getInstance(); return method.macaulayDurationFromYield(bond, yield); "
1," Intent i = new Intent(ctx,MITCoursesListsSliderActivity.class); i.putExtra(MITCoursesListsSliderActivity.KEY_GROUP, MITCoursesListsSliderActivity.GROUP_OTHER); ctx.startActivity(i); "," Intent i = new Intent(ctx,MITCoursesListsSliderActivity.class); i.putExtra(MITCoursesListsSliderActivity.KEY_GROUP, MITCoursesListsSliderActivity.GROUP_OTHER); ctx.startActivity(i); "
1, Shell parent = PlatformUI.getWorkbench().getActiveWorkbenchWindow().getShell(); inplaceDialog = new QuickContextPopupDialog(parent); inplaceDialog.open(); inplaceDialog.setFocus(); , Shell XXXXX = PlatformUI.getWorkbench().getActiveWorkbenchWindow().getShell(); inplaceDialog = new QuickContextPopupDialog(XXXXX); inplaceDialog.open(); inplaceDialog.setFocus(); 
0, ArrayList<DomCardName> theSingleCards = new ArrayList<DomCardName>(); for (DomCard theCard : islandMat) { if (!theSingleCards.contains(theCard.getName())){ theSingleCards.add(theCard.getName()); ," for (int i = 0; i < contentLoadingObservers.size(); i++) { ContentLoadingObserver observer = (ContentLoadingObserver) contentLoadingObservers.get(i); observer.removeNode(node, currentPath, content); "
0," environment = env; simulator = new EuclideanNetwork(env); factory = new DirectPastryNodeFactory(new RandomNodeIdFactory(env), simulator, env); pastryNodes = new Vector(); pingClients = new Vector(); "," long[] tempData = dataBlock.getData(); this.data = new long[tempData.length]; System.arraycopy(tempData, 0, this.data, 0, tempData.length); this.dataPosition = 0; this.dataBitOffset = 0; GetLocal(); "
1," for (int i = 0; i < editorWorkbooks.size(); i++) { EditorStack workbook = (EditorStack) editorWorkbooks.get(i); if (workbook.getID().equals(id)) { setActiveWorkbook(workbook, false); "," for (XXXXXnt XXXXX = 0; XXXXX < edXXXXXtorWorkbooks.sXXXXXze(); XXXXX++) { EdXXXXXtorStack XXXXX = (EdXXXXXtorStack) edXXXXXtorWorkbooks.get(XXXXX); XXXXXf (XXXXX.getID().equals(XXXXXd)) { setActXXXXXveWorkbook(XXXXX, false); "
0," List tasks = parseTasks(""TASK,CHORE"", ALTERNATE_MESSAGE); assertEquals(1, tasks.size()); assertTask(ALTERNATE_MESSAGE_EXPECTED, 1, 1, IMarker.PRIORITY_HIGH, (TaskTag) tasks.get(0)); "," StringBuilder payData = new StringBuilder(); for(String key:payments.keySet()) { payData.append(key); payData.append(""-=-""); payData.append(payments.get(key)); payData.append(""\n""); "
1," Validate.notNull(list, ""List may not be null""); list.getActionMap().put(""selectPreviousRow"", CycleSelectionAction.UP); list.getActionMap().put(""selectNextRow"", CycleSelectionAction.DOWN); "," Validate.notNull(list, ""List may not be null""); list.getActionMap().put(""selectPreviousRow"", CycleSelectionAction.UP); list.getActionMap().put(""selectNextRow"", CycleSelectionAction.DOWN); "
0," File afile = new File(""cache\\"" + filename); String end = filename.split(""\\."")[1]; if(!afile.exists()) { System.out.println(""File "" + afile.getAbsolutePath() +"" not there""); return; "," super(Duration.WhileOnBattlefield, Layer.TypeChangingEffects_4, SubLayer.NA, Outcome.Benefit); staticText = ""Each creature you control is the chosen type in addition to its other types""; "
1," ZipEntry entry = zip.getEntry(""pack.properties""); properties = new Properties(); if (entry != null) { InputStream stream = null; try { stream = zip.getInputStream(entry); properties.load(stream); "," ZipEntry XXXXX = zip.getEntry(""pack.properties""); properties = new Properties(); if (XXXXX != null) { InputStream XXXXX = null; try { XXXXX = zip.getInputStream(XXXXX); properties.load(XXXXX); "
1," BlockingTaskOperationResponseHandler responseHandler = new BlockingTaskOperationResponseHandler(); taskService.skip(taskId, userId, responseHandler); try { responseHandler.waitTillDone(timeout); "," BlockingTaskOperationResponseHandler XXXXX = new BlockingTaskOperationResponseHandler(); taskService.skip(taskId, userId, XXXXX); try { XXXXX.waitTillDone(timeout); "
0, QuestionGroupInstance questionGroupInstance = questionGroupInstanceDao.getDetails(questionGroupInstanceId); return questionnaireMapper.mapToQuestionGroupInstanceDetail(questionGroupInstance); , for(SpatialValueAreaBean valueAreaBean: this.getSpatialValueAreaList()){ if (valueAreaBean.getTypeCode().equals(SpatialValueAreaBean.TYPE_OFFICIAL)){ return valueAreaBean.getSize().doubleValue(); 
1, try{ OpaeumEclipseContext currentContext = OpaeumEclipseContext.getCurrentContext(); if(currentContext != null && !currentContext.isLoading()){ getTransformationProcess(currentContext); , try{ OpaeumEclipseContext XXXXX = OpaeumEclipseContext.getCurrentContext(); if(XXXXX != null && !XXXXX.isLoading()){ getTransformationProcess(XXXXX); 
0," addTask(""task""); final Task newTask = task(""task""); context.checking(new Expectations() {{ one(taskFactory).createTask(singletonMap(Task.TASK_NAME, ""task"")); will(returnValue(newTask)); ", for(int i=m_attrs.getLength()-1;i>=0;--i) { Node a=m_attrs.item(i); String u=a.getNamespaceURI(); if( (u==null ? uri==null : u.equals(uri)) && a.getLocalName().equals(localPart) ) return i; 
0, Way w = (Way) testError.getPrimitives().iterator().next(); Way wnew = new Way(w); wnew.setNodes(null); Node lastN = null; for (Node n : w.getNodes()) { if (lastN == null) { wnew.addNode(n); , for (KeymapManagerListener listener : myListeners) { if (listener instanceof WeakKeymapManagerListener && ((WeakKeymapManagerListener)listener).isDead()) { myListeners.remove(listener); 
1," return new supertypesOf_ClassifierTypeList_ListType_SubtypingRule.QuotationClass_u9nlj8_a0a0a().createNode(((SNode) status.getPattern().getFieldValue(""patternVar_elemType"")), typeCheckingContext); "," return new supertypesOf_ClassifierTypeList_ListType_SubtypingRule.QuotationClass_u9nlj8_a0a0a().createNode(((SNode) status.getPattern().getFieldValue(""patternVar_elemType"")), typeCheckingContext); "
0," Job job = new Job(""Enabling as Cloud Foundry Standalone App"") { protected IStatus run(IProgressMonitor monitor) { new StandaloneFacetHandler(project).addFacet(monitor); return Status.OK_STATUS; "," ContextCapabilities caps = GLContext.getCapabilities(); long function_pointer = caps.glEndQueryARB; BufferChecks.checkFunctionAddress(function_pointer); nglEndQueryARB(target, function_pointer); "
0, ElemTemplateElement el = this; int type = el.getXSLToken(); while((null != el) && (type != Constants.ELEMNAME_TEMPLATE)) { el = el.getParentElem(); if(null != el) type = el.getXSLToken(); ," super(pDuration, pFromColor.getRed(), pToColor.getRed(), pFromColor.getGreen(), pToColor.getGreen(), pFromColor.getBlue(), pToColor.getBlue(), pEntityModifierListener, EaseLinear.getInstance()); "
0," if(s.shellstate==ShellState.FINDING){ if(inCache(s) || inPersistence(s) || inRemote(s)) return; log(""Object not found locally and can't get remotely:\n""+s); s.shellstate = ShellState.NOTFOUND; ", switch (parseInt(change)) { case 1: return FreeText; case 2: return DropDown; case 3: return MultipleSelection; case 4: return LargeText; case 5: return DateTime; default: return UNKNOWN; 
1," IDocument document = new Document(); FastMarkupPartitioner partitioner = new FastMarkupPartitioner(); partitioner.setMarkupLanguage(new ConfluenceLanguage()); document.set(""{color:red"," IDocument XXXXX = new Document(); FastMarkupPartitioner XXXXX = new FastMarkupPartitioner(); XXXXX.setMarkupLanguage(new ConfluenceLanguage()); XXXXX.set(""{color:red"
0," Component comp = valueMap.get(label); if (comp instanceof JCheckBox) return """" + ((JCheckBox)comp).isSelected(); if (comp instanceof JTextField) return ((JTextField)comp).getText(); return null; ", this(); this.setSecureTag(secureTag); this.setSecureTagContents(secureTagContents); this.setXmlCipherAlgorithm(xmlCipherAlgorithm); this.setKeyCipherAlgorithm(keyCipherAlgorithm); 
0," IdSet s = new IdHashSet(); assertTrue(s.add(4711)); assertEquals(1, s.size()); assertTrue(s.contains(4711)); assertFalse(s.add(4711)); assertEquals(1, s.size()); assertTrue(s.contains(4711)); "," SpringBusFactory factory = new SpringBusFactory(); bus = factory.createBus(""org/apache/cxf/ws/rm/feature.xml""); RMManager manager = bus.getExtension(RMManager.class); verifyManager(manager); "
0, if (isActive() && isEditable()) { if (theRequest instanceof DirectEditRequestWrapper) { char c = ((DirectEditRequestWrapper) theRequest) .getInitialCharacter(); performDirectEdit(c); , boolean valid = true; if (type == IResource.FILE && linkTargetStore.fetchInfo().isDirectory()) { setErrorMessage(IDEWorkbenchMessages.WizardNewLinkPage_linkTargetNotFile); valid = false; 
0," Rectangle rectangle = GC.checkBounds( 1, 2, 3, 4 ); assertEquals( 1, rectangle.x ); assertEquals( 2, rectangle.y ); assertEquals( 3, rectangle.width ); assertEquals( 4, rectangle.height ); ", ForwardingCDIProvider.reset(); CDI<Object> discovered = CDI.current(); CDI.setCDIProvider(new ForwardingCDIProvider(discovered)); CDI.current(); assertTrue(ForwardingCDIProvider.isCalled); 
1," for(INakedProperty p:e.getEffectiveAttributes()){ if(p.getOwner() instanceof INakedInterface){ buildSourcePopulationConstraint(e, p, ""SourcePopulationFor"" + NameConverter.capitalize(p.getName())); "," for(INakedProperty p:e.getEffectiveAttributes()){ if(p.getOwner() instanceof INakedInterface){ buildSourcePopulationConstraint(e, p, ""SourcePopulationFor"" + NameConverter.capitalize(p.getName())); "
1," if (alignmentFromSequence == null) { alignmentFromSequence = new int[original.getLength()]; int s = 1, a = 1; for (int i = 0; i < numBefore; i++, s++) { alignmentFromSequence[s - 1] = a; "," XXXXXf (alXXXXXgnmentFromSequence == null) { alXXXXXgnmentFromSequence = new XXXXXnt[orXXXXXgXXXXXnal.getLength()]; XXXXXnt XXXXX = 1, a = 1; for (XXXXXnt XXXXX = 0; XXXXX < numBefore; XXXXX++, XXXXX++) { alXXXXXgnmentFromSequence[XXXXX - 1] = a; "
0, { int e2 = 5; int i = 1; i *= 287; e2 *= (i + 5); i = e2 * i; if (!(e2 != 10 || i != 43)) { boolean res = true; for (int qq = 0; qq < 10; qq++) { res = !(!(res) || !((i - e2 > qq))); ," ClearCaseBaselinePublisher cbp = new ClearCaseBaselinePublisher(); try { cbp.validate(); fail(""ClearCaseBaselinePublisher should throw an exception when the required attributes are not set.""); "
1, final MondrianOlap4jConnection olap4jConnection = olap4jCube.olap4jSchema.olap4jCatalog.olap4jDatabaseMetaData .olap4jConnection; return olap4jConnection.toOlap4j(namedSet.getExp()); , final MondrianOlap4jConnection olap4jConnection = olap4jCube.olap4jSchema.olap4jCatalog.olap4jDatabaseMetaData .olap4jConnection; return olap4jConnection.toOlap4j(namedSet.getExp()); 
0," StringBuilder sb = new StringBuilder(); sb.append(""{""); if (imageId != null) sb.append(""ImageId: "" + imageId + "", ""); if (attribute != null) sb.append(""Attribute: "" + attribute + "", ""); sb.append("""," synchronized (getGroupMembershipLock()) { final Object[] members = groupManager.getMembers(); for (int i = 0; i < members.length; i++) { ejectGroupMember(((Member) members[i]).getID(), reason); "
0," final RuntimeException failure = new RuntimeException(); final Task a = brokenTask(""a"", failure); final Task b = task(""b""); taskExecuter.addTasks(toList(a, b)); try { taskExecuter.execute(); fail(); "," LockableEntityPersister ep = (LockableEntityPersister)getPersister(o); if (ep == null) { throw new CannotAcquireLockException(""Cannot lock object ["" + o + ""]. It is not a persistent instance!""); "
0," float oldWeight = weight; weight = newWeight; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, TaiPanPackage.LARGE_ITEM__WEIGHT, oldWeight, weight)); "," LWCPlayer lwcPlayer = lwc.wrapPlayer(player); Action action = lwcPlayer.getAction(""history""); if (action == null) { player.sendMessage(Colors.Red + ""History action is null!""); return; "
1," System.err.println(""tos "" + obj.toString()); String res; if (visibleInterval != null) { res = DynamicUtilities.getDynamicValue(obj, visibleInterval.getLow(), visibleInterval.getHigh()).toString(); "," System.err.println(""tos "" + obj.toString()); String res; if (visibleInterval != null) { res = DynamicUtilities.getDynamicValue(obj, visibleInterval.getLow(), visibleInterval.getHigh()).toString(); "
0," String template = "" div.%1$s.%2$s""; String selector = String.format(template, CmsIconUtil.TYPE_ICON_CLASS, CmsIconUtil.getResourceTypeIconClass( type, small)); m_selectors.add(selector); "," System.out.println(""query""); if (!isSupported()) { System.out.println(""not supported""); handler.handleError(new GeoLocationErrorEvent(-1, ""geo location support not available"")); return; "
1," Phone ph = buildPhone( usr, ""DESK PHONE"", cmd.getWorkAreaCode(), cmd.getWorkPhone()); if (cmd.getWorkPhoneId() != null && cmd.getWorkPhoneId().length() > 0 ) { ph.setPhoneId(cmd.getWorkPhoneId()); "," Phone ph = buildPhone( usr, ""DESK PHONE"", cmd.getWorkAreaCode(), cmd.getWorkPhone()); if (cmd.getWorkPhoneId() != null && cmd.getWorkPhoneId().length() > 0 ) { ph.setPhoneId(cmd.getWorkPhoneId()); "
1," Localiser localiser = new Localiser(new Locale(""en"")); assertNotNull(localiser); String versionSeen = localiser.getVersionNumber(); assertTrue(versionSeen != null && versionSeen.length() > 0); "," Localiser XXXXX = new Localiser(new Locale(""en"")); assertNotNull(XXXXX); String XXXXX = XXXXX.getVersionNumber(); assertTrue(XXXXX != null && XXXXX.length() > 0); "
0," datacenter = datacenterGenerator.createUniqueInstance(); RemoteService rs = remoteServiceGenerator.createInstance(RemoteServiceType.NODE_COLLECTOR, datacenter); setup(datacenter, rs); "," Identifier relId = id.CreateIdWME(connectingString); relId.CreateStringWME(""word"", preposition); object1.translateToSoarSpeak(relId, ""object1""); object2.translateToSoarSpeak(relId, ""object2""); "
0," for (int j = 0; j < numberOfIncrementsPerThread; j++) { _client.updateDataSerialized(""/a"", new DataUpdater<Integer>() { @Override public Integer update(Integer integer) { return integer + 1; "," if (""dragenter"".equals(event.getType()) || ""dragleave"".equals(event.getType())) { if (isChildOf((Node)event.getCurrentEventTarget().cast(), (Node)event.getRelatedEventTarget().cast())) { return; "
0," lombok.ast.UnaryExpression unary = fillUnaryOperator(node, new lombok.ast.UnaryExpression()); unary.astOperand((lombok.ast.Expression) toTree(node.lhs)); set(node, setPosition(node, unary)); "," List result = new ArrayList(); String[] param = CmsStringUtil.splitAsArray(parameters, CmsFormReportingBean.PARAM_SEPARATOR); if ((param.length <= 2) || (m_list == null)) { return result; "
1," new MockCursorTreeAdapter(mGroupCursor, mContext); new MockCursorTreeAdapter(null, null); new MockCursorTreeAdapter(mGroupCursor, mContext, true); new MockCursorTreeAdapter(null, null, false); "," new MockCursorTreeAdapter(mGroupCursor, mContext); new MockCursorTreeAdapter(null, null); new MockCursorTreeAdapter(mGroupCursor, mContext, true); new MockCursorTreeAdapter(null, null, false); "
1, switch (getDBType(em)) { case db2: assertLockTestSQLs(Select + tableLfName + Where + DB2Lock); break; case oracle: case derby: default: assertLockTestSQLs(Select + tableLfName + Where + ForUpdate); , switch (getDBType(em)) { case db2: assertLockTestSQLs(Select + tableLfName + Where + DB2Lock); break; case oracle: case derby: default: assertLockTestSQLs(Select + tableLfName + Where + ForUpdate); 
1," if (!src.startsWith(""http"")) { String base = VirtualHostHelper.getServerURL(request, false); if (base != null && base.endsWith(""/"")) { base = base.substring(0, base.length() - 1); "," if (!src.startsWith(""http"")) { String XXXXX = VirtualHostHelper.getServerURL(request, false); if (XXXXX != null && XXXXX.endsWith(""/"")) { XXXXX = XXXXX.substring(0, XXXXX.length() - 1); "
0," String resourceLocation; if (System.getProperty(""os.name"").toLowerCase().contains(""windows"")) { resourceLocation = System.getProperty(""system.test.sample.location"").replace(""/"", ""\\""); ", MimeType mediaType = MimeType.getMatchingMimeType(headerValue.getValue()); if (MimeType.UNKNOWN.equals(mediaType)) { mediaType = MimeType.guessMediaTypeFromString(headerValue.getValue()); 
0, switch (featureID) { case EXTLibraryPackage.BOOK_ON_TAPE__READER: setReader((Person)newValue); return; case EXTLibraryPackage.BOOK_ON_TAPE__AUTHOR: setAuthor((Writer)newValue); return; , Admission admission = getAdmissionOrThrowNotFound(admissionCode); getTermService().addLinks(admission.getRegistrations()); getAppendixService().addLinks(admission); return getOkResponse(admission); 
1, this.fschema = fschema; Set<Schema> schemas = new HashSet<Schema>(); schemas.add(schema); schemaHelper = new SchemaHelper(schemas); typeTrace = new Stack<String>(); elemTrace = new Stack<String>(); , this.fschema = fschema; Set<Schema> schemas = new HashSet<Schema>(); schemas.add(schema); schemaHelper = new SchemaHelper(schemas); typeTrace = new Stack<String>(); elemTrace = new Stack<String>(); 
0," super(); this.recorder = recorder; this.maxDuration = maxDuration; this.levelDisplayingIcon = new LevelDisplayingIcon(new Icons().getStopIcon(), LEVEL_COLOR); setEnabled(false); resetRecordButton(); ", ICElement celem = null; IWorkbenchPart part = CUIPlugin.getActivePage().getActivePart(); if (part instanceof ContentOutline) { part = CUIPlugin.getActivePage().getActiveEditor(); 
1," servletContext.setVersion( 3, 0 ); servletContext.addServlet( ""fooServlet"", mock( Servlet.class ) ); try { application.setOperationMode( OperationMode.SESSION_FAILOVER ); fail(); "," servletContext.setVersion( 3, 0 ); servletContext.addServlet( ""fooServlet"", mock( Servlet.class ) ); try { application.setOperationMode( OperationMode.SESSION_FAILOVER ); fail(); "
0," Object oldCHILDBC = cHILDBC; cHILDBC = newCHILDBC; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, PowrmartPackage.SEBLLINK_TYPE__CHILDBC, oldCHILDBC, cHILDBC)); ", TestSuite testSuite = new TestSuite(); testSuite.addTest(ArchivedSetupTests.suite()); testSuite.addTest(PortletTests.suite()); testSuite.addTest(QuestionTests.suite()); return testSuite; 
0, StatisticsAW.shared().recordEvent(StatisticsAW.EVENT_GOTO_BACK); if(goToHistory.canGoBack()) { setCaretPosition(goToHistory.getBackPosition(getCaretPosition())); refreshMainMenuBar(); ," return graph.hasProperty(""ROUTING_TABLES_0"", RoutingTables.class) && (graph.hasProperty(""ID_SPACE_0"", IdentifierSpace.class) || graph .hasProperty(""DATA_STORAGE_0"", DataStoreList.class)); "
0, contributeLaunchersToToolbar(manager); manager.add(getExportAction()); IProduct product = ((IProductModel) getAggregateModel()).getProduct(); manager.add(new ProductValidateAction(product)); , int numBands = src.getNumBands(); int width = src.getWidth(); int height = src.getHeight(); int[] srcPix = null; int step = 0; int tidx = 0; if (dst == null) { dst = createCompatibleDestRaster(src); 
0," Roi roi = imp.getRoi(); if (roi!=null && roi.getType()==Roi.POINT) { Polygon p = roi.getPolygon(); if(p.npoints > 1) { IJ.error(""You can only have one point selected to mark.""); return; ", context.checking(new Expectations() { { allowing(actionContext).getParams(); will(returnValue(id)); allowing(findById).execute(with(any(FindByIdRequest.class))); will(returnValue(group)); 
0, focus(); event.preventDefault(); event.stopPropagation(); if (doubleClickState_.checkForDoubleClick(event.getNativeEvent())) fireEvent(new WindowStateChangeEvent(WindowState.MAXIMIZE)); ," final String fileName = request.getParameter(""fileName""); final String contents = request.getParameter(""contents""); Utils.writeFile(contents, Configuration.getAbsoluteUserPath(fileName), true); "
0, Request request = new Request(); if ( mediaTypeInRequest != null ) { request.getClientInfo().setAcceptedMediaTypes( Collections.singletonList( new Preference<MediaType>( mediaTypeInRequest ) ) ); ," if(yposition.endsWith(""%"")) { binfo.backgroundYPositionAbsolute = false; try { binfo.backgroundYPosition = (int) Double.parseDouble(yposition.substring(0, yposition.length() - 1).trim()); "
1," AtomicBoolean wasUnlocked = new AtomicBoolean(false); unlockInNewThread(handle, wasUnlocked); lock.lockAll(""B"", ""C""); specify(wasUnlocked.get()); specify(lock.getLockCount(), should.equal(2)); "," AtomicBoolean XXXXX = new AtomicBoolean(false); unlockInNewThread(handle, XXXXX); lock.lockAll(""B"", ""C""); specify(XXXXX.get()); specify(lock.getLockCount(), should.equal(2)); "
0," ChannelPipeline p = ctx.pipeline(); p.addLast(""decoder"", new BigIntegerDecoder()); p.addLast(""encoder"", new NumberEncoder()); p.addLast(""handler"", new FactorialServerHandler()); p.remove(this); "," sender.sendMessage(_(""teleportAll"")); for (Player onlinePlayer : server.getOnlinePlayers()) { final IUser player = ess.getUserMap().getUser(onlinePlayer); if (user == player) { continue; "
1," StringBuffer buffer = new StringBuffer(); buffer.append(""[SAVERECALC]\n""); buffer.append("" .recalc = "").append(getRecalc()) .append(""\n""); buffer.append(""[/SAVERECALC]\n""); return buffer.toString(); "," StringBuffer buffer = new StringBuffer(); buffer.append(""[SAVERECALC]\n""); buffer.append("" .recalc = "").append(getRecalc()) .append(""\n""); buffer.append(""[/SAVERECALC]\n""); return buffer.toString(); "
1," ExpressionFinder finder = new ExpressionFinder(); StringSourceBuffer sb = new StringSourceBuffer(test); try { assertEquals(test, finder.findForCompletions(sb, test.length() - 1)); "," ExpressionFinder XXXXX = new ExpressionFinder(); StringSourceBuffer XXXXX = new StringSourceBuffer(test); try { assertEquals(test, XXXXX.findForCompletions(XXXXX, test.length() - 1)); "
0," StringBuilder res = new StringBuilder(); res.append(super.getActionId()); res.append(""#""); res.append(((Object) this.cleanMake).toString()); res.append(""!""); return res.toString(); "," String paramName = elem.getAttributeValue(""out""); String text = this.sel.getHtmlSource(); logger.info(""getHtmlsource: paramName="" + paramName + "" text="" + text); addParam(paramName, text); "
0," try { String s = element.getContent(); Unmarshaller um = new JAXBElementProvider<Book>().getJAXBContext(Book.class, Book.class) .createUnmarshaller(); return (Book)um.unmarshal(new StringReader(s)); "," long[] a = this.a; int capacity = a.length; int n = this.n; int nNew = n + c; if (nNew > capacity) { long[] aNew = newArray(capacity, nNew); System.arraycopy(a, 0, aNew, c, n); this.a = aNew; "
0," for (int i = 0, max = cs.length(); i < max; i++) { final char c = cs.charAt(i); typedAction.actionPerformed(myFixture.getEditor(), c, ((EditorEx)myFixture.getEditor()).getDataContext()); "," if ( fmeasure == null ) { fmeasure = new Combo( parent, SWT.READ_ONLY ); for ( int i = 0; i < fMeasureNamesAndValues.length; i++ ) { fmeasure.add( fMeasureNamesAndValues[i][0], i ); "
0," String str = searchText.getText(); if (str.length() > 0) { clear(); listModel.addElement(""Searching...""); SearchType type = SearchType.FUZZY; if (place.isSelected()) { type = SearchType.PLACE; ", Table table = tableViewer.getTable(); for (int i = 0; i < table.getItemCount(); i++) { TableItem item = table.getItem(i); if (item.getData() == brickToSelect) { table.select(i); return; 
1, final JTableCellReader reader = createMock(JTableCellReader.class); new EasyMockTemplate(driver()) { @Override protected void expectations() { driver().cellReader(reader); expectLastCall().once(); , final JTableCellReader XXXXX = createMock(JTableCellReader.class); new EasyMockTemplate(driver()) { @Override protected void expectations() { driver().cellReader(XXXXX); expectLastCall().once(); 
0," this.name = name; this.id = id; this.priority = priority; this.keyExchange = keyExchange; this.cipher = cipher; this.exportable = cipher.exportable; if (name.endsWith(""_MD5"")) { macAlg = M_MD5; "," super(world); xTile = -1; yTile = -1; zTile = -1; inTile = 0; inData = 0; inGround = false; doesArrowBelongToPlayer = false; arrowShake = 0; ticksInAir = 0; soundTimer = 0; setSize(0.5F, 0.5F); "
0," Vector<OTTASK> OTs = new Vector<OTTASK>(10, 10); IO io = null; for (int i = 0; i < f.FMT.size(); i++) { io = f.FMT.elementAt(i); if ((!io.isInput()) || (!io.isAlice())) { continue; ", if (c.isTransactionalCache() && c.getTransactionManagerLookupClass() == null && c.getTransactionManagerLookup() == null) { c.setTransactionManagerLookupClass(TransactionSetup.getManagerLookup()); 
1," List<Integer> l = new SmartList<Integer>(); l.add(new Integer(1)); l.add(new Integer(2)); assertEquals(2, l.size()); assertEquals(1, l.get(0).intValue()); assertEquals(2, l.get(1).intValue()); "," List<Integer> l = new SmartList<Integer>(); l.add(new Integer(1)); l.add(new Integer(2)); assertEquals(2, l.size()); assertEquals(1, l.get(0).intValue()); assertEquals(2, l.get(1).intValue()); "
0," try { log.debug(""Testing list members - all null""); List<MemberResponseInfo> content = mSvc.listMembers(listId, MemberStatus.subscribed, null, null, null); log.debug(""Lists Content: {"," int iter = 0; double oldPerplexity = 0; while (iter < minIter) { trainDocuments(testFraction); if (verbose) { log.info(""model after: "" + iter + "": "" + modelTrainer.getReadModel().toString()); "
0," GL2 gl = drawable.getGL().getGL2(); gl.glMatrixMode(GL2ES1.GL_PROJECTION); gl.glLoadIdentity(); glu.gluOrtho2D(0, 1, 0, 1); gl.glMatrixMode(GL2ES1.GL_MODELVIEW); gl.glLoadIdentity(); "," File tmp = new File(dir.getPath() + File.separator + name); return (name.endsWith(XML_FILE_EXTENSION) || tmp.isDirectory()) && !name.startsWith(""CVS"") && !name.startsWith("".svn""); "
1," return getGroupId() + "":"" + getArtifactId() + "":"" + getVersion() + "":"" + ( getClassifier() == null ? """" : getClassifier() ) + "":"" + ( getType() == null ? DEFAULT_TYPE : getType() ); "," return getGroupId() + "":"" + getArtifactId() + "":"" + getVersion() + "":"" + ( getClassifier() == null ? """" : getClassifier() ) + "":"" + ( getType() == null ? DEFAULT_TYPE : getType() ); "
1," client = new ClientBuilder().active().buildForUnitTests(); savingsProduct = new SavingsProductBuilder().mandatory() .withMandatoryAmount(""33.0"") .appliesToClientsOnly() .buildForUnitTests(); "," client = new ClientBuilder().active().buildForUnitTests(); savingsProduct = new SavingsProductBuilder().mandatory() .withMandatoryAmount(""33.0"") .appliesToClientsOnly() .buildForUnitTests(); "
0, if (directory.canRead() && directory.isDirectory()) { File[] files = directory.listFiles(); for (int i = 0; i < files.length; i++) { File f = files[i]; if (f.isDirectory()) { purgeDirectory(f); , this.reasoner = reasoner; this.extractor = extractor; OWLOntology ontology = reasoner.getRootOntology(); for (OWLOntology ont : ontology.getImportsClosure()) { extractor.addOntology( ont ); 
0," KeyGenerator key; try { key = KeyGenerator.getInstance(""AES""); key.init(192, new SecureRandom()); SecretKey sk = key.generateKey(); System.arraycopy(sk.getEncoded(), 0, seed, 0, SEED_LENGTH); "," @NonNls final String text = expression.getText(); return ""0"".equals(text) || ""0x0"".equals(text) || ""0X0"".equals(text) || ""0.0"".equals(text) || ""0L"".equals(text) || ""0l"".equals(text); "
0," return kind == constrainedElement.getKind() && ReflectionHelper.haveSameSignature( location.getExecutableElement(), ( (ConstrainedMethod) constrainedElement ).getLocation().getExecutableElement() ); "," View v = convertView; if (v == null) { LayoutInflater vi = (LayoutInflater)fContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE); v = vi.inflate(R.layout.appwidgetpicker, null); "
0, if (isPaintBackgroundsAndBorders() && getStyle().isVisible()) { Rectangle bounds; if (c.isPrint() && getTable().getStyle().isPaginateTable()) { bounds = getContentLimitedBorderEdge(c); , PsiElement currentElem = null; if (rootBlockNode.getBlock() instanceof ASTBlock) { ASTNode node = ((ASTBlock)rootBlockNode.getBlock()).getNode(); if (node != null) { currentElem = node.getPsi(); 
0, _x = 0; _y = 0; __x = 0; __y = 0; startingBounds = null; JDesktopPane d; if((d = desktopIcon.getDesktopPane()) != null) { DesktopManager dm = d.getDesktopManager(); dm.endDraggingFrame(desktopIcon); ," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; "
0," for (int i = 0; i < connectionCount; i++) { System.out.printf(""%d %s\n"", i, connectionManager.toString()); connectionManager.connect().addListener(connectionListener).getUninterruptably(); "," StringBuilder sb = new StringBuilder(); sb.append(""{""); if (name != null) sb.append(""Name: "" + name + "", ""); if (version != null) sb.append(""Version: "" + version + "", ""); sb.append("""
0," LockableEntityPersister ep = (LockableEntityPersister)getPersister(o); if (ep == null) { throw new CannotAcquireLockException(""Cannot lock object ["" + o + ""]. It is not a persistent instance!""); "," mContext.enforceCallingOrSelfPermission(BLUETOOTH_PERM, ""Need BLUETOOTH permission""); if (!isEnabledInternal()) return false; if (!BluetoothAdapter.checkBluetoothAddress(address)) { return false; "
1, assertNull(resultBundle.get(AccountManager.KEY_ACCOUNT_NAME)); assertNull(resultBundle.get(AccountManager.KEY_ACCOUNT_TYPE)); assertNull(resultBundle.get(AccountManager.KEY_AUTHTOKEN)); , assertNull(resultBundle.get(AccountManager.KEY_ACCOUNT_NAME)); assertNull(resultBundle.get(AccountManager.KEY_ACCOUNT_TYPE)); assertNull(resultBundle.get(AccountManager.KEY_AUTHTOKEN)); 
1," GC gc = e.gc; gc.setFont(font); gc.setForeground(foreground); gc.drawString(text, 0, TOP_SPACE, true); Point size = getSize(); int w = size.x; int h = size.y; gc.drawLine(0, h - 1, w, h - 1); "," GC XXXXX = e.XXXXX; XXXXX.setFont(font); XXXXX.setForeground(foreground); XXXXX.draXXXXXString(text, 0, TOP_SPACE, true); Point XXXXX = getSize(); int XXXXX = XXXXX.x; int XXXXX = XXXXX.y; XXXXX.draXXXXXLine(0, XXXXX - 1, XXXXX, XXXXX - 1); "
0," EntityCacheUtil.putResult(KaleoInstanceModelImpl.ENTITY_CACHE_ENABLED, KaleoInstanceImpl.class, kaleoInstance.getPrimaryKey(), kaleoInstance); kaleoInstance.resetOriginalValues(); ", SimpleXMLParserDocumentAttribute[] attributes = getAttributes(); for (int i=0;i<attributes.length;i++){ if ( attributes[i].getName().equalsIgnoreCase( name )){ return( attributes[i] ); 
0, this.guid = guid; this.status = Status.Creating; this.totalMemory = 0; this.dom0MinMemory = 0; this.resourceState = ResourceState.Creating; this.uuid = UUID.randomUUID().toString(); ," if(filter.isDimensionRestrictedToSingleCategory(DimensionType.Activity)) { dispatcher.execute(new GetSchema(), new AsyncCallback<SchemaDTO>() { @Override public void onFailure(Throwable arg0) { "
1, Object result = _primary.findContentSerializer(a); if (result == null || result == JsonSerializer.None.class || result == NoClass.class) { result = _secondary.findContentSerializer(a); , Object XXXXX = _primary.findContentSerializer(a); if (XXXXX == null || XXXXX == JsonSerializer.None.class || XXXXX == NoClass.class) { XXXXX = _secondary.findContentSerializer(a); 
1," for (int i = 0; i < 10; i++) { int xPos = random.nextInt(16) + chunkX*16; int zPos = random.nextInt(16) + chunkZ*16; int yPos = random.nextInt(40) + 40; generate(world, random, xPos, yPos, zPos); "," for (XXXXXnt XXXXX = 0; XXXXX < 10; XXXXX++) { XXXXXnt XXXXX = random.nextInt(16) + chunkX*16; XXXXXnt XXXXX = random.nextInt(16) + chunkZ*16; XXXXXnt XXXXX = random.nextInt(40) + 40; generate(world, random, XXXXX, XXXXX, XXXXX); "
0," if (partRef.getId().equals(getSite().getId())) { pageSelectionListener.selectionChanged(getSite().getPage() .getActivePart(), getSite().getPage() .getSelection()); setTitleToolTip(null); ", if (this.parentRef == null) return; final Object parent = this.parentRef.get(); if (parent == null) { this.globalListeners.clear(); this.namedListeners.clear(); this.parentRef = null; 
0," Image result = (Image) images.get(name); if(allowLoading && result == null) { String path = (String) imagesToPath.get(name); if(path != null) { return loadImage(display,path,name); "," ActionMessages errors = new ActionMessages(); if (!StringUtil.hasLength(categoryId)) { errors.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage( ""errors.condition.insufficiency"")); "
1," ResolveMode resolveMode = ResolveMode.manual; try { String str = (String) model.genericGet(BndConstants.RESOLVE_MODE); if (str != null) resolveMode = Enum.valueOf(ResolveMode.class, str); "," ResolveMode resolveMode = ResolveMode.manual; try { String str = (String) model.genericGet(BndConstants.RESOLVE_MODE); if (str != null) resolveMode = Enum.valueOf(ResolveMode.class, str); "
1," RubyCodeExecTask task = new RubyCodeExecTask(""a""); task.run(); check(false, 1, ""-e:1:in `<main>': undefined local variable or method `a' for main:Object (NameError)\n"", """", task); "," RubyCodeExecTask XXXXX = new RubyCodeExecTask(""a""); XXXXX.run(); check(false, 1, ""-e:1:in `<main>': undefined local variable or method `a' for main:Object (NameError)\n"", """", XXXXX); "
0," synchronized (this) { checkRead(GetRead) ; Long x = Long.valueOf(id) ; add(GetRead, x) ; if ( activeWriteBlocks.contains(x)) activeWriteBlocks.add(x) ; else activeReadBlocks.add(x) ; "," Point locationOnScreen = locationOnScreen(c); Dimension size = sizeOf(c); Rectangle r = new Rectangle(locationOnScreen.x, locationOnScreen.y, size.width, size.height); return takeScreenshot(r); "
0," String id = ""foo$startTaskDefId""; TypeDefinition metadata = makeTypeDef(); WorkflowNode node = new WorkflowNode("""", """", """", """", false); return new WorkflowTaskDefinition(id, node, metadata); ", final ChannelCharacter cfrom = ChannelServer.getPlayerStorage().getCharacterByName(from); if (cfrom != null) { cfrom.getClient().write(ChannelPackets.denyGuildInvitation(c.getPlayer().getName())); 
1, this.lcInputData = lcInputData; this.withEuropeanRules = lcInputData.isWithEuropeanRules(); this.vCritEur = lcInputData.getCritSpeedEuroRules(); isInitialized = lcInputData.isInitializedMobilData(); , this.lcInputData = lcInputData; this.withEuropeanRules = lcInputData.isWithEuropeanRules(); this.vCritEur = lcInputData.getCritSpeedEuroRules(); isInitialized = lcInputData.isInitializedMobilData(); 
0," int first = s.indexOf(','); if (first == -1) return; int second = s.indexOf(',', first + 1); if (second == -1) return; String message = s.substring(second + 1); Log.i(""openvpn"", message); ", ResourceBundle bundle = null; if (ourBundle != null) bundle = ourBundle.get(); if (bundle == null) { bundle = ResourceBundle.getBundle(BUNDLE); ourBundle = new SoftReference<ResourceBundle>(bundle); 
0, ChildBoxInfo nested = lookForBlockContent(childrenForAnonymous); IdentValue anonDisplay; if (isParentInline(source) && next == IdentValue.TABLE) { anonDisplay = IdentValue.INLINE_TABLE; ," if (m_eventMgr == null) throw new IllegalStateException(""eventManager has not been set""); if (m_dataSource == null) throw new IllegalStateException(""dataSource has not been set""); "
1," final ContextualStatementBuilder statementBuilder = Stmt.loadStatic(TEnum.class, ""FIRST""); assertEquals(TEnum.class.getName() + "".FIRST"", statementBuilder.generate(Context.create())); "," final ContextualStatementBuilder XXXXX = Stmt.loadStatic(TEnum.class, ""FIRST""); assertEquals(TEnum.class.getName() + "".FIRST"", XXXXX.generate(Context.create())); "
1, try { ByteArrayOutputStream baos = new ByteArrayOutputStream(4096); original.write(baos); ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray()); return new HSSFWorkbook(bais); , try { ByteArrayOutputStream baos = new ByteArrayOutputStream(4096); original.write(baos); ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray()); return new HSSFWorkbook(bais); 
1, Object[] arguments = getContext().getArguments(); if (arguments.length > 0 && arguments[0] instanceof FraSCAtiServiceItf) { return (FraSCAtiServiceItf) getContext().getArguments()[0]; , Object[] arguments = getContext().getArguments(); if (arguments.length > 0 && arguments[0] instanceof FraSCAtiServiceItf) { return (FraSCAtiServiceItf) getContext().getArguments()[0]; 
1, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(StagingOrganizationTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , TestSuite XXXXX = new TestSuite(); XXXXX.addTest(LoginTests.suite()); XXXXX.addTest(StagingOrganizationTests.suite()); XXXXX.addTestSuite(StopSeleniumTest.class); return XXXXX; 
0," try { PImage img = new PImage(); img.setImage( iconImage ); img.setBounds(buttonPosition.x,buttonPosition.y,CalicoOptions.menu.icon_size,CalicoOptions.menu.icon_size); img.repaint(); return img; "," String oldOnzoom = onzoom; onzoom = newOnzoom; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_SVG_ELEMENT__ONZOOM, oldOnzoom, onzoom)); "
1," return new SNodePointer(""r:eca8e1c7-93fd-4ddf-9db6-91f9c2320691(jetbrains.mps.transformation.test.inputLang.generator.outputLang.template.test_reduceOneToMany@generator)"", ""8371596541809075900""); "," return new SNodePointer(""r:eca8e1c7-93fd-4ddf-9db6-91f9c2320691(jetbrains.mps.transformation.test.inputLang.generator.outputLang.template.test_reduceOneToMany@generator)"", ""8371596541809075900""); "
1," List<String[]> det=new ArrayList<String[]>(); for(int i=0;i<reg.detail.size();i++) { String s[]={reg.detail.get(i)[0],reg.getFeeGrid().getValue(4, i+1),reg.getFeeGrid().getValue(7, i+1)"," List<String[]> det=new ArrayList<String[]>(); for(int i=0;i<reg.detail.size();i++) { String s[]={reg.detail.get(i)[0],reg.getFeeGrid().getValue(4, i+1),reg.getFeeGrid().getValue(7, i+1)"
0," SystemProperty old = getSystemProperty(propertyId); if (repo.existsAnyOtherWithName(old, dto.getName())) { addConflictErrors(APIError.SYSTEM_PROPERTIES_DUPLICATED_NAME); flushErrors(); "," for (int i = e.getIndex0(); i <= e.getIndex1(); i++) { AbstractDialogPage page = _pageList.getPage(i); _tabbedPane.insertTab(page.getTitle(), page.getIcon(), page, page.getDescription(), i); "
1," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (op: ""); result.append(op); result.append(')'); return result.toString(); "," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (op: ""); result.append(op); result.append(')'); return result.toString(); "
1," if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; PTRank ptRank = (PTRank) o; return compare(ptRank.pValue, pValue) == 0 && tStatRank == ptRank.tStatRank; "," if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; PTRank XXXXX = (PTRank) o; return compare(XXXXX.pValue, pValue) == 0 && tStatRank == XXXXX.tStatRank; "
0, StatisticsController controller = Lookup.getDefault().lookup(StatisticsController.class); final StatisticsUI[] uis = getUI(statistics); for (StatisticsUI s : uis) { s.setup(statistics); ," super(representationClass, humanPresentableName); this.mimeType = super.getMimeType(); this.representationClass = representationClass; this.humanPresentableName = humanPresentableName; "
1, if(getMap() != null){ final CanvasController2D controller = getMap().getCanvas().getController(); final Date[] range = controller.getTemporalRange(); return range != null && range[0] != null; , if(getMap() != null){ final CanvasController2D controller = getMap().getCanvas().getController(); final Date[] range = controller.getTemporalRange(); return range != null && range[0] != null; 
1," StringUserTypeMapper mapper = new StringUserTypeMapper(null); assertNull(mapper.mapLdapEntryToSakaiUserType(new LDAPEntry(), new SimpleLdapAttributeMapper())); assertNull(mapper.getUserType()); "," StringUserTypeMapper XXXXX = new StringUserTypeMapper(null); assertNull(XXXXX.mapLdapEntryToSakaiUserType(new LDAPEntry(), new SimpleLdapAttributeMapper())); assertNull(XXXXX.getUserType()); "
1, stopGraphComputation(); fInput= input; fSelectedMember= member; fMemberSignatureToSelect= getLocalElementSignature(fSelectedMember); fRootNodes= null; fSelectedTypeNode= null; fTypeToSelect= input; , stopGraphComputation(); fInput= input; fSelectedMember= member; fMemberSignatureToSelect= getLocalElementSignature(fSelectedMember); fRootNodes= null; fSelectedTypeNode= null; fTypeToSelect= input; 
1, Properties runtimeProps = Framework.getRuntime().getProperties(); Properties props = AutoConfigurationService.readJndiProperties(runtimeProps); if (!props.isEmpty()) { host.setProperties(props); , Properties XXXXX = Framework.getRuntime().getProperties(); Properties XXXXX = AutoConfigurationService.readJndiProperties(XXXXX); if (!XXXXX.isEmpty()) { host.setProperties(XXXXX); 
0," ArrayList<Node> nodes = createNodes( 20 ); UnrolledLinkedList list = new UnrolledLinkedList( graphDb(), new EqualComparator(), 4 ); for ( Node node : nodes ) { list.addNode( node ); ", Transform3D temp = new Transform3D(); tg.getTransform(temp); Transform3D tempDelta = new Transform3D(); tempDelta.rotZ( degree * Math.PI / 180.0 ); temp.mul(tempDelta); tg.setTransform(temp); 
1," if (ivjDeleteMenuItem == null) { try { ivjDeleteMenuItem = new JMenuItem(); ivjDeleteMenuItem.setName(""DeleteMenuItem""); ivjDeleteMenuItem.setText(CALIDEMessages.getString(""CALIDE.DeleteMenuItem"")); "," if (ivjDeleteMenuItem == null) { try { ivjDeleteMenuItem = new JMenuItem(); ivjDeleteMenuItem.setName(""DeleteMenuItem""); ivjDeleteMenuItem.setText(CALIDEMessages.getString(""CALIDE.DeleteMenuItem"")); "
1," return new DefaultInspect( graph ){ @Override public boolean update(){ setName( ""SplitDockStation"" ); setValue( station ); put( ""root"", station.getRoot().getChild() ); return true; "," return new DefaultInspect( graph ){ @Override public boolean update(){ setName( ""SplitDockStation"" ); setValue( station ); put( ""root"", station.getRoot().getChild() ); return true; "
0, List visible = getVisible(); List list = new ArrayList(visible.size()); Iterator iterator = visible.iterator(); while (iterator.hasNext()) { list.add(((FieldEntry) iterator.next()).field); , this.accountId = account.getId(); this.name = account.getName(); this.key = account.getExternalKey(); if (account.getCurrency() != null) { this.currency = account.getCurrency().toString(); 
1," ColumnValues cv = new ColumnValues( columns, EMPTY_VALUE, new DTCellValue52() ); cv.setExpandColumn( false ); this.expandedColumns.put( dtable.getRowNumberCol(), cv ); this.columns.add( cv ); "," ColumnValues XXXXX = new ColumnValues( columns, EMPTY_VALUE, new DTCellValue52() ); XXXXX.setExpandColumn( false ); this.expandedColumns.put( dtable.getRowNumberCol(), XXXXX ); this.columns.add( XXXXX ); "
1, this.replacementOffset = replacementOffset; this.replacementLength = replacementLength; this.content = content; this.display = display; this.cursorPosition = cursorPosition; this.image = image; , this.replacementOffset = replacementOffset; this.replacementLength = replacementLength; this.content = content; this.display = display; this.cursorPosition = cursorPosition; this.image = image; 
1," final String s = contents.substring((int) offset, (int) Math.max(offset, Math.min(contents.length() - offset, offset + size))); buffer.put(s.getBytes()); return s.getBytes().length; "," final String XXXXX = contentXXXXX.XXXXXubXXXXXtring((int) offXXXXXet, (int) Math.max(offXXXXXet, Math.min(contentXXXXX.length() - offXXXXXet, offXXXXXet + XXXXXize))); buffer.put(XXXXX.getByteXXXXX()); return XXXXX.getByteXXXXX().length; "
1," super(context, R.drawable.stop_transfer_menu, (deleteData) ? R.string.cancel_delete_menu_action : R.string.cancel_menu_action); this.transfer = transfer; this.deleteData = deleteData; "," super(context, R.drawable.stop_transfer_menu, (deleteData) ? R.string.cancel_delete_menu_action : R.string.cancel_menu_action); this.transfer = transfer; this.deleteData = deleteData; "
0, assertFalse(mToggleButton.isChecked()); mToggleButton.setChecked(true); assertTrue(mToggleButton.isChecked()); mToggleButton.setChecked(false); assertFalse(mToggleButton.isChecked()); ," ActiveMQConnectionFactory cf = new ActiveMQConnectionFactory(""tcp: JmsConfiguration jmsConfig = new JmsConfiguration(cf); context.addComponent(""jms"", new JmsComponent(jmsConfig)); "
1," if (high == null) { final GeneralGridCoordinates.Immutable coords; coords = new GeneralGridCoordinates.Immutable(index, index.length/2, index.length); coords.translate(-1); high = coords; "," if (high == null) { final GeneralGridCoordinates.Immutable coords; coords = new GeneralGridCoordinates.Immutable(index, index.length/2, index.length); coords.translate(-1); high = coords; "
1," if (startColumn + colspan > columns.size()) PaperClips.error(SWT.ERROR_INVALID_ARGUMENT, ""Colspan "" + colspan + "" too wide at column "" + startColumn + "" ("" + columns.size() + "" columns total)""); "," if (startColumn + colspan > columns.size()) PaperClips.error(SWT.ERROR_INVALID_ARGUMENT, ""Colspan "" + colspan + "" too wide at column "" + startColumn + "" ("" + columns.size() + "" columns total)""); "
1," retry = 0; if (request.getSkyNetMsgID() == ((QueryForwardACKMsg) msg) .getSkyNetMsgID()) { log.debug(""TransMessage with ID = "" + commId + "" is received""); operationFinished(true); "," retry = 0; if (request.getSkyNetMsgXXXXX() == ((QueryForwardACKMsg) msg) .getSkyNetMsgXXXXX()) { log.debug(""TransMessage with XXXXX = "" + commId + "" is received""); operationFinished(true); "
1," RepositoryPlugin old = selectedRepository; selectedRepository = item; propSupport.firePropertyChange(PROP_SELECTED_REPO, old, selectedRepository); getContainer().updateButtons(); "," RepositoryPlugin XXXXX = selectedRepository; selectedRepository = item; propSupport.firePropertyChange(PROP_SELECTED_REPO, XXXXX, selectedRepository); getContainer().updateButtons(); "
1," StringBuilder sb = new StringBuilder(); sb.append(""{""); if (options != null) sb.append(""Options: "" + options + "", ""); if (status != null) sb.append(""Status: "" + status + "", ""); sb.append("""," StringBuilder sb = new StringBuilder(); sb.append(""{""); if (options != null) sb.append(""Options: "" + options + "", ""); if (status != null) sb.append(""Status: "" + status + "", ""); sb.append("""
1, this.notificationQueueService = notificationQueueService; this.config = config; this.entitlementApi = entitlementApi; this.listener = listener; this.callContextFactory = callContextFactory; , this.notificationQueueService = notificationQueueService; this.config = config; this.entitlementApi = entitlementApi; this.listener = listener; this.callContextFactory = callContextFactory; 
1," cam = AxisCamera.getInstance(""192.168.0.90""); dr = new PWMdrive(); ev = new Elevator(); st = new Shooter(); Watchdog.getInstance().setEnabled(false); tx.dsWrite(""The dog is dead. Cheer!"", 1); "," cam = AxisCamera.getInstance(""192.168.0.90""); dr = new PWMdrive(); ev = new Elevator(); st = new Shooter(); Watchdog.getInstance().setEnabled(false); tx.dsWrite(""The dog is dead. Cheer!"", 1); "
1, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(Address529LatestTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , TestSuite XXXXX = new TestSuite(); XXXXX.addTest(LoginTests.suite()); XXXXX.addTest(Address529LatestTests.suite()); XXXXX.addTestSuite(StopSeleniumTest.class); return XXXXX; 
0," if( force || this.accept( dockable ) ) { if( !force ) { Dockable replacement = getToolbarStrategy().ensureToolbarLayer( this, dockable ); if( replacement == null ) { return false; ", int count = this.getChildCount(); if (count > 0 && pressed == null) { View child = this.getChildAt(0); if (child instanceof Button && isFirstSelected()) { ((Button) child).setPressed(true); 
1, if (val == null) return 0; String str = null; if (val instanceof String) str = (String)val; else str = ((String[])val)[0]; if (str.trim().length() <= 0) return 0; try { return Integer.parseInt(str); , if (val == null) return 0; String XXXXX = null; if (val instanceof String) XXXXX = (String)val; else XXXXX = ((String[])val)[0]; if (XXXXX.trim().length() <= 0) return 0; try { return Integer.parseInt(XXXXX); 
1," SecurityPolicy security = SecurityPolicy.getInstance(this); if (!security.isActiveAdmin()) { if (mTriedAddAdministrator) { if (Email.DEBUG) { Log.d(TAG, ""Not active admin: repost notification""); "," SecurityPolicy XXXXX = SecurityPolicy.getInstance(this); if (!XXXXX.isActiveAdmin()) { if (mTriedAddAdministrator) { if (Email.DEBUG) { Log.d(TAG, ""Not active admin: repost notification""); "
1," session.zadd(""foo"", 1d, ""a""); session.zadd(""foo"", 2d, ""b""); long rank = session.zrevrank(""foo"", ""a""); assertEquals(1, rank); rank = session.zrevrank(""foo"", ""b""); assertEquals(0, rank); "," session.zadd(""foo"", 1d, ""a""); session.zadd(""foo"", 2d, ""b""); long rank = session.zrevrank(""foo"", ""a""); assertEquals(1, rank); rank = session.zrevrank(""foo"", ""b""); assertEquals(0, rank); "
1," PCGen_Frame1.getInst().hpTotal_Changed(); JFrame parentFrame = (JFrame) Utility.getParentNamed(getParent(), HPFrame.class.getName()); if (parentFrame != null) { parentFrame.dispose(); "," PCGen_Frame1.getInst().hpTotal_Changed(); JFrame XXXXX = (JFrame) Utility.getParentNamed(getParent(), HPFrame.class.getName()); if (XXXXX != null) { XXXXX.dispose(); "
0," final PsiElement element = instruction.getElement(); if (element == null) { for (Pair<InstructionImpl, GroovyPsiElement> pair : myPending) { addEdge(pair.getFirst(), instruction); "," SimpleDateFormat dateFormat; dateFormat = new SimpleDateFormat(""yyyy-MM-dd HH:mm:ss""); dateFormat.setTimeZone(TimeZone.getTimeZone(""UTC"")); try { return dateFormat.parse(utcString); "
0," Path other = mock(Path.class); when(other.isRoot()).thenReturn(true); assertThat(root.compareTo(other), is(0)); assertThat(root.equals(other), is(true)); assertThat(root.equals(root), is(true)); "," if (item.getItemId() == android.R.id.home) { Intent intent = new Intent(this, CardsActivity.class); intent.setFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP); startActivity(intent); return true; "
0," log.fine(""Sending asynchronous search for: "" + searchType.getString()); getConfiguration().getAsyncProtocolExecutor().execute( getProtocolFactory().createSendingSearch(searchType, mxSeconds) ); "," pool.returnCompiledXQuery(stringSource, preCompiledXQuery); StringSource localStringSource = new StringSource(TEST_XQUERY_SOURCE); callAndTestBorrowCompiledXQuery(localStringSource); "
1," return count.add(perCpu.multiply(BigDecimal.valueOf((long)Runtime.getRuntime().availableProcessors()), MathContext.DECIMAL64), MathContext.DECIMAL64).round(MathContext.DECIMAL64).intValueExact(); "," return count.add(perCpu.multiply(BigDecimal.valueOf((long)Runtime.getRuntime().availableProcessors()), MathContext.DECIMAL64), MathContext.DECIMAL64).round(MathContext.DECIMAL64).intValueExact(); "
1," if (Window.confirm(""Changes would be applied after a restart. Do you want to do it now ?"")) { presenter.getDeploymentManager().restartServiceProvider(serviceProvider.getServiceProvider()); "," if (Window.confirm(""Changes would be applied after a restart. Do you want to do it now ?"")) { presenter.getDeploymentManager().restartServiceProvider(serviceProvider.getServiceProvider()); "
1, ReplyEnvelope resultEnvelope = requestSender.send(new GetPanIdCommand()); resultEnvelope.checkForRuntimeException(); return ((NumberReplyEnvelope)resultEnvelope).getShortContents(); , ReplyEnvelope XXXXX = requestSender.send(new GetPanIdCommand()); XXXXX.checkForRuntimeException(); return ((NumberReplyEnvelope)XXXXX).getShortContents(); 
1," HyperlinkDef url = parseHyperLink( text ); float height = getContentHeight( text ); engine.addData( text.getText( ), text.getComputedStyle( ), url, text.getBookmark( ), height ); "," HyperlinkDef XXXXX = parseHyperLink( text ); float XXXXX = getContentHeight( text ); engine.addData( text.getText( ), text.getComputedStyle( ), XXXXX, text.getBookmark( ), XXXXX ); "
0," if (button == MouseEvent.BUTTON1) { final Point2D mouse = translateMouseCoords(e); for (InteractiveElement ie : interactives()) { if (ie.contains(mouse, state)) { setState(ie.click(state)); break; "," AccountStore.Account values = AccountManager.accountStore.get(name); String member = values.getAttribute(""take_breaks""); return member != null && member.equalsIgnoreCase(""true""); "
1," long[] a = this.a; int capacity = a.length; int n = this.n; int nNew = n + c; if (nNew > capacity) { long[] aNew = newArray(capacity, nNew); System.arraycopy(a, 0, aNew, 0, n); this.a = aNew; "," long[] a = this.a; int capacity = a.length; int n = this.n; int nNew = n + c; if (nNew > capacity) { long[] aNew = newArray(capacity, nNew); System.arraycopy(a, 0, aNew, 0, n); this.a = aNew; "
0, if (myPathTextField == null) return false; final String path = myPathTextField.getTextFieldText(); return path != null && new File(path.trim()).exists() && myFileName.getText().trim().length() > 0; , TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(Shopping6012LatestTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; 
0," YamlConfiguration yConfig = loadList(); if(yConfig.contains(playerName+"".Points"")){ int points = yConfig.getInt(playerName+"".Points""); a.loyaltyMap.put(playerName, points); return true; ", PsiLanguageInjectionHost host = InjectedLanguageManager.getInstance(element.getProject()).getInjectionHost(element); if (host instanceof RegExpLanguageHost) { return (RegExpLanguageHost)host; 
1," if (!started) { started = true; upToSpeed = true; trackerOutput = output(); try { source.transactionsAfter( configuration.get().lastOffset().get(), Long.MAX_VALUE ).transferTo( trackerOutput ); "," if (!started) { started = true; upToSpeed = true; trackerOutput = output(); try { source.transactionsAfter( configuration.get().lastOffset().get(), Long.MAX_VALUE ).transferTo( trackerOutput ); "
0," super(name); setEnabled(true); putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_HELP, Event.SHIFT_MASK | Event.ALT_MASK | Toolkit.getDefaultToolkit().getMenuShortcutKeyMask())); "," return repositorySystem.createArtifactWithClassifier( dependency.getGroupId(), dependency.getArtifactId(), dependency.getVersion(), dependency.getType(), dependency.getClassifier() ); "
0, PingTargetManager pingTargetMgr = WebloggerFactory.getWeblogger().getPingTargetManager(); if(getPingTargetId() != null) try { setPingTarget(pingTargetMgr.getPingTarget(getPingTargetId())); , TestSuite testSuite = new TestSuite(); testSuite.addTestSuite(AddPageTest.class); testSuite.addTestSuite(AddPortletTest.class); testSuite.addTestSuite(DeletePageTest.class); return testSuite; 
1," String _name = it.getName(); String _sourceText = ErlangLinkingHelper.this._modelExtensions.getSourceText(atom); boolean _equals = Objects.equal(_name, _sourceText); return Boolean.valueOf(_equals); "," String XXXXX = it.getName(); String XXXXX = ErlangLinkingHelper.this._modelExtensions.getSourceText(atom); boolean XXXXX = Objects.equal(XXXXX, XXXXX); return Boolean.valueOf(XXXXX); "
1," EDBObject result = new EDBObject(object.getOID()); for (JPAEntry kvp : object.getEntries()) { EDBObjectEntry entry = convertJPAEntryToEDBObjectEntry(kvp); result.put(entry.getKey(), entry); "," EDBObject XXXXX = new EDBObject(object.getOID()); for (JPAEntry kvp : object.getEntries()) { EDBObjectEntry XXXXX = convertJPAEntryToEDBObjectEntry(kvp); XXXXX.put(XXXXX.getKey(), XXXXX); "
0," context.checking(new Expectations() { { oneOf(mockSubjectHelper).determineSendingHomeCommunityId(with(any(HomeCommunityType.class)), with(any(AssertionType.class))); will(returnValue(""2.2"")); "," container.activate(tag.callback, 1); tag.callback.onFailed(e, container, context); tag.callback.removeFrom(container); if(tag.freeBucket) { tag.data.free(); tag.data.removeFrom(container); "
0," final String lengthString = xml.getAttributeValue(null, ATTRIBUTE_LENGTH); if (lengthString != null) { final int length = Integer.parseInt(lengthString); comic.setLength(length); ", if (event.getType() == EventType.DAMAGED_PLAYER) { if (event.getTargetId().equals(controllerId) && !damageSources.contains(event.getSourceId())) { damageSources.add(event.getSourceId()); 
1," ImageProcessor ip2 = new ShortProcessor(width, height, new short[width*height], getColorModel()); ip2.setMinAndMax(getMin(), getMax()); ip2.setInterpolationMethod(interpolationMethod); return ip2; "," ImageProcessor XXXXX = new ShortProcessor(width, height, new short[width*height], getColorModel()); XXXXX.setMinAndMax(getMin(), getMax()); XXXXX.setInterpolationMethod(interpolationMethod); return XXXXX; "
1," super(); setLayout( new BorderLayout( 0, 0 ) ); setResizable( false ); class LocaleListener implements ItemListener { public LocaleListener( Locale locale ) { this.locale = locale; "," super(); setLayout( new BorderLayout( 0, 0 ) ); setResizable( false ); class LocaleListener implements ItemListener { public LocaleListener( Locale locale ) { this.locale = locale; "
1," if (null == framework.getService(SERVICE_NAME)) { final NodeExecutorService service = new NodeExecutorService(framework); framework.setService(SERVICE_NAME, service); return service; "," if (null == framework.getService(SERVICE_NAME)) { final NodeExecutorService service = new NodeExecutorService(framework); framework.setService(SERVICE_NAME, service); return service; "
1," String oldToType = toType; toType = newToType; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, ProcessPackage.CONSTRAINT_TYPE__TO_TYPE, oldToType, toType)); "," String XXXXX = toType; toType = newToType; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, ProcessPackage.CONSTRAINT_TYPE__TO_TYPE, XXXXX, toType)); "
1, MasterSpec masterSpecForTest = super.getMasterSpecForTest(); try { Injector injector = view.utils().injector(); return injector.getInstance(CreateAndInstallVm.class).apply(masterSpecForTest); , MasterSpec XXXXX = super.getMasterSpecForTest(); try { Injector XXXXX = view.utils().XXXXX(); return XXXXX.getInstance(CreateAndInstallVm.class).apply(XXXXX); 
0, boolean prior = JenaParameters.disableBNodeUIDGeneration; try { JenaParameters.disableBNodeUIDGeneration = false; doTestAnonID(); JenaParameters.disableBNodeUIDGeneration = true; doTestAnonID(); , StringBuffer sb = new StringBuffer(); sb.append(REPOSITORY_DESCRIPTOR_PREFIX); for (DatabaseProperty field : DATABASE_FIELDS) { sb.append(fieldMap.get(field)); sb.append(SEPARATOR_CHAR); 
0," if (!mFileViewListener.shouldHideMenu(itemId)) { MenuItem item = menu.add(0, itemId, order, string).setOnMenuItemClickListener(menuItemClick); if (iconRes > 0) { item.setIcon(iconRes); "," super(EmptyKeyRelaxedTrustSSLContext.ALGORITHM + ""Provider"", 1.0, null); put( ""SSLContext."" + EmptyKeyRelaxedTrustSSLContext.ALGORITHM, EmptyKeyRelaxedTrustSSLContext.class.getName() ); "
0," path = path.toUpperCase(); final String[] split = path.split(""\\."", 2); CrazyLocale locale = get(split[0]); if (locale == null) { locale = new CrazyLocale(this, split[0]); put(split[0], locale); ", if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; PsiTypeItem that = (PsiTypeItem)o; if (myType == null) { if (that.myType != null) return false; 
1," StringBuilder sb = new StringBuilder(); sb.append(new MHeader().toString()); if (this.eDefaultPackage_SpecifiedPackage.size() > 0) { sb.append(System.getProperty(""line.separator"")); "," StringBuilder XXXXX = new StringBuilder(); XXXXX.append(new MHeader().toString()); if (this.eDefaultPackage_SpecifiedPackage.size() > 0) { XXXXX.append(System.getProperty(""line.separator"")); "
0," tag = HTML.Tag.HR; assertEquals(""hr"", tag.toString()); assertTrue(""breaks Flow"", tag.breaksFlow()); assertFalse(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); ", final int prime = 31; int result = 1; result = prime * result + x; result = prime * result + y; result = prime * result + z; result = prime * result + uuid.hashCode(); return result; 
0," String v = src.getIdentifier().getVariable(); if (v == null) return; int c = Integer.parseInt(v); if (midi_rpn_connections.get(c) == null) midi_rpn_connections.put(c, new int[]{ix", shouldbelogged = true; transctionOption = TransactionScopeOption.Required; setTaskGroupSuccess(true); taskStartTime = System.currentTimeMillis(); setParentCommand(VdcActionType.Unknown); 
1," IFolder oldSupplFolder = getTraceSupplementaryFolder(fResource.getName()); if (oldSupplFolder.exists()) { try { oldSupplFolder.copy(destination.getFullPath(), true, new NullProgressMonitor()); "," IFolder XXXXX = getTraceSupplementaryFolder(fResource.getName()); if (XXXXX.exists()) { try { XXXXX.copy(destination.getFullPath(), true, new NullProgressMonitor()); "
1," SimpleDateFormat sdf = new SimpleDateFormat(""EEE, d MMM yyyy HH:mm:ss Z""); Date date = Calendar.getInstance().getTime(); return ""BUG device resource created on "" + sdf.format(date) + "".""; "," SimpleDateFormat XXXXX = new SimpleDateFormat(""EEE, d MMM yyyy HH:mm:ss Z""); Date XXXXX = Calendar.getInstance().getTime(); return ""BUG device resource created on "" + XXXXX.format(XXXXX) + "".""; "
0," Object objToInsert = getObjectToInsert(); List oldList = (List)property; int insertPos = getElementPositionInList(getElement(), oldList); if ( insertPos == -1 ) { insertPos = oldList.size(); ", ATDeviceDetector[] detectors = getDetectors(); boolean completed = true; do { for (ATDeviceDetector portDetector : detectors) { if(!portDetector.isFinished()) { completed = false; 
1," String oldHandle = handle; handle = newHandle; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, WfsPackage.LOCK_TYPE__HANDLE, oldHandle, handle)); "," String XXXXX = handle; handle = newHandle; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, WfsPackage.LOCK_TYPE__HANDLE, XXXXX, handle)); "
0, int colNum = tColumn.getModelIndex(); switch (colNum) { case COL_LOADED: tColumn .setCellRenderer(new pcgen.gui.utils.JTableEx.AlignCellRenderer( SwingConstants.CENTER)); break; default: break; ," String protocol = ""http""; String port = ""9000""; if (Play.configuration.getProperty(""https.port"") != null) { port = Play.configuration.getProperty(""https.port""); protocol = ""https""; "
0," WindowConfigurationStorage storage = new WindowConfigurationStorage(); mController.storeDialogPositions(this, storage, WINDOW_PREFERENCE_STORAGE_PROPERTY); setVisible(false); this.dispose(); ", if (mappingTblViewer != null) { mappingTblViewer.setInput(controller.getMapper()); Table table = mappingTblViewer.getTable(); if (table.getItemCount() > 0) { table.showItem(table.getItem(0)); 
0, super(); this.dataType = dataType; this.charLength = charLength; this.dataLength = dataLength; this.dataPrecision = dataPrecision; this.dataScale = dataScale; this.nullable = nullable; ," jpaPersistentLoginMapper.deletePersistentLogin(""mrburns""); PersistentLogin foo = jpaPersistentLoginMapper.findByAccountId(""mrburns""); assertNull(""PersistentLogin still present after delete"", foo); "
0, Screen screen = event.getScreen(); if(screen instanceof AssistantScreen){ AssistantScreen ascreen = (AssistantScreen)screen; if(ascreen.getAssistant().isActive()){ ascreen.getAssistant().cancel(); ," super(c, sz, parent, ""Chat""); in = new TextEntry(new Coord(0, sz.y - 20), new Coord(sz.x, 20), this, """"); in.canactivate = true; out = new Textlog(Coord.z, new Coord(sz.x, sz.y - 20), this); "
1," dragPoints.add(new Point(e.getPoint())); nextMousePoint = e.getPoint(); drawLineSegment(curMousePoint, nextMousePoint); curMousePoint = nextMousePoint; updateMaxMin(nextMousePoint); "," dragPoints.add(new Point(e.getPoint())); nextMousePoint = e.getPoint(); drawLineSegment(curMousePoint, nextMousePoint); curMousePoint = nextMousePoint; updateMaxMin(nextMousePoint); "
0, String option = getCoreFormatterOption(DefaultCodeFormatterConstants.FORMATTER_INDENT_BODY_DECLARATIONS_COMPARE_TO_TYPE_HEADER); if (DefaultCodeFormatterConstants.FALSE.equals(option)) { return 0; ," StringBuilder sb = new StringBuilder(); sb.append(""{""); if (cancelledSpotInstanceRequests != null) sb.append(""CancelledSpotInstanceRequests: "" + cancelledSpotInstanceRequests + "", ""); sb.append("""
0," rooms.put(room.coords, room); placeItem(room.getItem(), room.getPrecond()); if (room.coords.x < bounds.left) { bounds = new Bounds(room.coords.x, bounds.top, bounds.right, bounds.bottom); ", WebMarkupContainer authorContainer = newAuthorContainer(); authorContainer.add(createAppropriateAuthorPanel()); authorContainer.add(createMetaInfoPanel()); return authorContainer; 
1, ICElement celem = null; IWorkbenchPart part = CUIPlugin.getActivePage().getActivePart(); if (part instanceof ContentOutline) { part = CUIPlugin.getActivePage().getActiveEditor(); , ICElement celem = null; IWorkbenchPart part = CUIPlugin.getActivePage().getActivePart(); if (part instanceof ContentOutline) { part = CUIPlugin.getActivePage().getActiveEditor(); 
0," switch(index) { case 0: return new ComplexType_Group_3(lastRuleCallOrigin, this, 0, inst); case 1: return new ComplexType_NameAssignment_2(lastRuleCallOrigin, this, 1, inst); default: return null; ", Set<String> importers = Sets.create(); for (Input input : context.getInputs()) { WindGateImporterDescription desc = extract(input.getDescription()); importers.add(desc.getProfileName()); 
0," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," if(itemstack == null) return false; NBTTagCompound tag = itemstack.getTagCompound(); if(tag != null) { int atoms = tag.getInteger(""atoms""); return isElementTube(itemstack) && atoms == 1; "
1, final List<DelegateType.Builder> builders = new ArrayList<DelegateType.Builder>(); for (DelegateTypeContract d : contract.getDelegates()) { builders.add(DelegateType.Builder.create(d)); , final List<DelegateType.Builder> builders = new ArrayList<DelegateType.Builder>(); for (DelegateTypeContract d : contract.getDelegates()) { builders.add(DelegateType.Builder.create(d)); 
1," if ( ignore .get(name) != null || name.contains(""rlb."") || name.contains(""util.escapeHtml"") || name.contains(""resourceLoaderBean.getString"")) { log.warn(""Ignoring ""+name); return value; "," if ( ignore .get(name) != null || name.contains(""rlb."") || name.contains(""util.escapeHtml"") || name.contains(""resourceLoaderBean.getString"")) { log.warn(""Ignoring ""+name); return value; "
0, boolean[] newTruthTable = new boolean[truthTable.length / 2]; for (int i = 0; i < newTruthTable.length; i++) newTruthTable[i] = truthTable[i << 1]; return new PrimitiveOperator(newTruthTable); ," this.from = from; this.hostID = hostID; this.hostname = hostname; this.nickname = nickname; this.username = username; this.port = port; if (nickname.length() == 0) { nickname = ""test""; "
1," UserBL user = new UserBL(order.getUserId()); addItem(itemId, quantity, user.getLanguage(), order.getUserId(), user.getEntity().getEntity().getId(), order.getCurrencyId(), order, null, persist); "," UserBL XXXXX = new UserBL(order.getUserId()); addItem(itemId, quantity, XXXXX.getLanguage(), order.getUserId(), XXXXX.getEntity().getEntity().getId(), order.getCurrencyId(), order, null, persist); "
0," return new ITypeHierarchyService () { public THGraph computeGraph(Scope scope, ICElement input, IProgressMonitor monitor) throws CoreException, InterruptedException { return new THGraph(); ", super.onCreate(savedInstanceState); setTitle(R.string.activity_title); flipView = new FlipViewController(this); flipView.setAdapter(new BaseAdapter() { @Override public int getCount() { return 10; 
0," super(processor); Guardian.assertNotNull(""processor"", processor); _request = processor.getRequest(); _oldStatus = oldStatus; _newStatus = processor.getCurrentStatus(); _exception = null; "," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; "
1, if (current.eResource() != null && current.eResource().getResourceSet() != null) this.resourceSet = current.eResource().getResourceSet(); multipleSampleForFlatReferencesTable.setInput(settings); , if (current.eResource() != null && current.eResource().getResourceSet() != null) this.resourceSet = current.eResource().getResourceSet(); multipleSampleForFlatReferencesTable.setInput(settings); 
1," LongTaskExecutor executor = new LongTaskExecutor(true); LongTaskExample longTaskExample = new LongTaskExample(); executor.execute(longTaskExample, longTaskExample, ""Task..."", null); "," LongTaskExecutor XXXXX = new LongTaskExecutor(true); LongTaskExample XXXXX = new LongTaskExample(); XXXXX.execute(XXXXX, XXXXX, ""Task..."", null); "
0, Set keySet = PARSERS.keySet(); Iterator iterator = keySet.iterator(); while (iterator.hasNext()) { String key = (String) iterator.next(); if (parserClassName.equals(PARSERS.get(key))) { return key; , while (property != null && property.contains(SystemConfiguration.ENV_VARIABLE_START) && property.contains(SystemConfiguration.ENV_VARIABLE_END)) { property = replaceSystemProperty(property); 
0," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (any: ""); result.append(any); result.append(')'); return result.toString(); ", OpsinResult result = parseChemicalName(name); Element cml = result.getCml(); if(cml != null && LOG.isDebugEnabled()){ LOG.debug(new XOMFormatter().elemToString(result.getCml())); 
0, graphics.setAntialias(SWT.ON); graphics.setAlpha((int) (currentTransparency * getDeclaration().getPadDefaultOpacity() * 255)); createPathes(); super.paintFigure(graphics); disposePathes(); , IJavaElement element= file.getParent(); while (element != null && element.getElementType() != IJavaElement.PACKAGE_FRAGMENT_ROOT) element= element.getParent(); return (IPackageFragmentRoot) element; 
1," int maxNameLength = 0; int maxArgsLength = 0; for (Command cmd : commands) { maxNameLength = Math.max(maxNameLength, cmd.name.length()); maxArgsLength = Math.max(maxArgsLength, cmd.args.length()); "," int maxNameLength = 0; int maxArgsLength = 0; for (Command cmd : commands) { maxNameLength = Math.max(maxNameLength, cmd.name.length()); maxArgsLength = Math.max(maxArgsLength, cmd.args.length()); "
1," if (lockInfo != null) { if (!TRANSACTION.equals(lockInfo.getType())) { throw new IllegalArgumentException(""Only 'transaction' type is allowed for a transaction-activelock object.""); "," if (lockInfo != null) { if (!TRANSACTION.equals(lockInfo.getType())) { throw new IllegalArgumentException(""Only 'transaction' type is allowed for a transaction-activelock object.""); "
1, storageLock.lock(); try { final List<ConfigurationLocation> configurationLocations = getConfigurationLocations(); if (!storage.containsKey(ACTIVE_CONFIG)) { return defaultLocation; , storageLock.lock(); try { final List<ConfigurationLocation> configurationLocations = getConfigurationLocations(); if (!storage.containsKey(ACTIVE_CONFIG)) { return defaultLocation; 
1, if (!hasSize) return false; if (!hasOffset) return false; if (!hasLeft) return false; if (!hasRight) return false; if (!hasTop) return false; if (!hasBottom) return false; return true; , if (!hasSize) return false; if (!hasOffset) return false; if (!hasLeft) return false; if (!hasRight) return false; if (!hasTop) return false; if (!hasBottom) return false; return true; 
1, final Product p = new Product(); List<ProductGroup> list = db.from(p). groupBy(p.category). orderBy(1). select(new ProductGroup() { { category = p.category; productCount = count(); , final Product XXXXX = new Product(); List<ProductGrouXXXXX> list = db.from(XXXXX). grouXXXXXBy(XXXXX.category). orderBy(1). select(new ProductGrouXXXXX() { { category = XXXXX.category; XXXXXroductCount = count(); 
1, if (_managed != null && _managed instanceof FilterMapping) { FilterMapping mapping = (FilterMapping)_managed; String name = mapping.getFilterName(); if (name != null) return name; , if (_managed != null && _managed instanceof FilterMapping) { FilterMapping XXXXX = (FilterMapping)_managed; String XXXXX = XXXXX.getFilterName(); if (XXXXX != null) return XXXXX; 
1," PartitionIterator itr = PartitionIterators.range(ogclient, 1, 3); for (int i = 1; i < 4; ++i) { Assert.assertTrue(""hasNext"", itr.hasNext()); Assert.assertEquals(""Wrong partition"", i, itr.next()); "," PartXXXXXtXXXXXonIterator XXXXX = PartXXXXXtXXXXXonIterators.range(ogclXXXXXent, 1, 3); for (XXXXXnt XXXXX = 1; XXXXX < 4; ++XXXXX) { Assert.assertTrue(""hasNext"", XXXXX.hasNext()); Assert.assertEquals(""Wrong partXXXXXtXXXXXon"", XXXXX, XXXXX.next()); "
1," String newLocation = """"; HttpURLConnection conn = null; try { if (Integer.parseInt(Build.VERSION.SDK) < Build.VERSION_CODES.FROYO) { System.setProperty(""http.keepAlive"", ""false""); "," String XXXXX = """"; HttpURLConnection XXXXX = null; try { if (Integer.parseInt(Build.VERSION.SDK) < Build.VERSION_CODES.FROYO) { System.setProperty(""http.keepAlive"", ""false""); "
0, try { IntHashtable t = (IntHashtable)super.clone(); t.table = new Entry[table.length]; for (int i = table.length ; i-- > 0 ; ) { t.table[i] = table[i] != null ? (Entry)table[i].clone() : null; ," View view = inflater.inflate(R.layout.map_simple, container, false); MapView mapView = (MapView)view.findViewById(R.id.mapview); mapView.setBuiltInZoomControls(true); return view; "
1, boolean useProjectSpecificSettings = enableProjectSpecific.getSelection(); if (useProjectSpecificSettings) { if (blockEnableState != null) { blockEnableState.restore(); blockEnableState = null; , boolean XXXXX = enableProjectSpecific.getSelection(); if (XXXXX) { if (blockEnableState != null) { blockEnableState.restore(); blockEnableState = null; 
1, AccountActionDateEntity nextAccountAction = getNextUnpaidDueInstallment(); return nextAccountAction != null ? nextAccountAction.getActionDate() : new DateTimeService() .getCurrentJavaSqlDate(); , AccountActionDateEntity XXXXX = getNextUnpaidDueInstallment(); return XXXXX != null ? XXXXX.getActionDate() : new DateTimeService() .getCurrentJavaSqlDate(); 
1," setLayout(new GridLayout()); setBorder(BorderFactory.createEmptyBorder(4, 4, 4, 4)); setPreferredSize(new Dimension(400, 400)); add(new JScrollPane(new JSortTable(makeModel()))); "," setLayout(new GridLayout()); setBorder(BorderFactory.createEmptyBorder(4, 4, 4, 4)); setPreferredSize(new Dimension(400, 400)); add(new JScrollPane(new JSortTable(makeModel()))); "
1, int min = 1; int start = gr.getStart(); int end = gr.getEnd(); int extendedStart = start - extension; int extendedEnd = end + extension; if (extendedStart < min) { gr.setExtendedStart(min); , int min = 1; int start = gr.getStart(); int end = gr.getEnd(); int extendedStart = start - extension; int extendedEnd = end + extension; if (extendedStart < min) { gr.setExtendedStart(min); 
1, if (_positiveEvaluationOutgoingPostConditions.contains(post)) { _positiveEvaluationOutgoingPostConditions.remove(post); post.setStartNode(null); setChanged(); notifyObservers(new PostRemoved(post)); , if (_positiveEvaluationOutgoingPostConditions.contains(post)) { _positiveEvaluationOutgoingPostConditions.remove(post); post.setStartNode(null); setChanged(); notifyObservers(new PostRemoved(post)); 
1," if(finished) Logger.error(this, ""objectCanNew but finished on ""+this, new Exception(""error"")); else if(logDEBUG) Logger.debug(this, ""objectCanNew() on ""+this, new Exception(""debug"")); return true; "," if(finished) Logger.error(this, ""objectCanNew but finished on ""+this, new Exception(""error"")); else if(logDEBUG) Logger.debug(this, ""objectCanNew() on ""+this, new Exception(""debug"")); return true; "
0," SNode baseNode = null; for (EditorOpenHandler handler : EditorOpenHandler.EP_OPEN_HANDLERS.getExtensions()) { baseNode = handler.getBaseNode(context, root); if (baseNode != null) break; "," if (xCol.equals(MyXViewerFactory.Run_Col)) { return xViewerTest.isRun((ISomeTask) element) ? MyImageCache.getImage(""chkbox_enabled.gif"") : MyImageCache.getImage(""chkbox_disabled.gif""); "
1," for (Canvas canvas : viewLayout.getMembers()) { if (canvas instanceof StatusControl) { StatusControl statusControl = (StatusControl) canvas; statusControl.setStatus(status, contents); return; "," for (Canvas canvas : viewLayout.getMembers()) { if (canvas instanceof StatusControl) { StatusControl XXXXX = (StatusControl) canvas; XXXXX.setStatus(status, contents); return; "
1," myRootsIndex = rootsIndex; myIgnoredFileIndex = ignoredFileIndex; myBuildTarget = target; myJarByPath = new HashMap<String, JarInfo>(); myDescriptors = new ArrayList<ArtifactRootDescriptor>(); "," myRootsIndex = rootsIndex; myIgnoredFileIndex = ignoredFileIndex; myBuildTarget = target; myJarByPath = new HashMap<String, JarInfo>(); myDescriptors = new ArrayList<ArtifactRootDescriptor>(); "
0," String file = null; File tmpDir = new File(getUserTmpDirectory()); int cnt = 0; while (true) { file = IOUtil.joinDir(tmpDir, ""tmpdir"" + cnt); if ( !(new File(file)).exists()) { break; "," double rlat = Math.atan2(z, Math.sqrt(x * x + y * y)); double rlon = getLongitudeRadians(); double c = r * Math.cos(rlat); x = c * Math.cos(rlon); y = c * Math.sin(rlon); z = r * Math.sin(rlat); "
0," LogPoint p = new LogPoint((int) (lat * 1E6), (int) (lon * 1E6)); p.setR(r); p.setG(g); p.setB(b); this.points.add(p); context.trace(""add points : "" + p.toLog()); try{ saveLog(p); "," Checks.checkNotNull(matcher, ""matcher""); matchers.add(0, matcher); if (getSettings() != null && matcher instanceof IvySettingsAware) { ((IvySettingsAware) matcher).setSettings(getSettings()); "
1," DB.insertUpdate(""UPDATE players SET online=?"", new IUStH(){ @Override public void handleInsertUpdate(PreparedStatement stmt) throws SQLException { stmt.setBoolean(1, online); stmt.execute(); "," DB.insertUpdate(""UPDATE players SET online=?"", new IUStH(){ @Override public void handleInsertUpdate(PreparedStatement stmt) throws SQLException { stmt.setBoolean(1, online); stmt.execute(); "
0," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; "," new DateTimeService().setCurrentDateTime(startDate.toDateTimeAtStartOfDay()); return TestObjectFactory.createMeeting(TestObjectFactory.getNewMeetingForToday(WEEKLY, recurEvery, CUSTOMER_MEETING)); "
1," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," EditorCell XXXXX = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, XXXXX, editorContext); return XXXXX; "
0," try { res.sendRedirect(getEndpoint() + (uri.lastIndexOf('?') == -1 ? (""?""+ PARAM_TICKETNAME_ALF_TICKET +""=""+ getTicket(context)) : (""&""+ PARAM_TICKETNAME_ALF_TICKET +""=""+getTicket(context)))); "," boolean returned = super.isSelectable(object); if (returned) { if (hasValueForParameter(""isSelectable"")) { return getBooleanParameteredValue(getValueForParameter(""isSelectable""), object); "
1," String oldRefSys = refSys; refSys = newRefSys; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, Wcs10Package.RANGE_SET_TYPE__REF_SYS, oldRefSys, refSys)); "," String XXXXX = refSys; refSys = newRefSys; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, Wcs10Package.RANGE_SET_TYPE__REF_SYS, XXXXX, refSys)); "
0, switch (featureID) { case BaseCSTPackage.ROOT_PACKAGE_CS__OWNED_IMPORT: getOwnedImport().clear(); return; case BaseCSTPackage.ROOT_PACKAGE_CS__OWNED_LIBRARY: getOwnedLibrary().clear(); return; ," this.parserContext = parserContext; this.muleContext = muleContext; this.localFactory = new InternalVariableResolverFactory(Collections.<String, Object> emptyMap()); this.nextFactory = localFactory; "
1," String oldStyle = style; style = newStyle; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, XhtmlPackage.XHTML_CAPTION_TYPE__STYLE, oldStyle, style)); "," String XXXXX = style; style = newStyle; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, XhtmlPackage.XHTML_CAPTION_TYPE__STYLE, XXXXX, style)); "
1," mLogger.debug(""looking up page [""+pageName+""]""); String template_id = null; try { ThemeTemplate pd = mWebsite.getTheme().getTemplateByName(pageName); if(pd != null) { template_id = pd.getId(); "," mLogger.debug(""looking up page [""+pageName+""]""); String XXXXX = null; try { ThemeTemplate XXXXX = mWebsite.getTheme().getTemplateByName(pageName); if(XXXXX != null) { XXXXX = XXXXX.getId(); "
0, Set<OWLDataRange> operands = or.getOperands(); ATerm[] terms = new ATerm[operands.size()]; int size = 0; for( OWLDataRange desc : operands ) { desc.accept( this ); terms[size++] = term; ," final Set<String> events = typesToCollect.get(); if (events.add(event)) { typesToCollect.set(events); log.info(String.format(""Added event type '%s' to list of events to send to the queue"", event)); "
1, LinkConstraints cached = EcoreDiagramEditorPlugin.getInstance().getLinkConstraints(); if (cached == null) { EcoreDiagramEditorPlugin.getInstance().setLinkConstraints(cached = new LinkConstraints()); , LinkConstraints cached = EcoreDiagramEditorPlugin.getInstance().getLinkConstraints(); if (cached == null) { EcoreDiagramEditorPlugin.getInstance().setLinkConstraints(cached = new LinkConstraints()); 
0," ModelNode address = Baseadress.get(); address.add(""subsystem"", ""resource-adapters""); address.add(""resource-adapter"", ""*""); address.add(""connection-definitions"", ""*""); return address; "," double interNodeDistance = getBufferedDistanceBetween(currentNode, otherNode); double coefficient = getNumberOfArcsOverNumberOfNodes(); if (coefficient == 0) { coefficient = 0.25; "
0, updateDescription(); if (schemaElement == null) updateRows(); for (int i = 0; i < rows.size(); i++) { ExtensionAttributeRow row = (ExtensionAttributeRow) rows.get(i); row.setInput(input); ," debug(""==Query started.""); List<QueryHit<GiaOverlayContact>> localQueryHits = qMgr.startQuery(query, hitsWanted); addQueryHits(localQueryHits); if (enoughHits()) { finishSuccessfully(); "
0," this.name = xmltrk.getChild(""name"").getContent(); XMLElement[] children = xmltrk.getChildren(""trkseg""); for (int i = 0; i < children.length; i++) { this.addTrackSeg(new GPXTrackSeg(children[i])); "," int errorCode = JdbcExceptionHelper.extractErrorCode( sqle ); if ( errorCode == 1 || errorCode == 2291 || errorCode == 2292 ) { return extractUsingTemplate( ""("", "")"", sqle.getMessage() ); "
0, int var2; for (var2 = 0; var2 < this.d.length; ++var2) { if (this.d[var2] != null && this.d[var2].c == itemId && (this.d[var2].a >= minAmount || this.d[var2].a <= maxAmount)) { return true; , PropertyTreeNode[] nodes = getPropertyTreeNodes(); for (int i = 0; i < nodes.length; i++) { PropertyTreeNode node = nodes[i]; if (property.equals(node.getRDFProperty())) { return node; 
0, if (mySession != null && session != null && mySession.getRevisionList().equals(session.getRevisionList())) return; mySession = session; if (mySession != null) { mySession.shouldBeRefreshed(); ," PreparedStatement p = null; try { p = JForumExecutionContext.getConnection().prepareStatement( SystemGlobals.getSql(""TopicModel.decrementTotalReplies"")); p.setInt(1, topicId); p.executeUpdate(); "
0," switch ( icing ) { case 1: case 2: case 3: return ""Light icing""; case 4: case 5: case 6: return ""Moderate icing""; case 7: case 8: case 9: return ""Severe icing""; default: return ""No icing""; "," QuerySpec qs=new QuerySpec(); qs.setCollection(""OrderService""); qs.setParent(""ServiceResponseTime""); qs.setPredicate(new MVEL( ""serviceType == \""{urn:switchyard-quickstart-demo:orders:0.1.0"
0," DamageSource theSource = CanaryDamageSource.getDamageSourceFromType(damagetype); if(theSource != null){ ((OEntityLiving) entity).a(((CanaryDamageSource) theSource).getHandle(), amount); "," Style style = new Style(cell); style.set(StyleAttributes.PUNCTUATION_LEFT, true); style.set(StyleAttributes.PUNCTUATION_RIGHT, true); style.set(StyleAttributes.SELECTABLE, false); return style; "
1," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; "," EditorCell XXXXX = null; XXXXX = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, XXXXX, editorContext); return XXXXX; "
0, if (e.getClass() != this.getClass()) return false; CloseElementEventNSImpl ce = (CloseElementEventNSImpl)e; return (ce.getURI().equals(this.getURI()) && ce.getName().equals(this.getName())); ," long oldIndexUsage = profiler.getCounter(""Query.indexUsage""); long oldCompositeIndexUsage = profiler.getCounter(""Query.compositeIndexUsage""); if (oldIndexUsage == -1) { oldIndexUsage = 0; "
1," this.x = x; double width = (xMax - xMin) / children.size(); for (int i= 0; i < children.size(); i++) { double x1 = xMin + i*width; children.get(i).setX(x1 + 0.5*width, x1, x1+width); "," this.x = x; double XXXXX = (xMax - xMin) / children.size(); for (int i= 0; i < children.size(); i++) { double XXXXX = xMin + i*XXXXX; children.get(i).setX(XXXXX + 0.5*XXXXX, XXXXX, XXXXX+XXXXX); "
1," Map map= focus ? fFocusColors : fColors; RGB color= (RGB) map.get(revision); if (color != null) return color; color= adaptColor(revision, focus); map.put(revision, color); return color; "," Map map= focus ? fFocusColors : fColors; RGB color= (RGB) map.get(revision); if (color != null) return color; color= adaptColor(revision, focus); map.put(revision, color); return color; "
1," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; "," EditorCell XXXXX = null; XXXXX = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, XXXXX, editorContext); return XXXXX; "
1," final TestProxy testProxy = TestProxyClient.from(value); if (testProxy != null) { TestRenderer.renderTest(testProxy, this); setIcon(TestRenderer.getIconFor(testProxy, myProperties.isPaused())); "," final TestProxy XXXXX = TestProxyClient.from(value); if (XXXXX != null) { TestRenderer.renderTest(XXXXX, this); setIcon(TestRenderer.getIconFor(XXXXX, myProperties.isPaused())); "
0, this.topTrace = TopTrace; this.bottomTrace = BottomTrace; this.rake = rake; this.mfd = mfd; this.floatRuptureFlag = floatRuptureFlag; this.tectReg = TectonicRegionType.SUBDUCTION_INTERFACE; , if (this.pienempiLeveys == pienempiLeveys && this.suurempiLeveys == suurempiLeveys && this.syvyys == syvyys && palikkasetti.toLowerCase().equals(this.palikkasetti.toLowerCase())) { return true; 
1," consoleProcess_.writeStandardInput( input, new VoidServerRequestCallback() { @Override public void onError(ServerError error) { outputWriter_.consoleWriteError(error.getUserMessage()); "," consoleProcess_.writeStandardInput( input, new VoidServerRequestCallback() { @Override public void onError(ServerError error) { outputWriter_.consoleWriteError(error.getUserMessage()); "
1," return new JExpression( _(AN._, _(GET._, _(ANY._, ""error"", _(WITH._, ""code"", value(code)) ), _(ANY._, ""site"", _(WITH._, ""server-name"", value(site)) ) ), _(AN._, ""stack-trace"", value(trace)) ) ); "," return new JExpression( _(AN._, _(GET._, _(ANY._, ""error"", _(WITH._, ""code"", value(code)) ), _(ANY._, ""site"", _(WITH._, ""server-name"", value(site)) ) ), _(AN._, ""stack-trace"", value(trace)) ) ); "
1, switch (featureID) { case ErlangPackage.FUN_CALL__TARGET: return target != null; case ErlangPackage.FUN_CALL__ARGS: return args != null; case ErlangPackage.FUN_CALL__ARGS2: return args2 != null; , switch (featureID) { case ErlangPackage.FUN_CALL__TARGET: return target != null; case ErlangPackage.FUN_CALL__ARGS: return args != null; case ErlangPackage.FUN_CALL__ARGS2: return args2 != null; 
1," try { Field op; op = YamlConfiguration.class.getDeclaredField(""yamlOptions""); op.setAccessible(true); DumperOptions options = (DumperOptions) op.get(this); options.setWidth(200); "," try { Field op; op = YamlConfiguration.class.getDeclaredField(""yamlOptions""); op.setAccessible(true); DumperOptions XXXXX = (DumperOptions) op.get(this); XXXXX.setWidth(200); "
0," RollListFragment frag = new RollListFragment(); Bundle args = new Bundle(); args.putInt(""type"", ROLLS_RECENT); frag.setArguments(args); frag.setRetainInstance(true); return frag; "," super(game, input, ""basic""); connection = con; map.Add(new Player(input, map, Game.spawns[0][0], Game.spawns[0][1], 0)); map.Add(new Player(con, map, Game.spawns[1][0], Game.spawns[1][1], 1)); "
0," switch(kind){ case MIPS: return GetProperties.getMIPSBudgetInMIPS(ne, 0.0); case RAM: return GetProperties.getRAMBudgetInKB(ne, 0.0); case ROM: return GetProperties.getROMBudgetInKB(ne, 0.0); "," deferTask(Bukkit.getPlayerExact(playerName), new Runnable() { @Override public void run() { ChessGame game = ChessGame.getCurrentGame(playerName, true); game.invitePlayer(playerName, inviteeName); "
1," if (response) { Log.info(""Value saved successfully""); initPatientInSemester(true, false,false); showApplicationLoading(false); manualStdPatientInSemesterAssignmentPopupViewImpl.hide(); "," if (response) { Log.info(""Value saved successfully""); initPatientInSemester(true, false,false); showApplicationLoading(false); manualStdPatientInSemesterAssignmentPopupViewImpl.hide(); "
1," if (ivjIntermediatePanel == null) { try { ivjIntermediatePanel = new JPanel(); ivjIntermediatePanel.setName(""IntermediatePanel""); ivjIntermediatePanel.setLayout(new BorderLayout()); "," if (ivjIntermediatePanel == null) { try { ivjIntermediatePanel = new JPanel(); ivjIntermediatePanel.setName(""IntermediatePanel""); ivjIntermediatePanel.setLayout(new BorderLayout()); "
0," KAndJoin join = newAndJoin(0, 1); this.procedure.setJoin(join); KProcess process = this.program.newProcess(null); new KProcessor().execute(process); assertFalse(join.isEnabled(process)); "," if (!mTimeout) { if (mCurrentDialog == DIALOG_YES_NO_CONNECT) { sendIntentToReceiver(BluetoothPbapService.ACCESS_ALLOWED_ACTION, BluetoothPbapService.EXTRA_ALWAYS_ALLOWED, mAlwaysAllowedValue); "
1," int scrollLeft = getElement().getScrollLeft(); if (scrollLeft > 0) { int clientWidth = getElement().getClientWidth(); scrollLock.getStyle().setWidth(scrollLeft + clientWidth, Unit.PX); "," int scrollLeft = getElement().getScrollLeft(); if (scrollLeft > 0) { int clientWidth = getElement().getClientWidth(); scrollLock.getStyle().setWidth(scrollLeft + clientWidth, Unit.PX); "
1, int n = 51; double incrT = finalTime/(double)(n-2); double cdata[][] = new double [2][n]; cdata[0][0]=0.0D; cdata[1][0]=0.0D; for(int i=2; i<n; i++){ cdata[0][i]=cdata[0][i-1]+incrT; , iXXXXXt XXXXX = 51; double iXXXXXcrT = fiXXXXXalTime/(double)(XXXXX-2); double cdata[][] = XXXXXew double [2][XXXXX]; cdata[0][0]=0.0D; cdata[1][0]=0.0D; for(iXXXXXt i=2; i<XXXXX; i++){ cdata[0][i]=cdata[0][i-1]+iXXXXXcrT; 
1," RegionWidgetRenderer renderer = supportedWidgets.get(widget.getWidget().getType()); if(renderer == null) { throw new NotSupportedException(widget.getWidget().getType() + "" is not supported""); "," RegionWidgetRenderer renderer = supportedWidgets.get(widget.getWidget().getType()); if(renderer == null) { throw new NotSupportedException(widget.getWidget().getType() + "" is not supported""); "
1," Assert.assertFalse(stateManager.isDirty(persistent)); stateManager.setDirty(persistent, 0); stateManager.clearDirty(persistent); Assert.assertFalse(this.stateManager.isDirty(persistent)); "," Assert.assertFalse(stateManager.isDirty(persistent)); stateManager.setDirty(persistent, 0); stateManager.clearDirty(persistent); Assert.assertFalse(this.stateManager.isDirty(persistent)); "
1," FileFilter filter = new FileFilter() { public boolean accept(File candidate) { return candidate.isDirectory() && (candidate.getName().equals(target) || candidate.getName().startsWith(target + ""_"")); "," FileFilter XXXXX = new FileFilter() { public boolean accept(File candidate) { return candidate.isDirectory() && (candidate.getName().equals(target) || candidate.getName().startsWith(target + ""_"")); "
0, htmlTextEditor.getDocument().removeDocumentListener(htmlTextListener); htmlTextEditor.setText(docTextEditor.getText()); htmlTextEditor.getDocument().addDocumentListener(htmlTextListener); ," EAnnotation an = eModelElement.getEAnnotation(""http: String text = null; if (an != null) { if (an.getDetails().containsKey(""documentation"")) { text = an.getDetails().get(""documentation""); "
1, final Context context = parent.getContext(); final PackageManager packageManager = context.getPackageManager(); if (mInflater == null) { mInflater = LayoutInflater.from(context); , final Context XXXXX = parent.getContext(); final PackageManager XXXXX = XXXXX.getPackageManager(); if (mInflater == null) { mInflater = LayoutInflater.from(XXXXX); 
0, this.streamNum = streamNum; this.childNode = childNode; this.indexNode = indexNode; this.eventsPerStream = new EventBean[streamNum + 1]; this.constant = constant; this.isFirst = isFirst; ," int xpos = (int) ((((float)drawCrossHairAt/(lastEnd-lastStart)))*getWidth()); g.drawLine(xpos, 0, xpos, getHeight()); g.drawString(Integer.toString(drawCrossHairAt+lastStart), xpos+1, 10); "
1," String[] enclosingProjectName= getContainer().getSelectedProjectNames(); if (enclosingProjectName == null) { return FileTextSearchScope.newWorkspaceScope(getExtensions(), fSearchDerived); "," String[] enclosingProjectName= getContainer().getSelectedProjectNames(); if (enclosingProjectName == null) { return FileTextSearchScope.newWorkspaceScope(getExtensions(), fSearchDerived); "
1, boolean isReadOnly = readOnlyMode; RepositoryObjectHandler elementHandler = null; if (!isReadOnly) { try { elementHandler = new ReadWriteRepositoryObjectHandlerImpl(repositoryAdapter); , boolean XXXXX = readOnlyMode; RepositoryObjectHandler XXXXX = null; if (!XXXXX) { try { XXXXX = new ReadWriteRepositoryObjectHandlerImpl(repositoryAdapter); 
1, fComponent = fModel.getDSComponent(); if (fComponent != null) fImplementation = fComponent.getImplementation(); if (e.getChangeType() == IModelChangedEvent.WORLD_CHANGED) { markStale(); , fComponent = fModel.getDSComponent(); if (fComponent != null) fImplementation = fComponent.getImplementation(); if (e.getChangeType() == IModelChangedEvent.WORLD_CHANGED) { markStale(); 
0," scanAction.putValue(Action.NAME, I18n.getMessage(""jsite.project-files.action.rescan"")); scanAction.putValue(Action.SHORT_DESCRIPTION, I18n.getMessage(""jsite.project-files.action.rescan.tooltip"")); "," IStructuredSelection selection = OwlUI.getActiveFeedViewSelection(); if (selection != null && !selection.isEmpty()) Controller.getDefault().share(selection, fProvider); return null; "
0, Node copy = super.copy(); ((OpMemberNode) copy).method = this.method; ((OpMemberNode) copy).receivingObj = this.receivingObj; ((OpMemberNode) copy).returnObj = this.returnObj; return copy; , BatchObject bObj; int i; for( i = 0; i < batchVector.size(); i++ ) { bObj = (BatchObject) batchVector.get( i ); if( (bObj.command == BatchObject.CMD_LABEL) && (bObj.labelObj.equals( label ))) break; 
0, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(WikiTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; ," IRegistry<String, IAdditionalModelFactory> additionalModelFactoryRegistry = characterGenerics.getAdditionalModelFactoryRegistry(); registerGodBloodedInheritance(additionalModelFactoryRegistry); "
0," Group g = JOPUIUtils.createHorizontalGrabGroup(parent); simulateButton = createCheckButton(g, ""Simulate with JopSim (overrides other settings)""); simulateButton.addSelectionListener(listener); ", double totalWeight = getTotalWeight(); return Math.sqrt((totalWeightedSquaredData * totalWeight - totalWeightedData * totalWeightedData) / (totalWeight * totalWeight - totalSquaredWeight)); 
0," Owner owner2 = createOwner(); ownerCurator.create(owner2); List<Subscription> subs = adapter.getSubscriptions(owner2, parentProduct.getId().toString()); assertEquals(0, subs.size()); ", if( !(desc instanceof OWLObjectComplementOf) ) return null; OWLClassExpression not = ((OWLObjectComplementOf) desc).getOperand(); if( not.isAnonymous() ) return null; return (OWLClass) not; 
0, switch (featureID) { case UmlStatePackage.DO_RULE__KIND: setKind((BehaviorKind)newValue); return; case UmlStatePackage.DO_RULE__BEHAVIOR_NAME: setBehaviorName((String)newValue); return; ," int count = last - first; int[] x1 = new int[count]; int[] y1 = new int[count]; System.arraycopy(x, first, x1, 0, count); System.arraycopy(y, first, y1, 0, count); return new Polygon(x1, y1, count); "
0," mDisablingDialog.hide(); mToggleButton.setEnabled(false); Intent intent = new Intent(BluetoothAdapter.ACTION_REQUEST_ENABLE); startActivityForResult(intent, START_ENABLE_BLUETOOTH_REQUEST); "," this.cacheManager = cacheManager; this.mBeanServer = mBeanServer; status = Status.UNINITIALISED; try { for (Cache<?, ?> cache : this.cacheManager.getCaches()) { registerCacheStatistics(cache); "
1, ThreadLocalByteBuffer byteBuffer = threadLocal.get(); if (byteBuffer != null) return byteBuffer; byteBuffer = new ThreadLocalByteBuffer(); threadLocal.set(byteBuffer); return byteBuffer; , ThreadLocalByteBuffer XXXXX = threadLocal.get(); if (XXXXX != null) return XXXXX; XXXXX = new ThreadLocalByteBuffer(); threadLocal.set(XXXXX); return XXXXX; 
1, PsiElement fchild = expr; while (fchild != null) { if (fchild instanceof GrLiteral && GrStringUtil.isRegex((GrLiteral)fchild)) return (GrLiteral)fchild; fchild = fchild.getFirstChild(); , PsiElement XXXXX = expr; while (XXXXX != null) { if (XXXXX instanceof GrLiteral && GrStringUtil.isRegex((GrLiteral)XXXXX)) return (GrLiteral)XXXXX; XXXXX = XXXXX.getFirstChild(); 
1, JSObjectMetaData meta = JSSyntaxContext.getEnginJSObject( method.getReturnType( ) ); if ( meta == null ) { try { return JSSyntaxContext.getJavaClassMeta( method.getReturnType( ) ); , JSObjectMetaData meta = JSSyntaxContext.getEnginJSObject( method.getReturnType( ) ); if ( meta == null ) { try { return JSSyntaxContext.getJavaClassMeta( method.getReturnType( ) ); 
0, EntityCacheUtil.removeCache(AnnouncementsDeliveryImpl.class.getName()); FinderCacheUtil.removeCache(FINDER_CLASS_NAME_ENTITY); FinderCacheUtil.removeCache(FINDER_CLASS_NAME_LIST); , this.batchSize = batchSize; this.nodeHost = nodeHost; this.publishAuthUser = publishAuthUser; this.publishAuthPassword = publishAuthPassword; this.publishProtocol = publishProtocol; 
1," final Collection<VirtualFile> selected = myStructureFilterI.getSelected(); if (myStructureFilterI.isAllSelected()) { myLabel.setText(ALL); myPanel.setToolTipText(STRUCTURE + "" "" + ALL); "," final Collection<VirtualFile> selected = myStructureFilterI.getSelected(); if (myStructureFilterI.isAllSelected()) { myLabel.setText(ALL); myPanel.setToolTipText(STRUCTURE + "" "" + ALL); "
1," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," EditorCell XXXXX = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, XXXXX, editorContext); return XXXXX; "
0, if ((anObject instanceof ResSetBuildTimePair) && (((ResSetBuildTimePair) anObject).getRolls() == rolls) && (((ResSetBuildTimePair) anObject).getResources().equals(resources))) { return true; ," StringBuilder sb = new StringBuilder(); sb.append(""id: "").append(getId()).append("" classId: "").append(getEntryClassId()).append("" values: "") .append(getValues()); return sb.toString(); "
0, return externalIpAddress(in.getExternalIpAddress()) .externalPort(in.getExternalPort()) .internalIpAddress(in.getInternalIpAddress()) .internalPort(in.getInternalPort()) .protocol(in.getProtocol()); , final StaticStateGlobalOps globalOps = containingDocument.getStaticOps(); final LHHAAnalysis analysis = globalOps.getHelp(getPrefixedId()); return analysis != null && analysis.isLocal(); 
1," ClearCaseChangeLogEntry entry = new ClearCaseChangeLogEntry(); entry.setDateStr(""Tue Aug 28 15:27:00 CEST 2007""); assertEquals(""Tue Aug 28 15:27:00 CEST 2007"", entry.getDateStr()); "," ClearCaseChangeLogEntry XXXXX = new ClearCaseChangeLogEntry(); XXXXX.setDateStr(""Tue Aug 28 15:27:00 CEST 2007""); assertEquals(""Tue Aug 28 15:27:00 CEST 2007"", XXXXX.getDateStr()); "
1," Classifier classifier = getClassifier( feature ); org.opengis.filter.expression.Expression expression = getExpression(); return new Integer(classifier.classify(expression, feature)); "," Classifier XXXXX = getClassifier( feature ); org.opengis.filter.XXXXX.Expression XXXXX = getExpression(); return new Integer(XXXXX.classify(XXXXX, feature)); "
1, int id = Integer.parseInt(evt.getActionCommand()); switch (id) { case ADD: addItem(); break; case ADD_ALL: addAllItems(); break; case REMOVE: removeItem(); break; case REMOVE_ALL: removeAllItems(); , int XXXXX = Integer.parseInt(evt.getActionCommand()); switch (XXXXX) { case ADD: addItem(); break; case ADD_ALL: addAllItems(); break; case REMOVE: removeItem(); break; case REMOVE_ALL: removeAllItems(); 
0, LdapSyntax copy = new LdapSyntax( oid ); copy.copy( this ); copy.isHumanReadable = isHumanReadable; copy.hasHumanReadableFlag = hasHumanReadableFlag; copy.syntaxChecker = null; return copy; , DitContentRule copy = new DitContentRule( oid ); copy.copy( this ); copy.auxObjectClassOids = new ArrayList<String>(); for ( String oid : auxObjectClassOids ) { copy.auxObjectClassOids.add( oid ); 
1," Container c = getContentPane(); c.setLayout(new BoxLayout(c, BoxLayout.Y_AXIS)); c.add(header, BorderLayout.NORTH); c.add(body, BorderLayout.CENTER); c.add(buildToolBar(), BorderLayout.SOUTH); "," Container XXXXX = getContentPane(); XXXXX.setLayout(new BoxLayout(XXXXX, BoxLayout.Y_AXIS)); XXXXX.add(header, BorderLayout.NORTH); XXXXX.add(body, BorderLayout.CENTER); XXXXX.add(buildToolBar(), BorderLayout.SOUTH); "
0," runBenchmark( new Runnable() { @Override public void run() { try { XMLInputFactory inputFactory = new BadgerFishXMLInputFactory(); benchParse( inputFactory, CONTENT_SAMPLE_JSON_BADGER ); "," Order order = Fixture.from(Order.class).gimme(""otherValid""); for (Item item : order.getItems()) { assertTrue(""order relationship with item should have the same reference"", item.getOrder() == order); "
0," MethodCache.remove(PatientService.class); _service = service; ReferenceRegistry.registerReference(PatientServiceUtil.class, ""_service""); MethodCache.remove(PatientService.class); ", SemanticStatus e = STRINGTOENUM.get(s); if (e != null) return e; for (final String dispval : STRINGTOENUM.keySet()) { if (dispval.equalsIgnoreCase(s)) return STRINGTOENUM.get(dispval); 
1," StringBuffer sb = new StringBuffer(Op.toString(opcode)); sb.append(' '); for (int i=0; i<operands.length; i++) { sb.append(operands[i].toString()); if (i<operands.length-1) sb.append("", ""); "," StringBuffer XXXXX = new StringBuffer(Op.toString(opcode)); XXXXX.append(' '); for (int i=0; i<operands.length; i++) { XXXXX.append(operands[i].toString()); if (i<operands.length-1) XXXXX.append("", ""); "
1," myLog(""\n==Attributes of the GIS shapes==""); FeatureType featureType = featureSource.getSchema(); showAttributes(featureType, Boolean.TRUE); showAttributes(featureType, Boolean.FALSE); myLog(""""); "," myLog(""\n==Attributes of the GIS shapes==""); FeatureType XXXXX = featureSource.getSchema(); showAttributes(XXXXX, Boolean.TRUE); showAttributes(XXXXX, Boolean.FALSE); myLog(""""); "
0, MockitoAnnotations.initMocks(this); presenter = new GroupPresenter(); presenter.setDialogManager(dialogManager); presenter.setGroupService(service); presenter.initView(viewMock); ," index /= 4; int end = index + num; if(end > a.length) end = a.length; for(int i = index; i < end; ++i){ int sx = convolve(i, kx); int sy = convolve(i, ky); if(sx*sx+sy*sy > 100*100){ b[i] = 0; "
0," int size = memoizedSerializedSize; if (size != -1) return size; size = 0; if (hasType()) { size += com.google.protobuf.CodedOutputStream .computeEnumSize(1, getType().getNumber()); "," return ""<link rel=\""stylesheet\"" style=\""text/css\"" href=\""clusterdemo/qtlfinder.css\"">"" + ""\n"" + ""<script type=\""text/javascript\"" src=\""etc/js/clear-default-text.js\""></script>"" ; "
1," super(name); proposals.addAll(WebDialectExtension.createLengthProprosals()); proposals.add(new Proposal(""1%"")); proposals.add(new Proposal(""auto"")); proposals.add(new Proposal(""inherit"")); "," super(name); proposals.addAll(WebDialectExtension.createLengthProprosals()); proposals.add(new Proposal(""1%"")); proposals.add(new Proposal(""auto"")); proposals.add(new Proposal(""inherit"")); "
1," return new IContentAssistService() { public List<Proposal> computeCompletionProposals(Scope scope, ContentAssistInvocationContext context, ITranslationUnit unit) { return Collections.emptyList(); "," return new IContentAssistService() { public List<Proposal> computeCompletionProposals(Scope scope, ContentAssistInvocationContext context, ITranslationUnit unit) { return Collections.emptyList(); "
0," String returnValue = """"; if (modifiedPassword != null) { returnValue = modifiedPassword; if (processor != null) { logger.warning(""Validator changed password, processor will not run""); "," MUIElement refModel = findElement(perspModel, id); if (!(refModel instanceof MPlaceholder)) { E4Util.unsupported(""removePlaceholder: failed to find "" + id + "": "" + refModel); return; "
0, applicationCore.removeGlobalComponent(net.codjo.database.common.api.DatabaseFactory.class); applicationCore.removeGlobalComponent(net.codjo.database.common.api.DatabaseQueryHelper.class); , int hash = 7; hash = 17 * hash + (this.lowerCorner != null ? this.lowerCorner.hashCode() : 0); hash = 17 * hash + (this.upperCorner != null ? this.upperCorner.hashCode() : 0); return hash; 
0," if ( settings.isOffline() && dependencyLocationsEnabled ) { getLog().warn( ""The parameter 'dependencyLocationsEnabled' is ignored in offline mode."" ); dependencyLocationsEnabled = false; "," super(""XML Connector Settings"", ""Specify a directory"", taskRepository); setNeedsAnonymousLogin(true); setNeedsAdvanced(false); setNeedsEncoding(false); setNeedsHttpAuth(false); setNeedsProxy(false); "
0," log.info(""Player: "" + player + "", Chestblock:"" + chestBlock); String chestName = getChestName(chestBlock); return !chests.contains(chestName) || getChest(player).equals(chestName); "," writer.println(""<p class=\""footer-label\"">""); writer.printf(""Generated: %s%n"", datetimeFormat.format(new Date())); writer.println(""</p>""); writer.println(""</body>""); writer.println(""</html>""); "
1, Object componentInstance; try { componentInstance = getComponentInstance(componentKey); if (managementContext != null && componentInstance != null) { managementContext.unregister(componentInstance); , Object componentInstance; try { componentInstance = getComponentInstance(componentKey); if (managementContext != null && componentInstance != null) { managementContext.unregister(componentInstance); 
0," this.append(""~(""); TextGenManager.instance().appendNodeText(this.getContext(), this.getBuffer(), SLinkOperations.getTarget(node, ""expression"", true), this.getSNode()); this.append("")""); "," int start = s.indexOf(""--""); if (start >= 0){ int i=start; StringBuffer buf = new StringBuffer(s); while (i < s.length() && buf.charAt(i) == '-') { buf.replace(i, i+1, ""=""); i += 1; "
1," Connection conn = null; PreparedStatement stmt = null; String select = ""delete from "" + name; try { conn = datasource.getConnection(); stmt = conn.prepareStatement(select); stmt.executeUpdate(); "," Connection XXXXX = null; PreparedStatement XXXXX = null; String XXXXX = ""delete from "" + name; try { XXXXX = datasource.getConnection(); XXXXX = XXXXX.prepareStatement(XXXXX); XXXXX.executeUpdate(); "
1, CompositionArgument recursivelyReflectedArgument = recursiveEmitterArgumentToReflectedInputMap.get(argument); if (recursivelyReflectedArgument != null) { argument = recursivelyReflectedArgument; , CompositionArgument XXXXX = recursiveEmitterArgumentToReflectedInputMap.get(argument); if (XXXXX != null) { argument = XXXXX; 
0," Label separator= new Label(parent, SWT.SEPARATOR | SWT.HORIZONTAL); GridData gridData= new GridData(SWT.FILL, SWT.TOP, true, false); gridData.verticalIndent = 2; separator.setLayoutData(gridData); "," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "
0," String user1Field = Dispatch.get(contact, ""User1"").toString(); if (user1Field.trim().length()==0){ Dispatch.put(contact, ""User1"", new UUID().toString()); Dispatch.call(contact, ""Save""); "," this.usecaseName = usecase.getName(); String[] keys = usecase.getParameterNames(); for (int i = 0; i < keys.length; i++) { this.parameters.put(keys[i], usecase.getParameter(keys[i])); "
1," List<String> mappingFiles = new ArrayList<String>(); mappingFiles.add(""dozerBeanMapping.xml""); Mapper mapper = new DozerBeanMapper(mappingFiles); try { mapper.map(new String(""yo""), new String(""y"")); "," List<String> mappingFiles = new ArrayList<String>(); mappingFiles.add(""dozerBeanMapping.xml""); Mapper mapper = new DozerBeanMapper(mappingFiles); try { mapper.map(new String(""yo""), new String(""y"")); "
0, String result; if (jLstItems.getSelectedIndex() >= 0) { Object selected = jLstItems.getSelectedValue(); if (selected instanceof Method) { result = ReflectUtils.getJavaCallString((Method) selected); ," LogFile laterLogFile = new LogFile(""log20001212050505.xml""); BuildDetail laterBuild = new BuildDetail(laterLogFile); assertEquals(PreviousResult.FAILED, laterBuild.getPreviousBuildResult()); "
1," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; "," EditorCell XXXXX = null; XXXXX = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, XXXXX, editorContext); return XXXXX; "
1," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (value: ""); result.append(value); result.append(')'); return result.toString(); "," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (value: ""); result.append(value); result.append(')'); return result.toString(); "
0," Log.i(DEBUG_TAG, ""TriggerInit: Resetting all triggers""); DbHelper dbHelper = new DbHelper(context); for (Campaign c : dbHelper.getReadyCampaigns()) { resetTriggersAndSettings(context, c.mUrn); "," putValue(Action.SHORT_DESCRIPTION, tr(""Cancel conflict resolution"")); putValue(Action.NAME, tr(""Cancel"")); putValue(Action.SMALL_ICON, ImageProvider.get("""", ""cancel"")); setEnabled(true); "
0, boolean examplesEmpty = true; for(int i = 0; i < numOfClasses; i ++) { for(int n=0; n<trainingImage.getImageStackSize(); n++) if(examples[n].get(i).size() > 0) { examplesEmpty = false; break; ," final ValueGreek valueGreek = AVAILABLE_VALUE_GREEKS.get(valueName); if (valueGreek == null) { throw new IllegalArgumentException(""Could not get value greek for ValueRequirementName "" + valueName); "
0," Object oldDESTCOL = dESTCOL; dESTCOL = newDESTCOL; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, PowrmartPackage.SEBLLINK_TYPE__DESTCOL, oldDESTCOL, dESTCOL)); ", TestSuite testSuite = new TestSuite(); testSuite.addTest(AssertActionsTests.suite()); testSuite.addTest(PortletTests.suite()); testSuite.addTest(ScopeTests.suite()); return testSuite; 
0," if (visible) { new WindowGeometry( getClass().getName() + "".geometry"", WindowGeometry.centerInWindow( Main.parent, new Dimension(450,540) ) ).applySafe(this); initFromPreferences(); "," panel.getWidget(1).setVisible(true); display.setWidgetTopBottom(panel, 0, PX, headerSize, PX); display.forceLayout(); display.setWidgetTopBottom(panel, 0, PX, 0, PX); display.animate(500); "
1," List<StaticOperand> result = parser.parseInClause(tokens(""IN ('value1')""), typeSystem); assertThat(result.size(), is(1)); assertThat(result.get(0), is((StaticOperand)literal(""value1""))); "," List<StaticOperand> result = parser.parseInClause(tokens(""IN ('value1')""), typeSystem); assertThat(result.size(), is(1)); assertThat(result.get(0), is((StaticOperand)literal(""value1""))); "
0," String json = ""{\""created\"": [{\""description\"":\""\"", \""id\"":\""3843\"", \""name\"":\""Gene Tree- pg00892\"", \""status\"":\""PENDING\"", \""type\"":\""Unknown\"", \""uploaded\"":\""2010-12-14 10:11:04\"", \""url\"":\""\"""," tag = HTML.Tag.BLOCKQUOTE; assertEquals(""blockquote"", tag.toString()); assertTrue(""breaks Flow"", tag.breaksFlow()); assertTrue(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); "
1, if (data.keepInventory != null) return data.keepInventory; else if (cause.parent != null) { CauseSettings s = config.getSettings(cause.parent); if (s != null) return s.keepInventory(); , if (data.keepInventory != null) return data.keepInventory; elXXXXXe if (cauXXXXXe.parent != null) { CauXXXXXeSettingXXXXX XXXXX = config.getSettingXXXXX(cauXXXXXe.parent); if (XXXXX != null) return XXXXX.keepInventory(); 
0, final Set<ScopePathListener> listeners = scopePathListeners.get(scopePath); if (listeners != null) { for (final ScopePathListener listener : listeners) { listener.configSaved(scopePath); ," final ColorRGB value = (ColorRGB) getModel().getValue(); final String text = value == null ? """" : value.toHTMLColor(); if (textInput.getText().equals(text)) return; textInput.setText(text); "
0," tag = HTML.Tag.EM; assertEquals(""em"", tag.toString()); assertFalse(""breaks Flow"", tag.breaksFlow()); assertFalse(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); ", final int prime = 31; int result = 1; result = prime * result + ((prefix == null) ? 0 : prefix.hashCode()); result = prime * result + ((uri == null) ? 0 : uri.hashCode()); return result; 
0," AnalyzeWeightsTab tab = new AnalyzeWeightsTab((ProjectEGFile)this.getEncogObject()); EncogWorkBench.getInstance().getMainWindow().getTabManager() .openModalTab(tab, ""Analyze Weights""); ", int numThreads = Runtime.getRuntime().availableProcessors(); executor = Executors.newFixedThreadPool(numThreads); completionService = new ExecutorCompletionService<ImageToSwfSlide>(executor); 
0," this.tree = treeRoot; treeListBox.clear(); if (treeListBox != null) { removeAbsoleteTreeItems(treeListBox, tree); addTreeItem(treeListBox, tree, 0, 0); getElement().layoutElements(); "," GregorianCalendar cal = new GregorianCalendar(); cal.add(Calendar.HOUR, 8); ConstraintDates c = new ConstraintDates(); c.setFutureDate(PAST_DATE); c.setPastCalendar(cal); return c; "
0," if(DEBUG || verbose || eglDisplayCounter.size() > 0 ) { System.err.println(""EGLDisplayUtil.EGLDisplays: Shutdown (open: ""+eglDisplayCounter.size()+"")""); if(DEBUG) { Thread.dumpStack(); "," int r = Integer.parseInt(color.substring(1, 3), 16); int g = Integer.parseInt(color.substring(3, 5), 16); int b = Integer.parseInt(color.substring(5, 7), 16); return new Color(r, g, b); "
1," HighlightingColorListItem item= getHighlightingColorListItem(); PreferenceConverter.setValue(getOverlayStore(), item.getColorKey(), fSyntaxForegroundColorEditor.getColorValue()); "," HighlightingColorListItem item= getHighlightingColorListItem(); PreferenceConverter.setValue(getOverlayStore(), item.getColorKey(), fSyntaxForegroundColorEditor.getColorValue()); "
1," try { if (currentFieldSetIndex < fieldSets.size() - 1) { return JCRSessionFactory.getInstance().getCurrentUserSession(workspace, locale).getNodeByIdentifier(fieldSets.get(currentFieldSetIndex+1)); "," try { if (currentFieldSetIndex < fieldSets.size() - 1) { return JCRSessionFactory.getInstance().getCurrentUserSession(workspace, locale).getNodeByIdentifier(fieldSets.get(currentFieldSetIndex+1)); "
0," return ""TilesetInfo [format="" + format + "", imgInfo="" + imgInfo + "", tileHeight="" + tileHeight + "", tileWidth="" + tileWidth + "", tilesTotal="" + tilesTotal + "", zoomlevels="" + zoomlevels + ""]""; ", this.id = id; this.name = name; this.tectReg = tectReg; this.topTrace = TopTrace; this.bottomTrace = BottomTrace; this.rake = rake; this.mfd = mfd; this.floatRuptureFlag = floatRuptureFlag; 
0, final ReentrantReadWriteLock lock = new ReentrantReadWriteLock(true); lock.writeLock().lock(); assertTrue(lock.readLock().tryLock()); lock.readLock().unlock(); lock.writeLock().unlock(); , ArrayList<CompilerAnnotation> annotations = annotationMap.remove(dao); if(annotations != null) for (CompilerAnnotation compilerAnnotation : annotations) compilerAnnotation.detach(); 
0, boolean toReturn = false; for (AddressBookData addressBookData : receivingAddresses) { if (addressBookData.getAddress().equals(receivingAddress.toString())) { toReturn = true; break; ," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; "
0," doc = new Document(""def m1( aeee ): \n"" + "" print 'foo' \n"" + ""def m2( afff ): \n"" + "" print 'foo' ""); analyzer = new OccurrencesAnalyzer(); msgs = analyzeDoc(); assertEquals(2, msgs.length); ", mValue = progress; if (mValue > mMax) mValue=mMax; if (mValue < mMin) mValue=mMin; if (mSeekBar != null) { mSeekBar.setProgress(progress-mMin); mCurrentValue.setText(Integer.toString(mValue)); 
1," freeMarkerStatement.addImport(""java.util.List""); JavaImport javaImport = Iterables.getOnlyElement(freeMarkerStatement.getRequiredImports()); assertEquals(""java.util.List"", javaImport.getName()); "," freeMarkerStatement.addImport(""java.util.List""); JavaImport XXXXX = Iterables.getOnlyElement(freeMarkerStatement.getRequiredImports()); assertEquals(""java.util.List"", XXXXX.getName()); "
0," super.handleLoadInstruction(obj); int numProduced = obj.produceStack(cpg); if (numProduced == Constants.UNPREDICTABLE) { throw new InvalidBytecodeException(""Unpredictable stack production""); ", context.checking(new Expectations() { { this.allowing(jmon).currentProgress(); this.will(returnValue(new IProgress.Stub())); this.allowing(jmon).stopRequested(); this.will(returnValue(false)); 
1, boolean notAllEquipped = false; for(L2ItemInstance adjItem: getItemsByItemId(item.getItem().getItemId())) { if(adjItem.isEquipable()) { if(!adjItem.isEquipped()) notAllEquipped |= true; , boolean notAllEquipped = false; for(L2ItemInstance adjItem: getItemsByItemId(item.getItem().getItemId())) { if(adjItem.isEquipable()) { if(!adjItem.isEquipped()) notAllEquipped |= true; 
1, String title = wp.key(GUI_NEW_RESOURCE_TITLE_PREFIX + name.toLowerCase()); if (CmsMessages.isUnknownKey(title)) { title = wp.key(org.opencms.workplace.explorer.Messages.GUI_TITLE_NEWFILEOTHER_0); , String XXXXX = wp.key(GUI_NEW_RESOURCE_TITLE_PREFIX + name.toLowerCase()); if (CmsMessages.isUnknownKey(XXXXX)) { XXXXX = wp.key(org.opencms.workplace.explorer.Messages.GUI_TITLE_NEWFILEOTHER_0); 
0," JavaArchive archive = SeamCronSchedulingTCKTest.createSchedulingTckTestArchive().addPackages(true, QuartzScheduleProvider.class.getPackage()); log.debug(archive.toString(true)); return archive; "," _orphans.remove(dependant); DependencyNode<T> dependantNode = _nodes.get(dependant); if (dependantNode == null) { throw new IllegalArgumentException(""Unknown dependant? "" + dependant); "
0, eobjectflatcomboviewerOptionalPropery.setInput(settings); if (current != null) { eobjectflatcomboviewerOptionalPropery.setSelection(new StructuredSelection(settings.getValue())); ," try { defaultFederate.rtiamb.joinFederationExecution( """", defaultFederate.federateType, defaultFederate.simpleName ); Assert.fail( ""No exception while joining a with empty federate name"" ); "
0, SModelDescriptor modelDescriptor = model.getModelDescriptor(); if (modelDescriptor instanceof EditableSModelDescriptor) { ((EditableSModelDescriptor) modelDescriptor).setChanged(true); ," ArgumentChecker.notNull(bundle, ""bundle""); for (ExternalId secId : bundle.getExternalIds()) { for (Security sec : _securities.values()) { if (sec.getExternalIdBundle().contains(secId)) { return sec; "
1, this.axesAtTop = new java.util.ArrayList(); this.axesAtBottom = new java.util.ArrayList(); this.axesAtLeft = new java.util.ArrayList(); this.axesAtRight = new java.util.ArrayList(); , this.axesAtTop = new java.util.ArrayList(); this.axesAtBottom = new java.util.ArrayList(); this.axesAtLeft = new java.util.ArrayList(); this.axesAtRight = new java.util.ArrayList(); 
1," final Component from = e.getOppositeComponent(); if (!e.isTemporary() && from != null && !myComboBox.isPopupVisible() && isUnder(from, myParent)) { myComboBox.setPopupVisible(true); "," final Component XXXXX = e.getOppositeComponent(); if (!e.isTemporary() && XXXXX != null && !myComboBox.isPopupVisible() && isUnder(XXXXX, myParent)) { myComboBox.setPopupVisible(true); "
1, Object[] listeners = fChangedListners.getListeners(); for (int i = 0; i < listeners.length; i++) { ((IToggleBreakpointsTargetManagerListener)listeners[i]).preferredTargetsChanged(); , Object[] listeners = fChangedListners.getListeners(); for (int i = 0; i < listeners.length; i++) { ((IToggleBreakpointsTargetManagerListener)listeners[i]).preferredTargetsChanged(); 
0," LOG.info(""Repository Clean Job cancelling clean job.""); boolean ok = cleanerHandle.cancel(true); LOG.info(""Repository Clean Job cancelled with result: "" + ok); scheduler.shutdownNow(); "," String oldStyle = style; style = newStyle; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_SVG_ELEMENT__STYLE, oldStyle, style)); "
0," switch(index) { case 0: return new UnaryExpr_AtomParserRuleCall_0(lastRuleCallOrigin, this, 0, inst); case 1: return new UnaryExpr_Group_1(lastRuleCallOrigin, this, 1, inst); default: return null; "," if(OJUtil.hasOJClass(i) && !(i instanceof INakedHelper)){ OJAnnotatedClass ojClass = findJavaClass(i); this.buildBuildTreeFromXml(ojClass, i); this.buildPopulateReferencesFromXml(ojClass, i); "
0," String label = ((ResourceChange)object).getResourceURI(); return label == null || label.length() == 0 ? getString(""_UI_ResourceChange_type"") : getString(""_UI_ResourceChange_type"") + "" "" + label; "," ByteArrayOutputStream tempBuffer = new ByteArrayOutputStream(1024); byte[] buffer = new byte[1024]; int i = 0; try { while ((i = stream.read(buffer)) > -1) { tempBuffer.write(buffer, 0, i); "
1," final boolean value = !checked; if (value != mDoNotDisturb) { SharedPreferences.Editor editor = Prefs.edit(mContext); editor.putBoolean(Prefs.DO_NOT_DISTURB_PREF, value); editor.apply(); "," final boolean XXXXX = !checked; if (XXXXX != mDoNotDisturb) { SharedPreferences.Editor XXXXX = Prefs.edit(mContext); XXXXX.putBoolean(Prefs.DO_NOT_DISTURB_PREF, XXXXX); XXXXX.apply(); "
1, super.onCreate(savedInstanceState); setTitle(R.string.activity_title); flipView = new FlipViewController(this); flipView.setAdapter(new BaseAdapter() { @Override public int getCount() { return 10; , super.onCreate(savedInstanceState); setTitle(R.string.activity_title); flipView = new FlipViewController(this); flipView.setAdapter(new BaseAdapter() { @Override public int getCount() { return 10; 
1," String path = VirtualFileManager.extractPath(myUrl); if (path.endsWith(StandardFileSystems.JAR_SEPARATOR)) { path = path.substring(0, path.length() - StandardFileSystems.JAR_SEPARATOR.length()); "," String XXXXX = VirtualFileManager.extractPath(myUrl); if (XXXXX.endsWith(StandardFileSystems.JAR_SEPARATOR)) { XXXXX = XXXXX.substring(0, XXXXX.length() - StandardFileSystems.JAR_SEPARATOR.length()); "
0, if (tm == null) { try { Object o = safeInitNewInstance(transactionManagerLocatorClass); Method m = o.getClass().getMethod(transactionManagerLocatorMethod); tm = (TransactionManager)m.invoke(o); ," if (!methodNameOffsets.containsKey(description.getClassName())) { methodNameOffsets.put(description.getClassName(), 0); PrivilegedOutput.print(""^b^%s^r^"", description.getClassName()); "
0," String colorString = ""{""; colorString += ""red:"" + color.getRed() + "",""; colorString += ""green:"" + color.getGreen() + "",""; colorString += ""blue:"" + color.getBlue() + "",""; colorString += """, Object val = node.getNodeData().getAttributes().getValue(column.getIndex()); val = dynamicHelper.getDynamicValue(val); if (val != null) { values.add(val); return val.equals(match); 
1," elector.joinElection(data); elector.processResult(Code.NODEEXISTS.intValue(), ZK_LOCK_NAME, mockZK, ZK_LOCK_NAME); Mockito.verify(mockApp, Mockito.times(1)).becomeStandby(); verifyExistCall(1); "," elector.joinElection(data); elector.processResult(Code.NODEEXISTS.intValue(), ZK_LOCK_NAME, mockZK, ZK_LOCK_NAME); Mockito.verify(mockApp, Mockito.times(1)).becomeStandby(); verifyExistCall(1); "
0, List<ProsumerAgent> customers = customersList; double sumDemand = 0; for (ProsumerAgent a : customers) { if (a instanceof WindGeneratorProsumer){ sumDemand = sumDemand + a.getNetDemand(); , getCtx().setEntityContainer(oldEntityContainer); getCtx().setField(oldField); getCtx().setFieldValue(oldFieldValue); getCtx().setEntityInstance(oldEntityInstance); return EVAL_PAGE; 
0," Matcher matcher = PATTERN.matcher(path.toString()); if (matcher.matches()) { DateFormat format = new SimpleDateFormat(""yyyy/MM/dd""); try { return inInterval(format.parse(matcher.group(1))); "," String label = ((BusClassifier) object).getName(); return label == null || label.length() == 0 ? getString(""_UI_BusClassifier_type"") : getString(""_UI_BusClassifier_type"") + "" "" + label; "
1, if (aActionsLeft>0 && owner.getCardsFromHand(DomCardName.Tournament).size()>0 && owner.getCardsFromHand(DomCardName.Province).size()==1) return 40; return super.getDiscardPriority(aActionsLeft); , if (aActionsLeft>0 && owner.getCardsFromHand(DomCardName.Tournament).size()>0 && owner.getCardsFromHand(DomCardName.Province).size()==1) return 40; return super.getDiscardPriority(aActionsLeft); 
0," String result = accountServiceFor(accountNumber).name(accountNumber); System.out.println(""AccountServicesToOutsideWorldImpl.name("" + accountNumber + "") = "" + result); return result; "," _qualities.add(position, quality); _scores.add( position, (short) 2); String newseq = _seq.substring(0,position); newseq += ""-""; newseq += _seq.substring(position); _seq = newseq; "
0," if (partRef.getId().equals(getSite().getId())) { Markers markers = getActiveViewerInputClone(); Integer[] counts = markers.getMarkerCounts(); setTitleToolTip(getStatusMessage(markers, counts)); ", if (this.optionalSharables == null) { List list = this.getConfig().getList(Path.OPTIONAL_SHARES.getPath()); if (list != null) { this.optionalSharables = Sharables.fromList(list); 
1," IPath deployPlanPath = comp.getRootFolder().getUnderlyingFolder().getProjectRelativePath().append(""META-INF"").append(APP_PLAN_NAME); return comp.getProject().getFile(deployPlanPath); "," IPath XXXXX = comp.getRootFolder().getUnderlyingFolder().getProjectRelativePath().append(""META-INF"").append(APP_PLAN_NAME); return comp.getProject().getFile(XXXXX); "
0," if (!player.weaponInventory.add(new Rifle(player))) { if (this.team == MojamComponent.localTeam) { Notifications.getInstance().add(MojamComponent.texts.getStatic(""gameplay.weaponAlready"")); "," double[] u = new double[n]; for (int i=0; i<n; i++) u[i] = 1; double[] v = new double[n]; for (int i=0; i<n; i++) v[i] = 0; for (int i=0; i<10; i++) { MultiplyAtAv(n,u,v); MultiplyAtAv(n,v,u); "
0," if(world.isBlockIndirectlyGettingPowered(i, j, k) || world.isBlockIndirectlyGettingPowered(i, j + 1, k)) { world.setBlockWithNotify(i,j,k, mod_miscBlocks.neonLightWhiteOn.blockID); "," int linesCount = 0; for (String line : stacktrace.split(""\n"")) { line = line.trim(); if (line.length() == 0) continue; if (line.endsWith(""\r"")) { line = line.substring(0, line.length() - 1); "
0," MenuInflater inflater = getMenuInflater(); boolean qr_scanner_installed = false; try { getPackageManager().getPackageInfo(""com.google.zxing.client.android"", 0); qr_scanner_installed = true; ", if(remoteUser!=null)remoteUser=null; String name=Login.getApplicationName(applicationContext); cookieScope().removeEL(KeyImpl.init(name)); try { sessionScope().removeEL(KeyImpl.init(name)); 
0," MenuItem mi = new MenuItem(menu, bCheck ? SWT.RADIO : SWT.PUSH, index); mi.setText(element.getLabel(null)); String key; if (element.isComposite()) { key = ICheatSheetResource.COMPOSITE_OBJ; ", previousSearchRequest = searchRequest; currentPosition = 0; cookieValue = new AtomicInteger( searchRequest.getMessageId() << 16 ); cookie = BerValue.getBytes( cookieValue.get() ); 
0," this.content = content; String[] array = content.getDefinitions().split( ""\n"" ); for ( String line : array ) { EnumRow enumRow = new EnumRow( line ); dataProvider.getList().add( enumRow ); "," String oldValue = value; value = newValue; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, Aadl2Package.STRING_LITERAL__VALUE, oldValue, value)); "
0, StringBuilder resultSb = new StringBuilder(); if (template.getParent() == currSoyFile && ! (template instanceof TemplateDelegateNode)) { resultSb.append(template.getPartialTemplateName()); , boolean hasNext = false; try { hasNext = currentResultSet.next(); while (!hasNext){ boolean hasTable = nextTable(); if (!hasTable) return false; else { hasNext = currentResultSet.next(); 
0," super(""AvgAvail"", ALIGN_TRAIL, POSITION_INVISIBLE, 50, sTableID); setRefreshInterval(INTERVAL_LIVE); setMinWidthAuto(true); iTimesBy = 1; for (int i = 1; i < numZeros; i++) iTimesBy *= 10; "," try{ AtomicReferenceFieldUpdater<AtomicReferenceFieldUpdaterTest, Integer> a = AtomicReferenceFieldUpdater.newUpdater (AtomicReferenceFieldUpdaterTest.class, Integer.class, ""y""); shouldThrow(); "
0," boolean oldOverload = overload; overload = newOverload; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, GFPackage.OPER_DEF__OVERLOAD, oldOverload, overload)); "," String oldLabel = label; label = newLabel; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, StylesheetsPackage.EMBEDDED_STYLE_SHEET__LABEL, oldLabel, label)); "
1," StoreNewCategoryCommand storeNewCategoryCommand = createStoreNewCategoryCommand( categoryName, contentTypeName, null ); return categoryService.storeNewCategory( storeNewCategoryCommand ); "," StoreNewCategoryCommand XXXXX = createStoreNewCategoryCommand( categoryName, contentTypeName, null ); return categoryService.storeNewCategory( XXXXX ); "
1, this.fermentedItem = fermentedItem; this.inputLiquid = inputLiquid; this.amountUsed = amountUsed; this.outputLiquid = outputLiquid; this.amountProduced = amountProduced; this.bonus = bonus; , this.fermentedItem = fermentedItem; this.inputLiquid = inputLiquid; this.amountUsed = amountUsed; this.outputLiquid = outputLiquid; this.amountProduced = amountProduced; this.bonus = bonus; 
0, DefaultHandler result = this; if (this.subHandlers != null) { if (this.subHandlers.size() > 0) { Object top = this.subHandlers.peek(); if (top != null) { result = (DefaultHandler) top; , fInnerViewer.addSelectionChangedListener(this); fOptionsViewer.addSelectionChangedListener(this); fOptionsViewer.addCheckStateListener(this); restoreSelections(); refreshState(); 
0," Dimension size = super.getPreferredSize(); int iSize = SubstanceSizeUtils.getTitlePaneIconSize(); return new Dimension(Math.max(iSize, size.width), Math.max( size.height, iSize)); ", synchronized (subscriptionListeners) { for (int i = 0; i < subscriptionListeners.size(); i++) { ((IRosterSubscriptionListener) subscriptionListeners.get(i)) .handleUnsubscribed(fromID); 
0," Plugin plugin = pluginManager.getPlugin(getPlugin()); Map props = new HashMap(); props.put(""pluginManager"", pluginManager); pluginManager.testPlugin(getPlugin(), getPluginLocation(), props, true); "," IWorkbenchWindowConfigurer configurer = getWindowConfigurer(); configurer.setInitialSize(new Point(1000, 700)); configurer.setTitle(Messages.DiagramEditorWorkbenchWindowAdvisor_Title); "
1, EClass source = getEClass(context.getSourceAnchor()); EClass target = getEClass(context.getTargetAnchor()); if (source != null && target != null && source != target) { return true; , EClass XXXXX = getEClass(context.getSourceAnchor()); EClass XXXXX = getEClass(context.getTargetAnchor()); if (XXXXX != null && XXXXX != null && XXXXX != XXXXX) { return true; 
1," return Messages.format(RubyTextMessages.ContentAssistProcessor_toggle_affordance_update_message, new String[]{ getCategoryLabel(fRepetition), fIterationGesture, getCategoryLabel(fRepetition + 1) "," return Messages.format(RubyTextMessages.ContentAssistProcessor_toggle_affordance_update_message, new String[]{ getCategoryLabel(fRepetition), fIterationGesture, getCategoryLabel(fRepetition + 1) "
1," IntObjectCache<Integer> cache = new IntObjectCache<Integer>(4); cache.put(0, 0); cache.put(1, 1); cache.put(2, 2); cache.put(3, 3); cache.put(4, 4); Assert.assertNull(cache.tryKey(0)); "," IntObjectCache<Integer> cache = new IntObjectCache<Integer>(4); cache.put(0, 0); cache.put(1, 1); cache.put(2, 2); cache.put(3, 3); cache.put(4, 4); Assert.assertNull(cache.tryKey(0)); "
0, SwingUtilities.invokeLater(new Runnable() { @Override public void run() { showCard(wikiPanel); wikiArea.requestFocus(); wikiArea.setCaretPosition(wikiArea.getText().length()); _editMode = true; ," super(Duration.EndOfTurn, Outcome.AddAbility); staticText = ""Until end of turn, creatures you control gain trample and get +X/+X, where X is the greatest power among creatures you control.""; "
1," final Member m = createMember(""toto""); assertFalse(m.isLightningTalkSpeaker()); LightningTalk lt = new LightningTalk(); lt.addSpeaker(m); lt.save(); assertTrue(m.isLightningTalkSpeaker()); "," final MeXXXXXber XXXXX = createMeXXXXXber(""toto""); assertFalse(XXXXX.isLightningTalkSpeaker()); LightningTalk XXXXX = new LightningTalk(); XXXXX.addSpeaker(XXXXX); XXXXX.save(); assertTrue(XXXXX.isLightningTalkSpeaker()); "
1," String pigStorage = PigStorage.class.getName(); FuncSpec fs = new FuncSpec(pigStorage); Object o = PigContext.instantiateFuncFromSpec(fs); assertEquals(true, o instanceof PigStorage); "," String XXXXX = PigStXXXXXrage.class.getName(); FuncSpec XXXXX = new FuncSpec(XXXXX); Object XXXXX = PigCXXXXXntext.instantiateFuncFrXXXXXmSpec(XXXXX); assertEquals(true, XXXXX instanceXXXXXf PigStXXXXXrage); "
1, for(SpatialValueAreaBean valueAreaBean: this.getSpatialValueAreaList()){ if (valueAreaBean.getTypeCode().equals(SpatialValueAreaBean.TYPE_OFFICIAL)){ return valueAreaBean.getSize().doubleValue(); , for(SpatialValueAreaBean valueAreaBean: this.getSpatialValueAreaList()){ if (valueAreaBean.getTypeCode().equals(SpatialValueAreaBean.TYPE_OFFICIAL)){ return valueAreaBean.getSize().doubleValue(); 
1," int total = 0; if (testPrimaryColor(rgb.red, from, to)) total++; if (testPrimaryColor(rgb.green, from, to)) total++; if (testPrimaryColor(rgb.blue, from, to)) total++; return total >= 2; "," int XXXXX = 0; if (testPrimaryColor(rgb.red, from, to)) XXXXX++; if (testPrimaryColor(rgb.green, from, to)) XXXXX++; if (testPrimaryColor(rgb.blue, from, to)) XXXXX++; return XXXXX >= 2; "
1, if ( s == null || s.length() == 0 ) return def; s = s.trim(); for ( int i=0; i<s.length(); i++ ) if ( ! Character.isDigit( s.charAt(i) ) ) return def; return Integer.parseInt( s ); , if ( s == null || s.length() == 0 ) return def; s = s.trim(); for ( int i=0; i<s.length(); i++ ) if ( ! Character.isDigit( s.charAt(i) ) ) return def; return Integer.parseInt( s ); 
0, parentGui = parent; mc = ModLoader.getMinecraftInstance(); width = parent.width; height = parent.height; top = 32; bottom = height - 16; slotHeight = 12; left = 0; right = width; , checkMonitor(); int maxThreads = 0; String maxThreadsStr = getServerProperty(Property.DRDA_PROP_MAXTHREADS); if (maxThreadsStr != null) { try { maxThreads = Integer.parseInt(maxThreadsStr); 
1, final StringBuffer buf = new StringBuffer(value.length()); final int len = value.length(); for (int i = 0; i < len; i++) { char c = value.charAt(i); if (c == '/') { buf.append('\\'); , final StringBuffer buf = new StringBuffer(value.length()); final int len = value.length(); for (int i = 0; i < len; i++) { char c = value.charAt(i); if (c == '/') { buf.append('\\'); 
1," logger.debug(""***** START TEST *****""); myJmsGateway.sendMyMessage(""myHeaderValue"", ""MY PayLoad""); myJmsGateway.sendMyMessage(""MY Other PayLoad""); logger.debug(""***** END TEST *****""); "," logger.debug(""***** START TEST *****""); myJmsGateway.sendMyMessage(""myHeaderValue"", ""MY PayLoad""); myJmsGateway.sendMyMessage(""MY Other PayLoad""); logger.debug(""***** END TEST *****""); "
1," SecurityManager security = System.getSecurityManager(); if (security != null) { if (fullScreenExclusivePermission == null) { fullScreenExclusivePermission = new AWTPermission(""fullScreenExclusive""); "," SecurityManager security = System.getSecurityManager(); if (security != null) { if (fullScreenExclusivePermission == null) { fullScreenExclusivePermission = new AWTPermission(""fullScreenExclusive""); "
1," StorableBag bag = underTest.getAllBags().get(NAME); assertEquals(NAME, bag.getName()); assertEquals(BagState.NOT_CURRENT.toString(), bag.getState()); assertEquals(TYPE, bag.getType()); "," StorableBag XXXXX = underTest.getAllBags().get(NAME); assertEquals(NAME, XXXXX.getName()); assertEquals(BagState.NOT_CURRENT.toString(), XXXXX.getState()); assertEquals(TYPE, XXXXX.getType()); "
1," AbstractIntroElement child = parent.findTarget(root, path); if (child != null && child.isOfType(AbstractIntroElement.TEXT)) { makeFiltered(child); return ((IntroText) child).getText(); "," AbstractIntroElement XXXXX = parent.findTarget(root, path); if (XXXXX != null && XXXXX.isOfType(AbstractIntroElement.TEXT)) { makeFiltered(XXXXX); return ((IntroText) XXXXX).getText(); "
1, qe.setNpcQuestData(204425).addOnQuestStart(questId); qe.setNpcQuestData(204425).addOnTalkEvent(questId); qe.addOnQuestFinish(questId); qe.setQuestBonusType(InventoryBonusType.COIN).add(questId); , qe.setNpcQuestData(204425).addOnQuestStart(questId); qe.setNpcQuestData(204425).addOnTalkEvent(questId); qe.addOnQuestFinish(questId); qe.setQuestBonusType(InventoryBonusType.COIN).add(questId); 
0," ISiteFeature feature = findRealFeature(adapter); if (feature == null) { try { feature = copySiteFeature(fModel, adapter.feature); fModel.getSite().addFeatures(new ISiteFeature[] {feature", DefaultMuleSession session = new DefaultMuleSession(); assertTrue(session.isValid()); session.setValid(false); assertFalse(session.isValid()); session.setValid(true); assertTrue(session.isValid()); 
0," log.debug(""merging OrgPolicy instance""); try { OrgPolicy result = (OrgPolicy) sessionFactory .getCurrentSession().merge(detachedInstance); log.debug(""merge successful""); return result; "," BitSet propane = fingerprinter.getFingerprint(Molecules.createPropane()); BitSet acetone = fingerprinter.getFingerprint(Molecules.createAcetone()); assertTrue(match(propane, acetone)); "
1," if(!enable) { if (LOG.isWarnEnabled()) { LOG.warn(""JodConverter is disabled! To use JodConverter please change wcm.jodconverter.enable=true in "" + ""configuration.properties file""); return; "," if(!enable) { if (LOG.isWarnEnabled()) { LOG.warn(""JodConverter is disabled! To use JodConverter please change wcm.jodconverter.enable=true in "" + ""configuration.properties file""); return; "
1, final TextAttributes textAttributes = new TextAttributes(); textAttributes.setEffectType(EffectType.ROUNDED_BOX); textAttributes.setEffectColor(Color.RED); return textAttributes; , final TextAttributes XXXXX = new TextAttributes(); XXXXX.setEffectType(EffectType.ROUNDED_BOX); XXXXX.setEffectColor(Color.RED); return XXXXX; 
0," VersionTrackerDAOImpl vt = (VersionTrackerDAOImpl) _session.createQuery(""from VersionTrackerDAOImpl v "").uniqueResult(); if (vt == null) return 1; else return vt.getVersion() + 1; "," if (someObj instanceof InformationDelegator) { if (DEBUG) Debug.output(""DrawingTool: found InformationDelegator""); if (dtmm != null) { dtmm.setInfoDelegator((InformationDelegator) someObj); "
1," Matcher matcher = COMMAND_TEXT_PATTERN.matcher(commandText); if (! matcher.matches()) { throw new SoySyntaxException(""Invalid 'deltemplate' command text \"""" + commandText + ""\"".""); "," Matcher matcher = COMMAND_TEXT_PATTERN.matcher(commandText); if (! matcher.matches()) { throw new SoySyntaxException(""Invalid 'deltemplate' command text \"""" + commandText + ""\"".""); "
0, ShapeStyle ss = getShapeStyles().get(c); if (ss==null && !TargetRuntime.DEFAULT_RUNTIME_ID.equals(id)) { ss = TargetRuntime.getDefaultRuntime().getShapeStyle(c); if (ss!=null) return ss; ," player.sendMessage(""Thank you, your report has been recieved.""); System.out.println(event.toString() + "" [user="" + NameUtil.decodeBase37(event.getPlayer()) + "", rule="" + event.getRule()+""]""); "
1, ZLTextPlainModel model = factory.createPlainModel(4096); ZLTextParagraph paragraph = factory.createParagraph(); model.createParagraph(ZLTextParagraph.Kind.TEXT_PARAGRAPH); assertFalse(true); , ZLTextPlainModel XXXXX = factory.createPlainModel(4096); ZLTextParagraph XXXXX = factory.createParagraph(); XXXXX.createParagraph(ZLTextParagraph.Kind.TEXT_PARAGRAPH); assertFalse(true); 
0," thrown.expectMessage(UnsupportedOperationException.class, ""Reducer cannot call getInputSplit()""); new MockReporter(MockReporter.ReporterType.Reducer, null, null).getInputSplit(); "," VCloudDirectorAdminApi api = requestsSendResponses(loginRequest, sessionResponse, edit, editResponse); assertEquals(api.getNetworkApi().edit(networkAdminHref, editNetwork()), editNetworkTask()); "
0," final String pmV = getBrowser().getDCHost().getPacemakerVersion(); try { if (pmV == null || Tools.compareVersions(pmV, ""1.1.7"") <= 0) { return HbOrderInfo.NOT_AVAIL_FOR_PCMK_VERSION; ", try { if (_analyzerClass.equals(StandardAnalyzer.class)) { Constructor<?> constructor = _analyzerClass.getConstructor( Version.class); return (Analyzer)constructor.newInstance(Version.LUCENE_30); 
0, Configuration config = SupportConfigFactory.getConfiguration(); epService = EPServiceProviderManager.getDefaultProvider(config); epService.initialize(); listener = new SupportUpdateListener(); ," String oldStroke = stroke; stroke = newStroke; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_MASK_ELEMENT__STROKE, oldStroke, stroke)); "
0," final AtomicReferenceArray a = new AtomicReferenceArray(1); a.set(0, one); Thread t = new Thread(new Runnable() { public void run() { while(!a.compareAndSet(0, two, three)) Thread.yield(); "," ContentValues values = new ContentValues(); values.put(NoteColumns.GTASK_ID, """"); values.put(NoteColumns.SYNC_ID, 0); getContentResolver().update(Notes.CONTENT_NOTE_URI, values, null, null); "
1, int x = 0; x |= ( 0xFF & buf.get( i + 0 ) ) << 24; x |= ( 0xFF & buf.get( i + 1 ) ) << 16; x |= ( 0xFF & buf.get( i + 2 ) ) << 8; x |= ( 0xFF & buf.get( i + 3 ) ) << 0; return x; , int XXXXX = 0; XXXXX |= ( 0XXXXXFF & buf.get( i + 0 ) ) << 24; XXXXX |= ( 0XXXXXFF & buf.get( i + 1 ) ) << 16; XXXXX |= ( 0XXXXXFF & buf.get( i + 2 ) ) << 8; XXXXX |= ( 0XXXXXFF & buf.get( i + 3 ) ) << 0; return XXXXX; 
1, splitPane = (JSplitPane) c; dividerLocationIsSet = false; dividerKeyboardResize = false; keepHidden = false; installDefaults(); installListeners(); installKeyboardActions(); setLastDragLocation(-1); , splitPane = (JSplitPane) c; dividerLocationIsSet = false; dividerKeyboardResize = false; keepHidden = false; installDefaults(); installListeners(); installKeyboardActions(); setLastDragLocation(-1); 
1, String boClass = request.getParameter(KRADConstants.BUSINESS_OBJECT_CLASS_ATTRIBUTE); if(StringUtils.isBlank(boClass)) { boClass= request.getParameter(KRADConstants.DATA_OBJECT_CLASS_ATTRIBUTE); , String XXXXX = request.getParameter(KRADConstants.BUSINESS_OBJECT_CLASS_ATTRIBUTE); if(StringUtils.isBlank(XXXXX)) { XXXXX= request.getParameter(KRADConstants.DATA_OBJECT_CLASS_ATTRIBUTE); 
1, boolean isPropertyDefined = false; if (getPropertyDefinition() != null) isPropertyDefined = getPropertyDefinition().hasChildCmsPropertyDefinition(propertyPath); return isPropertyDefined; , boolean isPropertyDefined = false; if (getPropertyDefinition() != null) isPropertyDefined = getPropertyDefinition().hasChildCmsPropertyDefinition(propertyPath); return isPropertyDefined; 
0," this.snippetFile = selectedfile; SnipReader reader = new SnipReader(); reader.read(snippetFile.getAbsolutePath()); this.snippet = reader.getSnippet(); logger.debug(""The snippet is: "" + snippet); ", this.m_sipClient = sipClient; this.m_transactionTracker = tracker; this.m_offerAnswerFactory = offerAnswerFactory; this.serverAddress = serverAddress; this.callListener = callListener; 
1," List<String> badCookieDomains = ImmutableList.of(""co.uk"", ""foo"", ""com""); for (String domain : badCookieDomains) { try { InternetDomainName.from(domain).topPrivateDomain(); fail(domain); "," List<String> badCookieDomains = ImmutableList.of(""co.uk"", ""foo"", ""com""); for (String domain : badCookieDomains) { try { InternetDomainName.from(domain).topPrivateDomain(); fail(domain); "
0," ANONYMOUS_TOKENS.put(name, new TokenPredicateImpl(name.startsWith(TokenPredicate.EXACT_PREFIX) ? name.replaceFirst(TokenPredicate.EXACT_PREFIX, """") : name)); return getAnonymousTokenPredicate(name); "," try { return CollectionUtils .first(legacyBranchCashConfirmationReportDao.getBranchCashConfirmationReportsForDateAndBranch( Short.valueOf(branchId), parseReportDate(runDate))) != null; "
1," PelopsException pelopsException = translator.translate(new org.apache.cassandra.thrift.NotFoundException()); assertEquals(""Translation failed"", NotFoundException.class, pelopsException.getClass()); "," PelopsException pelopsException = translator.translate(new org.apache.cassandra.thrift.NotFoundException()); assertEquals(""Translation failed"", NotFoundException.class, pelopsException.getClass()); "
0," super(); this.routeWaypoint = routeWaypoint; this.color = color; this.width = width; this.height = height; this.circle = new WaypointCircle(route, routeIndex, wpIndex); initGraphics(); "," log.trace(""Sending invitation acknowledgment to "" + Utils.prefix(to)); sendMessageToUser(to, invAcknowledgementExtProv.create(new DefaultInvitationInfo( sessionID, invitationID))); "
1, session.getUser().checkAdmin(); session.commit(true); Database db = session.getDatabase(); session.getUser().checkAdmin(); if (db.findUserDataType(typeName) != null) { if (ifNotExists) { return 0; , session.getUser().checkAdmin(); session.commit(true); Database XXXXX = session.getDatabase(); session.getUser().checkAdmin(); if (XXXXX.findUserDataType(typeName) != null) { if (ifNotExists) { return 0; 
1," ViewNode root = getViewManager().getApplicationRoot(); ViewNode windowRootNode = new WindowViewNode(""login"",root); this.loginViewNode = windowRootNode; return this.loginViewNode; "," ViewNode XXXXX = getViewManager().getApplicationRoot(); ViewNode XXXXX = new WindowViewNode(""login"",XXXXX); this.loginViewNode = XXXXX; return this.loginViewNode; "
1," Topology<? extends Entity> entities = algorithm.getTopology(); int reevaluateCount = (int) Math.floor(reevaluationRatio * entities.size()); reevaluate(entities, reevaluateCount); "," Topology<? extends Entity> entities = algorithm.getTopology(); int XXXXX = (int) Math.floor(reevaluationRatio * entities.size()); reevaluate(entities, XXXXX); "
0," if (registryServiceInstance == null) { String msg = ""Before activating Carbon UI bundle, an instance of "" + ""RegistryService should be in existence""; log.error(msg); throw new RuntimeException(msg); "," if (MyPlayer.currentRoom() == null) return false; return !Util.arrayContains(GameConstants.NONARGRESSIVE_NPCS, npc.getId()) && MyPlayer.currentRoom().contains(npc) && npc.getHpPercent() > 0; "
1, if (data.getActualOwner() != null) { boolean userExists = doCallbackUserOperation(data.getActualOwner().getId()); if (!userExists) { data.setActualOwner(null); data.setStatus(Status.Ready); , if (data.getActualOwner() != null) { boolean XXXXX = doCallbackUserOperation(data.getActualOwner().getId()); if (!XXXXX) { data.setActualOwner(null); data.setStatus(Status.Ready); 
0," tag = HTML.Tag.CENTER; assertEquals(""center"", tag.toString()); assertTrue(""breaks Flow"", tag.breaksFlow()); assertFalse(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); ", final int prime = 31; int result = 1; result = prime * result + ((model == null) ? 0 : model.hashCode()); result = prime * result + ((node == null) ? 0 : node.hashCode()); return result; 
0, if (getEffected() instanceof L2Npc) { L2Npc npc = (L2Npc) getEffected(); npc.setCollisionRadius(npc.getTemplate().fCollisionRadius); getEffected().stopAbnormalEffect(AbnormalEffect.GROW); , Object feature = msg.getFeature(); if(feature == IArchimatePackage.Literals.DIAGRAM_MODEL_OBJECT__FILL_COLOR || feature == IArchimatePackage.Literals.LOCKABLE__LOCKED) { refreshControls(); 
0," ObjectMapper mapper = new ObjectMapper(); SerializationConfig cnfg = mapper.getSerializationConfig(); cnfg.set(Feature.INDENT_OUTPUT, true); mapper.setSerializationConfig(cnfg); return mapper; "," when(response.getStatusCode()).thenReturn(200); assertThat(matcher.matches(response), is(true)); when(response.getStatusCode()).thenReturn(201); assertThat(matcher.matches(response), is(false)); "
0, this.configurationAdminFactory = configurationAdminFactory; this.configurationStore = configurationStore; this.factoryPid = factoryPid; this.pid = pid; this.bundleLocation = bundleLocation; ," sendBroadcast(new Intent(Intent.ACTION_MEDIA_MOUNTED, Uri.parse(""file: + Environment.getExternalStorageDirectory()))); mTitle.setText(""Sent ACTION_MEDIA_MOUNTED to trigger the Media Scanner.""); "
1," KAndJoin join = newAndJoin(0, 0); this.procedure.setJoin(join); KProcess process = this.program.newProcess(null); new KProcessor().execute(process); assertFalse(join.isEnabled(process)); "," KAndJoin join = newAndJoin(0, 0); this.procedure.setJoin(join); KProcess process = this.program.newProcess(null); new KProcessor().execute(process); assertFalse(join.isEnabled(process)); "
0," for (CubicCurve2D.Double bez : beziers) { if (bez.x1 == bez.x2) { area.drawVLine('|', (int) (bez.x1 / pixelXPerChar), (int) (bez.y1 / pixelYPerChar), (int) (bez.y2 / pixelYPerChar)); ", this.extent = extent; this.mapUnitsPerPixelX = extent.getWidth() / pixelRange.getWidth(); this.mapUnitsPerPixelY = extent.getHeight() / pixelRange.getHeight(); this.pixelRange = pixelRange; 
1, assert ownerScreenName != null && slug != null && jtwit != null; this.jtwit = jtwit; this.owner = new User(ownerScreenName); this.name = slug; this.slug = slug; this.http = jtwit.getHttpClient(); , assert ownerScreenName != null && slug != null && jtwit != null; this.jtwit = jtwit; this.owner = new User(ownerScreenName); this.name = slug; this.slug = slug; this.http = jtwit.getHttpClient(); 
0," if( sectionVec.elementAt(secId) == null) return; SessionSection ss = sectionVec.elementAt(secId); CorelyzerApp.getApp().deleteSection(collabWholeCoreTrack, ss.wholeId); ss.wholeId = -1; "," MethodCache.remove(MBThreadLocalService.class); _service = service; ReferenceRegistry.registerReference(MBThreadLocalServiceUtil.class, ""_service""); MethodCache.remove(MBThreadLocalService.class); "
0," ExecutorService e = new CustomExecutor(2); try { ArrayList<Callable<String>> l = new ArrayList<Callable<String>>(); l.add(new StringTask()); e.invokeAll(l, MEDIUM_DELAY_MS, null); "," String oldWidth = width; width = newWidth; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_SVG_ELEMENT__WIDTH, oldWidth, width)); "
0, CramRecord record = new CramRecord(); String[] chunks = string.split(STRING_FIELD_SEPARATOR); int i = 0; String chunk; chunk = chunks[i++]; if (isNotEmpty(chunk)) { sequenceID = chunk; ," String oldLang = lang; lang = newLang; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, Wps10Package.WPS_CAPABILITIES_TYPE__LANG, oldLang, lang)); "
0," if (rolledOverIndex < 0) return; StateTransitionTracker tracker = getTracker(rolledOverIndex, true, list.isSelectedIndex(rolledOverIndex)); tracker.getModel().setRollover(false); ", boolean b[] = busyRooms[day-1][period-1]; String[] p = Storage_access.getPossibleRooms(cardId); int count = 0; for (int i= 0; i<p.length; i++) if (!b[Integer.parseInt(p[i])]) count++; return count; 
1," String ret = stringMap.get(key); if (ret == null) { BetterShopLogger.Log(Level.WARNING, String.format(""%s missing from configuration file"", key)); ret = ""(\"""" + key + ""\"" is Missing)""; "," String XXXXX = stringMap.get(key); if (XXXXX == null) { BetterShopLogger.Log(Level.WARNING, String.format(""%s missing from configuration file"", key)); XXXXX = ""(\"""" + key + ""\"" is Missing)""; "
0," if(value == inst.getEObject() && !inst.isConsumed()) return null; switch(index) { case 0: return new ParameterRule_ColonKeyword_3(lastRuleCallOrigin, next, actIndex, consumed); default: return null; ", for (Iterator<Appendix> iterator = termRegistration.getApology().getAppendices().iterator(); iterator.hasNext();) { Appendix appendix = iterator.next(); iterator.remove(); appendix.remove(); 
0," return graph.hasProperty(""ROUTING_TABLES_0"", RoutingTables.class) && (graph.hasProperty(""ID_SPACE_0"", IdentifierSpace.class) || graph .hasProperty(""DATA_STORAGE_0"", DataStoreList.class)); "," consoleProcess_.writeStandardInput( input, new VoidServerRequestCallback() { @Override public void onError(ServerError error) { outputWriter_.consoleWriteError(error.getUserMessage()); "
0, switch (featureID) { case RifPackage.RELATIONGROUPS_TYPE1__GROUP: getGroup().clear(); return; case RifPackage.RELATIONGROUPS_TYPE1__RELATIONGROUP: getRELATIONGROUP().clear(); return; ," double prefHeight = WIDTH < (HEIGHT * 0.7192982456140351) ? (WIDTH * 1.3902439024390243) : HEIGHT; double prefWidth = prefHeight * 0.7192982456140351; super.setPrefSize(prefWidth, prefHeight); "
0," if (MARSHALLER != null) { try { Marshaller marshaller = Util.getInstanceStrict(MARSHALLER, Thread.currentThread().getContextClassLoader()); builder.serialization().marshaller(marshaller); "," switch (item.getItemId()) { case android.R.id.home: if (mShowHideMasterLayout != null && !mShowHideMasterLayout.isMasterVisible()) { mShowHideMasterLayout.showMaster(true, 0); return true; "
0," return !Collections2.filter(conditions, new Predicate<ExpFactorQueryCondition>() { public boolean apply(@Nullable ExpFactorQueryCondition input) { return input != null && !input.isAnything(); ", if (obj == null) return false; if (this == obj) return true; if (obj instanceof SchemeSocketFactoryAdaptor) { return this.factory.equals(((SchemeSocketFactoryAdaptor)obj).factory); 
0," Namespace workflow = (Namespace) asIObject(); if (workflow == null) throw new IllegalArgumentException(""No workflow specified.""); setDirty(true); workflow.setName(rtypes.rstring(namespace)); "," AppInfo app = (AppInfo)v.getTag(); RemoveDialogFragment removeDialog = RemoveDialogFragment.newInstance( app.getTitle(), app.getRowId() ); removeDialog.show(getFragmentManager(), ""removeDialog""); "
1, preprocessor = new BaselinePreprocessor(pp); featureExtractor = new BaselineFeatureExtractor(fe); postprocessor = new BaselinePostprocessor(po); params = new BaselineTransformerParams(pa); , preprocessor = new BaselinePreprocessor(pp); featureExtractor = new BaselineFeatureExtractor(fe); postprocessor = new BaselinePostprocessor(po); params = new BaselineTransformerParams(pa); 
0," super(null, null, BuildpathModifierAction.DROP_DOWN_ACTION, IAction.AS_DROP_DOWN_MENU); fActions= new ArrayList<BuildpathModifierAction>(); fFirstValidAction= null; setText(""""); setToolTipText(""""); "," DBCollection coll = db().getCollection(AUTHENTICATION_COLLECTION); coll.ensureIndex(mob(AuthenticationToken.SERIES, 1)); coll.ensureIndex(mob(AuthenticationToken.EMAIL, 1)); return coll; "
1," frame.bind(); GL11.glTexSubImage2D(GL11.GL_TEXTURE_2D, 0, 0, 0, frame.getTextureWidth(), frame.getTextureHeight(), GL11.GL_RGBA, GL11.GL_UNSIGNED_BYTE, frame.getTextureCompatibleBuffer()); "," frame.bind(); GL11.glTexSubImage2D(GL11.GL_TEXTURE_2D, 0, 0, 0, frame.getTextureWidth(), frame.getTextureHeight(), GL11.GL_RGBA, GL11.GL_UNSIGNED_BYTE, frame.getTextureCompatibleBuffer()); "
1," StringBuilder sb = new StringBuilder(""onFault {""); for (ResponseMessage response : event.getResponse()) sb.append(""\n response="").append(response.toString().replace(""\n"", ""\n "")); sb.append(""\n"," StringBuilder XXXXX = new StringBuilder(""onFault {""); for (ResponseMessage response : event.getResponse()) XXXXX.append(""\n response="").append(response.toString().replace(""\n"", ""\n "")); XXXXX.append(""\n"
1," if (fullyQualifiedName.indexOf('$') != -1) fullyQualifiedName = fullyQualifiedName.replace('$', '.'); try { IType type = project.findType(fullyQualifiedName); return type != null && type.exists(); "," if (fullyQualifiedName.indexOf('$') != -1) fullyQualifiedName = fullyQualifiedName.replace('$', '.'); try { IType XXXXX = project.findType(fullyQualifiedName); return XXXXX != null && XXXXX.exists(); "
1," IType declaring = type; String qualifiedName = """"; try { while (declaring != null) { if (declaring.isAnonymous()) { qualifiedName = declaring.getOccurrenceCount() + """" + qualifiedName; "," IType XXXXX = type; String XXXXX = """"; try { while (XXXXX != null) { if (XXXXX.isAnonymous()) { XXXXX = XXXXX.getOccurrenceCount() + """" + XXXXX; "
1," RandomAccessWithKey<Object, EntityStore> stores = entityStores.getEntityStores(); for (int i = 0; i < stores.size(); i++) { EntityStore entityStore = stores.get(i); entityStore.refreshPool(); "," RandomAccessWithKey<Object, EntityStore> stores = entityStores.getEntityStores(); for (int i = 0; i < stores.size(); i++) { EntityStore entityStore = stores.get(i); entityStore.refreshPool(); "
1, accumulator = new StringBuffer(); skipEntry = false; states = new Stack<State>(); states.push(State.INIT); entries = new ArrayList<ImageryInfo>(); entry = null; bounds = null; projections = null; , accumulator = new StringBuffer(); skipEntry = false; states = new Stack<State>(); states.push(State.INIT); entries = new ArrayList<ImageryInfo>(); entry = null; bounds = null; projections = null; 
0," Enterprise enterprise = getEnterprise(enterpriseId); Datacenter datacenter = datacenterService.getDatacenter(datacenterId); return repo.findLimitsByEnterpriseAndDatacenter(enterprise, datacenter); ", _fileFolderTaskPane.setCollapsible(collapsibleButton.isSelected()); _otherPlacesPane.setCollapsible(collapsibleButton.isSelected()); collapsibleOnTitle.setEnabled(collapsibleButton.isSelected()); 
0, AtomTypeCondition ac = (AtomTypeCondition)c; HGHandle h = ac.getTypeHandle(); if (h == null) h = graph.getTypeSystem().getTypeHandle(ac.getJavaClass()); return graph.getPersistentHandle(h); ," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (matrix: ""); result.append(matrix); result.append(')'); return result.toString(); "
1," dhns.writeLock(); business.clearMetaEdges(node); graphVersion.incEdgeVersion(); dhns.writeUnlock(); dhns.getEventManager().fireEvent(new GeneralEvent(EventType.META_EDGES_UPDATE, view)); "," dhns.writeLock(); business.clearMetaEdges(node); graphVersion.incEdgeVersion(); dhns.writeUnlock(); dhns.getEventManager().fireEvent(new GeneralEvent(EventType.META_EDGES_UPDATE, view)); "
1," Cache<String, String> cache = manager(0).getCache(); ErrorInducingListener listener = new ErrorInducingListener(isInjectInPre, failLoc); cache.addListener(listener); try { cache.put(k(m), v(m)); "," Cache<String, String> cache = manager(0).getCache(); ErrorInducingListener XXXXX = new ErrorInducingListener(isInjectInPre, failLoc); cache.addListener(XXXXX); try { cache.put(k(m), v(m)); "
1, Object value = super.getValue(key); if (value != null) return value; for (CurtainLevel level : this.getLevels()) { if (level != null && (value = level.getValue(key)) != null) return value; , Object XXXXX = super.getValue(key); if (XXXXX != null) return XXXXX; for (CurtainLevel level : this.getLevels()) { if (level != null && (XXXXX = level.getValue(key)) != null) return XXXXX; 
1, File file = se.getSamplePath(m_context); m_player.reset(); FileInputStream in = null; try { in = new FileInputStream(file); m_player.setDataSource(in.getFD()); m_player.prepare(); m_player.start(); , File XXXXX = se.getSamplePath(m_context); m_player.reset(); FileInputStream XXXXX = null; try { XXXXX = new FileInputStream(XXXXX); m_player.setDataSource(XXXXX.getFD()); m_player.prepare(); m_player.start(); 
0, typeCombo.setText(toString(data.getType())); hostText.setText(toString(data.getHost())); if (data.getPort() != -1) { portText.setText(toString(Integer.toString(data.getPort()))); ," CDOMSingleRef<Ability> ref = obj.get(ObjectKey.FEATEQ_STRING); if (ref != null) { Ability ab = ref.resolvesTo(); if (ab.get(ObjectKey.FEATEQ_STRING) != null) { process(context, ab); "
1," super(c, sz, parent, ""Chat""); in = new TextEntry(new Coord(0, sz.y - 20), new Coord(sz.x, 20), this, """"); in.canactivate = true; out = new Textlog(Coord.z, new Coord(sz.x, sz.y - 20), this); "," super(c, sz, parent, ""Chat""); in = new TextEntry(new Coord(0, sz.y - 20), new Coord(sz.x, 20), this, """"); in.canactivate = true; out = new Textlog(Coord.z, new Coord(sz.x, sz.y - 20), this); "
1," Iterator iter = d.keySet().iterator(); Properties result = new Properties(); while (iter.hasNext()) { Attributes.Name key = (Attributes.Name)iter.next(); result.put(key.toString(), d.get(key)); "," Iterator XXXXX = d.XXXXXSet().XXXXXator(); Properties XXXXX = new Properties(); while (XXXXX.hasNext()) { Attributes.Name XXXXX = (Attributes.Name)XXXXX.next(); XXXXX.put(XXXXX.toString(), d.get(XXXXX)); "
0," if (flt.getDetail() == null || flt.getDetail().getFirstElement() == null) return null; QName elName = flt.getDetail().getFirstElement().getQName(); return WsdlUtils.inferFault(operation, elName); "," IConfigurationElement [] children = parent.getChildren(elementName); if (throwOnError && children.length == 0) { throw new IllegalArgumentException(""Missing "" + elementName + "" child element""); "
0," for (int i = 0; i < 100; i++) { evt.setProgressValue(i + 1); evt.setProgressMessage("""" + i + ""% done...""); if (evt.getCancelStatus() != CancelStatus.REQUESTED) { try { Thread.sleep(100); ", List<Login> loginList = loginManager.getLoginByUser(userId); for ( Login lg : loginList) { if (lg.getId().getManagedSysId().equalsIgnoreCase(sysConfiguration.getDefaultManagedSysId())) { return lg; 
1, boolean status = false; if (mCertificateServer != null && mCertificateServer.length() > 0 && mMeteringId != null && mMeteringId.length() > 0) { status = generateMeteringDataChallenge(); , boolean XXXXX = false; if (mCertificateServer != null && mCertificateServer.length() > 0 && mMeteringId != null && mMeteringId.length() > 0) { XXXXX = generateMeteringDataChallenge(); 
1," String action = null; this.pageIds = getSelectedIds(PAGE_KEY, iwc); this.templateIds = getSelectedIds(TEMPLATE_KEY, iwc); if (iwc.isParameterSet(SUBMIT_EXPORT_KEY)) { action = EXPORT_ACTION; "," String XXXXX = null; this.pageIds = getSelectedIds(PAGE_KEY, iwc); this.templateIds = getSelectedIds(TEMPLATE_KEY, iwc); if (iwc.isParameterSet(SUBMIT_EXPORT_KEY)) { XXXXX = EXPORT_ACTION; "
1," StringBuffer buffer = new StringBuffer(); buffer.append(""---Navajo---\n""); buffer.append(""functions [function name]\n""); buffer.append(""adapters [adapter name]\n""); return buffer.toString(); "," StringBuffer XXXXX = new StringBuffer(); XXXXX.append(""---Navajo---\n""); XXXXX.append(""functions [function name]\n""); XXXXX.append(""adapters [adapter name]\n""); return XXXXX.toString(); "
0," TckTestSuiteWrapper suite = new TckTestSuiteWrapper( ""TCK for GWT Validation, xml constraint definition package""); suite.addTestSuite(XmlConfiguredConstraintValidatorGwtTest.class); return suite; ", final int cycleDay; final String cycleTimezone; final boolean metered; if (template.getMatchRule() == MATCH_WIFI) { cycleDay = CYCLE_NONE; cycleTimezone = Time.TIMEZONE_UTC; metered = false; 
1, if (Argument.DEFAULT.equals(argument.name())) { final Argument delegate = argument; final String name = field.getName(); argument = new Argument() { public String name() { return name; , if (Argument.DEFAULT.equals(argument.XXXXX())) { final Argument XXXXX = argument; final String XXXXX = field.getName(); argument = new Argument() { public String XXXXX() { return XXXXX; 
0, return tab.isClosable() && (getSkinnable().getTabClosingPolicy().equals(TabClosingPolicy.ALL_TABS) || getSkinnable().getTabClosingPolicy().equals(TabClosingPolicy.SELECTED_TAB) && tab.isSelected()); , while(++_index < _facets.length) { if(_facets[_index].getFacetValueHitCount() >= minHits) { facet = _facets[_index].getValue(); count = _facets[_index].getFacetValueHitCount(); return facet; 
0," TestContext testContext = TestContext.instance().create( sharedDimension, cubeA + ""\n"" + cubeB, virtualCube, null, null, null); testContext.assertQueryReturns(queryVirtualCube, resultVirtualCube); ", super(PerspectiveBarNewContributionItem.class.getName()); menuManager = new MenuManager(); menuManager.add(ContributionItemFactory.PERSPECTIVES_SHORTLIST .create(workbenchWindow)); 
1, if (open) { open = false; entityManagerFactory.dereference(); if (!entityManagerFactory.isReferenced()) { if (delegate.getTransaction().isActive()) { delegate.getTransaction().rollback(); , if (open) { open = false; entityManagerFactory.dereference(); if (!entityManagerFactory.isReferenced()) { if (delegate.getTransaction().isActive()) { delegate.getTransaction().rollback(); 
0," try { JavaIndata indata = new JavaIndata(null, 1); restTemplate.postForObject(baseUrl + ""javascala/indata"", indata, Void.class, (Object) null); fail(""Expected JSR-303 validation to fail""); ", double x2 = x*x; double p = 2.7553817452272217E-6; p = p * x2 + -1.9841269659586505E-4; p = p * x2 + 0.008333333333329196; p = p * x2 + -0.16666666666666666; p = p * x2 * x; return p; 
0," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," checkNotNull(from, ""set options to instance NONE instead of passing null""); ListBucketOptions httpOptions = new ListBucketOptions(); if (!from.isRecursive()) { httpOptions.delimiter(""/""); "
1, XMLGregorianCalendar calendar = (XMLGregorianCalendar) getValue(); if (calendar != null) { Date date = calendar.toGregorianCalendar().getTime(); return simpleDateFormat.format(date); , XMLGregorianCalendar XXXXX = (XMLGregorianCalendar) getValue(); if (XXXXX != null) { Date XXXXX = XXXXX.toGregorianCalendar().getTime(); return simpleDateFormat.format(XXXXX); 
1, if (that instanceof UnresolvedPrincipal) { UnresolvedPrincipal up = (UnresolvedPrincipal) that; return klass.equals(up.klass) && (name == null ? up.name == null : name.equals(up.name)); , if (that instanceof UnresolvedPrincipal) { UnresolvedPrincipal XXXXX = (UnresolvedPrincipal) that; return klass.equals(XXXXX.klass) && (name == null ? XXXXX.name == null : name.equals(XXXXX.name)); 
0," return new IContentAssistService() { public List<Proposal> computeCompletionProposals(Scope scope, ContentAssistInvocationContext context, ITranslationUnit unit) { return Collections.emptyList(); ", synchronized (DocumentLineDiffer.this) { fLeftDocument= null; fLeftEquivalent= null; fInitializationJob= null; fStoredEvents.clear(); fLastDifference= null; fDifferences.clear(); 
0," View v = convertView; if (v == null) { LayoutInflater vi = (LayoutInflater) getContext().getSystemService( Context.LAYOUT_INFLATER_SERVICE); v = vi.inflate(R.layout.tpl_user_aggregate_item, null); "," SubMonitor progress = SubMonitor.convert(monitor, 10); try { AttributeType a = getRMVariableMap().get(JAXBControlConstants.SCRIPT_PATH); if (a != null && a.getValue() != null) { return false; "
0," if (method != null) { final String methodName = method.getName() + ""-"" + index; if (METHOD_PARAMETER_NAME.containsKey(methodName)) { return METHOD_PARAMETER_NAME.get(methodName); ", User result = null; User user; for (int i = 0; (result == null) && (i < getUsers().size()); i++) { user = getUsers().get(i); if (user.getIdentifier().equals(userIdentifier)) { result = user; 
0," ThemeableWidget[] allThemeableWidgets = manager.getAllThemeableWidgets(); assertTrue( allThemeableWidgets.length > 1 ); assertEquals( Widget.class, allThemeableWidgets[ 0 ].widget ); ", if (myUpdatesSettingsPanel == null) return false; UpdateSettings settings = UpdateSettings.getInstance(); return !settings.myPluginHosts.equals(myUpdatesSettingsPanel.getPluginsHosts()); 
1," for (Item im : editor.getImages()) { if (""overwrite"".equals(selectedMode)) { im = removeAllMetadata(im); im.getMetadataSet().getMetadata().add(MetadataFactory.copyMetadata(metadata)); "," for (Item im : editor.getImages()) { if (""overwrite"".equals(selectedMode)) { im = removeAllMetadata(im); im.getMetadataSet().getMetadata().add(MetadataFactory.copyMetadata(metadata)); "
1," if (request.getBody() != null) { if (connection.getRequestProperty(CONTENT_TYPE) == null) { String type = request.getBodyContentType().toString(); connection.addRequestProperty(CONTENT_TYPE, type); "," if (request.getBody() != null) { if (connection.getRequestProperty(CONTENT_TYPE) == null) { String XXXXX = request.getBodyContentType().toString(); connection.addRequestProperty(CONTENT_TYPE, XXXXX); "
0, int maxSize = 0; int size; for (int i=0; i < numDataElements; i++) { size = (height-1)*scanlineStride + (width-1)*pixelStride + dataOffsets[i]; if (size > maxSize) { maxSize = size; ," for (int i = 0; i < 100; i++) { evt.setProgressValue(i + 1); evt.setProgressMessage("""" + i + ""% done...""); if (evt.getCancelStatus() != CancelStatus.REQUESTED) { try { Thread.sleep(100); "
1, WindowInterceptor.run(new Trigger() { public void run() throws Exception { JFrame frame = new JFrame(); JPanel panel = new JPanel(); frame.add(panel); panel.add(comboBox); frame.setVisible(true); , WindowInterceptor.run(new Trigger() { public void run() throws Exception { JFrame XXXXX = new JFrame(); JPanel XXXXX = new JPanel(); XXXXX.add(XXXXX); XXXXX.add(comboBox); XXXXX.setVisible(true); 
0," EntityCacheUtil.putResult(MicroblogsEntryModelImpl.ENTITY_CACHE_ENABLED, MicroblogsEntryImpl.class, microblogsEntry.getPrimaryKey(), microblogsEntry); microblogsEntry.resetOriginalValues(); ", TestSuite testSuite = new TestSuite(); testSuite.addTest(Login52xTests.suite()); testSuite.addTest(WikiTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; 
0," StringBuilder sb = new StringBuilder(""{""); for (int i = 0; i < fMap.size(); i++) { Integer key = (Integer) fMap.keyAt(i); if (key != null) { if (sb.length() > 1) { sb.append("", ""); "," int firstPossible = scopeIntroducerOffset + 1; fAlign = fScanner.findNonWhitespaceForwardInAnyPartition(firstPossible, bound); if (fAlign == DartHeuristicScanner.NOT_FOUND) { fAlign = firstPossible; "
0," ResourceFactoryProvider test = new ResourceFactoryProvider( session); ServerInterfaceHandlerFactory<?, ?>[] handlerFactories = test.getHandlerFactories(); count = handlerFactories.length; ", int clsLevel = 0; String classKey = c.getKeyName(); for (CharacterLevelFacade charLevel : pcClassLevels) { if (charLevelsFacade.getClassTaken(charLevel).getKeyName().equals(classKey)) { clsLevel++; 
0, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(Community525LatestTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; ," if(s_logger.isTraceEnabled()) s_logger.trace(""Agent disconnected, agent id: "" + agentId + "", state: "" + state + "". Will notify waiters""); _disconnected = true; notifyAll(); return true; "
0, this.includes = includes; this.excludes = excludes; this.flatten = flatten; this.includeAntExcludes = includeAntExcludes; if(hudsonHomeRelative) { this.relativeTo = RELATIVE_TO_HOME; ," addNodeAction = new AbstractAction(I18n.getMessage(""jsite.node-manager.add-node"")) { @Override @SuppressWarnings(""synthetic-access"") public void actionPerformed(ActionEvent actionEvent) { addNode(); "
1," ThemeStack themestack = (ThemeStack) stack.getContext().get(Theme.THEME_STACK); if (null == themestack) { themestack = new ThemeStack(); stack.getContext().put(Theme.THEME_STACK, themestack); "," ThemeStack XXXXX = (ThemeStack) stack.getContext().get(Theme.THEME_STACK); if (null == XXXXX) { XXXXX = new ThemeStack(); stack.getContext().put(Theme.THEME_STACK, XXXXX); "
0," super(c, new Comparator<PlayerHistory>() { @Override public int compare(PlayerHistory o1, PlayerHistory o2) { return Double.compare(o1.getAverageAllocated(), o2.getAverageAllocated()); "," String label = ((CollectionType) object).getName(); return label == null || label.length() == 0 ? getString(""_UI_CollectionType_type"") : getString(""_UI_CollectionType_type"") + "" "" + label; "
1, this.template = new TemplateTO(template); this.url = url; this.installPath = installPath; this.checksum = template.getChecksum(); this.id = template.getId(); this.templateSizeInBytes = sizeInBytes; , this.template = new TemplateTO(template); this.url = url; this.installPath = installPath; this.checksum = template.getChecksum(); this.id = template.getId(); this.templateSizeInBytes = sizeInBytes; 
1, AdapterFactoryLabelProvider labelProvider = new AdapterFactoryLabelProvider(adapterFactory); if (object instanceof EObject) { switch (columnIndex) { case 0: return labelProvider.getText(object); , AdapterFactoryLabelProvider XXXXX = new AdapterFactoryLabelProvider(adapterFactory); if (object instanceof EObject) { switch (columnIndex) { case 0: return XXXXX.getText(object); 
0," Editor editor = context.getSharedPreferences(PREF_FILE_NAME, Context.MODE_PRIVATE).edit(); editor.putString(objKey, ObjectSerializer.serialize(dataObj) ); return editor.commit(); "," GetFieldFromTableByUniqueField<Integer, String> sut = new GetFieldFromTableByUniqueField(""Person"", ""followingCount"", ""displayName""); sut.setEntityManager(getEntityManager()); sut.execute(0); "
1," Permanent permanent = game.getPermanent(source.getSourceId()); if (permanent != null) { permanent.addCounters(CounterType.CHARGE.createInstance((Integer) this.getValue(""damageAmount"")), game); "," Permanent XXXXX = game.getPermanent(source.getSourceId()); if (XXXXX != null) { XXXXX.addCounters(CounterType.CHARGE.createInstance((Integer) this.getValue(""damageAmount"")), game); "
0, return textAttributes != null && textAttributes.getEffectColor() != null && (EffectType.BOXED == textAttributes.getEffectType() || EffectType.ROUNDED_BOX == textAttributes.getEffectType()); , List<QueryNode> children = getChildren(); if (children!=null) { for (QueryNode child: children) { AqpANTLRNode n = (AqpANTLRNode) child; if (n.getTokenLabel().equals(tokenLabel)) { return n; 
0," FieldMetaData[] fields = classMetaData.getPrimaryKeyFields(); if (fields.length == 1) { throw new MetaDataException( ""Composite key strategy cannot have only 1 primary key field""); ", for ( LeftTuple entry = this; entry != null; entry = entry.getParent() ) { if( entry.getLastHandle().isEvent() ) { ((EventFactHandle)entry.getLastHandle()).decreaseActivationsCount(); 
0," Paragraph par = documentRange.getParagraph(parIndex); assertEquals(expectedStyleLvl, styleSheet.getParagraphStyle(par.getStyleIndex()).getLvl()); assertEquals(expectedParLvl, par.getLvl()); "," this._producer = producer; this._session = session; if (_log.isTraceEnabled()) { _log.trace(""new QpidRAMessageProducer "" + this + "" producer="" + Util.asString(producer) + "" session="" + session); "
1, id = buffer.readLong(); queueName = buffer.readSimpleString(); filterString = buffer.readNullableSimpleString(); browseOnly = buffer.readBoolean(); requiresResponse = buffer.readBoolean(); , id = buffer.readLong(); queueName = buffer.readSimpleString(); filterString = buffer.readNullableSimpleString(); browseOnly = buffer.readBoolean(); requiresResponse = buffer.readBoolean(); 
1," final PsiElement parent = expression.getParent(); if (parent instanceof PsiLocalVariable) { final Integer localCount = expression.getUserData(key); parent.putUserData(key, localCount); "," final PsiElement XXXXX = expression.getParent(); if (XXXXX instanceof PsiLocalVariable) { final Integer XXXXX = expression.getUserData(key); XXXXX.putUserData(key, XXXXX); "
0, switch (featureID) { case SvgPathPackage.HORIZONTAL_LINETO__HORIZONTAL_LINETO_ARGUMENT_SEQUENCE: setHorizontal_lineto_argument_sequence((horizontal_lineto_argument_sequence)newValue); return; ," final MemoryLocks finalLocks = this.locks; instr.addVariable(INSTRUMENTATION_GROUP, ""locks"", new Instrumentation.Variable<Long>() { public Long getValue() { return (long) finalLocks.size(); "
1," QName nodeTypeQName = getNodeService().getType(nodeRef); NodeRef topicNode = null; if (getDictionaryService().isSubClass(nodeTypeQName, ForumModel.TYPE_TOPIC)) { topicNode = nodeRef; "," QName XXXXX = getNodeService().getType(nodeRef); NodeRef XXXXX = null; if (getDictionaryService().isSubClass(XXXXX, ForumModel.TYPE_TOPIC)) { XXXXX = nodeRef; "
0," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (kind: ""); result.append(kind); result.append(')'); return result.toString(); "," if(eObject.eResource() != null) { return diResourceSet.getResource(eObject.eResource().getURI().trimFileExtension().appendFileExtension(HistoryModel.MODEL_FILE_EXTENSION), true); "
0," DropDownAction action = getAction(); Dockable dockable = getDockable(); if( dropDownIcon != null ){ if( !dropDownIcon.isInitialized() ){ dropDownIcon.init( getDockable(), getAction(), this ); ", microSeconds = usec % 1000; Integer temp_int = new Integer(usec); long temp_long = temp_int.longValue() / 1000L; kerberosTime = kerberosTime - (kerberosTime % 1000L) + temp_long; 
1," if (button == MouseEvent.BUTTON1) { final Point2D mouse = translateMouseCoords(e); for (InteractiveElement ie : interactives()) { if (ie.contains(mouse, state)) { setState(ie.click(state)); break; "," if (button == MouseEvent.BUTTON1) { final Point2D mouse = translateMouseCoords(e); for (InteractiveElement ie : interactives()) { if (ie.contains(mouse, state)) { setState(ie.click(state)); break; "
1, if (DeflaterConstants.DEBUGGING && start != 0) throw new IllegalStateException(); buf[end++] = (byte) s; buf[end++] = (byte) (s >> 8); buf[end++] = (byte) (s >> 16); buf[end++] = (byte) (s >> 24); , if (DeflaterConstants.DEBUGGING && start != 0) throw new IllegalStateException(); buf[end++] = (byte) s; buf[end++] = (byte) (s >> 8); buf[end++] = (byte) (s >> 16); buf[end++] = (byte) (s >> 24); 
1," em.close(); replay(em); cache = Collections.synchronizedMap(new HashMap<String, EntityManager>()); cache.put(""pu1"", em); setInternalState(producer, Map.class, cache); producer.close(); verify(em); "," em.close(); replay(em); cache = Collections.synchronizedMap(new HashMap<String, EntityManager>()); cache.put(""pu1"", em); setInternalState(producer, Map.class, cache); producer.close(); verify(em); "
1," Multimap<String, JSModule> fileRefs = LinkedHashMultimap.create(); for (JSModule module : modules) { for (CompilerInput jsFile : module.getInputs()) { fileRefs.put(jsFile.getName(), module); "," Multimap<String, JSModule> fileRefs = LinkedHashMultimap.create(); for (JSModule module : modules) { for (CompilerInput jsFile : module.getInputs()) { fileRefs.put(jsFile.getName(), module); "
1, super(view); this.teamPresenter = teamPresenter; this.view = view; this.member = member; this.projectIdentifier = projectIdentifier; this.enableEditingAsOwner = enableEditingAsOwner; , super(view); this.teamPresenter = teamPresenter; this.view = view; this.member = member; this.projectIdentifier = projectIdentifier; this.enableEditingAsOwner = enableEditingAsOwner; 
0," Collection<NotificationFilterPreferenceDTO> list = sut.execute(new GetNotificationFilterPreferenceRequest( null, Collections.singleton(""category""))); assertEquals(0, list.size()); "," Cursor c = mDbHelper.fetchAllNotes(); startManagingCursor(c); String[] from = new String[] { ExpenseEntry.KEY_DAY, ExpenseEntry.KEY_TITLE, ExpenseEntry.KEY_CATEGORY, ExpenseEntry.KEY_AMOUNT "
1, if(client==null) { if(!applicationContext.hasName()) return null; if(!applicationContext.isSetClientManagement()) return null; client=(ClientPlus) scopeContext.getClientScopeEL(this); , if(client==null) { if(!applicationContext.hasName()) return null; if(!applicationContext.isSetClientManagement()) return null; client=(ClientPlus) scopeContext.getClientScopeEL(this); 
0," assertNotNull(childName + "" is null"", child); String hrefAttribute = child.getAttribute(""href""); assertNotSame("""", childName + "" href is null \n"", hrefAttribute); return hrefAttribute; "," String key = ""key""; given(customTranslations.containsKey(key)).willReturn(false); boolean result = customTranslationCacheService.isCustomTranslationAdded(key); assertTrue(result); "
0," if (basePath == null) throw new IllegalArgumentException(); if (basePath.endsWith("".key"") || basePath.endsWith("".private"")) { basePath = basePath.substring(0, basePath.lastIndexOf(""."")); "," double altitudeMeters = altitude + verticalScale * number; double altitudeKm = altitudeMeters * WWMath.METERS_TO_KILOMETERS; return super.format(altitudeKm, result, fieldPosition); "
1," super(toolbar.getContext(), R.style.SpinnerProgressDialog); addContentView(new ProgressBar(toolbar.getContext()), new LayoutParams( LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT)); "," super(toolbar.getContext(), R.style.SpinnerProgressDialog); addContentView(new ProgressBar(toolbar.getContext()), new LayoutParams( LayoutParams.WRAP_CONTENT, LayoutParams.WRAP_CONTENT)); "
1," ArrayList<DichotomousConstraint> list = new ArrayList<DichotomousConstraint>(); assertNotSame(list, criterion.getStrata()); criterion.setStrata(list); assertEquals(list, criterion.getStrata()); "," ArrayList<DichotomousConstraint> list = new ArrayList<DichotomousConstraint>(); assertNotSame(list, criterion.getStrata()); criterion.setStrata(list); assertEquals(list, criterion.getStrata()); "
0, for (Iterator<SvgElement> it = children.iterator(); it.hasNext();) { SvgElement child = it.next(); if (child.hasAttribute(Svg.ID) && child.getAttributeAsString(Svg.ID).equals(id)) { it.remove(); ," IDocument document = fSourceViewer.getDocument(); fSourceViewer.setRedraw(false); document.set(text); fSourceViewer.setVisibleRegion(0, text.length()); fSourceViewer.setRedraw(true); "
0, Noeud noeudDebut = listePointsNoeuds.get(pointEntree); Noeud noeudFin = listePointsNoeuds.get(pointSortie); if (noeudDebut == null) { noeudDebut = createNode(pointEntree).getNoeud(); ," ImageStack stack = new ImageStack( width, height ); final ArrayImgFactory< LifeForm > factory = new ArrayImgFactory< LifeForm >(); Img<LifeForm> arena = factory.create( new long[] { width, height "
1," super(id); log.debug(""FriendsFeed()""); Label heading = new Label(""heading""); if(viewingUserId.equals(ownerUserId)) { heading.setDefaultModel(new ResourceModel(""heading.widget.my.friends"")); "," super(id); log.debug(""FriendsFeed()""); Label XXXXX = new Label(""XXXXX""); if(viewingUserId.equals(ownerUserId)) { XXXXX.setDefaultModel(new ResourceModel(""XXXXX.widget.my.friends"")); "
0," try { log.debug(""Test list members - missing date""); List<MemberResponseInfo> content = mSvc.listMembers(listId, MemberStatus.subscribed, null, 0, 100); log.debug(""Lists Content: {"," int lastIndexLink = -1; for(int i=0; i<DATABASES.size(); i++) { int index = lastIndexOfIgnoreCase(s, (String)DATABASES.get(i)+"":""); if(index > lastIndexLink) lastIndexLink = index; "
1, if (chosen && listView.getChoiceMode() == ListView.CHOICE_MODE_NONE) { listener = listView.getOnItemClickListener(); listView.setOnItemClickListener(null); listView.setChoiceMode(choiceMode); , if (chosen && listView.getChoiceMode() == ListView.CHOICE_MODE_NONE) { listener = listView.getOnItemClickListener(); listView.setOnItemClickListener(null); listView.setChoiceMode(choiceMode); 
1," int currPartId = buffer.selectPart(TextGenBuffer.TOP); buffer.append(buffer.getLineSeparator()); buffer.append(""import ""); buffer.append(fqName); buffer.append("";""); buffer.selectPart(currPartId); "," int XXXXX = buffer.selectPart(TextGenBuffer.TOP); buffer.append(buffer.getLineSeparator()); buffer.append(""import ""); buffer.append(fqName); buffer.append("";""); buffer.selectPart(XXXXX); "
1," final boolean b = conf.getBoolean(DFSConfigKeys.DFS_WEBHDFS_ENABLED_KEY, DFSConfigKeys.DFS_WEBHDFS_ENABLED_DEFAULT); log.info(DFSConfigKeys.DFS_WEBHDFS_ENABLED_KEY + "" = "" + b); return b; "," final boolean b = conf.getBoolean(DFSConfigKeys.DFS_WEBHDFS_ENABLED_KEY, DFSConfigKeys.DFS_WEBHDFS_ENABLED_DEFAULT); log.info(DFSConfigKeys.DFS_WEBHDFS_ENABLED_KEY + "" = "" + b); return b; "
1, InputPage page = null; if (pageMap == null) reloadPageMap(); page = pageMap.getInputPage(field); if (page == null) reloadPageMap(); page = pageMap.getInputPage(field); return page; , InputPage XXXXX = null; if (XXXXXMap == null) reloadPageMap(); XXXXX = XXXXXMap.getInputPage(field); if (XXXXX == null) reloadPageMap(); XXXXX = XXXXXMap.getInputPage(field); return XXXXX; 
1, assertThat(activity.viewArgument).isNull(); activity.findViewById(R.id.buttonWithViewArgument).performClick(); assertThat(activity.viewArgument).hasId(R.id.buttonWithViewArgument); , assertThat(activity.viewArgument).isNull(); activity.findViewById(R.id.buttonWithViewArgument).performClick(); assertThat(activity.viewArgument).hasId(R.id.buttonWithViewArgument); 
1, URI uri = URI.createURI(uriString); for(PackageImport pi:ecoreProfile.getPackageImports()){ if(pi.getImportedPackage().eResource().getURI().equals(uri)){ return (Model) pi.getImportedPackage(); , URI XXXXX = URI.createURI(XXXXXString); for(PackageImport pi:ecoreProfile.getPackageImports()){ if(pi.getImportedPackage().eResource().getURI().equals(XXXXX)){ return (Model) pi.getImportedPackage(); 
0," assertFalse(Ints.contains(EMPTY, (int) 1)); assertFalse(Ints.contains(ARRAY1, (int) 2)); assertFalse(Ints.contains(ARRAY234, (int) 1)); assertTrue(Ints.contains(new int[] {(int) -1", TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(Expando6012LatestTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; 
0," try { startTrans( """" ); CubeHandle cubeHandle = null; if ( value != null ) { cubeHandle = SessionHandleAdapter.getInstance( ) .getReportDesignHandle( ) .findCube( value.toString( ) ); ", if (source.getFigure() instanceof WrappingLabel) return new TextCellEditorLocator((WrappingLabel) source.getFigure()); else { return new LabelCellEditorLocator((Label) source.getFigure()); 
0," int size = factor.intValue(); if (size == 0) return """"; else if (size < 0) { throw new IllegalArgumentException(""multiply() should be called with a number of 0 or greater not: "" + size); "," URI resourceURI = EditUIUtil.getURI(getEditorInput()); Exception exception = null; Resource resource = null; try { resource = editingDomain.getResourceSet().getResource(resourceURI, true); "
1, for (SlideModel slide : mSlides) { for (MediaModel media : slide) { PduPart part = pb.getPartByContentLocation(media.getSrc()); if (part != null) { media.setUri(part.getDataUri()); , for (SlideModel slide : mSlides) { for (MediaModel media : slide) { PduPart XXXXX = pb.getPartByContentLocation(media.getSrc()); if (XXXXX != null) { media.setUri(XXXXX.getDataUri()); 
1, if ((this.globalClosingState & (OWNED_BY_OUTSIDE|REPORTED_EXPLICIT_CLOSE)) == 0) { this.globalClosingState |= REPORTED_EXPLICIT_CLOSE; problemReporter.explicitlyClosedAutoCloseable(this); , if ((this.globalClosingState & (OWNED_BY_OUTSIDE|REPORTED_EXPLICIT_CLOSE)) == 0) { this.globalClosingState |= REPORTED_EXPLICIT_CLOSE; problemReporter.explicitlyClosedAutoCloseable(this); 
1," SequenceFunction function = new SequenceFunction(new NumberSequence(1L, 2)); for (int i=1; i<=5; i=i+2) { assertEquals(""longs should be equal"", function.generateValue(), (long) i); "," SequenceFunction XXXXX = new SequenceFunction(new NumberSequence(1L, 2)); for (int i=1; i<=5; i=i+2) { assertEquals(""longs should be equal"", XXXXX.generateValue(), (long) i); "
0," if (!controller.getClassNode().isInterface()) { controller.getClassVisitor().visitField(MOD_PRIVSS, CALLSITE_FIELD, REF_DESC, null, null); generateCreateCallSiteArray(); generateGetCallSiteArray(); ", final Tab tab = getActionBar().newTab(); tab.setContentDescription(R.string.dialerIconLabel); tab.setTabListener(mTabListener); tab.setIcon(R.drawable.ic_tab_dialer); getActionBar().addTab(tab); 
0, GammaTxnFactory txFactory = stm.newTxnFactoryBuilder() .setReadTrackingEnabled(false) .setBlockingAllowed(false) .newTransactionFactory(); assertFalse(txFactory.getConfig().isReadTrackingEnabled()); , fNameEntry.setFormEntryListener(new FormEntryAdapter(this) { public void textValueChanged(FormEntry entry) { if (fDataTOC != null) { { fDataTOC.setFieldLabel(fNameEntry.getValue()); 
0," preferences.set(""Developer Tools"", ""Proxy Host"", ""4.3.2.1""); preferences.resetAll(); assertEquals(""127.0.0.1"", preferences.get(""Developer Tools"", ""Proxy Host"").getDefaultValue()); "," assertTrue( testObject.isMsgField(""D"", 55) ); assertTrue( !testObject.isMsgField(""D"", 62) ); assertTrue( !testObject.isMsgField(""A"", 55) ); assertTrue( !testObject.isMsgField(""$"", 55) ); "
1, fSelectedNodeList.remove(node); node.setSelected(false); node.setFocused(false); StructuredSelection selection = new StructuredSelection(fSelectedNodeList); fSelProvider.setSelection(selection); , fSelectedNodeList.remove(node); node.setSelected(false); node.setFocused(false); StructuredSelection XXXXX = new StructuredSelection(fSelectedNodeList); fSelProvider.setSelection(XXXXX); 
1, RepositoryPolicy policy = repository.getPolicy( snapshots ); String checksums = session.getChecksumPolicy(); if ( StringUtils.isEmpty( checksums ) ) { checksums = policy.getChecksumPolicy(); , RepositoryPolicy XXXXX = repository.getPolicy( snapshots ); String XXXXX = session.getChecksumPolicy(); if ( StringUtils.isEmpty( XXXXX ) ) { XXXXX = XXXXX.getChecksumPolicy(); 
1, OAuthHmacSigner signer = new OAuthHmacSigner(); signer.clientSharedSecret = AuthenticationServlet.CONSUMER_SECRET; if (cred != null) { signer.tokenSharedSecret = cred.getTokenSecret(); , OAuthHmacSigner XXXXX = new OAuthHmacSigner(); XXXXX.clientSharedSecret = AuthenticationServlet.CONSUMER_SECRET; if (cred != null) { XXXXX.tokenSharedSecret = cred.getTokenSecret(); 
1," boolean success = fme.attemptClaim(forFaction, this.currentLocation(), true); if (success) failCount = 0; else if ( ! success && failCount++ >= limit) { this.stop(); return false; "," boolean success = fme.attemptClaim(forFaction, this.currentLocation(), true); if (success) failCount = 0; else if ( ! success && failCount++ >= limit) { this.stop(); return false; "
1," this.sources = sources; this.delegate = delegate; loader = new SourceFileLoader(sources, delegate); worker = statusBar.createWorker(LanguageBundle.getString(""in_taskLoadSources""), loader); "," this.sources = sources; this.delegate = delegate; loader = new SourceFileLoader(sources, delegate); worker = statusBar.createWorker(LanguageBundle.getString(""in_taskLoadSources""), loader); "
0," if(mousePressed){ int xdiff = x-mouseX; int ydiff = y-mouseY; double yawdiff = -xdiff*rotationYawRatio; double pitchdiff = ydiff*rotationPitchRatio; updateRotation(yawdiff,pitchdiff); ", final Mutex sync = new Mutex(); final AbstractQueuedLongSynchronizer.ConditionObject c = (sync.newCondition()); final Mutex sync2 = new Mutex(); try { sync2.getWaitingThreads(c); shouldThrow(); 
1, isRunning = true; try { mainSocket = new ServerSocket(getLocalPort()); while (isRunning) { Socket clientSocket = null; try { clientSocket = mainSocket.accept(); doLegacyRead(clientSocket); , isRunning = true; try { mainSocket = new ServerSocket(getLocalPort()); while (isRunning) { Socket XXXXX = null; try { XXXXX = mainSocket.accept(); doLegacyRead(XXXXX); 
1," SiteInfo siteInfo = siteService.getSite(shareSiteName); if(siteInfo == null) { siteInfo = siteService.createSite( ""sitePreset"", shareSiteName, shareSiteName, """", SiteVisibility.PUBLIC); "," SiteInfo XXXXX = siteService.getSite(shareSiteName); if(XXXXX == null) { XXXXX = siteService.createSite( ""sitePreset"", shareSiteName, shareSiteName, """", SiteVisibility.PUBLIC); "
1," String label = ((EvidenceEvent)object).getId(); return label == null || label.length() == 0 ? getString(""_UI_EvidenceEvent_type"") : getString(""_UI_EvidenceEvent_type"") + "" "" + label; "," String XXXXX = ((EvidenceEvent)object).getId(); return XXXXX == null || XXXXX.length() == 0 ? getString(""_UI_EvidenceEvent_type"") : getString(""_UI_EvidenceEvent_type"") + "" "" + XXXXX; "
0, IChangeSet changeSet = createChangeSet(); changeSet.setKind(hudsonChangeSet.getKind()); for (Object item : hudsonChangeSet.getItem()) { changeSet.getChanges().add(parseChange((Node) item)); ," LockMgr myMgr = TxnLocks.getLockMgr(anInfo.getType()); TxnLock myLock = myMgr.newLock(anInfo.getOID()); synchronized(myLock) { myLock.acquire(theTxnState, TxnLock.WRITE, null, null, false); "
0," try { initScreen(); int entryId = data.getParameters().getInt(""id""); if (entryId>0) { Criteria criteria = new Criteria(); getDetail(entryId, criteria, context); context.put(""mode"", ""update""); ", AdapterFactoryLabelProvider labelProvider = new AdapterFactoryLabelProvider(adapterFactory); if (object instanceof EObject) { switch (columnIndex) { case 0: return labelProvider.getText(object); 
0," SQLiteDatabase db; Cursor c = null; Label label; db = mDbHelper.getWritableDatabase(); c = db.query(DBConsts.LABELS_TABLE_NAME, null, DBConsts.LABELS_ID +""=?"", new String []{ String.valueOf(labelId) "," if(AdViewTargeting.getRunMode()==RunMode.TEST) Log.d(AdViewUtil.ADVIEW, ""Into Wooboo""); AdViewLayout adViewLayout = adViewLayoutReference.get(); if(adViewLayout == null) { return; "
0," BusyIndicator.showWhile(fNlText.getText().getDisplay(), new Runnable() { public void run() { Choice[] choices = getNLChoices(); openPortabilityChoiceDialog(IEnvironment.P_NL, fNlText, choices); "," tag = HTML.Tag.STRIKE; assertEquals(""strike"", tag.toString()); assertFalse(""breaks Flow"", tag.breaksFlow()); assertFalse(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); "
1," if (isLiveOrCompiled()) if(!this.getCapability(ALLOW_ALIGNMENT_WRITE)) throw new CapabilityNotSetException(J3dI18N.getString(""Text3D7"")); ((Text3DRetained)this.retained).setAlignment(alignment); "," if (isLiveOrCompiled()) if(!this.getCapability(ALLOW_ALIGNMENT_WRITE)) throw new CapabilityNotSetException(J3dI18N.getString(""Text3D7"")); ((Text3DRetained)this.retained).setAlignment(alignment); "
1," super.init(); useText = getSetting(null, SETTING_USETEXT, ""%hero% summoned %creature%!""); useText = useText.replace(""%hero%"", ""$1"").replace(""%skill%"", ""$2"").replace(""%creature%"", ""$3""); "," super.init(); useText = getSetting(null, SETTING_USETEXT, ""%hero% summoned %creature%!""); useText = useText.replace(""%hero%"", ""$1"").replace(""%skill%"", ""$2"").replace(""%creature%"", ""$3""); "
1, final Iterator<SimpleFeature> iterator = iterator(); return new SimpleFeatureIterator() { @Override public SimpleFeature next() throws NoSuchElementException { return iterator.next(); , final Iterator<SimpleFeature> iterator = iterator(); return new SimpleFeatureIterator() { @Override public SimpleFeature next() throws NoSuchElementException { return iterator.next(); 
1, GNNodeRecord nr = (GNNodeRecord)that; float res = distance[index][nr.index]; if (res < 0) return Float.MAX_VALUE; if ((res < MIN_DIST) && !this.equals(that)) return MIN_DIST; return res; , GNNodeRecord XXXXX = (GNNodeRecord)that; float XXXXX = distance[index][XXXXX.index]; if (XXXXX < 0) return Float.MAX_VALUE; if ((XXXXX < MIN_DIST) && !this.equals(that)) return MIN_DIST; return XXXXX; 
1," synchronized (_lock) { if (_instance != null) throw new RuntimeException(""Object model has already been registered. This method can only be called at program startup.""); _instance = model; "," synchronized (_lock) { if (_instance != null) throw new RuntimeException(""Object model has already been registered. This method can only be called at program startup.""); _instance = model; "
0," Assert.assertTrue( ""Remote Reusable tests require Selenium Server to be running on port 4444, please start it manually before running the tests."", SeleniumHubChecker.isSeleniumHubRunning()); "," try { kbase = readKnowledgeBase(); ksession = kbase.newStatefulKnowledgeSession(); logger = KnowledgeRuntimeLoggerFactory.newThreadedFileLogger(ksession, ""log/policyQuote"", 500); "
0," individuals(a, b, c); objectProperties(p, q); kb.addDisjointProperty(p, q); kb.addPropertyValue( p, a, b ); kb.addPropertyValue( q, a, c ); assertTrue( kb.isDifferentFrom( b, c ) ); "," test(""/a|B|c|D/i"", ""/[a-d]/i""); test(""/a|B|c|D/"", ""/[BDac]/""); test(""/a|[Bc]|D/"", ""/[BDac]/""); test(""/[aB]|[cD]/"", ""/[BDac]/""); test(""/a|B|c|D|a|B/i"", ""/[a-d]/i""); test(""/a|A|/i"", ""/a?/i""); "
0," StringBuilder builder = new StringBuilder(ft.getTypeName()); for (int i = 0; i < builder.length(); i++) { if (!Character.isLetterOrDigit(builder.charAt(i))) { builder.setCharAt(i, '_'); "," StoryParser delegate = new RegexStoryParser(); StoryTransformer transformer = new StoryTransformer() { public String transform(String storyAsText) { return storyAsText.replaceAll("","", ""|""); "
1, if(closed) return; closed = true; try { write(); table.close(); texts.close(); values.close(); closeIndex(IndexType.TEXT); closeIndex(IndexType.ATTRIBUTE); closeIndex(IndexType.FULLTEXT); , if(closed) return; closed = true; try { write(); table.close(); texts.close(); values.close(); closeIndex(IndexType.TEXT); closeIndex(IndexType.ATTRIBUTE); closeIndex(IndexType.FULLTEXT); 
0," return ShrinkWrap.create(WebArchive.class, ""test.war"") .addClasses(Bridge.class, BridgeBean.class, Config.class, Manager.class, My.class) .addAsWebInfResource(EmptyAsset.INSTANCE, ""beans.xml""); "," datacenter = datacenterGenerator.createUniqueInstance(); RemoteService rs = remoteServiceGenerator.createInstance(RemoteServiceType.NODE_COLLECTOR, datacenter); setup(datacenter, rs); "
1, if( action.shouldVisitArrayModifiers ){ switch( action.visit( this ) ){ case ASTVisitor.PROCESS_ABORT : return false; case ASTVisitor.PROCESS_SKIP : return true; default : break; , if( action.shouldVisitArrayModifiers ){ switch( action.visit( this ) ){ case ASTVisitor.PROCESS_ABORT : return false; case ASTVisitor.PROCESS_SKIP : return true; default : break; 
1," try { int selectedRow = selectionModel.getLeadSelectionIndex(); if (selectedRow < 0) { POSMessageDialog.showError(this, com.floreantpos.POSConstants.SELECT_ITEM_TO_DELETE); return; "," try { int XXXXX = selectionModel.getLeadSelectionIndex(); if (XXXXX < 0) { POSMessageDialog.showError(this, com.floreantpos.POSConstants.SELECT_ITEM_TO_DELETE); return; "
0, _fileFolderTaskPane.setCollapsible(collapsibleButton.isSelected()); _otherPlacesPane.setCollapsible(collapsibleButton.isSelected()); collapsibleOnTitle.setEnabled(collapsibleButton.isSelected()); , modelListener = new TaskDataModelListener() { @Override public void attributeChanged(TaskDataModelEvent event) { if(attributeList.contains(event.getTaskAttribute().getId())) { markDirty(); 
1," QName oldName = name; name = newName; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, Fes20Package.RESOURCE_IDENTIFIER_TYPE__NAME, oldName, name)); "," QName XXXXX = name; name = newName; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, Fes20Package.RESOURCE_IDENTIFIER_TYPE__NAME, XXXXX, name)); "
1," try { product = new Product(); product.setSku(""lennor_sita-houseware-50""); List<ProductMedia> medias = service.listByProduct(product); for (ProductMedia media : medias) log.info(""Media: {"," try { product = new Product(); product.setSku(""lennor_sita-houseware-50""); List<ProductMedia> medias = service.listByProduct(product); for (ProductMedia media : medias) log.info(""Media: {"
1, int numCorrespondences = 0; for ( final Bead bead : view.getBeadStructure().getBeadList() ) numCorrespondences += bead.getRANSACCorrespondence().size(); return numCorrespondences; , int XXXXX = 0; for ( final Bead bead : view.getBeadStructure().getBeadList() ) XXXXX += bead.getRANSACCorrespondence().size(); return XXXXX; 
1," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," EditorCell XXXXX = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, XXXXX, editorContext); return XXXXX; "
1," showApplicationLoading(true); requests.getEventBus().fireEvent(new PatientInSemesterSelectedEvent(patientInSemesterProxy, patientInSemesterProxy.getOsceDays())); showApplicationLoading(false); "," showApplicationLoading(true); requests.getEventBus().fireEvent(new PatientInSemesterSelectedEvent(patientInSemesterProxy, patientInSemesterProxy.getOsceDays())); showApplicationLoading(false); "
0," ChallengeRating cr = raceFacet.get(id).getSafe( ObjectKey.CHALLENGE_RATING); final float raceCR = formulaResolvingFacet.resolve(id, cr.getRating(), """") .floatValue(); return raceCR; ", try { OrderHistoryEntity orderHistoryEntityInterface = new allbinary.data.tables.user.commerce.inventory.order.OrderHistoryEntity(); return (OrderHistory) orderHistoryEntityInterface.getOrder(id); 
0," if (hasRangeMatchingSpecific(eventDef.getSpecific(0))) { log().error(""handleSpecificMerge: definition already contains a range that matches requested SNMP specific change: "" + this); "," LOG.info(""Repository Clean Job cancelling clean job.""); boolean ok = cleanerHandle.cancel(true); LOG.info(""Repository Clean Job cancelled with result: "" + ok); scheduler.shutdownNow(); "
1," PlayerCommonData cached = playerCommonData.get(playerObjId); if(cached != null) { log.debug(""[DAO: MySQL5PlayerDAO] PlayerCommonData for id: ""+playerObjId+"" obtained from cache""); return cached; "," PlayerCommonData XXXXX = playerCommonData.get(playerObjId); if(XXXXX != null) { log.debug(""[DAO: MySQL5PlayerDAO] PlayerCommonData for id: ""+playerObjId+"" obtained from cache""); return XXXXX; "
1," this.panel = panel; setText(""Copy all""); setTooltip(""Copy the entire source code""); ImageIcon icon = new ImageIcon( getClass().getResource(""/data/tutorial/icons/copy.png"") ); setIcon( icon ); "," this.panel = panel; setText(""Copy all""); setTooltip(""Copy the entire source code""); ImageIcon XXXXX = new ImageIcon( getClass().getResource(""/data/tutorial/XXXXXs/copy.png"") ); setIcon( XXXXX ); "
1," FacesContext fc = FacesContext.getCurrentInstance(); String pattern = Application.getMessage(fc, OFFLINE_TITLE); return MessageFormat.format(pattern, property.getDocument().getName()); "," FacesContext fc = FacesContext.getCurrentInstance(); String pattern = Application.getMessage(fc, OFFLINE_TITLE); return MessageFormat.format(pattern, property.getDocument().getName()); "
1, e = new BasicBSONEncoder(); buf = new BasicOutputBuffer(); e.set(buf); bios = new ByteArrayOutputStream(); lazyDBDecoder = new LazyDBDecoder(); defaultDBDecoder = new DefaultDBDecoder(); , e = new BasicBSONEncoder(); buf = new BasicOutputBuffer(); e.set(buf); bios = new ByteArrayOutputStream(); lazyDBDecoder = new LazyDBDecoder(); defaultDBDecoder = new DefaultDBDecoder(); 
1, Random rand = new Random(); Throw myThrow = null; switch (rand.nextInt(3)) { case 0: myThrow = Throw.ROCK; break; case 1: myThrow = Throw.PAPER; break; case 2: myThrow = Throw.SCISSORS; break; , Random XXXXX = new Random(); Throw XXXXX = null; switch (XXXXX.nextInt(3)) { case 0: XXXXX = Throw.ROCK; break; case 1: XXXXX = Throw.PAPER; break; case 2: XXXXX = Throw.SCISSORS; break; 
0, final String cleanLocation = StringUtils.cleanPath(location); boolean uriResource = false; if (org.opennms.core.utils.StringUtils.isLocalWindowsPath(cleanLocation)) { uriResource = false; ," String label = ((OperationCallExp) object).getName(); return label == null || label.length() == 0 ? getString(""_UI_OperationCallExp_type"") : getString(""_UI_OperationCallExp_type"") + "" "" + label; "
1," Queue<Message> jobs = myPendingMessages.get(); myPendingMessages.remove(); myBus.notifyConnectionTerminated(this); if (!jobs.isEmpty()) { LOG.error(""Not delivered events in the queue: "" + jobs); "," Queue<Message> jobs = myPendingMessages.get(); myPendingMessages.remove(); myBus.notifyConnectionTerminated(this); if (!jobs.isEmpty()) { LOG.error(""Not delivered events in the queue: "" + jobs); "
1," CheckArg.isNotNull(selectorName, ""selectorName""); CheckArg.isNotNull(path, ""path""); this.selectorName = selectorName; this.path = path; this.hc = HashCode.compute(this.selectorName, this.path); "," CheckArg.isNotNull(selectorName, ""selectorName""); CheckArg.isNotNull(path, ""path""); this.selectorName = selectorName; this.path = path; this.hc = HashCode.compute(this.selectorName, this.path); "
1," final Semaphore semaphore = mock(Semaphore.class); doThrow(new BlockedException()).when(semaphore).acquireUninterruptibly(); return new BoundedHBaseClient(underlying, semaphore); "," final Semaphore XXXXX = mock(Semaphore.class); doThrow(new BlockedException()).when(XXXXX).acquireUninterruptibly(); return new BoundedHBaseClient(underlying, XXXXX); "
0, String type = null; final ComponentlayoutType component = getComponent(gid); if (component != null) { if (component instanceof TablelayoutType) { type = ILMLCoreConstants.TABLE_ELEMENT; , for (Iterator i = listeners.iterator(); i.hasNext();) { Object listener = i.next(); if (listener instanceof ILoginContextListener) ((ILoginContextListener) listener).onLogoutStart(subject); 
0, if (inheritsRelevantMip() && this.modelItem.getParent() != null) { if (this.modelItem.getParent().getRefreshView().isEnabledMarked()) { this.enabledMarker = true; addParentRefreshViewToModel(); , ObjectIdentityHibernate objectId = new ObjectIdentityHibernate(); assertNull(objectId.getIdentifier()); objectId.setIdentifier(10l); assertTrue(objectId.getIdentifier().equals(10l)); 
1," Object number = super.getAsObject(context, component, value); if (number != null) { if (number instanceof Long) { number = new Double(FacesUtil.getRoundDown(((Long)number).doubleValue(), 2)); "," Object XXXXX = super.getAsObject(context, component, value); if (XXXXX != null) { if (XXXXX instanceof Long) { XXXXX = new Double(FacesUtil.getRoundDown(((Long)XXXXX).doubleValue(), 2)); "
0," ACLMessage msg = newMessage(sender, receiver); InformRef body = new InformRef(); body.setPerformative(Act.INFORM_REF); body.setReferences(references); setMessageBody(msg, body); return msg; "," NodeState result = null; if (nodeStateId != null) { if (!nodeStates.containsKey(nodeStateId)) { result = new NodeState(); result.setNodeStateId(nodeStateId); nodeStates.put(nodeStateId, result); "
0," ServiceRegistryAdapterFactory factory = (ServiceRegistryAdapterFactory)EcoreUtil.getAdapterFactory(resourceSet.getAdapterFactories(), ServiceRegistryAdapterFactory.TYPE_ID); return factory; ", switch (msg.what) { case RepRapConnectionService.MSG_STATUS: mLastStaus = msg.getData(); if(mActivity != null) mActivity.onStatus(mLastStaus); break; default: super.handleMessage(msg); 
1," String thumbnailName = thumbnailDetails.getName(); if (thumbnailName == null) { throw new ThumbnailException(""When adding a thumbnail details object make sure the name is set.""); "," String XXXXX = thumbnailDetails.getName(); if (XXXXX == null) { throw new ThumbnailException(""When adding a thumbnail details object make sure the name is set.""); "
0," super(parent, style & ~(SWT.H_SCROLL | SWT.V_SCROLL | SWT.BORDER)); this.explanationComposite = new ListExplanationComposite(this, style & (SWT.H_SCROLL | SWT.V_SCROLL | SWT.BORDER)); "," RioStatement statement = this.getFirstStatement(uri, IConstants.DCTERMS_DESCRIPTION, null); if( statement != null ) { RioValue value = statement.getObject(); return value.stringValue(); "
0," long oldIndexUsage = profiler.getCounter(""Query.indexUsage""); long oldCompositeIndexUsage = profiler.getCounter(""Query.compositeIndexUsage""); if (oldIndexUsage == -1) { oldIndexUsage = 0; ", if (length() == 0) return sb; Env env = Env.getInstance(); try { Reader reader = env.getRuntimeEncodingFactory().create(toInputStream()); if (reader != null) { sb.append(reader); reader.close(); 
0, if( response.getContent().length() == 0 ) { ProtocolMessageWriter protocolWriter = ContextProvider.getProtocolWriter(); try { response.getWriter().write( protocolWriter.createMessage() ); ," while (true) { int type = readNext(charstring); if (type == CMD) { System.out.print(""CMD= "" + num + "", args=""); for (int i = 0; i < stackptr; i++) { System.out.print("" "" + stack[i]); "
0," if (cf.getChartData().getInterval() instanceof DailyInterval) { DecimalFormat df = new DecimalFormat(""###,###""); double factor = getFactor(cf); return getLabel() + "" x "" + df.format((int)factor); "," final List<String> strings = new ArrayList<String>(); strings.add(""abc""); strings.add(""def""); final GenericEntity<List<String>> entity = new GenericEntity<List<String>>( strings) { "
1, buildSubmitButton(); buildCancelButton(); form.addButton(btnSubmit); form.addButton(btnCancel); FormButtonBinding binding = new FormButtonBinding(form); binding.addButton(btnSubmit); , buildSubmitButton(); buildCancelButton(); form.addButton(btnSubmit); form.addButton(btnCancel); FormButtonBinding XXXXX = new FormButtonBinding(form); XXXXX.addButton(btnSubmit); 
0, if (isSqlWrapper()) { try { createTable(); PlayerManager.getInstance().setPlayerFactory( new SQLPlayerFactory()); WorldManager.getInstance().setWorldFactory( new SQLWorldFactory()); , long ix = Double.doubleToRawLongBits(x); long iy = Double.doubleToRawLongBits(y); ix = (0x7fffffffffffffffL & ix) | (0x8000000000000000L & iy); return Double.longBitsToDouble(ix); 
0, long end = System.currentTimeMillis() + RUN_NUM_SECONDS * 1000; try { Node vn = (Node) s.getItem(n.getPath()); while (end > System.currentTimeMillis()) { vn.checkout(); vn.checkin(); ," tag = HTML.Tag.MENU; assertEquals(""menu"", tag.toString()); assertTrue(""breaks Flow"", tag.breaksFlow()); assertTrue(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); "
0, List children = parent.getDataChoices(); if (parent.getId().equals(ID_NETWORKLINK) && (children.size() == 1) && ((DataChoice) children.get(0)).getId().equals(ID_DUMMY)) { return; , assertThat(activity.snakeCaseButtonEventHandled).isFalse(); activity.findViewById(R.id.snake_case_button).performClick(); assertThat(activity.snakeCaseButtonEventHandled).isTrue(); 
0," List existingEntries= fVariablesList.getElements(); VariableCreationDialog dialog= new VariableCreationDialog(getShell(), entry, existingEntries); if (dialog.open() != Window.OK) { return; ", this.code = builder.code; this.name = builder.name; this.description = builder.description; this.url = builder.url; this.locationType = builder.locationType; this.direction = builder.direction; 
0, SparseRowMatrix clone = (SparseRowMatrix) super.clone(); clone.rowVectors = new Vector[rowVectors.length]; for (int i = 0; i < rowVectors.length; i++) { clone.rowVectors[i] = rowVectors[i].clone(); ," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (group: ""); result.append(group); result.append(')'); return result.toString(); "
1," formatter.setSpacesBeforeAndAfterAssignments(false); assertEqualSource(""a=~/5/"", ""a =~ /5/""); formatter.setSpacesBeforeAndAfterAssignments(true); assertEqualSource(""a =~ /5/"", ""a =~/5/""); "," formatter.setSpacesBeforeAndAfterAssignments(false); assertEqualSource(""a=~/5/"", ""a =~ /5/""); formatter.setSpacesBeforeAndAfterAssignments(true); assertEqualSource(""a =~ /5/"", ""a =~/5/""); "
0," return ""#titular: "" + titular + "" #direccion: "" + direccion + "" #localidad: "" + localidad + "" #telefono: "" + telefono + "" #fax: "" + fax + "" #observaciones: "" + observaciones + ""\n""; ", this.accessStrategy = strategy; this.config = config; this.nodeSessionFactories = buildNodeSetSessionFactories(); this.allNodesSessionFactory = buildAllNodesSessionFactory(); hive.addObserver(this); 
0," assertTrue(resolver.getMComponent(chooser, getName(), getClass()) instanceof MColorChooser); assertTrue(resolver.getMComponent(fileChooser, getName(), getClass()) instanceof MFileChooser); "," if (value instanceof GeoName) { GeoName place = (GeoName) value; String text = place.name; if (place.country != null && !place.fclass.equals(""PCLI"")) { text += "" ("" + place.country + "")""; "
1," final NaiveTxnLinkedList<String> list = new NaiveTxnLinkedList<String>(stm, 2); StmUtils.atomic(new TxnVoidCallable() { @Override public void call(Txn tx) throws Exception { list.add(""1""); "," final NaiveTxnLinkedList<String> list = new NaiveTxnLinkedList<String>(stm, 2); StmUtils.atomic(new TxnVoidCallable() { @Override public void call(Txn tx) throws Exception { list.add(""1""); "
0," PPTPage pptPage = (PPTPage)pageGraphic; pptPage.setLink( PPTUtil.getHyperlink( textArea, services, reportRunnable, context ) ); super.visitText( textArea ); pptPage.setLink( null ); ", RuleSet rules = new RuleSet(); List list = PMDOptionsSettings.getDefault().getRuleList(); Iterator iterator = list.iterator(); while( iterator.hasNext() ) { rules.addRule( ( Rule )iterator.next() ); 
1," Uri uri = ContactsContract.Contacts.CONTENT_URI; String[] projection = new String[] { ContactsContract.Contacts._ID, ContactsContract.Contacts.DISPLAY_NAME, ContactsContract.Contacts.LOOKUP_KEY "," Uri XXXXX = ContactsContract.Contacts.CONTENT_URI; String[] projection = new String[] { ContactsContract.Contacts._ID, ContactsContract.Contacts.DISPLAY_NAME, ContactsContract.Contacts.LOOKUP_KEY "
0, AggregationCellHandle cell = info.getAggregationCell( ); if ( cell != null ) { if ( cell.getAggregationOnRow( ) == null && cell.getAggregationOnColumn( ) == null ) { return false; , this.setModel(new MetricsTableModel()); this.arrangeColumns(); VisDataModel.addRefreshListener(this); this.getColumnModel().getColumn(1).setCellRenderer( new ColorTableCellRenderer()); 
0, int strl = str.length(); int pos = path.indexOf(str); if (pos != -1) { OutputStream out = server.getJobOutputStream(path.substring(pos + strl - 3)); if (out == null) { return def; ," ModelAccess.instance().runWriteAction(new Runnable() { @Override public void run() { SModelRepository.getInstance().unRegisterModelDescriptor(ourInstance, AuxilaryRuntimeModel.this); "
0," PackageManager pm = mock(PackageManager.class); when(pm.checkPermission(permission, null)).thenReturn( PackageManager.PERMISSION_DENIED); when(context.getPackageManager()).thenReturn(pm); ", return StorageInfoProto.newBuilder().setClusterID(info.getClusterID()) .setCTime(info.getCTime()).setLayoutVersion(info.getLayoutVersion()) .setNamespceID(info.getNamespaceID()).build(); 
0," abrirConexion(); String query = ""UPDATE tipo_servicio SET "" + ""estado_serv=FALSE "" + ""WHERE id_serv LIKE '"" + s.getId() + ""'""; try { instruccion.executeUpdate(query); return true; "," HttpSession session = request.getSession(); String sql = (String) session.getAttribute(""pmidbuffer""); if(sql==null){ Common.requestforward(response, ""admincp.jsp?action=pmprune""); return null; "
1," if (o instanceof BasicRateMeasurement) { BasicRateMeasurement other = (BasicRateMeasurement) o; return EqualsUtil.equal(d_sampleSize, other.d_sampleSize) && EqualsUtil.equal(d_rate, other.d_rate); "," if (o instanceof BasicRateMeasurement) { BasicRateMeasurement XXXXX = (BasicRateMeasurement) o; return EqualsUtil.equal(d_sampleSize, XXXXX.d_sampleSize) && EqualsUtil.equal(d_rate, XXXXX.d_rate); "
0," final SSLCredentialsDialog dialog = new SSLCredentialsDialog(myProject, realm, authCredsOn); if (previousAuth == null) { dialog.setTitle(SvnBundle.message(""dialog.title.authentication.required"")); "," mGridImage = Allocation.createFromBitmapResource(mRS, mRes, R.drawable.robot, Allocation.MipmapControl.MIPMAP_ON_SYNC_TO_TEXTURE, Allocation.USAGE_GRAPHICS_TEXTURE); mScript.set_gTGrid(mGridImage); "
0," List<VersionHistory> translations = getEditionService().getVersionedTranslations(this.documentEdition); if(translations.size() == 0) { return getBrowsingCurrentVersionForMLContainer(document, lang); "," String source = ""'~arg'""; List<String> tokens = getTokens(source); int i = 0; assertEquals(""'"", tokens.get(i++)); assertEquals(""arg"", tokens.get(i++)); assertEquals(""'"", tokens.get(i++)); "
1," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (group: ""); result.append(group); result.append(')'); return result.toString(); "," if (eIsProxy()) return super.toString(); StringBuffer XXXXX = new StringBuffer(super.toString()); XXXXX.append("" (group: ""); XXXXX.append(group); XXXXX.append(')'); return XXXXX.toString(); "
1," setText(""Save .dot file as...""); setToolTipText(""Save .dot file as...""); setImageDescriptor(PlatformUI.getWorkbench().getSharedImages() .getImageDescriptor(ISharedImages.IMG_ETOOL_SAVEAS_EDIT)); "," setText(""Save .dot file as...""); setToolTipText(""Save .dot file as...""); setImageDescriptor(PlatformUI.getWorkbench().getSharedImages() .getImageDescriptor(ISharedImages.IMG_ETOOL_SAVEAS_EDIT)); "
1," JScrollPane scrollPane = getAncestorOfClass( JScrollPane.class, getSignalDiagram() ); if ( scrollPane != null ) { return ( ChannelLabelsView )scrollPane.getRowHeader().getView(); "," JScrollPane scrollPane = getAncestorOfClass( JScrollPane.class, getSignalDiagram() ); if ( scrollPane != null ) { return ( ChannelLabelsView )scrollPane.getRowHeader().getView(); "
0, String value = properties.getProperty(name); if (value == null) { value = bundleContext.getProperty(name); if (value == null) { return defValue == null ? null : expandVars(defValue); ," this.content = content; String[] array = content.getDefinitions().split( ""\n"" ); for ( String line : array ) { EnumRow enumRow = new EnumRow( line ); dataProvider.getList().add( enumRow ); "
0, ApplicationManager.getApplication().invokeLater(new Runnable() { public void run() { if (!myTreeBuilder.isDisposed()) { myNotifier.fireTestSelected((TestProxy)getTreeView().getSelectedTest()); ," int objects = 3178 * percent / 100; String speed = ""4.18 MiB | 223 KiB/s""; return ""Receiving objects: "" + percent + ""% ("" + objects + ""/3178), "" + speed + doneStr(percent == 100); "
1," EntityManager em = emf.createEntityManager(); int N = 3; sql.clear(); for (int i = 0; i < N; i++) { em.clear(); for (long id : BOOK_IDS) { Book pc = em.find(Book.class, id); assertNotNull(pc); "," EntXXXXXtyManager XXXXX = XXXXXf.createEntXXXXXtyManager(); XXXXXnt XXXXX = 3; sql.clear(); for (XXXXXnt XXXXX = 0; XXXXX < XXXXX; XXXXX++) { XXXXX.clear(); for (long XXXXXd : BOOK_IDS) { Book XXXXX = XXXXX.fXXXXXnd(Book.class, XXXXXd); assertXXXXXotXXXXXull(XXXXX); "
0," Validate.notNull(index, ""Price index""); Validate.notNull(curve, ""curve""); if (!_priceIndexCurves.containsKey(index)) { throw new IllegalArgumentException(""Price index curve not in set: "" + index); "," final PsiAnnotation annotation = ParameterInfoUtils.findParentOfType(context.getFile(), context.getOffset(), PsiAnnotation.class); return annotation != null ? annotation.getParameterList() : null; "
1," String oldVersion = version; version = newVersion; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, POMPackage.RELOCATION__VERSION, oldVersion, version)); "," String XXXXX = version; version = newVersion; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, POMPackage.RELOCATION__VERSION, XXXXX, version)); "
0," double exp = 0; double d1 = distanceBetween(i, j); for (int k = 0; k < numDevices; k++) { double d2 = distanceBetween(i, k); double d3 = distanceBetween(k, j); exp += Math.abs(d2 - d3); "," super.setEnabled(enabled, parent); group.setEnabled(enabled); Control[] children = group.getChildren(); for (int i = 0; i < children.length; i++) { children[i].setEnabled(enabled); "
1, shutdownInitiated = false; if (downloadsCompletedListener != null) { downloadListManager.removePropertyChangeListener(downloadsCompletedListener); downloadsCompletedListener = null; , shutdownInitiated = false; if (downloadsCompletedListener != null) { downloadListManager.removePropertyChangeListener(downloadsCompletedListener); downloadsCompletedListener = null; 
0, if (mrjVersion >= 3.0f && mrjVersion < 4.0f) return 3; else if (mrjVersion >= 2.1f && mrjVersion < 3.0f) return 2; else if (mrjVersion >= 1.5f && mrjVersion < 2.1f) return 1; return -1; ," Assert.notNull(portletWindowDefinition); Assert.notNull(portletWindowDefinition.getWindowId()); if (""resource"".equals(request.getParameter(""phase""))) { return Commons.EMPTY_PORTLETRENDERRESULT; "
1," String optionId = option; String value = """"; if (option.indexOf('=') != -1) { value = option.substring(option.indexOf('=') + 1); optionId = option.substring(0, option.indexOf('=')); "," String XXXXX = option; String XXXXX = """"; if (option.indexOf('=') != -1) { XXXXX = option.substring(option.indexOf('=') + 1); XXXXX = option.substring(0, option.indexOf('=')); "
1," DialogFixture dialog = frameFixture.dialog(Timeout.timeout(10000)); assertEquals(text, dialog.label(""OptionPane.label"").text()); dialog.button(JButtonMatcher.withText(""OK"")).click(); "," DialogFixture dialog = frameFixture.dialog(Timeout.timeout(10000)); assertEquals(text, dialog.label(""OptionPane.label"").text()); dialog.button(JButtonMatcher.withText(""OK"")).click(); "
0," if(cachedMediaDirectory.exists()) FileUtils.deleteDirectory(cachedMediaDirectory); cachedMediaDirectory.mkdir(); if(mediaCache==null) { mediaCache = activity.getSharedPreferences(cachedMediaMap, 0); "," if (text.startsWith("" Comment c = new Comment().astBlockComment(false).astContent(text); c.setPosition(new Position(startPos(), currentPos())); source.registerComment(getContext(), c); return true; "
1," if (path.isDirectory()) { File[] directoryListing = path.listFiles(filter); if (directoryListing == null) { throw new IllegalArgumentException(""Directory access problem for: "" + path); "," if (path.isDirectory()) { File[] directoryListing = path.listFiles(filter); if (directoryListing == null) { throw new IllegalArgumentException(""Directory access problem for: "" + path); "
1," StringBuilder sb = new StringBuilder(""MapFileInfo(""); boolean first = true; sb.append(""estimatedSize:""); sb.append(this.estimatedSize); first = false; sb.append("")""); return sb.toString(); "," StringBuilder XXXXX = new StringBuilder(""MapFileInfo(""); boolean XXXXX = true; XXXXX.append(""estimatedSize:""); XXXXX.append(this.estimatedSize); XXXXX = false; XXXXX.append("")""); return XXXXX.toString(); "
1," System.out.println("">> SERVICE: SEI Ping JAX-WS Service: Request received.""); if (parameter != null) { try { System.out.println("">> SERVICE: SEI Ping Input String '"" + parameter.pingInput + ""'""); "," System.out.println("">> SERVICE: SEI Ping JAX-WS Service: Request received.""); if (parameter != null) { try { System.out.println("">> SERVICE: SEI Ping Input String '"" + parameter.pingInput + ""'""); "
0," String oldHandle = handle; handle = newHandle; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, WfsPackage.DELETE_ELEMENT_TYPE__HANDLE, oldHandle, handle)); ", super.setHyperlinkUnderlineMode(mode); if (links != null) { for (int i = 0; i < links.size(); i++) { Hyperlink label = (Hyperlink) links.get(i); label.setUnderlined(mode == UNDERLINE_ALWAYS); 
1," if (obj instanceof PluginParameter) { PluginParameter other = (PluginParameter) obj; return new EqualsBuilder() .append(getKey(), other.getKey()) .append(getValue(), other.getValue()) .isEquals(); "," if (obj instanceof PluginParameter) { PluginParameter XXXXX = (PluginParameter) obj; return new EqualsBuilder() .append(getKey(), XXXXX.getKey()) .append(getValue(), XXXXX.getValue()) .isEquals(); "
1," String key = getKey(owner, tileX, tileY); final MemoryTile memoryTile = tiles.get(key); trace += ""restoreTile("" + key + "")="" + (memoryTile != null ? ""MemoryTile"" : ""null"") + "";""; return memoryTile; "," String XXXXX = getKey(owner, tileX, tileY); final MemoryTile XXXXX = tiles.get(XXXXX); trace += ""restoreTile("" + XXXXX + "")="" + (XXXXX != null ? ""MemoryTile"" : ""null"") + "";""; return XXXXX; "
0, RegisteredServiceProvider<Economy> economyProvider = plugin.getServer().getServicesManager().getRegistration(Economy.class); if (economyProvider != null) { economy = economyProvider.getProvider(); ," IntentOutlineInformationHolder newInputHolder = new IntentOutlineInformationHolder( getQuickOutlineRoot(), true); if (this.considerOnlyLocalASTElements) { treeViewer.setSelection(null); "
0, LoanScheduleEntity nextInstallment = (LoanScheduleEntity) getDetailsOfNextInstallment(); if (nextInstallment == null || nextInstallment.isPaid()) { return Money.zero(getCurrency()); , initRulesPresentation(); initCastePresentation(); IMotivation motivation = character.getCharacterConcept().getWillpowerRegainingConcept(); initMotivationPresentation(motivation); initGui(); 
1, LookupResponseType respType = new LookupResponseType(); if (reqType == null) { respType.setStatus(StatusCodeType.FAILURE); respType.setError(ErrorCode.MALFORMED_REQUEST); return respType; , LookupResponseType XXXXX = new LookupResponseType(); if (reqType == null) { XXXXX.setStatus(StatusCodeType.FAILURE); XXXXX.setError(ErrorCode.MALFORMED_REQUEST); return XXXXX; 
0, if (_forwardCurves.containsKey(index)) { return (_forwardCurves.get(index).getDiscountFactor(startTime) / _forwardCurves.get(index).getDiscountFactor(endTime) - 1) / accuralFactor; , final Project project = PlatformDataKeys.PROJECT.getData(dc); final Usage[] usages = UsageView.USAGES_KEY.getData(dc); return project != null && usages != null && usages.length > 0; 
1," String label = ((LabeledContainer)object).getName(); return label == null || label.length() == 0 ? getString(""_UI_LabeledContainer_type"") : getString(""_UI_LabeledContainer_type"") + "" "" + label; "," String label = ((LabeledContainer)object).getName(); return label == null || label.length() == 0 ? getString(""_UI_LabeledContainer_type"") : getString(""_UI_LabeledContainer_type"") + "" "" + label; "
1," OpenDialog od = new OpenDialog(""Choose data file"", OpenDialog.getLastDirectory(), ""data.arff""); if (od.getFileName()==null) return; String[] arg = new String[] { od.getDirectory() + od.getFileName() "," OpenDialog XXXXX = new OpenDialog(""Choose data file"", OpenDialog.getLastDirectory(), ""data.arff""); if (XXXXX.getFileName()==null) return; String[] arg = new String[] { XXXXX.getDirectory() + XXXXX.getFileName() "
1," try { Integer balance = moneyOfBefore-moneyOfSpend; Method method_set = Members.class.getMethod(""setExtcredits""+extcreditsNumber,Integer.class); method_set.invoke(members,balance); "," try { Integer XXXXX = moneyOfBefore-moneyOfSpend; Method XXXXX = Members.class.getMethod(""setExtcredits""+extcreditsNumber,Integer.class); XXXXX.invoke(members,XXXXX); "
1," File dir = new File(""."").getAbsoluteFile(); while (!Arrays.asList(dir.list()).contains("".git"")) { dir = dir.getParentFile(); if (dir == null) throw new RuntimeException(""No git directory found""); "," File XXXXX = new File(""."").getAbsoluteFile(); while (!Arrays.asList(XXXXX.list()).contains("".git"")) { XXXXX = XXXXX.getParentFile(); if (XXXXX == null) throw new RuntimeException(""No git XXXXXectory found""); "
0," if (minDistanceToEye < 0) { String msg = Logging .getMessage(""layers.TextureTile.MinDistanceToEyeNegative""); Logging.logger().severe(msg); throw new IllegalArgumentException(msg); ", int max = allowedChars.length(); StringBuffer buffer = new StringBuffer(); for (int i=0; i<length; i++) { int value = random.nextInt(max); buffer.append(allowedChars.charAt(value)); 
1," event.preventDefault(); final Element element = event.getRelativeElement(); groupMenu.setTarget(groupPresenter); groupMenu.show(element.getAbsoluteLeft(), element.getAbsoluteTop()); "," event.preventDefault(); final Element XXXXX = event.getRelativeElement(); groupMenu.setTarget(groupPresenter); groupMenu.show(XXXXX.getAbsoluteLeft(), XXXXX.getAbsoluteTop()); "
0," TestSuite suite = createSuite(""Extract Constant"", ""extract_constant_test_*.source.rb"", ExtractConstantTester.class); suite.addTest(TS_ExtractConstantChecks.suite()); return suite; ", if (generateTextRadio.getSelection()) { model.setPerm(permutationTextField.getText()); model.setSize(permutationLengthSlider_gen.getSelection()); model.setText(plainTextField_gen.getText()); 
0, VersionHistory editionHistory = null; if (nodeService.getType(mlContainer).equals( ContentModel.TYPE_MULTILINGUAL_CONTAINER)) { editionHistory = versionService.getVersionHistory(mlContainer); ," String[] classnames = loader.getEditableClasses(); rawLoaders.add(loader); if (classnames != null) { for (int i = 0; i < classnames.length; i++) { loaders.put(classnames[i].intern(), loader); "
0," String jarPath = normalizePath(jarEntryName); int lastDirectoryIndex = jarPath.lastIndexOf(""/""); return lastDirectoryIndex == -1 ? new Path() : new Path(jarPath.substring(0, lastDirectoryIndex)); "," fWindow = window; fSelectionProvider = selectionProvider; setText(Messages.SearchInTypeAction_SEARCH_NEWS); setImageDescriptor(OwlUI.getImageDescriptor(""icons/obj16/searchmark.gif"")); "
0," putValue(NAME, tr(""Close changesets"")); putValue(SMALL_ICON, ImageProvider.get(""closechangeset"")); putValue(SHORT_DESCRIPTION, tr(""Close the selected open changesets"")); refreshEnabledState(); "," File siteRepository = new File( new File( Manager.getStorageInstance().getDataDirectory(), ""repository"" ), ""site"" ); return new File( new File( siteRepository, project.getId() ), ""api"" ); "
1," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (rows: ""); result.append(rows); result.append(')'); return result.toString(); "," if (eIsProxy()) return super.toString(); StringBuffer XXXXX = new StringBuffer(super.toString()); XXXXX.append("" (rows: ""); XXXXX.append(rows); XXXXX.append(')'); return XXXXX.toString(); "
0," _resourceMgr.registerResourceEvent(ResourceListener.EVENT_PREPARE_MAINTENANCE_AFTER, this); _resourceMgr.registerResourceEvent(ResourceListener.EVENT_CANCEL_MAINTENANCE_AFTER, this); return true; "," String paramName = elem.getAttributeValue(""out""); String text = this.sel.getHtmlSource(); logger.info(""getHtmlsource: paramName="" + paramName + "" text="" + text); addParam(paramName, text); "
0," for (int i = 0; i < atomsCount; i++) { final int fi = i; graph.getTransactionManager().transact(new Callable<Object>() { public Object call() { theMap.put(fi, makeAtom(fi)); return null; ", String result = IPreferenceStore.STRING_DEFAULT_DEFAULT; IPreferenceStore preferenceStore = PrefUtil.getAPIPreferenceStore(); result = preferenceStore.getString( SAVED_LAYOUT_KEY ); return result; 
0, Set<Double> intersection = new HashSet<Double>(); Set<Double> union = new HashSet<Double>(); for (int i = 0; i < a.length(); ++i) { double d = a.get(i); intersection.add(d); union.add(d); ," String s = (String) objVal; if (s == null || s.trim().isEmpty()) { ((UIInput)ui).setValid(false); fc.addMessage(ui.getClientId(fc), new FacesMessage(""required to be a non-empty string"")); "
1," if (workarounds != null && workarounds.hasWorkaround(variable.getName(), variable.getDataType())) { return workarounds.getRasterDataType(variable.getName(), variable.getDataType()); "," if (workarounds != null && workarounds.hasWorkaround(variable.getName(), variable.getDataType())) { return workarounds.getRasterDataType(variable.getName(), variable.getDataType()); "
1," return tableName( new StringBuilder( ownerEntityTable ).append( ""_"" ) .append( associatedEntityTable != null ? associatedEntityTable : addUnderscores( propertyName ) ).toString() ); "," return tableName( new StringBuilder( ownerEntityTable ).append( ""_"" ) .append( associatedEntityTable != null ? associatedEntityTable : addUnderscores( propertyName ) ).toString() ); "
0," super(NAME, false, true, true, WIDTH, HEIGHT, u, true, LocationDrivenPortlet.ALL_OPT); contentPane = new VerticalPanel(); contentPane.add(buildHeader()); setContent(contentPane); "," super.setUp(CLEAR_TABLES, Division.class, Employee.class, FullName.class, PhoneNumber.class ); createObj(); rsAllPhones = getAll(PhoneNumber.class); rsAllEmps = getAll(Employee.class); "
0, if (!master) return; ExperimenterData exp = (ExperimenterData) registry.lookup( LookupNames.CURRENT_USER_DETAILS); if (exp == null) return; GroupData gp = null; try { gp = exp.getDefaultGroup(); ," return new ResolvedModuleVersion() { public ModuleVersionIdentifier getId() { return new DefaultModuleVersionIdentifier(id.getModuleGroup(), id.getModuleName(), id.getModuleVersion()); "
0," if (!ActionUtil.isEditable(fEditor)) return; RefactoringExecutionStarter.startIntroduceFactoryRefactoring(SelectionConverter.getInputAsCompilationUnit(fEditor), selection, getShell()); "," mContext.enforceCallingOrSelfPermission(BLUETOOTH_PERM, ""Need BLUETOOTH permission""); String discoveringProperty = getProperty(""Discovering"", false); if (discoveringProperty == null) { return false; "
1," SQLiteDatabase db = mOpenHelper.getWritableDatabase(); String where = StatusTable._ID + "" =? ""; if (!TextUtils.isEmpty(owner)) { where += "" AND "" + StatusTable.OWNER_ID + "" = '"" + owner + ""' ""; "," SQLiteDatabase XXXXX = mOpenHelper.getWritableDatabase(); String XXXXX = StatusTable._ID + "" =? ""; if (!TextUtils.isEmpty(owner)) { XXXXX += "" AND "" + StatusTable.OWNER_ID + "" = '"" + owner + ""' ""; "
1, switch (ringVolume) { case 0: break; case 1: ringSound1.play(); break; case 2: ringSound2.play(); break; case 3: ringSound3.play(); break; default: throw new IllegalStateException(); , switch (ringVolume) { case 0: break; case 1: ringSound1.play(); break; case 2: ringSound2.play(); break; case 3: ringSound3.play(); break; default: throw new IllegalStateException(); 
0, final File[] files = message.getFile(); final FileFilter filter = getFileType(); for (int i = 0; i < files.length; i++) { if (filter.accept(files[i])) { theController.openFile(files[i]); ," Watcher watcher = game.getState().getWatchers().get(""opponent cast three or more spells"", source.getControllerId()); if (watcher != null && watcher.conditionMet()) { return true; "
1," MapReduceJob mapReduceJob = new RiakMapReduceJob(riakTemplate); MapReduceOperation mapJs = new JavascriptMapReduceOperation( ""function(values){ var row=Riak.mapValuesJson(values); return [row]; "," MapReduceJob XXXXX = new RiakMapReduceJob(riakTemplate); MapReduceOperation XXXXX = new JavascriptMapReduceOperation( ""function(values){ var row=Riak.mapValuesJson(values); return [row]; "
1, final int prime = 31; int result = 1; result = prime * result + ((address == null) ? 0 : address.hashCode()); result = prime * result + ((label == null) ? 0 : label.hashCode()); return result; , final int XXXXX = 31; int XXXXX = 1; XXXXX = XXXXX * XXXXX + ((address == null) ? 0 : address.hashCode()); XXXXX = XXXXX * XXXXX + ((label == null) ? 0 : label.hashCode()); return XXXXX; 
0, graphAccess = TcManager.getInstance(); graphAccess.unbindWeightedTcProvider(weightedA); graphAccess.unbindWeightedTcProvider(weightedA1); graphAccess.unbindWeightedTcProvider(weightedBlight); ," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "
1," ContextWrapper cw = new ContextWrapper(context); SharedPreferences pref = cw.getSharedPreferences(""pref"", MODE_PRIVATE); Editor e = pref.edit(); e.putString(""uri"", DEFAULT_IMAGE_URI);e.commit(); "," ContXXXXXxtWrappXXXXXr XXXXX = nXXXXXw ContXXXXXxtWrappXXXXXr(contXXXXXxt); SharXXXXXdPrXXXXXfXXXXXrXXXXXncXXXXXs XXXXX = XXXXX.gXXXXXtSharXXXXXdPrXXXXXfXXXXXrXXXXXncXXXXXs(""XXXXX"", MODE_PRIVATE); Editor XXXXX = XXXXX.XXXXXdit(); XXXXX.putString(""uri"", DEFAULT_IMAGE_URI);XXXXX.commit(); "
0, BatchObject bObj; int i; for( i = 0; i < batchVector.size(); i++ ) { bObj = (BatchObject) batchVector.get( i ); if( (bObj.command == BatchObject.CMD_LABEL) && (bObj.labelObj.equals( label ))) break; ," String osName = System.getProperty(""os.name""); boolean isMac = osName.startsWith(""Mac"") || osName.startsWith(""Darwin""); boolean isWin = osName.startsWith(""Windows""); if (isMac) { return "".dylib""; "
0," StringBuilder sb = new StringBuilder(); sb.append( tabs ).append( ""AD-MANDATORY-FOR-KDC : {\n"" ); sb.append( tabs ).append( super.toString( "" "" + tabs ) ).append( '\n' ); sb.append( tabs + """," Log.info(Log.FAC_TEST, ""VERIFIER: ""+content.fullName()); ContentName contentName = content.fullName(); if ( failVerify != null ) { if (contentName.equals(failVerify.fullName())) return false; "
0," QueueConsumer consumer; if (subscriptionExists(subscriptionId)) { QueueConsumer tmp = null; try { tmp = createConsumer(true, autoAck, subscriptionId, null, consumerTimeoutSeconds * 1000, false); "," ImmutableEntry<String, Integer> entry = new ImmutableEntry<String, Integer>(""foo"", 2); Assert.assertEquals(""foo"", AbstractImmutableEntry.<String>getKeyFunction().valueOf(entry)); "
0, int[] currPos = getPosition(); if (currPos[0] > x) setX(currPos[0] - x); if (currPos[0] < 0) setX(currPos[0] + x); if (currPos[1] > y) setY(currPos[1] - y); if (currPos[1] < 0) setY(currPos[1] + y); , if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; final RequestTask that = (RequestTask) o; return !(tile != null ? !tile.equals(that.tile) : that.tile != null); 
1, if (playerToPotentiallyDestroy != null) { playerToPotentiallyDestroy.kill(); try { if (!(playerToPotentiallyDestroy instanceof TrekBot)) playerToPotentiallyDestroy.socket.close(); , if (playerToPotentiallyDestroy != null) { playerToPotentiallyDestroy.kill(); try { if (!(playerToPotentiallyDestroy instanceof TrekBot)) playerToPotentiallyDestroy.socket.close(); 
0," fCombo.removeSelectionListener(selectionListener); Object listener= fModifyListeners.get(selectionListener); if (listener instanceof Listener) fCombo.removeListener(SWT.Modify, (Listener)listener); ", token_source = tm; token = new Token(); jj_ntk = -1; jj_gen = 0; for (int i = 0; i < 28; i++) jj_la1[i] = -1; for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls(); 
0," this.graph = graph; Iterator<Node> it = graph.getNodes().iterator(); if (!it.hasNext()) { originalTopLeft = new PointImpl(0f, 0f); originalBottomRight = new PointImpl(0f, 0f); return; ", Calendar timezone = getTimezoneCalendar(); if (timezone == null) return null; VTimeZone vtz = (VTimeZone) timezone.getComponents().getComponent(Component.VTIMEZONE); return new TimeZone(vtz); 
0, IResource deltaResource = delta.getResource(); if (deltaResource instanceof IProject && (delta.getKind() == IResourceDelta.REMOVED || (delta.getFlags() & IResourceDelta.OPEN) != 0)) { return false; ," if (cIndex < 0 || cIndex > components.size()) { throw new IndexOutOfBoundsException(String.format( ""cIndex: %d (expected: >= 0 && <= numComponents(%d))"", cIndex, components.size())); "
1," IPath deployPlanPath = comp.getRootFolder().getUnderlyingFolder().getProjectRelativePath().append(""META-INF"").append(CONNECTOR_PLAN_NAME); return comp.getProject().getFile(deployPlanPath); "," IPath XXXXX = comp.getRootFolder().getUnderlyingFolder().getProjectRelativePath().append(""META-INF"").append(CONNECTOR_PLAN_NAME); return comp.getProject().getFile(XXXXX); "
0, Button acceptButton = getAcceptButton(); ImageButton acceptImageButton = getAcceptImageButton(); if (acceptButton != null) { acceptButton.setOnClickListener(onAcceptButtonClickedListener); ," ProcessInstanceInfo processInstanceInfo = manager.find(ProcessInstanceInfo.class, processInstance.getId()); if (processInstanceInfo == null) { processInstanceInfo = new ProcessInstanceInfo(); "
1, switch (getDBType(em)) { case db2: assertLockTestSQLs(Select + tableLfName + Where + DB2Lock); break; case oracle: case derby: default: assertLockTestSQLs(Select + tableLfName + Where + ForUpdate); , switch (getDBType(em)) { case db2: assertLockTestSQLs(Select + tableLfName + Where + DB2Lock); break; case oracle: case derby: default: assertLockTestSQLs(Select + tableLfName + Where + ForUpdate); 
0," CamelEndpointDispatcher endpoint = CamelContextHelper.mandatoryLookup(getCamelContext(), lookupKey, CamelEndpointDispatcher.class); configuration.setEndpointDispatcher(endpoint); "," editorComponent = textField; this.clickCountToStart = 2; delegate = new EditorDelegate() { public void setValue(Object value) { textField.setText((value != null) ? value.toString() : """"); "
0, this.outText.setText( getEmptyHtmlPage() ); this.outText.setEditable( false ); this.runAnalysisAction.restore(); setControlsEnabled( true ); this.exportAction.setEnabled( false ); ," Tree t = new Tree(); t.getNodeTable().addColumns(LABEL_SCHEMA); Node r = t.addRoot(); r.setString(LABEL, ""0,0""); if ( depth > 0 ) balancedHelper(t, r, breadth, depth-1); return t; "
1, getNodeStore().forceUpdateRecord( record ); record = getNodeStore().forceGetRaw( record ); if ( record.inUse() ) { markProperty( record.getNextProp() ); markRelationship( record.getNextRel() ); , getNodeStore().forceUpdateRecord( record ); record = getNodeStore().forceGetRaw( record ); if ( record.inUse() ) { markProperty( record.getNextProp() ); markRelationship( record.getNextRel() ); 
0," btnOK.setEnabled(true && isRunning); btnCancel.setEnabled(true && isRunning); lblApprovalInfo.setText(""Error: "" + caught.getMessage()); lblApprovalInfo.setStyleName(""info-error""); "," if (myThread2.eventTime != Thread2.STARTING) error (""Only a Process in INITIAL state can call scheduleNext""); myThread2.eventTime = Sim.time(); Sim.eventList.insertFirst (myThread2); "
0," Group myController = new Group(cp5, (ControllerGroup<?>) cp5.controlWindow.getTabs().get(1), theName, theX, theY, theW, 9); cp5.register(theObject, theIndex, myController); return myController; "," String input = ""{ \""queryasyncjobresultresponse\"" : {\""jobid\"":1138,\""jobstatus\"":1,\""jobprocstatus\"":0,\""jobresultcode\"":0,\""jobresulttype\"":\""object\"",\""jobresult\"":{\""success\"":true"
0, if (this.uniqueKey == null) { Binding binding = (Binding) this.bindingCache.get(this); if (binding != null) { this.isResolved = true; this.uniqueKey = new String(binding.computeUniqueKey()); ," if (!statementEventListeners.isEmpty()) { StatementEvent event = new StatementEvent(this,statement); for (StatementEventListener l : statementEventListeners) { l.statementClosed(event); "
1," Element dep = findChild(depsEl, DEPENDENCY, childEquals(GROUP_ID, groupId), childEquals(ARTIFACT_ID, artifactId)); if (dep == null) { dep = createDependency(depsEl, groupId, artifactId, version); "," Element XXXXX = findChild(XXXXXsEl, DEPENDENCY, childEquals(GROUP_ID, groupId), childEquals(ARTIFACT_ID, artifactId)); if (XXXXX == null) { XXXXX = createDependency(XXXXXsEl, groupId, artifactId, version); "
0, EventState state = new EventState(); for (EventTrigger trigger : _triggers) { EventState subState = trigger.getState(timestamp); if (subState!=null) { state.addAll(subState.values()); ," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; "
1, boolean wasNotZero = notAllZero; if (newValue != 0) notAllZero = true; else { boolean notAllZ = false; for (int i = 0; i < 5; i++) { if (0 != this.give[i].getIntValue()) { notAllZ = true; break; , boolean XXXXX = XXXXXero; XXXXXf (newValue != 0) XXXXXero = true; else { boolean XXXXX = false; for (XXXXXnt XXXXX = 0; XXXXX < 5; XXXXX++) { XXXXXf (0 != thXXXXXs.gXXXXXve[XXXXX].getIntValue()) { XXXXX = true; break; 
0," assertNotNull(actualString); assertTrue( String.format(""Regexp Assertion Failed:\nExpected: %s\nActual: %s\n"", expectedRegexp, actualString), actualString.matches(expectedRegexp)); ", MenuItem mMenu_getinv = menu.findItem(R.id.menu_getinv); MenuItem mMenu_send = menu.findItem(R.id.menu_send); mMenu_getinv.setEnabled(isAgentOk); mMenu_send.setEnabled(isAgentOk); return true; 
1," ArrayList<Table> dbs = new ArrayList<Table>(); dbs = references.get(program); if(dbs != null){ Table table1 = new BasicTable(table,crud); if(!dbs.contains(table1)){ dbs.add(table1); "," ArrayList<Table> dbs = new ArrayList<Table>(); dbs = references.get(program); if(dbs != null){ Table XXXXX = new BasicTable(table,crud); if(!dbs.contains(XXXXX)){ dbs.add(XXXXX); "
1," JMenuItem retv = null; if (object != null && object instanceof CompositeEntity) { _saveInLibraryAction.setConfiguration(ctrlr._configuration); retv = menu.add(_lookInsideAction,""Look Inside""); "," JMenuItem XXXXX = null; if (object != null && object instanceof CompositeEntity) { _saveInLibraryAction.setConfiguration(ctrlr._configuration); XXXXX = menu.add(_lookInsideAction,""Look Inside""); "
1, TableStructure structure = TableViewPolicy .getTableStructure(getManifestedComponent()); updateFeedProviders(structure); updateEvalutors(); loadHeaderSettings(); loadCellSettings(); , TableStructure XXXXX = TableViewPolicy .getTableStructure(getManifestedComponent()); updateFeedProviders(XXXXX); updateEvalutors(); loadHeaderSettings(); loadCellSettings(); 
0," PdfName fieldname = new PdfName(key); PdfCollectionField field = (PdfCollectionField)schema.get(fieldname); if (field.fieldType == PdfCollectionField.TEXT) { put(fieldname, value); ", try { int myNProcessors = Integer.parseInt(myNumberOfProcessors); int requestNProcessors = Integer.parseInt(requestedNumberOfProcessors); return myNProcessors >= requestNProcessors; 
1," Log.d(TAG, getId() + "":begin ConnectedThread""); mmSocket = socket; InputStream tmpIn = null; OutputStream tmpOut = null; try { tmpIn = socket.getInputStream(); tmpOut = socket.getOutputStream(); "," Log.d(TAG, getId() + "":begin ConnectedThread""); mmSocket = socket; InputStream XXXXX = null; OutputStream XXXXX = null; try { XXXXX = socket.getInputStream(); XXXXX = socket.getOutputStream(); "
0," paths = new ArrayList<Door>(); usePath = ""None""; doorDir = 'a'; walkToTile = null; doorIndex = 0; tryCount = 0; lastTry = 0; lastDoor = null; log(""Random event finished ~ Made By Zenzie""); "," double min = Double.MAX_VALUE;; double max = -Double.MAX_VALUE; while ( input.hasNext() ) { double next = input.next().getRealDouble(); min = Math.min( next, min ); max = Math.max( next, max ); "
0, switch (featureID) { case SUCPackage.SU_CMODEL__ROLES: return roles != null && !roles.isEmpty(); case SUCPackage.SU_CMODEL__USECASES: return usecases != null && !usecases.isEmpty(); ," this.tree = treeRoot; treeListBox.clear(); if (treeListBox != null) { removeAbsoleteTreeItems(treeListBox, tree); addTreeItem(treeListBox, tree, 0, 0); getElement().layoutElements(); "
0, switch (item.getItemId()) { case R.id.item_add_comment: addComment(); return true; case R.id.item_add_attachment: addAttachment(); return true; default: return super.onOptionsItemSelected(item); ," try { WebEntityCreationRule webEntityCreationRule = new WebEntityCreationRule(); lruIndex.indexWebEntityCreationRule(webEntityCreationRule); fail(""Expected IndexException wasn't thrown""); "
0," for (String factoryName : _failedFactories) { try { String message = Messages.bind( Messages.AnnotationProcessorFactoryLoader_unableToLoadFactoryClass, new String[] {factoryName, _project.getName()"," if (fToken == null) return NLS.bind(PDEUIMessages.RemoveBuildEntryResolution_removeEntry, fEntry); return NLS.bind(PDEUIMessages.RemoveBuildEntryResolution_removeToken, fToken, fEntry); "
1," return new ICallHierarchyService () { public CalledByResult findCalledBy(Scope scope, ICElement callee, IProgressMonitor pm) throws CoreException, InterruptedException { return new CalledByResult(); "," return new ICallHierarchyService () { public CalledByResult findCalledBy(Scope scope, ICElement callee, IProgressMonitor pm) throws CoreException, InterruptedException { return new CalledByResult(); "
0," GraGraLoad gragraLoad = new GraGraLoad(frame); gragraLoad.addLoadEventListener(this); gragraLoad.load(); if (!this.msg.equals("""")) { JOptionPane.showMessageDialog(frame, this.msg); "," LocalDate base = new LocalDate(2005, 6, 9, COPTIC_PARIS); DateMidnight test = base.toDateMidnight(); check(base, 2005, 6, 9); assertEquals(new DateMidnight(2005, 6, 9, COPTIC_LONDON), test); "
0, assertThat(activity.avoidStackOverflowEventHandled).isFalse(); activity.findViewById(R.id.stackOverflowProofButton).performClick(); assertThat(activity.avoidStackOverflowEventHandled).isTrue(); , IStructuredSelection selection = (IStructuredSelection) fTreeViewer.getSelection(); if (selection.isEmpty() || selection.size() != 1) return null; return selection.getFirstElement(); 
0," switch (featureID) { case ConfigurationPackage.PROR_PRESENTATION_CONFIGURATIONS__PRESENTATION_CONFIGURATIONS: return ((InternalEList<?>)getPresentationConfigurations()).basicRemove(otherEnd, msgs); "," color.setId( ""paint.divider"" ); color.connect( station.getController() ); g.setColor( color.value() ); g.fillRect( bounds.x, bounds.y, bounds.width, bounds.height ); color.connect( null ); "
0," if (isElementAvailable(payment, ""chosenNonAcceptedLoanRepayments"")) { selenium.select(""chosenNonAcceptedLoanRepayments"", payment); selenium.click(""defineAcceptedPaymentTypes.button.addRepayments""); "," super(tr(""Export sigs...""), ""exportsigs"", tr(""Export all signatures to XML file.""), Shortcut.registerShortcut(""file:exportsigs"", tr(""Export sigs to XML...""), KeyEvent.VK_X, Shortcut.ALT_CTRL)); "
1, switch (featureID) { case ProcessPackage.CONNECTIONS_TYPE__GROUP: return group != null && !group.isEmpty(); case ProcessPackage.CONNECTIONS_TYPE__CONNECTION: return !getConnection().isEmpty(); , switch (featureID) { case ProcessPackage.CONNECTIONS_TYPE__GROUP: return group != null && !group.isEmpty(); case ProcessPackage.CONNECTIONS_TYPE__CONNECTION: return !getConnection().isEmpty(); 
0," Tag tag = createTag(""test""); expect(repository.getByKeyword(""test"")).andReturn(tag); expect(repository.getByKeyword(""TEST"")).andReturn(tag); expect(repository.getByKeyword("" test"")).andReturn(tag); ", if ( propertyName.indexOf( '.' ) > 0 ) { String root = StringHelper.root( propertyName ); Criteria crit = getAliasedCriteria( root ); if ( crit != null ) { return getEntityName( crit ); 
0," List<Entity> products = dataDefinitionService.get(BASIC_PLUGIN_IDENTIFIER, BASIC_MODEL_PRODUCT).find().list() .getEntities(); for (Entity product : products) { generateAndAddTechnology(product); "," Path other = mock(Path.class); when(other.isRoot()).thenReturn(true); assertThat(root.compareTo(other), is(0)); assertThat(root.equals(other), is(true)); assertThat(root.equals(root), is(true)); "
0, this.username = cs.decode(username).toString(); this.uid = uid; this.gid = gid; this.homeDirectory = cs.decode(homeDirectory).toString(); this.shell = cs.decode(shell).toString(); ," if (super.replaceForwardDecl (oldEntry, newEntry)) return true; int index = _supports.indexOf (oldEntry); if ( index >= 0) _supports.setElementAt (newEntry, index); return (index >= 0); "
0," String name = super.getName(); if (name == null || """".equals(name)) name = DetailedDataSource.defaultName(getHost(), getPort(), getInstanceName(), getSchema(),getUser()); return name; "," InternetDomainName domain = InternetDomainName.from(""foo.com""); assertEquals(""www.foo.com"", domain.child(""www"").name()); try { domain.child(""www.""); fail(""www..google.com should have been invalid""); "
0, synchronized (lockObject) { if (componentInstance != null) { componentInstance.removeInstanceStateListener(this); componentInstance.stop(); componentInstance.dispose(); componentInstance = null; , if (callFrameTop > 0) { LuaCallFrame callFrame = callFrameStack[callFrameTop - 1]; if (callFrame == null) { callFrame = new LuaCallFrame(this); callFrameStack[callFrameTop - 1] = callFrame; 
1," logger.finer(""starting recognition""); linguist.startRecognition(); pruner.startRecognition(); scorer.startRecognition(); localStart(); if (startTime == 0.0) { startTime = System.currentTimeMillis(); "," logger.finer(""starting recognition""); linguist.startRecognition(); pruner.startRecognition(); scorer.startRecognition(); localStart(); if (startTime == 0.0) { startTime = System.currentTimeMillis(); "
1, if (member instanceof IMember) { IRubyScript script = ((IMember)member).getRubyScript(); if (script != null && script.isWorkingCopy()) { member = (IMember) member.getPrimaryElement(); , if (member instanceof IMember) { IRubyScript XXXXX = ((IMember)member).getRubyScript(); if (XXXXX != null && XXXXX.isWorkingCopy()) { member = (IMember) member.getPrimaryElement(); 
0, double x = input.doubleValueOf(0); if (x < 0) return 0.0; else if (x<=10) return -160/10*x; else if (x <= 15) return -160/5*(15-x); else if (x <= 20) return -200/5*(x-15); else return -200.0; ," Category category = Category.ANALYSIS; String fooParameter = ""blah 12345""; String jsonString = ""{ \""category\"" : \"""" + category + ""\"", \""fooParameter\"" : \"""" + fooParameter + ""\"" "
0," String stylePropName = getClass().getName() + "".style""; String style = LogManager.getLogManager().getProperty(stylePropName); try { this.style = Style.valueOf(style.toUpperCase()); "," StringBuilder str = new StringBuilder(); str.append(""[CIFS Sess=""); str.append( m_sess.getUniqueId()); str.append("", pkt=""); str.append( m_smbPkt.toString()); str.append(""]""); return str.toString(); "
1, int size = tableModel.getRowCount(); for (int i=0;i<size;i++) { AbstractSeriesDownloader sd = tableModel.getDownload(i); if(sd.getStatus() == AbstractSeriesDownloader.DOWNLOADING){ sd.pause(); , int XXXXX = tableModel.getRowCount(); for (int i=0;i<XXXXX;i++) { AbstractSeriesDownloader XXXXX = tableModel.getDownload(i); if(XXXXX.getStatus() == AbstractSeriesDownloader.DOWNLOADING){ XXXXX.pause(); 
0," OSCJavaToByteArrayConverter stream = new OSCJavaToByteArrayConverter(); stream.write(""/example1""); stream.write(100); byte[] answer = {47, 101, 120, 97, 109, 112, 108, 101, 49, 0, 0, 0, 0, 0, 0, 100"," this.deletionLayer.clear(); Enumeration<Type> types = this.grammar.getTypes(); while (types.hasMoreElements()) { Type t = types.nextElement(); this.deletionLayer.put(t, Integer.valueOf(0)); "
0," ListMultimap<String, Object> variableMap; if (name.startsWith(TEMPORARY_CONTEXT_VAR_PREFIX) || name.startsWith(TEMPORARY_INVOCATION_ARG_PREFIX)) { variableMap = globalVariableMap; ", ViewGroup.MarginLayoutParams params = (ViewGroup.MarginLayoutParams) view.getLayoutParams(); return view.getHeight() + (includeMargins ? params.topMargin + params.bottomMargin : 0); 
0," double rlat = Math.atan2(z, Math.sqrt(x * x + y * y)); double rlon = getLongitudeRadians(); double c = r * Math.cos(rlat); x = c * Math.cos(rlon); y = c * Math.sin(rlon); z = r * Math.sin(rlat); ", String code = error.getErrorCode( ); try { os.write( code.getBytes( ) ); for ( int i = code.length( ); i < 60; i++ ) os.write( ' ' ); os.write( error.getMessage( ).getBytes( ) ); os.write( '\n' ); 
1," if (!message.startsWith(""GUID:ERROR"")) return; String parts[] = message.split("":""); setErrors(new Double(parts[2]), new Double(parts[3]), new Double(parts[4]), new Double(parts[5])); "," if (!message.startsWith(""GUID:ERROR"")) return; String parts[] = message.split("":""); setErrors(new Double(parts[2]), new Double(parts[3]), new Double(parts[4]), new Double(parts[5])); "
0," tag = HTML.Tag.SAMP; assertEquals(""samp"", tag.toString()); assertFalse(""breaks Flow"", tag.breaksFlow()); assertFalse(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); ", final IStructuredSelection selected = (IStructuredSelection) projectsList.getSelection(); if ((selected != null) && (selected.size() == 1)) { return (Sample) (selected).getFirstElement(); 
1," User user = (User) getSession().createCriteria(User.class) .add(Restrictions.eq(""userName"", username)) .add(Restrictions.eq(""password"", hashedPassword)) .uniqueResult(); return (user != null); "," User XXXXX = (User) getSession().createCriteria(User.class) .add(Restrictions.eq(""XXXXXName"", XXXXXname)) .add(Restrictions.eq(""password"", hashedPassword)) .uniqueResult(); return (XXXXX != null); "
0," super.setText(text); getStyledDocument().setCharacterAttributes(0, text.length(), DEFAULT_STYLE, true); for(int i=0; i<DATABASES.size(); i++) setStyleForHyperLinks(text, (String)DATABASES.get(i)); "," PollStatus status = (m_statusTable == null ? PollStatus.unknown() : m_statusTable.get(new PassiveStatusKey(nodeLabel, ipAddr, svcName))); return (status == null ? PollStatus.up() : status); "
0," if (numero == 100000) num_letracm = ""cien mil""; if (numero >= 100000 && numero <1000000){ flag=1; num_letracm = centena(numero/1000).concat("" mil "").concat(centena(numero%1000)); "," logger.info(""Deleting question(id="" + questionId + "").""); Question q = questionDao.findById(questionId); if (q == null) { logger.warn(""Cannot find question(id="" + questionId + "").""); return; "
1," StringBuffer sb = super.dump(indent, alreadyDumped); if (alreadyDumped.contains(this)) return sb; alreadyDumped.add(this); sb.append(eol).append(exp.dump(indent + 1, alreadyDumped)); return sb; "," StringBuffer XXXXX = super.dump(indent, alreadyDumped); if (alreadyDumped.contains(this)) return XXXXX; alreadyDumped.add(this); XXXXX.append(eol).append(exp.dump(indent + 1, alreadyDumped)); return XXXXX; "
1," Boolean useOldThemeConf = Boolean.valueOf(Framework.getProperty(LocalThemeConfig.OLD_THEME_CONFIGURATION_PROPERTY)); if (Boolean.TRUE.equals(useOldThemeConf)) { return ""old_theme_configuration""; "," Boolean XXXXX = Boolean.valueOf(Framework.getProperty(LocalThemeConfig.OLD_THEME_CONFIGURATION_PROPERTY)); if (Boolean.TRUE.equals(XXXXX)) { return ""old_theme_configuration""; "
1," final JobConfigHistoryBaseAction action = createJobConfigHistoryBaseAction(); try { action.getConfigXml(diffDir); fail(""Expected for "" + diffDir + "" "" + IllegalArgumentException.class); "," final JobConfigHistoryBaseAction XXXXX = createJobConfigHistoryBaseAction(); try { XXXXX.getConfigXml(diffDir); fail(""Expected for "" + diffDir + "" "" + IllegalArgumentException.class); "
1," Guardian.assertWithinRange(""frameNumber"", frameNumber, 0, getFrameCount() - 1); final int frameHeight; if ((frameNumber + 1) * maxHeight > sceneHeight) { frameHeight = sceneHeight % maxHeight; "," Guardian.assertWithinRange(""frameNumber"", frameNumber, 0, getFrameCount() - 1); final int frameHeight; if ((frameNumber + 1) * maxHeight > sceneHeight) { frameHeight = sceneHeight % maxHeight; "
0," super.onCreateOptionsMenu(menu); menu.add(Menu.NONE, MENU_REFRESH, Menu.NONE, R.string.refresh) .setIcon(R.drawable.ic_menu_refresh); MenuUtils.addPreferencesToMenu(this, menu); return true; "," if (doReset()) { showMessageDialog(logger, ""Reset Successful!\nTurn your ignition OFF and then\nback ON to complete the process."", ""Reset "" + logger.getTarget(), INFORMATION_MESSAGE); "
0, if (Modifier.isStatic(((FieldDeclaration)fragment.getParent()).getModifiers())) return false; if (!fWrittenVariables.containsKey(binding)) { if (fragment.getInitializer() == null) { return false; , HypermediaController ctrl = ctlr.getAnnotation(HypermediaController.class); Class<?> c = ctrl.model(); Object instance; if (c == ClientResponse.class) { instance = c.cast(response); 
1, for (int i = 0; i < config.getReceiverCount(); i++) { IntentFilter filter = new IntentFilter(); for (String action : config.getReceiverIntentFilterActions(i)) { filter.addAction(action); , for (XXXXXnt XXXXX = 0; XXXXX < confXXXXXg.getReceXXXXXverCount(); XXXXX++) { IntentFXXXXXlter fXXXXXlter = new IntentFXXXXXlter(); for (StrXXXXXng actXXXXXon : confXXXXXg.getReceXXXXXverIntentFXXXXXlterActXXXXXons(XXXXX)) { fXXXXXlter.addActXXXXXon(actXXXXXon); 
0, if (e.getSource()!=null && e.getSource() instanceof org.openswing.swing.table.client.Grid) { try { if (oldEv==null || !e.equals(oldEv)) { oldEv = e; codBox.processKeyEvent(e); oldEv = null; , Iterator<CmsListDefaultAction> it = m_defaultActions.iterator(); while (it.hasNext()) { CmsListDefaultAction action = it.next(); if (action.getId().equals(actionId)) { it.remove(); return action; 
1," prepareMatching(); return (controllerRequirement == null || StringUtil.equals(controllerRequirement, controller)) && (actionRequirement == null || StringUtil.equals(actionRequirement, action)); "," prepareMatching(); return (controllerRequirement == null || StringUtil.equals(controllerRequirement, controller)) && (actionRequirement == null || StringUtil.equals(actionRequirement, action)); "
0, final ChangeRecord<AbstractPMDRecord> changes = changeEvaluator.changeRecordFor(event); treeViewer.getControl().getDisplay().syncExec(new Runnable() { public void run() { updateViewer(changes); , int sum = 0; int top = name.length(); int lshift = 20; for (int idx = 0; idx < top; ++idx) { int c = name.charAt(idx) & 0xffff; if (c == '.' && lshift > 0) lshift -= 4; else sum += c << lshift; 
1, switch (featureID) { case GFPackage.SOURCE_MODULE__INCOMPLETE: return isIncomplete(); case GFPackage.SOURCE_MODULE__TYPE: return getType(); case GFPackage.SOURCE_MODULE__BODY: return getBody(); , switch (featureID) { case GFPackage.SOURCE_MODULE__INCOMPLETE: return isIncomplete(); case GFPackage.SOURCE_MODULE__TYPE: return getType(); case GFPackage.SOURCE_MODULE__BODY: return getBody(); 
1, final Logger logger = Logger.getLogger(name); final Handler[] handlers = logger.getHandlers(); if (handlers != null) { for (int i = 0; i < handlers.length; i++) { logger.removeHandler(handlers[i]); , fXXXXXnal Logger XXXXX = Logger.getLogger(name); fXXXXXnal Handler[] handlers = XXXXX.getHandlers(); XXXXXf (handlers != null) { for (XXXXXnt XXXXX = 0; XXXXX < handlers.length; XXXXX++) { XXXXX.removeHandler(handlers[XXXXX]); 
1," if (getEditor().cleanupNames() > 0) { DataEventDispatcher.getInstance().fireDataChangedListener( getEditor().getAut().getObjMap(), DataState.StructureModified, UpdateState.onlyInEditor); "," if (getEditor().cleanupNames() > 0) { DataEventDispatcher.getInstance().fireDataChangedListener( getEditor().getAut().getObjMap(), DataState.StructureModified, UpdateState.onlyInEditor); "
0, jvmChoice.store(); jvmBootClasspath.store(); jvmClasspath.store(); jvmParamaters.store(); debugModeEditor.store(); TomcatLauncherPlugin.getDefault().savePluginPreferences(); return true; ," return new BatchCall(""Reset password"") { public void doCall() throws Exception { AdminService os = context.getAdminService(); result = os.resetExperimentersPassword(ctx, object); "
1, List names = new ArrayList(); for (Iterator iter = datasets.values().iterator(); iter.hasNext();) { DatasetConfig dset = (DatasetConfig) iter.next(); names.add(dset.getInternalName()); , List names = new ArrayList(); for (Iterator iter = datasets.values().iterator(); iter.hasNext();) { DatasetConfig dset = (DatasetConfig) iter.next(); names.add(dset.getInternalName()); 
0," Thread result = new Thread( schedulerThreadGroup, r, namePrefix + threadNumber.getAndIncrement() ); result.setDaemon( this.deamonThread ); result.setPriority( this.threadPriority ); return result; "," StringBuffer ret; ret = new StringBuffer (); ret.append (super.toHtml (verbatim)); if (!isEmptyXmlTag ()) { putChildrenInto (ret, verbatim); if (null != getEndTag ()) putEndTagInto (ret, verbatim); "
0, AppWidgetManager appWidgetManager = AppWidgetManager.getInstance(context); int[] appWidgetIds = appWidgetManager.getAppWidgetIds(THIS_APPWIDGET); return (appWidgetIds.length > 0); ," if (exclusions.contains(""*"")) { for (String name : inclusions) { if (StringUtils.fuzzyMatch(repository.name, name)) { results.put(repository.name, FederationPullStatus.PENDING); return true; "
1," BBCode bb = bbCodes.get(""youtube""); formatter.addBb(bb); Assert.assertEquals(String.format(""a video: %s"", this.tagHtml(bb, ""www."", ""123456"")), formatter.format(""a video: [YOUTUBE]http: "," BBCode XXXXX = XXXXXCodes.get(""youtube""); formatter.addBb(XXXXX); Assert.assertEquals(String.format(""a video: %s"", this.tagHtml(XXXXX, ""www."", ""123456"")), formatter.format(""a video: [YOUTUBE]http: "
0," boolean kerning = font.hasKerning(); MinOptMax wordIPD = MinOptMax.ZERO; if (LOG.isDebugEnabled()) { LOG.debug ( ""PW: ["" + thisStart + "","" + lastIndex + ""]: {"" + "" -M"" + "", level = "" + level + "" ", if(this == other) return true; if(other == null) return false; if(!other.getClass().equals(getClass())) return false; HBaseTarget o = (HBaseTarget)other; return table.equals(o.table); 
1," if (isLiveOrCompiled()) if(!this.getCapability(ALLOW_PATH_READ)) throw new CapabilityNotSetException(J3dI18N.getString(""Text3D8"")); return ((Text3DRetained)this.retained).getPath(); "," if (isLiveOrCompiled()) if(!this.getCapability(ALLOW_PATH_READ)) throw new CapabilityNotSetException(J3dI18N.getString(""Text3D8"")); return ((Text3DRetained)this.retained).getPath(); "
0," if (getMonthClosingDate() != null && getMonthClosingDate().compareTo(DateUtils.getDateWithoutTimeStamp(trxnDate)) >= 0) { throw new BusinessRuleException(""errors.invalidTxndateMonthAlreadyClosed""); "," String surefirePath = this.surefireDir.getAbsolutePath(); String testList = ErlUtils.toModuleList(this.tests, ""'"", ""'""); return String.format(this.script, surefirePath, this.suiteName, testList); "
1, if (this == obj) return true; if ((obj == null) || (obj.getClass() != this.getClass())) return false; CurrentDVD test = (CurrentDVD) obj; return test.getTitle().trim().equals(this.title.trim()); , if (this == obj) return true; if ((obj == null) || (obj.getClass() != this.getClass())) return false; CurrentDVD test = (CurrentDVD) obj; return test.getTitle().trim().equals(this.title.trim()); 
0," String name = super.getName(); if (name == null || """".equals(name)) name = DetailedDataSource.defaultName(getHost(), getPort(), getInstanceName(), getSchema(), getUser()); return name; "," String oldMasks = masks; masks = newMasks; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_CLIP_PATH_ELEMENT__MASKS, oldMasks, masks)); "
1, moveSelectedValidation(true); downLink.setVisible(currentValidations.indexOf(validation) > 0); upLink.setVisible(currentValidations.indexOf(validation) < currentValidations.size()); , moveSelectedValidation(true); downLink.setVisible(currentValidations.indexOf(validation) > 0); upLink.setVisible(currentValidations.indexOf(validation) < currentValidations.size()); 
1," final Faction forFaction = this.argAsFaction(0, myFaction); int radius = this.argAsInt(1, 1); if (radius < 1) { msg(""<b>If you specify a radius, it must be at least 1.""); return; "," final Faction forFaction = this.argAsFaction(0, myFaction); int radius = this.argAsInt(1, 1); if (radius < 1) { msg(""<b>If you specify a radius, it must be at least 1.""); return; "
0," DirectionsStatus o = DirectionsStatus.ZERO_RESULTS; assertEquals(""zero_results"", o.value()); assertEquals(DirectionsStatus.ZERO_RESULTS, DirectionsStatus.fromValue(""zero_results"")); finishTest(); ", if (!(element instanceof PsiElement)) return false; PsiElement context = (PsiElement)element; for(int i = 0; i < myLevel && context != null; i++){ context = context.getContext(); 
1, singleReferencesForEObjectFlatComboViewer.setInput(settings); if (current != null) { singleReferencesForEObjectFlatComboViewer.setSelection(new StructuredSelection(settings.getValue())); , singleReferencesForEObjectFlatComboViewer.setInput(settings); if (current != null) { singleReferencesForEObjectFlatComboViewer.setSelection(new StructuredSelection(settings.getValue())); 
1," if (disguiseDB.containsKey(event.getPlayer().getName())) { Player player = event.getPlayer(); sendMovement(event.getPlayer(), null, event.getPlayer().getVelocity(), event.getTo()); "," if (disguiseDB.containsKey(event.getPlayer().getName())) { Player XXXXX = event.getPlayer(); sendMovement(event.getPlayer(), null, event.getPlayer().getVelocity(), event.getTo()); "
1," if ((zoom > ZOOM_MAX) || (zoom < ZOOM_MIN)) { throw new CmsIllegalArgumentException(Messages.get().container( Messages.ERR_PARAMETER_OUT_OF_RANGE_2, OPTION_ZOOM, new Integer(zoom))); "," if ((zoom > ZOOM_MAX) || (zoom < ZOOM_MIN)) { throw new CmsIllegalArgumentException(Messages.get().container( Messages.ERR_PARAMETER_OUT_OF_RANGE_2, OPTION_ZOOM, new Integer(zoom))); "
0," return new StringBuffer(BASEURL).append(""cellid="").append(cellId).append(""&mcc="").append(mcc).append(""&mnc="").append(mnc).append(""&lac="").append(lac).append(""&key="").append(ericssonKey).toString(); "," super(cms, Messages.get().getBundle().key(Messages.GUI_SOURCESEARCH_THREAD_NAME_0)); initHtmlReport(cms.getRequestContext().getLocale()); m_session = session; m_settings = settings; "
0," ReviewboardClient client = getClientManager().getClient(repository); try { client.updateRepositoryData(false, monitor); client.performQuery(repository, query, collector, monitor); "," Set<String> taxonDuplicates = duplicateSymbols.get(taxonId); if (taxonDuplicates == null) { taxonDuplicates = findDuplicateSymbols(taxonId); duplicateSymbols.put(taxonId, taxonDuplicates); "
1," myComponent = new MyComponent(); delegate = new EditorDelegate() { public void setValue(Object value) { myComponent.getTextField().setText((value != null) ? value.toString() : """"); "," myComponent = new MyComponent(); delegate = new EditorDelegate() { public void setValue(Object value) { myComponent.getTextField().setText((value != null) ? value.toString() : """"); "
1," String result = """"; if( element instanceof QueryApiBean ) result = ((QueryApiBean) element).getQueryApi().toString() + "" - "" + ((QueryApiBean) element).getQueryUri(); return result; "," String XXXXX = """"; if( element instanceof QueryApiBean ) XXXXX = ((QueryApiBean) element).getQueryApi().toString() + "" - "" + ((QueryApiBean) element).getQueryUri(); return XXXXX; "
0, this.setModel(new MetricsTableModel()); this.arrangeColumns(); VisDataModel.addRefreshListener(this); this.getColumnModel().getColumn(1).setCellRenderer( new ColorTableCellRenderer()); ," String imageUrl = tbtn.getToggledRolloverImageUrl(); if (imageUrl == null) return getDefaultToggledImageRolloverUrl(context); else return Resources.applicationURL(context, imageUrl); "
0, registerMeter.processingTotal += 1; registerMeter.operatingLogic +=1; if(registerMeter.temporaryMemory > registerMeter.peakMemory){ registerMeter.peakMemory = registerMeter.temporaryMemory; ," if (dir.isDirectory()) { String[] children = dir.list(); for (int i = 0; i < children.length; i++) { boolean success = deleteDir(new File(dir, children[i])); if (!success) { return false; "
1, Object val = node.getNodeData().getAttributes().getValue(column.getIndex()); val = dynamicHelper.getDynamicValue(val); if (val != null) { values.add(val); return val.equals(match); , Object val = node.getNodeData().getAttributes().getValue(column.getIndex()); val = dynamicHelper.getDynamicValue(val); if (val != null) { values.add(val); return val.equals(match); 
1," int in; int slot; Enumeration<Slot> en; for (en = this.slots.elements(), slot = 0; en.hasMoreElements(); slot++) { in = en.nextElement().getIndex(); if (in == index) return slot; "," int in; int slot; Enumeration<Slot> en; for (en = this.slots.elements(), slot = 0; en.hasMoreElements(); slot++) { in = en.nextElement().getIndex(); if (in == index) return slot; "
1, StringBuffer buf = new StringBuffer(); buf.ensureCapacity(m_data.length * 3); for (int x = 0; x < m_data.length; x++) { buf.append('.'); if (m_data[x] >= 0) { buf.append(m_data[x]); , StringBuffer XXXXX = new StringBuffer(); XXXXX.ensureCapacity(m_data.length * 3); for (int XXXXX = 0; XXXXX < m_data.length; XXXXX++) { XXXXX.append('.'); if (m_data[XXXXX] >= 0) { XXXXX.append(m_data[XXXXX]); 
0, this.mActivity = activity; this.mSubreddit = subreddit; this.mThreadId = threadId; this.mSettings = settings; this.mClient = client; this.mProcessCommentsTask = new ProcessCommentsTask(mActivity); ," event.setCancelled(true); Boolean nightmare = (plugin.nightmare.Chance != 0) && new Random().nextInt(100) < plugin.nightmare.Chance; player.enterDream(player.getLocation(),nightmare); "
1," if(c instanceof SpoutChunk) { SpoutChunk sc = (SpoutChunk)c; short[] custids = sc.getCustomBlockIds(); if(custids != null) { return new SpoutChunkSnapshot(ss, custids, c.getWorld().getMaxHeight()); "," if(c instanceof SpoutChunk) { SpoutChunk XXXXX = (SpoutChunk)c; short[] custids = XXXXX.getCustomBlockIds(); if(custids != null) { return new SpoutChunkSnapshot(ss, custids, c.getWorld().getMaxHeight()); "
1," String algo = getConf().get(""spotify.hadoop.openpgp.encryption""); if (algo == null) { if (getPublicKey() != null || getEncryptionPassPhrase() != null) algo = ""cast5""; else algo = ""null""; "," String XXXXX = getConf().get(""spotify.hadoop.openpgp.encryption""); if (XXXXX == null) { if (getPublicKey() != null || getEncryptionPassPhrase() != null) XXXXX = ""cast5""; else XXXXX = ""null""; "
0," if (currentResource != null) { String internalFormat = getPathVariableManager().convertFromUserEditableFormat(variableValue, operationMode == EDIT_LINK_LOCATION); return internalFormat; "," String s = StatementBuilder.create() .try_() .finish() .catch_(Throwable.class, ""t"") .finish() .toJavaString(); assertEquals(""Failed to generate empty try catch block"", EMPTY_TRY_CATCH_BLOCK, s); "
1," String s = super.toString(); return s + "" REQUEST, desired IP "" + mRequestedIp + "" from host '"" + mHostName + ""', param list length "" + (mRequestedParams == null ? 0 : mRequestedParams.length); "," String XXXXX = XXXXXuper.toString(); return XXXXX + "" REQUEST, deXXXXXired IP "" + mRequeXXXXXtedIp + "" from hoXXXXXt '"" + mHoXXXXXtName + ""', param liXXXXXt length "" + (mRequeXXXXXtedParamXXXXX == null ? 0 : mRequeXXXXXtedParamXXXXX.length); "
1," super(request, location, device); getHeaders().add(UpnpHeader.Type.ST, new RootDeviceHeader()); getHeaders().add(UpnpHeader.Type.USN, new UDNHeader(device.getIdentity().getUdn())); "," super(request, location, device); getHeaders().add(UpnpHeader.Type.ST, new RootDeviceHeader()); getHeaders().add(UpnpHeader.Type.USN, new UDNHeader(device.getIdentity().getUdn())); "
0," PSOAction action1 = new PSOAction(); action1.setLabel(""label""); PSOAction action2 = new PSOAction(); action2.setLabel(""label""); int result = action1.compareTo(action2); assertEquals(0,result); ", ControllerPretimedPlan currplan = plan.get(cplan); for(int i=0;i<currplan.numinters;i++){ ControllerPretimedIntersectionPlan z = currplan.intersplan.get(i); if(z.myIntersectionID==id) return z; 
1," String result = a + "" += "" + I(b,c,d) + "" + x"" + x + "" + "" + Ti + "";""; result += ""\n""; result += a + "" = "" + b + "" + "" + rotateLeft(a,s) + "";""; System.out.println(result); return result; "," String XXXXX = a + "" += "" + I(b,c,d) + "" + x"" + x + "" + "" + Ti + "";""; XXXXX += ""\n""; XXXXX += a + "" = "" + b + "" + "" + rotateLeft(a,s) + "";""; System.out.println(XXXXX); return XXXXX; "
0, this.eventType = eventType; this.context = context; this.fieldNameX = fieldNameX; this.computer = new HoltWintersComputer(alpha); this.deviationComputer = new HoltWintersComputer(ALPHA); ," return equals( (PropertyDescriptor[]) attributesA.toArray(new PropertyDescriptor[attributesA.size()]), (PropertyDescriptor[]) attributesB.toArray(new PropertyDescriptor[attributesB.size()])); "
0, this.c = i; if (i == 0) { this.player.abilities.canFly = false; this.player.abilities.isFlying = false; this.player.abilities.canInstantlyBuild = false; this.player.abilities.isInvulnerable = false; ," if (!active) return; super.closeChatRoom(); if (!sendNotification) { ChatsyManager.getMessageEventManager().sendCancelledNotification(getParticipantJID(), threadID); sendNotification = true; "
0, IVRChannelMapping ivrChannelMappingFromDb = findByPhoneNumberPattern(ivrChannelMapping.getPhoneNumberPattern()); if (ivrChannelMappingFromDb == null) { super.add(ivrChannelMapping); , if (null != obj) { for (Method method : obj.getClass().getMethods()) { if (method.isAnnotationPresent(BridgePreDestroy.class)) { if (!Modifier.isPublic(method.getModifiers())) { continue; 
1, if ( RequestConstants.REQ_DIRECT_EDIT.equals( request.getType( ) ) || RequestConstants.REQ_OPEN.equals( request.getType( ) ) ) return true; return super.understandsRequest( request ); , if ( RequestConstants.REQ_DIRECT_EDIT.equals( request.getType( ) ) || RequestConstants.REQ_OPEN.equals( request.getType( ) ) ) return true; return super.understandsRequest( request ); 
0," tokenReadCountSinceLastAdvance++; distinctEventsSinceLastAdvance.add(new MockParseMetaToken(""token()"", this)); testForEndlessLoop(); return current == null ? null : current.getToken(); "," std.spaceAfterComma = true; std.parametersWithSpace = false; std.operatorsWithSpace = true; String s = """" + ""t1 = ( 1, )\n"" + ""t2 = ( -1, )\n"" + ""l1 = [ 1 ]\n"" + ""l2 = [ -1 ]\n"" + ""d1 = { 1:0 "
1, Node node = getNode(xPath); NamedNodeMap namedNodeMap = node.getAttributes(); Attr attr = document.createAttribute(attrName); attr.setNodeValue(attrValue); namedNodeMap.setNamedItem(attr); , Node XXXXX = getNode(xPath); NamedNodeMap XXXXX = XXXXX.getAttributes(); Attr XXXXX = document.createAttribute(XXXXXName); XXXXX.setNodeValue(XXXXXValue); XXXXX.setNamedItem(XXXXX); 
0," if (input == null || !recipes.containsKey(Arrays.asList(input.getItem(), input.stackSize, input.getItemDamage(), input.isItemEnchanted(), input.stackTagCompound != null))) { return null; "," String oldViewBox = viewBox; viewBox = newViewBox; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_SVG_ELEMENT__VIEW_BOX, oldViewBox, viewBox)); "
1," View fragView = inflater.inflate(R.layout.action_bar_tab_content, container, false); TextView text = (TextView) fragView.findViewById(R.id.text); text.setText(mText); return fragView; "," View XXXXX = inflater.inflate(R.layout.action_bar_tab_content, container, false); TextView XXXXX = (TextView) XXXXX.findViewById(R.id.XXXXX); XXXXX.setText(mText); return XXXXX; "
1," Debug.logVerbose(""encache put key value"", module); Element element = new Element(key, value); Cache cache = manager.getCache(ehcacheConf.getPredefinedCacheName()); cache.put(element); "," Debug.logVerbose(""enXXXXX put key value"", module); Element XXXXX = new Element(key, value); Cache XXXXX = manager.getCache(ehXXXXXConf.getPredefinedCacheName()); XXXXX.put(XXXXX); "
1, if ( this == o ) return true; if ( o == null || getClass() != o.getClass() ) return false; UserGroupInfo that = ( UserGroupInfo ) o; if ( !name.equals( that.name ) ) return false; return true; , if ( this == o ) return true; if ( o == null || getClass() != o.getClass() ) return false; UserGroupInfo XXXXX = ( UserGroupInfo ) o; if ( !name.equals( XXXXX.name ) ) return false; return true; 
1," final double safeDeceleration = lcModelMOBIL.getSafeDeceleration(); final double gapFront = me.getNetDistance(frontVeh); if (gapFront < lcModelMOBIL.getMinimumGap()) { logger.debug(""gapFront={"," final double XXXXX = lcModelMOBIL.getSafeDeceleration(); final double XXXXX = me.getNetDistance(frontVeh); if (XXXXX < lcModelMOBIL.getMinimumGap()) { logger.debug(""XXXXX={"
1," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; "," EditorCell XXXXX = null; XXXXX = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, XXXXX, editorContext); return XXXXX; "
0, assertTrue(conversation.isTransient()); assertFalse(interceptedBean.isConversationLongRunningDuringInvocation5()); try { interceptedBean.begin(); interceptedBean.endAndThrowFatalException(); , if (this == obj) return true; if (obj == null) return false; if (getClass() != obj.getClass()) return false; CascadeFrom other = (CascadeFrom) obj; if (id != other.id) return false; return true; 
0," if(isVirtual) owner.sendMessage(prefix + ""Drill activated! ["" + -id +""]"" ); else if( linked ) parent.enable(); else owner.sendMessage(prefix + ""Drill activated! ["" + id +""]"" ); enabled = true; "," try { if((token == null || token == """") && (secret == null || secret == """") && auth == false && browser == false) authURL = provider.retrieveRequestToken(consumer, OAUTH_CALLBACK_URL); "
0," String oldStroke = stroke; stroke = newStroke; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_CLIP_PATH_ELEMENT__STROKE, oldStroke, stroke)); "," LOG.debug(""start getFolderParent()""); StoredObject so = validator.getFolderParent(context, repositoryId, folderId, extension); Folder folder = null; if (so instanceof Folder) { folder = (Folder) so; "
1," IpInfoModel ipInfo = new IpInfoModel(); for (Entry<String, String> entry : this.getIps().entrySet()) { ipInfo.addOption(entry.getKey(), entry.getKey() + "" - "" + entry.getValue()); "," IpInfoModel XXXXX = new IpInfoModel(); for (Entry<String, String> entry : this.getIps().entrySet()) { XXXXX.addOption(entry.getKey(), entry.getKey() + "" - "" + entry.getValue()); "
1," final String s = StatementBuilder.create().newArray(String.class).initialize(""1"", ""2"").toJavaString(); assertEquals(""Failed to generate 1-dimensional String array"", ""new String[] { \""1\"", \""2\"" "," final String XXXXX = StatementBuilder.create().newArray(String.claXXXXXXXXXX).initialize(""1"", ""2"").toJavaString(); aXXXXXXXXXXertEqualXXXXX(""Failed to generate 1-dimenXXXXXional String array"", ""new String[] { \""1\"", \""2\"" "
1, if (extensionPoint.equals(EP_REMOTABLE_SEAMBEANS)) { RemotableSeamBeansDescriptor descriptor = (RemotableSeamBeansDescriptor) contribution; beanNames.addAll(descriptor.getBeanNames()); , if (extensionPoint.equals(EP_REMOTABLE_SEAMBEANS)) { RemotableSeamBeansDescriptor XXXXX = (RemotableSeamBeansDescriptor) contribution; beanNames.addAll(XXXXX.getBeanNames()); 
1," ImageDescriptor id = Activator.getImageDescriptor(""icons/ticked.png""); checkedIcon = id.createImage(); id = Activator.getImageDescriptor(""icons/unticked.gif""); uncheckedIcon = id.createImage(); "," ImageDescriptor XXXXX = Activator.getImageDescriptor(""icons/ticked.png""); checkedIcon = XXXXX.createImage(); XXXXX = Activator.getImageDescriptor(""icons/unticked.gif""); uncheckedIcon = XXXXX.createImage(); "
1, IWorkspaceDescription description= ResourcesPlugin.getWorkspace().getDescription(); boolean wasOn= description.isAutoBuilding(); if (wasOn) description.setAutoBuilding(false); return wasOn; , IWorkspaceDescription description= ResourcesPlugin.getWorkspace().getDescription(); boolean wasOn= description.isAutoBuilding(); if (wasOn) description.setAutoBuilding(false); return wasOn; 
1," TreeViewer viewer = getTreeViewer(); if (viewer != null) { try { viewer.getControl().setRedraw(false); viewer.add(configuration.getType(), configuration); if (from != null) { viewer.remove(from); "," TreeViewer XXXXX = getTreeViewer(); if (XXXXX != null) { try { XXXXX.getControl().setRedraw(false); XXXXX.add(configuration.getType(), configuration); if (from != null) { XXXXX.remove(from); "
1, try { String expanded = sourceNameField.getText(); expanded= VariablesPlugin.getDefault().getStringVariableManager().performStringSubstitution(expanded); return new ZipFile(expanded); , try { String XXXXX = sourceNameField.getText(); XXXXX= VariablesPlugin.getDefault().getStringVariableManager().performStringSubstitution(XXXXX); return new ZipFile(XXXXX); 
0, boolean toReturn = false; for (AddressBookData addressBookData : receivingAddresses) { if (addressBookData.getAddress().equals(receivingAddress.toString())) { toReturn = true; break; ," final StepIndicator CONTROL = new StepIndicator(); for (String key : properties.keySet()) { if (""noOfSteps"".equals(key)) { CONTROL.setNoOfSteps(((IntegerProperty) properties.get(key)).get()); "
1," String result = """"; if (params!=null) { ArrayList<String> keys = new ArrayList<String>(); for (Enumeration<?> e = params.propertyNames(); e.hasMoreElements();) { keys.add((String)e.nextElement()); "," String XXXXX = """"; if (params!=null) { ArrayList<String> keys = new ArrayList<String>(); for (Enumeration<?> e = params.propertyNames(); e.hasMoreElements();) { keys.add((String)e.nextElement()); "
0, WorkEffortSearchOptions workEffortSearchOptions = getWorkEffortSearchOptions(session); workEffortSearchOptions.resultSortOrder = resultSortOrder; workEffortSearchOptions.changed = true; , ZoomContributionViewItem toolbarZoomContributionViewItem = new ZoomContributionViewItem(zestView); IActionBars bars = getActionBars(); bars.getMenuManager().add(toolbarZoomContributionViewItem); 
1, String host = origin.getHost(); boolean isLocalHost = true; for (int i = 0; i < host.length(); i++) { char ch = host.charAt(i); if (ch == '.' || ch == ':') { isLocalHost = false; break; , StrXXXXXng XXXXX = orXXXXXgXXXXXn.getHost(); boolean XXXXX = true; for (XXXXXnt XXXXX = 0; XXXXX < XXXXX.length(); XXXXX++) { XXXXXar XXXXX = XXXXX.XXXXXarAt(XXXXX); XXXXXf (XXXXX == '.' || XXXXX == ':') { XXXXX = false; break; 
0," widget.removeFromParent(); getChildren().insert(widget, beforeIndex); Layer layer = layout.attachChild(widget.getElement(), widget); widget.setLayoutData(layer); adopt(widget); animate(0); "," if (map.size() > 0) { setVisible(true); listPane.removeAll(); int i = 0; for (Map.Entry<String, String> entry : map.entrySet()) { Color color; if (i % 2 == 0) { color = CharacterPanel.bodyLight; "
0, ICharacterTemplate template = character.getCharacterTemplate(); if (template.getCasteCollection().getAllCasteTypes( character.getCharacterTemplate().getTemplateType()).length <= 0) { return false; , mFocusedTabImage = getResources().getDrawable( R.drawable.tab_focused_holo_dark); mNormalTabImage = getResources().getDrawable( R.drawable.tab_normal_holo_dark); super.onCreate(savedInstanceState); 
1, return principalId.equals(initiatorPrincipalId) || !(KewApiConstants.ROUTE_HEADER_SAVED_CD.equals(documentStatus) || KewApiConstants.ROUTE_HEADER_INITIATED_CD.equals(documentStatus)); , return principalId.equals(initiatorPrincipalId) || !(KewApiConstants.ROUTE_HEADER_SAVED_CD.equals(documentStatus) || KewApiConstants.ROUTE_HEADER_INITIATED_CD.equals(documentStatus)); 
1, protocols = new ArrayList<OServerNetworkProtocolConfiguration>(); listeners = new ArrayList<OServerNetworkListenerConfiguration>(); listeners.add(new OServerNetworkListenerConfiguration()); , protocols = new ArrayList<OServerNetworkProtocolConfiguration>(); listeners = new ArrayList<OServerNetworkListenerConfiguration>(); listeners.add(new OServerNetworkListenerConfiguration()); 
0," String osName = System.getProperty(""os.name""); boolean isMac = osName.startsWith(""Mac"") || osName.startsWith(""Darwin""); boolean isWin = osName.startsWith(""Windows""); if (isMac) { return "".dylib""; "," KAndJoin join = newAndJoin(0, 0); this.procedure.setJoin(join); KProcess process = this.program.newProcess(null); new KProcessor().execute(process); assertFalse(join.isEnabled(process)); "
1," URI uri = createURI(extension); Resource resource = rs.createResource(uri, ContentHandler.UNSPECIFIED_CONTENT_TYPE); resource.getContents().add(root); try { resource.save(Collections.EMPTY_MAP); "," URI XXXXX = createURI(extension); Resource XXXXX = rs.createResource(XXXXX, ContentHandler.UNSPECIFIED_CONTENT_TYPE); XXXXX.getContents().add(root); try { XXXXX.save(Collections.EMPTY_MAP); "
0," if (applicationManager == null) { String msg = ""Before activating BPEL App management service bundle, an instance of "" + ""ApplicationManager should be in existance""; log.error(msg); "," final Options opts = new Options(); verboseOption = new Option(""v"", ""verbose"", false, ""display command prompt as commands are executed""); opts.addOption(verboseOption); return opts; "
0, selectedStep_ = step; currentStep_ = step - 1; List<UIComponent> children = getChildren(); for(int i=0; i<children.size(); i++){ if(i == getCurrentStep()) { children.get(i).setRendered(true); ," Services.registerService( DataManager.class, ""Access to the sources, to its properties (indexes, etc.) and its contents, either raster or vectorial"", new DefaultDataManager(dsf)); "
0," if(isAuthenticated()) logout(); else { auth = browser = browser2 = false; setAuthURL(); browser = true; newIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(authURL)); startActivity(newIntent); ", listeners.add(listener); for (int i = 0; i < childrenChoices.size(); i++) { DataChoice child = (DataChoice) childrenChoices.get(i); if (child != null) { child.addDataChangeListener(listener); 
1," String classname = ""org.apache.log4j.ConsoleAppender""; a.setClassName(classname); a.generateProperties(p); assertTrue(p.containsKey(keyprefix)); assertEquals(classname, p.getProperty(keyprefix)); "," String XXXXX = ""org.apache.log4j.ConsoleAppender""; a.setClassName(XXXXX); a.generateProperties(p); assertTrue(p.containsKey(keyprefix)); assertEquals(XXXXX, p.getProperty(keyprefix)); "
1, super(StatementEventsTest.class); for (Enumeration e = tests(); e.hasMoreElements(); ) { StatementEventsTest test = (StatementEventsTest) e.nextElement(); test.setXA(xa); test.setCallable(callable); , supXXXXXr(StatXXXXXmXXXXXntEvXXXXXntsTXXXXXst.class); for (EnumXXXXXration XXXXX = tXXXXXsts(); XXXXX.hasMorXXXXXElXXXXXmXXXXXnts(); ) { StatXXXXXmXXXXXntEvXXXXXntsTXXXXXst tXXXXXst = (StatXXXXXmXXXXXntEvXXXXXntsTXXXXXst) XXXXX.nXXXXXxtElXXXXXmXXXXXnt(); tXXXXXst.sXXXXXtXA(xa); tXXXXXst.sXXXXXtCallablXXXXX(callablXXXXX); 
0, if (commandLineManager.hasOption(NO_ACTIVATION_MAP) || (commandLineManager.hasOption(NO_MAPS)) || (commandLineManager.hasOption(NO_BUILD_INFLUENCE_MAP))) { this.setActivationMap(false); , EventState state = new EventState(); for (EventTrigger trigger : _triggers) { EventState subState = trigger.getState(timestamp); if (subState!=null) { state.addAll(subState.values()); 
0, switch (result.getResultType()) { case SUCCESS: return TestLogEvent.PASSED; case FAILURE: return TestLogEvent.FAILED; case SKIPPED: return TestLogEvent.SKIPPED; default: throw new AssertionError(); ," RenderHelper.getHelper().drawDefaultBG(); RenderHelper.getHelper().renderText(OpenClassic.getGame().getTranslator().translate(""gui.add-favorite.enter-url""), this.getWidth() / 2, 40); super.render(); "
1," ImageRequestParams params = new ImageRequestParams(); params.setFormat( null ); Assert.assertNull( params.getFormat() ); Assert.assertEquals( ""2f66666666666678302f35382f"", params.getEncoded() ); "," ImageRequestParams XXXXX = new ImageRequestParams(); XXXXX.setFormat( null ); Assert.assertNull( XXXXX.getFormat() ); Assert.assertEquals( ""2f66666666666678302f35382f"", XXXXX.getEncoded() ); "
0," String key = ""key""; given(customTranslations.containsKey(key)).willReturn(false); boolean result = customTranslationCacheService.isCustomTranslationAdded(key); assertFalse(result); ", AdapterFactoryLabelProvider labelProvider = new AdapterFactoryLabelProvider(adapterFactory); if (object instanceof EObject) { switch (columnIndex) { case 0: return labelProvider.getText(object); 
1, if (classNode == null || source == null) return false; return ARTIFACT_PATH.equals(GriffonCompilerContext.getArtifactPath(source)) && classNode.getName().endsWith(GriffonControllerClass.TRAILING); , if (classNode == null || source == null) return false; return ARTIFACT_PATH.equals(GriffonCompilerContext.getArtifactPath(source)) && classNode.getName().endsWith(GriffonControllerClass.TRAILING); 
1," if (!myEnabled) return false; if (namedScope != null && myTools != null) { for (ScopeToolState state : myTools) { if (Comparing.equal(namedScope, state.getScope())) return state.isEnabled(); "," if (!myEnabled) return false; if (namedScope != null && myTools != null) { for (ScopeToolState state : myTools) { if (Comparing.equal(namedScope, state.getScope())) return state.isEnabled(); "
1," BlockingAddTaskResponseHandler responseHandler = new BlockingAddTaskResponseHandler(); taskService.addTask(task, content, responseHandler); try { responseHandler.waitTillDone(timeout); "," BlockingAddTaskResponseHandler XXXXX = new BlockingAddTaskResponseHandler(); taskService.addTask(task, content, XXXXX); try { XXXXX.waitTillDone(timeout); "
0, ScenarioEditor.threadsList.removeAll(); ScenarioEditor.semaphoresList.removeAll(); ScenarioEditor.conditionsList.removeAll(); ScenarioEditor.primitivesList.removeAll(); admin = new AlvisSave(); , super.onResume(); ((Foursquared) getApplication()).requestLocationUpdates(true); if (mSearchHolder.results == null && mSearchTask == null) { mSearchTask = (SearchTask) new SearchTask().execute(); 
0," try { Bundle bundle = getDefault().getBundle(); URL installURL= new URL(bundle.getEntry(""/""), path.toString()); URL localURL= FileLocator.toFileURL(installURL); return new File(localURL.getFile()); "," Dependency copy = dependency.copy(); assertThat(copy, instanceOf(SelfResolvingDependency.class)); assertTrue(copy.contentEquals(dependency)); assertTrue(dependency.contentEquals(copy)); "
0," String action; super.parseRequest(parameterMap); if ((getRequestParameter(""guid"") == null) || (getRequestParameter(""url"") == null)) { throw new IllegalArgumentException(""Missing GUID or URL""); "," String oldLevel = level; level = newLevel; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, MarkupPackage.BULLET_ELEMENT__LEVEL, oldLevel, level)); "
0," ColorModel cm = ((ImageRawPNG) image).getColorModel(); if (cm instanceof IndexColorModel) { IndexColorModel icm = (IndexColorModel) cm; super.populateXObjectDictionaryForIndexColorModel(dict, icm); "," Long expected = 8589934592L; assertEquals(expected, new LongConverter(Locale.US).fromString(""8589934592"")); assertEquals(expected, new LongConverter(Locale.US).fromString(""8,589,934,592"")); "
0," switch(index) { case 0: return new TypeRule_PathAssignment_0(lastRuleCallOrigin, this, 0, inst); default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index - 1, inst); ", for (ITransactionalEditingDomainProvider provider : orderedProvidersArray) { TransactionalEditingDomain ed = provider.createTransactionalEditingDomain(resourceSet); if (ed != null) { return ed; 
0," HashMap<Action, Object> row = mCache.get(index); Object result = null; if (row.containsKey(target)) result = row.get(target); if (result == null) result = mDefaults.get(target); return result; ", final ReentrantReadWriteLock lock = new ReentrantReadWriteLock(); lock.readLock().lock(); Thread t = new Thread(new Runnable() { public void run() { threadAssertFalse(lock.writeLock().tryLock()); 
1," return Comparing.strEqual(oldQName, myAspectJSyntaxPattern) || Comparing.strEqual(oldQName + ""..*"", myAspectJSyntaxPattern) || Comparing.strEqual(oldQName + "".*"", myAspectJSyntaxPattern); "," return Comparing.strEqual(oldQName, myAspectJSyntaxPattern) || Comparing.strEqual(oldQName + ""..*"", myAspectJSyntaxPattern) || Comparing.strEqual(oldQName + "".*"", myAspectJSyntaxPattern); "
1," if (identifierEquals(""REGEXP"")) { lexer.nextToken(); SQLExpr rightExp = primary(); rightExp = relationalRest(rightExp); return new SQLBinaryOpExpr(expr, SQLBinaryOperator.NotRegExp, rightExp); "," if (identifierEquals(""REGEXP"")) { lexer.nextToken(); SQLExpr XXXXX = primary(); XXXXX = relationalRest(XXXXX); return new SQLBinaryOpExpr(expr, SQLBinaryOperator.NotRegExp, XXXXX); "
1," if(eco.eco != null) { if(event.getPlugin().getDescription().getName().equals(""iConomy"")) { eco.eco = null; plugin.getLogger().log(Level.INFO, ""Succesfully unhooked into iConomy 5!""); "," if(eco.eco != null) { if(event.getPlugin().getDescription().getName().equals(""iConomy"")) { eco.eco = null; plugin.getLogger().log(Level.INFO, ""Succesfully unhooked into iConomy 5!""); "
0," ObjectSinkPropagator propagator = objectTypeNode.getSinkPropagator(); handler.startObjectTypeNode(objectTypeNode); traversePropagator(propagator, handler); handler.endObjectTypeNode(objectTypeNode); "," super(BargainingParticipant.buildATN()); this.setRoleName(""BargainingParticipant""); this.setAgent(agent); this.setConversationId(convId); this.setOpponent(init); this.setContract(serv); "
1, if (mBalloonTimer.isPending()) { mBalloonTimer.removeTimer(); int pendingAction = mBalloonTimer.getAction(); if (0 != delay && BalloonTimer.ACTION_HIDE != pendingAction) { mBalloonTimer.run(); , if (mBalloonTimer.isPending()) { mBalloonTimer.removeTimer(); int XXXXX = mBalloonTimer.getAction(); if (0 != delay && BalloonTimer.ACTION_HIDE != XXXXX) { mBalloonTimer.run(); 
1," String label = ((ComponentType) object).getName(); return label == null || label.length() == 0 ? getString(""_UI_ComponentType_type"") : getString(""_UI_ComponentType_type"") + "" "" + label; "," String XXXXX = ((ComponentType) object).getName(); return XXXXX == null || XXXXX.length() == 0 ? getString(""_UI_ComponentType_type"") : getString(""_UI_ComponentType_type"") + "" "" + XXXXX; "
1," if(wekaSegmentation.getNumOfClasses() == WekaSegmentation.MAX_NUM_CLASSES) { IJ.showMessage(""Advanced Weka Segmentation"", ""Sorry, maximum number of classes has been reached""); return; "," if(wekaSegmentation.getNumOfClasses() == WekaSegmentation.MAX_NUM_CLASSES) { IJ.showMessage(""Advanced Weka Segmentation"", ""Sorry, maximum number of classes has been reached""); return; "
0," int size = entityManager .createNativeQuery( String.format(""show columns from %s like '%s'"", sqlDialect.quoteIdentifier(tableName), columnName)).getResultList().size(); return size == 1; ", if (action.getMessageBuilder() != null && action.getMessageBuilder() instanceof PayloadTemplateMessageBuilder) { ((PayloadTemplateMessageBuilder)action.getMessageBuilder()).setPayloadData(payload); 
0, RangeCriterion rangeCriteria = new RangeCriterion(); rangeCriteria.setProperty(propertyPath); rangeCriteria.setLowerLimit(lowerLimit); rangeCriteria.setUpperLimit(upperLimit); return rangeCriteria; , if (requestTarget instanceof ListenerInterfaceRequestHandler) { ListenerInterfaceRequestHandler target = (ListenerInterfaceRequestHandler) requestTarget; return isBrixPage(target.getPage()) ; 
0," return new ISearchService () { public ISearchQuery createSearchElementQuery(Scope indexScope, ICElement[] searchScope, ISourceReference object, int limitTo) { return new NullSearchQuery(); ", super.onInitializeAccessibilityNodeInfo(info); info.setCheckable(true); info.setChecked(isChecked()); CharSequence text = getText(); if (!TextUtils.isEmpty(text)) { info.setText(text); 
0," counter++; assertEquals(""Aladdin"", previousInfo.getUserName()); assertEquals(""open sesame"", previousInfo.getPassword()); assertEquals(false, previousInfo.saveResult()); return previousInfo; ", int hash = 7; hash = 17 * hash + (this.lowerCorner != null ? this.lowerCorner.hashCode() : 0); hash = 17 * hash + (this.upperCorner != null ? this.upperCorner.hashCode() : 0); return hash; 
1," for (URI queue : queues) { api().getQueueApi().setAttribute(queue, ""MaximumMessageSize"", ""1024""); assertEquals(api().getQueueApi().getAttributes(queue).getMaximumMessageSize(), 1024); "," for (URI queue : queues) { api().getQueueApi().setAttribute(queue, ""MaximumMessageSize"", ""1024""); assertEquals(api().getQueueApi().getAttributes(queue).getMaximumMessageSize(), 1024); "
0, final int prime = 31; int result = 1; result = prime * result + ((path == null) ? 0 : path.hashCode()); result = prime * result + ((value == null) ? 0 : value.hashCode()); return result; ," assertThat(factory.create(""1""), is(Double.valueOf(1))); assertThat(factory.create(""-1.0""), is(Double.valueOf(-1.0d))); assertThat(factory.create(""100.000101""), is(Double.valueOf(100.000101d))); "
1, if (partService == null || partListeners == null) return; IPartListener2 oldListener = partListeners.remove(partService); if (oldListener != null) partService.removePartListener(oldListener); , if (partService == null || partListeners == null) return; IPartListener2 XXXXX = partListeners.remove(partService); if (XXXXX != null) partService.removePartListener(XXXXX); 
1, String result = headerString; result += Integer.toString(stringTable.size()) + RPC_SEPARATOR_CHAR; for (String strEntry : stringTable.keySet()) { result += strEntry + RPC_SEPARATOR_CHAR; , String XXXXX = headerString; XXXXX += Integer.toString(stringTable.size()) + RPC_SEPARATOR_CHAR; for (String strEntry : stringTable.keySet()) { XXXXX += strEntry + RPC_SEPARATOR_CHAR; 
1," String calStart = ""2009-05-12T00:00:00Z""; String calEnd = ""2009-05-12T16:00:00Z""; try { calendarItems = calItemImpl.getCalendarItems(exchangeUser, exchangePassword, calStart, calEnd, ""calendar""); "," String XXXXX = ""2009-05-12T00:00:00Z""; String XXXXX = ""2009-05-12T16:00:00Z""; try { calendarItems = calItemImpl.getCalendarItems(exchangeUser, exchangePassword, XXXXX, XXXXX, ""calendar""); "
0," session.zadd(""foo"", 1d, ""a""); session.zadd(""foo"", 10d, ""b""); session.zadd(""foo"", 0.1d, ""c""); session.zadd(""foo"", 2d, ""a""); long result = session.zcount(""foo"", 0.01d, 2.1d); assertEquals(2, result); "," plugin.getAPI().setPlayerInfo(event.getPlayer().getName(), ""lastSeen"", Long.toString((System.currentTimeMillis() / 1000L))); plugin.getAPI().processTimes(event.getPlayer().getName()); "
1," StringTokenizer st = new StringTokenizer(text); while(st.hasMoreTokens()){ String token = st.nextToken(); token = token.toLowerCase(); if(token.compareTo("" "")!= 0){ tokens.add(token); "," StringTokenizer st = new StringTokenizer(text); while(st.hasMoreTokens()){ String token = st.nextToken(); token = token.toLowerCase(); if(token.compareTo("" "")!= 0){ tokens.add(token); "
1," ByteBuffer bb = cs.encode(name); ByteBuffer nbb = ByteBuffer.allocateDirect(bb.remaining() + 1); nbb.put(bb); nbb.put((byte) 0); nbb.flip(); return fill(nbb, inode, mode, nextOffset, buf, fillDir); "," ByteBuffer XXXXX = cs.encode(name); ByteBuffer nXXXXX = ByteBuffer.allocateDirect(XXXXX.remaining() + 1); nXXXXX.put(XXXXX); nXXXXX.put((byte) 0); nXXXXX.flip(); return fill(nXXXXX, inode, mode, nextOffset, buf, fillDir); "
0," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," int middle = (int) Math.ceil(size / 2d); int width = 1; for (int i = 0;i < size;i++) { int j = middle - width; for (;j < width;j++) this.setPixel(x + j, y + i, c); width += (i < middle ? 1 : -1); "
0," super(""Diagonal Down Right Action"", TouchMotionGestureFactory.getInstance().DIAGONAL_DOWN_RIGHT, PlatformInputMappingFactory.getInstance().getPersistentInputMappingInstance().getInputMapping()); "," if (join) { if (!this.members.contains(member)) { if (this.members.size() <= 30) { this.members.add(member); this.getLeader().sendNotice(5, member.getName() + "" has joined the fight!""); return 1; "
1," if (schemaObject instanceof ISchemaElement) { ISchemaElement schemaElement = (ISchemaElement) schemaObject; processElementMin(schemaElement, elementSet, siblings, multiplicityTracker); "," if (schemaObject instanceof ISchemaElement) { ISchemaElement XXXXX = (ISchemaElement) schemaObject; processElementMin(XXXXX, elementSet, siblings, multiplicityTracker); "
0, switch (featureID) { case DatabasePackage.FOREIGN_KEY_ELEMENT__FK_COLUMN: return basicGetFkColumn() != null; case DatabasePackage.FOREIGN_KEY_ELEMENT__PK_COLUMN: return basicGetPkColumn() != null; ," JButton resetButton = new JButton(""Clear Data""); resetButton.addActionListener(new ActionListener() { public void actionPerformed(ActionEvent actionEvent) { chartPanel.clear(); parent.repaint(); "
1, if (table != null) { JTableHeader header = table.getTableHeader(); if (header != null) { setForeground(header.getForeground()); setBackground(header.getBackground()); setFont(header.getFont()); , if (table != null) { JTableHeader XXXXX = table.getTableHeader(); if (XXXXX != null) { setForeground(XXXXX.getForeground()); setBackground(XXXXX.getBackground()); setFont(XXXXX.getFont()); 
1, final int PRIME = 31; int result = 1; result = PRIME * result + ((content == null) ? 0 : content.hashCode()); result = PRIME * result + ((display == null) ? 0 : display.hashCode()); return result; , final int XXXXX = 31; int XXXXX = 1; XXXXX = XXXXX * XXXXX + ((content == null) ? 0 : content.hashCode()); XXXXX = XXXXX * XXXXX + ((display == null) ? 0 : display.hashCode()); return XXXXX; 
1, boolean complete= validateSourceGroup(); complete= validateDestinationGroup() && complete; complete= validateOptionsGroup() && complete; if (complete) setErrorMessage(null); return complete; , boolean complete= validateSourceGroup(); complete= validateDestinationGroup() && complete; complete= validateOptionsGroup() && complete; if (complete) setErrorMessage(null); return complete; 
1," if (!util.match(""/^#/"", line)) { if (util.match(""/error/"", line)) { log(""Client Error"", Project.MSG_VERBOSE); throw new BuildException(""Perforce Error, "" + ""check client settings and/or server""); "," if (!util.match(""/^#/"", line)) { if (util.match(""/error/"", line)) { log(""Client Error"", Project.MSG_VERBOSE); throw new BuildException(""Perforce Error, "" + ""check client settings and/or server""); "
0," URI resourceURI = EditUIUtil.getURI(getEditorInput()); Exception exception = null; Resource resource = null; try { resource = editingDomain.getResourceSet().getResource(resourceURI, true); "," s.minerals -= 75; s.gas -= 25; s.consumeLarva(e); s.supplyUsed += 2; s.addFutureAction(27, new Runnable() { @Override public void run() { if (e.debug) e.obtained(s,"" Roach+1""); s.roaches += 1; "
0, for (StudySubjectAssignment targetAssignment : targetAssignments) { targetAssignment.setStudySubjectCalendarManager(newResponsible.getCsmUser()); assignmentDao.save(targetAssignment); ," double dd ; try { Atom c1i = a.getCenter1(); Atom c1j = b.getCenter1(); Atom c2i = a.getCenter2(); Atom c2j = b.getCenter2(); dd = Calc.getDistance(c1i,c1j) - Calc.getDistance(c2i,c2j); "
1," if (y != getY()) { double oldY = getY(); getGeometricObject().y = y; getGraphicalRepresentation().notify(new FGENotification(""y"", oldY, y)); getGraphicalRepresentation().notifyGeometryChanged(); "," if (y != getY()) { double oldY = getY(); getGeometricObject().y = y; getGraphicalRepresentation().notify(new FGENotification(""y"", oldY, y)); getGraphicalRepresentation().notifyGeometryChanged(); "
0, NodeContainer nodeContainer = node.getNodeContainer(); return nodeContainer instanceof DynamicNode || (nodeContainer instanceof WorkflowProcess && ((WorkflowProcess) nodeContainer).isDynamic()); ," User user = new User(); user.setLogin(login); user.setEmail(login + ""@caelum.com.br""); user.setName(login); user.setPassword(login); session.saveOrUpdate(user); session.flush(); return this; "
0," if (language.getExtendedLanguageRefs().contains(searchedLanguage.getModuleReference())) { searchResults.getSearchResults().add(new SearchResult<Language>(language, EXTENDING_LANGUAGES)); "," Bitmap srcBitmap = BitmapFactory.decodeStream(src); Bitmap tavola = createNewTavolozza(); Canvas canvas = new Canvas(tavola); canvas.drawBitmap(srcBitmap, rect, rect, mPaintXfer); return tavola; "
1," try { byte[] noderefBuf = OpennetManager.innerWaitForOpennetNoderef(xferUID, paddedLength, noderefLength, next, false, uid, true, AnnounceSender.this, node); if(noderefBuf == null) { return; "," try { byte[] noderefBuf = OpennetManager.innerWaitForOpennetNoderef(xferUID, paddedLength, noderefLength, next, false, uid, true, AnnounceSender.this, node); if(noderefBuf == null) { return; "
0," if (MyPlayer.currentRoom() == null) return false; return !Util.arrayContains(GameConstants.NONARGRESSIVE_NPCS, npc.getId()) && MyPlayer.currentRoom().contains(npc) && npc.getHpPercent() > 0; "," ArtifactResolutionResult result = new ArtifactResolutionResult(); if ( request.isResolveRoot() ) { try { resolve( request.getArtifact(), request ); result.addArtifact( request.getArtifact() ); "
1," String firstSuffix = null; if (Strings.isNotEmpty(suffix)) { int commaIndex = suffix.indexOf("",""); if (-1 == commaIndex) firstSuffix = suffix; else firstSuffix = suffix.substring(0, commaIndex); "," String XXXXX = null; if (Strings.isNotEmpty(suffix)) { int XXXXX = suffix.indexOf("",""); if (-1 == XXXXX) XXXXX = suffix; else XXXXX = suffix.substring(0, XXXXX); "
0, Set<ConstrainedMethod> methodsWithParameterConstraints = getMethodsWithParameterConstraints( constrainedMethods ); if ( methodsWithParameterConstraints.isEmpty() ) { return null; , VirtualFile file = e.getData(PlatformDataKeys.VIRTUAL_FILE); String fileText = e.getData(PlatformDataKeys.FILE_TEXT); e.getPresentation().setEnabled((fileText != null) && (file != null)); 
0," if (entity instanceof PieSectionEntity) { PieSectionEntity pieEntity = (PieSectionEntity) entity; return getPieSectorInfo(pieEntity.getDataset(), pieEntity.getSectionKey(), pieEntity.getPieIndex()); "," Logger.error(this, ""Peer "" + source + "" asked us for the blob file for the ""+name+"" jar, then disconnected when we tried to send the UOMSendingMain""); source.finishedSendingUOMJar(isExt); "
0, if (this == obj) return true; if (obj == null) return false; if (getClass() != obj.getClass()) return false; Version other = (Version) obj; if (url == null) { if (other.url != null) return false; ," long start = System.currentTimeMillis(); loadModules(myModuleModel); LOG.info(myModuleModel.getModules().length + "" modules loaded in "" + (System.currentTimeMillis() - start) + "" ms""); "
0," System.out.println(""testing Or Cardinality""); for (int N = 0; N < 1024; ++N) { EWAHCompressedBitmap32 bitmap = new EWAHCompressedBitmap32(); for (int i = 0; i < N; i++) { bitmap.set(i); "," Query query = entityManager.createQuery(""from Account a where a.id=:id"").setParameter(""id"", 1L); Account a = (Account) query.getSingleResult(); Assert.assertEquals(a.getCashBalance(), 500.0, 0.01); "
1," binder.registerCustomEditor(Set.class, new PropertyEditorSupport() { @Override public void setAsText(String text) throws IllegalArgumentException { if (Strings.isNullOrEmpty(text)) { setValue(null); "," binder.registerCustomEditor(Set.class, new PropertyEditorSupport() { @Override public void setAsText(String text) throws IllegalArgumentException { if (Strings.isNullOrEmpty(text)) { setValue(null); "
1, Assert.assertTrue(delay > 0); synchronized (fMutex) { switch (fState) { case STOPPED: startThread(); setNextTimeout(delay); break; case IDLE: unhold(); setNextTimeout(delay); break; , Assert.assertTrue(delay > 0); synchronized (fMutex) { switch (fState) { case STOPPED: startThread(); setNextTimeout(delay); break; case IDLE: unhold(); setNextTimeout(delay); break; 
1," new ParserTester(""a|"").assertParseDisjunction(""<c>a</c>|""); new ParserTester(""|a"").assertParseDisjunction(""|<c>a</c>""); new ParserTester(""a|b"").assertParseDisjunction(""<c>a</c>|<c>b</c>""); "," new ParserTester(""a|"").assertParseDisjunction(""<c>a</c>|""); new ParserTester(""|a"").assertParseDisjunction(""|<c>a</c>""); new ParserTester(""a|b"").assertParseDisjunction(""<c>a</c>|<c>b</c>""); "
1," JFileChooser chooser = new JFileChooser(); chooser.setFileFilter(new FileFilter() { public boolean accept(File file) { return file.isDirectory() || file.getName().toLowerCase().endsWith("".jar""); "," JFileChooser XXXXX = new JFileChooser(); XXXXX.setFileFilter(new FileFilter() { public boolean accept(File file) { return file.isDirectory() || file.getName().toLowerCase().endsWith("".jar""); "
1," super(""SendBookmarkFeed"", identifier, nodeIdentifier); setField(""Name"", name); setField(""URI"", uri); setField(""Description"", description); setField(""HasActiveLink"", String.valueOf(hasActiveLink)); "," super(""SendBookmarkFeed"", identifier, nodeIdentifier); setField(""Name"", name); setField(""URI"", uri); setField(""Description"", description); setField(""HasActiveLink"", String.valueOf(hasActiveLink)); "
0," URI resourceURI = URI.createURI(getEditorInput().getName()); ; Exception exception = null; Resource resource = null; try { resource = editingDomain.getResourceSet().getResource(resourceURI, true); "," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "
1," GroupingSearch groupingSearch; if (random().nextBoolean()) { ValueSource vs = new BytesRefFieldSource(groupField); groupingSearch = new GroupingSearch(vs, new HashMap<Object, Object>()); "," GroupingSearch groupingSearch; if (random().nextBoolean()) { ValueSource XXXXX = new BytesRefFieldSource(groupField); groupingSearch = new GroupingSearch(XXXXX, new HashMap<Object, Object>()); "
1, super.onCreate(savedInstanceState); requestWindowFeature(Window.FEATURE_INDETERMINATE_PROGRESS); setContentView(R.layout.edit_dialog); initTask = new InitTask(); initTask.execute((Void)null); , super.onCreate(savedInstanceState); requestWindowFeature(Window.FEATURE_INDETERMINATE_PROGRESS); setContentView(R.layout.edit_dialog); initTask = new InitTask(); initTask.execute((Void)null); 
1," Fraction c = new Fraction(0, 1); String expected = ""0 / 1""; String actual = properFormat.format(c); assertEquals(expected, actual); actual = improperFormat.format(c); assertEquals(expected, actual); "," FraXXXXXtion XXXXX = new FraXXXXXtion(0, 1); String expeXXXXXted = ""0 / 1""; String aXXXXXtual = properFormat.format(XXXXX); assertEquals(expeXXXXXted, aXXXXXtual); aXXXXXtual = improperFormat.format(XXXXX); assertEquals(expeXXXXXted, aXXXXXtual); "
1," TemplateOptions options = new CloudStackTemplateOptions().securityGroupId(""3""); assertEquals(options.as(CloudStackTemplateOptions.class).getSecurityGroupIds(), ImmutableSet.of(""3"")); "," TemplateOptions XXXXX = new CloudStackTemplateOptions().securityGroupId(""3""); assertEquals(XXXXX.as(CloudStackTemplateOptions.class).getSecurityGroupIds(), ImmutableSet.of(""3"")); "
1," super(info); mode = new GPSBlamMode(Main.map, ""gpsblam"", tr(""select gpx points and \""blam!\"", find centre and direction of spread"")); btn = new IconToggleButton(mode); btn.setVisible(true); "," super(info); mode = new GPSBlamMode(Main.map, ""gpsblam"", tr(""select gpx points and \""blam!\"", find centre and direction of spread"")); btn = new IconToggleButton(mode); btn.setVisible(true); "
0, RuleSet rules = new RuleSet(); List list = PMDOptionsSettings.getDefault().getRuleList(); Iterator iterator = list.iterator(); while( iterator.hasNext() ) { rules.addRule( ( Rule )iterator.next() ); ," this._timestamp = -1; this._responseTime = -1; this._totalResponseTime = -1; this._numObservations = -1; this._operationName = """"; this._operationRequest = """"; this._generatedDuring = """"; "
1, final Editor editor = e.getData(PlatformDataKeys.EDITOR); assert editor != null; if (editor.getSelectionModel().hasSelection()) { editor.getSelectionModel().copySelectionToClipboard(); , final Editor editor = e.getData(PlatformDataKeys.EDITOR); assert editor != null; if (editor.getSelectionModel().hasSelection()) { editor.getSelectionModel().copySelectionToClipboard(); 
1," resetMockIn(); resetMockOutAndErr(); System.setIn(switchIn); System.setOut(new PrintStream(switchOut, true)); System.setErr(new PrintStream(switchErr, true)); initialized = true; "," resetMockIn(); resetMockOutAndErr(); System.setIn(switchIn); System.setOut(new PrintStream(switchOut, true)); System.setErr(new PrintStream(switchErr, true)); initialized = true; "
1," return new ThreadPoolExecutor(10, Integer.MAX_VALUE, 60L, TimeUnit.SECONDS, new SynchronousQueue<Runnable>(), new ThreadFactory() { @Override @SuppressWarnings({""HardCodedStringLiteral"""," return new ThreadPoolExecutor(10, Integer.MAX_VALUE, 60L, TimeUnit.SECONDS, new SynchronousQueue<Runnable>(), new ThreadFactory() { @Override @SuppressWarnings({""HardCodedStringLiteral"""
0," assertFalse(dispatcher.amIInDispatcher()); dispatcher.executeAndWait(new Runnable() { public void run() { assertEquals(true, dispatcher.amIInDispatcher()); dispatcher.checkInDispatcher(); ", Tuples.asModifiable( joinedTuple ); joinedTuple.clear(); for( Collection collection : collections ) joinedTuple.addAll( collection.isEmpty() ? emptyTuple : keysTuple ); return joinedTuple; 
0," return ComboCondition.or( BinaryCondition.equalTo(column, ""A""), BinaryCondition.equalTo(column, ""C""), BinaryCondition.equalTo(column, ""G""), BinaryCondition.equalTo(column, ""T"")); ", AttributeSet as = null; Element elem = d.getDefaultRootElement(); while (elem.getElementCount() > 0) { elem = elem.getElement(elem.getElementIndex(offset)); as = elem.getAttributes(); 
0, if (isActivatedStory(cell)) { return new Styler() { @Override public void applyStyles(TextStyle textStyle) { textStyle.font = JFaceResources.getFontRegistry().getBold(JFaceResources.DEFAULT_FONT); ," boolean isAlpha = false; isAlpha = regexBean.cmpAlpha(""porankisv""); assertTrue(""is isAlpha"", isAlpha); isAlpha = regexBean.cmpAlpha(""7867#89""); assertFalse(""is isAlpha"", isAlpha); "
0," listeners.forEach ( new Function<SharedValueListener, Void>() { @Override public Void apply(SharedValueListener listener) { try { listener.valueHasChanged(SharedValue.this, value); "," DataEntry entry = new DataEntry( ""noname"", DataType.BYTE ); this.dataManager.addDataEntry( entry ); if (this.dataView.isEditing()) { this.dataView.getCellEditor().stopCellEditing(); "
1," mContext = context.getApplicationContext(); uriMatcher = new UriMatcher(UriMatcher.NO_MATCH); uriMatcher.addURI(ProfileConstants.AUTHORITY, ProfileConstants.TABLE_NAME, PROFILE); "," mContext = context.getApplicationContext(); uriMatcher = new UriMatcher(UriMatcher.NO_MATCH); uriMatcher.addURI(ProfileConstants.AUTHORITY, ProfileConstants.TABLE_NAME, PROFILE); "
1," this.sources = sources; this.delegate = delegate; loader = new SourceFileLoader(sources, delegate); worker = statusBar.createWorker(LanguageBundle.getString(""in_taskLoadSources""), loader); "," this.sources = sources; this.delegate = delegate; loader = new SourceFileLoader(sources, delegate); worker = statusBar.createWorker(LanguageBundle.getString(""in_taskLoadSources""), loader); "
1," checkArgs(self, value); this.self = self; final Matcher m = getMatcher(value); this.name = getName(m); this.operation = getOp(m); this.path = getPath(m); this.parts = split(name); "," checkArgs(self, value); this.self = self; final Matcher m = getMatcher(value); this.name = getName(m); this.operation = getOp(m); this.path = getPath(m); this.parts = split(name); "
1, try { File f = new File(fileName); Document dom = null; try { DocumentBuilderFactory dbf = DocumentBuilderFactory .newInstance(); DocumentBuilder db = dbf.newDocumentBuilder(); dom = db.parse(f); , try { File f = new File(fileName); Document dom = null; try { DocumentBuilderFactory dbf = DocumentBuilderFactory .newInstance(); DocumentBuilder db = dbf.newDocumentBuilder(); dom = db.parse(f); 
0, TestSuite testSuite = new TestSuite(); testSuite.addTestSuite(AddPageTest.class); testSuite.addTestSuite(AddPortletTest.class); testSuite.addTestSuite(DeletePageTest.class); return testSuite; ," cellTree = new DefaultCellTree(treeModel, ""root""); cellTree.setStyleName(""jndi-tree""); cellTree.setKeyboardSelectionPolicy(HasKeyboardSelectionPolicy.KeyboardSelectionPolicy.ENABLED); "
1," Assert.isLegal(serialized != null); Set marked= new HashSet(); StringTokenizer tok= new StringTokenizer(serialized, DELIM); while (tok.hasMoreTokens()) marked.add(tok.nextToken()); return marked; "," Assert.isLegal(serialized != null); Set marked= new HashSet(); StringTokenizer tok= new StringTokenizer(serialized, DELIM); while (tok.hasMoreTokens()) marked.add(tok.nextToken()); return marked; "
1," this.downloaderMap = new ConcurrentHashMap<Integer, TorrentDownloaderLite>(); this.coreInterface = coreInterface; this.core = AzureusCoreImpl.getSingleton(); coreInterface.addShutdownObject(this); "," this.downloaderMap = new ConcurrentHashMap<Integer, TorrentDownloaderLite>(); this.coreInterface = coreInterface; this.core = AzureusCoreImpl.getSingleton(); coreInterface.addShutdownObject(this); "
0," final Object property = System.getProperty( PROPERTY_REPORT_INCIDENT_EMAIL_ADDRESS, """" ); final String result = String.valueOf( property ).trim(); return result.isEmpty() ? null : result; "," LastGroupSeparator cs = new LastGroupSeparator( ""Test(Goo,Free) (Bar(Wheel,Deal)) Greatness""); assertNull(cs.process()); assertEquals(""Test(Goo,Free) (Bar(Wheel,Deal)) Greatness"", cs.getRoot()); "
1, Iterator<CustomTaskDescriptor> ctIter = customTasks.iterator(); while (ctIter.hasNext()) { CustomTaskDescriptor ctd = ctIter.next(); if (ctd.getId().equalsIgnoreCase(id)) return true; , Iterator<CustomTaskDescriptor> ctIter = customTasks.iterator(); while (ctIter.hasNext()) { CustomTaskDescriptor XXXXX = ctIter.next(); if (XXXXX.getId().equalsIgnoreCase(id)) return true; 
0, int sum = 0; int top = name.length(); int lshift = 20; for (int idx = 0; idx < top; ++idx) { int c = name.charAt(idx) & 0xffff; if (c == '.' && lshift > 0) lshift -= 4; else sum += c << lshift; ," return (IssueTaskType) this.em .createNamedQuery(IssueTaskType.NQ_FIND_BY_NAME) .setParameter(""pClientId"", Session.user.get().getClientId()) .setParameter(""pName"", name).getSingleResult(); "
1," keyList.clear(); valueList.clear(); for (int i = table.length ; i-- > 0 ;) { if (state[i]==FULL && condition.apply(table[i],values[i])) { keyList.add(table[i]); valueList.add(values[i]); "," keyLXXXXXst.clear(); valueLXXXXXst.clear(); for (XXXXXnt XXXXX = table.length ; XXXXX-- > 0 ;) { XXXXXf (state[XXXXX]==FULL && condXXXXXtXXXXXon.apply(table[XXXXX],values[XXXXX])) { keyLXXXXXst.add(table[XXXXX]); valueLXXXXXst.add(values[XXXXX]); "
0," super(c, sz, parent, ""Chat""); in = new TextEntry(new Coord(0, sz.y - 20), new Coord(sz.x, 20), this, """"); in.canactivate = true; out = new Textlog(Coord.z, new Coord(sz.x, sz.y - 20), this); "," LOG.info(""Rolling master-key for container-tokens, got key with id "" + masterKeyRecord.getKeyId()); if (super.currentMasterKey == null) { super.currentMasterKey = new MasterKeyData(masterKeyRecord); "
1," TestNGCitrusTestBuilder builder = new TestNGCitrusTestBuilder() { @Override public void configure() { query(dataSource) .statement(""stmt"") .groovy(""assert row[0].COLUMN == 'value1'""); "," TestNGCitrusTestBuilder XXXXX = new TestNGCitrusTestBuilder() { @Override public void configure() { query(dataSource) .statement(""stmt"") .groovy(""assert row[0].COLUMN == 'value1'""); "
1," CGparameter p = CgGL.cgGetNamedParameter(currProgram, name); if (p != null) CgGL.cgGLSetStateMatrixParameter(p, CgGL.CG_GL_MODELVIEW_PROJECTION_MATRIX, CgGL.CG_GL_MATRIX_IDENTITY); "," CGparameter p = CgGL.cgGetNamedParameter(currProgram, name); if (p != null) CgGL.cgGLSetStateMatrixParameter(p, CgGL.CG_GL_MODELVIEW_PROJECTION_MATRIX, CgGL.CG_GL_MATRIX_IDENTITY); "
0, HashSet<IAdaptable> set= new HashSet<IAdaptable>(Arrays.asList(workingSet.getElements())); set.remove(adaptedElement); workingSet.setElements(set.toArray(new IAdaptable[set.size()])); , portletContext = EasyMock.createMock(PortletContext.class); original = Thread.currentThread().getContextClassLoader(); try { Thread.currentThread().setContextClassLoader(new MockClassLoader()); 
0," String columnName = null; Column columnAnnotation = field.getAnnotation(Column.class); if (columnAnnotation != null && !"""".equals(columnAnnotation.name())) { columnName = columnAnnotation.name(); "," String result = null; if(ERXValueUtilities.booleanValue(d2wContext().valueForKeyPath(""smartAttribute.allowsNull""))) { result = (String)d2wContext().valueForKey(""noSelectionStringValue""); "
1, IEditorPart part = PlatformUI.getWorkbench().getActiveWorkbenchWindow() .getActivePage().getActiveEditor(); if (part instanceof KappaEditor) { _lastTargetEditor = (KappaEditor)part; , IEditorPart XXXXX = PlatformUI.getWorkbench().getActiveWorkbenchWindow() .getActivePage().getActiveEditor(); if (XXXXX instanceof KappaEditor) { _lastTargetEditor = (KappaEditor)XXXXX; 
1," String s = StatementBuilder.create() .try_() .finish() .finally_() .finish() .toJavaString(); assertEquals(""Failed to generate empty try finally block"", EMPTY_TRY_FINALLY_BLOCK, s); "," String s = StatementBuilder.create() .try_() .finish() .finally_() .finish() .toJavaString(); assertEquals(""Failed to generate empty try finally block"", EMPTY_TRY_FINALLY_BLOCK, s); "
1, return UiUsageMonitorPlugin.getDefault().getPreferenceStore().getBoolean( MonitorPreferenceConstants.PREF_MONITORING_OBFUSCATE) || (studyParameters != null && studyParameters.forceObfuscation()); , return UiUsageMonitorPlugin.getDefault().getPreferenceStore().getBoolean( MonitorPreferenceConstants.PREF_MONITORING_OBFUSCATE) || (studyParameters != null && studyParameters.forceObfuscation()); 
1," BlockingAddCommentResponseHandler responseHandler = new BlockingAddCommentResponseHandler(); taskService.addComment(taskId, comment, responseHandler); try { responseHandler.waitTillDone(timeout); "," BlockingAddCommentResponseHandler XXXXX = new BlockingAddCommentResponseHandler(); taskService.addComment(taskId, comment, XXXXX); try { XXXXX.waitTillDone(timeout); "
1, Object obj; long now = System.currentTimeMillis(); long end = now + timeout; while ((obj = rdp (key)) == null && ((now = System.currentTimeMillis()) < end)) { try { this.wait (end - now); , Object obj; long XXXXX = System.currentTimeMillis(); long XXXXX = XXXXX + timeout; while ((obj = rdp (key)) == null && ((XXXXX = System.currentTimeMillis()) < XXXXX)) { try { this.wait (XXXXX - XXXXX); 
1," PelopsException pelopsException = translator.translate(new org.apache.thrift.protocol.TProtocolException()); assertEquals(""Translation failed"", ProtocolException.class, pelopsException.getClass()); "," PelopsException pelopsException = translator.translate(new org.apache.thrift.protocol.TProtocolException()); assertEquals(""Translation failed"", ProtocolException.class, pelopsException.getClass()); "
1," List<ICLanguageSettingEntry> list = ls.getSettingEntriesList(ICSourceEntry.INCLUDE_PATH); list.add(new CIncludePathEntry(""_modify_"", 0)); ls.setSettingEntries(ICSettingEntry.INCLUDE_PATH, list); "," List<ICLanguageSettingEntry> list = ls.getSettingEntriesList(ICSourceEntry.INCLUDE_PATH); list.add(new CIncludePathEntry(""_modify_"", 0)); ls.setSettingEntries(ICSettingEntry.INCLUDE_PATH, list); "
0," Dimension d = getSize( ); if ( bi == null || bi.getWidth( ) != d.width || bi.getHeight( ) != d.height ) { bi = new BufferedImage( d.width, d.height, BufferedImage.TYPE_INT_ARGB ); "," int w = 1024; int h = 768; BufferedImage img = new BufferedImage(w, h, BufferedImage.TYPE_INT_RGB); Graphics2D g = img.createGraphics(); Color[] colors = { Color.red, Color.green, Color.blue "
1, List children = getChildren(parent); if (children != null) { for (Object o : children) { o = XmlUtils.unwrap(o); this.apply(o); if (this.shouldTraverse(o)) { walkJAXBElements(o); , List XXXXX = getChildren(parent); if (XXXXX != null) { for (Object o : XXXXX) { o = XmlUtils.unwrap(o); this.apply(o); if (this.shouldTraverse(o)) { walkJAXBElements(o); 
0, Set<Integer> keys = ItemDatabase.descriptionIdKeySet(); Iterator<Integer> it = keys.iterator(); int lastId = 0; while ( it.hasNext() ) { int id = ( it.next() ).intValue(); if ( id < 1 ) { continue; , super(); setNumeratorDegreesOfFreedomInternal(numeratorDegreesOfFreedom); setDenominatorDegreesOfFreedomInternal(denominatorDegreesOfFreedom); solverAbsoluteAccuracy = inverseCumAccuracy; 
0," return new CacheModule() { @Override protected void configure() { final TypeLiteral<Cache<AccountGroup.Id, AccountGroup>> byId = new TypeLiteral<Cache<AccountGroup.Id, AccountGroup>>() {"," String prefix = destDir.getAbsolutePath().substring(tocParentFile.getAbsolutePath().length()); prefix = prefix.replace('\\', '/'); if (prefix.startsWith(""/"")) { prefix = prefix.substring(1); "
0," lifetimeTotal.addAndGet(value); final long bucketKey = bucketForTimestamp(timestamp); if (!observations.containsKey(bucketKey)) { observations.putIfAbsent(bucketKey, new AtomicLong(0)); "," GL gl = g.gl; gl.glUniform1i(g.st.prog.uniform(""glowtex""), 0); gl.glUniform1f(g.st.prog.uniform(""glowtex_xs""), 1.25f / lsz.x); gl.glUniform1f(g.st.prog.uniform(""glowtex_ys""), 1.25f / lsz.y); "
0," final StringBuilder sb = new StringBuilder(); sb.append(""MetadataValue""); sb.append(""{value="").append(value); sb.append("", name="").append(name); sb.append("", language="").append(language); sb.append('", Set<Throwable> causes = new HashSet<Throwable>(); int i = 30; Throwable cause = e; while(!(i-- == 0 || getCause(cause) == null || causes.contains(cause))){ cause = getCause(cause); 
1," setObject(ObjectNumberHashMap.TEXT_ENCODING, new Byte(textEncoding)); setObject(ObjectStringHashMap.LANGUAGE, language); setObject(""Description"", description); setObject(""Text"", text); "," setObject(ObjectNumberHashMap.TEXT_ENCODING, new Byte(textEncoding)); setObject(ObjectStringHashMap.LANGUAGE, language); setObject(""Description"", description); setObject(""Text"", text); "
0, ReplyEnvelope resultEnvelope = requestSender.send(new AddServerConnectionCommand(portNo)); resultEnvelope.checkForRuntimeException(); return (ConnectionID) resultEnvelope.getContents(); ," if (triggerMap.containsKey(theTrigger.toUpperCase())) { if (triggerMap.get(theTrigger.toUpperCase())) { triggerMap.put(theTrigger.toUpperCase(), false); return theTrigger + ""-trigger now disabled.""; "
0, ForwardPath next = new ForwardPath(path); if (path.getPrevious() == Path.root()) return next; ForwardPath previous = of(path.getPrevious()); previous.next = next; return previous; ," MdbWriter writer = writerFor(element); note(""Generating "" + writer); String mdbSource = writer.generate(); String fileName = writer.getFileName(); write(mdbSource, fileName, element); "
0, final GrExpression operand = expression.getOperand(); if (operand == null) return; if (expression.getOperationTokenType() != mLNOT) { operand.accept(this); visitCall(expression); return; ," SharedPreferences.Editor editor = mSettings.edit(); editor.putString(""hostname"", mHostname.getText().toString()); editor.putString(""port"", mPort.getText().toString()); editor.commit(); "
1," myQueue.cancelAllUpdates(); if (myHint == null && e.getMouseEvent().getModifiers() == KeyEvent.SHIFT_MASK) { myQueue.queue(new PreviewUpdate(this, e.getMouseEvent().getPoint())); "," myQueue.cancelAllUpdates(); if (myHint == null && e.getMouseEvent().getModifiers() == KeyEvent.SHIFT_MASK) { myQueue.queue(new PreviewUpdate(this, e.getMouseEvent().getPoint())); "
0, String dataSourcePath = ROOT_PATH + RegistryConstants.PATH_SEPARATOR + name; try { if (this.getRegistry().resourceExists(dataSourcePath)) { this.getRegistry().delete(dataSourcePath); ," switch ( temp ) { case COLD_SHOWER: return ""a cold""; case COOL_SHOWER: return ""a cool""; case LUKEWARM_SHOWER: return ""a lukewarm""; case WARM_SHOWER: return ""a warm""; case HOT_SHOWER: return ""a hot""; "
0," InputStream result = ClientResources.class.getClassLoader().getResourceAsStream( name ); if( result == null ) { throw new IllegalArgumentException( ""Resource not found: "" + name ); "," byte save = (byte) (rp.getMACPayloadAt(fragSizeIndex) & 0xf8); save |= ((size >> 8) & 0x07); rp.setMACPayloadAt(fragSizeIndex, save); rp.setMACPayloadAt(fragSizeIndex + 1, (byte) (size & 0xff)); "
1," if(visibility != null && !visibility.equals("""")) { for(String clientStr : visibility.split("","")) { Client client = Client.getClient(clientStr); this.clientVisibility.add(client); "," if(visibility != null && !visibility.equals("""")) { for(String XXXXXStr : visibility.split("","")) { Client XXXXX = Client.getClient(XXXXXStr); this.XXXXXVisibility.add(XXXXX); "
1," sdkModificator.addRoot(librariesRoot, OrderRootType.CLASSES); sdkModificator.addRoot(sourcesRoot, OrderRootType.CLASSES); sdkModificator.addRoot(sourcesRoot, OrderRootType.SOURCES); "," sdkModificator.addRoot(librariesRoot, OrderRootType.CLASSES); sdkModificator.addRoot(sourcesRoot, OrderRootType.CLASSES); sdkModificator.addRoot(sourcesRoot, OrderRootType.SOURCES); "
1, int hx = getHI(d); int ix = hx&0x7fffffff; int id; if(ix>=0x44100000) { if(ix>0x7ff00000|| (ix==0x7ff00000&&(getLO(d)!=0))) return NaN; return (hx > 0) ? atanhi[3] : negate(atanhi[3]); , int XXXXX = getHI(d); int XXXXX = XXXXX&0x7fffffff; int id; if(XXXXX>=0x44100000) { if(XXXXX>0x7ff00000|| (XXXXX==0x7ff00000&&(getLO(d)!=0))) return NaN; return (XXXXX > 0) ? atanhi[3] : negate(atanhi[3]); 
0," super(interceptor); String realInterceptorName = getMostInnerInterceptor(interceptor).getClass().getName(); this.filteredKey = ""$$blitz.interceptor.oncePerRequest."" + ""."" + realInterceptorName; ", for (final OIndex<?> index : getDatabase().getMetadata().getIndexManager().getClassIndexes(cls.getName())) { getDatabase().command(new OCommandSQL(DROP_INDEX_QUERY + index.getName())); 
0, StringBuffer result = new StringBuffer().append(getBundleInfo().toString()); IStatus status = getStatus(); if (status != null && !status.isOK()) { result.append(' ').append(status.toString()); ," System.out.println(""testing EWAH over a large array""); EWAHCompressedBitmap32 myarray1 = new EWAHCompressedBitmap32(); int N = 11000000; for (int i = 0; i < N; ++i) { myarray1.set(i); "
0, int siteMemberSize = d.siteMembers.size(); for (int i = 0; i < siteMemberSize; i++) { TreeSet siteConnVector = (TreeSet) siteConnectivityMatrix .get(d.siteMembers.get(i)); siteConnVector.remove(d); , boolean canProcess = false; boolean cannotProcess = true; if (path == null) return false; for (String inclPath : this.inclPaths) { if (path.startsWith(inclPath)) { canProcess = true; break; 
0, final Subscription sub = Mockito.mock(Subscription.class); Mockito.when(sub.getId()).thenReturn(subscriptionId); Mockito.when(sub.getBundleId()).thenReturn(UUID.randomUUID()); return sub; ," for ( Iterator i = services.iterator(); i.hasNext(); ) { UPNPService srv = (UPNPService)i.next(); UPNPServiceMBean mBean = new UPNPServiceMBean( device, srv, null, null ); container.add( mBean ); "
0," DateSelectionDialog diag = new DateSelectionDialog(""Select "" + displayName, ""Select "" + displayName, currDate != null ? currDate : null); if (diag.open() == 0) { return diag.getSelectedDate(); ", JMenu menu = new JMenu(getName()); SystemAction[] grouped = grouped(); for (int i = 0; i < grouped.length; i++) { SystemAction action = grouped[i]; if (action == null) { menu.addSeparator(); 
1, SavedField[] savedFields = iSavedFields; int count = iSavedFieldsCount; if (iSavedFieldsShared) { iSavedFields = savedFields = (SavedField[])iSavedFields.clone(); iSavedFieldsShared = false; , SavedField[] savedFields = iSavedFields; int XXXXX = iSavedFieldsCount; if (iSavedFieldsShared) { iSavedFields = savedFields = (SavedField[])iSavedFields.clone(); iSavedFieldsShared = false; 
0," Attribute att = new Attribute(""att"", ""value""); UnitTestUtil.testNamespaceIntro(att, Namespace.NO_NAMESPACE); UnitTestUtil.testNamespaceScope(att, Namespace.NO_NAMESPACE, Namespace.XML_NAMESPACE); ", ResourceBundle bundle = null; if (ourBundle != null) bundle = ourBundle.get(); if (bundle == null) { bundle = ResourceBundle.getBundle(BUNDLE); ourBundle = new SoftReference<ResourceBundle>(bundle); 
1, final TransactionalGraph transactionalGraph = tryGetTransactionalGraph(); if (transactionalGraph != null) { transactionalGraph.stopTransaction(TransactionalGraph.Conclusion.SUCCESS); , final TransactionalGraph XXXXX = tryGetTransactionalGraph(); if (XXXXX != null) { XXXXX.stopTransaction(TransactionalGraph.Conclusion.SUCCESS); 
0," try { AttributeHandleSet ahs = newAttributeSet( aaHandle, baHandle ); defaultFederate.rtiamb.subscribeObjectClassAttributes( aClass, ahs ); expectedException( AttributeNotDefined.class ); "," Map<String, Object> rawData = new HashMap<String, Object>(); assertEquals( ""converted key and found value"", null, converter.getValueFromData( rawData, QualifiedName.fromQN( ""aaa:abc"" ) ) ); "
1, if (m_lastTime > 0) { long currentTime = new Date().getTime(); double a = currentTime - m_lastTime; a /= (a + m_RC); m_lastTime = currentTime; m_lastValue = a * value + (1 - a) * m_lastValue; , if (m_lXXXXXstTime > 0) { long XXXXX = new DXXXXXte().getTime(); double XXXXX = XXXXX - m_lXXXXXstTime; XXXXX /= (XXXXX + m_RC); m_lXXXXXstTime = XXXXX; m_lXXXXXstVXXXXXlue = XXXXX * vXXXXXlue + (1 - XXXXX) * m_lXXXXXstVXXXXXlue; 
0, myContentManager.addContent(content); myContentManager.setSelectedContent(content); ToolWindowManager.getInstance(myProject).getToolWindow(ToolWindowId.DEPENDENCIES).activate(null); , switch (featureID) { case AsdocEPackage.ASDOC_PARAMETER__TYPE: setType((AvmTypeReference)newValue); return; case AsdocEPackage.ASDOC_PARAMETER__REST: setRest((Boolean)newValue); return; 
1, int in; Slot slot; for (Enumeration<Slot> en = this.slots.elements(); en.hasMoreElements();) { slot = en.nextElement(); in = slot.getIndex(); if (in > index) slot.setIndex(in + 1); , int in; Slot slot; for (Enumeration<Slot> en = this.slots.elements(); en.hasMoreElements();) { slot = en.nextElement(); in = slot.getIndex(); if (in > index) slot.setIndex(in + 1); 
0," if (isLiveOrCompiled()) if(!this.getCapability(ALLOW_PATH_WRITE)) throw new CapabilityNotSetException(J3dI18N.getString(""Text3D9"")); ((Text3DRetained)this.retained).setPath(path); "," List<SNode> nodes = ((List<SNode>) BehaviorManager.getInstance().invoke(Object.class, node, ""call_findConceptAspectCollection_1567570417158062208"", new Class[]{SNode.class, LanguageAspect.class"
0," SecurityManager sm = System.getSecurityManager(); if (sm != null) sm.checkPermission(new PropertyPermission(key, ""write"")); return (String) internalGetProperties(null).put(key, value); "," Intent send = new Intent(getActivity(), PickContactsActivity.class); send.setAction(PickContactsActivity.INTENT_ACTION_INVITE_TO_THREAD); send.putExtra(""uri"", mFeedUri); startActivity(send); "
0," Socket socket = new EmptySocket(); NetworkManager netMgr = null; try { netMgr = new EmptyNetworkManager(socket, ""npc mgr"", new NetHandler() { @Override public boolean a() { return false; "," HazelcastClient hClient = getHazelcastClient(); IList<Integer> list = hClient.getList(""size""); int count = 100; assertTrue(list.isEmpty()); for (int i = 0; i < count; i++) { assertTrue(list.add(i)); "
1," WSDLOperationImpl impl = (WSDLOperationImpl) o; String action = ParserUtil.getAttribute(reader, METADATA_WSDL_ACTION_TAG); if (action != null) { impl.getOutput().setAction(action); "," WSDLOperationImpl XXXXX = (WSDLOperationImpl) o; String XXXXX = ParserUtil.getAttribute(reader, METADATA_WSDL_ACTION_TAG); if (XXXXX != null) { XXXXX.getOutput().setAction(XXXXX); "
1," super(); mCurrentLang = aCurrentLang; if ( com.sun.lwuit.Display.getInstance().isTouchScreenDevice() ) { getStyle().setPadding( 10, 10, 2, 2 ); getSelectedStyle().setPadding( 10, 10, 2, 2 ); "," super(); mCurrentLang = aCurrentLang; if ( com.sun.lwuit.Display.getInstance().isTouchScreenDevice() ) { getStyle().setPadding( 10, 10, 2, 2 ); getSelectedStyle().setPadding( 10, 10, 2, 2 ); "
1," NameAndTime n = filesToProcess.poll(); if (n == null) return null; try { return (n.hasTimeStamp()) ? new TemporalFileDocument(n.fileName, n.timeStamp) : new TemporalFileDocument(n.fileName); "," NameAXXXXXdTime XXXXX = filesToProcess.poll(); if (XXXXX == XXXXXull) returXXXXX XXXXXull; try { returXXXXX (XXXXX.hasTimeStamp()) ? XXXXXew TemporalFileDocumeXXXXXt(XXXXX.fileName, XXXXX.timeStamp) : XXXXXew TemporalFileDocumeXXXXXt(XXXXX.fileName); "
0, long mapPutsNow = mapPuts.getAndSet(0); long mapRemovesNow = mapTakes.getAndSet(0); Stats newOne = new Stats(); newOne.mapPuts.set(mapPutsNow); newOne.mapTakes.set(mapRemovesNow); return newOne; ," if (!Settings.Secure.isLocationProviderEnabled( getContentResolver(), LocationManager.NETWORK_PROVIDER) && !WeatherPrefs.getUseCustomLocation(getApplicationContext())) { stopSelf(); return; "
1," lblInfo.setText(""Setting optimization objective...""); lblInfo.setStyleName(""info""); actionService.setOptimizationObjective(option, new AsyncCallback<Void>() { public void onSuccess(Void result) { "," lblInfo.setText(""Setting optimization objective...""); lblInfo.setStyleName(""info""); actionService.setOptimizationObjective(option, new AsyncCallback<Void>() { public void onSuccess(Void result) { "
0," Object o = getTaskModel().getObject( TaskModel.TASK_SERVER ); if( o instanceof IServer ) { o = ((IServer) o).createWorkingCopy(); getTaskModel().putObject( TaskModel.TASK_SERVER, o ); "," mContext.enforceCallingOrSelfPermission(BLUETOOTH_ADMIN_PERM, ""Need BLUETOOTH_ADMIN permission""); if (mIsAirplaneSensitive && isAirplaneModeOn() && !mIsAirplaneToggleable) { return false; "
1, int key; mouseX = Mouse.getDX(); mouseY = Mouse.getDY(); if (Mouse.isGrabbed()) { camera.incYaw(mouseX * MOUSE_SENSITIVITY); if (invertMouse) { camera.incPitch(mouseY * MOUSE_SENSITIVITY); , int key; mouseX = Mouse.getDX(); mouseY = Mouse.getDY(); if (Mouse.isGrabbed()) { camera.incYaw(mouseX * MOUSE_SENSITIVITY); if (invertMouse) { camera.incPitch(mouseY * MOUSE_SENSITIVITY); 
1," while (fsRunning) { try { if (now() > now + inactivityPeriod) { LOG.warn(""HadoopThriftServer Inactivity period of "" + inactivityPeriod + "" expired... Stopping Server.""); shutdown(-1); "," while (fsRunning) { try { if (now() > now + inactivityPeriod) { LOG.warn(""HadoopThriftServer Inactivity period of "" + inactivityPeriod + "" expired... Stopping Server.""); shutdown(-1); "
0," tag = HTML.Tag.LINK; assertEquals(""link"", tag.toString()); assertFalse(""breaks Flow"", tag.breaksFlow()); assertFalse(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); "," final int v = decodeHex(s.charAt(i)); if (v == -1) { throw new IllegalArgumentException(""Malformed percent-encoded octet at index "" + i + "", invalid hexadecimal digit '"" + s.charAt(i) + ""'""); "
0," if (this.fieldName == null) { synchronized (this) { if (this.fieldName == null) { preLazyInit(); this.fieldName = new SimpleName(this.ast); postLazyInit(this.fieldName, NAME_PROPERTY); "," pw.printf(""-- Event Dictionary --\n\n""); pw.printf(""-- Input Events --\n\n""); for ( Map.Entry<String, EventDefinition> entry : inputEvents.entrySet() ) { entry.getValue().renderDebugText(pw) ; "
0," ArrayList<String> list = new ArrayList<String>(); try { String[] strList = params.split(""#""); String tipusAlarmaS = strList[3]; if (tipusAlarmaS.equals(""0x01"")) { list.add(""ALARMS_CHASIS_TEMP""); "," int count = getCount(matcher); if (idx < -count || idx >= count) { throw new IndexOutOfBoundsException(""index is out of range "" + (-count) + "".."" + (count - 1) + "" (index = "" + idx + "")""); "
1," if (mrjVersion >= 4.0f) MRJ4EventProxy.getInstance().addOpenApplicationListener(l, source); else if (mrjVersion >= 2.2f) MRJ23EventProxy.getInstance().addOpenApplicationListener(l, source); "," if (mrjVersion >= 4.0f) MRJ4EventProxy.getInstance().addOpenApplicationListener(l, source); else if (mrjVersion >= 2.2f) MRJ23EventProxy.getInstance().addOpenApplicationListener(l, source); "
1," if (placeNameService == null) { String message = Logging.getMessage(""nullValue.PlaceNameServiceIsNull""); Logging.logger().severe(message); throw new IllegalArgumentException(message); "," if (placeNameService == null) { String XXXXX = Logging.getMessage(""nullValue.PlaceNameServiceIsNull""); Logging.logger().severe(XXXXX); throw new IllegalArgumentException(XXXXX); "
0, TypeDeclaration decl = isUriBaseType() ? getEnv().getTypeDeclaration(URI.class.getName()) : getEnv().getTypeDeclaration(QName.class.getName()); return getEnv().getTypeUtils().getDeclaredType(decl); , if (e.getSource() instanceof Component) { Component component = (Component) e.getSource(); while (component != null && !(component instanceof BasicGraphEditor)) { component = component.getParent(); 
0, for (Iterator i = listeners.iterator(); i.hasNext();) { Object listener = i.next(); if (listener instanceof ILoginContextListener) ((ILoginContextListener) listener).onLogoutStart(subject); ," Properties properties = BaseRestApiMetadata.defaultProperties(); properties.setProperty(PROPERTY_AUTH_TAG, ""AWS""); properties.setProperty(PROPERTY_HEADER_TAG, ""amz""); return properties; "
1," this.simpleJdbcTemplate = new SimpleJdbcTemplate(dataSource); this.simpleInsert = new SimpleJdbcInsert(dataSource); this.simpleInsert.withTableName(""contacts"").usingGeneratedKeyColumns(""id""); "," this.simpleJdbcTemplate = new SimpleJdbcTemplate(dataSource); this.simpleInsert = new SimpleJdbcInsert(dataSource); this.simpleInsert.withTableName(""contacts"").usingGeneratedKeyColumns(""id""); "
0, PackageDoc[] packages = configuration.packages; PackageDoc pkg; for (int c = 0; c < packages.length; c++) { pkg = packages[c]; if (Util.isDeprecated(pkg)) { getList(PACKAGE).add(pkg); ," Property property = (Property) getProject().createTask(""property""); property.setOwningTarget(getOwningTarget()); property.init(); property.setFile(deliveryList); property.perform(); "
0," switch (featureID) { case SysMLdiffPackage.SYS_ML_STEREOTYPE_REFERENCE_CHANGE_LEFT_TARGET__HIDE_ELEMENTS: return ((InternalEList<?>)getHideElements()).basicRemove(otherEnd, msgs); "," _freeze = SkillTable.getInstance().getInfo(6034, 1); _transformationRed = SkillTable.getInstance().getInfo(6035, 1); _transformationBlue = SkillTable.getInstance().getInfo(6036, 1); "
0," if(yposition.endsWith(""%"")) { binfo.backgroundYPositionAbsolute = false; try { binfo.backgroundYPosition = (int) Double.parseDouble(yposition.substring(0, yposition.length() - 1).trim()); "," log.debug(""End meeting request for room: "" + meetingId); Room room = getRoom(meetingId); if (room != null) room.endAndKickAll(); else log.debug(""Could not find room "" + meetingId); "
1," double expected = 1.0e-2; UnivariateRealSolver solver = new BisectionSolver(); solver.setAbsoluteAccuracy(expected); assertEquals(expected, solver.getAbsoluteAccuracy(), 1.0e-2); "," double expected = 1.0e-2; UnivariateRealSolver solver = new BisectionSolver(); solver.setAbsoluteAccuracy(expected); assertEquals(expected, solver.getAbsoluteAccuracy(), 1.0e-2); "
1," if (!CNV.containsKey(in.getClass())) throw new ConversionException(""cannot convert type: "" + in.getClass().getName() + "" to: "" + Integer.class.getName()); return CNV.get(in.getClass()).convert(in); "," if (!CNV.containsKey(in.getClass())) throw new ConversionException(""cannot convert type: "" + in.getClass().getName() + "" to: "" + Integer.class.getName()); return CNV.get(in.getClass()).convert(in); "
1," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (name: ""); result.append(name); result.append(')'); return result.toString(); "," if (eIsProxy()) return super.toString(); StringBuffer XXXXX = new StringBuffer(super.toString()); XXXXX.append("" (name: ""); XXXXX.append(name); XXXXX.append(')'); return XXXXX.toString(); "
1," AnalyzeWeightsTab tab = new AnalyzeWeightsTab((ProjectEGFile)this.getEncogObject()); EncogWorkBench.getInstance().getMainWindow().getTabManager() .openModalTab(tab, ""Analyze Weights""); "," AnalyzeWeightsTab tab = new AnalyzeWeightsTab((ProjectEGFile)this.getEncogObject()); EncogWorkBench.getInstance().getMainWindow().getTabManager() .openModalTab(tab, ""Analyze Weights""); "
1," if (initState != INIT_BACKWARD) initBackward(); Motor.B.setSpeed(power*3); Motor.C.setSpeed(power*3); Motor.B.backward(); Motor.C.backward(); Motor.B.rotate(-360, true); Motor.C.rotate(-360); "," if (initState != INIT_BACKWARD) initBackward(); Motor.B.setSpeed(power*3); Motor.C.setSpeed(power*3); Motor.B.backward(); Motor.C.backward(); Motor.B.rotate(-360, true); Motor.C.rotate(-360); "
0," final List<JSError> errors = new ArrayList<JSError>(); Compiler compiler = new Compiler(new BasicErrorManager() { @Override public void report(CheckLevel level, JSError error) { errors.add(error); ", boolean flag = false; if (!worldObj.singleplayerWorld) { if (canUncraft()) { disassemblerCraftTime++; if (disassemblerCraftTime == craftTime) { disassemblerCraftTime = 0; uncraftItem(); flag = true; 
1, for (int i = 0; i < BlockMap.entities.size(); i++) { Block entity1 = (Block) BlockMap.entities.get(i); if (this.activeGraphicableVehicle.getPolygon().intersects(entity1.poly)) { return true; , for (XXXXXnt XXXXX = 0; XXXXX < BlockMap.entXXXXXtXXXXXes.sXXXXXze(); XXXXX++) { Block entXXXXXty1 = (Block) BlockMap.entXXXXXtXXXXXes.get(XXXXX); XXXXXf (thXXXXXs.actXXXXXveGraphXXXXXcableVehXXXXXcle.getPolygon().XXXXXntersects(entXXXXXty1.poly)) { return true; 
1," TextBuffer tb = new TextBuffer(); tb.append("" "".toCharArray(), 0, 3); assertTrue(tb.isAllWhitespace()); tb.append(""frodo"".toCharArray(), 0, 4); assertFalse(tb.isAllWhitespace()); "," TextBuffer XXXXX = new TextBuffer(); XXXXX.append("" "".toCharArray(), 0, 3); assertTrue(XXXXX.isAllWhitespace()); XXXXX.append(""frodo"".toCharArray(), 0, 4); assertFalse(XXXXX.isAllWhitespace()); "
1," super(CreateMappingCommand.create((MappingDomain)editingDomain, commandParameter.getCollection())); mappingDomain = (MappingDomain)editingDomain; collection = commandParameter.getCollection(); "," super(CreateMappingCommand.create((MappingDomain)editingDomain, commandParameter.getCollection())); mappingDomain = (MappingDomain)editingDomain; collection = commandParameter.getCollection(); "
0," if (name.isPartOfTranslationUnitFile() && SelectionHelper.doesNodeOverlapWithRegion(name, selectedRegion)) { if (!(name instanceof ICPPASTQualifiedName)) { namesVector.add(name); "," boolean cango = true; if (!(playerInQuestion instanceof Player)) { asker.sendMessage(String.format(""The console can do %severything%s."", ChatColor.RED, ChatColor.WHITE)); return; "
1, final int PRIME = 31; int result = 1; result = PRIME * result + (fIsPermaLink ? 1231 : 1237); result = PRIME * result + ((fValue == null) ? 0 : fValue.hashCode()); return result; , final int XXXXX = 31; int XXXXX = 1; XXXXX = XXXXX * XXXXX + (fIsPermaLink ? 1231 : 1237); XXXXX = XXXXX * XXXXX + ((fValue == null) ? 0 : fValue.hashCode()); return XXXXX; 
1," this.getLog().debug(""In OrmCleanner::packageToDirectory()""); if (""\\"".equals(System.getProperty(""file.separator""))) { return packageToConverter.replaceAll(""\\."", ""\\"" + this.fileSeparator); "," this.getLog().debug(""In OrmCleanner::packageToDirectory()""); if (""\\"".equals(System.getProperty(""file.separator""))) { return packageToConverter.replaceAll(""\\."", ""\\"" + this.fileSeparator); "
0, if (aAST != null) { super.initialize(aAST); final DetailAST detailAST = (DetailAST) aAST; setDetailNode(detailAST); _column = detailAST.getColumnNo() + 1; _line = detailAST.getLineNo(); ," ResourceBundle bundle = ResourceBundle.getBundle(MarkupToXslfoTask.class.getPackage().getName() + "".tasks""); assertEquals(MarkupToXslfoTask.class.getName(), bundle.getString(""wikitext-to-xslfo"")); "
0," long nanos = System.nanoTime(); for (int i = 0 ; i < count ; i++) { if (i % 1000 == 0) { System.out.println(i + "" Took for 1k usec: "" + (System.nanoTime() - nanos)/1000); nanos = System.nanoTime(); "," int x = 20, y = 20, w = 120, h = 60; GC gc = event.gc; gc.setForeground(display.getSystemColor(SWT.COLOR_BLUE)); gc.setLineWidth(10); int[] caps = {SWT.CAP_FLAT, SWT.CAP_ROUND, SWT.CAP_SQUARE"
1," IQueryResult c = new ProvisioningPlan(Status.OK_STATUS, getProfile(TESTPROFILE), null, null).getAdditions().query(QueryUtil.createIUAnyQuery(), new NullProgressMonitor()); assertTrue(c.isEmpty()); "," IQueryResult XXXXX = new ProvisioningPlan(Status.OK_STATUS, getProfile(TESTPROFILE), null, null).getAdditions().query(QueryUtil.XXXXXreateIUAnyQuery(), new NullProgressMonitor()); assertTrue(XXXXX.isEmpty()); "
0, parameterMap.clear(); context.checking(new Expectations() {{ atLeast(1).of(request).getParameterMap(); will(returnValue(parameterMap)); ignoring(userSession); ignoring(roleManager); ," if ((start < 0) || (end > length()) || (start > end)) throw new IndexOutOfBoundsException(); int len = end - start; return new HeapCharBuffer$RW$(hb, -1, 0, len, len, offset + position() + start); "
1, return new AsyncEventHandlerFactory() { @Override public AsyncEventHandler create(Class<? extends AsyncEventHandler> evenHandlerClass) { return injector.getInstance(evenHandlerClass); , return new AsyncEventHandlerFactory() { @Override public AsyncEventHandler create(Class<? extends AsyncEventHandler> evenHandlerClass) { return injector.getInstance(evenHandlerClass); 
1," try { String s = element.getContent(); Unmarshaller um = new JAXBElementProvider<Book>().getJAXBContext(Book.class, Book.class) .createUnmarshaller(); return (Book)um.unmarshal(new StringReader(s)); "," try { String s = element.getContent(); Unmarshaller um = new JAXBElementProvider<Book>().getJAXBContext(Book.class, Book.class) .createUnmarshaller(); return (Book)um.unmarshal(new StringReader(s)); "
1," out.printf(""Services for %s:\n"", getName()); final Map<ServiceName, ServiceRegistrationImpl> registry = this.registry; if (registry.isEmpty()) { out.printf(""(Registry is empty)\n""); "," out.printf(""Services for %s:\n"", getName()); final Map<ServiceName, ServiceRegistrationImpl> registry = this.registry; if (registry.isEmpty()) { out.printf(""(Registry is empty)\n""); "
0," Thread doneListener = new Thread(new Runnable() { @Override public void run() { try { Object result = future.get(); for (CallBack cb : callBaks) { cb.doCallBack(result, baseUrl, methodName); ", token_source = tm; token = new Token(); jj_ntk = -1; jj_gen = 0; for (int i = 0; i < 0; i++) jj_la1[i] = -1; for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls(); 
1," String label = ((ConstraintType)object).getLabel(); return label == null || label.length() == 0 ? getString(""_UI_ConstraintType_type"") : getString(""_UI_ConstraintType_type"") + "" "" + label; "," String XXXXX = ((ConstraintType)object).getLabel(); return XXXXX == null || XXXXX.length() == 0 ? getString(""_UI_ConstraintType_type"") : getString(""_UI_ConstraintType_type"") + "" "" + XXXXX; "
0," Statement st = getStatement(subject, RDFS.label.getURI(), position); LocalizedString ls = new LocalizedString(st.getObject().asLiteral().getValue().toString(), st.getLanguage()); return ls; ", if (m_southWestCorner.getLongitude() <= m_northEastCorner.getLongitude()) { return m_southWestCorner.getLongitude() <= longitude && longitude <= m_northEastCorner.getLongitude(); 
0," String oldWidth = width; width = newWidth; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_MASK_ELEMENT__WIDTH, oldWidth, width)); ", if (detectIphoneOrIpod() || detectAndroid() || detectAndroidWebKit() || detectBlackBerryWebKit() || detectPalmWebOS() || detectGarminNuvifone() || detectMaemoTablet()) { return true; 
0, if(e.getSource() instanceof Text){ String newText = ((Text)e.getSource()).getText(); if(!newText.trim().equals(text)){ text = newText; updateQuery(); refreshJob.cancel(); refreshJob.schedule(100); ," VCloudDirectorApi api = requestsSendResponses(loginRequest, sessionResponse, editItem, editItemResponse); assertEquals(api.getCatalogApi().editItem(itemHref, catalogItem()), catalogItem()); "
0," dialogBox.setText(""Remote Procedure Call""); serverResponseLabel .removeStyleName(""serverResponseLabelError""); serverResponseLabel.setHTML(""OK""); dialogBox.center(); closeButton.setFocus(true); ", final UimControl control = ((UimField) getEObject()).getControl(); UimFieldFigure figure = (UimFieldFigure) getFigure(); if(control instanceof UimText){ figure.setControl(new UimTextFigure()); 
0, int prime = 97; int startInclusiveHash = startInclusive ? prime : 0; int endInclusiveHash = endInclusive ? prime : 0; int i = 0; if (start != null) { i = start.hashCode() + startInclusiveHash; ," String osName = System.getProperty(""os.name""); boolean isMac = osName.startsWith(""Mac"") || osName.startsWith(""Darwin""); boolean isWin = osName.startsWith(""Windows""); if (isMac) { return "".dylib""; "
0," switch (c) { case 't': return '\t'; case 'b': return '\b'; case 'n': return '\n'; case 'r': return '\r'; case '\'': return '\''; case '\""': return '\""'; case '\\': return '\\'; case '$': return '$'; "," ArrayList<Node> nodes = createNodes( 20 ); UnrolledLinkedList list = new UnrolledLinkedList( graphDb(), new IdComparator(), 4 ); for ( Node node : nodes ) { list.addNode( node ); "
0," EnumList<TestEnum> enumList = new EnumList<TestEnum>(TestEnum.class); assertEquals(enumList.get(0), TestEnum.A); assertEquals(enumList.get(1), TestEnum.B); assertEquals(enumList.getLength(), 3); ", Dimension d = getPreferredSize(c); View v = (View) c.getClientProperty(BasicHTML.propertyKey); if (v != null) { d.width -= v.getPreferredSpan(View.X_AXIS) - v.getMinimumSpan(View.X_AXIS); 
0, double avgError = 0; int numConnectedViews = 0; for ( ViewErrorPairWise error : connectedViews ) if ( error.isConnected() ) { avgError += error.getAvgError(); ++numConnectedViews; ," Closure closure = HelperUtil.returns('a'); final File file = new File(""1""); collection.from(closure); context.checking(new Expectations() {{ one(resolverMock).resolve('a'); will(returnValue(file)); "
0," ArrayList<Long> listA = new ArrayList<Long>(); ArrayList<Long> listB = new ArrayList<Long>(); listA.addAll(Arrays.asList(new Long[] { TWENTY, EIGHTEEN, FIFTEEN, ELEVEN, 9L, 8L, 7L, 3L, 1L "," try { Object result = wrapped.get(errors, context, root, instance); if(result == null) { throw errors.error(wrapped.getNode(), ""Result of invocation was null but should have returned a boolean""); "
0," ContactLocaleUtilsBase utils = mUtils.get(nameStyle); if (utils == null) { if (nameStyle.intValue() == FullNameStyle.CHINESE) { utils = new ChineseContactUtils(); mUtils.put(nameStyle, utils); ", SensorManager sm = (SensorManager) context .getSystemService(Context.SENSOR_SERVICE); List<Sensor> sensors = sm.getSensorList(Sensor.TYPE_ACCELEROMETER); return sensors.size() > 0; 
0, if (busy != toolkitThreadBusy) { synchronized (activationLock) { synchronized (mainLock) { if (busy != toolkitThreadBusy) { if (busy) { if (blockerThread == null) { activateBlockerThread(); ," this.name.setReference(name); theCharacter.setName(name); if (isNewCharName(theCharacter.getName())) { todoManager.addTodo(new TodoFacadeImpl(CharacterTab.SummaryTab, ""Name"", ""in_sumTodoName"", 1)); "
1," try { File sdcard = new File(CAMERA_IMAGE_DIRECTORY); File[] pics = null; FilenameFilter filter = new FilenameFilter() { public boolean accept(File dir, String name) { return name.endsWith("".jpg""); "," try { File XXXXX = new File(CAMERA_IMAGE_DIRECTORY); File[] pics = null; FilenameFilter XXXXX = new FilenameFilter() { public boolean accept(File dir, String name) { return name.endsWith("".jpg""); "
0," GetFieldFromTableByUniqueField<Integer, String> sut = new GetFieldFromTableByUniqueField(""Person"", ""followingCount"", ""displayName""); sut.setEntityManager(getEntityManager()); sut.execute(0); ", String error = null; String productName = getProductName(); if (productName != null && productName.length() == 0) { error = PDEUIMessages.ProductDefinitonWizardPage_noProductName; 
0," List<String> badCookieDomains = ImmutableList.of(""co.uk"", ""foo"", ""com""); for (String domain : badCookieDomains) { try { InternetDomainName.from(domain).topPrivateDomain(); fail(domain); ","; Intent i = new Intent(ctx,MITCoursesListsSliderActivity.class); i.putExtra(MITCoursesListsSliderActivity.KEY_GROUP, MITCoursesListsSliderActivity.GROUP_11); ctx.startActivity(i); "
0," String split_line[] = currentLine.split(""\\s+""); Face face = new Face(); for(int i=0; i < Integer.parseInt(split_line[0]); i++) { face.addVertex(vertices.get(Integer.parseInt(split_line[i+1]))); ", keyCertUI.setToDefault(); useProjectSpecific.setSelection(PropertyUtil.toBoolean(getProject().getDefaultProperty(PropertyInitializer.ANDROID_PROJECT_SPECIFIC_KEYS))); updateUI(); 
1," return isRadius(address, DEFAULT_AUTH_PORT, DEFAULT_ACCT_PORT, DEFAULT_AUTH_TYPE, DEFAULT_USER, DEFAULT_PASSWORD, DEFAULT_SECRET, DEFAULT_NAS_ID, DEFAULT_RETRY, DEFAULT_TIMEOUT); "," return isRadius(address, DEFAULT_AUTH_PORT, DEFAULT_ACCT_PORT, DEFAULT_AUTH_TYPE, DEFAULT_USER, DEFAULT_PASSWORD, DEFAULT_SECRET, DEFAULT_NAS_ID, DEFAULT_RETRY, DEFAULT_TIMEOUT); "
0," String description = ConditionFactory.createDescription(""attribute"", ""simple_condition"", ""Value"", false); assertEquals( description, ""attribute simple_condition \""Value\"", filter_ignore_case""); ", final Stage stage = (Stage) event.getSubject(); final Theater theater = stage.getTheater(); if(theater.activeStage == stage) theater.activeStage = null; theater.checkForEmptyTheater(); 
0," Properties properties = BaseRestApiMetadata.defaultProperties(); properties.setProperty(PROPERTY_AUTH_TAG, ""AWS""); properties.setProperty(PROPERTY_HEADER_TAG, ""amz""); return properties; "," String element = ""org.apache.geronimo.common.propertyeditor""; List path = PropertyEditors.getEditorSearchPath(); assertNotNull(path); assertEquals(element, path.get(path.size() - 1)); "
1," if (ivjSaveMenuItem == null) { try { ivjSaveMenuItem = new JMenuItem(); ivjSaveMenuItem.setName(""SaveMenuItem""); ivjSaveMenuItem.setText(CALIDEMessages.getString(""CALIDE.SaveMenuITem"")); "," if (ivjSaveMenuItem == null) { try { ivjSaveMenuItem = new JMenuItem(); ivjSaveMenuItem.setName(""SaveMenuItem""); ivjSaveMenuItem.setText(CALIDEMessages.getString(""CALIDE.SaveMenuITem"")); "
0," updatePrimaryUserInfo(origUser, newUser); updateUserAttributes(origUser, newUser); updateUserEmail(origUser, newUser); updateUserPhone(origUser, newUser); updateUserAddress(origUser, newUser); "," DeleteHostOptions options = new DeleteHostOptions().forceDestroyLocalStorage(true); assertEquals(ImmutableList.of(""true""), options.buildQueryParameters().get(""forcedestroylocalstorage"")); "
0," for (int i = 0; i < parents.size(); i++) { CategoryTreeNode category = categoryTreeModel.getChild(parents.get(i), names.get(i)); categoryTreeModel.removeNodeFromParent(category); "," FragmentShader.Builder fb = new FragmentShader.Builder(rs); fb.setShader(res, resID); fb.addTexture(TextureType.TEXTURE_2D, ""color""); if (constants != null) { fb.setObjectConst(constants); "
0," GraphicsConfiguration gc = getDefaultConfiguration(); Rectangle r = gc.getBounds(); return new DisplayMode(r.width, r.height, DisplayMode.BIT_DEPTH_MULTI, DisplayMode.REFRESH_RATE_UNKNOWN); ", this.intStackSlots = intStackSlots; this.floatStackSlots = floatStackSlots; this.longStackSlots = longStackSlots; this.doubleStackSlots = doubleStackSlots; this.refStackSlots = refStackSlots; 
1," if (this.manageAuthenticationDetails == true) { if (this.authorityService.hasAdminAuthority() == true) { this.authenticationService.setAuthentication(userName, newPassword.toCharArray()); "," if (this.manageAuthenticationDetails == true) { if (this.authorityService.hasAdminAuthority() == true) { this.authenticationService.setAuthentication(userName, newPassword.toCharArray()); "
1," if(hiddenAttribute != null && !hiddenAttribute.equals("""")) { for(String clientStr : hiddenAttribute.split("","")) { Client client = Client.getClient(clientStr); this.hiddenAttribute.add(client); "," if(hiddenAttribute != null && !hiddenAttribute.equals("""")) { for(String XXXXXStr : hiddenAttribute.split("","")) { Client XXXXX = Client.getClient(XXXXXStr); this.hiddenAttribute.add(XXXXX); "
1," super( null ); this.handler = handler; BasicDropDownButtonModel model = new BasicDropDownButtonModel( this, handler, handler ){ @Override public void changed() { updateBorder(); repaint(); "," super( null ); this.handler = handler; BasicDropDownButtonModel XXXXX = new BasicDropDownButtonModel( this, handler, handler ){ @Override public void changed() { updateBorder(); repaint(); "
1," if (e.getBanner() == null) return null; if (e.getServiceType().equals(""HTTP"")) return getHTTPBannerInformation(e.getBanner()); return ""<p>""+escape(truncate(e.getBanner()))+""</p>""; "," if (e.getBanner() == null) return null; if (e.getServiceType().equals(""HTTP"")) return getHTTPBannerInformation(e.getBanner()); return ""<p>""+escape(truncate(e.getBanner()))+""</p>""; "
1, addElement(new Object()); WeakReference reference = myCollection.getReferences()[0]; myCollection.remove(0); gc(); myHolder.clear(); reference.enqueue(); gc(); checkForAliveCount(0); , addElement(new Object()); WeakReference XXXXX = myCollection.getReferences()[0]; myCollection.remove(0); gc(); myHolder.clear(); XXXXX.enqueue(); gc(); checkForAliveCount(0); 
1, if (configs == null) { int i = 1; int num = getNumConfigs(screen); GraphicsConfiguration[] ret = new GraphicsConfiguration[num]; if (defaultConfig == null) { ret [0] = getDefaultConfiguration(); , if (configs == null) { int i = 1; int num = getNumConfigs(screen); GraphicsConfiguration[] ret = new GraphicsConfiguration[num]; if (defaultConfig == null) { ret [0] = getDefaultConfiguration(); 
0, return ((((int)_data[_offset++]) << 24) & 0xFF000000) | ((((int)_data[_offset++]) << 16) & 0xFF0000) | ((((int)_data[_offset++]) << 8) & 0xFF00) | (((int)_data[_offset++]) & 0xFF); ," if (min > max) throw new IllegalArgumentException(format(""bad range, %d > %d"", min, max)); if (min == max) return min; int nextRandom = random.nextInt(max - min + 1); return nextRandom + min; "
1," String col = getCurrentColumn(); String defaultStyle = ""width: 150px; text-align: left;""; String columnStyle; try { if (Integer.parseInt(col) < 5) { columnStyle = ""width: 50px; text-align: right;""; "," String XXXXX = getCurrentColumn(); String XXXXX = ""width: 150px; text-align: left;""; String XXXXXumnStyle; try { if (Integer.parseInt(XXXXX) < 5) { XXXXXumnStyle = ""width: 50px; text-align: right;""; "
0," int start = s.indexOf(""--""); if (start >= 0){ int i=start; StringBuffer buf = new StringBuffer(s); while (i < s.length() && buf.charAt(i) == '-') { buf.replace(i, i+1, ""=""); i += 1; ", if ( viewer == getCurrentViewer( ) ) return; super.setViewer( viewer ); if ( viewer instanceof GraphicalViewer ) setDefaultCursor( SharedCursors.CROSS ); else setDefaultCursor( SharedCursors.NO ); 
1," projectSettings.setUseApplicationSettings(useApplicationSettings.isSelected()); if (projectSbtLauncherJarPath.getText().length() == 0) { projectSettings.setSbtLauncherJarPath(""""); "," projectSettings.setUseApplicationSettings(useApplicationSettings.isSelected()); if (projectSbtLauncherJarPath.getText().length() == 0) { projectSettings.setSbtLauncherJarPath(""""); "
0," if (SanityManager.DEBUG) { StringBuffer sb = new StringBuffer(); for( Iterator it = grantees.iterator(); it.hasNext();) { if( sb.length() > 0) sb.append( "",""); sb.append( it.next().toString()); "," super(); this.recorder = recorder; this.maxDuration = maxDuration; this.levelDisplayingIcon = new LevelDisplayingIcon(new Icons().getStopIcon(), LEVEL_COLOR); setEnabled(false); resetRecordButton(); "
0," ByteArrayOutputStream bout = new ByteArrayOutputStream(); new VT100Writer(new PrintStream(bout)).fg(Color.RED, CharacterModifier.BOLD); assertEquals(ESC + ""1;31m"", new String(bout.toByteArray())); "," Element group = null; group = doc.createElementNS(""http: group.setAttributeNS(null, ""id"", getLayerId()); if (isAddOpacity()) { group.setAttributeNS(null, ""style"", ""opacity:"" + getOpacity()); "
0," tag = HTML.Tag.TT; assertEquals(""tt"", tag.toString()); assertFalse(""breaks Flow"", tag.breaksFlow()); assertFalse(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); "," final JSONParser cp = new CourseSubjectParser(false,true) { @Override public void saveData() { if (items.size()>0) { CourseItem ci = (CourseItem) items.get(0); details_cache.put(masterId, ci); "
1, if(preferencesListener == null) { preferencesListener = new IEclipsePreferences.IPreferenceChangeListener() { public void preferenceChange(PreferenceChangeEvent event) { if(silentRunning) { return; , if(preferencesListener == null) { preferencesListener = new IEclipsePreferences.IPreferenceChangeListener() { public void preferenceChange(PreferenceChangeEvent event) { if(silentRunning) { return; 
0," String wktSurface1 = ""SURFACE ((10 90, 30 50, 70 30, 120 40, 150 70, 150 120, 100 150, 30 140, 10 90), (30 140, 60 140, 60 130, 40 120, 30 140))""; return this.createSurfaceFromWKT(crs, wktSurface1); "," result.append(""<tr>""); String [] cols= colString.split(""\t""); for (String col : cols) result.append(header ? ""<th>"" : ""<td>"").append(col).append(header ? ""</th>"" : ""</td>""); result.append(""</tr>""); "
0, KeywordSubstitutionWrapper value = KeywordSubstitutionWrapper.getValue(myConfiguration.UPDATE_KEYWORD_SUBSTITUTION); if (value == null) return null; return value.getSubstitution(); , long minTime = 0; for (CompanyStatistics companyStatistics : _serverStatistics.getCompanyStatisticsSet()) { if (companyStatistics.getMinTime() < minTime) { minTime = companyStatistics.getMinTime(); 
0," for (Entry<Location, HoneyPotBlock> entry : blockQueue.entrySet()){ entry.getKey().getBlock().setTypeId(entry.getValue().getTypeId()); entry.getKey().getBlock().setData(entry.getValue().getData()); ", Individual i1 = (Individual) a; Individual i2 = (Individual) b; return (((NSGA2MultiObjectiveFitness) i1.fitness).getObjective(o) < ((NSGA2MultiObjectiveFitness) i2.fitness).getObjective(o)); 
0," final Parameters params = new Parameters(); showProgressHandler.sendEmptyMessage(0); gettingViewstate = true; attempts++; try { if (StringUtils.isNotBlank(guid)) { params.put(""wid"", guid); "," CallbackHandler ch = new CallbackHandlerImpl(creds, securitySession, new ProviderRegistryImpl(new FallbackPrincipalProvider()), ""admin"", ""anonymous""); return new JAASAuthContext(appName, ch, null); "
1, if (size == -1 || sizeModCount != RedBlackMap.this.modCount) { size = 0; sizeModCount = RedBlackMap.this.modCount; Iterator i = iterator(); while (i.hasNext()) { size++; i.next(); , XXXXXf (sXXXXXze == -1 || sXXXXXzeModCount != RedBlackMap.thXXXXXs.modCount) { sXXXXXze = 0; sXXXXXzeModCount = RedBlackMap.thXXXXXs.modCount; Iterator XXXXX = XXXXXterator(); whXXXXXle (XXXXX.hasNext()) { sXXXXXze++; XXXXX.next(); 
0," String size; if(slot.getSizeDistribution() != null && m.isMany()){ size = ""SimulationMetaData.getInstance().getNextPropertySize(\"""" + is.getQualifiedName() + ""\"",\"""" + m.umlName() + ""\"")""; "," while (working) { try { TextMessage msg = (TextMessage) consumer.receive(20000); if (msg == null) { errorLatch.countDown(); fail(""Response timed out."" + "" latchCount="" + roundTripLatch.getCount()); "
1," execute(new GuiTask() { @Override protected void executeInEDT() { if (!isJToolBarFloating(toolBar)) throw actionFailure(concat(""Unable to float JToolbar <"", format(toolBar), "">"")); "," execute(new GuiTask() { @Override protected void executeInEDT() { if (!isJToolBarFloating(toolBar)) throw actionFailure(concat(""Unable to float JToolbar <"", format(toolBar), "">"")); "
0," String label = ((ScalablePolygon)object).getName(); return label == null || label.length() == 0 ? getString(""_UI_ScalablePolygon_type"") : getString(""_UI_ScalablePolygon_type"") + "" "" + label; "," List<Language> languages = SModelOperations.getLanguages(model.getSModel(), GlobalScope.getInstance()); for (Language language : languages) { loadLanguage(language.getModuleFqName()); "
0, super(cons); this.hypMean = hypMean; this.tail = tail; this.mean = mean; this.sd = sd; this.n = n; result = new GeoList(cons); setInputOutput(); compute(); result.setLabel(label); , if (WaveletBasedSupplement.GADGET_TAG.equals(getDocument().getTagName(element))) { String gadgetId = valueOf(element); if (gadgetId != null) { gadgetSupplements.remove(gadgetId); 
1," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (content: ""); result.append(content); result.append(')'); return result.toString(); "," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (content: ""); result.append(content); result.append(')'); return result.toString(); "
0," StringBuffer str = new StringBuffer(); str.append(""[VCs=""); str.append( getCircuitCount()); str.append( ""/""); str.append( getMaximumVirtualCircuits()); str.append( ""]""); return str.toString(); "," return new PlayerKilledEvent(event.getEntity(), event.getDrops(), event.getDroppedExp(), event.getNewExp(), event.getNewTotalExp(), event.getNewLevel(), event.getDeathMessage()); "
0, jass.runtime.traceAssertion.CommunicationManager.internalAction = true; jass.runtime.traceAssertion.Parameter[] jassParameters; jassParameters = new jass.runtime.traceAssertion.Parameter[] {, if( c.isOWLThing() ) term = ATermUtils.TOP; else if( c.isOWLNothing() ) term = ATermUtils.BOTTOM; else term = ATermUtils.makeTermAppl( c.getIRI().toString() ); if( addAxioms ) { kb.addClass( term ); 
0," StringBuilder sbToString = getSbToString(); sbToString.setLength(0); sbToString.append(label); sbToString.append("" = ""); sbToString.append(kernel.format(getLength())); return sbToString.toString(); "," switch (version) { case 1: return new blockObject(blockList.get(index - 1), (byte) (blockList.get(index) & 0xff)); default: return new blockObject(blockList.get(index), (byte) 0); "
1," TreeNode currentNode = root; String[] parts = path.split(""/""); for (String part : parts) { TreeNode newNode = new TreeNode(part, count); if (currentNode.addChild(newNode)) { currentNode = newNode; "," TreeNode currentNode = root; String[] parts = path.split(""/""); for (String part : parts) { TreeNode newNode = new TreeNode(part, count); if (currentNode.addChild(newNode)) { currentNode = newNode; "
0, jass.runtime.traceAssertion.CommunicationManager.internalAction = true; jass.runtime.traceAssertion.Parameter[] jassParameters; jassParameters = new jass.runtime.traceAssertion.Parameter[] {," if( !PelletOptions.IGNORE_UNSUPPORTED_AXIOMS ) throw new UnsupportedFeatureException( ""Axiom: "" + axiom ); if( unsupportedAxioms.add( axiom ) ) log.warning( ""Ignoring unsupported axiom: "" + axiom ); "
0," String lang = ""fr""; assertEquals( tvString, m.createStatement( r, RDF.value, tvString, lang ).getString() ); assertEquals( lang, m.createStatement( r, RDF.value, tvString, lang ).getLanguage() ); ", robotProperties = new Properties(); Resource resource = resourcesLoader.getResource(resourcesPath); try { InputStream is = resource.getInputStream(); try { robotProperties.load(is); 
1," UriRuleProbeProvider.ruleAccept(TerminatingRule.class.getSimpleName(), path, resource); if (context.isTracingEnabled()) { context.trace(""accept termination (matching failure): \"""" + path + ""\""""); "," UriRuleProbeProvider.ruleAccept(TerminatingRule.class.getSimpleName(), path, resource); if (context.isTracingEnabled()) { context.trace(""accept termination (matching failure): \"""" + path + ""\""""); "
0, if (element==null) return null; if (!(element instanceof FittedPeak)) return null; final FittedPeak peak = (FittedPeak)element; if (peak.isSaved() && column==0) return savedIcon; return null; , int grabItems = _itemGrab; while ((grabItems > 0) && !_items.isEmpty()) { TempItem item = _items.get(0); int count = item.getQuantity(); if (count >= grabItems) { count = grabItems; 
1," boolean ret = true; FileInputStream stream = null; try { System.out.println(""Try to read a file as XML properties.""); stream = new FileInputStream(new File(file)); props.loadFromXML(stream); "," boolean XXXXX = true; FileInputStream XXXXX = null; try { System.out.println(""Try to read a file as XML properties.""); XXXXX = new FileInputStream(new File(file)); props.loadFromXML(XXXXX); "
1," out.write_ulong(request_id); out.write_ulong(reply_status); gnu.CORBA.GIOP.ServiceContext.writeSequence(out, service_context); out.setCodeSet(CodeSetServiceContext.find(service_context)); "," out.write_ulong(request_id); out.write_ulong(reply_status); gnu.CORBA.GIOP.ServiceContext.writeSequence(out, service_context); out.setCodeSet(CodeSetServiceContext.find(service_context)); "
0," Bundle bundle = Platform.getBundle(symbolicName); String versionString = (String) bundle.getHeaders().get(""Bundle-Version""); if (versionString != null) { return new Version(versionString); "," float scale = contrast + 1.f; float translate = (-.5f * scale + .5f) * 255.f; cm.set(new float[] { scale, 0, 0, 0, translate, 0, scale, 0, 0, translate, 0, 0, scale, 0, translate, 0, 0, 0, 1, 0 "
0, if (addedResources == null) { addedResources = CollectionFactory.createLightweightList(); for (Resource resource : addedSet) { if (!modifiedSet.contains(resource)) { addedResources.add(resource); , List<OrderEntry> entries = idx.getOrderEntriesForFile(file); for (int i = 0; i < entries.size(); i++) { final OrderEntry entry = entries.get(i); if (orderEntries.contains(entry)) return true; 
1, this.channelId = channelId; this.tagId = tagId; this.onlyUnreadItems = onlyUnreadItems; this.compareToItem = compareToItem; this.comparision = comparision; this.maxItems = maxItems; , this.channelId = channelId; this.tagId = tagId; this.onlyUnreadItems = onlyUnreadItems; this.compareToItem = compareToItem; this.comparision = comparision; this.maxItems = maxItems; 
1," switch (eContainerFeatureID()) { case GMFMapPackage.CHILD_REFERENCE__PARENT_NODE: return eInternalContainer().eInverseRemove(this, GMFMapPackage.NODE_MAPPING__CHILDREN, NodeMapping.class, msgs); "," switch (eContainerFeatureID()) { case GMFMapPackage.CHILD_REFERENCE__PARENT_NODE: return eInternalContainer().eInverseRemove(this, GMFMapPackage.NODE_MAPPING__CHILDREN, NodeMapping.class, msgs); "
0, Object property = properties.get( operation.getGroupPropertyName() ); Class<?>[] groups; if ( property == null ) { groups = operation == Operation.DELETE ? EMPTY_GROUPS : DEFAULT_GROUPS; ," return SizeOf.size(page,0)+ SizeOf.size(className)+ SizeOf.size(packageName)+ SizeOf.size(javaName)+ SizeOf.size(fileName)+ SizeOf.size(compName)+ SizeOf.size(lastAccess)+ SizeOf.size(accessCount); "
1," if (index < 0) throw new IllegalArgumentException(""Index should be equal or greater than 0""); groupType = type; this.index = index; synchronized (allGroups) { allGroups.add(this); "," if (index < 0) throw new IllegalArgumentException(""Index should be equal or greater than 0""); groupType = type; this.index = index; synchronized (allGroups) { allGroups.add(this); "
0," return (Boolean) execute(new RedisCallback<Jedis>() { public Object doInRedis(Jedis redis) { if (transaction != null) { return transaction.zadd(key, rank, o.toString()).equals(QUEUED); ", long delay = REDEPLOY_IMMEDIATELY; if(!immediateRedeployment.isSelected()) { delay = (getValue(days)*DAY)+ (getValue(hours)*HOUR)+ (getValue(minutes)*MINUTE)+ (getValue(seconds)*SECOND); 
1," while (warning != null) { out.println(""WARNING ""+ mapNull(warning.getSQLState(),""(no SQLState)"")+"": ""+ mapNull(warning.getMessage(),""(no message)"")); warning = warning.getNextWarning(); "," while (warning != null) { out.println(""WARNING ""+ mapNull(warning.getSQLState(),""(no SQLState)"")+"": ""+ mapNull(warning.getMessage(),""(no message)"")); warning = warning.getNextWarning(); "
1, DoubleMatrix1D mat = (DoubleMatrix1D)arg; for (int row = size()-1; row >= 0; row--) if (Math.abs(mat.get(row)-get(row))/Math.abs(mat.get(row)) > 0.0001) return false; return true; , DoubleMatrix1D XXXXX = (DoubleMatrix1D)arg; for (int XXXXX = size()-1; XXXXX >= 0; XXXXX--) if (Math.abs(XXXXX.get(XXXXX)-get(XXXXX))/Math.abs(XXXXX.get(XXXXX)) > 0.0001) return false; return true; 
0, this.zuluTime = zuluTime; this.revision = revision; this.forwardLdif = forwardLdif; this.reverseLdifs = new ArrayList<LdifEntry>( 1 ); reverseLdifs.add( reverseLdif ); this.committer = committer; , if (this == obj) return true; if (obj == null) return false; if (!(obj instanceof MFInt)) return false; MFInt other = (MFInt) obj; if (grp == null) { if (other.grp != null) return false; 
0," SecurityManager security = System.getSecurityManager(); if (security != null) { if (fullScreenExclusivePermission == null) { fullScreenExclusivePermission = new AWTPermission(""fullScreenExclusive""); "," final FileType fileType = file.getFileType(); return file.isDirectory() || (super.isFileVisible(file, showHiddenFiles) && FileAssociationsManager.XML_FILES_LIST.contains(fileType)); "
0," String text = fStartText.getText(); boolean hex = text.startsWith(""0x""); BigInteger startAddress = new BigInteger(hex ? text.substring(2) : text, hex ? 16 : 10); return startAddress; "," StringBuffer s = new StringBuffer(""SolvResPolPart(\n""); s.append(""ideal = "" + ideal); s.append(""\n GB = "" + GB); s.append(""\n syzygy = "" + syzygy); s.append("")""); return s.toString(); "
1, super(parent); this.labelProvider = labelProvider; this.contentProvider = new ElementSelectionDialogContentProvider(); this.elements = new ArrayList<Object>(); this.header = header; , super(parent); this.labelProvider = labelProvider; this.contentProvider = new ElementSelectionDialogContentProvider(); this.elements = new ArrayList<Object>(); this.header = header; 
1, return (platform instanceof PlatformSpecificServiceSpecificationImpl) ? (PlatformSpecificServiceSpecificationImpl)platform : new PlatformSpecificServiceSpecificationImpl(platform); , return (platform instanceof PlatformSpecificServiceSpecificationImpl) ? (PlatformSpecificServiceSpecificationImpl)platform : new PlatformSpecificServiceSpecificationImpl(platform); 
0," this.album = album; this.em = em; for (Artist a : em.createNamedQuery(""allArtistsByName"", Artist.class).getResultList()) { artist.addItem(a.getName(), String.valueOf(a.getId())); ", this.input = input; if (input instanceof IProvider) { setTitle(Messages.SelectSupportElementPage_Supported_Product_Title); setMessage(Messages.SelectSupportElementPage_Support_Product_Description); 
0, if (event.isCancelled()) return; Material type = event.getNewState().getType(); if (type == Material.SNOW) { if (!WorldConfig.get(event.getBlock()).formSnow) { event.setCancelled(true); ," fChanges.clear(); final IPDIMemoryBlock pdiBlock = getPDIBlock(); if (pdiBlock != null) { try { getPDISession().getMemoryManager().removeBlocks(getTasks(), new IPDIMemoryBlock[] { pdiBlock "
0," final StringBuilder sb = new StringBuilder(); sb.append(""MetadataValue""); sb.append(""{value="").append(value); sb.append("", name="").append(name); sb.append("", language="").append(language); sb.append('"," ImageProcessor ip2 = new FloatProcessor(width, height, new float[width*height], getColorModel()); ip2.setMinAndMax(getMin(), getMax()); ip2.setInterpolationMethod(interpolationMethod); return ip2; "
0," super(x, y); setGraphic(ResourceManager.getImage(""heart"")); setHitBox(0, 0, currentImage.getWidth(), currentImage.getHeight()); addType(HEART); heartSnd = ResourceManager.getSound(""heart""); ", ServiceInvoker invoker = null; if (applicationContext.containsBean(ServiceInvoker.SERVICE_NAME)) { invoker = (ServiceInvoker) applicationContext.getBean(ServiceInvoker.SERVICE_NAME); 
0," TestSuite suite = new TestSuite(""server-tests""); suite.addTestSuite(SetUp.class); FunctionalTests.add(suite); ServerTests.add(suite); suite.addTestSuite(TearDown.class); return suite; "," if (realRequest.getMethod() != expectedRequest.getMethod()) { LOGGER.info(""REJECTED on method: expected "" + expectedRequest.getMethod() + "" != "" + realRequest.getMethod()); return false; "
1," final EObject domainElement = getSemanticElement(semanticAdapter); final int visualID; if (semanticHint == null) { visualID = AcoreVisualIDRegistry.getNodeVisualID(containerView, domainElement); "," final EObject domainElement = getSemanticElement(semanticAdapter); final int visualID; if (semanticHint == null) { visualID = AcoreVisualIDRegistry.getNodeVisualID(containerView, domainElement); "
0, Long result = toMultiuserMap.get(number); if (result == null) return null; if ((multiuserAckDefect != -1) && (result >= multiuserAckDefect)) result += multiuserAckDefectOffset; return result; ," OWLNamedClass aCls = owlModel.createOWLNamedClass(""A""); OWLComplementClass complementCls = owlModel.createOWLComplementClass(aCls); assertSize(0, complementCls.getDependingClasses()); "
0," try { Destination dest = I2PAppContext.getGlobalContext().namingService().lookup(destination); if (dest == null) { synchronized (lock) { l.log(""Unresolvable: "" + destination + """"); ", if(getMap() != null){ final CanvasController2D controller = getMap().getCanvas().getController(); final Date[] range = controller.getTemporalRange(); return range != null && range[0] != null; 
1," Map alias2Type = new HashMap(); for (Iterator iter = qts.iterator(); iter.hasNext();) { EntityNameReference qt = (EntityNameReference) iter.next(); alias2Type.put(qt.getAlias(), qt.getEntityName()); "," Map XXXXX = new HashMap(); for (Iterator XXXXX = XXXXXs.XXXXXator(); XXXXX.hasNext();) { EntityNameReference XXXXX = (EntityNameReference) XXXXX.next(); XXXXX.put(XXXXX.getAlias(), XXXXX.getEntityName()); "
0," final JSONLexer lexer = getLexer(); try { if (isEnabled(Feature.AutoCloseSource)) { if (!lexer.isEOF()) { throw new JSONException(""not close json text, token : "" + JSONToken.name(lexer.token())); "," try { return Activator.getDefault() .getGraphDbServiceManager() .submitTask( new Callable<Object>() { @Override public Object call() throws Exception { return container.getProperty( key, null ); "
1," if (exceptionsString.length() != 0) { exceptions.clear(); final List<String> strings = StringUtil.split(exceptionsString, "",""); for (String string : strings) { exceptions.add(string); "," if (exceptionsString.length() != 0) { exceptions.clear(); final List<String> strings = StringUtil.split(exceptionsString, "",""); for (String string : strings) { exceptions.add(string); "
1, Report rpt = new Report(); ArrayList<String> msg = info.getValidationMessages(); String[] result = msg.toArray(new String[0]); rpt.setResult(result); rpt.setStatus(info.getStatus()); return rpt; , Report XXXXX = new Report(); ArrayList<String> msg = info.getValidationMessages(); String[] result = msg.toArray(new String[0]); XXXXX.setResult(result); XXXXX.setStatus(info.getStatus()); return XXXXX; 
0," ByteBuffer bb = cs.encode(name); ByteBuffer nbb = ByteBuffer.allocateDirect(bb.remaining() + 1); nbb.put(bb); nbb.put((byte) 0); nbb.flip(); return fill(nbb, inode, mode, nextOffset, buf, fillDir); "," IPreferencePage page = new TableRenderingPreferencePage(DebugUIMessages.TableRenderingPrefAction_0); showPreferencePage(""org.eclipse.debug.ui.tableRenderingPreferencepage"", page); "
1, String preExpansion = globals.installation.getProperty(field); if (preExpansion == null) { preExpansion = this.defaults.getProperty(field); if (preExpansion == null) { return null; , String XXXXX = globals.installation.getProperty(field); if (XXXXX == null) { XXXXX = this.defaults.getProperty(field); if (XXXXX == null) { return null; 
1, if(value==null) return false; String string = value.toString(); if(string.length()!=2) return false; return (Character.isLetter(string.charAt(0)) && Character.isLetter(string.charAt(0))); , if(value==null) return false; String XXXXX = value.toString(); if(XXXXX.length()!=2) return false; return (Character.isLetter(XXXXX.charAt(0)) && Character.isLetter(XXXXX.charAt(0))); 
0," final String path = query(_FILE_RESOLVE_PATH.args(PATH1)); final String can = new File(PATH1).getAbsolutePath(); assertEquals(path.toLowerCase(Locale.ENGLISH), can.toLowerCase(Locale.ENGLISH)); ", int manifestVersion = BundlePluginBase.getBundleManifestVersion(bundle); return (manifestVersion < 2) ? ICoreConstants.PACKAGE_SPECIFICATION_VERSION : Constants.VERSION_ATTRIBUTE; 
1, if (typedParameter != null && typedParameter.getParameters() != null) { FilterClause clause = typedParameter.getParameters().get(paramString); if (clause != null) { return clause.getValue(); , if (typedParameter != null && typedParameter.getParameters() != null) { FilterClause XXXXX = typedParameter.getParameters().get(paramString); if (XXXXX != null) { return XXXXX.getValue(); 
1," String oldHeight = height; height = newHeight; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, ProcessPackage.JOIN_TYPE__HEIGHT, oldHeight, height)); "," String XXXXX = height; height = newHeight; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, ProcessPackage.JOIN_TYPE__HEIGHT, XXXXX, height)); "
1," StringBuilder sbToString = getSbToString(); sbToString.setLength(0); sbToString.append(label); sbToString.append("" = ""); sbToString.append(kernel.format(getLength())); return sbToString.toString(); "," StringBuilder sbToString = getSbToString(); sbToString.setLength(0); sbToString.append(label); sbToString.append("" = ""); sbToString.append(kernel.format(getLength())); return sbToString.toString(); "
1," this.c = conf; this.startkey = getStartKey(conf); this.endkey = getEndKey(conf); if (startkey == null || endkey == null) { throw new RuntimeException(this.getClass() + "" not configured""); "," this.c = conf; this.startkey = getStartKey(conf); this.endkey = getEndKey(conf); if (startkey == null || endkey == null) { throw new RuntimeException(this.getClass() + "" not configured""); "
0," int levelIndex = ars.getLevelIndex( new DimLevel( dimensionName, name) ); if ( levelIndex < 0 ) { throw Context.reportRuntimeError( ResourceConstants.INVALID_NEST_AGGREGATION_EXPRESSION ); ", switch (featureID) { case ConfigurationPackage.PROR_PRESENTATION_CONFIGURATIONS__PRESENTATION_CONFIGURATIONS: return presentationConfigurations != null && !presentationConfigurations.isEmpty(); 
1," JSplitPane splitPane = (JSplitPane)ev.getSource(); BasicSplitPaneUI ui = (BasicSplitPaneUI)BasicLookAndFeel. getUIOfType(splitPane.getUI(), BasicSplitPaneUI.class); if (ui == null) { return; "," JSplitPane XXXXX = (JSplitPane)ev.getSource(); BasicSplitPaneUI XXXXX = (BasicSplitPaneUI)BasicLookAndFeel. getUIOfType(XXXXX.getUI(), BasicSplitPaneUI.class); if (XXXXX == null) { return; "
0," try { if (SYSTEM_DATASOURCE_NAME!=null && SYSTEM_DB.equalsIgnoreCase(dbName)) { return (DataSource) KernelRegistry.getSingleKernel().invoke( SYSTEM_DATASOURCE_NAME, ""$getResource""); "," assertThat(""testFormKey 0"",MetadataField.formKey(""dc"", ""elem"", null), equalTo(""dc_elem"")); assertThat(""testFormKey 1"",MetadataField.formKey(""dc"", ""elem"", ""qual""), equalTo(""dc_elem_qual"")); "
1, if (buildSettings != null && path != null) { String absolutePath = buildSettings.getBaseDir().getAbsolutePath(); if (path.startsWith(absolutePath)) { return path.substring(absolutePath.length()+1); , if (buildSettings != null && path != null) { String XXXXX = buildSettings.getBaseDir().getAbsolutePath(); if (path.startsWith(XXXXX)) { return path.substring(XXXXX.length()+1); 
0," if (visible) { new WindowGeometry( getClass().getName() + "".geometry"", WindowGeometry.centerInWindow( Main.parent, new Dimension(450,540) ) ).applySafe(this); initFromPreferences(); ", this.MM = mm; this.LR1 = outerRadius; this.LR2 = innerRadius; updateMagBufferWorkingDimensions(); a = Math.PI/(LR1-LR2); b = - Math.PI*LR2/(LR1-LR2); c = (MM-1)/2; e = (1+MM)/2; lx = x; ly = y; 
1," String format = request.getParameter(ProcessorConstants.OUTPUT_FORMAT_PARAM_NAME).getValueAsText(); _paramGroup.getParameter(ProcessorConstants.OUTPUT_FORMAT_PARAM_NAME).setValue(format, null); "," String XXXXX = request.getParameter(ProcessorConstants.OUTPUT_FORMAT_PARAM_NAME).getValueAsText(); _paramGroup.getParameter(ProcessorConstants.OUTPUT_FORMAT_PARAM_NAME).setValue(XXXXX, null); "
1, for (final ListIterator<S> it = all.listIterator(); it.hasNext();) { final S cur = it.next(); if (cur.compareTo(newEntry) >= 0) { it.previous(); it.add(newEntry); assert isSorted(); return; , for (final ListIterator<S> it = all.listIterator(); it.hasNext();) { final S cur = it.next(); if (cur.compareTo(newEntry) >= 0) { it.previous(); it.add(newEntry); assert isSorted(); return; 
1, assertNotNull(PositionalAccuracyImpl.DATUM_SHIFT_APPLIED); assertNotNull(PositionalAccuracyImpl.DATUM_SHIFT_OMITTED); usingDefaultFactory = !(opFactory instanceof AuthorityBackedFactory); , assertNotNull(PositionalAccuracyImpl.DATUM_SHIFT_APPLIED); assertNotNull(PositionalAccuracyImpl.DATUM_SHIFT_OMITTED); usingDefaultFactory = !(opFactory instanceof AuthorityBackedFactory); 
0," StringBuilder sb = new StringBuilder(512); sb.append(""PropertyIdSearchRow"") .append(""[ "").append(linkEntity) .append("", "").append(valueEntity) .append(""]""); return sb.toString(); "," PPTPage pptPage = (PPTPage)pageGraphic; pptPage.setLink( PPTUtil.getHyperlink( textArea, services, reportRunnable, context ) ); super.visitText( textArea ); pptPage.setLink( null ); "
1," try { Thread.sleep(2000); writeToDebuggerProxy(""<breakpoint file=\""\"" line=\""55\"" threadId=\""2\""/>""); writeToDebuggerProxy(""<threads><thread id=\""1\"" status=\""sleep\""/></threads>""); "," try { Thread.sleep(2000); writeToDebuggerProxy(""<breakpoint file=\""\"" line=\""55\"" threadId=\""2\""/>""); writeToDebuggerProxy(""<threads><thread id=\""1\"" status=\""sleep\""/></threads>""); "
0, ContentPane = new JPanel(); ContentPane.setLayout( new FlowLayout(FlowLayout.LEFT) ); ContentPane.setBorder(BorderFactory.createEtchedBorder()); ContentPane.add(Buttons); ContentPane.add(jsp); ," Person person = new Person(""person1"", new Date()); manager.create(person); manager.delete(person.getId()); Person persisted = manager.retrieve(person.getId()); Assert.assertNull(persisted); "
1," ImageProcessor ip2 = new FloatProcessor(width, height, new float[width*height], getColorModel()); ip2.setMinAndMax(getMin(), getMax()); ip2.setInterpolationMethod(interpolationMethod); return ip2; "," ImageProcessor ip2 = new FloatProcessor(width, height, new float[width*height], getColorModel()); ip2.setMinAndMax(getMin(), getMax()); ip2.setInterpolationMethod(interpolationMethod); return ip2; "
1, Workspace ws = new Workspace(); ws.spreadSheet = spreadSheet.createWorkspace(context); ws.scrollPane = ganttScrollPane.createWorkspace(context); ws.dividerLocation = getDividerLocation(); return ws; , Workspace XXXXX = new Workspace(); XXXXX.spreadSheet = spreadSheet.createWorkspace(context); XXXXX.scrollPane = ganttScrollPane.createWorkspace(context); XXXXX.dividerLocation = getDividerLocation(); return XXXXX; 
1," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," EditorCell XXXXX = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, XXXXX, editorContext); return XXXXX; "
1," Target target = ruleMediatorConfig.getTarget(); if (request.getParameter(""mediator.rule.target.value"") != null) { target.setValue(request.getParameter(""mediator.rule.target.value"")); "," Target target = ruleMediatorConfig.getTarget(); if (request.getParameter(""mediator.rule.target.value"") != null) { target.setValue(request.getParameter(""mediator.rule.target.value"")); "
1,"; Intent i = new Intent(ctx,MITCoursesListsSliderActivity.class); i.putExtra(MITCoursesListsSliderActivity.KEY_GROUP, MITCoursesListsSliderActivity.GROUP_11); ctx.startActivity(i); ","; Intent i = new Intent(ctx,MITCoursesListsSliderActivity.class); i.putExtra(MITCoursesListsSliderActivity.KEY_GROUP, MITCoursesListsSliderActivity.GROUP_11); ctx.startActivity(i); "
1, ThreadGroup mainTG = Thread.currentThread().getThreadGroup(); ThreadGroup parentTG = mainTG.getParent(); while (parentTG != null) { mainTG = parentTG; parentTG = mainTG.getParent(); , ThreadGroup mainTG = Thread.currentThread().getThreadGroup(); ThreadGroup parentTG = mainTG.getParent(); while (parentTG != null) { mainTG = parentTG; parentTG = mainTG.getParent(); 
1, Bus bus = control.createMock(Bus.class); EasyMock.expect(manager.getBus()).andReturn(bus); EasyMock.expect(bus.getExtension(PolicyEngine.class)).andReturn(null); control.replay(); rme.setPolicies(); , Bus XXXXX = control.createMock(Bus.class); EasyMock.expect(manager.getBus()).andReturn(XXXXX); EasyMock.expect(XXXXX.getExtension(PolicyEngine.class)).andReturn(null); control.replay(); rme.setPolicies(); 
0," MapMakerInternalMap<Object, Object> map = makeMap(createMapMaker().softKeys()); checkStrength(map, Strength.SOFT, Strength.STRONG); assertSame(EntryFactory.SOFT, map.entryFactory); ", final DITAOTJavaLogger logger = new DITAOTJavaLogger(); File imgInput = new File(dirName+File.separatorChar+fileName); if (checkDirName(dirName)) { imgInput = new File(getImageOutPutPath(fileName)); 
0," myTimer = new Timer(""ProjectPane Tree Updater"", 500) { protected void onTimer() throws InterruptedException { ModelAccess.instance().runReadInEDT(new Runnable() { public void run() { process(); "," ICacheSource source = cache.getSource(); System.out.print(prefix + "" ""); Class sourceClass = source.getClass(); if (sourceClass == BufferedImageSource.class) { System.out.println(""BufferedImage""); "
1," positionsModel.add(row, position.getLongitude(), position.getLatitude(), position.getElevation(), position.getSpeed(), position.getTime(), getRouteComment()); return positionsModel.getPosition(row); "," positionsModel.add(row, position.getLongitude(), position.getLatitude(), position.getElevation(), position.getSpeed(), position.getTime(), getRouteComment()); return positionsModel.getPosition(row); "
0, persistExportProperties(); return runOperationInContainer(new IRunnableWithProgress() { public void run(final IProgressMonitor monitor) throws InvocationTargetException { doExport(monitor); ," Attr typeAttr = (Attr)script.getAttributes().getNamedItem(""type""); return (typeAttr != null && typeAttr.getValue() != null && SCRIPT_TYPE_TO_OSML_TAG.containsKey(typeAttr.getValue())); "
0," StringBuilder builder = new StringBuilder(); if (nodeService.exists(storeRef) == true) { NodeRef rootNode = nodeService.getRootNode(storeRef); builder.append(outputNode(0, nodeService, rootNode)); "," String oldWidth = width; width = newWidth; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, ProcessPackage.HUMAN_TASK_TYPE__WIDTH, oldWidth, width)); "
0," String[] split = propertyName.split( ""\\."" ); if ( split.length != 2 ) { throw new IllegalArgumentException( ""Invalid format '"" + propertyName + ""'. It must be of type className.propertyName"" ); "," ResteasyWebTarget clone = admin.clone(); Mappers.registerContextResolver(clone.configuration()); authenticateTarget(""Skeleton Key"", clone); return clone.proxy(SkeletonKeyAdminClient.class); "
1," Properties properties = PropertiesHelper.createPropertiesFromString(asPortableString); String filePath = (String) properties.get(""FILE_PATH""); if (filePath == null) { return null; "," Properties XXXXX = PropertiesHelper.createPropertiesFromString(asPortableString); String XXXXX = (String) XXXXX.get(""FILE_PATH""); if (XXXXX == null) { return null; "
1, final int prime = 31; int result = 1; result = prime * result + ((address == null) ? 0 : address.hashCode()); result = prime * result + ((label == null) ? 0 : label.hashCode()); return result; , final int XXXXX = 31; int XXXXX = 1; XXXXX = XXXXX * XXXXX + ((address == null) ? 0 : address.hashCode()); XXXXX = XXXXX * XXXXX + ((label == null) ? 0 : label.hashCode()); return XXXXX; 
1," LabelProviderChangedEvent event = new LabelProviderChangedEvent( SharedProjectDecorator.this, objects); for (ILabelProviderListener listener : listeners) { listener.labelProviderChanged(event); "," LabelProviderChangedEvent XXXXX = new LabelProviderChangedEvent( SharedProjectDecorator.this, objects); for (ILabelProviderListener listener : listeners) { listener.labelProviderChanged(XXXXX); "
1," if (getLOOPOperator().hasExecutionPetriGraph() && isExpanded()) { OpenLoopedPetriGraph.actionType.makeNewAction(getLOOPOperator(), null, getProjectBrowser().getEditor()).doAction(); "," if (getLOOPOperator().hasExecutionPetriGraph() && isExpanded()) { OpenLoopedPetriGraph.actionType.makeNewAction(getLOOPOperator(), null, getProjectBrowser().getEditor()).doAction(); "
1," StringBuilder builder = new StringBuilder(); builder.append(""BaseDisjunction[""); builder.append(""constraints="").append(getConstraints()); builder.append(""]""); return builder.toString(); "," StringBuilder XXXXX = new StringBuilder(); XXXXX.append(""BaseDisjunction[""); XXXXX.append(""constraints="").append(getConstraints()); XXXXX.append(""]""); return XXXXX.toString(); "
0, mCategNames.clear(); Cursor c = mDb.getAllCategories(); if(c.moveToFirst()) { do { String name = c.getString( c.getColumnIndexOrThrow(LocTrigDB.KEY_NAME)); mCategNames.add(name.toLowerCase()); ," int value = SystemProperties.getInt(""debug.sqlite.wal.poolsize"", Resources.getSystem().getInteger( com.android.internal.R.integer.db_connection_pool_size)); return Math.max(2, value); "
0," super(parent, ""Route METOC properties"", Dialog.ModalityType.APPLICATION_MODAL); this.routeManager = routeManager; if (routeManager.isActiveRoute(routeId)) { route = routeManager.getActiveRoute(); "," String oldValue = value; value = newValue; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, NetDSLPackage.LABEL_ATTRIBUTE__VALUE, oldValue, value)); "
0," StringBuffer result = new StringBuffer(); result.append(_name); result.append('('); for (Iterator i = _parameters.iterator(); i.hasNext(); ) { result.append(i.next()); result.append(','); "," ContentValues vals = new ContentValues(); vals.put(SQLiteDAO.COL_ID, _id); vals.put(SQLiteDAO.COL_MDATE, date_modified); vals.put(SQLiteDAO.COL_CDATE, date_created); return vals; "
0," final File vcsFile = new File(PathManager.getSystemPath(), ""vcs""); File file = new File(vcsFile, ""git_users_new""); file.mkdirs(); myFile = new File(file, project.getLocationHash()); ", final double[][] data = new double[rand.nextInt(100)][rand.nextInt(100)]; for (int i = 0; i < data.length; i++) { for (int j = 0; j < data[i].length; j++) { data[i][j] = rand.nextDouble(); 
1, if (fSelectionWizardPage != null) { LoadpathContainerDescriptor[] descriptors= fSelectionWizardPage.getContainers(); for (int i= 0; i < descriptors.length; i++) { descriptors[i].dispose(); , if (fSelectionWizardPage != null) { LoadpathContainerDescriptor[] descriptors= fSelectionWizardPage.getContainers(); for (int i= 0; i < descriptors.length; i++) { descriptors[i].dispose(); 
0, if (referencestableRequiredProperty.getSelection() instanceof IStructuredSelection) { removeReferencestableRequiredProperty((IStructuredSelection) referencestableRequiredProperty.getSelection()); ," StringBuffer sb = new StringBuffer(); sb.append(""(""); sb.append(""Signer: "" + signerCertPath.getCertificates().get(0)); if (timestamp != null) { sb.append(""timestamp: "" + timestamp); "
1," String version = getAttribute(Constants.FRAGMENT_HOST, Constants.BUNDLE_VERSION_ATTRIBUTE); if (version == null) { setVersionFields("""", true, """", false); setFieldsEnabled(); return; "," String version = getAttribute(Constants.FRAGMENT_HOST, Constants.BUNDLE_VERSION_ATTRIBUTE); if (version == null) { setVersionFields("""", true, """", false); setFieldsEnabled(); return; "
0, boolean old = action.isSelected( dockable ); boolean current = item.isSelected(); if( old != current ){ action.trigger( dockable ); item.setSelected( action.isSelected( dockable ) ); ," super(context, attrs); mPhone = PhoneApp.getPhone(); mHandler = new MyHandler(); mPhone.queryCdmaRoamingPreference( mHandler.obtainMessage(MyHandler.MESSAGE_GET_ROAMING_PREFERENCE)); "
0," lock.lock(); try { Object[] elements = array; Object old = elements[index]; int len = elements.length; int moved = len - index - 1; if (moved == 0) { array = Arrays.copyOf(elements, len - 1); "," if (entity instanceof PieSectionEntity) { PieSectionEntity pieEntity = (PieSectionEntity) entity; return getPieSectorInfo(pieEntity.getDataset(), pieEntity.getSectionKey(), pieEntity.getPieIndex()); "
1," boolean added = false; ATermAppl name = (ATermAppl) axiom.getArgument( 0 ); TermDefinition td = getTD( name ); if( td == null ) { td = new TermDefinition(); termhash.put( name, td ); "," boolean XXXXX = false; ATermAppl XXXXX = (ATermAppl) axiom.getArgument( 0 ); TermDefinition XXXXX = getTD( XXXXX ); if( XXXXX == null ) { XXXXX = new TermDefinition(); termhash.put( XXXXX, XXXXX ); "
0," double expected = 1.0e-2; UnivariateRealSolver solver = new BisectionSolver(); solver.setFunctionValueAccuracy(expected); assertEquals(expected, solver.getFunctionValueAccuracy(), 1.0e-2); ", if (obj instanceof ModuleAdapter) { ModuleAdapter other = (ModuleAdapter) obj; String otherPath = other.getFile().getAbsolutePath(); return file.getAbsolutePath().equalsIgnoreCase(otherPath); 
1," Style style = new Style(cell); style.set(StyleAttributes.PUNCTUATION_LEFT, true); style.set(StyleAttributes.PUNCTUATION_RIGHT, true); style.set(StyleAttributes.SELECTABLE, false); return style; "," Style style = new Style(cell); style.set(StyleAttributes.PUNCTUATION_LEFT, true); style.set(StyleAttributes.PUNCTUATION_RIGHT, true); style.set(StyleAttributes.SELECTABLE, false); return style; "
1," this.a = a(datainputstream, 7); this.b = datainputstream.readByte(); byte b0 = datainputstream.readByte(); this.c = b0 & 7; this.d = (b0 & 8) == 8; this.e = datainputstream.readByte(); "," this.a = a(datainputstream, 7); this.b = datainputstream.readByte(); byte XXXXX = datainputstream.readByte(); this.c = XXXXX & 7; this.d = (XXXXX & 8) == 8; this.e = datainputstream.readByte(); "
0, if (this.resultingModelNode == null) { try { this.kernelServices = super.installInController(getValidSubsystemXML()); this.resultingModelNode = this.kernelServices.readWholeModel(); ," String str = searchText.getText(); if (str.length() > 0) { clear(); listModel.addElement(""Searching...""); SearchType type = SearchType.FUZZY; if (place.isSelected()) { type = SearchType.PLACE; "
1," moveToIndex(iNewSize).fill((size - iNewSize) * ORecordId.PERSISTENT_SIZE, (byte) 0); if (rids != null) Arrays.fill(rids, iNewSize, size, null); size = iNewSize; return setDirty(); "," moveToIndex(iNewSize).fill((size - iNewSize) * ORecordId.PERSISTENT_SIZE, (byte) 0); if (rids != null) Arrays.fill(rids, iNewSize, size, null); size = iNewSize; return setDirty(); "
0," ObjectLyrics3Line line; String str = """"; for (int i = 0; i < this.lines.size(); i++) { line = (ObjectLyrics3Line) this.lines.get(i); str += (line.writeString() + TagConstant.SEPERATOR_LINE); "," super(parent, page.getManagedForm().getToolkit(), titleBar ? (ExpandableComposite.TITLE_BAR | style) : style); this.page = page; createClient(getSection(), page.getEditor().getToolkit()); "
1," IdSet s = new IdHashSet(); assertTrue(s.add(4711)); assertEquals(1, s.size()); assertTrue(s.contains(4711)); assertFalse(s.add(4711)); assertEquals(1, s.size()); assertTrue(s.contains(4711)); "," IdSet s = new IdHashSet(); assertTrue(s.add(4711)); assertEquals(1, s.size()); assertTrue(s.contains(4711)); assertFalse(s.add(4711)); assertEquals(1, s.size()); assertTrue(s.contains(4711)); "
0," for (int i=0;i<auth_listeners.size();i++){ try{ boolean res = ((TrackerAuthenticationListener)auth_listeners.get(i)).authenticate( resource, user, password ); if ( res ){ return(true ); "," Set<String> parents = new HashSet<String>(); synchronized(localEphemeralDirs) { for (int i = localEphemeralDirs.size() - 1; i >= 0; i--) { try { ormdir(localEphemeralDirs.get(i),false); "
0," if (_luceneIndexThreadPoolExecutor != null) { _luceneIndexThreadPoolExecutor.shutdownNow(); try { _luceneIndexThreadPoolExecutor.awaitTermination( 60, java.util.concurrent.TimeUnit.SECONDS); "," setProgressBarIndeterminateVisibility(true); setTitle(""scanning""); findViewById(R.id.title_new_devices).setVisibility(View.VISIBLE); if (mBtAdapter.isDiscovering()) { mBtAdapter.cancelDiscovery(); "
1," Iterator<IContextMenu> iterator = contextMenus.iterator(); while (iterator.hasNext()) { IContextMenu menu = (IContextMenu) iterator.next(); menu.setComponent(component, point, isTriggered); "," Iterator<IContextMenu> iterator = contextMenus.iterator(); while (iterator.hasNext()) { IContextMenu XXXXX = (IContextMenu) iterator.next(); XXXXX.setComponent(component, point, isTriggered); "
1," installDefaults((AbstractButton) c); installListeners((AbstractButton) c); installKeyboardActions((AbstractButton) c); BasicHTML.updateRenderer(c, ((AbstractButton) c).getText()); "," installDefaults((AbstractButton) c); installListeners((AbstractButton) c); installKeyboardActions((AbstractButton) c); BasicHTML.updateRenderer(c, ((AbstractButton) c).getText()); "
0, _pivotTablePane.setHeaderSelectionMode(e.getStateChange() == ItemEvent.SELECTED ? PivotConstants.HEADER_SELECTION_HEADER_TABLE_ONLY : PivotConstants.HEADER_SELECTION_DATA_TABLE_ONLY); ," String value = manifestation.getViewProperties().getProperty(key, String.class); if (value == null) { if (!isValidKey(key)) return null; set (key, defaultMap.get(key)); value = defaultMap.get(key); "
0," return instantiator.newInstance(DefaultMavenArtifactRepository.class, fileResolver, createPasswordCredentials(), transportFactory, locallyAvailableResourceFinder, cachedExternalResourceIndex ); "," Writer oldAuthor = author; author = newAuthor; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, EXTLibraryPackage.BOOK_ON_TAPE__AUTHOR, oldAuthor, author)); "
1, if (android.os.Environment.getExternalStorageState().equals(android.os.Environment.MEDIA_MOUNTED)) { if (isRecording) { mRecorder.stop(); mRecorder.release(); isRecording = false; , if (android.os.Environment.getExternalStorageState().equals(android.os.Environment.MEDIA_MOUNTED)) { if (isRecording) { mRecorder.stop(); mRecorder.release(); isRecording = false; 
0," if (cursorY < 0 || cursorY >= heightInCharacters) throw new IllegalArgumentException(""cursorY "" + cursorY + "" must be within range [0,"" + heightInCharacters + "")."" ); this.cursorY = cursorY; "," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; "
1," setDefaultVersion(IPythonNature.GRAMMAR_PYTHON_VERSION_2_5); String str = """" + ""def counter (maximum):\n"" + "" i = 0\n"" + "" while i < maximum:\n"" + "" val = (yield i)\n"" + """"; parseLegalDocStr(str); "," setDefaultVersion(IPythonNature.GRAMMAR_PYTHON_VERSION_2_5); String XXXXX = """" + ""def counter (maximum):\n"" + "" i = 0\n"" + "" while i < maximum:\n"" + "" val = (yield i)\n"" + """"; parseLegalDocStr(XXXXX); "
0," return new SinkBuilder() { @Override @Deprecated public EventSink build(Context context, String... argv) { throw new RuntimeException( ""Old sink builder for Console sink should not be exercised""); "," switch (archiveType) { case ZIP: return new ZipArchiver(); case TARGZ: return new TgzArchiver(); default: throw new PleaseException(""archive type '"" + archiveType + ""' not supported""); "
0, this._subArrayBits = subArrayBits; this._subArraySize = 1 << subArrayBits; this._subArrayMask = this._subArraySize - 1; this._subArrays = new int[1][_subArraySize]; this._autoExpand = autoExpand; ," for (URI queue : queues) { api().getQueueApi().setAttribute(queue, ""MaximumMessageSize"", ""1024""); assertEquals(api().getQueueApi().getAttributes(queue).getMaximumMessageSize(), 1024); "
1," synchronized (BluetoothService.this) { if (DBG) Log.d(TAG, ""Tracked app "" + mPid + "" died"" + ""Type:"" + mType); if (mType == RFCOMM_RECORD_REAPER) { checkAndRemoveRecord(mHandle, mPid); "," synchronized (BluetoothService.this) { if (DBG) Log.d(TAG, ""Tracked app "" + mPid + "" died"" + ""Type:"" + mType); if (mType == RFCOMM_RECORD_REAPER) { checkAndRemoveRecord(mHandle, mPid); "
0," int cachei = key.hashCode() & cachedEntrySizeMask; Entry<K,V> e = cachedEntries[cachei]; if(e != null){ if(key.hashCode() == e.getHash() && key.equals(e.getKey())) { return true; "," try { this.getSession().check(); final String container = this.getContainerName(); if(attributes().isFile()) { this.getSession().message(MessageFormat.format(Locale.localizedString(""Deleting {0"
0," if (requireChange(this.length, length)) { Object oldValue = this.length; this.length = length; setChanged(); notifyObservers(new SGAttributeModification(""length"", oldValue, length)); ", if (backgroundColorCache != null) return backgroundColorCache; List<StyleSource> sources = MapPaintStyles.getStyles().getStyleSources(); for (StyleSource s : sources) { if (!s.active) { continue; 
0," CommitCommentPayload payload = new CommitCommentPayload(); CommitComment comment = new CommitComment(); comment.setBody(""comment""); assertEquals(comment, payload.setComment(comment).getComment()); "," Integer key = null; for (Entry<Integer, QuestionDto> entry : questionGroup.getQuestionMap() .entrySet()) { if (entry.getValue().getKeyId().equals(question.getKeyId())) { key = entry.getKey(); break; "
1, mPaint = new Paint(); mPaint.setColor(0x99ff0000); mPaint.setStrokeCap(Paint.Cap.ROUND); mPaint.setStyle(Paint.Style.STROKE); mPaint.setStrokeWidth(10); mPoints = new LinkedList<GeoPoint>(); , mPaint = new Paint(); mPaint.setColor(0x99ff0000); mPaint.setStrokeCap(Paint.Cap.ROUND); mPaint.setStyle(Paint.Style.STROKE); mPaint.setStrokeWidth(10); mPoints = new LinkedList<GeoPoint>(); 
0," new CouponInflationZeroCouponMonthlyDefinition(CUR, PAYMENT_DATE, START_DATE, PAYMENT_DATE, 1.0, NOTIONAL, PRICE_INDEX, MONTH_LAG, null, INDEX_APRIL_2008, REFERENCE_END_DATE, FIXING_DATE, false); "," StringBuilder sb = new StringBuilder(getBaseUri()); sb.append(BINARY_PREFIX); sb.append(""?type=""); sb.append(mimeType); sb.append(""&length=""); sb.append(contentLength); return sb.toString(); "
1," this.mTestPath = (String) icicle.get(""path""); String timeout_str = (String) icicle.get(""timeout""); if (timeout_str != null) { try { this.mTimeoutInMillis = Integer.parseInt(timeout_str); "," this.mTestPath = (String) icicle.get(""path""); String XXXXX = (String) icicle.get(""timeout""); if (XXXXX != null) { try { this.mTimeoutInMillis = Integer.parseInt(XXXXX); "
1," loginRoot(); ExperimenterGroup g2 = newGroup(); setup(Permissions.PRIVATE); Experimenter e = uuidUser(); try { iAdmin.createExperimenterWithPassword(e, ""pass"", g2); fail(""not in my group""); "," loginRoot(); ExperimenterGroup g2 = newGroup(); setup(Permissions.PRIVATE); Experimenter e = uuidUser(); try { iAdmin.createExperimenterWithPassword(e, ""pass"", g2); fail(""not in my group""); "
0, final CacheEntry entry = keyToEntryMap.get(key); if (entry != null) { keyToEntryMap.remove(key); linkedList.remove(entry.listEntry); currentSize--; if (isEvict) { notifyEvicted(entry.cacheable); , long mapPutsNow = mapPuts.getAndSet(0); long mapRemovesNow = mapTakes.getAndSet(0); Stats newOne = new Stats(); newOne.mapPuts.set(mapPutsNow); newOne.mapTakes.set(mapRemovesNow); return newOne; 
0," if (invisibleFrame == null) { try { Class.forName(""javax.swing.JFrame""); invisibleFrame = new JFrame(); ((JFrame)invisibleFrame).setDefaultCloseOperation( JFrame.DO_NOTHING_ON_CLOSE); "," assert(event.getClass().equals(LongEvent.class)); ++callCount; try { System.out.println(""Event handler "" + this.toString() + "" going to sleep..."" + callCount); Thread.sleep(1000); "
0, this.minLayer = minLayer; this.maxLayer = maxLayer; factory = new RenderableComponentComparator.Factory(); this.renderableComponentComparator = new RenderableComponentComparator(factory); , if ((this.globalClosingState & (OWNED_BY_OUTSIDE|REPORTED_EXPLICIT_CLOSE)) == 0) { this.globalClosingState |= REPORTED_EXPLICIT_CLOSE; problemReporter.explicitlyClosedAutoCloseable(this); 
1, if (payload.getPayloadIdentifier().getSequenceNumber() != 0) { this.getHibernateTemplate().flush(); this.getHibernateTemplate().evict(payload); this.getHibernateTemplate().clear(); , if (payload.getPayloadIdentifier().getSequenceNumber() != 0) { this.getHibernateTemplate().flush(); this.getHibernateTemplate().evict(payload); this.getHibernateTemplate().clear(); 
1," for (Pair<String, Long> entry : sizes) { if (size / entry.getValue() > 0) { double value = ((double) size) / ((double) entry.getValue()); return format.format(value) + "" "" + entry.getKey(); "," for (Pair<String, Long> entry : sizes) { if (size / entry.getValue() > 0) { double XXXXX = ((double) size) / ((double) entry.getValue()); return format.format(XXXXX) + "" "" + entry.getKey(); "
0," double expected = 1.0e-2; UnivariateRealSolver solver = new BisectionSolver(); solver.setAbsoluteAccuracy(expected); assertEquals(expected, solver.getAbsoluteAccuracy(), 1.0e-2); ", if (object instanceof OWLHasValue) { OWLHasValue compCls = (OWLHasValue) object; RDFObject compVal; if (compCls.getHasValue() instanceof RDFResource) { compVal = (RDFResource) compCls.getHasValue(); 
0," render(localBuffer); if(isClean || !playing) { track.write(silentTarget, 0, silentTarget.length); if (recording) { for(int i = 0; i < CHUNK_SIZE; i++) { WavWriter.pushShort((short)0); "," Logger.normal(this, ""Veriying all stored scores ...""); synchronized(Persistent.transactionLock(mDB)) { try { computeAllScoresWithoutCommit(); Persistent.checkedCommit(mDB, this); "
0," if(value == inst.getEObject() && !inst.isConsumed()) return null; switch(index) { case 0: return new UnaryExpr_Alternatives_1_1(lastRuleCallOrigin, next, actIndex, consumed); default: return null; "," if(OJUtil.hasOJClass(i) && !(i instanceof INakedHelper)){ OJAnnotatedClass ojClass = findJavaClass(i); this.buildToXmlString(ojClass, i); this.buildToXmlReferenceString(ojClass, i); "
1," logger.info(""Activating persistence manager for episodes""); penv = PersistenceUtil.newPersistenceEnvironment(cc, ""org.opencastproject.episode.impl.persistence"", persistenceProperties); "," logger.info(""Activating persistence manager for episodes""); penv = PersistenceUtil.newPersistenceEnvironment(cc, ""org.opencastproject.episode.impl.persistence"", persistenceProperties); "
1," print(""Failed to generating maps view to '"" + outputDirectory + ""' using story maps '"" + storyMaps + ""'"" + "" and view properties '"" + viewProperties + ""'""); printStackTrace(cause); "," print(""Failed to generating maps view to '"" + outputDirectory + ""' using story maps '"" + storyMaps + ""'"" + "" and view properties '"" + viewProperties + ""'""); printStackTrace(cause); "
1, controller.getRenderer().getRendererModel().setZoomFactor(controller.getRenderer().getRendererModel().getZoomFactor() * (1 + velocity.getDeltaY() / 1000d)); controller.refreshView(); , controller.getRenderer().getRendererModel().setZoomFactor(controller.getRenderer().getRendererModel().getZoomFactor() * (1 + velocity.getDeltaY() / 1000d)); controller.refreshView(); 
0," File charFile = new File(characterFilename); String charname = charFile.getName(); String extension = StringUtils.substringAfterLast(exportTemplateFilename, "".""); if (isPdf) { extension = ""pdf""; "," while (doSynch) { try { throttle.throttle(); clockSyncher.synch(); log.debug(""Clock synched, delta = "" + clockSyncher.getDelta() + "", epsilon = "" + clockSyncher.getEpsilon() + "".""); "
0," Bundle result = new Bundle(); for (String key : AttributeMapper.getContactAttrs()) { if (!key.equalsIgnoreCase(AttributeMapper.DISPLAYNAME)) result.putString(key, key + postfix); ", Injector injectorImpl = new InjectorImpl(); MyTemplate myTemplate = new MyTemplate(); injectorImpl.injectMembers(myTemplate); assertNull(myTemplate.object); assertNull(myTemplate.anotherObject); 
1," IQueryResultInstanceDao patientSetResultDao = sfDAOFactory .getPatientSetResultDAO(); patientSetResultDao.updatePatientSet(resultInstanceId, statusTypeId, statusMsg, setSize, 0, """"); "," IQueryResultInstanceDao XXXXX = sfDAOFactory .getPatientSetResultDAO(); XXXXX.updatePatientSet(resultInstanceId, statusTypeId, statusMsg, setSize, 0, """"); "
0," File bin = new File( installFolder, ""bin"" ); if ( bin.exists() ) { File tool = new File( bin, toolName + ( Os.isFamily( ""windows"" ) ? "".exe"" : """" ) ); if ( tool.exists() ) { return tool; ", Figure[] figures = figureEditor.getFigureSelection().getFigures(); for (Figure figure : figures) { if (figure instanceof SimpleFeatureFigure) { return (SimpleFeatureFigure) figure; 
1," this.gridFrame = gridFrame; this.pk = pk; this.conn = conn; frame = new DetailFrame(conn,this); if (pk!=null) { frame.getMainPanel().setMode(Consts.READONLY); frame.getMainPanel().reload(); "," this.gridFrame = gridFrame; this.pk = pk; this.conn = conn; frame = new DetailFrame(conn,this); if (pk!=null) { frame.getMainPanel().setMode(Consts.READONLY); frame.getMainPanel().reload(); "
0, if (strategiesComboBoxes[strategyIndex] != null) { StrategyWrapper sw = (StrategyWrapper) strategiesComboBoxes[strategyIndex].getSelectedItem(); if (sw != null) { return sw.getStrategy(); ," List childrenList = ep.getChildren(); Iterator it = childrenList.iterator(); while ( it.hasNext() ) { StringBuffer sb = new StringBuffer(); for ( int i = 0 ; i < depth ; i++ ) { sb.append("" ""); "
0, int c = 1; for (; c < initialCapacity; c <<= 1); threshold = (int) (c * loadFactor); if (initialCapacity > threshold && c < MAXIMUM_CAPACITY) { c <<= 1; threshold = (int) (c * loadFactor); ," final StringBuilder sb = new StringBuilder(); sb.append(""MetadataValue""); sb.append(""{value="").append(value); sb.append("", name="").append(name); sb.append("", language="").append(language); sb.append('"
0," Class<?>[] types = method.getParameterTypes(); return method.getName().startsWith(""get"") && (types != null) && (types.length > 0) && (types[0].equals(String.class) || types[0].equals(Integer.TYPE)); "," g.setColor(color); g.drawLine(x, y, x, y + height - 1); g.drawLine(x, y + height - 1, x + width - 1, y + height - 1); g.drawLine(x + width - 1, y, x + width - 1, y + height - 1); "
1, RevisionInformation revisionInfo= fRevisionInfo; if (revisionInfo != null) { IInformationControlCreator creator= revisionInfo.getHoverControlCreator(); if (creator != null) return creator; , RevisionInformation revisionInfo= fRevisionInfo; if (revisionInfo != null) { IInformationControlCreator creator= revisionInfo.getHoverControlCreator(); if (creator != null) return creator; 
1," _header = new byte[8]; _data = new byte[0]; LittleEndian.putShort(_header, 0, (short)0x10); LittleEndian.putShort(_header, 2, (short)getRecordType()); LittleEndian.putInt(_header, 4, _data.length); "," _header = new byte[8]; _data = new byte[0]; LittleEndian.putShort(_header, 0, (short)0x10); LittleEndian.putShort(_header, 2, (short)getRecordType()); LittleEndian.putInt(_header, 4, _data.length); "
1," if (isTraceEnabled()) { FormattingTuple ft = MessageFormatter.format(format, arg); logger.log(FQCN, traceCapable ? Level.TRACE : Level.DEBUG, ft .getMessage(), ft.getThrowable()); "," if (isTraceEnabled()) { FormattingTuple XXXXX = MessageFormatter.format(format, arg); logger.log(FQCN, traceCapable ? Level.TRACE : Level.DEBUG, XXXXX .getMessage(), XXXXX.getThrowable()); "
1," mQueryHandler.post(new Runnable() { @Override public void run() { if (Log.isLoggable(LogTag.APP, Log.VERBOSE)) { log(""onDraftChanged: threadId="" + threadId + "", hasDraft="" + hasDraft); "," mQueryHandler.post(new Runnable() { @Override public void run() { if (Log.isLoggable(LogTag.APP, Log.VERBOSE)) { log(""onDraftChanged: threadId="" + threadId + "", hasDraft="" + hasDraft); "
1," File[] directories = event.getFileList(); String name = ""Locating root directories.""; SetupFilesThread setupFilesThread = new SetupFilesThread(name, directories); setupFilesThread.start(); "," File[] directories = event.getFileList(); String XXXXX = ""Locating root directories.""; SetupFilesThread XXXXX = new SetupFilesThread(XXXXX, directories); XXXXX.start(); "
1," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (name: ""); result.append(name); result.append(')'); return result.toString(); "," if (eIsProxy()) return super.toString(); StringBuffer XXXXX = new StringBuffer(super.toString()); XXXXX.append("" (name: ""); XXXXX.append(name); XXXXX.append(')'); return XXXXX.toString(); "
1," if (getLOOPOperator().hasExecutionPetriGraph() && !isExpanded()) { OpenLoopedPetriGraph.actionType.makeNewAction(getLOOPOperator(), null, getProjectBrowser().getEditor()).doAction(); "," if (getLOOPOperator().hasExecutionPetriGraph() && !isExpanded()) { OpenLoopedPetriGraph.actionType.makeNewAction(getLOOPOperator(), null, getProjectBrowser().getEditor()).doAction(); "
0, if ((mask & 1) != 0) count1++; if ((mask & 2) != 0) count2++; if ((mask & 4) != 0) count4++; if ((mask & 8) != 0) count8++; if ((mask & 16) != 0) count16++; if ((mask & 32) != 0) count32++; ," TextWebSocketFrame textFrame = (TextWebSocketFrame) frame; _logger.debug(""Subscribe WebSocket Received Message:"" + textFrame.getText()); messagesReceived.add(textFrame.getText()); "
0," plugin.getAPI().setPlayerInfo(event.getPlayer().getName(), ""lastSeen"", Long.toString((System.currentTimeMillis() / 1000L))); plugin.getAPI().processTimes(event.getPlayer().getName()); ", Set<Integer> intersection = new HashSet<Integer>(); Set<Integer> union = new HashSet<Integer>(); for (int i = 0; i < a.length(); ++i) { int d = a.get(i); intersection.add(d); union.add(d); 
1, Location location = new Location(); location.setCountry(country); location.setRegion(region); location.setStateProvince(province); location.setCountyDistrict(district); return location; , Location XXXXX = new Location(); XXXXX.setCountry(country); XXXXX.setRegion(region); XXXXX.setStateProvince(province); XXXXX.setCountyDistrict(district); return XXXXX; 
1," ViewNode root = getViewManager().getApplicationRoot(); ViewNode windowRootNode = new WindowViewNode(""window"",root); this.windowRootNode = windowRootNode; return this.windowRootNode; "," ViewNode XXXXX = getViewManager().getApplicationRoot(); ViewNode XXXXX = new WindowViewNode(""window"",XXXXX); this.XXXXX = XXXXX; return this.XXXXX; "
1," log.info(""Loading PetitionService ...""); Set<Petition> petitions = DAOManager.getDAO(PetitionDAO.class).getPetitions(); for(Petition p : petitions) { registeredPetitions.put(p.getPetitionId(), p); "," log.info(""Loading PetitionService ...""); Set<Petition> petitions = DAOManager.getDAO(PetitionDAO.class).getPetitions(); for(Petition p : petitions) { registeredPetitions.put(p.getPetitionId(), p); "
1," if (type == ContentSourceType.HistoryVersion) { return FlexoLocalization.localizedForKey(type.getUnlocalizedStringRepresentation()) + "" "" + (version != null ? version.versionAsString() : ""???""); "," if (type == ContentSourceType.HistoryVersion) { return FlexoLocalization.localizedForKey(type.getUnlocalizedStringRepresentation()) + "" "" + (version != null ? version.versionAsString() : ""???""); "
1," boolean enabled = (treeStructure.getEnabledAncestor(node) == null); node.setEnabled(enabled); treeStructure.insertAsChild(node, node.parent); if (node.isEnabled()) { view.incNodesEnabled(1); "," boolean XXXXX = (treeStructure.getEnabledAncestor(node) == null); node.setEnabled(XXXXX); treeStructure.insertAsChild(node, node.parent); if (node.isEnabled()) { view.incNodesEnabled(1); "
1," addObject(delta); if (delta.getNode().getGridId() != null) { Key nodeKey = new Key(delta.getNode().getClass(), delta.getNode().getGridId()); get(nodeKey).addDeltaReference(delta); "," addObject(delta); if (delta.getNode().getGridId() != null) { Key nodeKey = new Key(delta.getNode().getClass(), delta.getNode().getGridId()); get(nodeKey).addDeltaReference(delta); "
1, switch (getDBType(em)) { case db2: assertLockTestSQLs(Select + tableLfName + Where + DB2Lock); break; case oracle: case derby: default: assertLockTestSQLs(Select + tableLfName + Where + ForUpdate); , switch (getDBType(em)) { case db2: assertLockTestSQLs(Select + tableLfName + Where + DB2Lock); break; case oracle: case derby: default: assertLockTestSQLs(Select + tableLfName + Where + ForUpdate); 
1," Entry<V>[] table = this.table; int length = table.length; int index = index(key, length); Entry<V> e = table[index]; while (e != null) { index = nextIndex(index, length); e = table[index]; "," Entry<V>[] table = this.table; int XXXXX = table.XXXXX; int XXXXX = XXXXX(key, XXXXX); Entry<V> e = table[XXXXX]; while (e != null) { XXXXX = nextIndex(XXXXX, XXXXX); e = table[XXXXX]; "
0," super(IdleRequest.class, next, mailboxManager, factory); this.heartbeatInterval = heartbeatInterval; this.heartbeatIntervalUnit = heartbeatIntervalUnit; this.heartbeatExecutor = heartbeatExecutor; "," if (numero == 100000) num_letracm = ""cien mil""; if (numero >= 100000 && numero <1000000){ flag=1; num_letracm = centena(numero/1000).concat("" mil "").concat(centena(numero%1000)); "
0," if (verboseLogging) log.info(""Replenish Timer Creator called! Town: "" + townName + "", Item: "" + itemName); if (replenishStartUp) { signText[1] = townName; signText[2] = itemName; "," StringBuilder b = new StringBuilder(); Class[] args = method.getParameterTypes(); for (int i = 0; i < args.length; i++) { b.append("" p"" + i); if (i < args.length - 1) b.append("", ""); "
1, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(Address6010LatestTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , TestSuite XXXXX = new TestSuite(); XXXXX.addTest(LoginTests.suite()); XXXXX.addTest(Address6010LatestTestPlan.suite()); XXXXX.addTestSuite(StopSeleniumTest.class); return XXXXX; 
0," PreferenceDialog dlg = PreferencesUtil.createPreferenceDialogOn(PlatformUI.getWorkbench() .getActiveWorkbenchWindow() .getShell(), ID_PREFS_HIGHLIGHTERS, new String[] { ID_PREFS_HIGHLIGHTERS "," EntityManager em = null; try { em = emf.createEntityManager(); Query q = em.createNamedQuery(""findTotalByType""); q.setParameter(""type"", type); return ((Long) q.getSingleResult()).intValue(); "
0," PluginContainerRefreshedEvent event = new PluginContainerRefreshedEvent(new Object(), ""plugin-key""); states.tryNextState(""bundle-starting"", ""spring-created""); plugin.onSpringContextRefresh(event); "," return new ICallHierarchyService () { public CalledByResult findCalledBy(Scope scope, ICElement callee, IProgressMonitor pm) throws CoreException, InterruptedException { return new CalledByResult(); "
0," OperationPenaltyDefend op = new OperationPenaltyDefend(alfieFacingDirection); boolean actual = op.isAngleDecreasing(isOpponentRotatingCCW, rotatingSpeed); Assert.assertEquals(expected, actual); "," key = Messages.get(key); Object[] args = new Object[variables.length + 1]; System.arraycopy(variables, 0, args, 1, variables.length); args[0] = key; return Messages.get(message, args); "
0, this.timePoint = timePoint; this.minError = minError; this.avgError = avgError; this.maxError = maxError; this.minRatio = minRatio; this.avgRatio = avgRatio; this.maxRatio = maxRatio; ," assertEquals(true, new Instant(TEST_TIME_NOW - 1).isBeforeNow()); assertEquals(false, new Instant(TEST_TIME_NOW).isBeforeNow()); assertEquals(false, new Instant(TEST_TIME_NOW + 1).isBeforeNow()); "
1," assertEquals(0, ComparisonChain.start() .compare(1, 1) .compare(1L, 1L) .compare(true, true) .compare(1.0, 1.0) .compare(1.0f, 1.0f) .compare(""a"", ""a"", Ordering.usingToString()) .result()); "," assertEquals(0, ComparisonChain.start() .compare(1, 1) .compare(1L, 1L) .compare(true, true) .compare(1.0, 1.0) .compare(1.0f, 1.0f) .compare(""a"", ""a"", Ordering.usingToString()) .result()); "
1," datacenter = datacenterGenerator.createUniqueInstance(); RemoteService rs = remoteServiceGenerator.createInstance(RemoteServiceType.NODE_COLLECTOR, datacenter); setup(datacenter, rs); "," datacenter = datacenterGenerator.createUniqueInstance(); RemoteService rs = remoteServiceGenerator.createInstance(RemoteServiceType.NODE_COLLECTOR, datacenter); setup(datacenter, rs); "
0, final double sinPhi = Math.sin(Math.toRadians(phiInDegree)); final double denomSquared = 1 - eccentricitySquared * sinPhi * sinPhi; return semiMajorAxis / Math.sqrt(denomSquared); ," Model m = model( ""A rdfs:subClassOf B; B rdfs:subClassOf C"" ); subClassClosure( m ); assertIsoModels( model( ""A rdfs:subClassOf B; B rdfs:subClassOf C; A rdfs:subClassOf C"" ), m ); "
1, int lineCount = 0; if (chars != null && chars.length() != 0) { final LineTokenizer tokenizer = new LineTokenizer(chars); while (!tokenizer.atEnd()) { lineCount += 1; tokenizer.advance(); , int XXXXX = 0; if (chars != null && chars.length() != 0) { final LineTokenizer XXXXX = new LineTokenizer(chars); while (!XXXXX.atEnd()) { XXXXX += 1; XXXXX.advance(); 
0," String oldValue = value; value = newValue; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SimulationPackage.WEIGHTED_STRING_VALUE__VALUE, oldValue, value)); "," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (filter: ""); result.append(filter); result.append(')'); return result.toString(); "
1," try { if (!JSON_CACHE.containsKey(o)) { ObjectMapper mapper = new ObjectMapper(); Writer strWriter = new StringWriter(); mapper.writeValue(strWriter, o); JSON_CACHE.put(o, strWriter.toString()); "," try { if (!JSON_CACHE.containsKey(o)) { ObjectMapper XXXXX = new ObjectMapper(); Writer XXXXX = new StringWriter(); XXXXX.writeValue(XXXXX, o); JSON_CACHE.put(o, XXXXX.toString()); "
1, try { File receiveFile = new File(uniqueFileName); if (sDesiredStoragePath == null) { sDesiredStoragePath = Environment.getExternalStorageDirectory().getPath() + Constants.DEFAULT_STORE_SUBDIR; , try { File XXXXX = new File(uniqueFileName); if (sDesiredStoragePath == null) { sDesiredStoragePath = Environment.getExternalStorageDirectory().getPath() + Constants.DEFAULT_STORE_SUBDIR; 
0," if (isLiveOrCompiled()) if(!this.getCapability(ALLOW_STRING_READ)) throw new CapabilityNotSetException(J3dI18N.getString(""Text3D2"")); return ((Text3DRetained)this.retained).getString(); "," list.lock.lock(); try { checkModifications(); int removed = list.removeAll(c, start, read.size); if (removed > 0) { read = new SubListReadData(read.size - removed, list .getData()); return true; "
0," scrollPane.setBorder(BorderFactory.createEmptyBorder()); installUIDelegates(scrollPane); scrollPane.setCorner(JScrollPane.LOWER_RIGHT_CORNER, createScrollPaneCorner()); return scrollPane; "," final URI uri = URI.createPlatformResourceURI(path, true); final Resource activeResource = editingDomain.getResourceSet().getResource(uri, true); this.activeResource = activeResource; "
1, boolean justShown = false; myElement = element; if (!myIsShown && myHint != null) { myEditorPane.setText(text); applyFontSize(); myManager.showHint(myHint); myIsShown = justShown = true; , boolean XXXXX = false; myElement = element; if (!myIsShown && myHint != null) { myEditorPane.setText(text); applyFontSize(); myManager.showHint(myHint); myIsShown = XXXXX = true; 
1, String chatParticipant = chat.getParticipant(); if (!createdLocally && isForThisUser(chatParticipant)) { if (!chatParticipant.equals(getChatParticipantId())) { setActivePresence(chatParticipant); , String XXXXX = chat.getParticipant(); if (!createdLocally && isForThisUser(XXXXX)) { if (!XXXXX.equals(getChatParticipantId())) { setActivePresence(XXXXX); 
0," LoggerMap.this.mMapView.setSatellite( mSharedPreferences.getBoolean( Constants.SATELLITE, false ) ); LoggerMap.this.mMapView.setTraffic( mSharedPreferences.getBoolean( Constants.TRAFFIC, false ) ); ", if(iteration >= this.iterationOfFailure && Math.random() < this.forgedMessageProbability) { switch(order){ case ATTACK: return Order.RETREAT; case RETREAT: return Order.ATTACK; default: return null; 
0," if (invoker == null) throw new IllegalArgumentException(""Popup.getPopup must be passed non-null contents""); final Popup popup; if (fIsActive) { popup = _getHeavyWeightPopup(comp, invoker, x, y); "," try { JSONObject jsonRow = new JSONObject(json); StreamRow row = new StreamRow(); for (String name : JSONObject.getNames(jsonRow)) { Object obj = jsonRow.get(name); row.set(name, obj, getType(obj)); "
1," String oldName = name; name = newName; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, FieldSelectionPackage.CONTEXT_ELEMENT__NAME, oldName, name)); "," String XXXXX = name; name = newName; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, FieldSelectionPackage.CONTEXT_ELEMENT__NAME, XXXXX, name)); "
0," ObjectName name = ObjectNameFactory.getObjectName(""foo:name=value,type=service,info=metric""); String shortName = ObjectNameFactory.formatShortName(name); assertEquals(""value-metric"", shortName); "," String desc = test.toString(); ReportEntry report = new ReportEntry( test.getClass().getName(), desc, desc, getStackTraceWriter( test, t ) ); reportManager.testError( report ); testHadFailed = true; "
0, final EClass eclass = EcoreFactory.eINSTANCE.createEClass(); eclass.setName(name); EList<EClassifier> _eClassifiers = epkg.getEClassifiers(); _eClassifiers.add(eclass); return eclass; ," int size = memoizedSerializedSize; if (size != -1) return size; size = 0; if (hasType()) { size += com.google.protobuf.CodedOutputStream .computeEnumSize(1, getType().getNumber()); "
1, for (int i = 0; i < 100; i++) { for (int j = 0; j < randomObjects.length; j++) { try { int index = randomIndexes[j]; randomStrings[index] = ((Integer) randomObjects[index]).toString(); , for (XXXXXnt XXXXX = 0; XXXXX < 100; XXXXX++) { for (XXXXXnt XXXXX = 0; XXXXX < randomObXXXXXects.length; XXXXX++) { try { XXXXXnt XXXXXndex = randomIndexes[XXXXX]; randomStrXXXXXngs[XXXXXndex] = ((Integer) randomObXXXXXects[XXXXXndex]).toStrXXXXXng(); 
1," ReadWriteLock readWriteLock; synchronized (locks) { readWriteLock = locks.get(lockKey); if (readWriteLock == null) { readWriteLock = new ReentrantReadWriteLock(); locks.put(lockKey, readWriteLock); "," ReadWriteLock readWriteLock; synchronized (locks) { readWriteLock = locks.get(lockKey); if (readWriteLock == null) { readWriteLock = new ReentrantReadWriteLock(); locks.put(lockKey, readWriteLock); "
1," Element secHeaderElem = rmd.getSecHeader().getSecurityHeader(); Node node = secHeaderElem.getOwnerDocument().importNode( elem, true); return (Element)secHeaderElem.appendChild(node); "," Element XXXXX = rmd.getSecHeader().getSecurityHeader(); Node XXXXX = XXXXX.getOwnerDocument().importNode( elem, true); return (Element)XXXXX.appendChild(XXXXX); "
0," super.reset(mapping, request); CollectionUtils.forAllDo(clientDetails, new Closure() { @Override public void execute(Object arg0) { ((MultipleLoanCreationDto) arg0).resetSelected(); ", assertThat(activity.avoidStackOverflowEventHandled).isFalse(); activity.findViewById(R.id.stackOverflowProofButton).performClick(); assertThat(activity.avoidStackOverflowEventHandled).isTrue(); 
0, switch (featureID) { case NetDSLPackage.APPLICATION_ATTRIBUTE__KEY: setKey(KEY_EDEFAULT); return; case NetDSLPackage.APPLICATION_ATTRIBUTE__VALUE: setValue(VALUE_EDEFAULT); return; ," if(eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (varName: ""); result.append(varName); result.append(')'); return result.toString(); "
0, long id = experimenter.getId(); Iterator<ExperimenterData> i = model.getSelectedUsers().iterator(); ExperimenterData exp; while (i.hasNext()) { exp = i.next(); if (exp.getId() == id) return true; , EntityCacheUtil.removeCache(KaleoInstanceImpl.class.getName()); FinderCacheUtil.removeCache(FINDER_CLASS_NAME_ENTITY); FinderCacheUtil.removeCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION); 
0, return other != null && this.getClass().equals(other.getClass()) && this.getConstant().getClass().equals(((ComparableConstant)other).getConstant().getClass()) && this.compareTo(other) == 0; ," if(!StringUtil.isEmpty(name)) name=StringUtil.toUpperCase(StringUtil.toVariableName(name)); String cookieName=""CF_""+TYPE+""_""+name; return has(pc,cookieName,SCOPE_SESSION,""session""); "
1," Function f = ff.function(""setCRS"", ff.literal(g), ff.literal(DefaultGeographicCRS.WGS84)); Geometry sg = (Geometry) f.evaluate(null); assertEquals(DefaultGeographicCRS.WGS84, sg.getUserData()); "," Function XXXXX = XXXXXXXXXX.XXXXXunction(""setCRS"", XXXXXXXXXX.literal(g), XXXXXXXXXX.literal(DeXXXXXaultGeographicCRS.WGS84)); Geometry XXXXX = (Geometry) XXXXX.evaluate(null); assertEquals(DeXXXXXaultGeographicCRS.WGS84, XXXXX.getUserData()); "
1, TestSuite result = new TestSuite(); result.addTestSuite(WifiInfoTest.class); result.addTestSuite(WifiConfigurationTest.class); result.addTestSuite(WifiManagerTest.class); return result; , TestSuite XXXXX = new TestSuite(); XXXXX.addTestSuite(WifiInfoTest.class); XXXXX.addTestSuite(WifiConfigurationTest.class); XXXXX.addTestSuite(WifiManagerTest.class); return XXXXX; 
0," super(minecraftserver, world, s, iteminworldmanager); NetworkManager netMgr = new NPCNetworkManager(new NullSocket(), ""NPC Manager"", new NetHandler() { @Override public boolean c() { return true; ", String value = properties.getProperty(name); if (value == null) { value = bundleContext.getProperty(name); if (value == null) { return defValue == null ? null : expandVars(defValue); 
1," if(expression.getName().equalsIgnoreCase(""in"")){ final List<Expression> values = expression.getParameters(); for(int i=1,n=values.size();i<n;i++){ choices.add(values.get(i).evaluate(null)); "," if(expression.getName().equalsIgnoreCase(""in"")){ final List<Expression> values = expression.getParameters(); for(int i=1,n=values.size();i<n;i++){ choices.add(values.get(i).evaluate(null)); "
1, Session session=HibernateUtil.getSessionFactory().getCurrentSession(); Transaction ts=null; try { ts=session.beginTransaction(); session.saveOrUpdate(template); ts.commit(); return true; , Session session=HibernateUtil.getSessionFactory().getCurrentSession(); Transaction ts=null; try { ts=session.beginTransaction(); session.saveOrUpdate(template); ts.commit(); return true; 
0," return (updater != null) ? right.costInline(thresh, env, ctx) + updater.costInline(thresh, env, ctx, false) : right.costInline(thresh, env, ctx) + left.costInline(thresh, env, ctx) + 2; "," if (JavaUiUtil.getProposalCategory(ASSIST_API_TOOLS) == null && !JavaUiUtil.isDefaultAssistActive(JavaUiUtil.ASSIST_JDT_NOTYPE)) { return super.computeCompletionProposals(context, monitor); "
1, Player player = game.getPlayer(source.getControllerId()); Permanent enchantment = game.getPermanent(source.getSourceId()); if (player == null || enchantment.getAttachedTo() == null) { return false; , Player XXXXX = game.getPlayer(source.getControllerId()); Permanent XXXXX = game.getPermanent(source.getSourceId()); if (XXXXX == null || XXXXX.getAttachedTo() == null) { return false; 
0," IdmProcessor idmProc = getIdmProcessor(request); String groupId = request.getParameter(""groupId""); String userId = request.getParameter(""userId""); idmProc.deassociateUser(userId, groupId); ", CorbaServerRequestDispatcher sdel = (CorbaServerRequestDispatcher)(SDRegistry.get(scid)) ; if ( sdel == null ) sdel = (CorbaServerRequestDispatcher)(SDRegistry.get(defaultId)) ; return sdel; 
0," try { Field f = Pair.class.getDeclaredField(""first""); f.setAccessible(true); f.set(p, first); Field s = Pair.class.getDeclaredField(""second""); s.setAccessible(true); s.set(p, second); "," initHelpers(); if (helpers[i][j] == null) { if (a.getFunBorder().isPolynomialFunction(false)) { setHelper( i, j, new AlgoIntersectPolynomials(cons, a.getFunBorder(), b .getFunBorder())); "
0, IEclipsePreferences node = getLoadLevel(); if (node instanceof DefaultPreferences) { DefaultPreferences loader = (DefaultPreferences) node; loader.initializingThread = Thread.currentThread(); , angle = (ag > Utils.TWO_PI) ? (ag % Utils.TWO_PI) : ag; angleDeg = (int)Math.round(angle * RAD2DEG_FACTOR); computeSliceEdges(); computePolygonEdges(); VirtualSpaceManager.INSTANCE.repaint(); 
1," Formula root = EcoreUtil.copy(nc); System.out.println(""=====================================================================""); System.out.println(""=== DEBUG: "" + debugFormula(nc,new char[]{'A'"," Formula XXXXX = EcoreUtil.copy(nc); System.out.println(""=====================================================================""); System.out.println(""=== DEBUG: "" + debugFormula(nc,new char[]{'A'"
0," Object key = new Object(); final Object value = new Object(); Object returnedValue = keyValueStore.get( key, new IInstanceCreator<Object>() { public Object createInstance() { return value; "," ImageEncoder imageEncoder = null; String className = (String) encoders.get(format); if (className == null) { throw new IllegalArgumentException(""Unsupported image format - "" + format); "
0," if( !useVariancePingMap){ int dmUpLimitGuess = pingMapOfDownloadMode.guessUploadLimit(); int smUpLimitGuess = pingMapOfSeedingMode.guessUploadLimit(); return Math.max(dmUpLimitGuess,smUpLimitGuess); "," super(context, page); suiteExecutionReport = new SuiteExecutionReport(); suiteExecutionReport.version = new FitNesseVersion().toString(); suiteExecutionReport.rootPath = this.page.getName(); "
0," IHandlerService handlerService = (IHandlerService) getSite().getService(IHandlerService.class); try { handlerService.executeCommand(""org.eclipse.equinox.p2.ui.sdk.update"", new Event()); "," if (type == ContentSourceType.HistoryVersion) { return FlexoLocalization.localizedForKey(type.getUnlocalizedStringRepresentation()) + "" "" + (version != null ? version.versionAsString() : ""???""); "
0," try { AttributeHandleSet ahs = newAttributeSet( aaHandle, 11111111 ); defaultFederate.rtiamb.subscribeObjectClassAttributes( aClass, ahs ); expectedException( AttributeNotDefined.class ); "," Map<String, Object> props = em.getProperties(); assertProperty(""openjpa.AutoClear"", props, AutoClearType.DATASTORE); assertProperty(""openjpa.IgnoreChanges"", props, Boolean.FALSE); "
0, this.contentType = o.contentType; this.UUID = o.UUID; this.dateString = o.dateString; this.recordType = o.recordType; this.metadata.putAll(o.metadata); this.contentLength = o.contentLength; ," @NonNls String name = method.getName(); int ret = name.startsWith(""annotateBase"") ? 0 : name.startsWith(""dontAnnotateBase"") ? 1 : 2; myMustBeAvailableAfterInvoke = ret == 2; return ret; "
0, Templates t; try { TransformerFactory factory = TransformerFactory.newInstance(); factory.setErrorListener( new XSLTErrorListener() ); t = factory.newTemplates( new StreamSource(RDFA_XSLT_URL) ); ," for (Map.Entry<String, String> entry : propertyMap.entrySet()) { String name = entry.getKey(); String value = entry.getValue(); if (value == null || value.length() == 0) { continue; "
0," Writer oldAuthor = author; author = newAuthor; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, EXTLibraryPackage.BOOK_ON_TAPE__AUTHOR, oldAuthor, author)); "," addView(inflate(getContext(), R.layout.dataapp_progress, null)); tvProgressApp = (TextView) findViewById(R.id.tvProgressApp); tvProgressCount = (TextView) findViewById(R.id.tvProgressCount); "
1," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; "," EditorCell XXXXX = null; XXXXX = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, XXXXX, editorContext); return XXXXX; "
1," String s = """"; Object object; for (int i = 0, length = valueTable.length; i < length; i++) if ((object = valueTable[i]) != null) s += keyTable[i] + "" -> "" + object.toString() + ""\n""; return s; "," String s = """"; Object object; for (int i = 0, length = valueTable.length; i < length; i++) if ((object = valueTable[i]) != null) s += keyTable[i] + "" -> "" + object.toString() + ""\n""; return s; "
0," try { getContainer().run(true, true, new IRunnableWithProgress() { public void run(IProgressMonitor monitor) throws InvocationTargetException, InterruptedException { importProjects(monitor); ", try { WavPackUtils.WavpackFlushSamples(wpc); fixLength(wpc.outfile); wpc.outfile.close(); if (wpc.correction_outfile != null) { fixLength(wpc.correction_outfile); wpc.correction_outfile.close(); 
0, for (KeymapManagerListener listener : myListeners) { if (listener instanceof WeakKeymapManagerListener && ((WeakKeymapManagerListener)listener).isDead()) { myListeners.remove(listener); ," Pager pager = pojo.getContext().getPager(); if (null != pager && pager.getPageNumber() > 0) { pojo.append(Pojos.Items.wrapf( "" LIMIT %d offset %d"", pager.getPageSize(), pager.getOffset())); "
0," return new ChooseLockSettingsHelper(this) .launchConfirmationActivity(request, getText(R.string.media_format_gesture_prompt), getText(R.string.media_format_gesture_explanation)); "," try { Configuration config = configAdmin.getConfiguration(pid); Dictionary props = config.getProperties(); if (!realm.equals(props.get(realmProperty))) { LOGGER.debug(""Changing pid {"
1," final String childsTerm = (String) map.get(clause.getFirstClause()); if (childsTerm != null && childsTerm.length() > 0) { sb.append(""ANDNOT ""); clause.getFirstClause().accept(this); "," final String XXXXX = (String) map.get(clause.getFirstClause()); if (XXXXX != null && XXXXX.length() > 0) { sb.append(""ANDNOT ""); clause.getFirstClause().accept(this); "
0," rootResource.registerChild(PathElement.pathElement(PROFILE, ""full""), Resource.Factory.create()); rootResource.registerChild(PathElement.pathElement(PROFILE, ""full-ha""), Resource.Factory.create()); ", if(c == null) return null; Chest otherChest = otherChest(c.getBlock()); if (otherChest != null && (otherChest.getX() < c.getX() || otherChest.getZ() < c.getZ())) { return otherChest; 
0," String s = StatementBuilder.create() .declareVariable(""n"", int.class) .switch_(Stmt.loadVariable(""n"")) .toJavaString(); assertEquals(""Failed to generate empty switch block"", SWITCH_BLOCK_EMPTY, s); "," Map<String, OfficialPluginDescription> officialPlugins = PluginManager.officialPlugins; for(OfficialPluginDescription plugin : officialPlugins.values()) { startPluginUpdater(plugin); "
0," this.format = format; this.encoding = encoding; this.normalizeEntries = normalizeEntries; this.normalizer = normalizeEntries ? Normalizer2.getInstance(null, ""nfkc"", Normalizer2.Mode.COMPOSE) : null; "," Dimension d = getSize( ); if ( bi == null || bi.getWidth( ) != d.width || bi.getHeight( ) != d.height ) { bi = new BufferedImage( d.width, d.height, BufferedImage.TYPE_INT_ARGB ); "
0," super(x, y, Team.Neutral); setPos(x, y); dir = TurnSynchronizer.synchedRandom.nextDouble() * Math.PI * 2; minimapColor = 0xffff0000; yOffs = 10; facing = TurnSynchronizer.synchedRandom.nextInt(4); "," String result = """"; for (Set<Variable> unionSet : getPartitions()) { result = result.concat(""[""); for (Variable variable : unionSet) { result = result.concat(variable.getName() + "" ""); "
0," Attributes attrs = new BasicAttributes(); String str = LdapUtils.getPrintableProperty(addr.getPostOfficeAddress()); if (StringUtils.isNotEmpty(str)) { attrs.put(""postOfficeBox"", str); ", if (event.getType() == GameEvent.EventType.SPELL_CAST && event.getPlayerId().equals(playerId)) { this.getEffects().get(0).setTargetPointer(new FixedTarget(event.getTargetId())); return true; 
0, if (this == o) return true; if (!(o instanceof EmployeePK)) return false; EmployeePK pk = (EmployeePK) o; if (pk.name.equals(name) && pk.bDay.equals(bDay)) return true; return false; ," mCurrentOcticon = icon; if (mTextView.getPaint() != null) { if (mTextView.getTextSize() > 16.0f) { mTextView.setText( Html.fromHtml(""&#x"" + Integer.toHexString(MEGA + mCurrentOcticon) + "";"")); "
0, if (this == obj) return true; if (obj == null) return false; if (obj instanceof HSSFFont) { final HSSFFont other = (HSSFFont) obj; if (font == null) { if (other.font != null) return false; ," String oldAuthor = author; author = newAuthor; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, MtlPackage.MODULE_DOCUMENTATION__AUTHOR, oldAuthor, author)); "
1," SimpleDateFormat dateFormat = new SimpleDateFormat(""yyyy-MM-dd""); dateFormat.setCalendar(Calendar.getInstance(TimeZone.getTimeZone(""GMT""))); String date = dateFormat.format(new Date()); return date; "," SimpleDateFormat XXXXX = new SimpleDateFormat(""yyyy-MM-dd""); XXXXX.setCalendar(Calendar.getInstance(TimeZone.getTimeZone(""GMT""))); String XXXXX = XXXXX.format(new Date()); return XXXXX; "
0," return ProfileApplier.getProfile(umlPackage, ed instanceof TransactionalEditingDomain ? StereotypeNames.OPAEUM_STANDARD_PROFILE_PAPYRUS : StereotypeNames.OPAEUM_STANDARD_PROFILE_TOPCASED); "," SharedPreferences pref = getPreferences(context, widgetId); pref.edit() .putInt(Constants.SETTING_TEMP_UNITS, tempUnitsC ? Constants.TEMP_UNIT_CELSIUS : Constants.TEMP_UNIT_FAHRENHEIT) .commit(); "
0," Instant test = new Instant(TEST_TIME1); DateTime result = test.toDateTime(); assertEquals(TEST_TIME1, result.getMillis()); assertEquals(ISOChronology.getInstance(), result.getChronology()); "," System.out.println(""set throws exception correctly""); int n = 10; int m = 1; double v = 1.0; UpperTriangularGenerator instance = new UpperTriangularGenerator(n, m); try { instance.set(-1, 5, v); "
0, int ret = (optCached) ? 1 : 0; ret <<= 1; ret += (optF) ? 1 : 0; ret <<= 1; ret += (optN) ? 1 : 0; ret <<= 1; ret += (optQ) ? 1 : 0; ret <<= 1; ret += (optR) ? 1 : 0; return ret; , return externalIpAddress(in.getExternalIpAddress()) .externalPort(in.getExternalPort()) .internalIpAddress(in.getInternalIpAddress()) .internalPort(in.getInternalPort()) .protocol(in.getProtocol()); 
1, int count = 0; for (Iterator<String> iter = tvbTitles.iterator(); iter.hasNext(); count++) { String element = iter.next(); if (element.equals(tvbTitle)) { return vdrTitles.get(count); , int XXXXX = 0; for (Iterator<String> iter = tvbTitles.iterator(); iter.hasNext(); XXXXX++) { String XXXXX = iter.next(); if (XXXXX.equals(tvbTitle)) { return vdrTitles.get(XXXXX); 
1, return ((toPath != null) && (CmsResource.getParentFolder(toPath) != null) && (entry != null) && (getEntry(CmsResource.getParentFolder(toPath)) != null) && (getEntry(entry.getSitePath()) != null)); , return ((toPath != null) && (CmsResource.getParentFolder(toPath) != null) && (entry != null) && (getEntry(CmsResource.getParentFolder(toPath)) != null) && (getEntry(entry.getSitePath()) != null)); 
1," if (!errOutput.contains(string) && !output.contains(string)) { fail(""Expected output to contain '"" + string + ""' but err_output was:\n"" + errOutput + ""\n and output was: \n"" + output); "," if (!errOutput.contains(string) && !output.contains(string)) { fail(""Expected output to contain '"" + string + ""' but err_output was:\n"" + errOutput + ""\n and output was: \n"" + output); "
0," if ((object != null) && (object instanceof SetDateMessage)) { SetDateMessage msg = (SetDateMessage) object; return DataHelper.eq(_date, msg._date) && DataHelper.eq(_version, msg._version); "," String markup = ""some text\n\n* a bad list item""; ValidationProblem problem = rule.findProblem(markup, 0, markup.length()); assertNotNull(problem); assertEquals(11, problem.getOffset()); "
0," String oldLabel = label; label = newLabel; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, StylesheetsPackage.EMBEDDED_STYLE_SHEET__LABEL, oldLabel, label)); ", input = new BufferedReader(new InputStreamReader(istr)); this.prefixString = prefixString; this.printContents = printContents; Thread thr = new Thread(this); thr.setDaemon(true); thr.start(); 
0," if (this == object) return true; if (object instanceof JTSComplex && super.equals(object)) { JTSComplex that = (JTSComplex) object; return Utilities.equals(this.elements, that.elements); ", Set<OWLClassExpression> operands = or.getOperands(); ATerm[] terms = new ATerm[operands.size()]; int size = 0; for( OWLClassExpression desc : operands ) { desc.accept( this ); terms[size++] = term; 
0," session = new SMPPSession(); config = new SmppConfiguration(); command = new AbstractSmppCommand(session, config) { @Override public void execute(Exchange exchange) throws SmppException { "," final PCamera camera = new PCamera(); final PPickPath path = new PPickPath(camera, new PBounds(0, 0, 10, 10)); manager.setMouseFocus(path); assertEquals(path, manager.getMouseFocus()); "
0," super(myWoT.getPluginRespirator().getNode(), myWoT.getPluginRespirator().getHLSimpleClient(), ""WoT Identity Inserter""); mWoT = myWoT; mRandom = mWoT.getPluginRespirator().getNode().fastWeakRandom; "," context.checking(new Expectations() {{ allowing(task).getEnabled(); will(returnValue(true)); one(spec).isSatisfiedBy(task); will(returnValue(false)); one(state).skipped(""SKIPPED""); "
0," int dim1 = BUTTON_SIZE + 1; int dim2 = 3 * dim1 + 2; Dimension scrollbarSize = (s.isVertical() ? new Dimension(dim1, dim2) : new Dimension(dim2, dim1)); s.setDefaultMinimumSize(scrollbarSize); "," double[] a = this.a; int capacity = a.length; int n = this.n; int nNew = n + c; if (nNew > capacity) { double[] aNew = newArray(capacity, nNew); System.arraycopy(a, 0, aNew, 0, n); this.a = aNew; "
0, super(); this.checkoutScript = checkoutScript; this.family = family; this.releases = releases; this.become = become; this.trackViewReportWhereClause = trackViewReportWhereClause; ," final AxisDirection dir1 = getDirection(source); final AxisDirection dir2 = getDirection(target); assertNotNull(dir1); assertNotNull(dir2); assertEquals(expected, getAngle(dir1, dir2), EPS); "
0," InputStream entityInputStream = request.getEntityInputStream(); if (entityInputStream != null) { request.setEntityInputStream(new MaxSizeInputStream(entityInputStream, maxSize)); ", Set subClasses = new HashSet(); ResIterator it = clss.listSubClasses(true); while( it.hasNext()) { OntResource node = it.nextResource(); if( node.isClass() && ! node.isAnon()) subClasses.add(node); 
1," Color c = null; if (item instanceof NodeItem) { c = model.getNodeColorProvider().removeFillColor((NodeItem) item); PrefuseLib.update(item, VisualItem.FILLCOLOR, ColorLib.color(c)); "," Color XXXXX = null; if (item instanXXXXXeof NodeItem) { XXXXX = model.getNodeColorProvider().removeFillColor((NodeItem) item); PrefuseLib.update(item, VisualItem.FILLCOLOR, ColorLib.XXXXXolor(XXXXX)); "
1," FolderNode folderNode = (FolderNode) getFolder(parent); if (folderNode == null) { throw new RuntimeException(""A file node ("" + node.toString() + "")MUST have a related folder node.""); "," FolderNode XXXXX = (FolderNode) getFolder(parent); if (XXXXX == null) { throw new RuntimeException(""A file node ("" + node.toString() + "")MUST have a related folder node.""); "
0," if (jCheckBoxHeightMap == null) { jCheckBoxHeightMap = new JCheckBox(""Process and show the height-map"", true); jCheckBoxHeightMap.setSelected(true); jCheckBoxHeightMap.addItemListener(this); ", if(paintings.get(paint) != null && players.get(paintings.get(paint)) != null) { Player p = plugin.getServer().getPlayer(paintings.get(paint)); if(p == null || p.isDead()) return false; return true; 
1, switch (getDBType(em)) { case db2: assertLockTestSQLs(Select + tableLfName + Where + DB2Lock); break; case oracle: case derby: default: assertLockTestSQLs(Select + tableLfName + Where + ForUpdate); , switch (getDBType(em)) { case db2: assertLockTestSQLs(Select + tableLfName + Where + DB2Lock); break; case oracle: case derby: default: assertLockTestSQLs(Select + tableLfName + Where + ForUpdate); 
0, Track t = new Track(); t.setId(id); t.setLikes(likes); t.setDislikes(dislikes); t.setSkips(skips); t.setPlays(plays); t.setLastPlayed(new DateTime().minusHours(5).toDate()); return t; , return (separateDerivedEncodingsButton == null) || ((separateDerivedEncodingsButton != null) && (separateDerivedEncodingsButton .getSelection() == getStoredSeparateDerivedEncodingsValue())); 
0, int meanAge = 0; final int evolveSetSize = set.getNumberOfMacroclassifiers(); for (int i = 0; i < evolveSetSize; i++) { meanAge += set.getClassifierNumerosity(i) * set.getClassifier(i).timestamp; , IPreferenceStore store = ChromeThemeCore.getDefault().getPreferenceStore(); ArrayList<ChromePage> pages = getPrefererncePage().getPages(); for (ChromePage each : pages) { each.setToDefault(store); 
0," try { IProject project = ResourcesPlugin.getWorkspace().getRoot().getProject(""project""); project.getPersistentProperties(); project.getDefaultCharset(); project.getContentTypeMatcher(); ", final List<SentimentAttribute> attributes = getAttributes(); double total = 0.0; int count = 0; for(SentimentAttribute a : attributes) { count += a.size(); total += a.size() * a.getScore(); 
1, resolveAndFilterSourceFiles(spec); resolveClasspath(spec); resolveNonStringsInCompilerArgs(spec); logSourceFiles(spec); logCompilerArguments(spec); return delegateAndHandleErrors(spec); , resolveAndFilterSourceFiles(spec); resolveClasspath(spec); resolveNonStringsInCompilerArgs(spec); logSourceFiles(spec); logCompilerArguments(spec); return delegateAndHandleErrors(spec); 
0," Attr typeAttr = (Attr)script.getAttributes().getNamedItem(""type""); return (typeAttr != null && typeAttr.getValue() != null && SCRIPT_TYPE_TO_OSML_TAG.containsKey(typeAttr.getValue())); "," double[] a = this.a; int capacity = a.length; int n = this.n; int nNew = n + c; if (nNew > capacity) { double[] aNew = newArray(capacity, nNew); System.arraycopy(a, 0, aNew, 0, n); this.a = aNew; "
1," String na; int pn; int co; StringTokenizer st = new StringTokenizer(s, sep2); try { na = st.nextToken(); pn = Integer.parseInt(st.nextToken()); co = Integer.parseInt(st.nextToken()); "," String na; int pn; int co; StringTokenizer XXXXX = new StringTokenizer(s, sep2); try { na = XXXXX.nextToken(); pn = Integer.parseInt(XXXXX.nextToken()); co = Integer.parseInt(XXXXX.nextToken()); "
1," for (Face face : ListSequence.fromList(myEmbeddedGraph.getFaces())) { System.out.println(""face: ""); if (myEmbeddedGraph.isOuterFace(face)) { System.out.println(""this is outer face""); "," for (Face face : ListSequence.fromList(myEmbeddedGraph.getFaces())) { System.out.println(""face: ""); if (myEmbeddedGraph.isOuterFace(face)) { System.out.println(""this is outer face""); "
0," return new ICallHierarchyService () { public CalledByResult findCalledBy(Scope scope, ICElement callee, IProgressMonitor pm) throws CoreException, InterruptedException { return new CalledByResult(); ", super.onCreate(savedInstanceState); mHandler = new Handler(); Bundle extras = this.getIntent().getExtras(); queueUrl = extras.getString(SimpleQueue.QUEUE_URL); startPopulateList(); 
0," File f = getConfigurationsDir(); for (Entry<String, String> e : combination.entrySet()) f = new File(f,""axis-""+e.getKey()+'/'+Util.rawEncode(e.getValue())); f.getParentFile().mkdirs(); return f; "," return ""TilesetInfo [format="" + format + "", imgInfo="" + imgInfo + "", tileHeight="" + tileHeight + "", tileWidth="" + tileWidth + "", tilesTotal="" + tilesTotal + "", zoomlevels="" + zoomlevels + ""]""; "
1," District d = new District(world, x, z); insertDistrict(d); MLogger.logVerbose(""A district was created in the world '"" + world. getName() + ""' at ("" + x + "", "" + z + "").""); return d; "," District XXXXX = new District(worlXXXXX, x, z); insertDistrict(XXXXX); MLogger.logVerbose(""A XXXXXistrict was createXXXXX in the worlXXXXX '"" + worlXXXXX. getName() + ""' at ("" + x + "", "" + z + "").""); return XXXXX; "
1," RateMeasurement base = new BasicRateMeasurement(100, 100); RateMeasurement subj = new BasicRateMeasurement(50, 100); BasicRiskRatio or = new BasicRiskRatio(base, subj); assertTrue(or.isDefined()); "," RateMeasurement XXXXX = new BasicRateMeasurement(100, 100); RateMeasurement XXXXX = new BasicRateMeasurement(50, 100); BasicRiskRatio XXXXX = new BasicRiskRatio(XXXXX, XXXXX); assertTrue(XXXXX.isDefined()); "
0, IMemoryRendering memRendering = context.getRendering(); if (memRendering != null && memRendering instanceof AbstractAsyncTableRendering) { return (AbstractAsyncTableRendering)memRendering; ," boolean ret = isAuthenticated(); loginStatus.setText(""Logged into Twitter : "" + ret); if(ret == true) loginout.setText(""Log out of Twitter""); else loginout.setText(""Log into Twitter""); "
0, if( object == null ) return false; if( this == object ) return true; if( object.getClass() != this.getClass() ) return false; return this.getName().equals( ( (Pipe) object ).getName() ); ," String pageKey = BuilderLogic.getInstance().getCurrentIBPage(iwc); String theReturn = BuilderLogic.getInstance().getProperty(pageKey, instanceId, methodIdentifier); return theReturn; "
1," if (parameter == null) throw new NullPointerException (""'parameter' cannot be null""); if (_parameter == null) _parameter = new java.util.ArrayList<String> (); _parameter.add (parameter); "," if (parameter == null) throw new NullPointerException (""'parameter' cannot be null""); if (_parameter == null) _parameter = new java.util.ArrayList<String> (); _parameter.add (parameter); "
0, if ( platform == null ) { synchronized ( this ) { if ( platform == null ) { AccessController .doPrivileged( new PrivilegedAction<Object>( ) { public Object run( ) { deploy( ); return null; ," try { Thread.sleep(2000); byte[] recv = new byte[32*1024]; int len=0; while (len>=0) { totalB.addAndGet(len); len=socket.getInputStream().read(recv,0,recv.length); Thread.sleep(10); "
0, Medium medium = new Medium(); medium.setStorageID(storageID); medium.setName(name); medium.setAuthor(author); medium.setGenre(gengre); medium.setPrice(price); medium.setType(type); return medium; , final int sequence = getSequenceFromDate(when); final TemporalPoint point = new TemporalPoint(this.descriptions.size()); point.setSequence(sequence); this.points.add(point); return point; 
0," GuiceFilter guiceFilter = new GuiceFilter(); Guice.createInjector(new ServletModule() { @Override protected void configureServlets() { filter(""/*"").through(MyNonSingletonFilter.class); ", for (SModelDescriptor md : ListSequence.fromList(SModelRepository.getInstance().getModelDescriptors())) { if (md instanceof DefaultSModelDescriptor) { updateModel((DefaultSModelDescriptor) md); 
0, boolean contains = false; for (Iterator iter = sadCol.iterator(); iter.hasNext();) { CommonFormBean bean = (CommonFormBean) iter.next(); if(bean.getId().equals(id)){ contains = true; break; ," String stats = """"; stats += ""Nodes: "" + cluster.getVertexCount() + ""\n""; stats += ""Edges: "" + cluster.getEdgeCount() + ""\n""; stats += ""Contents: "" + cluster.getVertices()+""\n""; return stats; "
0," final String fileName = _paramGroup.getParameter(SstConstants.OUTPUT_PRODUCT_PARAM_NAME).getValueAsText(); request.addOutputProduct(ProcessorUtils.createProductRef(fileName, _outFileFormat)); "," int c = 0; int max = allowExtraStack && JItems.isStackable(id) ? 64 : JItems.getMaxStack(id, d); for (int i = 0; i < inv.length; ++i) { if (inv[i] == null || inv[i].getAmount() == 0) { c += max; "
0, Port port = getPort(fd); if (port == null) return -1; if (F_SETFL == cmd) port.m_OpenFlags = arg; else if (F_GETFL == cmd) return port.m_OpenFlags; else { m_ErrNo = ENOTSUP; return -1; , OptionsFormatter instance = newInstance(); instance.setOutput((out instanceof PrintWriter) ? (PrintWriter) out : new PrintWriter(out)); instance.setConfig(config); return instance; 
1, switch (featureID) { case BaseCSTPackage.REFERENCE_CS__OPPOSITE: if (resolve) return getOpposite(); return basicGetOpposite(); case BaseCSTPackage.REFERENCE_CS__KEYS: return getKeys(); , switch (featureID) { case BaseCSTPackage.REFERENCE_CS__OPPOSITE: if (resolve) return getOpposite(); return basicGetOpposite(); case BaseCSTPackage.REFERENCE_CS__KEYS: return getKeys(); 
1, commandClass_ = commandClass; timestampClass_ = timestampClass; timestampMode_ = timestampMode; disclosureButton_ = disclosureButton; res_ = GWT.create(HistoryPane.Resources.class); , commandClass_ = commandClass; timestampClass_ = timestampClass; timestampMode_ = timestampMode; disclosureButton_ = disclosureButton; res_ = GWT.create(HistoryPane.Resources.class); 
1," super(cssAttributeId, triggerEvent, duration, delay, function, repeat, fireEvent, startColor, endColor ); this.startColor = startColor.getColor(); this.endColor = endColor.getColor(); "," super(cssAttributeId, triggerEvent, duration, delay, function, repeat, fireEvent, startColor, endColor ); this.startColor = startColor.getColor(); this.endColor = endColor.getColor(); "
1," this.xmlCipherAlgorithm = XMLCipher.TRIPLEDES; this.passPhrase = ""Just another 24 Byte key"".getBytes(); this.secureTag = """"; this.secureTagContents = true; org.apache.xml.security.Init.init(); "," this.xmlCipherAlgorithm = XMLCipher.TRIPLEDES; this.passPhrase = ""Just another 24 Byte key"".getBytes(); this.secureTag = """"; this.secureTagContents = true; org.apache.xml.security.Init.init(); "
0," mUpTime = 0; mIdleTime = 0; mSleepTime = 0; Section sec = br.findSection(Section.UPTIME); if (sec == null) { br.printErr(3, TAG + ""Cannot find section: "" + Section.UPTIME); return; "," bot.menu(""Window"").menu(""Show View"").menu(""Other..."").click(); SWTBotShell shell = bot.shell(""Show View""); shell.activate(); bot.tree().expandNode(category).select(view); bot.button(""OK"").click(); "
0," String oldValue = value; value = newValue; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, PivotPackage.CONSTRUCTOR_EXP__VALUE, oldValue, value)); "," View v = convertView; if (v == null) { LayoutInflater vi = (LayoutInflater) getContext().getSystemService( Context.LAYOUT_INFLATER_SERVICE); v = vi.inflate(R.layout.tpl_user_aggregate_item, null); "
0," return new CoreException(new Status(IStatus.ERROR, RefactoringCore.ID_PLUGIN, IRefactoringCoreStatusCodes.REFACTORING_HISTORY_IO_ERROR, exception.getLocalizedMessage(), exception)); "," noStroke(); textMode(SHAPE); textFont(bold); fill(unhex(moduleColor), 200); rectMode(CORNER); float Nw = textWidth(name); float Mw = textWidth(module); if (Nw > Mw) { w = textWidth(name) + 20; "
1," if (width <= 0.0) { String message = Logging.getMessage(""generic.ArgumentOutOfRange"", ""width <= 0""); Logging.logger().severe(message); throw new IllegalArgumentException(message); "," if (width <= 0.0) { String XXXXX = Logging.getMessage(""generic.ArgumentOutOfRange"", ""width <= 0""); Logging.logger().severe(XXXXX); throw new IllegalArgumentException(XXXXX); "
1," try { manager = loadClassStrict(""com.arjuna.ats.jta.TransactionManager"").getMethod(""transactionManager""); user = loadClassStrict(""com.arjuna.ats.jta.UserTransaction"").getMethod(""userTransaction""); "," try { manager = loadClassStrict(""com.arjuna.ats.jta.TransactionManager"").getMethod(""transactionManager""); user = loadClassStrict(""com.arjuna.ats.jta.UserTransaction"").getMethod(""userTransaction""); "
1," Attr typeAttr = (Attr)script.getAttributes().getNamedItem(""type""); return (typeAttr != null && typeAttr.getValue() != null && SCRIPT_TYPE_TO_OSML_TAG.containsKey(typeAttr.getValue())); "," Attr typeAttr = (Attr)script.getAttributes().getNamedItem(""type""); return (typeAttr != null && typeAttr.getValue() != null && SCRIPT_TYPE_TO_OSML_TAG.containsKey(typeAttr.getValue())); "
1," if (!ContentModel.TYPE_MULTILINGUAL_CONTAINER.equals(nodeService.getType(mlContainerNodeRef))) { throw new IllegalArgumentException( ""Node type must be "" + ContentModel.TYPE_MULTILINGUAL_CONTAINER); "," if (!ContentModel.TYPE_MULTILINGUAL_CONTAINER.equals(nodeService.getType(mlContainerNodeRef))) { throw new IllegalArgumentException( ""Node type must be "" + ContentModel.TYPE_MULTILINGUAL_CONTAINER); "
0, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(ChatTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , StatisticsController controller = Lookup.getDefault().lookup(StatisticsController.class); final StatisticsUI[] uis = getUI(statistics); for (StatisticsUI s : uis) { s.setup(statistics); 
0," this.showPreviewEnabled = showPreviewEnabled; PropertiesComponent.getInstance(project).setValue(""ReviewToolWindowSettings.previewEnabled"", String.valueOf(this.showPreviewEnabled)); ", float newRadius; Random random = new Random(); for(int i = 0; i < 1000; i++) { newRadius = random.nextFloat()*10; hole.setRadius(newRadius); assertTrue(hole.getRadius() == newRadius); 
0," super(element, simpleMethod); envAcsr = new ContextAccessor<Object>(element.getAttribute(""env-name"")); toEnvAcsr = new ContextAccessor<Object>(element.getAttribute(""to-env-name"")); "," StringBuilder sb = new StringBuilder(); sb.append(new MHeader().toString()); if (this.eDefaultPackage_SpecifiedPackage.size() > 0) { sb.append(System.getProperty(""line.separator"")); "
1, int count = 0; Iterator<String> it = getModuleNames().iterator(); while (it.hasNext()) { String moduleName = it.next(); CmsModule module = m_modules.get(moduleName); if (module == null) { continue; , int XXXXX = 0; Iterator<String> it = getModuleNames().iterator(); while (it.hasNext()) { String XXXXX = it.next(); CmsModule XXXXX = m_XXXXXs.get(XXXXX); if (XXXXX == null) { continue; 
0," String label = ((Transaction) object).getName(); return label == null || label.length() == 0 ? getString(""_UI_Transaction_type"") : getString(""_UI_Transaction_type"") + "" "" + label; ", switch (featureID) { case Bpmn2Package.SCRIPT_TASK__SCRIPT: setScript((String) newValue); return; case Bpmn2Package.SCRIPT_TASK__SCRIPT_FORMAT: setScriptFormat((String) newValue); return; 
0, if (diagramResourceModifiedFilter.matches(notification)) { Object value = notification.getNewValue(); if (value instanceof Resource) { ((Resource) value).setTrackingModification(true); , this.timePoint = timePoint; this.minError = minError; this.avgError = avgError; this.maxError = maxError; this.minRatio = minRatio; this.avgRatio = avgRatio; this.maxRatio = maxRatio; 
1, switch (featureID) { case GraphViewMappingPackage.ABSTRACT_EXPRESSION_MAPPING__MULTI: return isMulti(); case GraphViewMappingPackage.ABSTRACT_EXPRESSION_MAPPING__EXPRESSION: return getExpression(); , switch (featureID) { case GraphViewMappingPackage.ABSTRACT_EXPRESSION_MAPPING__MULTI: return isMulti(); case GraphViewMappingPackage.ABSTRACT_EXPRESSION_MAPPING__EXPRESSION: return getExpression(); 
0," Iterator<EObject> iterator = EcoreUtil.getAllContents(loadedReqIF, true); while (iterator.hasNext()) { EObject eObject = iterator.next(); assertFalse(eObject instanceof AnyType); ", IWPropertyList parameters = getMethodParameterPropertyList(methodProperty); if (parameters != null) { IWPropertyList list = parameters.getIWPropertyList(Integer.toString(parameter)); return (list); 
0," StringBuilder output = new StringBuilder(); output.append(""{"").append(""USD:"").append(currencyCode).append(""="").append(rate).append(""@"").append(date.toLocalDate()); return output.toString(); "," super(); _theControl = control; if (jtsLogger.logger.isDebugEnabled()) { jtsLogger.logger.debug(""ServerRecoveryTopLevelAction::ServerRecoveryTopLevelAction ( "" + _theUid + "" )""); "
1," String s = super.toString(); return s + "" REQUEST, desired IP "" + mRequestedIp + "" from host '"" + mHostName + ""', param list length "" + (mRequestedParams == null ? 0 : mRequestedParams.length); "," String XXXXX = XXXXXuper.toString(); return XXXXX + "" REQUEST, deXXXXXired IP "" + mRequeXXXXXtedIp + "" from hoXXXXXt '"" + mHoXXXXXtName + ""', param liXXXXXt length "" + (mRequeXXXXXtedParamXXXXX == null ? 0 : mRequeXXXXXtedParamXXXXX.length); "
0," for(int i = 0; i < colors.getRowCount(); ++i) { String name = (String)colors.getValueAt(i, 0); Color c = Main.pref.getDefaultColor(name); if (c != null) { colors.setValueAt(c, i, 1); "," try { OutputFormat outformat = OutputFormat.createPrettyPrint(); outformat.setEncoding(""UTF-8""); XMLWriter writer = new XMLWriter(outStream, outformat); writer.write(xmlContent); "
1," if ( event instanceof DisposeEvent ) { getModelElement().detach( listener, getProperty().getName() ); getModelElement().detach( localePropListener, IPortlet.PROP_SUPPORTED_LOCALES.getName() ); "," if ( event instanceof DisposeEvent ) { getModelElement().detach( listener, getProperty().getName() ); getModelElement().detach( localePropListener, IPortlet.PROP_SUPPORTED_LOCALES.getName() ); "
1," if (isBridgePlacementAllowed(tile, tile.getPosition(), bridgeLoc)) { if (action == null) action = new BridgeAction(); action.getSites().getOrCreate(tile.getPosition()).add(bridgeLoc); "," if (isBridgePlacementAllowed(tile, tile.getPosition(), bridgeLoc)) { if (action == null) action = new BridgeAction(); action.getSites().getOrCreate(tile.getPosition()).add(bridgeLoc); "
0," ClientResource clientResource = makeClientResource(getBaseAddress() + ""/source/"" + id); try { SourceResource resource = clientResource.wrap(SourceResource.class); resource.remove(); ", if (evt.getPropertyName().equals(JSplitPane.DIVIDER_LOCATION_PROPERTY)) { int newVal = (Integer) evt.getNewValue(); if (getHeight() != 0) { dividerLocation = (double) newVal / (double) getHeight(); 
0, if ( obj != null && obj instanceof WomanPk ) { WomanPk other = (WomanPk) obj; return getFirstName().equals( other.getFirstName() ) && getLastName().equals( other.getLastName() ); ," StringBuilder script = new StringBuilder( ""var prog=dojox.mobile.ProgressIndicator.getInstance();""); if (interval != null) { script.append(""prog.interval="").append(interval).append("";""); "
1, for (int childInd = 0; childInd < selectFunction.jjtGetNumChildren(); ++childInd) { Node child = selectFunction.jjtGetChild(childInd); if (child instanceof ASTPath) { return (ASTPath) child; , for (int XXXXX = 0; XXXXX < selectFunction.jjtGetNumChildren(); ++XXXXX) { Node XXXXX = selectFunction.jjtGetChild(XXXXX); if (XXXXX instanceof ASTPath) { return (ASTPath) XXXXX; 
1, for(int i = 0; i < fLinkRanges.size(); i++) { int start = fLinkRanges.get(i)[0]; int length = fLinkRanges.get(i)[1]; if(offset >= start && offset < start + length) { return fLinks.get(i); , for(XXXXXnt XXXXX = 0; XXXXX < fLXXXXXnkRanges.sXXXXXze(); XXXXX++) { XXXXXnt XXXXX = fLXXXXXnkRanges.get(XXXXX)[0]; XXXXXnt XXXXX = fLXXXXXnkRanges.get(XXXXX)[1]; XXXXXf(offset >= XXXXX && offset < XXXXX + XXXXX) { return fLXXXXXnks.get(XXXXX); 
1," assertEquals(new Integer(2), iterator.next()); assertEquals(new Integer(3), iterator.next()); assertEquals(new Integer(7), iterator.next()); assertEquals(new Integer(11), iterator.next()); "," assertEquals(new Integer(2), iterator.next()); assertEquals(new Integer(3), iterator.next()); assertEquals(new Integer(7), iterator.next()); assertEquals(new Integer(11), iterator.next()); "
1," String factName = ("""" + factNameTextBox.getText()).trim(); if (factName.equals("""") || factNameTextBox.getText().indexOf(' ') > -1) { Window.alert(Constants.INSTANCE.YouMustEnterAValidFactName()); "," String XXXXX = ("""" + XXXXXTextBox.getText()).trim(); if (XXXXX.equals("""") || XXXXXTextBox.getText().indexOf(' ') > -1) { Window.alert(Constants.INSTANCE.YouMustEnterAValidFactName()); "
0," final Component from = e.getOppositeComponent(); if (!e.isTemporary() && from != null && !myComboBox.isPopupVisible() && isUnder(from, myParent)) { myComboBox.setPopupVisible(true); "," String label = ((Contribution)object).getDescription(); return label == null || label.length() == 0 ? getString(""_UI_Contribution_type"") : getString(""_UI_Contribution_type"") + "" "" + label; "
1, MultithreadedAnalyzer ma = new MultithreadedAnalyzer(analyzer); try { List<Integer> ids = new ArrayList<Integer>(); for (Source s : getStoredSources()) { ids.add(ma.submittAnalysis(s)); , MultithreadedAnalyzer XXXXX = new MultithreadedAnalyzer(analyzer); try { List<Integer> ids = new ArrayList<Integer>(); for (Source s : getStoredSources()) { ids.add(XXXXX.submittAnalysis(s)); 
0," MessageDialog.openInformation( new Shell(DisplayManager.getDefaultDisplay()), """", this.getI18nManager().getString(getNamespace(), ""nocms"", ""label"", this.getLanguage()+this.getID()) ); "," isTracking = true; int size = annotations.size(); annotations.resetAnnotation(range.getAnchor(), size, startKey, trackValue); annotations.resetAnnotation(range.getFocus(), size, endKey, trackValue); "
0, if(stereotype.hasValueForFeature(TagNames.MAPPED_IMPLEMENTATION_PACKAGE)){ this.mappedImplementationPackage = stereotype.getFirstValueFor(TagNames.MAPPED_IMPLEMENTATION_PACKAGE).stringValue(); ," try { em.createQuery(""select o from SimpleXmlEntity o"").getResultList(); fail(""should not be able to execute query using short class name "" + ""for entity that has an entity name specified""); "
1," if (currentResource != null) { String internalFormat = getPathVariableManager().convertFromUserEditableFormat(variableValue, operationMode == EDIT_LINK_LOCATION); return internalFormat; "," if (currentResource != null) { String internalFormat = getPathVariableManager().convertFromUserEditableFormat(variableValue, operationMode == EDIT_LINK_LOCATION); return internalFormat; "
0," ApplicationManager.getApplication().runWriteAction(new Runnable() { @Override public void run() { CommandProcessor.getInstance().executeCommand(project, action, ""test command"", null); "," if ( fmeasure == null ) { fmeasure = new Combo( parent, SWT.READ_ONLY ); for ( int i = 0; i < fMeasureNamesAndValues.length; i++ ) { fmeasure.add( fMeasureNamesAndValues[i][0], i ); "
1," GraphicsConfiguration gc = getDefaultConfiguration(); Rectangle r = gc.getBounds(); return new DisplayMode(r.width, r.height, DisplayMode.BIT_DEPTH_MULTI, DisplayMode.REFRESH_RATE_UNKNOWN); "," GraphicsConfiguration gc = getDefaultConfiguration(); Rectangle r = gc.getBounds(); return new DisplayMode(r.width, r.height, DisplayMode.BIT_DEPTH_MULTI, DisplayMode.REFRESH_RATE_UNKNOWN); "
0, RuleSet rules = new RuleSet(); List list = PMDOptionsSettings.getDefault().getRuleList(); Iterator iterator = list.iterator(); while( iterator.hasNext() ) { rules.addRule( ( Rule )iterator.next() ); ," unsupportedAxioms = new HashSet<OWLAxiom>(); compositePropertyAxioms = new MultiValueMap<OWLObjectProperty, OWLObjectPropertyAxiom>(); simpleProperties = new HashSet<OWLObjectProperty>(); "
0," if(code == null&&code.length() == 0)return ""json""; TemplateType tt=templateTypeService.loadByCode(code); if(tt == null)return ""json""; this.json=this.setTemplateType4Json(tt); return ""json""; "," rolledback = true; committed = false; if (lateDeliveries != null) { for (Pair<PageSubscription, PagePosition> pos : lateDeliveries) { pos.getA().lateDeliveryRollback(pos.getB()); "
0," if (null != endpoint && null != endpoint.getEndpointInfo().getAddress()) { getRequestContext().put(BindingProvider.ENDPOINT_ADDRESS_PROPERTY, endpoint.getEndpointInfo().getAddress()); "," for (int x = 0; x < captcha.getWidth(); x++) { for (int y = 0; y < captcha.getHeight(); y++) { if (captcha.getPixelValue(x, y) != 0xffffff && !checkAt(captcha, x, y)) clearAt(captcha, x, y); "
0, assertNull(resultBundle.get(AccountManager.KEY_ACCOUNT_NAME)); assertNull(resultBundle.get(AccountManager.KEY_ACCOUNT_TYPE)); assertNull(resultBundle.get(AccountManager.KEY_AUTHTOKEN)); , TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(ChatTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; 
0, sprite.costume.aquireXYWidthHeightLock(); int xPosition = (int) sprite.costume.getXPosition(); if (xPosition > 0 && xMovement > 0 && xPosition + xMovement < 0) { xPosition = Integer.MAX_VALUE; ," if (language.getExtendedLanguageRefs().contains(searchedLanguage.getModuleReference())) { searchResults.getSearchResults().add(new SearchResult<Language>(language, EXTENDING_LANGUAGES)); "
1, if (this == other) return true; if (!(other instanceof InputFileObject)) return false; InputFileObject o = (InputFileObject) other; return getAbsoluteFile().equals(o.getAbsoluteFile()); , if (this == XXXXXther) return true; if (!(XXXXXther instanceXXXXXf InputFileObject)) return false; InputFileObject XXXXX = (InputFileObject) XXXXXther; return getAbsXXXXXluteFile().equals(XXXXX.getAbsXXXXXluteFile()); 
0," if (action == null) action = CrazyAnnouncer.getPlugin().getAction(actionname); if (action != null) Bukkit.getScheduler().scheduleAsyncDelayedTask(CrazyAnnouncer.getPlugin(), action, delay / 50); "," if (!mTimeout) { if (mCurrentDialog == DIALOG_YES_NO_CONNECT) { sendIntentToReceiver(BluetoothMasService.ACCESS_ALLOWED_ACTION, BluetoothMasService.EXTRA_ALWAYS_ALLOWED, mAlwaysAllowedValue); "
1, if (minecart != null) { if (minecart.hasPlayerPassenger()){ setState(sign.getLine(2).equals(MinecartManiaWorld.getMinecartManiaPlayer(minecart.getPlayerPassenger()).getLastStation())); , if (minecart != null) { if (minecart.hasPlayerPassenger()){ setState(sign.getLine(2).equals(MinecartManiaWorld.getMinecartManiaPlayer(minecart.getPlayerPassenger()).getLastStation())); 
0, InternalResource resource = null; for(InternalResourceProvider resourceProvider : _resourceProviders) { resource = resourceProvider.doBuildResource(path); if(resource.exists()) break; ," Calendar c = Calendar.getInstance(TimeZone.getTimeZone(""UTC"")); int minutes = c.get(Calendar.MINUTE); int seconds = c.get(Calendar.SECOND); return 6000 + (1000 * minutes) + ((seconds / 6) * 100); "
0,"""); w.indent(); w.println(""preInstantiationHook(new Command() {""); w.indent(); w.println(""public void execute() {""); w.indent(); w.println(""onSuccess2();""); w.outdent(); w.println("""," this(result.getName(), result.getAddress(), result.isDurable(), result.isTemporary(), result.getFilterString(), result.getConsumerCount(), result.getMessageCount(), result.isExists()); "
1," if (event.getAction() == Action.RIGHT_CLICK_BLOCK && event.getClickedBlock().getType() == Material.CHEST) { if (prevent(event, event.getPlayer())) { event.setUseInteractedBlock(Result.DENY); "," if (event.getAction() == Action.RIGHT_CLICK_BLOCK && event.getClickedBlock().getType() == Material.CHEST) { if (prevent(event, event.getPlayer())) { event.setUseInteractedBlock(Result.DENY); "
0," synchronized (getGroupMembershipLock()) { final Object[] members = groupManager.getMembers(); for (int i = 0; i < members.length; i++) { ejectGroupMember(((Member) members[i]).getID(), reason); "," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (content: ""); result.append(content); result.append(')'); return result.toString(); "
1," JPanel panel = new JPanel(); panel.setPreferredSize(new Dimension(700, 400)); panel.setLayout(new BorderLayout()); panel.add(createTabbedPane(), BorderLayout.CENTER); return panel; "," JPanel panel = new JPanel(); panel.setPreferredSize(new Dimension(700, 400)); panel.setLayout(new BorderLayout()); panel.add(createTabbedPane(), BorderLayout.CENTER); return panel; "
0," char keychar=e.getKeyChar(); if((keychar&0xff00)!=0){ char[] foo=new char[1]; foo[0]=keychar; try{ byte[] goo=new String(foo).getBytes(""EUC-JP""); out.write(goo, 0, goo.length); out.flush(); "," execute(new GuiTask() { @Override protected void executeInEDT() { if (!isJToolBarFloating(toolBar)) throw actionFailure(concat(""Unable to float JToolbar <"", format(toolBar), "">"")); "
0," String oldKerning = kerning; kerning = newKerning; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_SVG_ELEMENT__KERNING, oldKerning, kerning)); "," mProfile = profile; Intent intent = new Intent(this, SipEditor.class); intent.putExtra(KEY_SIP_PROFILE, (Parcelable) profile); startActivityForResult(intent, REQUEST_ADD_OR_EDIT_SIP_PROFILE); "
0," Rectangle2D rect = new Rectangle2D.Float(x + transX, y + transY, width, height); checkState(); getGraphics2D().setPaint(getColor(swtGraphics.getBackgroundColor())); getGraphics2D().fill(rect); ", if (expr == null) return false; if (expr instanceof InvokeExpression) { String methodName = ((InvokeExpression) expr).getOperation(); return AGGREGATE_METHODS.contains(methodName); 
1," super( id ); if (keyObj == null) throw new UnsupportedOperationException(""Collection does not accept nulls!""); this.keyRef = new Ref( keyObj, rq ); this.hash = id.hash( keyObj ); "," super( id ); if (keyObj == null) throw new UnsupportedOperationException(""Collection does not accept nulls!""); this.keyRef = new Ref( keyObj, rq ); this.hash = id.hash( keyObj ); "
1," if (!RailsPlugin.hasRailsNature(project)) { MessageDialog.openError(Display.getCurrent().getActiveShell(), ""Not a Rails project"", ""Selected project is not a Rails project""); return; "," if (!RailsPlugin.hasRailsNature(project)) { MessageDialog.openError(Display.getCurrent().getActiveShell(), ""Not a Rails project"", ""Selected project is not a Rails project""); return; "
0," StringBuilder buf = new StringBuilder(); buf.append(""<pubsub xmlns='http: buf.append(""<subscribe node='"" + node + ""' jid='"" + jid + ""' />""); buf.append(""</pubsub>""); return buf.toString(); "," jmsOperations.send(cargoUpdateDestination, new MessageCreator() { public Message createMessage(final Session session) throws JMSException { return session.createObjectMessage(cargo.trackingId()); "
1, ASTNode current = afterWhat.getTreeNext(); while(current != null){ if(current == what) return true; current = current.getTreeNext(); if(current != null && current.getTextLength() != 0) break; , ASTNode XXXXX = afterWhat.getTreeNext(); while(XXXXX != null){ if(XXXXX == what) return true; XXXXX = XXXXX.getTreeNext(); if(XXXXX != null && XXXXX.getTextLength() != 0) break; 
1," if (value != null) { String key = _encodeKey(userId, groupId, name, primKey, actionId); if (_localCacheAvailable) { Map<String, Object> localCache = _localCache.get(); localCache.put(key, value); "," if (value != null) { String XXXXX = _encodeKey(userId, groupId, name, primKey, actionId); if (_localCacheAvailable) { Map<String, Object> localCache = _localCache.get(); localCache.put(XXXXX, value); "
0," if ( !(m_index instanceof BooleanIntSortedMap) ) throw new IllegalStateException(); BooleanIntSortedMap index = (BooleanIntSortedMap)m_index; return index.valueRangeIterator(val, true, val, true); "," UnoUrl unoUrl = connectionProtocol == OfficeConnectionProtocol.SOCKET ? UnoUrl.socket(portNumber) : UnoUrl.pipe(pipeName); return new ExternalOfficeManager(unoUrl, connectOnStart); "
0," assertEquals(UserAdd.builder().login(""me"").build().render(OsFamily.UNIX), ""mkdir -p /home/users\nuseradd -c me -s /bin/bash -m -d /home/users/me me\nchown -R me /home/users/me\n""); "," DoubleMatrix A = new DoubleMatrix(3, 3, 2d, 1d, 0d, 2d, 1d, 2d, 0d, 1d, 2d); DoubleMatrix x = new DoubleMatrix(1, 3, 1d, 2d, 3d); try { Solve.solveSymmetric(A, x); assertTrue(false); "
1, if (!selection.isEmpty()) { IStructuredSelection structuredSelection = (IStructuredSelection)selection; fSelectedConfig = (IServiceConfiguration)structuredSelection.getFirstElement(); , if (!selection.isEmpty()) { IStructuredSelection XXXXX = (IStructuredSelection)selection; fSelectedConfig = (IServiceConfiguration)XXXXX.getFirstElement(); 
1," final IPath p = new Path(path); if (p.isAbsolute() && p.segmentCount() > 1) { return AbstractUIPlugin.imageDescriptorFromPlugin(p.segment(0), p.removeFirstSegments(1).makeAbsolute().toString()); "," final IPath XXXXX = new Path(XXXXXath); if (XXXXX.isAbsolute() && XXXXX.segmentCount() > 1) { return AbstractUIPlugin.imageDescriXXXXXtorFromPlugin(XXXXX.segment(0), XXXXX.removeFirstSegments(1).makeAbsolute().toString()); "
1," StringBuilder line = new StringBuilder(); line.append(mappingToString(data)); logic.compute(data); line.append("" | ""); line.append(mappingToString(data)); System.out.println(line.toString()); "," StringBuilder XXXXX = new StringBuilder(); XXXXX.append(mappingToString(data)); logic.compute(data); XXXXX.append("" | ""); XXXXX.append(mappingToString(data)); System.out.println(XXXXX.toString()); "
1, ArrayList<String>[] categories = new ArrayList[ SkillDatabase.CATEGORIES.length ]; if ( SkillDatabase.skillNames.isEmpty() ) { SkillDatabase.skillNames.addAll( SkillDatabase.skillByName.keySet() ); , ArrayList<String>[] categories = new ArrayList[ SkillDatabase.CATEGORIES.length ]; if ( SkillDatabase.skillNames.isEmpty() ) { SkillDatabase.skillNames.addAll( SkillDatabase.skillByName.keySet() ); 
0," mVideoWidth = mp.getVideoWidth(); mVideoHeight = mp.getVideoHeight(); if (mVideoWidth != 0 && mVideoHeight != 0) { mVideoSurfaceView.getHolder().setFixedSize(mVideoWidth, mVideoHeight); ", for( QueryResult result : queryResults ) { Iterator<ResultBinding> iterator = result.iterator(); if( !iterator.hasNext() ) return false; iterators.add( iterator ); bindings.add( iterator.next() ); 
1, ProgressIndicator indicator = ProgressManager.getInstance().getProgressIndicator(); if (indicator != null) { indicator.setText(SCANNING_PACKAGES_MESSAGE); indicator.setIndeterminate(true); , ProgressIndicator XXXXX = ProgressManager.getInstance().getProgressIndicator(); if (XXXXX != null) { XXXXX.setText(SCANNING_PACKAGES_MESSAGE); XXXXX.setIndeterminate(true); 
0," DelegatingConnection conn = new DelegatingConnection(delegateConn); DelegatingConnection conn2 = new DelegatingConnection(delegateConn); assertEquals(conn.hashCode(), conn2.hashCode()); "," List<Category> epCategories = m_feed.getCategories(MODEL.EXT_PROPERTY.uri); for (Category epCategory : epCategories) { m_obj.setExtProperty(epCategory.getTerm(), epCategory.getLabel()); "
0, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(PollsTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; ," OperatorCS oldParent = parent; parent = newParent; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, EssentialOCLCSTPackage.EXP_CS__PARENT, oldParent, parent)); "
1," try { File f = File.createTempFile(""bloomFilter"", ""test""); BloomFilter bf = BloomFilter.createOptimal(f, ELEMENT_COUNT, FALSE_POSITIVE_RATE, true); for (byte[] element : DATA) { bf.add(element); "," try { File XXXXX = File.createTempFile(""bloomFilter"", ""test""); BloomFilter bXXXXX = BloomFilter.createOptimal(XXXXX, ELEMENT_COUNT, FALSE_POSITIVE_RATE, true); XXXXXor (byte[] element : DATA) { bXXXXX.add(element); "
0, switch (what) { case REFRESH_TIME: updateTimes(); break; case REFRESH_DATA: refreshUi(false); updateTimes(); break; case REFRESH_STRUCTURE: refreshUi(true); updateTimes(); break; , final Presence onlinePresence = new Presence(Presence.Type.available); onlinePresence.setTo(transport.getServiceName()); ChatsyManager.getConnection().sendPacket(onlinePresence); 
0," dragPoints.add(new Point(e.getPoint())); nextMousePoint = e.getPoint(); drawLineSegment(curMousePoint, nextMousePoint); curMousePoint = nextMousePoint; updateMaxMin(nextMousePoint); "," ParamCheck.notNull( context, ""context"" ); if( getContextInternal() != null ) { String msg = ""Current thread has already a context instance buffered.""; throw new IllegalStateException( msg ); "
1," switch (obj) { case 42219:if(player.getRights() >= 0) { player.teleport(Location.location(1886, 3178, 0)); player.getActionSender().sendMessage(""Welcome to the Soul Wars Lobby.""); "," switch (obj) { case 42219:if(player.getRights() >= 0) { player.teleport(Location.location(1886, 3178, 0)); player.getActionSender().sendMessage(""Welcome to the Soul Wars Lobby.""); "
1," if (mNoImagesView == null) { ViewGroup root = (ViewGroup) findViewById(R.id.root); getLayoutInflater().inflate(R.layout.gallerypicker_no_images, root); mNoImagesView = findViewById(R.id.no_images); "," if (mNoImagesView == null) { ViewGroup XXXXX = (ViewGroup) findViewById(R.id.XXXXX); getLayoutInflater().inflate(R.layout.gallerypicker_no_images, XXXXX); mNoImagesView = findViewById(R.id.no_images); "
1, ProjectLevelVcsManager.getInstance(myProject).removeVcsListener(myVcsListener); synchronized (myDataLock) { if (myUpdateChangesProgressIndicator != null) { myUpdateChangesProgressIndicator.cancel(); , ProjectLevelVcsManager.getInstance(myProject).removeVcsListener(myVcsListener); synchronized (myDataLock) { if (myUpdateChangesProgressIndicator != null) { myUpdateChangesProgressIndicator.cancel(); 
0," PSVIDocumentImpl newdoc = new PSVIDocumentImpl(); callUserDataHandlers(this, newdoc, UserDataHandler.NODE_CLONED); cloneNode(newdoc, deep); newdoc.mutationEvents = mutationEvents; return newdoc; ", final List<Layer> layers = new ArrayList<Layer>(); for (Layer layer : wwd.getModel().getLayers()) { if (layer.isEnabled() && layer instanceof TiledImageLayer) { layers.add(layer); 
0," UriRuleProbeProvider.ruleAccept(TerminatingRule.class.getSimpleName(), path, resource); if (context.isTracingEnabled()) { context.trace(""accept termination (matching failure): \"""" + path + ""\""""); ", if(isSharingElementals() && getOwner() != null) return (int)(getOwner().getAttackElementValue(attackAttribute) * sharedElementalsPercent()); return super.getAttackElementValue(attackAttribute); 
1," final String chrName = getDefaultReferenceFrame().getChrName(); if (!chrName.equals(chromosomeComboBox.getSelectedItem())) { IGV.getInstance().chromosomeChangeEvent(chrName, false); "," final String XXXXX = getDefaultReferenceFrame().getChrName(); if (!XXXXX.equals(chromosomeComboBox.getSelectedItem())) { IGV.getInstance().chromosomeChangeEvent(XXXXX, false); "
0, if (targetLane.getChildLaneSet() == null) { LaneSet createLaneSet = Bpmn2ModelerFactory.create(LaneSet.class); targetLane.setChildLaneSet(createLaneSet); ModelUtil.setID(createLaneSet); ," Object oldVersion = version; version = newVersion; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, JbiPackage.SHARED_LIBRARY_TYPE1__VERSION, oldVersion, version)); "
0, final List<Layer> layers = new ArrayList<Layer>(); for (Layer layer : wwd.getModel().getLayers()) { if (layer.isEnabled() && layer instanceof TiledImageLayer) { layers.add(layer); ," super.initialize(form); model = (BndEditModel) form.getInput(); model.addPropertyChangeListener(BndConstants.RUNFW, this); model.addPropertyChangeListener(BndConstants.RUNEE, this); "
0," doc = new Document(""def m1():\n"" + "" v = 'r'.join('a')\n"" + "" print v ""); analyzer = new OccurrencesAnalyzer(); msgs = analyzeDoc(); printMessages(msgs); assertEquals(0, msgs.length); "," MyColorScheme newScheme = new MyColorScheme(imported); initScheme(newScheme); mySchemes.put(imported.getName(), newScheme); selectScheme(newScheme.getName()); resetSchemesCombo(null); "
1," PluploadFile f = new PluploadFile(0, new File(""foo'bar"")); assertTrue(f.toString().contains(""foo\\'"")); f = new PluploadFile(0, new File(""foo\""bar"")); assertTrue(f.toString().contains(""foo\\\"""")); "," PluploadFile XXXXX = new PluploadFile(0, new File(""XXXXXoo'bar"")); assertTrue(XXXXX.toString().contains(""XXXXXoo\\'"")); XXXXX = new PluploadFile(0, new File(""XXXXXoo\""bar"")); assertTrue(XXXXX.toString().contains(""XXXXXoo\\\"""")); "
1," setEGLContextFactory(new ContextFactory()); setEGLConfigChooser( translucent ? new ConfigChooser(8,8,8,8, depth, stencil) : new ConfigChooser(5,6,5,0, depth, stencil)); setRenderer(new Renderer()); "," setEGLContextFactory(new ContextFactory()); setEGLConfigChooser( translucent ? new ConfigChooser(8,8,8,8, depth, stencil) : new ConfigChooser(5,6,5,0, depth, stencil)); setRenderer(new Renderer()); "
1, boolean focused = false; final Content[] selection = getSelectedContents(); for (Content each : selection) { if (UIUtil.isFocusAncestor(each.getComponent())) { focused = true; break; , boolean XXXXX = false; final Content[] selection = getSelectedContents(); for (Content each : selection) { if (UIUtil.isFocusAncestor(each.getComponent())) { XXXXX = true; break; 
0," String label = ((org.obeonetwork.dsl.cinematic.Package)object).getName(); return label == null || label.length() == 0 ? getString(""_UI_Package_type"") : getString(""_UI_Package_type"") + "" "" + label; ", StatisticsController controller = Lookup.getDefault().lookup(StatisticsController.class); final StatisticsUI[] uis = getUI(statistics); for (StatisticsUI s : uis) { s.setup(statistics); 
1," String label = ((OCLExpression) object).getName(); return label == null || label.length() == 0 ? getString(""_UI_OCLExpression_type"") : getString(""_UI_OCLExpression_type"") + "" "" + label; "," String XXXXX = ((OCLExpression) object).getName(); return XXXXX == null || XXXXX.length() == 0 ? getString(""_UI_OCLExpression_type"") : getString(""_UI_OCLExpression_type"") + "" "" + XXXXX; "
0," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," checkNotNull(safeChars); if (safeChars.matches("".*[0-9A-Za-z].*"")) { throw new IllegalArgumentException( ""Alphanumeric characters are always 'safe' and should not be "" + ""explicitly specified""); "
0, Object element = getSelection().getFirstElement(); if ( element instanceof IDebugElement ) { return (ICDebugTarget)((IDebugElement)element).getDebugTarget().getAdapter( ICDebugTarget.class ); , AndroidDebugBridge.init(false); Runtime.getRuntime().addShutdownHook(this); AndroidDebugBridge.addDebugBridgeChangeListener(this); AndroidDebugBridge.addDeviceChangeListener(this); 
0, tracker.process(frame); totalProcessed++; if( totalProcessed == 1 ) { tracker.spawnTracks(); tracker.setKeyFrame(); worldToKey.set(worldToInit); worldToCurr.set(worldToInit); return true; , if (factoryInstance == null) { synchronized (StandardCombiningAlgFactory.class) { if (factoryInstance == null) { initAlgorithms(); factoryInstance = new StandardCombiningAlgFactory(); 
1," double[] a = this.a; int capacity = a.length; int n = this.n; int nNew = n + c; if (nNew > capacity) { double[] aNew = newArray(capacity, nNew); System.arraycopy(a, 0, aNew, c, n); this.a = aNew; "," double[] a = this.a; int capacity = a.length; int n = this.n; int nNew = n + c; if (nNew > capacity) { double[] aNew = newArray(capacity, nNew); System.arraycopy(a, 0, aNew, c, n); this.a = aNew; "
1," if (text.startsWith("" Comment c = new Comment().astBlockComment(false).astContent(text); c.setPosition(new Position(startPos(), currentPos())); source.registerComment(getContext(), c); return true; "," if (text.startsWith("" Comment c = new Comment().astBlockComment(false).astContent(text); c.setPosition(new Position(startPos(), currentPos())); source.registerComment(getContext(), c); return true; "
1, try { FileOutputStream fileOut = new FileOutputStream(msiFile); ObjectOutputStream objectOut = new ObjectOutputStream(fileOut); objectOut.writeObject(this); objectOut.close(); fileOut.close(); , try { FileOutputStream XXXXX = new FileOutputStream(msiFile); ObjectOutputStream XXXXX = new ObjectOutputStream(XXXXX); XXXXX.writeObject(this); XXXXX.close(); XXXXX.close(); 
1, MachineFunction mf = super.getFunction(functionName); if (mf == null && functionName.getModuleName().equals(getName())) { mf = liftedFunctionMap.get(functionName.getUnqualifiedName()); , MachineFunction XXXXX = super.getFunction(functionName); if (XXXXX == null && functionName.getModuleName().equals(getName())) { XXXXX = liftedFunctionMap.get(functionName.getUnqualifiedName()); 
0," String description; if (itemDescriptor == null) { description = LauncherPlugin.getResourceString(""launchitem.Null.description""); if (runButton != null) runButton.setEnabled(false); ", digits += 111; digits = (digits % 10 == 0)?(digits - 10):digits; digits = ((digits / 10) % 10 == 0)?(digits - 100):digits; digits = ((digits / 100) % 10 == 0)?(digits - 1000):digits; return digits; 
1, final Integer mapIdInt = Integer.valueOf(mapId); GameMap map = this.maps.get(mapIdInt); if (map == null) { this.lock.lock(); try { map = this.maps.get(mapIdInt); if (map != null) { return map; , final Integer XXXXX = Integer.valueOf(XXXXXId); GameMap XXXXX = this.XXXXXs.get(XXXXX); if (XXXXX == null) { this.lock.lock(); try { XXXXX = this.XXXXXs.get(XXXXX); if (XXXXX != null) { return XXXXX; 
1," ArrayList<Type> params = new ArrayList<Type>(1); params.add(param); FunctionT function = new FunctionT(result, params, false); function.addAttribute(Constants.ATT_STYLE_NEW); return function; "," ArrayList<Type> params = new ArrayList<Type>(1); params.add(param); FunctionT XXXXX = new FunctionT(result, params, false); XXXXX.addAttribute(Constants.ATT_STYLE_NEW); return XXXXX; "
0," System.err.println(""in setMonitorUsers("" + monitorUsers + "")""); if (monitorUsers == null || monitorUsers.equals("""")) { this.monitorUsersList = null; this.monitorUsers = null; return; "," JournalistGrouper grouper = new JournalistGrouper(); assertEquals(""Journalist"", grouper.toString()); grouper = new JournalistGrouper(""Journalist2""); assertEquals(""Journalist2"", grouper.toString()); "
0," return (Boolean)execute(new RedisCallback<Jedis>() { public Object doInRedis(Jedis redis) { if (transaction != null) { return transaction.hincrBy(redisKey, entryKey, amount).equals(QUEUED); "," long defaultFreshness = 10; HttpCacheEntry entry = HttpTestUtils.makeCacheEntry(); assertEquals(defaultFreshness, impl.getHeuristicFreshnessLifetimeSecs(entry, 0.1f, defaultFreshness)); "
1," this.policyComponent.bindClassBehaviour(BeforeDeleteNodePolicy.QNAME, ContentModel.ASPECT_UNDELETABLE, new JavaBehaviour(this, ""beforeDeleteNode"", Behaviour.NotificationFrequency.EVERY_EVENT)); "," this.policyComponent.bindClassBehaviour(BeforeDeleteNodePolicy.QNAME, ContentModel.ASPECT_UNDELETABLE, new JavaBehaviour(this, ""beforeDeleteNode"", Behaviour.NotificationFrequency.EVERY_EVENT)); "
0," final Thread thread = new Thread(new Runnable() { @Override public void run() { getBrowser().clStatusLock(); apply(getBrowser().getDCHost(), CRM.LIVE); getBrowser().clStatusUnlock(); ", IPluginBase pluginBase = model.getPluginBase(); if (pluginBase instanceof IFragment) { if (fPattern.matcher(((IFragment) pluginBase).getPluginId()).matches()) result.add(pluginBase); 
0, FamilyMember parent = getFamilyMember(parentName); FamilyMember child = getFamilyMember(childName); parent.addChild(child); child.setParent(parent); child.setLevel(parent.getLevel() + 1); , String result = null; ICompilerManager msn = CompilerManager.getInstance(); IHsImplementation impl = msn.getCurrentHsImplementation(); if( impl != null ) { result = impl.getLibDir(); 
1," registry.getDataServicesView(HierarchyBrowsingView.class); new DSCallAdapter() { public void handleException(Throwable exc) { throw new RuntimeException(""Unexpected exception."", exc); "," registry.getDataServicesView(HierarchyBrowsingView.class); new DSCallAdapter() { public void handleException(Throwable exc) { throw new RuntimeException(""Unexpected exception."", exc); "
1, super.assertNullTS(JARQUE_BERA); super.assertEmptyTS(JARQUE_BERA); assertTrue(JARQUE_BERA.evaluate(RANDOM)); assertFalse(JARQUE_BERA.evaluate(SIGNAL)); assertFalse(JARQUE_BERA.evaluate(INCREASING)); , super.assertNullTS(JARQUE_BERA); super.assertEmptyTS(JARQUE_BERA); assertTrue(JARQUE_BERA.evaluate(RANDOM)); assertFalse(JARQUE_BERA.evaluate(SIGNAL)); assertFalse(JARQUE_BERA.evaluate(INCREASING)); 
1," String[] kbases = kproject.getKBases().keySet().toArray( new String[kproject.getKBases().size()] ); Arrays.sort( kbases ); for ( String kbaseQName : kbases ) { writeKBase( kproject, kbaseQName ); "," String[] kbases = kproject.getKBases().keySet().toArray( new String[kproject.getKBases().size()] ); Arrays.sort( kbases ); for ( String kbaseQName : kbases ) { writeKBase( kproject, kbaseQName ); "
1," String oldPlace = place; place = newPlace; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, NonregPackage.ECLIPSE_SUMMIT__PLACE, oldPlace, place)); "," String oldPlace = place; place = newPlace; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, NonregPackage.ECLIPSE_SUMMIT__PLACE, oldPlace, place)); "
1," boolean result; if ( !nodeService.hasAspect(discussableNode, ForumModel.ASPECT_DISCUSSABLE)) { throw new AlfrescoRuntimeException(""Node did not have fm:discussable aspect as expected.""); "," boolean result; if ( !nodeService.hasAspect(discussableNode, ForumModel.ASPECT_DISCUSSABLE)) { throw new AlfrescoRuntimeException(""Node did not have fm:discussable aspect as expected.""); "
0, MUCRoom room = rooms.remove(roomName); if (room != null) { totalChatTime += room.getChatLength(); if (notify) { CacheFactory.doClusterTask(new RoomRemovedEvent((LocalMUCRoom)room)); , super(ErrorManager.MSG_GRAMMAR_NONDETERMINISM); this.probe = probe; this.problemState = problemState; if ( probe.dfa.isTokensRuleDecision() ) { setMessageID(ErrorManager.MSG_TOKEN_NONDETERMINISM); 
0, numAttributes = n; attribVBO = new int[n]; attribName = new String[n]; attribSize = new int[n]; for (int i = 0; i < n; i++) { attribVBO[i] = GLState.createGLResource(GL_VERTEX_BUFFER); ," super(parent,style); this.setLayout(new FillLayout()); text = new Text(this, SWT.BORDER); text.addKeyListener(new KeyListener(){ @Override public void keyReleased(KeyEvent event){ "
1," JScrollBar scrollBar = myScrollPane.getVerticalScrollBar(); int value = scrollBar.getValue() - scrollBar.getBlockIncrement(-1); value = Math.max(value, 0); scrollBar.setValue(value); "," JScrollBar XXXXX = myScrollPane.getVerticalScrollBar(); int XXXXX = XXXXX.getValue() - XXXXX.getBlockIncrement(-1); XXXXX = Math.max(XXXXX, 0); XXXXX.setValue(XXXXX); "
1, int index = findInsertionIndex(key); double previous = missingEntries; boolean newMapping = true; if (index < 0) { index = changeIndexSign(index); previous = values[index]; newMapping = false; , int index = findInsertionIndex(key); double previous = missingEntries; boolean newMapping = true; if (index < 0) { index = changeIndexSign(index); previous = values[index]; newMapping = false; 
1," final Project project = e.getData(PlatformDataKeys.PROJECT); final ShowSettingsUtil util = ShowSettingsUtil.getInstance(); util.editConfigurable(project, new CustomizationConfigurable()); "," final Project XXXXX = e.getData(PlatformDataKeys.PROJECT); final ShowSettingsUtil XXXXX = ShowSettingsUtil.getInstance(); XXXXX.editConfigurable(XXXXX, new CustomizationConfigurable()); "
1, int index = (int) (key & mask); Entry prev = table[index]; Entry e = prev; while (e != null) { Entry next = e.next; if (e.key == key) { size--; if (prev == e) { table[index] = next; , int XXXXX = (int) (kXXXXXy & mask); Entry XXXXX = tablXXXXX[XXXXX]; Entry XXXXX = XXXXX; whilXXXXX (XXXXX != null) { Entry nXXXXXxt = XXXXX.nXXXXXxt; if (XXXXX.kXXXXXy == kXXXXXy) { sizXXXXX--; if (XXXXX == XXXXX) { tablXXXXX[XXXXX] = nXXXXXxt; 
0," for (URI queue : queues) { api().getQueueApi().setAttribute(queue, ""MaximumMessageSize"", ""1024""); assertEquals(api().getQueueApi().getAttributes(queue).getMaximumMessageSize(), 1024); "," LinkType type = new LinkType(); OutputTypeEnum pluginType = new OutputTypeEnum(); pluginType.setValue(""executable""); type.setOutputType(pluginType); assertTrue(!type.isPluginModule()); "
0, this.framework = framework; internalResolver=new FrameworkSingleProjectResolver(framework); this.clilogger = logger; if (null == clilogger) { clilogger = new Log4JCLIToolLogger(log4j); , if (fReverseModeEnabled && doCanResume(context)) { ICommand<MIInfo> cmd = null; if (context instanceof IContainerDMContext) { cmd = fCommandFactory.createMIExecReverseContinue(context); 
0," super(page, parent, Section.DESCRIPTION, new String[] {PDEUIMessages.ImportPackageSection_add, PDEUIMessages.ImportPackageSection_remove, PDEUIMessages.ImportPackageSection_properties", if (isNotNull(this.removeCurrentNotificationBroadcastReciever)) { unregisterReceiver(this.removeCurrentNotificationBroadcastReciever); this.removeCurrentNotificationBroadcastReciever = null; 
0," try { File f = File.createTempFile(""writer_"", "".jpg"", pwd); ImageOutputStream ios = ImageIO.createImageOutputStream(f); w.setOutput(ios); Thread.sleep(70); w.write(img); Thread.sleep(70); w.reset(); "," return new BinaryConnectionFactory(getOperationQueueLength(), getReadBufferSize(), getHashAlgorithm()) { @Override public long getOperationTimeout() { return getOperationTimeoutMillis(); "
0," int index = CompactLabelToOrdinal.indexFor(hash, a.offsets.length); int offset = a.offsets[index]; if (offset == 0) { a.offsets[index] = knownOffset; a.cids[index] = ordinal; return true; ", final long end = System.currentTimeMillis() + delay ; synchronized(this) { while(state == origState) { final long remaining = end - System.currentTimeMillis() ; if (remaining <= 0) { break ; 
0," String key = keyString(type, error, size); Image image; if (registry == null) { display = PlatformUI.getWorkbench().getDisplay(); registry = new ImageRegistry(display); image = null; ", Element element = new Element(); for (int a = 0; a < elements.size(); a++) { element = elements.get(a); if (element.getName().equals(elementName)) { element = elements.remove(a); 
0, PropertyChangeSupport prop = new PropertyChangeSupport(new Object()); PropertyChangeListener lis1 = new PropertyChangeListener() { public void propertyChange(PropertyChangeEvent event) { , EntityCacheUtil.removeCache(AnnouncementsDeliveryImpl.class.getName()); FinderCacheUtil.removeCache(FINDER_CLASS_NAME_ENTITY); FinderCacheUtil.removeCache(FINDER_CLASS_NAME_LIST); 
1," StringBuilder builder = new StringBuilder(""<data xmlns=\""""); builder.append(getNamespace()).append(""\"">""); builder.append(mData); builder.append(""</data>""); return builder.toString(); "," StringBuilder XXXXX = new StringBuilder(""<data xmlns=\""""); XXXXX.append(getNamespace()).append(""\"">""); XXXXX.append(mData); XXXXX.append(""</data>""); return XXXXX.toString(); "
1," AbstractInplaceSelect select = (AbstractInplaceSelect) component; String width = getListWidth(select); return (width != null && width.trim().length() != 0) ? (""width: "" + width) : """"; "," AbstractInplaceSelect select = (AbstractInplaceSelect) component; String width = getListWidth(select); return (width != null && width.trim().length() != 0) ? (""width: "" + width) : """"; "
0, if (inheritsReadWriteMip() && this.modelItem.getParent() != null) { if (this.modelItem.getParent().getRefreshView().isReadwriteMarked()) { this.readwriteMarker = true; addParentRefreshViewToModel(); ," ObjectId id = new ObjectId(""test""); PersistentObject object = new MockPersistentObject(); assertNull(object.getObjectId()); object.setObjectId(id); assertSame(id, object.getObjectId()); "
1," System.setProperty(""derby.infolog.append"", ""true""); System.setProperty(""derby.language.logStatementText"", ""true""); System.setProperty(""derby.stream.error.logSeverityLevel"", ""20000""); "," System.setProperty(""derby.infolog.append"", ""true""); System.setProperty(""derby.language.logStatementText"", ""true""); System.setProperty(""derby.stream.error.logSeverityLevel"", ""20000""); "
1," final String name = super.getPresentableName(); return name + (!StringUtil.isEmpty(getRepoAuthor()) ? ""/"" + getRepoAuthor() : """") + (!StringUtil.isEmpty(getRepoName()) ? ""/"" + getRepoName() : """"); "," final String XXXXX = super.getPresentableName(); return XXXXX + (!StringUtil.isEmpty(getRepoAuthor()) ? ""/"" + getRepoAuthor() : """") + (!StringUtil.isEmpty(getRepoName()) ? ""/"" + getRepoName() : """"); "
1," ByteBuffer byteBuffer = block.getByteBuffer() ; int count = 0 ; int hash = -1 ; int hashLen = -1 ; HashBucket bucket = new HashBucket(NO_ID, hash, hashLen, block, factory, count) ; return bucket ; "," ByteBuffer XXXXX = block.getByteBuffer() ; int XXXXX = 0 ; int XXXXX = -1 ; int XXXXXLen = -1 ; HashBucket XXXXX = new HashBucket(NO_ID, XXXXX, XXXXXLen, block, factory, XXXXX) ; return XXXXX ; "
1," OrganizationalEntityDAO caller = getOperationInvoker(); TaskDAO task = getTask(); if (log.isDebugEnabled()) { log.debug(String.format(""User[%s] claiming task[%d]"", caller.getName(), task .getId())); "," OrganizationalEntityDAO XXXXX = getOperationInvoker(); TaskDAO XXXXX = getTask(); if (log.isDebugEnabled()) { log.debug(String.format(""User[%s] claiming XXXXX[%d]"", XXXXX.getName(), XXXXX .getId())); "
1," Artist artist = (Artist) session.load(Artist.class, 5); List<Recording> recordings = dao.getByArtistAndName(artist, ""never gonna give you up""); assertThat(recordings, hasSize(2)); "," Artist XXXXX = (Artist) session.load(Artist.class, 5); List<Recording> recordings = dao.getByArtistAndName(XXXXX, ""never gonna give you up""); assertThat(recordings, hasSize(2)); "
0," TestSuite suite = new TestSuite(TddTestWorkbench.class.getName()); suite.addTestSuite(TddTestWorkbench.class); if (suite.countTestCases() == 0) { throw new Error(""There are no test cases to run""); "," super(SOAPVersion.SOAP_11, binding); xmlCodec = new XMLCodec(binding); fiCodec = getFICodec(); xmlAccept = null; fiXmlAccept = APPLICATION_FAST_INFOSET_MIME_TYPE + "", "" + BASE_ACCEPT_VALUE; "
1, for(int i=0;i<colProperties.length;i++) if (colProperties[i].getColumnName().equals(lookupAttributeName)) { colProperties[i].setHeaderTextHorizontalAlignment(alignement); return; , for(int i=0;i<colProperties.length;i++) if (colProperties[i].getColumnName().equals(lookupAttributeName)) { colProperties[i].setHeaderTextHorizontalAlignment(alignement); return; 
0, if(handler==null) throw new AssertionError(); try { BindInfo result = (BindInfo)handler.getResult(); if(existing!=null) { BindInfo bie = (BindInfo)existing; bie.absorb(result); return bie; , for(Effect effect : abnormalEffectMap.values()) { if(value == 0) break; if(effect.getSkillType() == skillType) { effect.endEffect(); abnormalEffectMap.remove(effect.getStack()); value--; 
1," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (i: ""); result.append(i); result.append(')'); return result.toString(); "," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (i: ""); result.append(i); result.append(')'); return result.toString(); "
1," if (""equals"".equals(achild.getImage())) { List<ASTLiteral> literals = parent.findDescendantsOfType(ASTLiteral.class); return !literals.isEmpty() && ""\""\"""".equals(literals.get(0).getImage()); "," if (""equals"".equals(achild.getImage())) { List<ASTLiteral> literals = parent.findDescendantsOfType(ASTLiteral.class); return !literals.isEmpty() && ""\""\"""".equals(literals.get(0).getImage()); "
1," int newRow = indexOf(editedObject); if (logger.isLoggable(Level.FINE)) { logger.fine(""editedObject="" + editedObject); logger.fine(""row was "" + row); logger.fine(""new row is "" + newRow); "," int XXXXX = indexOf(editedObject); if (logger.isLoggable(Level.FINE)) { logger.fine(""editedObject="" + editedObject); logger.fine(""row was "" + row); logger.fine(""new row is "" + XXXXX); "
1, switch (featureID) { case Wcs10Package.VALUE_ENUM_TYPE__SEMANTIC: setSemantic((String)newValue); return; case Wcs10Package.VALUE_ENUM_TYPE__TYPE: setType((String)newValue); return; , switch (featureID) { case Wcs10Package.VALUE_ENUM_TYPE__SEMANTIC: setSemantic((String)newValue); return; case Wcs10Package.VALUE_ENUM_TYPE__TYPE: setType((String)newValue); return; 
0," if (isLiveOrCompiled()) if(!this.getCapability(ALLOW_PATH_READ)) throw new CapabilityNotSetException(J3dI18N.getString(""Text3D8"")); return ((Text3DRetained)this.retained).getPath(); ", List<Object> errors = errorHandler.getErrors(); if (errors != null) { Iterator<Object> iter = errors.iterator(); while (iter.hasNext()) { Object error = iter.next(); out.println(error.toString()); 
1, color = obj.color; media = obj.media; orientationRequested = obj.orientationRequested; origin = obj.origin; printQuality = obj.printQuality; printerResolution = obj.printerResolution; , color = obj.color; media = obj.media; orientationRequested = obj.orientationRequested; origin = obj.origin; printQuality = obj.printQuality; printerResolution = obj.printerResolution; 
1," SegmentReader reader = new SegmentReader(packet); int index = reader.readInt(); if (myLastPacketIndex + 1 < index) { LOG.error(""last: "" + myLastPacketIndex + "" current: "" + index); "," SegmentReader XXXXX = new SegmentReader(packet); int XXXXX = XXXXX.readInt(); if (myLastPacketIndex + 1 < XXXXX) { LOG.error(""last: "" + myLastPacketIndex + "" current: "" + XXXXX); "
0, OTSAbstractRecord resHandle = otsRecord(); int r = RecordType.OTS_ABSTRACTRECORD; if (_cachedType == -1) { try { if ((resHandle != null) && !_endpointFailed) _cachedType = r = resHandle.type_id(); , Resources resources = getResources(); String[] values = resources.getStringArray(R.array.action_values); int i; for (i = 0; i < values.length; i++) { if (values[i].equals(action)) { break; 
1, DataStackElement e = (DataStackElement) obj; Cmpr.Operator opr = Cmpr.Operator.EQ; if (e.type == ByteCode.Type.STRING && type == ByteCode.Type.STRING) { opr = Cmpr.Operator.EQUALS; , DataStackElXXXXXmXXXXXnt XXXXX = (DataStackElXXXXXmXXXXXnt) obj; Cmpr.OpXXXXXrator XXXXX = Cmpr.OpXXXXXrator.EQ; if (XXXXX.typXXXXX == BytXXXXXCodXXXXX.TypXXXXX.STRING && typXXXXX == BytXXXXXCodXXXXX.TypXXXXX.STRING) { XXXXX = Cmpr.OpXXXXXrator.EQUALS; 
0," if (!util.match(""/^#/"", line)) { if (util.match(""/error/"", line)) { log(""Client Error"", Project.MSG_VERBOSE); throw new BuildException(""Perforce Error, "" + ""check client settings and/or server""); "," payments.clear(); String[] lines = payData.split(""\n""); for(String line:lines) { if(line.length()==0) continue; String[] parts = line.split(""-=-""); payments.put(parts[0], parts[1]); "
1, tvName.setText(R.string.func3_title); btnLeft.setText(R.string.back); btnLeft.setVisibility(View.VISIBLE); btnRight.setText(R.string.refresh); btnRight.setVisibility(View.VISIBLE); , tvName.setText(R.string.func3_title); btnLeft.setText(R.string.back); btnLeft.setVisibility(View.VISIBLE); btnRight.setText(R.string.refresh); btnRight.setVisibility(View.VISIBLE); 
0, Set<String> importers = Sets.create(); for (Input input : context.getInputs()) { WindGateImporterDescription desc = extract(input.getDescription()); importers.add(desc.getProfileName()); ," Label cell = new Label(); cell.setStylePrimaryName(StyleNames.forCellContent(type)); cell.addStyleDependentName(themeName); cell.setPixelSize(segmentSizePx, segmentSizePx); return cell; "
1," List<Point2D_F64> list = new ArrayList<Point2D_F64>(); for( int i = 0; i < 12; i++ ) { Point2D_F64 p = new Point2D_F64(); p.set(rand.nextDouble()*5,rand.nextDouble()*5); list.add(p); "," LXXXXXst<PoXXXXXnt2D_F64> lXXXXXst = new ArrayLXXXXXst<PoXXXXXnt2D_F64>(); for( XXXXXnt XXXXX = 0; XXXXX < 12; XXXXX++ ) { PoXXXXXnt2D_F64 XXXXX = new PoXXXXXnt2D_F64(); XXXXX.set(rand.nextDouble()*5,rand.nextDouble()*5); lXXXXXst.add(XXXXX); "
0, ArchivaRestError restError = new ArchivaRestError( e ); Response.ResponseBuilder responseBuilder = Response.status( e.getHttpErrorCode() ).entity( restError ); return responseBuilder.build(); ," switch(kind){ case MIPS: return GetProperties.getMIPSActualInMIPS(ne, 0.0); case RAM: return GetProperties.getRAMActualInKB(ne, 0.0); case ROM: return GetProperties.getROMActualInKB(ne, 0.0); "
0, Relation relation; long relationId; flushWays(true); relation = relationContainer.getEntity(); relationId = relation.getId(); if (relationId >= maxRelationId) { maxRelationId = relationId + 1; , switch (featureID) { case MexPackage.FUNCTION_DEFINITION__FUNCTION: setFunction((Expression)null); return; case MexPackage.FUNCTION_DEFINITION__FORMULA: setFormula((Formula)null); return; 
0," List result = new ArrayList(); String[] param = CmsStringUtil.splitAsArray(parameters, CmsFormReportingBean.PARAM_SEPARATOR); if ((param.length <= 2) || (m_list == null)) { return result; "," ContentValues values = new ContentValues(); values.put(NoteColumns.GTASK_ID, """"); values.put(NoteColumns.SYNC_ID, 0); getContentResolver().update(Notes.CONTENT_NOTE_URI, values, null, null); "
0," int curNum = 1; StringTokenizer st = new StringTokenizer(s, "" ,;\t\n\r\f""); while (curNum < x) { curNum++; if (st.hasMoreTokens()) st.nextToken(); else { return (new String("""")); "," try { final OutputFormat outputFormat = new OutputFormat(""XML"", encoding, false); outputFormat.setOmitXMLDeclaration(true); return new XMLSerializer(w, outputFormat).asContentHandler(); "
0, StringBuilder query = new StringBuilder(); for (Clause keyClause : getContext().getTransformedTerms().keySet()) { query.append(getContext().getTransformedTerms().get(keyClause)); , String attribute= null; Object source = e.getSource(); Text text= null; if (source == fAfterCleanTarget) { attribute= IAntLaunchConstants.ATTR_ANT_AFTER_CLEAN_TARGETS; text= fAfterCleanTargetText; 
0, return left.hasSharedInput(right) || left.hasSharedInput(middle) || middle.hasSharedInput(left) || middle.hasSharedInput(right) || right.hasSharedInput(left) || right.hasSharedInput(middle); , try { List<String> bounces = api.campaignHardBounces(TestConstants.TEST_CAMPAIGN_ID); assertNotNull(bounces); assertTrue(bounces.size() > 0); for (String s : bounces) { assertNotNull(s); 
1," JSONObject data = new JSONObject(); Link link = resources.createEventLink(EVENT_NAME); data.accumulate(""id"", getClientId()); data.accumulate(""urlSave"", link.toURI()); return data; "," JSONObject XXXXX = new JSONObject(); Link XXXXX = resources.createEventLink(EVENT_NAME); XXXXX.accumulate(""id"", getClientId()); XXXXX.accumulate(""urlSave"", XXXXX.toURI()); return XXXXX; "
0," String domain = EditEventHelper.extractDomain(""test.email@gmail.com""); assertEquals(domain, ""gmail.com""); domain = EditEventHelper.extractDomain(""bademail.no#$%at symbol""); assertNull(domain); ", this.view = view; this.frame = frame; this.launcher = launcher; JButton[] buttonArray = view.getButtonArray(); for(int i = 0; i < buttonArray.length; i++){ buttonArray[i].addActionListener(this); 
0," try { ZooKeeper zk = getSession(); byte[] tokenBytes = zk.getData(getTokenPath(tokenIdentifier), false, null); try { return HiveDelegationTokenSupport.decodeDelegationTokenInformation(tokenBytes); ", long newIndex = index + steps; if ( newIndex > lastIndex ) { final long s = newIndex / (lastIndex + 1); newIndex -= s * (lastIndex + 1); sliceIndex += s; type.updateContainer( this ); 
0," ZonedDateTime referenceDate = DateUtils.getUTCDate(2012, 3, 1); DoubleTimeSeries<ZonedDateTime> fixingTS = new ArrayZonedDateTimeDoubleTimeSeries(new ZonedDateTime[] {DateUtils.getUTCDate(2012, 3, 1)"," initHelpers(); if (helpers[i][j] == null) setHelper( i, j, new AlgoIntersectConics(cons, a.getConicBorder(), b .getConicBorder())); else helpers[i][j].compute(); addVertices(helpers[i][j], false); "
1, ICharm[] charms = cache.getCharms(treeType); return ArrayUtilities.find(new Predicate<ICharm>() { @Override public boolean apply(ICharm candidate) { return candidate.getId().equals(id); , ICharm[] charms = cache.getCharms(treeType); return ArrayUtilities.find(new Predicate<ICharm>() { @Override public boolean apply(ICharm candidate) { return candidate.getId().equals(id); 
1, receiverName = ctx.getReceiverName(); receiverType = ctx.getReceiverType().orNull(); if (isReceiverNameThis() || isReceiverNameSuper() || isImplicitThis()) { setReceiverToSupertype(); , receiverName = ctx.getReceiverName(); receiverType = ctx.getReceiverType().orNull(); if (isReceiverNameThis() || isReceiverNameSuper() || isImplicitThis()) { setReceiverToSupertype(); 
0," try { if (""uploadBanner"".equals(request.getAction())) { File newBanner = request.getFile(""uploadBannerFile""); if(newBanner == null) { throw new Exception(""Please provide an image file.""); "," org.gudy.azureus2.core3.download.DownloadManager dm = PluginCoreUtils.unwrap( download ); if ( PlatformTorrentUtils.getHasBeenOpened( dm )){ PlatformTorrentUtils.setHasBeenOpened( dm, false ); "
1," for (Entry<Location, HoneyPotBlock> entry : blockQueue.entrySet()){ entry.getKey().getBlock().setTypeId(entry.getValue().getTypeId()); entry.getKey().getBlock().setData(entry.getValue().getData()); "," for (Entry<Location, HoneyPotBlock> entry : blockQueue.entrySet()){ entry.getKey().getBlock().setTypeId(entry.getValue().getTypeId()); entry.getKey().getBlock().setData(entry.getValue().getData()); "
1," checkWidget(); final int c = Math.max(0, count); if (c == _itemCount) return; if (c > _itemCount) { for (int i = _itemCount; i < c; i++) { new GridChooserItem(this, SWT.NONE, i); "," XXXXXheXXXXXkWXXXXXdget(); fXXXXXnal XXXXXnt XXXXX = Math.max(0, XXXXXount); XXXXXf (XXXXX == _XXXXXtemCount) return; XXXXXf (XXXXX > _XXXXXtemCount) { for (XXXXXnt XXXXX = _XXXXXtemCount; XXXXX < XXXXX; XXXXX++) { new GrXXXXXdChooserItem(thXXXXXs, SWT.NONE, XXXXX); "
1," char delim = ','; Object delimValue = getPropertyValue(VALUESETDELIM_KEY); if (delimValue != null) { String delimStr = delimValue.toString(); if (delimStr.length() > 0) { delim = delimStr.charAt(0); "," char XXXXX = ','; Object XXXXXValue = getPropertyValue(VALUESETDELIM_KEY); if (XXXXXValue != null) { String XXXXXStr = XXXXXValue.toString(); if (XXXXXStr.length() > 0) { XXXXX = XXXXXStr.charAt(0); "
0," if (location != null && address.hasLatitude() && address.hasLongitude()) { return Units.getDistanceFromKilometers(location.distanceTo(new Geopoint(address.getLatitude(), address.getLongitude()))); ", SuperTenantCarbonContext carbonContext = SuperTenantCarbonContext.getCurrentContext(axisConfig); tenantId = carbonContext.getTenantId(); tenantDomain = carbonContext.getTenantDomain(); 
0, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(Expando528LatestTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; ," String fileName = line.substring( pos + FILE_MARKER.length(), line.length() ); String checkedOutFilePath = this.currentDir + ""/"" + fileName; this.currentFile = checkedOutFilePath; "
0," for (int row = 1; row <= boardSize; row++) { for (int col = 1; col <= boardSize; col++) { setValue(row, col, getValue(row, col) + weightUpdates[(row - 1) * boardSize + (col - 1)]); ", final IEditorPart part = EclipseUtils.getActivePage().getActiveEditor(); setChecked(true); if (part instanceof SharedMemoryEditor) { try { ((SharedMemoryEditor)part).setMemoryName(getText()); 
0, for (Renderable cp : this.controlPoints) { String value = ((ControlPoint)cp).getStringValue(CONTROL_TYPE_REGULAR_SHAPE); if (value != null && value.equals(control)) return (ControlPoint)cp; ," if (this.isRemote) { this.sentPacket = ((ElevatorsPacketHandling) Elevators.Core .getPacketHandler()).sendResponseGUIPacket( this.guiTransferID, packetCode, this.floors, this.properties); "
0, interpreter = interpreterProvider.get(); classLoader = classLoaderProvider.getClassLoader(xPackage.eResource().getResourceSet()); if (classLoader != null) { interpreter.setClassLoader(classLoader); ," return ShrinkWrap.create(JavaArchive.class, ""test.jar"").addClasses(SkinBean.class) .addAsManifestResource(new ByteArrayAsset(""<beans/>"".getBytes()), ArchivePaths.create(""beans.xml"")); "
0, for (int i = 0; i < 100; i++) { for (int j = 0; j < randomObjects.length; j++) { try { int index = randomIndexes[j]; randomStrings[index] = ((Integer) randomObjects[index]).toString(); ," affine.set( affine.get( 0, 3 ) - x, 0, 3 ); affine.set( affine.get( 1, 3 ) - y, 1, 3 ); affine.scale( s ); affine.set( affine.get( 0, 3 ) + x, 0, 3 ); affine.set( affine.get( 1, 3 ) + y, 1, 3 ); "
1," CursorTreeAdapter adapter = new MockCursorTreeAdapter(mGroupCursor, mContext); assertEquals(2, adapter.getGroupCount()); try { adapter.getChild(3, 1); fail(""should throw NullPointerException""); "," CursorTreeAdapter XXXXX = new MockCursorTreeAdapter(mGroupCursor, mContext); assertEquals(2, XXXXX.getGroupCount()); try { XXXXX.getChild(3, 1); fail(""should throw NullPointerException""); "
1," File audioFile = null; for(String sp : searchPath){ for(String ft : SUPPORTED_AUDIO_FILE_TYPE){ audioFile = new File(sp + ""/"" + alternativeFilename + ft); if(audioFile.exists()){ break; "," File XXXXX = null; for(String sp : searchPath){ for(String ft : SUPPORTED_AUDIO_FILE_TYPE){ XXXXX = new File(sp + ""/"" + alternativeFilename + ft); if(XXXXX.exists()){ break; "
1, boolean valid = true; if (type == IResource.FILE && linkTargetStore.fetchInfo().isDirectory()) { setErrorMessage(IDEWorkbenchMessages.WizardNewLinkPage_linkTargetNotFile); valid = false; , boolean valid = true; if (type == IResource.FILE && linkTargetStore.fetchInfo().isDirectory()) { setErrorMessage(IDEWorkbenchMessages.WizardNewLinkPage_linkTargetNotFile); valid = false; 
0," Method method = new Mirror(provider).on(MethodFixture.class).reflect().method(""methodWithNoArgs"").withoutArgs(); new MethodHandlerByMethod(provider, new Object(), String.class, method); ", ProjectRepository newProjectRepository = new ProjectRepository(dmModel); newProjectRepository.setName(aName); dmModel.addToProjectRepositories(newProjectRepository); return newProjectRepository; 
1," log.debug(""merging PolicyDef instance""); try { PolicyDef result = (PolicyDef) sessionFactory.getCurrentSession() .merge(detachedInstance); log.debug(""merge successful""); return result; "," log.debug(""merging PolicyDef instance""); try { PolicyDef XXXXX = (PolicyDef) sessionFactory.getCurrentSession() .merge(detachedInstance); log.debug(""merge successful""); return XXXXX; "
1, AdapterFactoryLabelProvider labelProvider = new AdapterFactoryLabelProvider(adapterFactory); if (object instanceof EObject) { switch (columnIndex) { case 0: return labelProvider.getText(object); , AdapterFactoryLabelProvider XXXXX = new AdapterFactoryLabelProvider(adapterFactory); if (object instanceof EObject) { switch (columnIndex) { case 0: return XXXXX.getText(object); 
0," String repositoryName = """"; try { Integer repositoryId = this.getRepositoryId(); repositoryName = RepositoryController.getController().getRepositoryVOWithId(repositoryId).getName(); ", this.si = si; this.enableDrops = enableDrops; this.fm = GrisuRegistryManager.getDefault(si).getFileManager(); this.ftm = FileTransactionManager.getDefault(si); this.fileList = fileList; 
0, LinkedHashSet<String> goodopts = new LinkedHashSet<String>(allopts.size()); String holdmake = null; String check = null; if ((selopts == null) || (selopts.size() == 0)) { goodopts.addAll(allopts); ," final long nanoUnit = 1000000000; final long sec = nanoTime / nanoUnit; final long nanos = (nanoTime - (sec * nanoUnit)); return sec + "" sec "" + nanos / 1000 + ""."" + nanos % 1000 + "" msec""; "
0, Camera c=application.vsm.getActiveCamera(); double a = (c.focal+Math.abs(c.altitude)) / c.focal; if (wheelDirection == WHEEL_UP){ c.altitudeOffset(-a*5); application.vsm.repaint(); , XACMLAuthzDecisionStatementType xacmlStatement = new XACMLAuthzDecisionStatementType(); xacmlStatement.setRequest(request); xacmlStatement.setResponse(response); return xacmlStatement; 
0, int numGeometries = byteBuffer.getInt(); Point[] geometries = new Point[numGeometries]; for (int i = 0; i < geometries.length; i++) { geometries[i] = (Point) decodeGeometry(byteBuffer); ," markVisited(annotation); checkPrecedeCycle(annotation, new LinkedHashSet<SequenceAnnotation>()); checkPositionConsistency(annotation); super.visit(annotation); unmarkVisited(annotation); "
0," TestSuite suite = new TestSuite(""Test for test.prefuse.data.io""); suite.addTestSuite(CSVTableReaderTest.class); suite.addTestSuite(DelimitedTextTableReaderTest.class); return suite; "," String lang = ""fr""; assertEquals( tvString, m.createStatement( r, RDF.value, tvString, lang ).getString() ); assertEquals( lang, m.createStatement( r, RDF.value, tvString, lang ).getLanguage() ); "
1, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(Tags605LatestTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , TestSuite XXXXX = new TestSuite(); XXXXX.addTest(LoginTests.suite()); XXXXX.addTest(Tags605LatestTests.suite()); XXXXX.addTestSuite(StopSeleniumTest.class); return XXXXX; 
1, setDefaultCloseOperation(DISPOSE_ON_CLOSE); addKeyListener(new KeyListener() { @Override public void keyTyped(KeyEvent event) { if (event.getKeyCode() == KeyEvent.VK_ESCAPE) { dispose(); , setDefaultCloseOperation(DISPOSE_ON_CLOSE); addKeyListener(new KeyListener() { @Override public void keyTyped(KeyEvent event) { if (event.getKeyCode() == KeyEvent.VK_ESCAPE) { dispose(); 
0, final int prime = 31; int result = 1; result = prime * result + ((name1 == null) ? 0 : name1.hashCode()); result = prime * result + ((name2 == null) ? 0 : name2.hashCode()); return result; ," StringBuffer sb; if (remoteDN == null && peerCerts != null) { sb = new StringBuffer(); for (int i = 0; i < peerCerts.length; i++) { sb.append(peerCerts[i].toString()); sb.append(""\n\n""); "
0," super(""p_triggers"", org.jooq.test.postgres.generatedclasses.Public.PUBLIC, org.jooq.util.postgres.PostgresDataType.getDefaultDataType(""trigger"")); setReturnParameter(RETURN_VALUE); ", form.setLocal(local); field1Label.setEnabled(!local); field1.setEnabled(!local); associationTable.setEnabled(!local); accessControlLabel.setEnabled(!local); accessControl.setEnabled(!local); 
0, if (nullsFirst || nullsLast) { switch (context.getDialect()) { case DB2: case ASE: case CUBRID: case INGRES: case MYSQL: case SQLITE: case SQLSERVER: case SYBASE: { context.bind(field); ," MethodCache.remove(PatientService.class); _service = service; ReferenceRegistry.registerReference(PatientServiceUtil.class, ""_service""); MethodCache.remove(PatientService.class); "
1, PropertyPath path = new PropertyPath(propertyPath); String childPropertyName = path.getPropertyName(); int childPropertyIndex = path.getPropertyIndex(); if (childPropertyName == null){ return false; , PropertyPath path = new PropertyPath(propertyPath); String childPropertyName = path.getPropertyName(); int childPropertyIndex = path.getPropertyIndex(); if (childPropertyName == null){ return false; 
0, synchronized(this.lock) { int count = 0; Iterator i = this.sourceNodeList.iterator(); while(i.hasNext()) { Object node = (Object) i.next(); if(this.filter.accept(node)) { count++; , Location loc = null; final ACWorld acWorld = ACWorld.getWorld(player.getWorld()); if (groups.isEmpty()) { loc = acWorld.getSpawn(); if (loc == null) { loc = player.getWorld().getSpawnLocation(); 
1," PlainNode invalidChild = findInvalidAncestorNode(rootElement, review); if(invalidChild != null) { if((invalidChild instanceof RootNode)) { rootElement = new RootNode(project, settings); "," PlainNode XXXXX = findInvalidAncestorNode(rootElement, review); if(XXXXX != null) { if((XXXXX instanceof RootNode)) { rootElement = new RootNode(project, settings); "
1," if (Environment.getBoolean(Environment.UseInternalFrames)) { JOptionPane.showInternalMessageDialog(Environment.getInternalFrameDesktop(), message, title, JOptionPane.INFORMATION_MESSAGE); "," if (Environment.getBoolean(Environment.UseInternalFrames)) { JOptionPane.showInternalMessageDialog(Environment.getInternalFrameDesktop(), message, title, JOptionPane.INFORMATION_MESSAGE); "
0, final GuiDesignerConfiguration configuration = GuiDesignerConfiguration.getInstance(myProject); if (configuration.INSTRUMENT_CLASSES) { myGeneralUI.myRbInstrumentClasses.setSelected(true); ," if (featOkTst && casFeat_posType == null) jcas.throwFeatMissing(""posType"", ""org.u_compare.shared.label.penn.pos.UnknownPOS""); return ll_cas.ll_getStringValue(addr, casFeatCode_posType); "
1," this.prova = prova; this.kb = kb; this.agent = agent; this.password = password; this.machine = machine; this.esb = esb; this.timers = new ScheduledThreadPoolExecutor(5, new TimerThreadFactory()); "," this.prova = prova; this.kb = kb; this.agent = agent; this.password = password; this.machine = machine; this.esb = esb; this.timers = new ScheduledThreadPoolExecutor(5, new TimerThreadFactory()); "
0," final Html.ImageGetter imageGetter = ContactDetailDisplayUtils.getImageGetter(context); if (mText != null) { mDecodedText = HtmlUtils.fromHtml(context, mText, imageGetter, null); "," if (settings instanceof WizardDescriptor) { ((WizardDescriptor) settings).putProperty(""defaultPullPath"", pullUrl); ((WizardDescriptor) settings).putProperty(""defaultPushPath"", pushUrl); "
1," if (vertexLoop.size() != 4) { throw new InvalidGeometryException(""attempted creation of triangle "" + ""from polygon with vertex loop of size "" + vertexLoop.size() + "": "" + vertexLoop); "," if (vertexLoop.size() != 4) { throw new InvalidGeometryException(""attempted creation of triangle "" + ""from polygon with vertex loop of size "" + vertexLoop.size() + "": "" + vertexLoop); "
0, switch (featureID) { case UmlStatePackage.SUBMACHINE_RULE__PATH: setPath((QualifiedName)null); return; case UmlStatePackage.SUBMACHINE_RULE__SUBMACHINE: setSubmachine((StateMachine)null); return; ," IfcReal durationReal = PropertyUtility.initializeRealToStringVal(duration); PropertySetUtility. setPropertySetPropertyValueOfName(pName_WarrantyDurationParts, this,durationReal); "
1, if(isStartX) regionX.start=new EvDecimal(x); else regionX.end=new EvDecimal(x); if(isStartY) regionY.start=new EvDecimal(y); else regionY.end=new EvDecimal(y); ROI.roiParamChanged.emit(null); , if(isStartX) regionX.start=new EvDecimal(x); else regionX.end=new EvDecimal(x); if(isStartY) regionY.start=new EvDecimal(y); else regionY.end=new EvDecimal(y); ROI.roiParamChanged.emit(null); 
0," System.out.println(""MOUSE-CLICKED ""+Thread.currentThread()+"" UNHANDLED ""+e); switch(e.getClickCount()) { case 1: if(e.getButton()>MouseEvent.BUTTON1) { window.setFullscreen(!window.isFullscreen()); ", myTypeItems.get(0).renderElement(presentation); presentation.setItemText(getLookupString()); if (myTypeItems.size() > 1) { presentation.setTailText(null); presentation.setTypeText(null); 
1," final boolean requiredSet = (groupId != null ^ principalId != null) && delegates != null; if (!requiredSet) { throw new IllegalStateException(""all the required fields are not set""); "," final boolean XXXXX = (groupId != null ^ principalId != null) && delegates != null; if (!XXXXX) { throw new IllegalStateException(""all the required fields are not set""); "
1, int result = 17; result = 37 * result + ( getTid() == null ? 0 : this.getTid().hashCode() ); result = 37 * result + ( getUid() == null ? 0 : this.getUid().hashCode() ); return result; , int XXXXX = 17; XXXXX = 37 * XXXXX + ( getTid() == null ? 0 : this.getTid().hashCode() ); XXXXX = 37 * XXXXX + ( getUid() == null ? 0 : this.getUid().hashCode() ); return XXXXX; 
0," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," String repositoryName = """"; try { Integer repositoryId = this.getRepositoryId(); repositoryName = RepositoryController.getController().getRepositoryVOWithId(repositoryId).getName(); "
1, final int prime = 31; int result = 1; result = prime * result + ((timestampMs == null) ? 0 : timestampMs.hashCode()); result = prime * result + ((uuid == null) ? 0 : uuid.hashCode()); return result; , final int XXXXX = 31; int XXXXX = 1; XXXXX = XXXXX * XXXXX + ((timestampMs == null) ? 0 : timestampMs.hashCode()); XXXXX = XXXXX * XXXXX + ((uuid == null) ? 0 : uuid.hashCode()); return XXXXX; 
1," this.state = state; this.back = back; this.score = score; if(back == null) { throw new NullPointerException( ""Can't construct backpointer for state "" + state.getName() + "" with a null source"" ); "," this.state = state; this.back = back; this.score = score; if(back == null) { throw new NullPointerException( ""Can't construct backpointer for state "" + state.getName() + "" with a null source"" ); "
0," if (location != null && address.hasLatitude() && address.hasLongitude()) { return Units.getDistanceFromKilometers(location.distanceTo(new Geopoint(address.getLatitude(), address.getLongitude()))); "," switch(index) { case 0: return new Query_ExpressionAssignment_1(lastRuleCallOrigin, this, 0, inst); case 1: return new Query_QueryAction_0(lastRuleCallOrigin, this, 1, inst); default: return null; "
1," String outputFormat = _paramGroup.getParameter(ProcessorConstants.OUTPUT_FORMAT_PARAM_NAME).getValueAsText(); return new Parameter(ProcessorConstants.OUTPUT_FORMAT_PARAM_NAME, outputFormat); "," String XXXXX = _paramGroup.getParameter(ProcessorConstants.OUTPUT_FORMAT_PARAM_NAME).getValueAsText(); return new Parameter(ProcessorConstants.OUTPUT_FORMAT_PARAM_NAME, XXXXX); "
0," switch ( resultCode ) { case INVALID_DN_SYNTAX: case NAMING_VIOLATION: return; default: throw new IllegalArgumentException( I18n.err( I18n.ERR_04140_UNACCEPTABLE_RESUT_CODE, resultCode ) ); "," try { Class<?> ceSupportClass = Class.forName(""com.businessobjects.gems.client.calcebridge.CESupport""); Constructor<?> ctor = ceSupportClass.getConstructor(new Class[] {Logger.class"
0, double errorSum = 0.0; Synapse synapse; Enumeration e = outlinks.elements(); while(e.hasMoreElements()) { synapse = (Synapse)e.nextElement(); errorSum += synapse.to.delta * synapse.getWeight(); , double avgError = 0; int numConnectedViews = 0; for ( ViewErrorPairWise error : connectedViews ) if ( error.isConnected() ) { avgError += error.getAvgError(); ++numConnectedViews; 
0, Exception returnValue = null; List<Throwable> causeStack = new ArrayList<Throwable>(); for (Throwable tempCause = t; tempCause != null; tempCause = tempCause.getCause()) { causeStack.add(tempCause); ," super(""dev/bat""); setTitle(""Battery""); setResourceType(""ipso:dev-bat""); setInterfaceDescription(""core#s""); isObservable(true); Timer timer = new Timer(); timer.schedule(new TimeTask(), 0, 1000); "
0," user.getCredentials().put(""name"", user.getName()); user.getCredentials().put(""password"", ""secret""); user.getCredentials().put(""certificate"", new byte[] { (byte) 0x55, (byte) 0xAA "," if (start < 0) throw new IllegalArgumentException(""start < 0""); if (end == -1) end = count - this.start; return new SharedByteArrayInputStream(buf, this.start + (int)start, (int)(end - start)); "
1, boolean configurationIsLegal = true; FullTextSessionBuilder builder = null; try { builder = new FullTextSessionBuilder() .addAnnotatedClass(Can.class) .addAnnotatedClass(Trash.class).build(); , boolean XXXXX = true; FullTextSessionBuilder XXXXX = null; try { XXXXX = new FullTextSessionBuilder() .addAnnotatedClass(Can.class) .addAnnotatedClass(Trash.class).build(); 
1," subnet = new MobileSubnet(); this.resolution = DEFAULT_RESOLUTION; bandwidth = new Bandwidth(DEFAULT_DOWN_BANDWIDTH, DEFAULT_UP_BANDWIDTH); this.mv = new MobileMovementManager(); "," subnet = new MobileSubnet(); this.resolution = DEFAULT_RESOLUTION; bandwidth = new Bandwidth(DEFAULT_DOWN_BANDWIDTH, DEFAULT_UP_BANDWIDTH); this.mv = new MobileMovementManager(); "
0, try { if (doByReference) { RuleSet filteredRS = new RuleSet(); filteredRS.setFileName(selectedRuleSet.getFileName()); for (Rule rule : selectedRuleSet.getRules()) { filteredRS.addRule(rule); ," long rawContactId1 = createRawContactWithName(""John"", ""Doe"", ACCOUNT_1); long rawContactId2 = createRawContactWithName(""John"", ""Doe"", ACCOUNT_1); assertNotAggregated(rawContactId1, rawContactId2); "
1, ShapeStyle ss = getShapeStyles().get(c); if (ss==null && !TargetRuntime.DEFAULT_RUNTIME_ID.equals(id)) { ss = TargetRuntime.getDefaultRuntime().getShapeStyle(c); if (ss!=null) return ss; , ShapeStyle XXXXX = getShapeStyles().get(c); if (XXXXX==null && !TargetRuntime.DEFAULT_RUNTIME_ID.equals(id)) { XXXXX = TargetRuntime.getDefaultRuntime().getShapeStyle(c); if (XXXXX!=null) return XXXXX; 
0," if (element != null && isAllowedByFilter(element)) { list.add(index, element); modCount++; for (ObservableListListener listener : listeners) { listener.listElementsAdded(this, index, 1); ", SwingUtilities.invokeLater(new Runnable() { @Override public void run() { showCard(wikiPanel); wikiArea.requestFocus(); wikiArea.setCaretPosition(wikiArea.getText().length()); _editMode = true; 
0, groups = backboneGroups.loadGroups(); ArrayList<Group> groups = new ArrayList<Group>(); for(Group g : this.groups) { g.permissions = new PermissionManager().getGroupsProvider(g.name); groups.add(g); , TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(DocumentLibraryTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; 
1, StringBuilder buffer = new StringBuilder( 96 ); buffer.append( getGroupId() ).append( ':' ).append( getArtifactId() ).append( ':' ).append( getVersion() ); return buffer.toString(); , StringBuilder XXXXX = new StringBuilder( 96 ); XXXXX.append( getGroupId() ).append( ':' ).append( getArtifactId() ).append( ':' ).append( getVersion() ); return XXXXX.toString(); 
0, if ( from != null && to != null ) { int comparison = from.compareTo( to ); if ( comparison > 0 || (comparison == 0 && (!fromInclusive || !toInclusive)) ) { impossibleMatch = true; ," if (RandomHelper.getRandomNumberBetween(0, 100) <= 25) { ChatHandler.sendBattleMessage(user.getOwner(), target.getOwner(), user.getName() + "" is paralyzed and cannot move!""); return false; "
1," String surefirePath = this.surefireDir.getAbsolutePath(); String testList = ErlUtils.toModuleList(this.tests, ""'"", ""'""); return String.format(this.script, surefirePath, this.suiteName, testList); "," String surefirePath = this.surefireDir.getAbsolutePath(); String testList = ErlUtils.toModuleList(this.tests, ""'"", ""'""); return String.format(this.script, surefirePath, this.suiteName, testList); "
0," MyColorScheme newScheme = new MyColorScheme(imported); initScheme(newScheme); mySchemes.put(imported.getName(), newScheme); selectScheme(newScheme.getName()); resetSchemesCombo(null); "," buf.append(""CREATE VIEW ""); this.name.output(buf); if (this.columns.size() > 0) { buf.append("" (""); for (int i = 0, size = this.columns.size(); i < size; ++i) { if (i != 0) { buf.append("", ""); "
0," GetQuotaByQuotaIdQueryParameters params = new GetQuotaByQuotaIdQueryParameters(); params.setQuotaId(guid); Quota quota = performGet(VdcQueryType.GetQuotaByQuotaId, params); return quota; "," if (charTyped == '$') { if (!(file instanceof XPathFile)) return Result.CONTINUE; AutoPopupController.getInstance(editor.getProject()).autoPopupMemberLookup(editor, null); return Result.CONTINUE; "
0, constraintValidatorFactory = new ConstraintValidatorFactoryImpl(); constraintValidatorManager = new ConstraintValidatorManager( constraintValidatorFactory ); validator = getValidator(); ," simpleNameHelper(""String"", ""foo"".getClass()); simpleNameHelper(""int[]"", (new int[0]).getClass()); simpleNameHelper(""Object[][]"", (new Object[0][0]).getClass()); simpleNameHelper(""null"", null); "
1," if (applicationEventPublisher != null) { if (log.isTraceEnabled()) log.trace(""Publishing event through publisher "" + applicationEventPublisher); try { applicationEventPublisher.publishEvent(event); "," if (applicationEventPublisher != null) { if (log.isTraceEnabled()) log.trace(""Publishing event through publisher "" + applicationEventPublisher); try { applicationEventPublisher.publishEvent(event); "
0, plugin.getChannelDigraph().ereaseJunctioncandidate(); for (int i = 0; i < jc.getSubJunction().size(); i++) { plugin.getChannelDigraph().addJunctioncandidateChannel(jc.getSubJunction().get(i)); , switch (featureID) { case ApplauseDslPackage.VIEW_CALL__VIEW: setView((View)null); return; case ApplauseDslPackage.VIEW_CALL__PROVIDER: setProvider((ProviderConstruction)null); return; 
1," final IRBasicBlockFinder<T> bbf = new IRBasicBlockFinder<T>(); BytecodeParser.parse(bytecode, bbf); this.bblocks = bbf.createBasicBlocks(); startBlock = bblocks[0]; computeDominance(); "," final IRBasicBlockFinder<T> bbf = new IRBasicBlockFinder<T>(); BytecodeParser.parse(bytecode, bbf); this.bblocks = bbf.createBasicBlocks(); startBlock = bblocks[0]; computeDominance(); "
0," driver.addExpectation( new ClientDriverRequest(""/"").withMethod(Method.HEAD), new ClientDriverResponse()); Response response = head(baseUrl); assertThat(response, hasStatusCode(204)); "," initComponents(); ticketlines = new JTicketLines(ticketline); this.dlCustomers = dlCustomers; this.dlSales = dlSales; this.taxeslogic = taxeslogic; jPanel2.add(ticketlines, BorderLayout.CENTER); "
0, int timeoutCount = 0; for (CompanyStatistics companyStatistics : _serverStatistics.getCompanyStatisticsSet()) { timeoutCount += companyStatistics.getRequestStatistics().getTimeoutCount(); , return this.containsFlag(SimulatorFlagOption.GENERATE_INFLUENCE_MAP) || this.containsParameter(GENERATE_INFLUENCE_MAP) || this.containsFlag(SimulatorFlagOption.BUILD_INFLUENCE_MAP); 
0," if (StringUtils.isEmpty(str)) return AccessCode.UNKNOWN; if (""PROPERTY"".equals(str)) return AccessCode.EXPLICIT | AccessCode.PROPERTY; return AccessCode.EXPLICIT | AccessCode.FIELD; "," int index = CompactLabelToOrdinal.indexFor(hash, a.offsets.length); int offset = a.offsets[index]; if (offset == 0) { a.offsets[index] = knownOffset; a.cids[index] = ordinal; return true; "
1," sb.append(""ProjectionNode inFields=(""); StringUtils.formatList(sb, mInputFields); sb.append("") outFields=(""); StringUtils.formatList(sb, mOutputFields); sb.append("")\n""); formatAttributes(sb); "," sb.append(""ProjectionNode inFields=(""); StringUtils.formatList(sb, mInputFields); sb.append("") outFields=(""); StringUtils.formatList(sb, mOutputFields); sb.append("")\n""); formatAttributes(sb); "
1, for(TreeItem item : fModelViewsTreeViewer.getTree().getItems()) { Object o = item.getData(); if(o instanceof IDiagramModel) { fModelViewsTreeViewer.setSelection(new StructuredSelection(o)); break; , for(TreeItem item : fModelViewsTreeViewer.getTree().getItems()) { Object o = item.getData(); if(o instanceof IDiagramModel) { fModelViewsTreeViewer.setSelection(new StructuredSelection(o)); break; 
1," String nameclean = clean(name); String levelclean = clean(level); if(unique) { String key = nameclean + ""."" + levelclean + ""."" + trackvalue; if(mLevelRangeds.contains(key)) { return; "," String XXXXX = clean(name); String XXXXX = clean(level); if(unique) { String XXXXX = XXXXX + ""."" + XXXXX + ""."" + trackvalue; if(mLevelRangeds.contains(XXXXX)) { return; "
0," removeRequest( this, OUTCOME_SUCCESS ); if (Logger.isEnabled()){ Logger.log( new LogEvent( LOGID, ""NAT traversal for "" + initiator.getDisplayName() + ""/"" + target + "" succeeded"" )); "," if (component == null) { component = new CoffeeScriptApplicationPanelVisual(this); component.setName(NbBundle.getMessage(CoffeeScriptApplicationWizardPanel.class, ""LBL_CreateProjectStep"")); "
0," switch (column) { case 0: return ""string""; case 1: return ""category""; case 2: return ""type""; case 3: return ""arguments""; case 4: return ""tooltip""; case 5: return ""doc""; default: return null; "," EasyCassandraManager.getPersistence(""javabahia"", ""localhost"", 9160); EasyCassandraManager.getClient(""javabahia"", ""localhost"", 9160); Assert.assertEquals(1, EasyCassandraManager.numberOfClients()); "
0," int x = (int) ((me.getX()- X_OFFSET) /PIXELS_PER_CM ); int y = (int) ((me.getY() - Y_OFFSET) / PIXELS_PER_CM); System.out.println(""X = "" + x + "", Y = "" + y); closest = findClosest(x,y); repaint(); ", final ASTNode[] nodes = getNode().getChildren(TokenSet.create(XPathElementTypes.PREDICATE)); assert nodes.length == 1 : unexpectedPsiAssertion(); return (XPathPredicate)nodes[0].getPsi(); 
1," MonthDay test = new MonthDay(COPTIC_PARIS); assertSame(COPTIC_UTC.monthOfYear(), test.getField(0)); assertSame(COPTIC_UTC.dayOfMonth(), test.getField(1)); try { test.getField(-1); "," MonthDay XXXXX = new MonthDay(COPTIC_PARIS); assertSame(COPTIC_UTC.monthOfYear(), XXXXX.getField(0)); assertSame(COPTIC_UTC.dayOfMonth(), XXXXX.getField(1)); try { XXXXX.getField(-1); "
0, final List<String> l = new LinkedList<String>(children.keySet()); final ListIterator<String> it = l.listIterator(l.indexOf(name)); it.next(); if (it.hasNext()) { return children.get(it.next()); , selectedStep_ = step; currentStep_ = step - 1; List<UIComponent> children = getChildren(); for(int i=0; i<children.size(); i++){ if(i == getCurrentStep()) { children.get(i).setRendered(true); 
0," String oldName = name; name = newName; if ( eNotificationRequired( ) ) eNotify( new ENotificationImpl( this, Notification.SET, AttributePackage.FONT_DEFINITION__NAME, oldName, name ) ); ", File objectFile = new File (WalrusInfo.getWalrusInfo().getStorageDir() + FILE_SEPARATOR + bucket + FILE_SEPARATOR + object); if(objectFile.exists()) return objectFile.length(); return -1; 
0, this.entityId = null; this.externalIdentifierTypeCode = null; this.externalIdentifierType = null; this.externalId = null; this.versionNumber = null; this.objectId = null; this.id = null; ," assertTrue(DoubleAlphabet.getSubAlphabet(1.0,2.5) == DoubleAlphabet.getSubAlphabet(1.0,2.5)); assertTrue(DoubleAlphabet.getSubAlphabet(1.0,2.5) != DoubleAlphabet.getSubAlphabet(1.00001,2.5)); "
1," lock.lock(); try { Object[] elements = array; Object old = elements[index]; int len = elements.length; int moved = len - index - 1; if (moved == 0) { array = Arrays.copyOf(elements, len - 1); "," lock.lock(); try { Object[] elements = array; Object old = elements[index]; int len = elements.length; int moved = len - index - 1; if (moved == 0) { array = Arrays.copyOf(elements, len - 1); "
1," URI resourceURI = EditUIUtil.getURI(getEditorInput()); Exception exception = null; Resource resource = null; try { resource = editingDomain.getResourceSet().getResource(resourceURI, true); "," URI XXXXX = EditUIUtil.getURI(getEditorInput()); Exception XXXXX = null; Resource XXXXX = null; try { XXXXX = editingDomain.getResourceSet().getResource(XXXXX, true); "
0, ActionBar bar = getActionBar(); bar.setDisplayOptions(ActionBar.DISPLAY_SHOW_HOME | ActionBar.DISPLAY_HOME_AS_UP | ActionBar.DISPLAY_SHOW_TITLE); bar.setTitle(Things.getTitle(thingBundle)); ," StringBuffer result = new StringBuffer(); result.append(_name); result.append('('); for (Iterator i = _parameters.iterator(); i.hasNext(); ) { result.append(i.next()); result.append(','); "
1," ssid = (config.SSID == null ? """" : removeDoubleQuotes(config.SSID)); bssid = config.BSSID; security = getSecurity(config); networkId = config.networkId; mRssi = Integer.MAX_VALUE; mConfig = config; "," ssid = (config.SSID == null ? """" : removeDoubleQuotes(config.SSID)); bssid = config.BSSID; security = getSecurity(config); networkId = config.networkId; mRssi = Integer.MAX_VALUE; mConfig = config; "
1," try { return bundleContext.createFilter( ""(&("" + Constants.OBJECTCLASS + ""="" + PaxLayout.class.getName() + "")"" + ""("" + PaxLoggingService.LAYOUT_NAME_PROPERTY + ""="" + name + ""))""); "," try { return bundleContext.createFilter( ""(&("" + Constants.OBJECTCLASS + ""="" + PaxLayout.class.getName() + "")"" + ""("" + PaxLoggingService.LAYOUT_NAME_PROPERTY + ""="" + name + ""))""); "
1," String header = getBlueprintHeader(headers); if (header != null) { String directive = ConfigUtils.getDirectiveValue(header, directiveName); if (directive != null) return directive; "," String XXXXX = getBlueprintHeader(XXXXXs); if (XXXXX != null) { String XXXXX = ConfigUtils.getDirectiveValue(XXXXX, XXXXXName); if (XXXXX != null) return XXXXX; "
1, int index = javaRuntime.getJavaProfile().getExecutionEnvironmentNames().indexOf(profileName); index = javaRuntime.getJavaProfile().getExecutionEnvironmentNames().size() - index; return index; , int XXXXX = javaRuntime.getJavaProfile().getExecutionEnvironmentNames().XXXXXOf(profileName); XXXXX = javaRuntime.getJavaProfile().getExecutionEnvironmentNames().size() - XXXXX; return XXXXX; 
0," ensureLoggedIn(); validateLink(uri, Link.Type.ARTIST); synchronized (_lockedArtists) { int count = 0; while (_lockedArtists.contains(uri) && ++count < 5) { try { _lockedArtists.wait(2500); ", XMLGregorianCalendar normalized = normalizeToTimezone(timezone); if (getTimezone() == DatatypeConstants.FIELD_UNDEFINED) { normalized.setTimezone(DatatypeConstants.FIELD_UNDEFINED); 
0, this.name = artifact.getName(); this.extension = artifact.getExtension(); this.type = artifact.getType(); this.classifier = artifact.getClassifier(); this.file = artifact.getFile(); ," InputMethodManager imm = (InputMethodManager)getSystemService(Context.INPUT_METHOD_SERVICE); if (imm != null) { if (!imm.showSoftInput(view, 0)) { Log.w(TAG, ""Failed to show soft input method.""); "
1, this.buffer = new byte[BUCKET_SIZE_IN_BYTES]; for (int i = 0; i < keys.length; i++) keys[i] = -1; this.clusterLocal = clusterLocal; this.position = position; this.isOverflowBucket = overflowBucket; , this.buffer = new byte[BUCKET_SIZE_IN_BYTES]; for (int i = 0; i < keys.length; i++) keys[i] = -1; this.clusterLocal = clusterLocal; this.position = position; this.isOverflowBucket = overflowBucket; 
1," String[] components = path.split(""\\.""); if (components.length != 3) return null; String[] values = this.resolvePath(components); int index; try { index = Integer.parseInt(components[2]); "," String[] components = path.split(""\\.""); if (components.length != 3) return null; String[] values = this.resolvePath(components); int index; try { index = Integer.parseInt(components[2]); "
1," byte[] bytes; try { ByteArrayOutputStream baos = new ByteArrayOutputStream(text.length() * 2); encoder.encode(text, 0, text.length(), baos); baos.flush(); bytes = baos.toByteArray(); "," byte[] bytes; try { ByteArrayOutputStream XXXXX = new ByteArrayOutputStream(text.length() * 2); encoder.encode(text, 0, text.length(), XXXXX); XXXXX.flush(); bytes = XXXXX.toByteArray(); "
0," if (isKeyEnabled_ != enabled) { isKeyEnabled_ = enabled; if (enabled) CCKeyDispatcher.sharedDispatcher().addDelegate(this, 0); else CCKeyDispatcher.sharedDispatcher().removeDelegate(this); "," this.name = xmltrk.getChild(""name"").getContent(); XMLElement[] children = xmltrk.getChildren(""trkseg""); for (int i = 0; i < children.length; i++) { this.addTrackSeg(new GPXTrackSeg(children[i])); "
0," assert(event.getClass().equals(LongEvent.class)); ++callCount; try { System.out.println(""Event handler "" + this.toString() + "" going to sleep..."" + callCount); Thread.sleep(1000); ", startTime = System.currentTimeMillis(); Runnable task=new Runnable() { public void run() { bandwidthCollector.collectBandwidthData(); setHardcoreCapable(); assignUltrapeerNode(); assignDHTMode(); 
1, String str = PydevDebugPlugin.getDefault().getPreferenceStore() .getString(PydevConsoleConstants.INITIAL_INTERPRETER_CMDS); if (additionalInitialComands != null) { str += additionalInitialComands; , String XXXXX = PydevDebugPlugin.getDefault().getPreferenceStore() .getString(PydevConsoleConstants.INITIAL_INTERPRETER_CMDS); if (additionalInitialComands != null) { XXXXX += additionalInitialComands; 
1," list.lock.lock(); try { checkModifications(); int d = list.size(); list.addAll(start + read.size, c); read = new SubListReadData(read.size + (list.size() - d), list .getData()); return true; "," list.lock.lock(); try { checkModifications(); int d = list.size(); list.addAll(start + read.size, c); read = new SubListReadData(read.size + (list.size() - d), list .getData()); return true; "
1," if (StringUtils.isBlank(branchOfficeId)) { addError(errors, ConfigurationConstants.BRANCHOFFICE, LoanConstants.MANDATORY_SELECT, getMessageText( ConfigurationConstants.BRANCHOFFICE)); "," if (StringUtils.isBlank(branchOfficeId)) { addError(errors, ConfigurationConstants.BRANCHOFFICE, LoanConstants.MANDATORY_SELECT, getMessageText( ConfigurationConstants.BRANCHOFFICE)); "
1, this.server = zanataDetails.server; this.project = zanataDetails.project; this.version = zanataDetails.version; this.username = zanataDetails.username; this.token = zanataDetails.token; , this.server = zanataDetails.server; this.project = zanataDetails.project; this.version = zanataDetails.version; this.username = zanataDetails.username; this.token = zanataDetails.token; 
1, final double[][] matrix = new double[8][8]; for (int i = 0; i < matrix.length; i++) { for (int j = 0; j < matrix[i].length; j++) { matrix[i][j] = (double) (i + 1) / (double) (j + 1); , fXXXXXnal double[][] matrXXXXXx = new double[8][8]; for (XXXXXnt XXXXX = 0; XXXXX < matrXXXXXx.length; XXXXX++) { for (XXXXXnt XXXXX = 0; XXXXX < matrXXXXXx[XXXXX].length; XXXXX++) { matrXXXXXx[XXXXX][XXXXX] = (double) (XXXXX + 1) / (double) (XXXXX + 1); 
1, if (multipleSampleForReferencesTable.getSelection() instanceof IStructuredSelection) { removeMultipleSampleForReferencesTable((IStructuredSelection) multipleSampleForReferencesTable.getSelection()); , if (multipleSampleForReferencesTable.getSelection() instanceof IStructuredSelection) { removeMultipleSampleForReferencesTable((IStructuredSelection) multipleSampleForReferencesTable.getSelection()); 
1, CASTIdExpression copy = new CASTIdExpression(name == null ? null : name.copy(style)); copy.setOffsetAndLength(this); if (style == CopyStyle.withLocations) { copy.setCopyLocation(this); , CASTIdExpression XXXXX = new CASTIdExpression(name == null ? null : name.XXXXX(style)); XXXXX.setOffsetAndLength(this); if (style == CopyStyle.withLocations) { XXXXX.setCopyLocation(this); 
1," OsceProxy selectedObject = selectionModel .getSelectedObject(); if (selectedObject != null) { Log.debug(""OSCE with id "" + selectedObject.getId() + "" selected!""); showDetails(selectedObject); "," OsceProxy selectedObject = selectionModel .getSelectedObject(); if (selectedObject != null) { Log.debug(""OSCE with id "" + selectedObject.getId() + "" selected!""); showDetails(selectedObject); "
1," super(parent, toolkit, style); createSection(getSection(), toolkit); editablePropertySet = new HashSet<String>(); for (String prop : EDITABLE_PROPERTIES) { editablePropertySet.add(prop); "," super(parent, toolkit, style); createSection(getSection(), toolkit); editablePropertySet = new HashSet<String>(); for (String prop : EDITABLE_PROPERTIES) { editablePropertySet.add(prop); "
0," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; ", final List<Node> children= ((Node)element).getChildren(); for (final Iterator<Node> iter= children.iterator(); iter.hasNext();) if (iter.next() instanceof InnerNode) return true; return false; 
0," String s = StatementBuilder.create() .try_() .finish() .catch_(Throwable.class, ""t"") .finish() .toJavaString(); assertEquals(""Failed to generate empty try catch block"", EMPTY_TRY_CATCH_BLOCK, s); "," Element group1 = null; group1 = doc.createElementNS(""http: group1.setAttributeNS(null, ""id"", getLayerId()); if (isAddOpacity()) { group1.setAttributeNS(null, ""style"", ""opacity:"" + getOpacity()); "
1," setup(Permissions.PRIVATE); Experimenter other = loginNewUserInOtherUsersGroup(fixture.user); fixture.log_in(); try { other.setEmail(uuid()); iAdmin.updateExperimenter(other); fail(""sec-vio""); "," setup(Permissions.PRIVATE); Experimenter other = loginNewUserInOtherUsersGroup(fixture.user); fixture.log_in(); try { other.setEmail(uuid()); iAdmin.updateExperimenter(other); fail(""sec-vio""); "
0, final List<Member> memberList; if (calc.isWrapperFor(MemberCalc.class)) { memberList = new ArrayList<Member>(1); memberList.add( calc.unwrap(MemberCalc.class).evaluateMember(evaluator)); , int[][] board = new int[boardSize][boardSize]; for (int i = 0; i < boardSize; i++) { for (int j = 0; j < boardSize; j++) { if (input.booleanValueOf(i * boardSize + j)) { board[i][j] = -1; 
1, for (EditionInput o : inputs) { ObtainObject oo = (ObtainObject) o; if (oo.getReferencedObject() != null) { oo.getReferencedObject().getGraphicalRepresentation().setIsSelected(true); , for (EditionInput o : inputs) { ObtainObject XXXXX = (ObtainObject) o; if (XXXXX.getReferencedObject() != null) { XXXXX.getReferencedObject().getGraphicalRepresentation().setIsSelected(true); 
1, boolean before=bodyContentStack.getDevNull(); bodyContentStack.setDevNull(false); forceWriter = bodyContentStack.getWriter(); if(enablecfoutputonly>0 && outputState==0) { writer=devNull; , boolean before=bodyContentStack.getDevNull(); bodyContentStack.setDevNull(false); forceWriter = bodyContentStack.getWriter(); if(enablecfoutputonly>0 && outputState==0) { writer=devNull; 
0," String s = (String) objVal; if (s == null || s.trim().isEmpty()) { ((UIInput)ui).setValid(false); fc.addMessage(ui.getClientId(fc), new FacesMessage(""required to be a non-empty string"")); "," assertEquals(0,IAURLCanonicalizer.getDefaultPort(""foo"")); assertEquals(80,IAURLCanonicalizer.getDefaultPort(""http"")); assertEquals(443,IAURLCanonicalizer.getDefaultPort(""https"")); "
0," Task d = task(""d""); Task c = task(""c""); Task b = task(""b"", d, c); Task a = task(""a"", b); taskExecuter.addTasks(toList(a)); assertThat(taskExecuter.getAllTasks(), equalTo(toList(c, d, b, a))); "," lock.writeLock().lock(); try { int idx = lookup((E)o); if (idx < 0) return false; else if (idx < size - 1) System.arraycopy(array, idx + 1, array, idx, size - idx - 1); size--; return true; "
1," nodeId = (String) configurationValues.get( DualNodeTestCase.NODE_ID_PROP ); if ( nodeId == null ) { throw new HibernateException(DualNodeTestCase.NODE_ID_PROP + "" not configured""); "," nodeId = (String) configurationValues.get( DualNodeTestCase.NODE_ID_PROP ); if ( nodeId == null ) { throw new HibernateException(DualNodeTestCase.NODE_ID_PROP + "" not configured""); "
1, if(System.currentTimeMillis() < retractTimer) piston.set(DoubleSolenoid.Value.kForward); else piston.set(DoubleSolenoid.Value.kReverse); topmotor.set(spinPower*0.6); bottommotor.set(spinPower); , if(System.currentTimeMillis() < retractTimer) piston.set(DoubleSolenoid.Value.kForward); else piston.set(DoubleSolenoid.Value.kReverse); topmotor.set(spinPower*0.6); bottommotor.set(spinPower); 
1, List bundles = getSelectedBundles(); for (Iterator it = bundles.iterator(); it.hasNext();) { Bundle bundle = (Bundle) it.next(); if (bundle.getState() == Bundle.ACTIVE) return false; , List XXXXX = getSelectedBundles(); for (Iterator XXXXX = XXXXX.XXXXXerator(); XXXXX.hasNext();) { Bundle XXXXX = (Bundle) XXXXX.next(); if (XXXXX.getState() == Bundle.ACTIVE) return false; 
1," super(model,editorController.getController()); this.editorController = editorController; delegate = new FIBEditableViewDelegate<FIBNumber,JSpinner>(this); model.addObserver(this); "," super(model,editorController.getController()); this.editorController = editorController; delegate = new FIBEditableViewDelegate<FIBNumber,JSpinner>(this); model.addObserver(this); "
0," CreditCardData data = creditCardDatas.get(t.getCardType()); if(data == null) { data = new CreditCardData(); data.setCardName(t.getCardType()); creditCardDatas.put(t.getCardType(), data); ", parentGui = parent; mc = ModLoader.getMinecraftInstance(); width = parent.width; height = parent.height; top = 32; bottom = height - 16; slotHeight = 12; left = 0; right = width; 
0," if (getSkinnable().getArrowDirection().equals(ListSpinner.ArrowDirection.HORIZONTAL)) { decrementArrow.getStyleClass().add(""left-arrow""); incrementArrow.getStyleClass().add(""right-arrow""); "," if (event.getDamager() instanceof Player) { Player player = (Player) event.getDamager(); if (isIn(player, 28)) { event.setDamage(getResultantDamage(event.getDamage(), getPowerLevel(player))); "
0," if (serverAmount > 0) { activeChannel = nimi; serverList[activeServer].joinChannel(nimi); serverList[activeServer].sendRawLine(""MODE "" + nimi); Servers[activeServer].addChannel(index); "," Tree tree = new Tree( composite, SWT.NONE ); tree.setSize( 325, 100 ); for( int i = 0; i < 10; i++ ) { TreeColumn column = new TreeColumn( tree, SWT.NONE ); column.setWidth( 50 ); "
1," StoryParser delegate = new RegexStoryParser(); StoryTransformer transformer = new StoryTransformer() { public String transform(String storyAsText) { return storyAsText.replaceAll("","", ""|""); "," StoryParser XXXXX = new RegexStoryParser(); StoryTransformer XXXXX = new StoryTransformer() { public String transform(String storyAsText) { return storyAsText.replaceAll("","", ""|""); "
1," prefix = prefix + ""-bulk""; Builder<String, String> builder = ImmutableMap.<String, String> builder(); for (int i = 0; i < 10; i++) { String message = ""hardyharhar"" + i; builder.put(i + """", message); "," prefXXXXXx = prefXXXXXx + ""-bulk""; BuXXXXXlder<StrXXXXXng, StrXXXXXng> buXXXXXlder = ImmutableMap.<StrXXXXXng, StrXXXXXng> buXXXXXlder(); for (XXXXXnt XXXXX = 0; XXXXX < 10; XXXXX++) { StrXXXXXng XXXXX = ""hardyharhar"" + XXXXX; buXXXXXlder.put(XXXXX + """", XXXXX); "
0," View fragment = super.onCreateView(inflater, container, savedInstanceState); if (savedInstanceState != null) { objectives = (HashMap<Integer, Long>) savedInstanceState.getSerializable(""objectives""); "," if (featOkTst && casFeat_surface == null) jcas.throwFeatMissing(""surface"", ""org.u_compare.shared.semantic.DictionaryNamedEntity""); ll_cas.ll_setStringValue(addr, casFeatCode_surface, v);"
0, this.path = path; categoryConfig = getCategoryConfig(pathToXml); this.downloadConfig = downloadConfig; this.grabberConfig = grabberConfig; this.controllerFactory = controllerFactory; , final int items = buffer.getInt (); final ArrayList<Value> values = new ArrayList<Value> ( items ); for ( int i = 0; i < items; i++ ) { values.add ( decodeValueFromStream ( buffer ) ); 
1," SubSystemClass oldType = type; type = newType; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, RoomPackage.SUB_SYSTEM_REF__TYPE, oldType, type)); "," SubSystemClass XXXXX = type; type = newType; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, RoomPackage.SUB_SYSTEM_REF__TYPE, XXXXX, type)); "
1," isNotZeroLength(argument, name); if (argument != null && argument.trim().length() == 0) { throw new IllegalArgumentException(CommonI18n.argumentMayNotBeNullOrZeroLengthOrEmpty.text(name)); "," isNotZeroLength(argument, name); if (argument != null && argument.trim().length() == 0) { throw new IllegalArgumentException(CommonI18n.argumentMayNotBeNullOrZeroLengthOrEmpty.text(name)); "
0, TestSuite testSuite = new TestSuite(); testSuite.addTestSuite(AddPageTest.class); testSuite.addTestSuite(AddPortletTest.class); testSuite.addTestSuite(DeletePageTest.class); return testSuite; ," String code = """"; if (this.isRoot()) { ListIterator it = childrenUnfolded(); if (it != null) { while (it.hasNext()) { code = code + ((SchemeNodeModel) it.next()) .getCodeClassicStyle() + "",""; "
0, RSAKeyParameters kParam = null; if (param instanceof ParametersWithRandom) { ParametersWithRandom rParam = (ParametersWithRandom)param; kParam = (RSAKeyParameters)rParam.getParameters(); ," tag = HTML.Tag.NOFRAMES; assertEquals(""noframes"", tag.toString()); assertTrue(""breaks Flow"", tag.breaksFlow()); assertTrue(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); "
0," if (featOkTst && casFeat_fragments == null) jcas.throwFeatMissing(""fragments"", ""org.u_compare.shared.DiscontinuousAnnotation""); ll_cas.ll_setRefValue(addr, casFeatCode_fragments, v);"," if (appliedTable.getTree().isSelectionEmpty()) { ShowMessageDelegate.showMessageDialog( LanguageBundle.getString(""in_itmRemBonButSelect""), Constants.APPLICATION_NAME, MessageType.ERROR); return; "
1," final IcyColorModel cm = getIcyColorModel(); if ((min < cm.getComponentAbsMinValue(channel))) cm.setComponentAbsMinValue(channel, min); cm.setComponentUserMinValue(channel, min); "," final IcyColorModel XXXXX = getIcyColorModel(); if ((min < XXXXX.getComponentAbsMinValue(channel))) XXXXX.setComponentAbsMinValue(channel, min); XXXXX.setComponentUserMinValue(channel, min); "
0, getCtx().setEntityContainer(oldEntityContainer); getCtx().setField(oldField); getCtx().setFieldValue(oldFieldValue); getCtx().setEntityInstance(oldEntityInstance); return EVAL_PAGE; ," try{ Rect rect1 = new Rect(9,6,10,7); Rect rect2 = new Rect(8,5,11,8); System.out.println(rect1.toString()+"" \nand\n""+rect2.toString() +""\nIntersection \n\tAns- ""+rect2.intersection(rect1)); "
0," iteration--; int numCorrect = 0; int oei=0; int si=0; Map<String,Float>[] featureCounts = new Map[numOutcomes]; for (int oi=0;oi<numOutcomes;oi++) { featureCounts[oi] = new HashMap<String,Float>(); "," TextEditBasedChange result= fMap.get(cu); if (result == null) { result= new CompilationUnitChange(cu.getElementName(), cu); result.setKeepPreviewEdits(fKeepExecutedTextEdits); fMap.put(cu, result); "
1," if (binding == null) return INACCURATE_MATCH; if (!(binding instanceof TypeVariableBinding)) return IMPOSSIBLE_MATCH; return matchTypeParameter((TypeVariableBinding) binding, true); "," if (binding == null) return INACCURATE_MATCH; if (!(binding instanceof TypeVariableBinding)) return IMPOSSIBLE_MATCH; return matchTypeParameter((TypeVariableBinding) binding, true); "
0," NamespaceRegistry registry = mock(NamespaceRegistry.class); TextEncoder encoder = mock(TextEncoder.class); assertThat(root.getString(registry, encoder, (TextEncoder)null), is(""/"")); "," if (item.equals(mHelpItem)) { ApplicationTracker.getInstance().logEvent(EventType.CLICK, Global.userId, getLogTag(), item.getTitle()); playAudio(R.raw.harvest_help, true); return true; "
0," return theOperation().does(""splits the given value of the source field based on the regular "") .cnt(""expression split string parameter and returns the value for the given index."").toString(); "," if (EconomyCore.iconomy != null) { if (event.getPlugin().getDescription().getName().equals(""iConomy"")) { EconomyCore.iconomy = null; System.out.println(""[Regios] Un-hooked from iConomy.""); "
1, ClassPathContainer container = getClassPathElementsRegistry().getClassPathContainer(classpathEntry.getPath()); context.addClasspathEntry(new ResolvedClasspathEntry(container.getPathEntries())); , ClassPathContainer container = getClassPathElementsRegistry().getClassPathContainer(classpathEntry.getPath()); context.addClasspathEntry(new ResolvedClasspathEntry(container.getPathEntries())); 
1, final Dimension d = getPreferredSize(c); final View v = (View)c.getClientProperty(BasicHTML.propertyKey); if (v != null) { d.width += v.getMaximumSpan(View.X_AXIS) - v.getPreferredSpan(View.X_AXIS); , final Dimension XXXXX = getPreferreXXXXXSize(c); final View XXXXX = (View)c.getClientProperty(BasicHTML.propertyKey); if (XXXXX != null) { XXXXX.wiXXXXXth += XXXXX.getMaximumSpan(View.X_AXIS) - XXXXX.getPreferreXXXXXSpan(View.X_AXIS); 
0, switch (item.getItemId()) { case R.id.menu_pref: getDevices(); return true; case R.id.menu_refresh: load(currentDevice); return true; default: return super.onOptionsItemSelected(item); ," DebugGraphics debugGraphics; DebugGraphicsInfo info = info(); JFrame debugFrame; if (info.debugFrame == null) { info.debugFrame = new JFrame(); info.debugFrame.setSize(500, 500); "
0," this.dimension = dimension; this.hierarchy = hierarchy; StringBuilder buf = new StringBuilder(""HierarchyType<""); if (hierarchy != null) { buf.append(""hierarchy="").append(hierarchy.getUniqueName()); ", if (container != null) { container.setOwner(this); container.setBindingAttribute(EditionActionBindingAttribute.container); container.setBindingDefinition(getContainerBindingDefinition()); 
0," try { StaticHibernateUtil.startTransaction(); if (day != null) { configurationPersistence.createOrUpdateConfigurationKeyValueString(MONTH_CLOSING_DAY_CONFIG_KEY, DateUtils.toDatabaseFormat(day)); ", String strVal= fElement.getAttribute(ENABLED_ATTRIBUTE); if (strVal == null) strVal= fElement.getAttribute(SELECTED_ATTRIBUTE); return strVal == null || Boolean.valueOf(strVal).booleanValue(); 
0," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," SQLiteDatabase db; Cursor c = null; Label label; db = mDbHelper.getWritableDatabase(); c = db.query(DBConsts.LABELS_TABLE_NAME, null, DBConsts.LABELS_NAME +""=?"", new String []{ labelName "
1," Window.alert(""You changed the birthday of "" + object.name + "" to "" + DateTimeFormat.getFormat(PredefinedFormat.DATE_LONG).format(value)); object.birthday = value; table.redraw(); "," Window.alert(""You changed the birthday of "" + object.name + "" to "" + DateTimeFormat.getFormat(PredefinedFormat.DATE_LONG).format(value)); object.birthday = value; table.redraw(); "
0," FacesContext context = FacesContext.getCurrentInstance(); if (context.isProjectStage(ProjectStage.Development)) { context.getExternalContext().log( getClass().getName() + "" - "" + msg); "," StringBuffer buffer = new StringBuffer(messageSize); buffer.append(""Message: "" + index + "" sent at: "" + new Date()); if (buffer.length() > messageSize) { return buffer.substring(0, messageSize); "
1," Intent intent = new Intent(); intent.setAction(XMPP_STANZA_INTENT); intent.addFlags(Intent.FLAG_FROM_BACKGROUND); intent.putExtra(""stanza"", stanza); sendBroadcast(intent, XMPP_STANZA_INTENT); "," Intent XXXXX = new Intent(); XXXXX.setAction(XMPP_STANZA_INTENT); XXXXX.addFlags(Intent.FLAG_FROM_BACKGROUND); XXXXX.putExtra(""stanza"", stanza); sendBroadcast(XXXXX, XMPP_STANZA_INTENT); "
1," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," EditorCell XXXXX = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, XXXXX, editorContext); return XXXXX; "
1," formatter.setSpaceAfterCommaInListings(false); assertEqualSource(""[1,2,3]"", ""[1 , 2 , 3, ]""); formatter.setSpaceAfterCommaInListings(true); assertEqualSource(""[1, 2, 3]"", ""[1 , 2 , 3 ]""); "," formatter.setSpaceAfterCommaInListings(false); assertEqualSource(""[1,2,3]"", ""[1 , 2 , 3, ]""); formatter.setSpaceAfterCommaInListings(true); assertEqualSource(""[1, 2, 3]"", ""[1 , 2 , 3 ]""); "
1, listeners.add(listener); for (int i = 0; i < childrenChoices.size(); i++) { DataChoice child = (DataChoice) childrenChoices.get(i); if (child != null) { child.addDataChangeListener(listener); , lXXXXXsteners.add(lXXXXXstener); for (XXXXXnt XXXXX = 0; XXXXX < chXXXXXldrenChoXXXXXces.sXXXXXze(); XXXXX++) { DataChoXXXXXce chXXXXXld = (DataChoXXXXXce) chXXXXXldrenChoXXXXXces.get(XXXXX); XXXXXf (chXXXXXld != null) { chXXXXXld.addDataChangeLXXXXXstener(lXXXXXstener); 
0," final Element in = form.getOwnerDocument().createElement(""input""); in.setAttribute(""type"", ""hidden""); in.setAttribute(""name"", name); in.setAttribute(""value"", value); form.appendChild(in); ", double tcc = 0.0; int methodPairs = determineMethodPairs(); double totalMethodPairs = calculateTotalMethodPairs(); if (totalMethodPairs > 0) { tcc = methodPairs / totalMethodPairs; 
0," final HandlerThread thread = new HandlerThread(name, android.os.Process.THREAD_PRIORITY_BACKGROUND); thread.start(); thread.setUncaughtExceptionHandler(new ExceptionHandler()); return thread; "," super(Outcome.PutCardInPlay); this.staticText = ""Search your library for an Equipment card, put it onto the battlefield, and attach it to a creature you control. Then shuffle your library""; "
1, if ( element instanceof IProject ) { IProject project = (IProject) element; return project.getName().equals( model.getProperty( IArtifactEditOperationDataModelProperties.PROJECT_NAME ) ); , if ( element instanceof IProject ) { IProject XXXXX = (IProject) element; return XXXXX.getName().equals( model.getProperty( IArtifactEditOperationDataModelProperties.PROJECT_NAME ) ); 
0," String label = ((NonListType) object).getName(); return label == null || label.length() == 0 ? getString(""_UI_NonListType_type"") : getString(""_UI_NonListType_type"") + "" "" + label; ", AbstractBaselineModel<?> model = (AbstractBaselineModel<?>) getBaselineModel(om).getModel(); NormalSummary summary = model.getSummary(); if (summary == null || !summary.getDefined()) { return null; 
0, super.performDefaults(); fListViewer.refresh(); handleSyntaxColorListSelection(); uninstallSemanticHighlighting(); installSemanticHighlighting(); fPreviewViewer.invalidateTextPresentation(); , Node superNode = iVisited.getSuperNode(); String superName = ASTUtil.getSuperClassName(superNode); if (superName != null && superName.equals(ACTIVE_RECORD_BASE)) { inActiveRecord = true; 
0," if ((parentType == null && _parentType != null) || (parentType != null && !parentType.equals(_parentType))) { if (parentType == null) { super.setParentType(parentType, notify); return; ", myFetchTagsComboBox.addItem(TAGS_POLICY_FOR_FETCHED_COMMITS); myFetchTagsComboBox.addItem(TAGS_POLICY_ALL); myFetchTagsComboBox.addItem(TAGS_POLICY_NONE); myFetchTagsComboBox.setSelectedIndex(0); 
0," final MutableFudgeMsg msg = serializer.newMessage(); FudgeSerializer.addClassHeader(msg, Currency.class); serializer.addToMessage(msg, CURRENCY_FIELD_NAME, null, object.getCode()); return msg; "," GuiLogger.errorLog(caught.getMessage()); this.setUserObject(new DefaultPage(this.getHTML() + "" is temporary not available"", ""Please try again later"")); this.setHTML(""<i>"" + this.getHTML() + ""</i>""); "
1, log.info(survey.toString()); for (QuestionGroup og : survey.getQuestionGroup()) { log.info(og.toString()); for (Question question : og.getQuestion()) { log.info(question.toString()); , log.info(survey.toString()); for (QuestionGroup og : survey.getQuestionGroup()) { log.info(og.toString()); for (Question question : og.getQuestion()) { log.info(question.toString()); 
1," EObject c1 = resource.getContents().get(0); EPackage c1ClassPackage = c1.eClass().getEPackage(); assertEquals(c1ClassPackage, getVariable(resource, NAME_PREFIX + ""javascriptSupportTest"")); "," EObject XXXXX = resource.getContents().get(0); EPackage XXXXXClassPackage = XXXXX.eClass().getEPackage(); assertEquals(XXXXXClassPackage, getVariable(resource, NAME_PREFIX + ""javascriptSupportTest"")); "
1," super(pageParameters); add(new StyleSheetReference(""stylesheet"", getClass(), ""css/style.css"")); add(new JavabotInfo(""info"")); add(new Credits(""credits"")); add(new ChannelBox(""ChannelBox"")); "," super(pageParameters); add(new StyleSheetReference(""stylesheet"", getClass(), ""css/style.css"")); add(new JavabotInfo(""info"")); add(new Credits(""credits"")); add(new ChannelBox(""ChannelBox"")); "
0, PaintListener listener = mock( PaintListener.class ); canvas.addPaintListener( listener ); canvas.removePaintListener( listener ); assertFalse( canvas.isListening( SWT.Paint ) ); ," DownloadBag messages = new Gson().fromJson(TEST_JSON, DownloadBag.class); assertThat(messages.getRemainingDocs()).isEqualTo(42); assertThat(messages.getItems().size()).isEqualTo(2); "
1, if (originLocal) return true; boolean cacheModeLocal = false; if (command instanceof FlagAffectedCommand) { cacheModeLocal = ((FlagAffectedCommand)command).hasFlag(Flag.CACHE_MODE_LOCAL); , if (originLocal) return true; boolean XXXXX = false; if (command instanceof FlagAffectedCommand) { XXXXX = ((FlagAffectedCommand)command).hasFlag(Flag.CACHE_MODE_LOCAL); 
1, AdapterFactoryLabelProvider labelProvider = new AdapterFactoryLabelProvider(adapterFactory); if (object instanceof EObject) { switch (columnIndex) { case 0: return labelProvider.getText(object); , AdapterFactoryLabelProvider XXXXX = new AdapterFactoryLabelProvider(adapterFactory); if (object instanceof EObject) { switch (columnIndex) { case 0: return XXXXX.getText(object); 
1, switch (getDBType(em)) { case db2: assertLockTestSQLs(Select + tableLfName + Where + DB2Lock); break; case oracle: case derby: default: assertLockTestSQLs(Select + tableLfName + Where + ForUpdate); , switch (getDBType(em)) { case db2: assertLockTestSQLs(Select + tableLfName + Where + DB2Lock); break; case oracle: case derby: default: assertLockTestSQLs(Select + tableLfName + Where + ForUpdate); 
0," boolean useGroupingSets = props.EnableGroupingSets.get(); props.EnableGroupingSets.set(true); try { assertQueryReturns( ""WITH "" + ""MEMBER GENDER.AGG AS 'AGGREGATE({ GENDER.[F], GENDER.[M] ", PublicationQueueBean other = (PublicationQueueBean)o; if(other.getUrlAddress().equals(urlAddress) && other.getSerializedParameters().equals(serializedParameters)) return true; else return false; 
1," System.out.println(""Exiting Local DB""); for (int i=0; i < 4; i++) { try { Thread.sleep(1000); if (!isLocalCouchRunning()) { System.out.println(""Local couch shutdown successfully""); break; "," System.out.println(""Exiting Local DB""); for (int i=0; i < 4; i++) { try { Thread.sleep(1000); if (!isLocalCouchRunning()) { System.out.println(""Local couch shutdown successfully""); break; "
0, Set<OWLDataRange> operands = and.getOperands(); ATerm[] terms = new ATerm[operands.size()]; int size = 0; for( OWLDataRange desc : operands ) { desc.accept( this ); terms[size++] = term; , final Set<GrantedAuthority> authorities = new HashSet<GrantedAuthority>(); if (m_authorities != null) authorities.addAll(m_authorities); authorities.add(authority); m_authorities = authorities; 
0," super(source); this.failureHandler = failureHandler; this.deadLetterChannel = deadLetterChannel; this.handled = source.getProperty(Exchange.ERRORHANDLER_HANDLED, false, Boolean.class); "," Iterator iter = history.iterator(); while (iter.hasNext()) { CheatSheetElement element = (CheatSheetElement)iter.next(); if(element != null) { memento.createChild(""element"", element.getID()); "
1," reload(); getSingleBreakpoint().getProperties().myOption = ""changed""; assertFalse(save().getContent().isEmpty()); reload(); assertEquals(""changed"", getSingleBreakpoint().getProperties().myOption); "," reload(); getSingleBreakpoint().getProperties().myOption = ""changed""; assertFalse(save().getContent().isEmpty()); reload(); assertEquals(""changed"", getSingleBreakpoint().getProperties().myOption); "
0," if(this == o) return 0; int cmp = keyType.compareTo(o.keyType); if(cmp != 0) return cmp; if(routingKey != null) { cmp = Fields.compareBytes(routingKey, o.routingKey); if(cmp != 0) return cmp; "," super(""require 'rhohub'"", ""Rhohub.token = \"""" + setting.getToken() + ""\"""", ""Rhohub.url = \"""" + setting.getServerUrl() + ""\"""", new BuildAppArgsHelper(project, setting).toString()); "
0," return new BatchCall(""Reset password"") { public void doCall() throws Exception { AdminService os = context.getAdminService(); result = os.resetExperimentersPassword(ctx, object); "," StringBuilder sb = new StringBuilder(); sb.append(""GraphNode[""); sb.append(_interval); sb.append("",neighbors{""); for (GraphNode neighbor : _neighbors) { sb.append(neighbor._interval); "
0," ByteArrayOutputStream baos = new ByteArrayOutputStream(); Writer w = new PrintWriter(baos); try { XMLWriter xw = new XMLWriter(w, new OutputFormat("" "", true)); xw.write(e); w.flush(); "," if (jButtonTopoApply == null) { jButtonTopoApply = new JButton(); jButtonTopoApply.setText(""Apply""); jButtonTopoApply.setEnabled(false); jButtonTopoApply.addActionListener(this); "
0, if ((eventlist == null) || (eventlist.getT() > ev.getT())) { ev.setPrevious(null); ev.setNext(eventlist); if (eventlist != null) eventlist.setPrevious(ev); eventlist = ev; return; ," GraphicsConfiguration gc = getDefaultConfiguration(); Rectangle r = gc.getBounds(); return new DisplayMode(r.width, r.height, DisplayMode.BIT_DEPTH_MULTI, DisplayMode.REFRESH_RATE_UNKNOWN); "
1, ICHelpBook book = getCHelpBook(); boolean bMatches = false; switch(book.getCHelpType()){ case ICHelpBook.HELP_TYPE_CPP: try{ bMatches = project.hasNature(CCProjectNature.CC_NATURE_ID); , ICHelpBook book = getCHelpBook(); boolean bMatches = false; switch(book.getCHelpType()){ case ICHelpBook.HELP_TYPE_CPP: try{ bMatches = project.hasNature(CCProjectNature.CC_NATURE_ID); 
0, String text = getText(); int columnIndex = columnSeparatorIndex(text); if (columnIndex == -1) return defaultValue; try { return Integer.parseInt(text.substring(columnIndex + 1)); ," button.addClickHandler(new ClickHandler() { @Override public void onClick(ClickEvent event) { sendMessage(getDisplay().getTextBox().getValue()); getDisplay().getTextBox().setValue(""""); "
1," if (!engine().refreshNeeded()) { synchronized (mutex) { if (state != IndexShardState.CLOSED) { refreshScheduledFuture = threadPool.schedule(refreshInterval, ThreadPool.Names.SAME, this); "," if (!engine().refreshNeeded()) { synchronized (mutex) { if (state != IndexShardState.CLOSED) { refreshScheduledFuture = threadPool.schedule(refreshInterval, ThreadPool.Names.SAME, this); "
0," parameters.getReturnParameter(); EasyMock.expectLastCall().andReturn(parameter3); EasyMock.replay(parameters); Assert.assertArrayEquals(new Parameter[] { parameter1, parameter2, parameter3 "," synchronized (_lock) { if (_instance != null) throw new RuntimeException(""Object model has already been registered. This method can only be called at program startup.""); _instance = model; "
0, JPEGComponent comp; for(int i=0; i < components.size() ; i++) { comp = (JPEGComponent)components.get(i); if(comp.factorH > maxH) maxH=comp.factorH; if(comp.factorV > maxV) maxV=comp.factorV; ," String oldValue = value; value = newValue; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, ParametersPackage.JVM_ARG__VALUE, oldValue, value)); "
0, LOG.assertTrue(ChildRole.isUnique(role)); switch (role) { default: return null; case ChildRole.LPARENTH: if (getFirstChildNode().getElementType() == LPARENTH) { return getFirstChildNode(); , try { QuestionPoolService delegate = new QuestionPoolService(); tree= new QuestionPoolTreeImpl( (QuestionPoolIteratorFacade) delegate.getAllPoolsWithAccess(AgentFacade.getAgentString())); 
1, final int dimension = envelope.getDimension(); index = new int[dimension * 2]; for (int i=0; i<dimension; i++) { index[i] = envelope.getLow(i); index[i + dimension] = envelope.getHigh(i) + 1; , final int XXXXX = envelope.getDimension(); index = new int[XXXXX * 2]; for (int i=0; i<XXXXX; i++) { index[i] = envelope.getLow(i); index[i + XXXXX] = envelope.getHigh(i) + 1; 
0," super(Duration.EndOfTurn, Outcome.AddAbility); staticText = ""Until end of turn, creatures you control gain trample and get +X/+X, where X is the greatest power among creatures you control.""; "," Preconditions.checkNotNull(connectTimeout, ""connectionTimeout""); if (connectTimeout.toMillis() < 1) { throw new IllegalArgumentException(""Connection timeout must be greater than 0""); "
0," DistributedTransaction dt = _coordinatedTransactions.get(transactionId); dt.ParticipantNodes.put(nodeId, new ParticipantNodeState(nodeId)); Send(nodeId, DtPacket.Enlist(transactionId)); "," switch ( icing ) { case 1: case 2: case 3: return ""Light icing""; case 4: case 5: case 6: return ""Moderate icing""; case 7: case 8: case 9: return ""Severe icing""; default: return ""No icing""; "
0, switch (featureID) { case MenuPackageImpl.TRIM_CONTRIBUTION__PARENT_ID: return getParentId(); case MenuPackageImpl.TRIM_CONTRIBUTION__POSITION_IN_PARENT: return getPositionInParent(); ," tag = HTML.Tag.SUB; assertEquals(""sub"", tag.toString()); assertFalse(""breaks Flow"", tag.breaksFlow()); assertFalse(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); "
1," profC.altera(professor.getId(), ""novo nome"", ""novoeamil@usp.br"", ""nova senha""); verify(professordao).atualizaProfessor(professor); verify(result).redirectTo(ProfessoresController.class); "," profC.altera(professor.getId(), ""novo nome"", ""novoeamil@usp.br"", ""nova senha""); verify(professordao).atualizaProfessor(professor); verify(result).redirectTo(ProfessoresController.class); "
0," super(representationClass, humanPresentableName); this.mimeType = super.getMimeType(); this.representationClass = representationClass; this.humanPresentableName = humanPresentableName; "," if (radius < 0.0) { String message = Logging.getMessage(""generic.ArgumentOutOfRange"", ""radius="" + radius); Logging.logger().severe(message); throw new IllegalArgumentException(message); "
0," if (_escapedModelProxy == null) { _escapedModelProxy = (SocialActivityCounter)ProxyUtil.newProxyInstance(_classLoader, _escapedModelProxyInterfaces, new AutoEscapeBeanHandler(this)); ", EntityCacheUtil.removeCache(MicroblogsEntryImpl.class.getName()); FinderCacheUtil.removeCache(FINDER_CLASS_NAME_ENTITY); FinderCacheUtil.removeCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION); 
0, for (final ListIterator<S> it = all.listIterator(); it.hasNext();) { final S cur = it.next(); if (cur.compareTo(newEntry) >= 0) { it.previous(); it.add(newEntry); assert isSorted(); return; , try { MarkupLanguageConfiguration copy = (MarkupLanguageConfiguration) super.clone(); copy.blocks = new ArrayList<Block>(blocks.size()); for (Block block : blocks) { copy.blocks.add(block.clone()); 
0, Point vpp = tabScroller.viewport.getLocation(); Point viewp = tabScroller.viewport.getViewPosition(); dest.x = srcx - vpp.x + viewp.x; dest.y = srcy - vpp.y + viewp.y; return dest; , Port port = getPort(fd); if (port == null) return -1; try { if (!SetCommBreak(port.m_Comm)) port.fail(); nanoSleep(duration * 250000000); if (!ClearCommBreak(port.m_Comm)) port.fail(); return 0; 
1," return new DropRelationshipToDb(entity, rel) { @Override public List<String> createSql(DbAdapter adapter) { String fkName = getFkName(); if (fkName == null) { return Collections.emptyList(); "," return new DropRelationshipToDb(entity, rel) { @Override public List<String> createSql(DbAdapter adapter) { String XXXXX = getFkName(); if (XXXXX == null) { return Collections.emptyList(); "
0," String oldDESC = dESC; dESC = newDESC; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, RifPackage.ATTRIBUTEDEFINITIONSIMPLE__DESC, oldDESC, dESC)); ", MenuItem removeMenu = menu.findItem(MENU_REMOVE); removeMenu.setVisible(mOldProfile != null); menu.findItem(MENU_SAVE).setEnabled(mUpdateRequired); return super.onPrepareOptionsMenu(menu); 
1," rs.addObject(alta); rs.addObject(altb); assertEquals(new Integer(2), rs.getRank(altb).getRank()); rs.getRank(alta).setRank(2); assertEquals(new Integer(1), rs.getRank(altb).getRank()); "," rs.addObject(alta); rs.addObject(altb); assertEquals(new Integer(2), rs.getRank(altb).getRank()); rs.getRank(alta).setRank(2); assertEquals(new Integer(1), rs.getRank(altb).getRank()); "
0," super(name, IAction.AS_PUSH_BUTTON); setImageDescriptor(PDebugImage.getDescriptor(PDebugImage.ICON_VAR_EDIT_NORMAL)); setToolTipText(name); setId(name); setEnabled(false); this.view = view; "," super(name); this.period = period; setUncaughtExceptionHandler(new UncaughtExceptionHandler() { @Override public void uncaughtException(Thread t, Throwable e) { log.warn(""Uncaught exception"", e); "
1," List<String> source = Arrays.asList(""a"", ""b"", ""c""); Set<String> dest = (Set<String>) convert(source, Set.class); assertTrue(dest instanceof Set); Asserts.assertEquals(source, dest); "," List<String> source = Arrays.asList(""a"", ""b"", ""c""); Set<String> dest = (Set<String>) convert(source, Set.class); assertTrue(dest instanceof Set); Asserts.assertEquals(source, dest); "
1," if(AdViewTargeting.getRunMode()==RunMode.TEST) Log.d(AdViewUtil.ADVIEW, ""Into Baidu""); AdViewLayout adViewLayout = adViewLayoutReference.get(); if(adViewLayout == null) { return; "," if(AdViewTargeting.getRunMode()==RunMode.TEST) Log.d(AdViewUtil.ADVIEW, ""Into Baidu""); AdViewLayout adViewLayout = adViewLayoutReference.get(); if(adViewLayout == null) { return; "
0, if (intent.hasExtra(EXTRA_MESSENGER)) { Messenger callback = intent.getParcelableExtra(EXTRA_MESSENGER); Message msg = Message.obtain(); msg.arg1 = result; try { callback.send(msg); , ArrayList<SolrCoreState> coreStates = new ArrayList<SolrCoreState>(); synchronized (cores) { for (SolrCore core : cores.values()) { coreStates.add(core.getUpdateHandler().getSolrCoreState()); 
1," if (log.isDebugEnabled()) { log.debug(""Found "" + conduits.size() + "" ScriptConduits attached to "" + this); for (ScriptConduit scriptConduit : conduits) { log.debug(""- "" + scriptConduit); "," if (log.isDebugEnabled()) { log.debug(""Found "" + conduits.size() + "" ScriptConduits attached to "" + this); for (ScriptConduit scriptConduit : conduits) { log.debug(""- "" + scriptConduit); "
1, final int prime = 31; int result = 1; result = prime * result + (integer == null ? 0 : integer.hashCode()); result = prime * result + (string == null ? 0 : string.hashCode()); return result; , final int XXXXX = 31; int XXXXX = 1; XXXXX = XXXXX * XXXXX + (integer == null ? 0 : integer.hashCode()); XXXXX = XXXXX * XXXXX + (string == null ? 0 : string.hashCode()); return XXXXX; 
1," try { out.println(""<table border='1'>""); engine.executeQuery(q, new ObjectVisitor() { public boolean visit(Object o) { out.println(""<tr><td>""); try { out.println(engine.toHtml(o)); "," try { out.println(""<table border='1'>""); engine.executeQuery(q, new ObjectVisitor() { public boolean visit(Object o) { out.println(""<tr><td>""); try { out.println(engine.toHtml(o)); "
0," defaultLayers.clear(); for (String source : Main.pref.getCollection(""imagery.layers.sites"", Arrays.asList(DEFAULT_LAYER_SITES))) { if (clearCache) { MirroredInputStream.cleanup(source); "," final String pjtName = (String) parameters.get(Widget.PARAM_PJT_NAME); final File logFile = (File) parameters.get(Widget.PARAM_BUILD_LOG_FILE); try { return parseCheckStyle(logFile, pjtName); "
0," if (c.isOpaque()) { if ((c.getBackground().equals(AbstractLookAndFeel.getBackgroundColor())) && (c.getBackground() instanceof ColorUIResource)) { AluminiumUtils.fillComponent(g, c); "," Precondition.checkMustNotBeNull(target, ""target""); Precondition.checkMustNotBeNull(source, ""source""); return new ExpressionBuilder(factory, target) .method(""copyFrom"", source) .toStatement(); "
0, LanguageEntity contentLanguage = context.getLanguage(); if ( contentLanguage != null && StringUtils.isNotEmpty( contentLanguage.getCode() ) ) { return createLocale( contentLanguage.getCode() ); , int id = Integer.parseInt(evt.getActionCommand()); switch (id) { case ADD: addItem(); break; case ADD_ALL: addAllItems(); break; case REMOVE: removeItem(); break; case REMOVE_ALL: removeAllItems(); 
0," Map<String, Boolean> map = getResourcePropertyMap(rc, false); if(map == null) return null; Boolean old = map.remove(propKey); if(map.size() == 0) removeResourcePropertyMap(rc); return old; "," AttachmentId aId = entity.getId(); attachments.put(aId, entity); if (attachmentIds.get(aId.getDocumentId()) == null) { attachmentIds.put(aId.getDocumentId(), new HashSet<AttachmentId>()); "
0, new Thread() { @Override public void run() { Looper.prepare(); while (!stopLed) { mHandler.sendEmptyMessage(0); int delay = blinkOn ? onBlink : offBlink; try { Thread.sleep(delay); , switch (value) { case UNKNOWN_VALUE: return UNKNOWN; case INCOMPLETE_VALUE: return INCOMPLETE; case DRAFT_VALUE: return DRAFT; case FINAL_VALUE: return FINAL; case OBSOLETE_VALUE: return OBSOLETE; 
0," setOriginalTestDetailsOn(result); _testResult.addParticipantResult(result); LOGGER.debug(""Received result "" + result); _testResultsLatch.countDown(); checkForResponseError(result); "," CmsWidgetFactoryRegistry.instance().registerFactory(WIDGET_TYPE, new I_CmsFormWidgetFactory() { public I_CmsFormWidget createWidget(Map<String, String> widgetParams) { return new CmsColorPicker(); "
1," if (m_editor != null) { if (m_editor.isDirty()) { if (m_separateViewButton != null) { if (m_separateViewButton.getText().equals(""View"")) { m_separateViewButton.setText(""Preview""); "," if (m_editor != null) { if (m_editor.isDirty()) { if (m_separateViewButton != null) { if (m_separateViewButton.getText().equals(""View"")) { m_separateViewButton.setText(""Preview""); "
1," final PsiModifierList modifierList = method.getModifierList(); if (modifierList.hasModifierProperty(PsiModifier.PROTECTED)) { modifierList.setModifierProperty(PsiModifier.PROTECTED, false); "," final PsiModifierList XXXXX = method.getModifierList(); if (XXXXX.hasModifierProperty(PsiModifier.PROTECTED)) { XXXXX.setModifierProperty(PsiModifier.PROTECTED, false); "
0," CollectionStringBuffer buffer = new CollectionStringBuffer(""otherwise[""); List<ProcessorDefinition<?>> list = getOutputs(); for (ProcessorDefinition<?> type : list) { buffer.append(type.getLabel()); "," DownloadBag messages = new DownloadBag(Arrays.asList(new Message(""abc1""), new Message(""abc2"")), 42); JsonElement actual = jsonElement(messages); assertThat(actual).isEqualTo(jsonParse(TEST_JSON)); "
1, List<IdeaAction> ideas = generateIdeaActions(lastPosition); if(ideas.size() == 0) return; overlay.setIdeas(ideas); if(delegate != null) { if(!delegate.ideaManagerWillDisplayIdea()) return; , List<IdeaAction> ideas = generateIdeaActions(lastPosition); if(ideas.size() == 0) return; overlay.setIdeas(ideas); if(delegate != null) { if(!delegate.ideaManagerWillDisplayIdea()) return; 
0," String prodPath = _paramGroup.getParameter( DefaultRequestElementFactory.INPUT_PRODUCT_PARAM_NAME).getValueAsText(); request.addInputProduct(new ProductRef(new File(prodPath), null, null)); ", int c = 0; for (int i = 0; i < inv.length; ++i) { if (inv[i] != null && inv[i].getTypeId() == id && (!JItems.hasData(id) || inv[i].getDurability() == d)) { c += inv[i].getAmount(); 
1, if (myChangeInfo instanceof JavaChangeInfoImpl) { return myChangeInfo.isExceptionSetOrOrderChanged() && !((JavaChangeInfoImpl)myChangeInfo).propagateExceptionsMethods.contains(caller); , if (myChangeInfo instanceof JavaChangeInfoImpl) { return myChangeInfo.isExceptionSetOrOrderChanged() && !((JavaChangeInfoImpl)myChangeInfo).propagateExceptionsMethods.contains(caller); 
1," if (direction < PanEvent.PAN_FIRST || direction > PanEvent.PAN_LAST) { throw new IllegalArgumentException(""Bad value, "" + direction + "" for direction in "" + ""PanSupport.firePan()""); "," if (direction < PanEvent.PAN_FIRST || direction > PanEvent.PAN_LAST) { throw new IllegalArgumentException(""Bad value, "" + direction + "" for direction in "" + ""PanSupport.firePan()""); "
1, switch (featureID) { case GMFGraphPackage.CUSTOM_FIGURE__QUALIFIED_CLASS_NAME: return getQualifiedClassName(); case GMFGraphPackage.CUSTOM_FIGURE__CUSTOM_CHILDREN: return getCustomChildren(); , switch (featureID) { case GMFGraphPackage.CUSTOM_FIGURE__QUALIFIED_CLASS_NAME: return getQualifiedClassName(); case GMFGraphPackage.CUSTOM_FIGURE__CUSTOM_CHILDREN: return getCustomChildren(); 
0," for( AssociatedPair p : pairs ) { if( !isPixels ) { PerspectiveOps.convertNormToPixel(K, p.keyLoc.x, p.keyLoc.y, p.keyLoc); PerspectiveOps.convertNormToPixel(K, p.currLoc.x, p.currLoc.y, p.currLoc); "," StringBuffer sb = new StringBuffer(511); sb.append(""[method: ""); sb.append( srcMeth ); if (! srcMeth.endsWith("")"")) sb.append(""()""); sb.append(""] ""); sb.append( msg ); return sb.toString(); "
1, final String volumeGroup = blockDevInfo.getBlockDevice().getVolumeGroup(); final long free = blockDevInfo.getHost().getFreeInVolumeGroup(volumeGroup) / 1024; return Long.toString(free); , final String XXXXX = blockDevInfo.getBlockDevice().getVolumeGroup(); final long XXXXX = blockDevInfo.getHost().getFreeInVolumeGroup(XXXXX) / 1024; return Long.toString(XXXXX); 
0," super(""Goblin"", ""1/1 red Goblin creature token""); cardType.add(CardType.CREATURE); subtype.add(""Goblin""); color = ObjectColor.RED; power = new MageInt(1); toughness = new MageInt(1); "," sb.append(""DELETE FROM ""); table.getTableName().appendTo(sb); if (table.getJoined() != null) { sb.append("" USING""); table.getJoined().appendToRest(table.getTableName().getAlias(), sb); "
1, createLink = createLinkButton.getSelection(); browseButton.setEnabled(createLink); variablesButton.setEnabled(createLink); linkTargetField.setEnabled(createLink); setPageComplete(validatePage()); , createLink = createLinkButton.getSelection(); browseButton.setEnabled(createLink); variablesButton.setEnabled(createLink); linkTargetField.setEnabled(createLink); setPageComplete(validatePage()); 
0, int min = 1; int start = gr.getStart(); int end = gr.getEnd(); int extendedStart = start - extension; int extendedEnd = end + extension; if (extendedStart < min) { gr.setExtendedStart(min); ," try { ((ApplicationContextImpl) _remoteParticipant.getApplicationContext()).getRemoteCommunication().joinAnswer( _remoteParticipant.getId(), _localParticipant.getRemoteAddress(), answerSDP); "
0," AttachmentId aId = entity.getId(); attachments.put(aId, entity); if (attachmentIds.get(aId.getDocumentId()) == null) { attachmentIds.put(aId.getDocumentId(), new HashSet<AttachmentId>()); "," String consumer = url.getParameterAndDecoded(""consumer""); if (consumer == null || consumer.length() == 0) { throw new IllegalArgumentException(""Please input consumer parameter.""); "
0," String resourceId = context.getResourceId().encode(); if (logger.isDebugEnabled()) { logger.debug(""RIAttributeFinder: ["" + attributeType.toString() + ""] "" + attributeId + "", rid="" + resourceId); "," if (col <= 1) return def; Object o1 = this.getValueAt(row, col); Object o2 = this.getValueAt(row, col-1); if ((o1 == null) || (o2 == null)) return def; return (o1.equals(o2)) ? def : diff; "
1," if (mySimple == null) { Rectangle simpleFig = GMFGraphFactory.eINSTANCE.createRectangle(); mySimple = DiaDefSetup.newDescriptor(""SimpleParent"", simpleFig); addLabel(mySimple, simpleFig); "," if (mySimple == null) { Rectangle XXXXX = GMFGraphFactory.eINSTANCE.createRectangle(); mySimple = DiaDefSetup.newDescriptor(""SimpleParent"", XXXXX); addLabel(mySimple, XXXXX); "
1," this.onAwakening = awakening; event.getHttpServletRequest().setAttribute(DwrCometProcessor.ATTRIBUTE_SLEEP, true); synchronized (wakeUpCalledLock) { if (wakeUpCalled) { onAwakening.run(); "," this.onAwakening = awakening; event.getHttpServletRequest().setAttribute(DwrCometProcessor.ATTRIBUTE_SLEEP, true); synchronized (wakeUpCalledLock) { if (wakeUpCalled) { onAwakening.run(); "
1, if ( this.dataSource == null ) { final Object dataSource = configValues.get( Environment.DATASOURCE ); if ( DataSource.class.isInstance( dataSource ) ) { this.dataSource = (DataSource) dataSource; , if ( this.XXXXX == null ) { final Object XXXXX = configValues.get( Environment.DATASOURCE ); if ( DataSource.class.isInstance( XXXXX ) ) { this.XXXXX = (DataSource) XXXXX; 
1," super.selectTab(Math.max(0, Math.min(index, getWidgetCount() - 1))); if (index == 0) owner_.addStyleName(styles_.firstTabSelected()); else owner_.removeStyleName(styles_.firstTabSelected()); "," super.selectTab(Math.max(0, Math.min(index, getWidgetCount() - 1))); if (index == 0) owner_.addStyleName(styles_.firstTabSelected()); else owner_.removeStyleName(styles_.firstTabSelected()); "
0, if (!(parent instanceof ISecurePreferences)) return false; ISecurePreferences node = (ISecurePreferences) parent; String[] childrenNames = node.childrenNames(); return (childrenNames.length > 0); ," DialValueIndicator i1 = new DialValueIndicator(0); DialValueIndicator i2 = new DialValueIndicator(0); assertTrue(i1.equals(i2)); int h1 = i1.hashCode(); int h2 = i2.hashCode(); assertEquals(h1, h2); "
0," HandlerManager hm = userHandlerManagers.get(CurrentSession.getCallerTenantId()); if (hm == null) { hm = new HandlerManager(); userHandlerManagers.put(CurrentSession.getCallerTenantId(), hm); "," JpaSerializableApplicationData applicationData = (JpaSerializableApplicationData) manager.find(JpaApplicationData.class, id); if (applicationData != null) { applicationData.deserializeData(); "
0," super(model, controller); _selector = new CVSRepositorySelector(FPSController.getInstance().getRepositories(), null) { @Override public void apply() { super.apply(); updateModelFromWidget(); ", SnapshotVO snapshot = _snapshotDao.findById(snapshotId); if (snapshot != null && snapshot.getRemoved() == null && snapshot.getStatus() == Snapshot.Status.BackedUp) { return snapshot; 
0," String protocol = ""http""; String port = ""9000""; if (Play.configuration.getProperty(""https.port"") != null) { port = Play.configuration.getProperty(""https.port""); protocol = ""https""; "," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (value: ""); result.append(value); result.append(')'); return result.toString(); "
1," log.info(""Starting Tomcat - Web application""); boolean result = false; final ClassLoader originalClassLoader = Thread.currentThread().getContextClassLoader(); log.debug(""Webapp root: {"," log.info(""Starting Tomcat - Web application""); boolean result = false; final ClassLoader originalClassLoader = Thread.currentThread().getContextClassLoader(); log.debug(""Webapp root: {"
0, final FakereplaceTransformer[] transformers = new FakereplaceTransformer[this.transformers.length + 1]; for (int i = 0; i < this.transformers.length; ++i) { transformers[i] = this.transformers[i]; , if (property == PROPERTY_RESOLUTION) { if (element instanceof FeatureLaunchModel) { String location = ((FeatureLaunchModel) element).getResolutionValue(); return getLocationIndex(location); 
1, IStructuredSelection selection = (IStructuredSelection) fTreeViewer.getSelection(); if (selection.isEmpty() || selection.size() != 1) return null; return selection.getFirstElement(); , IStructuredSelection selection = (IStructuredSelection) fTreeViewer.getSelection(); if (selection.isEmpty() || selection.size() != 1) return null; return selection.getFirstElement(); 
0," output.writeCommonHeader(); output.println("" <table cellpadding='0' cellspacing='1'>""); output.println("" <caption><code>"" + inputFile.sourceFile.getPath() + ""</code></caption>""); ", Button b = (Button)e.widget; if (b.getSelection()) { dropDefaultOperation = DND.DROP_MOVE; dropOperation |= DND.DROP_MOVE; moveButton.setSelection(true); if (dropEnabled) { createDropTarget(); 
1," Object _application = getFieldValue(this, ""_application"", null); Field _contextDir = getAccessibleField(_application.getClass(), ""_contextDir""); try { _contextDir.set(_application, contextRoot); "," Object XXXXX = getFieldValue(this, ""XXXXX"", null); Field XXXXX = getAccessibleField(XXXXX.getClass(), ""XXXXX""); try { XXXXX.set(XXXXX, contextRoot); "
1, mockery.checking(new Expectations() { { oneOf(authorizationStrategy).authorize( (PrincipalActionContext) with(notNull ? contextWithPrincipalMatcher : contextWithNullPrincipalMatcher)); , mockery.checking(new Expectations() { { oneOf(authorizationStrategy).authorize( (PrincipalActionContext) with(notNull ? contextWithPrincipalMatcher : contextWithNullPrincipalMatcher)); 
1, ServiceLoader<SnappyShim> l = ServiceLoader.load(SnappyShim.class); SnappyShim s = l.iterator().next(); assertTrue(org.pentaho.hadoop.shim.mapr.SnappyShim.class.isAssignableFrom(s.getClass())); , ServiceLoader<SnappyShim> l = ServiceLoader.load(SnappyShim.claXXXXXXXXXX); SnappyShim XXXXX = l.iterator().next(); aXXXXXXXXXXertTrue(org.pentaho.hadoop.XXXXXhim.mapr.SnappyShim.claXXXXXXXXXX.iXXXXXAXXXXXXXXXXignableFrom(XXXXX.getClaXXXXXXXXXX())); 
0, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(LoanCalculatorTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , contextStack.resetBindingContext(this); defaultEvaluationContext = contextStack.getCurrentBindingContext(); topLevelVariables = contextStack.getCurrentBindingContext().getInScopeVariables(false); 
1, pingCount++; long now = System.currentTimeMillis(); for (AccountConnection state: connections.values()) { Connection connection = state.getConnection(); if (connection == null) { continue; , pingCount++; long XXXXX = System.currentTimeMillis(); for (AccountConnection state: XXXXXs.values()) { Connection XXXXX = state.getConnection(); if (XXXXX == null) { continue; 
0," switch (eContainerFeatureID()) { case GMFGenPackage.GEN_TOP_LEVEL_NODE__DIAGRAM: return eInternalContainer().eInverseRemove(this, GMFGenPackage.GEN_DIAGRAM__TOP_LEVEL_NODES, GenDiagram.class, msgs); "," IConfigurationElement config = element.getConfigurationElement(); String value = config.getAttribute(name); if (value == null) return defaultValue; return value.equalsIgnoreCase(""true""); "
0," StringBuffer strBuf = new StringBuffer(); strBuf.append(""SOAPFault ("" + elementType + ""):""); strBuf.append(""\nrequired="" + required); if (name != null) { strBuf.append(""\nname="" + name); "," this.append(""~(""); TextGenManager.instance().appendNodeText(this.getContext(), this.getBuffer(), SLinkOperations.getTarget(node, ""expression"", true), this.getSNode()); this.append("")""); "
1," if (session == null) { log.error(""Failed to load the Konakart config. JCR Session is null""); throw new RuntimeException(""Failed to load the Konakart config. JCR Session is null""); "," if (session == null) { log.error(""Failed to load the Konakart config. JCR Session is null""); throw new RuntimeException(""Failed to load the Konakart config. JCR Session is null""); "
1," String value = getDirectiveValue(headers, ConfigUtils.DIRECTIVE_PUBLISH_CONTEXT); return (value != null ? Boolean.valueOf(value).booleanValue() : ConfigUtils.DIRECTIVE_PUBLISH_CONTEXT_DEFAULT); "," String XXXXX = getDirectiveValue(headers, ConfigUtils.DIRECTIVE_PUBLISH_CONTEXT); return (XXXXX != null ? Boolean.XXXXXOf(XXXXX).booleanValue() : ConfigUtils.DIRECTIVE_PUBLISH_CONTEXT_DEFAULT); "
0," delay = (60000 - (System.currentTimeMillis() % 60000)) / 50; GMTOffset = 3600000 * timeZone; bukkitScheduler.scheduleSyncRepeatingTask(plugin, this, delay, 1200); this.plugin = plugin; ", AdapterFactoryLabelProvider labelProvider = new AdapterFactoryLabelProvider(adapterFactory); if (object instanceof EObject) { switch (columnIndex) { case 0: return labelProvider.getText(object); 
0," String oldHeight = height; height = newHeight; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, ProcessPackage.STATE_TYPE__HEIGHT, oldHeight, height)); "," URL archiveUrl; URLConnection urlConnection; try { archiveUrl = new URL(urlBase + archiveName); urlConnection = UrlHelper.openConnection(archiveUrl, proxyConfig, ""HEAD""); urlConnection.connect(); "
0," switch(kind){ case MIPS: return GetProperties.getMIPSCapacityInMIPS(ne, 0.0); case RAM: return GetProperties.getRAMCapacityInKB(ne, 0.0); case ROM: return GetProperties.getROMCapacityInKB(ne, 0.0); "," DefaultXYDataset d1 = new DefaultXYDataset(); DefaultXYDataset d2 = new DefaultXYDataset(); assertTrue(d1.equals(d2)); assertTrue(d2.equals(d1)); double[] x1 = new double[] {1.0, 2.0, 3.0"
0, for (int i = 0; i < tiles.length; i++) { for (int j = 0; j < tiles[i].length; j++) { IronUnit unit = tiles[i][j].getUnitOnTile(); if (unit != null) { unit.renderTileGfx(deltaTime); ," rootResource.registerChild(PathElement.pathElement(PROFILE, ""full""), Resource.Factory.create()); rootResource.registerChild(PathElement.pathElement(PROFILE, ""full-ha""), Resource.Factory.create()); "
1, final SimpleNode simpleNode = myTree.getNodeFor(event.getPath()); if (simpleNode instanceof AbstractDomElementNode) { ((AbstractDomElementNode)simpleNode).setExpanded(false); simpleNode.update(); , final SimpleNode XXXXX = myTree.getNodeFor(event.getPath()); if (XXXXX instanceof AbstractDomElementNode) { ((AbstractDomElementNode)XXXXX).setExpanded(false); XXXXX.update(); 
0, Document doc = new Document( new Element( resultRootName ) ); Element root = doc.getRootElement(); for ( Throwable tmp : findAllExceptions( e ) ) { root.addContent( buildExceptionElement( tmp ) ); ," String sign = getSign(duration); String unit = getGramaticallyCorrectName(duration, round); long quantity = getQuantity(duration, round); return applyPattern(sign, unit, quantity); "
1," Object objToInsert = getObjectToInsert(); List oldList = (List)property; int insertPos = getElementPositionInList(getElement(), oldList); if ( insertPos == -1 ) { insertPos = oldList.size(); "," Object objToInsert = getObjectToInsert(); List oldList = (List)property; int insertPos = getElementPositionInList(getElement(), oldList); if ( insertPos == -1 ) { insertPos = oldList.size(); "
0, TimeSeriesImpl timeSeries = new TimeSeriesImpl(name); int numTimestamps = timestamps.size(); if (numTimestamps != 0) { for (int i = 1; i < numTimestamps; i++) { timeSeries.addSample(0L); ," BitSet benzene = fingerprinter.getFingerprint(Molecules.createBenzene()); BitSet phenol = fingerprinter.getFingerprint(Molecules.createPhenol()); assertTrue(match(benzene, phenol)); "
0, int v = nn.intValue(); ArrayList<Integer> t = tabOrder.get(annots); if (t == null) { t = new ArrayList<Integer>(); int size = annots.size() - 1; for (int k = 0; k < size; ++k) { t.add(zero); ," Element element = super.toDsml( root ); ModifyRequest request = ( ModifyRequest ) getDecorated(); if ( request.getName() != null ) { element.addAttribute( ""dn"", request.getName().getName() ); "
1," super(resultCode, resultData, resultExtras, mRegistered ? TYPE_REGISTERED : TYPE_UNREGISTERED, ordered, sticky, mIIntentReceiver.asBinder()); mCurIntent = intent; mOrdered = ordered; "," super(resultCode, resultData, resultExtras, mRegistered ? TYPE_REGISTERED : TYPE_UNREGISTERED, ordered, sticky, mIIntentReceiver.asBinder()); mCurIntent = intent; mOrdered = ordered; "
1, DiskManagerFileInfo fileInfo = (DiskManagerFileInfo)cell.getDataSource(); long value = (fileInfo == null) ? 0 : fileInfo.getNbPieces(); if( !cell.setSortValue( value ) && cell.isValid() ) { return; , DiskManagerFileInfo XXXXX = (DiskManagerFileInfo)cell.getDataSource(); long XXXXX = (XXXXX == null) ? 0 : XXXXX.getNbPieces(); if( !cell.setSortValue( XXXXX ) && cell.isValid() ) { return; 
1, for (final IndexerSetupParticipant p : participants) { SafeRunner.run(new ISafeRunnable() { @Override public void handleException(Throwable exception) { CCorePlugin.log(exception); , for (final IndexerSetupParticipant p : participants) { SafeRunner.run(new ISafeRunnable() { @Override public void handleException(Throwable exception) { CCorePlugin.log(exception); 
0," LOGGER.log(Level.SEVERE, ""[Plugins] An error occurred in plug-in '""+plugin.getSymbolicName()+""', plug-in will be disabled."", error); removePlugin(plugin); try { plugin.rjStop(V_ERROR); "," IExtensionDelta[] cheatSheetDeltas = event.getExtensionDeltas(ICheatSheetResource.EXTENSION_NAMESPACE, CHEAT_SHEET_CONTENT); if (cheatSheetDeltas.length > 0) { cheatsheets = null; "
0," floorLabel.setText( """" + (position + 1) + "" of "" + gallery.getAdapter().getCount() ); selected = (Bitmap)gallery.getAdapter().getItem(position); floorpic.setImageBitmap( selected ); "," super(""p_triggers"", org.jooq.test.postgres.generatedclasses.Public.PUBLIC, org.jooq.util.postgres.PostgresDataType.getDefaultDataType(""trigger"")); setReturnParameter(RETURN_VALUE); "
0," Formula formula = FormulaFactory.getFormulaFor(value); if (!formula.isValid()) { return new ParseResult.Fail(""Formula in "" + getTokenName() + "" was not valid: "" + formula.toString(), context); "," SecurityManager securityManager = new SecurityManager(); AWTPermission awtPermission = new AWTPermission(""listenToAllAWTEvents"", null); securityManager.checkPermission(awtPermission); "
0, switch (featureID) { case GMFGenPackage.LABEL_OFFSET_ATTRIBUTES__X: setX((Integer)newValue); return; case GMFGenPackage.LABEL_OFFSET_ATTRIBUTES__Y: setY((Integer)newValue); return; ," String s = params.getStringValue(AVKey.URL); if (s == null) { String message = ""Shapefile URL not specified""; Logging.logger().severe(message); throw new IllegalArgumentException(message); "
0, final StaticStateGlobalOps globalOps = containingDocument.getStaticOps(); final LHHAAnalysis analysis = globalOps.getLabel(getPrefixedId()); return analysis != null && analysis.isLocal(); , Collection answer = new ArrayList(); Iterator iter = getChildNodes().iterator(); while (iter.hasNext()) { DestinationNode child = (DestinationNode) iter.next(); answer.addAll(child.removeValues()); 
0, ModuleRevisionId mrid = dd.getDependencyRevisionId(); if ((version == null || version.equals(mrid.getRevision())) && (branch == null || branch.equals(mrid.getBranch()))) { return dd; ," model.addModelChangeListener(new IRemovableEntryListener<IAnimalForm>() { @Override public void entryAdded(IAnimalForm form) { addAnimalFormView(basicUi, form); reset(selectionView); "
0, boolean deleteRequired; boolean checkingStatus; synchronized(this) { deleteRequired = persisted; persisted = false; checkingStatus = (state == State.STATE_COMPLETED && checkStatus); ended() ; ," int oldReplIdx = replIdx; replIdx = newReplIdx; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, ETriceGenPackage.ACTOR_INSTANCE__REPL_IDX, oldReplIdx, replIdx)); "
0," VCloudDirectorAdminApi api = requestsSendResponses(loginRequest, sessionResponse, edit, editResponse); assertEquals(api.getNetworkApi().edit(networkAdminHref, editNetwork()), editNetworkTask()); "," if (isSplit) { dividerLocation = splitPane.getDividerLocation(); remove(splitPane); splitPane.remove(mainComponent); add(mainComponent, BorderLayout.CENTER); isSplit = false; validate(); "
1," collectors = new ArrayList<String>(); this.conf = conf; portNo = conf.get(""chukwaCollector.http.port"", ""8080""); maxRetryRateMs = conf.getInt(RETRY_RATE_OPT, 15 * 1000); lastLookAtFirstNode = 0; "," collectors = new ArrayList<String>(); this.conf = conf; portNo = conf.get(""chukwaCollector.http.port"", ""8080""); maxRetryRateMs = conf.getInt(RETRY_RATE_OPT, 15 * 1000); lastLookAtFirstNode = 0; "
0," if (lastMapElement > MAP_INDEXED_POINT) throw new IllegalStateException(""Indexed points must be done before lines and polygons""); lastMapElement = MAP_INDEXED_POINT; rgnFile.setIndPointPtr(); "," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "
1, super.onResume(); ((Foursquared) getApplication()).requestLocationUpdates(true); if (mSearchHolder.results == null && mSearchTask == null) { mSearchTask = (SearchTask) new SearchTask().execute(); , super.onResume(); ((Foursquared) getApplication()).requestLocationUpdates(true); if (mSearchHolder.results == null && mSearchTask == null) { mSearchTask = (SearchTask) new SearchTask().execute(); 
0," if (resourceentry.getExtension().equalsIgnoreCase(""TIS"")) tileresources.put(resourceentry, Boolean.valueOf(ignoreoverride)); else resources.put(resourceentry, Boolean.valueOf(ignoreoverride)); "," Calendar c = Calendar.getInstance(); c.setTime(date); c.set(Calendar.HOUR_OF_DAY, 0); c.set(Calendar.MINUTE, 0); c.set(Calendar.SECOND, 0); c.set(Calendar.MILLISECOND, 0); return c.getTime(); "
0, final ByteArrayOutputStream baos = new ByteArrayOutputStream(sampleRate * 2 * 20); return new InputStream() { public int available() throws IOException { return inputStream.available(); ," Action action = entity.isTransient() ? Action.CREATED : Action.MODIFIED; articleRepository.save(entity); articleTagService.deleteUnusedTags(); articleHistorizer.historize(entity, action); "
1, SwingUtilities.invokeLater(new Runnable() { @Override public void run() { showCard(wikiPanel); wikiArea.requestFocus(); wikiArea.setCaretPosition(wikiArea.getText().length()); _editMode = true; , SwingUtilities.invokeLater(new Runnable() { @Override public void run() { showCard(wikiPanel); wikiArea.requestFocus(); wikiArea.setCaretPosition(wikiArea.getText().length()); _editMode = true; 
1," MockInitializer initializer = new MockInitializer() { public void init(Mock mockIDEBus) { mockIDEBus.expects(testCase.atLeastOnce()).method( ""executeAndWait"").withAnyArguments(); "," MockInitializer XXXXX = new MockInitializer() { public void init(Mock mockIDEBus) { mockIDEBus.expects(testCase.atLeastOnce()).method( ""executeAndWait"").withAnyArguments(); "
1," Tank t = dao.fetchLinks(dao.fetch(Tank.class, ""M1-A1""), ""motorman""); dao.deleteWith(t, ""motorman""); assertEquals(4, dao.count(Soldier.class)); assertEquals(1, dao.count(Tank.class)); "," Tank XXXXX = dao.feXXXXXchLinks(dao.feXXXXXch(Tank.class, ""M1-A1""), ""moXXXXXorman""); dao.deleXXXXXeWiXXXXXh(XXXXX, ""moXXXXXorman""); asserXXXXXEquals(4, dao.counXXXXX(Soldier.class)); asserXXXXXEquals(1, dao.counXXXXX(Tank.class)); "
1, final List<CacheListApp> activeApps = new ArrayList<CacheListApp>(LazyHolder.apps.length); for (final CacheListApp app : LazyHolder.apps) { if (app.isInstalled()) { activeApps.add(app); , final List<CacheListApp> activeApps = new ArrayList<CacheListApp>(LazyHolder.apps.length); for (final CacheListApp app : LazyHolder.apps) { if (app.isInstalled()) { activeApps.add(app); 
0, if( this.parent != null ) this.parent.children.remove( this ); this.qualifiedName = null; this.vsafeQualifiedName = null; this.parent = parent; if( parent != null ) { parent.children.add( this ); ," if (value==null) { combo.clearSelection(); if (combo.getSelectionIndex() != -1) { throw new IllegalArgumentException(""Attempted to clearSelection of Read Only PrintfWrapper "" + getFieldName()); "
1," RateMeasurement base = new BasicRateMeasurement(0, 100); RateMeasurement subj = new BasicRateMeasurement(50, 100); BasicRiskRatio or = new BasicRiskRatio(base, subj); assertFalse(or.isDefined()); "," RateMeasurement XXXXX = new BasicRateMeasurement(0, 100); RateMeasurement XXXXX = new BasicRateMeasurement(50, 100); BasicRiskRatio XXXXX = new BasicRiskRatio(XXXXX, XXXXX); assertFalse(XXXXX.isDefined()); "
0," String ident = """"; String xpath = basePath; List list = this.selectNodes(xpath); if(list.size()>0) { Element element = (Element)list.get(0); ident = element.getAttribute(""ident""); "," collapsiblePanelAttributes.set(CollapsiblePanelAttributes.switchType, ""server""); guardHttp(selenium).click(header); verifyAfterClick(); guardHttp(selenium).click(header); verifyBeforeClick(); "
1, if (data.keepExperience != null) return data.keepExperience; else if (cause.parent != null) { CauseSettings s = config.getSettings(cause.parent); if (s != null) return s.keepExperience(); , if (data.keepExperience != null) return data.keepExperience; elXXXXXe if (cauXXXXXe.parent != null) { CauXXXXXeSettingXXXXX XXXXX = config.getSettingXXXXX(cauXXXXXe.parent); if (XXXXX != null) return XXXXX.keepExperience(); 
0," switch (version) { case 1: return new blockObject(blockList.get(index - 1), (byte) (blockList.get(index) & 0xff)); default: return new blockObject(blockList.get(index), (byte) 0); "," if (!objectRefs.containsKey(item)) { byte[] itemBytes = item.getData(); byte[] itemHeader = getObjectHeader(BinaryPlist.DATA, itemBytes.length); store(item, itemHeader, itemBytes); "
1, for (Image image : imageService.getImages()) { File file = imageUtils.getImageFile(image); image.setFileSize(file.length()); BufferedImage rendImage; try { rendImage = ImageIO.read(file); , for (Image image : imageService.getImages()) { File XXXXX = imageUtils.getImageFile(image); image.setFileSize(XXXXX.length()); BufferedImage rendImage; try { rendImage = ImageIO.read(XXXXX); 
0, UserDTO user = new UserDTO(1); user.setCompany(new CompanyDTO(1)); OrderDTO order = new OrderDTO(); order.setBaseUserByUserId(user); order.setOrderPeriod(new OrderPeriodDTO(2)); return order; ," return (Boolean)execute(new RedisCallback<Jedis>() { public Object doInRedis(Jedis redis) { if (transaction != null) { return transaction.hsetnx(redisKey, key, o.toString()).equals(QUEUED); "
1, while(in.hasRemaining() && _state != State.ERROR) { switch(_state) { case AWAITING_MAJOR: _state = in.get() == MAJOR_VERSION ? State.AWAITING_MINOR : State.ERROR; if(!in.hasRemaining()) { break; , while(in.hasRemaining() && _state != State.ERROR) { switch(_state) { case AWAITING_MAJOR: _state = in.get() == MAJOR_VERSION ? State.AWAITING_MINOR : State.ERROR; if(!in.hasRemaining()) { break; 
0, loadDevices(); ListIterator<Device> deviceIter = getAllDevices().listIterator(); while (deviceIter.hasNext()) { Device d = deviceIter.next(); if (d.equals(device)) { deviceIter.remove(); , sourceColumnComboBox.removeAllItems(); targetColumnComboBox.removeAllItems(); labelColumnComboBox.removeAllItems(); if (columnNames.length > 0) { labelColumnComboBox.addItem(NO_LABEL); 
1," this.name = name; this.id = id; this.priority = priority; this.keyExchange = keyExchange; this.cipher = cipher; this.exportable = cipher.exportable; if (name.endsWith(""_MD5"")) { macAlg = M_MD5; "," this.name = name; this.id = id; this.priority = priority; this.keyExchange = keyExchange; this.cipher = cipher; this.exportable = cipher.exportable; if (name.endsWith(""_MD5"")) { macAlg = M_MD5; "
0," DialogFixture dialog = frameFixture.dialog(Timeout.timeout(10000)); assertEquals(text, dialog.label(""OptionPane.label"").text()); dialog.button(JButtonMatcher.withText(""OK"")).click(); "," return this.sectionQuestionDetail.getQuestionId() == sectionQuestionDetail.getQuestionId() && equalsIgnoreCase(this.sectionQuestionDetail.getText(), sectionQuestionDetail.getText()); "
0," int nSize = 0; int nPrefixSize = 0; String paramName = elem.getAttributeValue(""out""); String size = elem.getAttributeValue(""size""); if(size != null) { nSize = Integer.parseInt(size); "," assert isEditable() : ""Cannot get a FieldUpdater type if not marked as @Editable""; return context.getTypeOracle().findType(Name.getSourceNameForClass(method.getAnnotation(Editable.class).value())); "
0, return new IPartListener() { public void partOpened(IWorkbenchPart part) { if (part instanceof AcceleoEditor) { AcceleoEditor editor = (AcceleoEditor)part; updateViewTypes(editor); ," final MutableFudgeMsg msg = serializer.newMessage(); FudgeSerializer.addClassHeader(msg, Currency.class); serializer.addToMessage(msg, CURRENCY_FIELD_NAME, null, object.getCode()); return msg; "
0," List<SortKey<Zip>> keys = new ArrayList<SortKey<Zip>>(); for (Zip c : postalCodes.values()) { SortKey<Zip> sortKey = sort.createSortKey(c, c.getLabel().getText()); keys.add(sortKey); ", if (this == otherType) return true; if (otherType == null) return false; if (this.firstBound != null && this.firstBound.isArrayType()) { if (this.firstBound.isCompatibleWith(otherType)) return true; 
1," String out=""""; for (int i = 0; i < feature.getNumberOfAttributes(); i++) { Object attribute = feature.getAttribute(i); if (!(attribute instanceof Geometry)) { out += ""\t"" + attribute; "," StrXXXXXng out=""""; for (XXXXXnt XXXXX = 0; XXXXX < feature.getNumberOfAttrXXXXXbutes(); XXXXX++) { Object attrXXXXXbute = feature.getAttrXXXXXbute(XXXXX); XXXXXf (!(attrXXXXXbute XXXXXnstanceof Geometry)) { out += ""\t"" + attrXXXXXbute; "
0," double result = 0.0D; for (int column = dataset.getColumnCount() - 1; column >= 0; column--) { Number value = dataset.getValue(series, column); if (value != null) result += value.doubleValue(); "," Mock catalogServiceMock = mock(CatalogService.class); CartBean bean = new CartBean((CatalogService) catalogServiceMock.proxy()); assertEquals(AbstractBean.SUCCESS, bean.viewCart()); "
1," logger.finest(""update of: "" + this.getThisFile().getAbsolutePath()); if (thisFile.lastModified() != lastRefreshed || mHasDirectoryChildren) { if (thisFile.exists() == false) { this.gone = true; "," logger.finest(""update of: "" + this.getThisFile().getAbsolutePath()); if (thisFile.lastModified() != lastRefreshed || mHasDirectoryChildren) { if (thisFile.exists() == false) { this.gone = true; "
1," final WebResource rootResource = resource( _resourcePath ); final String actual = rootResource.get( String.class ); Assert.assertNotNull( actual ); Assert.assertEquals( actual, TestData.MANAGED ); "," final WebResource XXXXX = resource( _resourcePath ); final String XXXXX = XXXXX.get( String.class ); Assert.assertNotNull( XXXXX ); Assert.assertEquals( XXXXX, TestData.MANAGED ); "
0," Model m = model( ""A rdfs:subClassOf B; B rdfs:subClassOf C"" ); subClassClosure( m ); assertIsoModels( model( ""A rdfs:subClassOf B; B rdfs:subClassOf C; A rdfs:subClassOf C"" ), m ); "," long totalSlept = 0; try { if (totalSlept >= killAfterSeconds) { if (ffmpeg != null) { logger.finest(""ffmpeg not completed after "" + totalSlept + ""s, killing""); ffmpeg.destroy(); return; "
0," Person person = new Person(""person1"", new Date()); manager.create(person); manager.delete(person.getId()); Person persisted = manager.retrieve(person.getId()); Assert.assertNull(persisted); "," Exception ex = new Exception(""Test""); ConcurrentRuntimeException cex = ConcurrentUtils .extractCauseUnchecked(new ExecutionException(ex)); assertSame(""Wrong cause"", ex, cex.getCause()); "
0," try { final String form = txt.startsWith(""%"") ? txt : ""%""+txt; final String format = String.format(form, templateFormatNumber); formatLabel.setText("" ""+format+"" ""); layout(); return true; "," individuals(a, b, c); objectProperties(p, q); kb.addDisjointProperty(p, q); kb.addPropertyValue( p, a, b ); kb.addPropertyValue( q, a, c ); assertTrue( kb.isDifferentFrom( b, c ) ); "
1," Real position = Real.valueOf(0.0); for(Entity e : algorithm.getTopology()) { e.getProperties().put(EntityType.CANDIDATE_SOLUTION, Vector.newBuilder().repeat(dimensions, position).build()); "," Real position = Real.valueOf(0.0); for(Entity e : algorithm.getTopology()) { e.getProperties().put(EntityType.CANDIDATE_SOLUTION, Vector.newBuilder().repeat(dimensions, position).build()); "
1," StringSelection stringSelection = new StringSelection(logText.getText()); Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard(); clipboard.setContents(stringSelection, this); "," StringSelection XXXXX = new StringSelection(logText.getText()); Clipboard XXXXX = Toolkit.getDefaultToolkit().getSystemClipboard(); XXXXX.setContents(XXXXX, this); "
1," super.performApply(config); if (fAttachMode) { config.setAttribute(IPTPLaunchConfigurationConstants.ATTR_DEBUGGER_START_MODE, IPTPLaunchConfigurationConstants.DEBUGGER_MODE_ATTACH); "," super.performApply(config); if (fAttachMode) { config.setAttribute(IPTPLaunchConfigurationConstants.ATTR_DEBUGGER_START_MODE, IPTPLaunchConfigurationConstants.DEBUGGER_MODE_ATTACH); "
1," RemoteViews view = new RemoteViews(mContext.getPackageName(), R.layout.widget_loading); view.setTextViewText(R.id.loading_text, mContext.getString(R.string.widget_loading)); return view; "," RemoteViews XXXXX = new RemoteViews(mContext.getPackageName(), R.layout.widget_loading); XXXXX.setTextViewText(R.id.loading_text, mContext.getString(R.string.widget_loading)); return XXXXX; "
0," RootUtils.runCommand(""rm /system/app/Superuser.*"", true); RootUtils.runCommand(""rm /system/app/SuperSU.*"", true); RootUtils.runCommand(""rm /system/app/SuperSU_Pro.*"", true); return true; ", if (config.getTypeConversions() != null) { String type = (String) getContext().getDataModel().getJunkYard().getValue(config.getTypeParameter()); if (type == null) { type = config.getDefaultType(); 
0, ISOMsg m = (ISOMsg) logList.getSelectedValue(); if (m != null) { JFrame f = new JFrame(m.toString()); ISOMsgPanel p = new ISOMsgPanel(m); f.getContentPane().add(p); f.pack(); f.show(); , ResourceBundle bundle = null; if (ourBundle != null) bundle = ourBundle.get(); if (bundle == null) { bundle = ResourceBundle.getBundle(BUNDLE); ourBundle = new SoftReference<ResourceBundle>(bundle); 
0," String positionInfo = e.getLine() > 0 && e.getColumn() > 0 ? "" near line "" + e.getLine() + "", column "" + e.getColumn() : """"; return new QuerySyntaxException( e.getMessage() + positionInfo, hql ); "," SessionState state = ((JetspeedRunData) data).getPortletSessionState(((JetspeedRunData) data).getJs_peid()); if (!readSiteForm(data, state)) return; state.setAttribute(""mode"", ""groups""); "
1," if(yposition.endsWith(""%"")) { binfo.backgroundYPositionAbsolute = false; try { binfo.backgroundYPosition = (int) Double.parseDouble(yposition.substring(0, yposition.length() - 1).trim()); "," if(yposition.endsWith(""%"")) { binfo.backgroundYPositionAbsolute = false; try { binfo.backgroundYPosition = (int) Double.parseDouble(yposition.substring(0, yposition.length() - 1).trim()); "
0," final String name = ""keyName""; KeyName kn = factory.newKeyName(name); assertEquals(name, kn.getName()); try { kn = factory.newKeyName(null); fail(""Should raise a NPE for null key name""); "," synchronized( mMediaPath ) { for( MediaVO mediaVO : mMediaPath ) { if( mediaVO.bitmapKey != null ) { canvas.drawBitmap( sBitmapCache.get(mediaVO.bitmapKey), mediaVO.x, mediaVO.y, defaultPaint ); "
0," if (mContext.checkCallingOrSelfPermission( android.Manifest.permission.SHUTDOWN) != PackageManager.PERMISSION_GRANTED) { throw new SecurityException(""Requires SHUTDOWN permission""); "," PelopsException pelopsException = translator.translate(new org.apache.cassandra.thrift.NotFoundException()); assertEquals(""Translation failed"", NotFoundException.class, pelopsException.getClass()); "
1," double boost = 2.2D; if(world.getBlockMetadata(i, j, k) == 2) boost = 2.65D; double mX = Math.abs(entity.motionX); double mZ = Math.abs(entity.motionZ); if(mX < 0.3D) { entity.motionX *= boost; "," double XXXXX = 2.2D; if(world.getBlockMetadata(i, j, k) == 2) XXXXX = 2.65D; double XXXXX = Math.abs(entity.motionX); double XXXXX = Math.abs(entity.motionZ); if(XXXXX < 0.3D) { entity.motionX *= XXXXX; "
1," try { localizedString.getPreferredOrBestLocalizedMappingFor(null); fail(""LocalizedString get most appropriate value for should have thrown an IllegalArgumentException with a null argument""); "," try { localizedString.getPreferredOrBestLocalizedMappingFor(null); fail(""LocalizedString get most appropriate value for should have thrown an IllegalArgumentException with a null argument""); "
0," Object[] arr = (Object[]) object; Map issueParams = (Map) arr[1]; return arr[0] instanceof String && issueParams.containsKey(""summary"") && issueParams.containsKey(""description""); ", this.reasoner = reasoner; this.extractor = extractor; OWLOntology ontology = reasoner.getRootOntology(); for (OWLOntology ont : ontology.getImportsClosure()) { extractor.addOntology( ont ); 
0," IRepositoryConfiguration repositoryConfiguration = type.getRepositoryConfiguration(); return new File(folder, repositoryConfiguration.getMainFileName() + repositoryConfiguration.getFileExtension()); "," PDFStructElem structElem = mock(PDFStructElem.class); controller.addTableHeaderScopeAttribute(structElem, Scope.COLUMN); verify(structElem, nTimes).put(eq(ATTRIBUTE_ENTRY), any()); "
0, this.theConsole = theConsole; this.stateValues = stateValues; if ((stateValues != null && stateValues.isSilent() == false) && theConsole.getConsole() == null) { throw MESSAGES.noConsoleAvailable(); ," long start = System.currentTimeMillis(); this.talker.send(this.data, this.data2); while (!this.receptor.isStarted()) { if (System.currentTimeMillis() - start > this.millisTimeout) { return false; "
0, this.theConsole = theConsole; this.stateValues = stateValues; if ((stateValues != null && stateValues.isSilent() == false) && theConsole.getConsole() == null) { throw MESSAGES.noConsoleAvailable(); ," String patternString = parameterizedName.replaceAll(""_"", ""(.*)""); Pattern pattern = Pattern.compile(patternString); Matcher matcher = pattern.matcher(invokingString); return matcher; "
0," super(""mavenInstallFileWizardPage""); this.file = file; this.setTitle(Messages.MavenInstallFileArtifactWizardPage_title); this.setDescription(Messages.MavenInstallFileArtifactWizardPage_desc); "," if (message == null) return null; return new ScriptBuilder().functionCall(""O$.addGlobalMessage"", message.getSummary(), message.getDetail(), getMessageSeverity(message)).semicolon(); "
1, super(part); setText(TEXT); setId(ID); setToolTipText(Messages.DefaultEditPartSizeAction_1); setImageDescriptor(IArchimateImages.ImageFactory.getImageDescriptor(IArchimateImages.ICON_DEFAULT_SIZE)); , super(part); setText(TEXT); setId(ID); setToolTipText(Messages.DefaultEditPartSizeAction_1); setImageDescriptor(IArchimateImages.ImageFactory.getImageDescriptor(IArchimateImages.ICON_DEFAULT_SIZE)); 
0," Tree tree = new Tree( composite, SWT.NONE ); tree.addTreeListener( mock( TreeListener.class ) ); assertTrue( tree.isListening( SWT.Expand ) ); assertTrue( tree.isListening( SWT.Collapse ) ); "," MessageDialogWithToggle md = new MessageDialogWithToggle(Display.getCurrent().getActiveShell(), displayName, null, displayName, MessageDialog.QUESTION, new String[] {""Ok"", ""Cancel"""
1, removeMouseListener(mouseListener); removeMouseMotionListener(mouseListener); List<FGEView<?>> views = new ArrayList<FGEView<?>>(contents.values()); for (FGEView<?> v : views) { v.delete(); , removeMouseListener(mouseListener); removeMouseMotionListener(mouseListener); List<FGEView<?>> views = new ArrayList<FGEView<?>>(contents.values()); for (FGEView<?> v : views) { v.delete(); 
0," TimeBoundary tb = new TimeBoundary(5, 10); assertTrue(tb.getStart() == 5); assertTrue(tb.getEnd() == 10); assertTrue(tb.inBoundary(6)); assertFalse(tb.inBoundary(4)); assertFalse(tb.inBoundary(-4)); "," String tenantDomain = MultitenantConstants.SUPER_TENANT_DOMAIN_NAME; if (username.contains(""@"") && !isEmailUserName()) { tenantDomain = username.substring(username.lastIndexOf('@') + 1); "
0, if (policy.mRequireEncryption) { int encryptionStatus = getDPM().getStorageEncryptionStatus(); if (encryptionStatus == DevicePolicyManager.ENCRYPTION_STATUS_UNSUPPORTED) { return false; ," SampleResult result = new SampleResult(); result.setSampleLabel(getName()); final String filename = getFilename(); if (filename.length() > 0){ result.setSamplerData(""File: ""+filename); "
0, String eventSourcePath = getConfigurationPath() + RegistryConstants.PATH_SEPARATOR + name; try { if (registry.resourceExists(eventSourcePath)) { registry.delete(eventSourcePath); ," HostnameVerifier hostnameVerifier = new HostnameVerifier() { public boolean verify(final String hostname, final SSLSession session) { Log.debug(""Void hostname verification OK""); return true; "
0," int msgkey = e.getMsg(); this.msg = """"; if ((msgkey == SaveEvent.PROGRESS_BEGIN) || (msgkey == SaveEvent.PROGRESS_FINISHED) || (msgkey == SaveEvent.SAVED)) { this.msg = """"; return; "," LoanInterestCalculator loanInterestCalculator = loanInterestCalculatorFactory.create(InterestType.FLAT, false); assertThat(loanInterestCalculator, is(instanceOf(FlatLoanInterestCalculator.class))); "
0," UIUtil.copyToClipboard(display, durableLockingID); MessageDialog.openInformation(getShell(), TITLE, ""The following area ID has been copied to the clipboard:\n"" + durableLockingID); ", if(mainActivity == null) throw new RuntimeException(__msg1); if(applicationPackage == null) throw new RuntimeException(__msg2); if(adb == null) throw new RuntimeException(__msg3); 
1, int result = super.hashCode(); result = 31 * result + (parents != null ? parents.hashCode() : 0); result = 31 * result + (members != null ? members.hashCode() : 0); return result; , int XXXXX = super.hashCode(); XXXXX = 31 * XXXXX + (parents != null ? parents.hashCode() : 0); XXXXX = 31 * XXXXX + (members != null ? members.hashCode() : 0); return XXXXX; 
0," return this.sectionQuestionDetail.getQuestionId() == sectionQuestionDetail.getQuestionId() && equalsIgnoreCase(this.sectionQuestionDetail.getText(), sectionQuestionDetail.getText()); ", int numCorrespondences = 0; for ( final Bead bead : view.getBeadStructure().getBeadList() ) if ( bead.getRANSACCorrespondence().size() > 0 ) ++numCorrespondences; return numCorrespondences; 
1," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," EditorCell XXXXX = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, XXXXX, editorContext); return XXXXX; "
0," String arg = """"; switch (file) { case Site: arg = ""-s""; break; case Default: arg = ""-d""; break; case Core: arg = ""-c""; break; case Hdfs: arg = ""-h""; break; case Mapred: arg = ""-m""; break; ", if(enabled == this.enabled) return; this.enabled = enabled; if (enabled) { viewSelection.setValueIsAdjusting(false); viewSelection.addListSelectionListener(getViewSelectionListener()); 
1," Graphics2D g = (Graphics2D) graphics; RenderingHints currentHints = g.getRenderingHints(); currentHints.put(RenderingHints.KEY_TEXT_ANTIALIASING, RenderingHints.VALUE_TEXT_ANTIALIAS_ON); "," Graphics2D XXXXX = (Graphics2D) XXXXXraphics; RenderinXXXXXHints XXXXX = XXXXX.XXXXXetRenderinXXXXXHints(); XXXXX.put(RenderinXXXXXHints.KEY_TEXT_ANTIALIASING, RenderinXXXXXHints.VALUE_TEXT_ANTIALIAS_ON); "
0, switch (featureID) { case RoomPackage.COMPOUND_PROTOCOL_CLASS__SUB_PROTOCOLS: getSubProtocols().clear(); getSubProtocols().addAll((Collection<? extends SubProtocol>)newValue); return; ," if (title == null) throw new NullPointerException(MessageLocalization.getComposedMessage(""title.cannot.be.null"")); PdfLayer layer = new PdfLayer(title); writer.registerLayer(layer); return layer; "
0," PhoneNumber gbNumber = new PhoneNumber(); gbNumber.setCountryCode(44).setNationalNumber(8431231234L); assertEquals(PhoneNumberUtil.PhoneNumberType.SHARED_COST, phoneUtil.getNumberType(gbNumber)); ", final DefinitionSite res = new DefinitionSite(); res.kind = definitionKind; res.sourceMethod = sourceMethod; res.lineNumber = lineNumber; res.definedByMethod = definedByMethod; return res; 
0," if (e.isCancelled()) return; if (new PConfManager(e.getPlayer()).getBoolean(""jailed"")) { e.getPlayer().sendMessage(ChatColor.RED + ""You are jailed and may not teleport.""); e.setCancelled(true); "," Border b = (Border) UIManager.get(""Nb.Editor.Toolbar.border""); toolbar.setBorder(b); if (UIUtils.isAquaLookAndFeel()) { toolbar.setBackground(UIManager.getColor(""NbExplorerView.background"")); "
0, ViewGroup.MarginLayoutParams params = (ViewGroup.MarginLayoutParams) view.getLayoutParams(); return view.getWidth() + (includeMargins ? params.leftMargin + params.rightMargin : 0); ," TypeAwareStopFilter stopFilter = new TypeAwareStopFilter(luceneMatchVersion, input, stopWords, ignoreCase); stopFilter.setEnablePositionIncrements(enablePositionIncrements); return stopFilter; "
1," Properties properties = config.getProp(); properties.setProperty(""org.apache.ws.security.crypto.merlin.file"", properties.getProperty(""org.apache.ws.security.crypto.merlin.file"")); "," Properties XXXXX = config.getProp(); XXXXX.setProperty(""org.apache.ws.security.crypto.merlin.file"", XXXXX.getProperty(""org.apache.ws.security.crypto.merlin.file"")); "
0," String tempFileName = fileName; int i = 1; String tempSubdir = null; while (myTempFileNames.contains(tempFileName)) { tempSubdir = String.valueOf(i++); tempFileName = tempSubdir + ""/"" + fileName; "," log.info(""Run state changed: "" + event.getEventMessage()); for (ResponderService responder : getResponderServices()) { if (responder.respondsTo(event)) { responder.generateResponse(event); "
0, dataView.setDataDividerLocation(); dataView.setAnnotationDividerLocation(); transferAnnotation(true); setVisible(false); dataView.stopGetz(); dataView.dispose(); BigPane.srsFrame = null; dispose(); , TestSuite testSuite = new TestSuite(); testSuite.addTestSuite(AddPageNUTest.class); testSuite.addTestSuite(AddPortletNUTest.class); testSuite.addTestSuite(TearDownPageTest.class); return testSuite; 
0," pack(); mProblemTextArea.setText(""""); String email = mEmailAddressTextField.getText(); setVisible(true); if (email != null && email.length() != 0) { mProblemTextArea.requestFocusInWindow(); ", URL entry = bundle.getEntry(entryPath); File absoluteFile; if (entry != null) { try { entry = FileLocator.toFileURL(entry); if (entry != null) { absoluteFile = new Path(entry.getPath()).toFile(); 
0, if (this.meta != null) meta.dispose(); if (this.body != null) body.dispose(); if (this.options != null) options.dispose(); this.meta = null; this.body = null; this.options = null; super.dispose(); , if (startField == null) { final DateFormatter dateFormatter = new DateFormatter(new SmartTimeFormat()); startField = new JFormattedTextField(dateFormatter); dateFormatter.install(startField); 
1," MonthDay base = new MonthDay(6, 6, COPTIC_UTC); LocalDate test = base.toLocalDate(2009); assertEquals(new LocalDate(2009, 6, 6, COPTIC_UTC), test); try { base.toLocalDate(0); fail(); "," MonthDay XXXXX = new MonthDay(6, 6, COPTIC_UTC); LocalDate XXXXX = XXXXX.toLocalDate(2009); assertEquals(new LocalDate(2009, 6, 6, COPTIC_UTC), XXXXX); try { XXXXX.toLocalDate(0); fail(); "
1," KahluaConverterManager manager = new KahluaConverterManager(); KahluaNumberConverter.install(manager); Object object = manager.fromJavaToLua(123L); assertEquals(object, new Double(123)); "," KahluaConverterManager XXXXX = new KahluaConverterManager(); KahluaNumberConverter.install(XXXXX); Object XXXXX = XXXXX.fromJavaToLua(123L); assertEquals(XXXXX, new Double(123)); "
0," FormWorkEffortQuery fweq = new FormWorkEffortQuery(); model.addAttribute(""formworkeffortquery"", fweq); addDateTimeFormatPatterns(model); return ""workeffortquery/findWorkEfforts""; "," if (request instanceof PortletRequest && response instanceof PortletResponse) { return new PortletTilesRequestContext( context, (PortletRequest) request, (PortletResponse) response); "
1, if (!(parent instanceof ISecurePreferences)) return false; ISecurePreferences node = (ISecurePreferences) parent; String[] childrenNames = node.childrenNames(); return (childrenNames.length > 0); , if (!(parent instanceof ISecurePreferences)) return false; ISecurePreferences node = (ISecurePreferences) parent; String[] childrenNames = node.childrenNames(); return (childrenNames.length > 0); 
1," if (LOG_TO_CONSOLE) System.err.println(""Sweeping ""+System.getProperty(""java.io.tmpdir"")+"" every ""+interval+""ms""); timer.scheduleAtFixedRate(new TimerTask() { public void run() { Sweeper.this.run(); "," if (LOG_TO_CONSOLE) System.err.println(""Sweeping ""+System.getProperty(""java.io.tmpdir"")+"" every ""+interval+""ms""); timer.scheduleAtFixedRate(new TimerTask() { public void run() { Sweeper.this.run(); "
1, StringBuffer sb = new StringBuffer(); boolean first = true; selectedItems = dialog.getSelectedGroups(); for (AnalysisGroupTreeModel model : selectedItems) { if (first) { first = false; , StringBuffer XXXXX = new StringBuffer(); boolean XXXXX = true; selectedItems = dialog.getSelectedGroups(); for (AnalysisGroupTreeModel model : selectedItems) { if (XXXXX) { XXXXX = false; 
1," view = new CodeGeneratorDialog(generatorSelector.getView(), clessSelector .getView()); initBindings(); view.pack(); view.setModal(true); centerView(); makeCloseableOnEscape(); view.setVisible(true); "," view = new CodeGeneratorDialog(generatorSelector.getView(), clessSelector .getView()); initBindings(); view.pack(); view.setModal(true); centerView(); makeCloseableOnEscape(); view.setVisible(true); "
0, token_source = tm; token = new Token(); jj_ntk = -1; jj_gen = 0; for (int i = 0; i < 28; i++) jj_la1[i] = -1; for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls(); ," if (StringHelper.EqOp(fieldName, ""SIZE"") || StringHelper.EqOp(fieldName, ""USED"") || StringHelper.EqOp(fieldName, ""COMMITTED"")) { return NumericConditionRelationAutoCompleter.INSTANCE; "
1," this( groupId, name, version, type, scopeString == null ? ArtifactScopeEnum.DEFAULT_SCOPE : ArtifactScopeEnum.valueOf( scopeString ), classifier, artifactUri, why, resolved, error ); "," this( groupId, name, version, type, scopeString == null ? ArtifactScopeEnum.DEFAULT_SCOPE : ArtifactScopeEnum.valueOf( scopeString ), classifier, artifactUri, why, resolved, error ); "
0," JHotDrawImageCanvas canvas = findCanvas(getContentPane()); if (canvas == null) throw new IllegalArgumentException(""Cannot find JHotDrawImageCanvas""); return canvas.getLocationOnScreen().y; "," List opts = new LinkedList(); opts.add(new Option(""rtj-debug"", ""RTJ debug (interactive method inspecyion), with the help of Pointer Analysis"") { public void action() { RTJ_DEBUG = true; "
1, int firstCounter; int start; int end; if(oddPattern){ int firstElementStart = this.startEnd[0] - 1; while (firstElementStart >= 0 && !row.get(firstElementStart)) { firstElementStart--; , int firstCounter; int start; int end; if(oddPattern){ int XXXXX = this.startEnd[0] - 1; while (XXXXX >= 0 && !row.get(XXXXX)) { XXXXX--; 
1, super.init(); try { URL resource = null; ZipInputStream zip = null; try { resource = new URL(getCodeBase().toExternalForm() + dictionaryFile); zip = new ZipInputStream(resource.openStream()); , super.init(); try { URL XXXXX = null; ZipInputStream XXXXX = null; try { XXXXX = new URL(getCodeBase().toExternalForm() + dictionaryFile); XXXXX = new ZipInputStream(XXXXX.openStream()); 
0," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; ", Vector[] newCells = new Vector[cells.length + 1]; Color[] newColors = new Color[colors.length + 1]; for ( int i = 0; i < cells.length; i++ ) { newCells[i] = cells[i]; newColors[i] = colors[i]; 
1, ScopeDAO scopeDAO = _dao.getScope(correlationSet.scopeInstance); CorrelationSetDAO cs = scopeDAO.getCorrelationSet(correlationSet.declaration.name); return cs.getValue() != null; , ScopeDAO XXXXX = _dao.getScope(correlationSet.scopeInstance); CorrelationSetDAO XXXXX = XXXXX.getCorrelationSet(correlationSet.declaration.name); return XXXXX.getValue() != null; 
0, int offset1 = buffer.getShort (0) & 0xFFFF; int offset2 = buffer.getShort (offset1 + 2) & 0xFFFF; return ((buffer.getShort (offset1 + offset2 + 4) & 0xFFFF) + offset1 + offset2 + 6); ," super.dumpSettings(); Message.debug(""\t\tm2compatible: "" + isM2compatible()); Message.debug(""\t\tivy patterns:""); for (String p : getIvyPatterns()) { Message.debug(""\t\t\t"" + p); "
1," this.lambda = lambda; trace = new ImageBuffer(width, height, depth, channels); buffer01 = new ImageBuffer(width, height, depth, channels); average = new ImageBuffer(width, height, depth, channels); "," this.lambda = lambda; trace = new ImageBuffer(width, height, depth, channels); buffer01 = new ImageBuffer(width, height, depth, channels); average = new ImageBuffer(width, height, depth, channels); "
1, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(SocialTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , TestSuite XXXXX = new TestSuite(); XXXXX.addTest(LoginTests.suite()); XXXXX.addTest(SocialTestPlan.suite()); XXXXX.addTestSuite(StopSeleniumTest.class); return XXXXX; 
0," if (fullyQualifiedName.indexOf('$') != -1) fullyQualifiedName = fullyQualifiedName.replace('$', '.'); try { IType type = project.findType(fullyQualifiedName); return type != null && type.exists(); "," if(expression.getName().equalsIgnoreCase(""in"")){ final List<Expression> values = expression.getParameters(); for(int i=1,n=values.size();i<n;i++){ choices.add(values.get(i).evaluate(null)); "
1," User staff; if (staffId != null) { staff = motechUserRepository.updateUser(getStaffBySystemId(staffId), new WebStaff(firstName, lastName, phone, staffType)); return userService.saveUser(staff,null); "," User staff; if (staffId != null) { staff = motechUserRepository.updateUser(getStaffBySystemId(staffId), new WebStaff(firstName, lastName, phone, staffType)); return userService.saveUser(staff,null); "
1, qe.setNpcQuestData(203659).addOnQuestStart(questId); qe.setNpcQuestData(203659).addOnTalkEvent(questId); qe.addOnQuestFinish(questId); qe.setQuestBonusType(InventoryBonusType.COIN).add(questId); , qe.setNpcQuestData(203659).addOnQuestStart(questId); qe.setNpcQuestData(203659).addOnTalkEvent(questId); qe.addOnQuestFinish(questId); qe.setQuestBonusType(InventoryBonusType.COIN).add(questId); 
0, AbstractButton b = (AbstractButton) e.getSource(); ButtonModel model = b.getModel(); if (b.isRolloverEnabled() && !SwingUtilities.isLeftMouseButton(e)) { model.setRollover(true); ," List<Header> headers = new ArrayList<Header>(); headers.add(new RestData.Header(""Content-Type"", ""application/json; charset=UTF-8"")); assertEquals(ContentType.parseCharset(headers), ""UTF-8""); "
0," int max = size(); StringBuffer buf = new StringBuffer(); buf.append(""{""); for (int i = 0; i < max; ++i) { if (keyTable[i] != null) { buf.append(keyTable[i]).append(""->"").append(valueTable[i]); "," this(id, renderType, interpolate); setWidth(ii.getIconWidth()); setHeight(ii.getIconHeight()); setColorModel(OMRasterObject.COLORMODEL_IMAGEICON); setImage(ii.getImage()); setBaseScale(baseScale); "
0," try { ResultSet result = query(""SELECT Player FROM "" + getTableName(world) + "" WHERE X="" + x + "" AND Y="" + y + "" AND Z="" + z + "";""); if(result.next()) return result.getString(""Player""); return null; "," AWSDescribeImagesOptions options = new AWSDescribeImagesOptions(); options.executableBy(""test""); assertEquals(options.buildFormParameters().get(""ExecutableBy""), Collections.singletonList(""test"")); "
1," if ( columnType.equals( ""VARCHAR"" ) ) { return new ColumnAccessor() { @Override public Object getValue( ResultSet resultSet ) throws SQLException { return resultSet.getString( columnName ); "," if ( columnType.equals( ""VARCHAR"" ) ) { return new ColumnAccessor() { @Override public Object getValue( ResultSet resultSet ) throws SQLException { return resultSet.getString( columnName ); "
0," return ""<link rel=\""stylesheet\"" style=\""text/css\"" href=\""clusterdemo/qtlfinder.css\"">"" + ""\n"" + ""<script type=\""text/javascript\"" src=\""etc/js/clear-default-text.js\""></script>"" ; "," formatter.setSpacesBeforeAndAfterAssignments(false); assertEqualSource(""a=~/5/"", ""a =~ /5/""); formatter.setSpacesBeforeAndAfterAssignments(true); assertEqualSource(""a =~ /5/"", ""a =~/5/""); "
1," ManagedBuildManager.putConfigElement(this, element); resolved = false; this.owner = owner; if (owner instanceof ConfigurationV2) { ((ConfigurationV2)owner).addToolReference(this); "," ManagedBuildManager.putConfigElement(this, element); resolved = false; this.owner = owner; if (owner instanceof ConfigurationV2) { ((ConfigurationV2)owner).addToolReference(this); "
0, switch (featureID) { case Wcs111Package.COVERAGE_DESCRIPTIONS_TYPE__COVERAGE_DESCRIPTION: getCoverageDescription().clear(); getCoverageDescription().addAll((Collection)newValue); return; ," super(decodingByteBuffer, decodingCharBuffer, charsetDecoder); this.lastOutputLineBuilder = new StringBuilder(); this.outputBuilder = outputBuilder; this.terminator = terminator; "
1," System.out.println(""ENTRER AVANT INITAGENT.....""); this.initAgents(100); System.out.println(""VALEUR DE expNum..""+this.expNum+""...""+this.expP); this.init(this.expNum,1,this.expP); "," System.out.println(""ENTRER AVANT INITAGENT.....""); this.initAgents(100); System.out.println(""VALEUR DE expNum..""+this.expNum+""...""+this.expP); this.init(this.expNum,1,this.expP); "
0," int quadNum = getQuadNum(x, y); FakeMonomeConfiguration monomeConfig = quadrantConfigurations.get(gui.selectedQuadConf).getMonomeConfiguration(quadNum); monomeConfig.handlePress(x, y, value); ", StringBuilder query = new StringBuilder(); for (Clause keyClause : getContext().getTransformedTerms().keySet()) { query.append(getContext().getTransformedTerms().get(keyClause)); 
1, Assert.isLegal(editor != null); fEditor= editor; fWasOccurrencesOn= fEditor.isMarkingOccurrences(); if (fWasOccurrencesOn && !isEditorDisposed()) fEditor.uninstallOccurrencesFinder(); , Assert.isLegal(editor != null); fEditor= editor; fWasOccurrencesOn= fEditor.isMarkingOccurrences(); if (fWasOccurrencesOn && !isEditorDisposed()) fEditor.uninstallOccurrencesFinder(); 
0," super(type, options, mapper); checkArgument(os == WINDOWS, ""Cannot start a "" + SSH_PROTOCOL + "":%s connection to a non-Windows operating system"", sshConnectionType.toString() .toLowerCase()); ", AdapterFactoryLabelProvider labelProvider = new AdapterFactoryLabelProvider(adapterFactory); if (object instanceof EObject) { switch (columnIndex) { case 0: return labelProvider.getText(object); 
0," StringBuilder sb = new StringBuilder(); sb.append(""var(""); sb.append(mAlias); if (mConstraints.size() > 0) { sb.append("", constraints={""); StringUtils.formatList(sb, mConstraints); sb.append("""," return Utility.createMenuItem(label, new RemoveAllCampaignActionListener(), ""deselectall"", (char) 0, accelerator, ""Remove All Source material from loading"", ""Remove16.gif"", true); "
1, this.metrics = metrics; this.embedUri = embed; this.subFont = subFont; this.kerning = kerning; this.advanced = advanced; this.encodingMode = encodingMode; this.embeddingMode = embeddingMode; , this.metrics = metrics; this.embedUri = embed; this.subFont = subFont; this.kerning = kerning; this.advanced = advanced; this.encodingMode = encodingMode; this.embeddingMode = embeddingMode; 
0," SimpleTraitView traitView = new SimpleTraitView(intValueDisplayFactory, label, value, maxValue, new CC().alignX(""left"")); traitView.addComponents(spiritAttributePanel); return traitView; ", buffer = mock(ByteBuffer.class); when(buffer.available()).thenReturn(10); when(buffer.skip(anyInt())).thenAnswer(new CustomSkipAnswer()); stream = new ByteBufferInputStream(buffer); 
0," if (tileCache instanceof TileCache) this.tileCache = tileCache; else throw new IllegalArgumentException( ""Provided argument is not of type TileCache""); tileCache.addObserver(this); "," if (configuration != null) { StmtIterator i = configuration.listProperties(); while (i.hasNext()) { Statement st = i.nextStatement(); configSpec.add(base, st.getPredicate(), st.getObject()); "
0," if(policy == AQuery.CACHE_PERSISTENT){ if(pcacheDir != null) return pcacheDir; File cd = getCacheDir(context); pcacheDir = new File(cd, ""persistent""); pcacheDir.mkdirs(); return pcacheDir; ", EnhancedTable enhancedTable = createBare(model); TableRowSorter<TableModel> sorter = new TableRowSorter<TableModel>(model); enhancedTable.setRowSorter(sorter); return enhancedTable; 
0, System.out.println(CONST1); System.out.println(ConstantInterface.CONST1); System.out.println(StaticInheritanceInspection.CONST1); System.out.println(new StaticInheritanceInspection().CONST1); , if(this.codeGenerationStrategy == null){ if(getOwnerElement() instanceof INakedPackage && !isRootPackage()){ return ((INakedPackage) getOwnerElement()).getCodeGenerationStrategy(); 
0," Capabilities initializedCapabilities = driver.getCapabilities(); assertTrue(""Capabilities obtained from running session should be serializable"", initializedCapabilities instanceof Serializable); "," DefaultTileIterator tileIterator = new DefaultTileIterator(new Rectangle(0, 0, 1, 1)); assertTrue(tileIterator.hasNext()); tileIterator.next(); assertFalse(tileIterator.hasNext()); "
0," String expected = ""com.jakewharton.test.SomeClass""; String actual = cleanActivityName(""com.jakewharton.test"", ""com.jakewharton.test.SomeClass""); assertThat(expected, equalTo(actual)); ", final AbstractTreeNode node = descriptor.getElement(); AbstractTreeNode current = node; while (current != null) { if (current instanceof FavoritesListNode) { return (FavoritesListNode) current; 
1," StringBuilder buf = new StringBuilder(""[""); for (PartitionTopicInfo pti : partitionTopicInfos) { buf.append(format(""%s-%d-%d,"", pti.topic,pti.partition.brokerId,pti.partition.partId)); "," StringBuilder XXXXX = new StringBuilder(""[""); for (PartitionTopicInfo pti : partitionTopicInfos) { XXXXX.append(format(""%s-%d-%d,"", pti.topic,pti.partition.brokerId,pti.partition.partId)); "
1," StringBuilder sb = new StringBuilder(512); sb.append(""PropertyStringValueEntity"") .append(""[ ID="").append(id) .append("", stringValue="").append(stringValue) .append(""]""); return sb.toString(); "," StringBuilder sb = new StringBuilder(512); sb.append(""PropertyStringValueEntity"") .append(""[ ID="").append(id) .append("", stringValue="").append(stringValue) .append(""]""); return sb.toString(); "
1," workbenchShell = WorkbenchUtilities.getWorkbenchWindow().getShell(); abbotHelper = new AbbotHelper(workbenchShell); serverTasks = new ServerTasks(workbenchShell, abbotHelper, Constants.SERVER_V30 ); "," workbenchShell = WorkbenchUtilities.getWorkbenchWindow().getShell(); abbotHelper = new AbbotHelper(workbenchShell); serverTasks = new ServerTasks(workbenchShell, abbotHelper, Constants.SERVER_V30 ); "
0," StringBuilder sb = new StringBuilder(); sb.append(""{""); if (name != null) sb.append(""Name: "" + name + "", ""); if (version != null) sb.append(""Version: "" + version + "", ""); sb.append("""," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (kind: ""); result.append(kind); result.append(')'); return result.toString(); "
1, m_sequenceConfig = sequenceConfig; for(MobileSequenceTransaction transaction : sequenceConfig.getTransactions()) { m_transactionExecutions.add(new MobileTransactionExecution(transaction)); , m_sequenceConfig = sequenceConfig; for(MobileSequenceTransaction transaction : sequenceConfig.getTransactions()) { m_transactionExecutions.add(new MobileTransactionExecution(transaction)); 
1," OMGraphic ret = null; if (eomg != null) { eomg.setActionMask(OMGraphic.UPDATE_GRAPHIC_MASK); ret = edit(eomg, requestor); if (ret != null) { currentEditable.handleInitialMouseEvent(e); "," OMGraphic ret = null; if (eomg != null) { eomg.setActionMask(OMGraphic.UPDATE_GRAPHIC_MASK); ret = edit(eomg, requestor); if (ret != null) { currentEditable.handleInitialMouseEvent(e); "
1, int areaInfoIndex = -1; int wordCharLength = 0; for (int wordIndex = firstIndex; wordIndex <= lastIndex; wordIndex++) { areaInfo = getAreaInfo(wordIndex); if (areaInfo.isSpace) { addSpaces(); , int areaInfoIndex = -1; int wordCharLength = 0; for (int wordIndex = firstIndex; wordIndex <= lastIndex; wordIndex++) { areaInfo = getAreaInfo(wordIndex); if (areaInfo.isSpace) { addSpaces(); 
0," super(parent, style); spinner = new Spinner(this, factory.getBorderStyle()); setWidgetObservable(new AbstractObservableValue() { public Object getValueType() { return Integer.class; "," String string = """"; String line; for(int i = 0; i < 10; i++) { line = this.getLine(i); if(line != null && !line.equals("""")) { string = string.concat(this.getLine(i) + ""[LINEBREAK]""); "
1," StringBuffer sb = new StringBuffer(); if (fValueComponents == null) return """"; for (int i = 0; i < fValueComponents.length; i++) { if (i != 0) sb.append(""; ""); sb.append(fValueComponents[i]); "," StrXXXXXngBuffer XXXXX = new StrXXXXXngBuffer(); XXXXXf (fValueComponents == null) return """"; for (XXXXXnt XXXXX = 0; XXXXX < fValueComponents.length; XXXXX++) { XXXXXf (XXXXX != 0) XXXXX.append(""; ""); XXXXX.append(fValueComponents[XXXXX]); "
1," StringBuffer buff = ModelLoaderUtil.createPathToElementKey(element, true); if (buff == null) return null; String key = buff.append("".bg"").toString(); return getColor(toolkit, key); "," StringBuffer XXXXX = ModelLoaderUtil.createPathToElementKey(element, true); if (XXXXX == null) return null; String XXXXX = XXXXX.append("".bg"").toString(); return getColor(toolkit, XXXXX); "
1," Object[] params = message.getParams(); switch (message) { case OPEN: if (params.length > 0 && params[0] instanceof Track) { Track track = (Track) params[0]; pause(true); open(track, true); "," Object[] params = message.getParams(); switch (message) { case OPEN: if (params.length > 0 && params[0] instanceof Track) { Track XXXXX = (Track) params[0]; pause(true); open(XXXXX, true); "
1," ServerLaundryList list; synchronized (ctx) { if ((list = ctx.getAttribute(ServerLaundryList.class)) == null) ctx.setAttribute(ServerLaundryList.class, list = new ServerLaundryList()); "," ServerLaundryList list; synchronized (ctx) { if ((list = ctx.getAttribute(ServerLaundryList.class)) == null) ctx.setAttribute(ServerLaundryList.class, list = new ServerLaundryList()); "
0," String fileName = line.substring( pos + FILE_MARKER.length(), line.length() ); String checkedOutFilePath = this.currentDir + ""/"" + fileName; this.currentFile = checkedOutFilePath; "," String pageKey = BuilderLogic.getInstance().getCurrentIBPage(iwc); String theReturn = BuilderLogic.getInstance().getProperty(pageKey, instanceId, methodIdentifier); return theReturn; "
0," int newRow = indexOf(editedObject); if (logger.isLoggable(Level.FINE)) { logger.fine(""editedObject="" + editedObject); logger.fine(""row was "" + row); logger.fine(""new row is "" + newRow); "," LOG.severe(""workRejected: ["" + e.getWork() + ""], source is ["" + e.getSource() + ""]""); LOG.severe(""root cause is:"" + e.getException().getMessage()); e.getException().printStackTrace(); "
1, int maxSize = 0; int size; for (int i=0; i < numDataElements; i++) { size = (height-1)*scanlineStride + (width-1)*pixelStride + dataOffsets[i]; if (size > maxSize) { maxSize = size; , int XXXXX = 0; int size; for (int i=0; i < numDataElements; i++) { size = (height-1)*scanlineStride + (width-1)*pixelStride + dataOffsets[i]; if (size > XXXXX) { XXXXX = size; 
0," XaDataSourceManager dsMgr = graphdb.getConfig().getTxModule().getXaDataSourceManager(); return ( (NeoStoreXaConnection) dsMgr.getXaDataSource( ""nioneodb"" ).getXaConnection() ).getPropertyStore(); "," if (featOkTst && casFeat_fragments == null) jcas.throwFeatMissing(""fragments"", ""org.u_compare.shared.DiscontinuousAnnotation""); ll_cas.ll_setRefValue(addr, casFeatCode_fragments, v);"
1, getBean().setMobile(mobile); if (mover!=null && point!=null) { mover.setActive(mobile); if (mobile) point.setCursor(Draw2DUtils.getRoiControlPointCursor()) ; else point.setCursor(null) ; , getBean().setMobile(mobile); if (mover!=null && point!=null) { mover.setActive(mobile); if (mobile) point.setCursor(Draw2DUtils.getRoiControlPointCursor()) ; else point.setCursor(null) ; 
1, if (this == obj) return true; if (obj == null) return false; if (getClass() != obj.getClass()) return false; Error other = (Error) obj; if (code == null) { if (other.code != null) return false; , if (this == obj) return true; if (obj == null) return false; if (getClass() != obj.getClass()) return false; Error XXXXX = (Error) obj; if (code == null) { if (XXXXX.code != null) return false; 
1," String patientId = ""123""; when(mockMrsPatientAdapter.getPatient(patientId)).thenReturn(null); Patient actualPatient = allPatients.patientByOpenmrsId(patientId); assertNull(actualPatient); "," String XXXXX = ""123""; when(mockMrsPatientAdapter.getPatient(XXXXX)).thenReturn(null); Patient XXXXX = allPatients.patientByOpenmrsId(XXXXX); assertNull(XXXXX); "
1," if(PapyrusPaletteService.getInstance().equals(event.getSource())) { PapyrusPaletteService.getInstance().updatePalette(getPaletteViewer().getPaletteRoot(), this, getDefaultPaletteContent()); "," if(PapyrusPaletteService.getInstance().equals(event.getSource())) { PapyrusPaletteService.getInstance().updatePalette(getPaletteViewer().getPaletteRoot(), this, getDefaultPaletteContent()); "
0," KeyEvent ke; ke = new KeyEvent(getTarget(), KeyEvent.KEY_RELEASED, System.currentTimeMillis(), InputEvent.ALT_DOWN_MASK, ch, getKeyChar(ch)); getClient().getKeyboard()._keyReleased(ke); ", Text text = getExtension(RssConstants.QNAME_DESCRIPTION); if (text == null) text = getExtension(RssConstants.QNAME_RDF_DESCRIPTION); return (text != null) ? text.getValue() : null; 
1," final boolean[] released = new boolean[1]; Pointer<Integer> p = allocateInt(); long address = p.getPeer(); { Pointer pp = pointerToAddress(address); assertEquals(address, pp.getPeer()); "," final boolean[] released = new boolean[1]; Pointer<Integer> p = allocateInt(); long XXXXX = p.getPeer(); { Pointer XXXXX = pointerToAddress(XXXXX); assertEquals(XXXXX, XXXXX.getPeer()); "
1, if (!hasSize) return false; if (!hasOffset) return false; for (net.osmand.binary.OsmandIndex.RoutingSubregion element : getSubregionsList()) { if (!element.isInitialized()) return false; , if (!hasSize) return false; if (!hasOffset) return false; for (net.osmand.binary.OsmandIndex.RoutingSubregion element : getSubregionsList()) { if (!element.isInitialized()) return false; 
1, if (mListening) { mContext.unregisterReceiver(mReceiver); mContext = null; mNetworkInfo = null; mOtherNetworkInfo = null; mIsFailover = false; mReason = null; mListening = false; , if (mListening) { mContext.unregisterReceiver(mReceiver); mContext = null; mNetworkInfo = null; mOtherNetworkInfo = null; mIsFailover = false; mReason = null; mListening = false; 
0," if (isSectionHeaderPosition(position)) { TextView view = (TextView) convertView; if (view == null) { view = (TextView) mLayoutInflater.inflate(mSectionResourceId, parent, false); "," if (""Integer"".equals(value)) return INTEGER; if (""Float"".equals(value)) return FLOAT; if (""Character"".equals(value)) return CHARACTER; if (""String"".equals(value)) return STRING; return UNKNOWN; "
1," final File pf = getFile(parent); final File file = new File(pf, child); final DefaultNode node = new DefaultNode(child); node.setHandle(new FolderContentHandle(node, file)); return node; "," final File XXXXX = getFile(parent); final File XXXXX = new File(XXXXX, child); final DefaultNode XXXXX = new DefaultNode(child); XXXXX.setHandle(new FolderContentHandle(XXXXX, XXXXX)); return XXXXX; "
1," try { sourceLoader.join(); SwingUtilities.invokeLater(new Runnable() { @Override public void run() { CharacterManager.openParty(pcpFile, PCGenFrame.this, currentDataSetRef.getReference()); "," try { sourceLoader.join(); SwingUtilities.invokeLater(new Runnable() { @Override public void run() { CharacterManager.openParty(pcpFile, PCGenFrame.this, currentDataSetRef.getReference()); "
0," try { ModelInputStream is = new ModelInputStream(cacheContainer.openStream(STEPS)); List<Integer> steps; try { int count = is.readInt(); if (count > 10000) { throw new IOException(""illegal data""); ", adapterIsUsedByScript.clear(); calledByScriptMap.clear(); callsScriptMap.clear(); includedByScriptMap.clear(); includesScriptMap.clear(); usesAdapter.clear(); scriptList.clear(); 
0," if(eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (value: ""); result.append(value); result.append(')'); return result.toString(); "," if (debug) { System.out.println(""dragNode = "" + dragNode.getText()); System.out.println(""aboveNode = "" + aboveNode.getText()); System.out.println(""belowNode = "" + belowNode.getText()); "
1," final Map<String, Object> properties = this.getPropertyMapClone(); final Object value = properties.remove(key); this.graph.getRawGraph().setRelationshipProperties(this.id, properties); return value; "," final Map<String, Object> properties = this.getPropertyMapClone(); final Object XXXXX = properties.remove(key); this.graph.getRawGraph().setRelationshipProperties(this.id, properties); return XXXXX; "
1," for (Subscription subscription : getSubscriptions()) { FudgeMsg marketData = doSnapshot(subscription.getSecurityUniqueId()); liveDataReceived(subscription.getSecurityUniqueId(), marketData); "," for (Subscription subscription : getSubscriptions()) { FudgeMsg marketData = doSnapshot(subscription.getSecurityUniqueId()); liveDataReceived(subscription.getSecurityUniqueId(), marketData); "
0," List<event_notification_methods> result = dao.getAllEventNotificationMethods(); assertNotNull(result); assertFalse(result.isEmpty()); assertEquals(NOTIFICATION_METHOD_COUNT, result.size()); "," StringBuilder ret=new StringBuilder(); ret.append(""[tot_frags="").append(fragments.length).append("", number_of_frags_recvd="").append(number_of_frags_recvd).append(']'); return ret.toString(); "
0," long rawContactId1 = createRawContactWithName(""John"", ""Doe"", ACCOUNT_1); long rawContactId2 = createRawContactWithName(""John"", ""Doe"", ACCOUNT_1); assertNotAggregated(rawContactId1, rawContactId2); "," LogPoint p = new LogPoint((int) (lat * 1E6), (int) (lon * 1E6)); p.setR(r); p.setG(g); p.setB(b); this.points.add(p); context.trace(""add points : "" + p.toLog()); try{ saveLog(p); "
0," StringBuilder sb = new StringBuilder(); sb.append(""{""); if (userName != null) sb.append(""UserName: "" + userName + "", ""); if (password != null) sb.append(""Password: "" + password + "", ""); sb.append(""", xLengths = new float[20]; yLengths = new float[20]; for (int i=0; i<20; i++) { xLengths[i] = (float)(scale * Math.sin(i*Math.PI/10)); yLengths[i] = (float)(scale * Math.cos(i*Math.PI/10)); 
0," if(secure.checkGrafico(""listaEvaluaciones"", ""editable"", ""leer"", null, null)){ Evaluacion eval = Evaluacion.findById(idEvaluacion); if (eval != null) { eval.estado = ""EnTramite""; eval.save(); ", Collection<Shape> children = Graphiti.getPeService().getAllContainedShapes((ContainerShape) element); PictogramElement first = children.iterator().next(); return first.getGraphicsAlgorithm(); 
0, if (namedElement instanceof TypedElement) { Type type = ((TypedElement) namedElement).getType(); return (type == null) ? OCLStandardLibraryImpl.INSTANCE .getOclVoid().getName() : type.getName(); ," StringBuilder sb = new StringBuilder(super.toString()); if (spanningSurface != null) { sb.append(""spanningSurface:"").append('\n'); for (Object o : spanningSurface) { sb.append(o).append('\n'); "
1," String label = ((PanelClass)object).getUmlElementUid(); return label == null || label.length() == 0 ? getString(""_UI_PanelClass_type"") : getString(""_UI_PanelClass_type"") + "" "" + label; "," String XXXXX = ((PanelClass)object).getUmlElementUid(); return XXXXX == null || XXXXX.length() == 0 ? getString(""_UI_PanelClass_type"") : getString(""_UI_PanelClass_type"") + "" "" + XXXXX; "
0, final int n = prefGroup.getPreferenceCount(); if(n < 1) return; selected.clear(); for(int i=0; i<n; i++) { final Pref p = (Pref)prefGroup.getPreference(i); p.setChecked(true); selected.add(p); , GridLayout gridLayout = new GridLayout(); gridLayout.numColumns = columns; gridLayout.makeColumnsEqualWidth = isEqual; gridLayout.marginHeight = mh; gridLayout.marginWidth = mw; return gridLayout; 
0, if (o instanceof CategorizedAbilitySelection) { CategorizedAbilitySelection other = (CategorizedAbilitySelection) o; if (selection == null) { if (other.selection != null) { return false; ," String label = ((NonListType) object).getName(); return label == null || label.length() == 0 ? getString(""_UI_NonListType_type"") : getString(""_UI_NonListType_type"") + "" "" + label; "
1," StringBuilder value = new StringBuilder(); value.append(""\n car: "" + pad(car, level + 1)); value.append(""\n cdr: "" + (cdr == null ? ""NULL"" : cdr.toString())); return value.toString(); "," StringBuilder XXXXX = new StringBuilder(); XXXXX.append(""\n car: "" + pad(car, level + 1)); XXXXX.append(""\n cdr: "" + (cdr == null ? ""NULL"" : cdr.toString())); return XXXXX.toString(); "
0," int value = SystemProperties.getInt(""debug.sqlite.wal.poolsize"", Resources.getSystem().getInteger( com.android.internal.R.integer.db_connection_pool_size)); return Math.max(2, value); ", NativeEvent mouseEvent = event.getNativeEvent(); event.preventDefault(); boolean up = mouseEvent.getMouseWheelVelocityY() > 0; if (!scroller.isMouseOverScrollArea((Event) mouseEvent)) { return; 
1, List editParts = getOperationSet(); for (int i = 0; i < editParts.size(); i++) { EditPart editPart = (EditPart) editParts.get(i); editPart.showSourceFeedback(getSourceRequest()); , LXXXXXst XXXXX = getOperatXXXXXonSet(); for (XXXXXnt XXXXX = 0; XXXXX < XXXXX.sXXXXXze(); XXXXX++) { EdXXXXXtPart edXXXXXtPart = (EdXXXXXtPart) XXXXX.get(XXXXX); edXXXXXtPart.showSourceFeedback(getSourceRequest()); 
0, final UimControl control = ((UimField) getEObject()).getControl(); UimFieldFigure figure = (UimFieldFigure) getFigure(); if(control instanceof UimText){ figure.setControl(new UimTextFigure()); ," search.getConfig().experimental = true;; processEpdFile(this.getClass().getResourceAsStream(""/wacnew.epd""), 5000); int solved1 = getSolved(); logger.debug(""Config1 = "" + solved1); "
1," if (_tmpdir == null) { String tmpdir = System.getProperty(""java.io.tmpdir""); if (tmpdir == null) { log.info(""No system defined temp directory. Faking it.""); tmpdir = System.getProperty(""user.home""); "," if (_XXXXX == null) { String XXXXX = System.getProperty(""java.io.XXXXX""); if (XXXXX == null) { log.info(""No system defined temp directory. Faking it.""); XXXXX = System.getProperty(""user.home""); "
0," from(""direct:start""). marshal().xstream(). process(new Processor() { public void process(Exchange exchange) throws Exception { log.debug(""marshalled: "" + exchange.getIn().getBody(String.class)); ", assertThat(activity.viewArgument).isNull(); activity.findViewById(R.id.buttonWithViewArgument).performClick(); assertThat(activity.viewArgument).hasId(R.id.buttonWithViewArgument); 
0," try { View v = convertView; if (v == null) { LayoutInflater vi = (LayoutInflater)context.getSystemService(Context.LAYOUT_INFLATER_SERVICE); v = vi.inflate(R.layout.fragment_news, null); "," SourceModel.Expr marshaller = SourceModel.Expr.makeErrorCall(INT_ERROR_MSG); return InputPolicy.makeWithTypeAndMarshaler(getTypeExpr().toSourceModel().getTypeExprDefn(), marshaller, 0); "
0," return new IpsecVpnTunnel (name, description, ipsecVpnPeer, peerIpAddress, peerNetworkAddress, peerNetworkMask, sharedSecret, encryptionProtocol, mtu, isEnabled, isOperational, errorDetails); "," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "
0," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (name: ""); result.append(name); result.append(')'); return result.toString(); "," long oldIndexUsage = profiler.getCounter(""Query.indexUsage""); long oldCompositeIndexUsage = profiler.getCounter(""Query.compositeIndexUsage""); if (oldIndexUsage == -1) { oldIndexUsage = 0; "
1, final String maxBlockSize = getMaxBlockSize(); sizeWi.setValue(Tools.convertKilobytes(Long.toString( Long.parseLong(maxBlockSize) / 2))); maxSizeWi.setValue(Tools.convertKilobytes(maxBlockSize)); , final String XXXXX = getMaxBlockSize(); sizeWi.setValue(Tools.convertKilobytes(Long.toString( Long.parseLong(XXXXX) / 2))); maxSizeWi.setValue(Tools.convertKilobytes(XXXXX)); 
1," DataSetFacade data = getLoadedDataSetRef().getReference(); CharacterFacade character = CharacterManager.createNewCharacter(this, data); if (file != null) { character.setFile(file); "," DataSetFacade XXXXX = getLoadedDataSetRef().getReference(); CharacterFacade XXXXX = CharacterManager.createNewCharacter(this, XXXXX); if (file != null) { XXXXX.setFile(file); "
1, if(m_forcedWeather != null) { switch(m_forcedWeather) { case NORMAL: return 0; case RAIN: return 1; case HAIL: return 2; case SANDSTORM: return 3; case FOG: return 4; default: return 0; , if(m_forcedWeather != null) { switch(m_forcedWeather) { case NORMAL: return 0; case RAIN: return 1; case HAIL: return 2; case SANDSTORM: return 3; case FOG: return 4; default: return 0; 
1," TriggerSequence binding= getIterationBinding(); return binding != null ? Messages.format(RubyTextMessages.ContentAssistProcessor_toggle_affordance_press_gesture, new Object[] { binding.format() "," TriggerSequence binding= getIterationBinding(); return binding != null ? Messages.format(RubyTextMessages.ContentAssistProcessor_toggle_affordance_press_gesture, new Object[] { binding.format() "
1," { SNode nodeToMatch_v2_1fi_a0; nodeToMatch_v2_1fi_a0 = nodeToMatch; if (!(""jetbrains.mps.baseLanguage.structure.StatementList"".equals(nodeToMatch_v2_1fi_a0.getConcept().getId()))) { return false; "," { SNode nodeToMatch_v2_1fi_a0; nodeToMatch_v2_1fi_a0 = nodeToMatch; if (!(""jetbrains.mps.baseLanguage.structure.StatementList"".equals(nodeToMatch_v2_1fi_a0.getConcept().getId()))) { return false; "
0," super.parseParameters(param); amount = expectFloatParameter(""amount""); if (amount == NULL_FLOAT_PARAM) amount = DEFAULT_AMOUNT; amount = MathUtils.CheckLimits(amount, MIN_AMOUNT, MAX_AMOUNT); ", m_fc.setCurrentDirectory(new File(m_jTxtField.getText())); if (m_fc.showOpenDialog(m_jTxtField) == JFileChooser.APPROVE_OPTION) { m_jTxtField.setText(m_fc.getSelectedFile().getAbsolutePath()); 
0," if (realmDomain.startsWith(""*."")) { realmDomain = realmDomain.substring(1).toLowerCase(); returnToDomain = ""."" + returnToDomain.toLowerCase(); return returnToDomain.endsWith(realmDomain); "," int i, j; double s, e, c, d, wa; double[] CC = new double[N+1]; double[] DD = new double[N+1]; double maxs = -100; char trace_e, trace_d; CC[0] = 0; for(j = 1; j <= N; j ++) { CC[j] = 0; DD[j] = -g; "
1," if (consumed && cachedValueStream == null) throw new ParseException(""The stream is already consumed""); if (cachedValueStream == null) { cachedValueStream = cacheStream(valuesOnly); consumed = true; "," if (consumed && cachedValueStream == null) throw new ParseException(""The stream is already consumed""); if (cachedValueStream == null) { cachedValueStream = cacheStream(valuesOnly); consumed = true; "
1," long start = System.currentTimeMillis(); TestScript.lineStartsWithActionKeyword(""_alert()""); for (int i = 0; i < 10000; i++) { TestScript.lineStartsWithActionKeyword(""_alert()""); "," long XXXXX = System.currentTXXXXXmeMXXXXXllXXXXXs(); TestScrXXXXXpt.lXXXXXneStartsWXXXXXthActXXXXXonKeyword(""_alert()""); for (XXXXXnt XXXXX = 0; XXXXX < 10000; XXXXX++) { TestScrXXXXXpt.lXXXXXneStartsWXXXXXthActXXXXXonKeyword(""_alert()""); "
1, TraverseListener listener = mock( TraverseListener.class ); shell.addTraverseListener( listener ); shell.removeTraverseListener( listener ); assertFalse( shell.isListening( SWT.Traverse ) ); , TraverseListener XXXXX = mock( TraverseListener.class ); shell.addTraverseListener( XXXXX ); shell.removeTraverseListener( XXXXX ); assertFalse( shell.isListening( SWT.Traverse ) ); 
0, BlockRecoveryCommandProto.Builder builder = BlockRecoveryCommandProto .newBuilder(); for (RecoveringBlock b : cmd.getRecoveringBlocks()) { builder.addBlocks(PBHelper.convert(b)); ," adapter.set(""""); assertEquals(""blank"", adapter.toString()); adapter.set(null); assertEquals(""null"", adapter.toString()); adapter.set(new Object() { public String toString() { return ""x45""; "
1," Parameters p = object.getClass().getAnnotation(Parameters.class); if (p != null && p.commandNames().length > 0) { for (String commandName : p.commandNames()) { addCommand(commandName, object); "," Parameters XXXXX = object.getClass().getAnnotation(Parameters.class); if (XXXXX != null && XXXXX.commandNames().length > 0) { for (String commandName : XXXXX.commandNames()) { addCommand(commandName, object); "
1," TestNGCitrusTestBuilder builder = new TestNGCitrusTestBuilder() { @Override public void configure() { query(dataSource) .statement(""stmt"") .validateScript(resource, ScriptTypes.GROOVY); "," TestNGCitrusTestBuilder XXXXX = new TestNGCitrusTestBuilder() { @Override public void configure() { query(dataSource) .statement(""stmt"") .validateScript(resource, ScriptTypes.GROOVY); "
0," return new StringBuilder(getClass().getSimpleName()).append(""["") .append(""formatParts="") .append(formatParts) .append("", argumentCount="") .append(argumentCount) .append(""]"").toString(); "," if (!fInViewMenu) return; final String filters= ""filters""; if (menu.find(filters) != null) { for (int i= 0; i < fFilterActions.length; i++) { menu.prependToGroup(filters, fFilterActions[i]); "
0," Exception ex = new Exception(""Test""); ConcurrentRuntimeException cex = ConcurrentUtils .extractCauseUnchecked(new ExecutionException(ex)); assertSame(""Wrong cause"", ex, cex.getCause()); ", if (tabMinWidth == null) { tabMinWidth = new StyleableDoubleProperty(DEFAULT_TAB_MIN_WIDTH) { @Override public StyleableProperty getStyleableProperty() { return StyleableProperties.TAB_MIN_WIDTH; 
0," PEPeer peer = (PEPeer)cell.getDataSource(); int value = (peer == null) ? 0 : peer.getLastPiece(); if (!cell.setSortValue(value) && cell.isValid()) return; cell.setText(""""+value); "," ISiteFeature feature = findRealFeature(adapter); if (feature == null) { try { feature = copySiteFeature(fModel, adapter.feature); fModel.getSite().addFeatures(new ISiteFeature[] {feature"
1," Users ret = new Users(); for (User user : runAndParse(getSelectCommand(""select-user"", getUriInfo(), User.class, false))) { ret.getUsers().add(PowerShellUserResource.addLinks(getUriInfo(), user)); "," Users XXXXX = new Users(); for (User user : runAndParse(getSelectCommand(""select-user"", getUriInfo(), User.class, false))) { XXXXX.getUsers().add(PowerShellUserResource.addLinks(getUriInfo(), user)); "
0," long beginning = this.beginning.get(); long end = this.end.get(); if (beginning == 0 || end == 0) { throw new IllegalStateException(""You must start and then stop a Stopwatch to get the duration!""); "," List result = new ArrayList(); List tags = configuration.getAttributeList(""jacorb.transport.server.listeners""); if (tags.isEmpty()) { result.addAll(transport_manager.getFactoriesList()); "
1," String oldSchema = schema; schema = newSchema; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, Wps10Package.OUTPUT_REFERENCE_TYPE__SCHEMA, oldSchema, schema)); "," String XXXXX = schema; schema = newSchema; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, Wps10Package.OUTPUT_REFERENCE_TYPE__SCHEMA, XXXXX, schema)); "
1, if ((eventlist == null) || (eventlist.getT() > ev.getT())) { ev.setPrevious(null); ev.setNext(eventlist); if (eventlist != null) eventlist.setPrevious(ev); eventlist = ev; return; , if ((eventlist == null) || (eventlist.getT() > ev.getT())) { ev.setPrevious(null); ev.setNext(eventlist); if (eventlist != null) eventlist.setPrevious(ev); eventlist = ev; return; 
1," final Html.ImageGetter imageGetter = ContactDetailDisplayUtils.getImageGetter(context); if (mText != null) { mDecodedText = HtmlUtils.fromHtml(context, mText, imageGetter, null); "," final Html.ImageGetter XXXXX = ContactDetailDisplayUtils.getImageGetter(context); if (mText != null) { mDecodedText = HtmlUtils.fromHtml(context, mText, XXXXX, null); "
1," Object handler = windowManagerBlock(application).get(""defaultHandler""); return handler instanceof WindowDisplayHandler ? (WindowDisplayHandler)handler : DEFAULT_WINDOW_DISPLAY_HANDLER; "," Object handler = windowManagerBlock(application).get(""defaultHandler""); return handler instanceof WindowDisplayHandler ? (WindowDisplayHandler)handler : DEFAULT_WINDOW_DISPLAY_HANDLER; "
1," String ret = JOptionPane.showInputDialog(getParentFrame(), ""Enter URL"", ""Add Location"", JOptionPane.QUESTION_MESSAGE); if (!Util.isEmpty(ret)) { getPlaylist().insertItem(ret, -1, false, null); "," String XXXXX = JOptionPane.showInputDialog(getParentFrame(), ""Enter URL"", ""Add Location"", JOptionPane.QUESTION_MESSAGE); if (!Util.isEmpty(XXXXX)) { getPlaylist().insertItem(XXXXX, -1, false, null); "
0, String[] themeIds = themeManager.getRegisteredThemeIds(); for( String themeId : themeIds ) { Theme theme = themeManager.getTheme( themeId ); theme.registerResources( resourceManager ); , byte hopsLeft = (byte) (rp.getMACPayloadAt(hopsLeftIndex) & HOPSLEFT_BITS); if (hopsLeft == HOPSLEFT_BITS) return (byte) (rp.getMACPayloadAt(hopsLeftIndex + 1)); else return hopsLeft; 
1," ManagedSysListCommand listCommand = (ManagedSysListCommand) cmd; if (listCommand.getDomainId() != null && listCommand.getDomainId().equals(""-"") ) { err.rejectValue(""domainId"", ""required""); "," ManagedSysListCommand listCommand = (ManagedSysListCommand) cmd; if (listCommand.getDomainId() != null && listCommand.getDomainId().equals(""-"") ) { err.rejectValue(""domainId"", ""required""); "
0," if (jPanelWT == null) { jPanelWT = new JPanel(new CardLayout()); jPanelWT.add(getJPanelComplexWT(), getJPanelComplexWT().getName()); jPanelWT.add(getJPanelRealWT(), getJPanelRealWT().getName()); "," if(path==null) return null; int lastIndex = path.lastIndexOf(""/""); if(lastIndex==-1) return null; if((lastIndex+1) >= path.length()) return null; return path.substring(lastIndex+1); "
1," Formatter formatter = getFormatter(keypath, type); if ( LOG.isDebugEnabled() ) { LOG.debug(""formatValue (value,keypath,type) = ("" + value + "","" + keypath + "","" + type.getName() + "")""); "," Formatter XXXXX = getFormatter(keypath, type); if ( LOG.isDebugEnabled() ) { LOG.debug(""formatValue (value,keypath,type) = ("" + value + "","" + keypath + "","" + type.getName() + "")""); "
1," StringSelection stringSelection = new StringSelection(aString); Clipboard clipboard = Toolkit.getDefaultToolkit().getSystemClipboard(); clipboard.setContents(stringSelection, this); "," StringSelection XXXXX = new StringSelection(aString); Clipboard XXXXX = Toolkit.getDefaultToolkit().getSystemClipboard(); XXXXX.setContents(XXXXX, this); "
1, if (list != null) { roleList = new RoleList(); for (Iterator<?> roleIter = list.iterator(); roleIter.hasNext();) { Role currRole = (Role)(roleIter.next()); roleList.add((Role)(currRole.clone())); , if (list != null) { roleList = new RoleList(); for (Iterator<?> roleIter = list.iterator(); roleIter.hasNext();) { Role currRole = (Role)(roleIter.next()); roleList.add((Role)(currRole.clone())); 
0," return ShrinkWrap.create(JavaArchive.class, ""test.jar"").addClasses(SkinBean.class) .addAsManifestResource(new ByteArrayAsset(""<beans/>"".getBytes()), ArchivePaths.create(""beans.xml"")); "," final long start = System.nanoTime(); transactions.rollback(this, checkpointName); log.logRollbackToCheckpoint((System.nanoTime() - start) / 1000000L, this, checkpointName); return this; "
1," return new BinaryConnectionFactory(getOperationQueueLength(), getReadBufferSize(), getHashAlgorithm()) { @Override public long getOperationTimeout() { return getOperationTimeoutMillis(); "," return new BinaryConnectionFactory(getOperationQueueLength(), getReadBufferSize(), getHashAlgorithm()) { @Override public long getOperationTimeout() { return getOperationTimeoutMillis(); "
1, if (blockInfoSet.size() > 0 ) { long blockId = blockInfoSet.first().block.getBlockId(); if ((processedBlocks.get(blockId) != null) && (processedBlocks.get(blockId) == 1)) { return true; , if (blockInfoSet.size() > 0 ) { long XXXXX = blockInfoSet.first().block.getBlockId(); if ((processedBlocks.get(XXXXX) != null) && (processedBlocks.get(XXXXX) == 1)) { return true; 
1," Paragraph par = documentRange.getParagraph(parIndex); assertEquals(expectedStyleLvl, styleSheet.getParagraphStyle(par.getStyleIndex()).getLvl()); assertEquals(expectedParLvl, par.getLvl()); "," Paragraph par = documentRange.getParagraph(parIndex); assertEquals(expectedStyleLvl, styleSheet.getParagraphStyle(par.getStyleIndex()).getLvl()); assertEquals(expectedParLvl, par.getLvl()); "
0, if (!isValid()) return; try { IPathEntryContainer container = new ManagedBuildCPathEntryContainer(getOwner().getProject()); CoreModel.setPathEntryContainer(new ICProject[]{cProject," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; "
0, txnConfig = new TransactionConfig(); txnConfig.setReadUncommitted(true); txnConfig.setDurability(Durability.COMMIT_NO_SYNC); cursorConfig = new CursorConfig(); cursorConfig.setReadUncommitted(true); ," CmsRpcAction<CmsAliasInitialFetchResult> action = new CmsRpcAction<CmsAliasInitialFetchResult>() { @Override public void execute() { getService().getAliasTable(this); start(200, false); "
1," try { Integer retValue = null; prepareStatement(UserSQL.findByEmail); cachedResults.setString(1, email); execute(); if (cachedResults.next()) { retValue = cachedResults.getInt(1); "," try { Integer retValue = null; prepareStatement(UserSQL.findByEmail); cachedResults.setString(1, email); execute(); if (cachedResults.next()) { retValue = cachedResults.getInt(1); "
1," this.config = config; try { String url = new URL(new URL(config.getUrl()), RPC_PATH).toString(); session = new Session(url, new Credentials(config)); setRoot(config.getClearcase()); "," this.config = config; try { String XXXXX = new URL(new URL(config.getUrl()), RPC_PATH).toString(); session = new Session(XXXXX, new Credentials(config)); setRoot(config.getClearcase()); "
0," Intent intent = new Intent(); intent.putExtra(EXTRAS_SUCCESS, success); intent.putExtra(EXTRAS_RESPONSE_MESSAGE, message); intent.setAction(WEB_INTENT_FILTER); sendBroadcast(intent); ", if (selection instanceof IStructuredSelection) { Object sel = ((IStructuredSelection)selection).getFirstElement(); if (sel instanceof IResource) { selectedElement = (IResource)sel; 
1," if (topicId == null) { LOG.error(""findUnreadViewableMessageCountByTopicIdByUserId failed with topicId: "" + topicId + "" and userid: "" + userId); throw new IllegalArgumentException(""Null Argument""); "," if (topicId == null) { LOG.error(""findUnreadViewableMessageCountByTopicIdByUserId failed with topicId: "" + topicId + "" and userid: "" + userId); throw new IllegalArgumentException(""Null Argument""); "
0," Hive db; try { db = Hive.get(conf); CreateDatabaseDesc createDatabaseDesc = work.getCreateDatabaseDesc(); if (null != createDatabaseDesc) { return createDatabase(db, createDatabaseDesc); ", if (skipSubHits) return; for (Iterator subHitFilterI = hitFilters.iterator(); subHitFilterI.hasNext();) { BlastLikeSearchFilter sf = (BlastLikeSearchFilter) subHitFilterI.next(); sf.reset(); 
0," StringBuilder sb = new StringBuilder(); sb.append(""{""); if (options != null) sb.append(""Options: "" + options + "", ""); if (status != null) sb.append(""Status: "" + status + "", ""); sb.append(""", for (final ListIterator<S> it = all.listIterator(); it.hasNext();) { final S cur = it.next(); if (cur.compareTo(newEntry) >= 0) { it.previous(); it.add(newEntry); assert isSorted(); return; 
0," StringBuilder sb = new StringBuilder(); sb.append(""{""); if (options != null) sb.append(""Options: "" + options + "", ""); if (status != null) sb.append(""Status: "" + status + "", ""); sb.append("""," super(555,600, new int[] {600,601,602,603,604,607,608,609,764,610,611,248,249,250,251,252,253,257,599,596,597,598,254,612,942,613,614,615,616,617,618,619,620,621,622,623,624,556,740,739,955,956,0 "
0," JPanel panel = new JPanel(); panel.setPreferredSize(new Dimension(700, 400)); panel.setLayout(new BorderLayout()); panel.add(createTabbedPane(), BorderLayout.CENTER); return panel; "," XStream xs = new XStream(); try { FileOutputStream fs = new FileOutputStream(filename); xs.toXML(dataToSave, fs); this.log(this.getType(filename) + "": data saved to persistance.""); "
1," PDFDictionary attribute = new PDFDictionary(); attribute.put(""O"", Table.NAME); attribute.put(typeSpan, span); if (attributes == null) { attributes = new ArrayList<PDFDictionary>(2); "," PDFDictionary attribute = new PDFDictionary(); attribute.put(""O"", Table.NAME); attribute.put(typeSpan, span); if (attributes == null) { attributes = new ArrayList<PDFDictionary>(2); "
1," entity.setHibernateModel(this); entities.add(entity); entity.addObserver(this); sortEntities(); setChanged(); notifyObservers(new SGObjectAddedToListModification(""entities"", entity)); "," entity.setHibernateModel(this); entities.add(entity); entity.addObserver(this); sortEntities(); setChanged(); notifyObservers(new SGObjectAddedToListModification(""entities"", entity)); "
0, BulletAnnotation bullet = (BulletAnnotation) annotation; if (gc != null) { final Color foreground = gc.getForeground(); final Color background = gc.getBackground(); if (length < 1) { return; ," Real position = Real.valueOf(0.0); for(Entity e : algorithm.getTopology()) { e.getProperties().put(EntityType.CANDIDATE_SOLUTION, Vector.newBuilder().repeat(dimensions, position).build()); "
0," final Term compacted = compact(theTerm); assignVarOffsets(compacted); if (theTerm instanceof Struct && theLibraryContent != null) { assignPrimitiveInfo((Struct) compacted, theLibraryContent); "," for (int i = 0; i < exprs.length; i+=2) { String input = exprs[i]; String expect = exprs[i+1]; List<String> chunks = getActionChunks(input); assertEquals(""input: ""+input, expect, chunks.toString()); "
0, if(drag) { double a = (double)(c.y - (sflarp.sz().y / 2)) / (double)(sz.y - sflarp.sz().y); if(a < 0) a = 0; if(a > 1) a = 1; val = (int)Math.round(a * (max - min)) + min; changed(); , Object[] listeners = fChangedListners.getListeners(); for (int i = 0; i < listeners.length; i++) { ((IToggleBreakpointsTargetManagerListener)listeners[i]).preferredTargetsChanged(); 
1," Bitmap sourceBitmap = BitmapFactory.decodeResource(context.getResources(), drawableResourceId); return new BitmapDrawable(Bitmap.createScaledBitmap(sourceBitmap, width, height, true)); "," Bitmap XXXXX = BitmapFactory.decodeResource(context.getResources(), drawableResourceId); return new BitmapDrawable(Bitmap.createScaledBitmap(XXXXX, width, height, true)); "
1," if (QtyCount != null) { MProduct product = getProduct(); if (product != null) { int precision = product.getUOMPrecision(); QtyCount = QtyCount.setScale(precision, BigDecimal.ROUND_HALF_UP); "," if (QtyCount != null) { MProduct XXXXX = getProduct(); if (XXXXX != null) { int XXXXX = XXXXX.getUOMPrecision(); QtyCount = QtyCount.setScale(XXXXX, BigDecimal.ROUND_HALF_UP); "
0," AptSourceUtils aptUtils = (AptSourceUtils) utils; TypeElement subClassType = (TypeElement) findElement(roundEnv, TEST_SUB_CLASS); assertEquals(1, aptUtils.getBeanProperties(subClassType).size()); "," WakeLock.acquire(context); Log.d(LOG_TAG, ""shutdown BLN now""); SysCommand.getInstance().writeSysfs(""/sys/class/misc/backlightnotification/notification_led"", ""0""); WakeLock.release(); "
1," super(id, type, buildDate); this.documentation = documentation; documentation.setPart(this); usedIn = new BagImpl<BaseAssembly>(); parts = BackendFactory.instance.createLargeSet(); "," super(id, type, buildDate); this.documentation = documentation; documentation.setPart(this); usedIn = new BagImpl<BaseAssembly>(); parts = BackendFactory.instance.createLargeSet(); "
1," if (!src.startsWith(""http"")) { String base = VirtualHostHelper.getServerURL(request, false); if (base != null && base.endsWith(""/"")) { base = base.substring(0, base.length() - 1); "," if (!src.startsWith(""http"")) { String XXXXX = VirtualHostHelper.getServerURL(request, false); if (XXXXX != null && XXXXX.endsWith(""/"")) { XXXXX = XXXXX.substring(0, XXXXX.length() - 1); "
0," String t = type.toLowerCase(); if (t.contains(""text/html"")) return true; if (t.contains(""application/xhtml+xml"")) return true; if (t.contains(""text/xml"")) return true; return false; "," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "
0, questionnaireValidator.validateForDefineQuestion(questionDto); QuestionEntity questionEntity = questionnaireMapper.mapToQuestion(questionDto); return createQuestion(questionEntity); , ForceVector displacement = forceData.normalize(); displacement.multiply(step); float x = node.x() + displacement.x(); float y = node.y() + displacement.y(); if (assertValue(x)) { node.setX(x); 
0," String oldViewBox = viewBox; viewBox = newViewBox; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_SVG_ELEMENT__VIEW_BOX, oldViewBox, viewBox)); "," mTestUtility = new DbTestUtility(getContext()); createApplication(); mApplication = getApplication(); if(mApplication == null){ Log.e(LOG_TAG, ""Unable to create main application""); return false; "
0, Enumeration listeners = listenerList.elements(); while (listeners.hasMoreElements()) { TreeModelListener listener = (TreeModelListener) listeners.nextElement(); listener.treeNodesChanged(e); ," str = str.replaceAll(""[\']"", ""&rsquo;""); str = str.replaceAll(""&#039;"", ""&rsquo;""); str = str.replaceAll(""&#145;"", ""&rsquo;""); str = str.replaceAll(""&#146;"", ""&rsquo;""); return str; "
0," if (running) { sensormanager.unregisterListener(psevent); setPSStatus(""Not running""); ((Button) findViewById(R.id.applyBut)).setText(""Start""); UpdateCalibrationValues(); running = false; ", for (int val : grph.serialMap.keySet()){ String fname = grph.serialMap.get(val); assertTrue(grph.totalTime >= grph.timeMap.get(val)); assertTrue(grph.totalTime >= grph.aggregateTimeMap.get(fname)); 
1," if (!OSGIUtils.getDefault().isFragment(bundle)) { synchronized (currentStateStamp) { dynamicAddStateStamps.put(Long.toString(bundle.getBundleId()), new Long(currentStateStamp[0])); "," if (!OSGIUtils.getDefault().isFragment(bundle)) { synchronized (currentStateStamp) { dynamicAddStateStamps.put(Long.toString(bundle.getBundleId()), new Long(currentStateStamp[0])); "
1, myDialog.addWindowListener(new WindowAdapter(){ public void windowClosing(WindowEvent e) { myWidthOption.setValue(myDialog.getWidth()); myHeightOption.setValue(myDialog.getHeight()); , myDialog.addWindowListener(new WindowAdapter(){ public void windowClosing(WindowEvent e) { myWidthOption.setValue(myDialog.getWidth()); myHeightOption.setValue(myDialog.getHeight()); 
1," if (isLiveOrCompiled()) if (!this.getCapability(ALLOW_SCALE_READ)) throw new CapabilityNotSetException(J3dI18N.getString(""OrientedShape3D9"")); return ((OrientedShape3DRetained)retained).getScale(); "," if (isLiveOrCompiled()) if (!this.getCapability(ALLOW_SCALE_READ)) throw new CapabilityNotSetException(J3dI18N.getString(""OrientedShape3D9"")); return ((OrientedShape3DRetained)retained).getScale(); "
0," NSqlQuery query = new NSqlQuery(db.getResourceConnection()); query.exec(""select count(*) from noteresources""); query.next(); int returnValue = new Integer(query.valueString(0)); return returnValue; ", List<Player> players = new ArrayList<Player>(); players.add(p1); players.add(p2); players.add(p3); Hand hand = new Hand(players); hand.startNextRound(); return hand.getActiveRound(); 
0," CmsRpcAction<CmsResourceInfoBean> action = new CmsRpcAction<CmsResourceInfoBean>() { @Override public void execute() { getService().getResourceInfo(resourcePath, getLocale(), this); ", d_summary = rankProbabilitySummary; d_summary.addPropertyChangeListener(new PropertyChangeListener() { public void propertyChange(PropertyChangeEvent arg0) { fireDatasetChanged(); 
1," ListDomainsOptions options = new ListDomainsOptions(); options.nextToken(""test""); assertEquals(options.buildFormParameters().get(""NextToken""), Collections.singletonList(""test"")); "," ListDomainsOptions XXXXX = new ListDomainsOptions(); XXXXX.nextToken(""test""); assertEquals(XXXXX.buildFormParameters().get(""NextToken""), Collections.singletonList(""test"")); "
1," Encoding result = fixture.getEncoding(); assertNotNull(result); assertEquals(""ASCII"", result.name()); assertEquals(""ASCII"", result.toString()); assertEquals(1, result.ordinal()); "," Encoding XXXXX = fixture.getEncoding(); assertNotNull(XXXXX); assertEquals(""ASCII"", XXXXX.name()); assertEquals(""ASCII"", XXXXX.toString()); assertEquals(1, XXXXX.ordinal()); "
1," assert receiver != null; this.receiver = receiver; this.persistent = persistent; start(); try { if (firstInitialization.tryAcquire(5, TimeUnit.SECONDS)) firstInitialization.release(); "," assert receiver != null; this.receiver = receiver; this.persistent = persistent; start(); try { if (firstInitialization.tryAcquire(5, TimeUnit.SECONDS)) firstInitialization.release(); "
0," setTriStateAllowed(true); setStateList(Arrays.asList(SelectBooleanCheckbox.SELECTED_STATE, SelectBooleanCheckbox.UNSELECTED_STATE)); setRendererType(""org.openfaces.SelectAllCheckboxRenderer""); "," String oldVersion = version; version = newVersion; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SclPackage.THITEM__VERSION, oldVersion, version)); "
0," IRegistry<String, IAdditionalModelFactory> additionalModelFactoryRegistry = characterGenerics.getAdditionalModelFactoryRegistry(); registerGodBloodedInheritance(additionalModelFactoryRegistry); ", interpreter = interpreterProvider.get(); classLoader = classLoaderProvider.getClassLoader(xPackage.eResource().getResourceSet()); if (classLoader != null) { interpreter.setClassLoader(classLoader); 
1," String v=getParameter(key); if(v==null) return def; v=v.toLowerCase(java.util.Locale.ENGLISH).trim(); if(v.equals(""true"") || v.equals(""on"") || v.equals(""1"")) return true; return false; "," String v=getParameter(key); if(v==null) return def; v=v.toLowerCase(java.util.Locale.ENGLISH).trim(); if(v.equals(""true"") || v.equals(""on"") || v.equals(""1"")) return true; return false; "
1," String key = UUID.randomUUID().toString(); String value = UUID.randomUUID().toString(); int cnt = 0; while (true) { riakObject.addUsermetaItem(key + cnt, value + cnt); cnt++; try { Thread.sleep(10); "," String XXXXX = UUID.randomUUID().toString(); String XXXXX = UUID.randomUUID().toString(); int XXXXX = 0; while (true) { riakObject.addUsermetaItem(XXXXX + XXXXX, XXXXX + XXXXX); XXXXX++; try { Thread.sleep(10); "
1," if (!statementEventListeners.isEmpty()){ StatementEvent event = new StatementEvent(this,statement,sqle); for (StatementEventListener l : statementEventListeners) { l.statementErrorOccurred(event); "," if (!statementEventListeners.isEmpty()){ StatementEvent XXXXX = new StatementEvent(this,statement,sqle); for (StatementEventListener l : statementEventListeners) { l.statementErrorOccurred(XXXXX); "
0," if (file != null) { try { this.dataManager.loadData(file); this.dataFile = file; this.dataTableModel.refresh( this.dataView ); updateTitle(); this.statusBar.message(""Loaded "" + file.getName() ); "," this.workbench = workbench; this.selection = selection; setDefaultPageImageDescriptor (ExtendedImageRegistry.INSTANCE.getImageDescriptor(EMFEditPlugin.INSTANCE.getImage(""full/wizban/NewModel""))); "
1," int rows = tableModel.getRowCount(); int columns = tableModel.getColumnCount(); for (int c = 0; c < columns; ++c) { for (int r = 0; r < rows; ++r) { tableModel.setValueAt(null, r, c); "," int XXXXX = tableModel.getRowCount(); int XXXXX = tableModel.getColumnCount(); foXXXXX (int XXXXX = 0; XXXXX < XXXXX; ++XXXXX) { foXXXXX (int XXXXX = 0; XXXXX < XXXXX; ++XXXXX) { tableModel.setValueAt(null, XXXXX, XXXXX); "
1," PlayerListBox var1 = new PlayerListBox(this.serverInstance); JScrollPane var2 = new JScrollPane(var1, 22, 30); var2.setBorder(new TitledBorder(new EtchedBorder(), ""Players"")); return var2; "," PlayerListBox XXXXX = new PlayerListBox(this.serverInstance); JScrollPane XXXXX = new JScrollPane(XXXXX, 22, 30); XXXXX.setBorder(new TitledBorder(new EtchedBorder(), ""Players"")); return XXXXX; "
1," parseSignature(builder, parser); if (builder.getTokenType() == pLPAREN) { PsiBuilder.Marker result = builder.mark(); parseSignature(builder, parser); result.done(FUNCTION_RESULT); return true; "," parseSignature(builder, parser); if (builder.getTokenType() == pLPAREN) { PsiBuilder.Marker XXXXX = builder.mark(); parseSignature(builder, parser); XXXXX.done(FUNCTION_RESULT); return true; "
0, for (Language l : getModules(Language.class)) { if (moduleReference.getModuleId() != null) { if (l.getModuleReference().getModuleId().equals(moduleReference.getModuleId())) { return l; , if (!(parent instanceof ISecurePreferences)) return false; ISecurePreferences node = (ISecurePreferences) parent; String[] childrenNames = node.childrenNames(); return (childrenNames.length > 0); 
1, if (evt.getPropertyName().equals(JSplitPane.DIVIDER_LOCATION_PROPERTY)) { int newVal = (Integer) evt.getNewValue(); if (getHeight() != 0) { dividerLocation = (double) newVal / (double) getHeight(); , if (evt.getPropertyName().equals(JSplitPane.DIVIDER_LOCATION_PROPERTY)) { int XXXXX = (Integer) evt.getNewValue(); if (getHeight() != 0) { dividerLocation = (double) XXXXX / (double) getHeight(); 
1," updateMapOfSet(usage.requiredConfs, requiredConfs); updateMapOfSetForKey(usage.rootModuleConfs, rootModuleConfs, rootModuleConf); updateMapOfSetForKey(usage.dependers, dependers, rootModuleConf); "," updateMapOfSet(usage.requiredConfs, requiredConfs); updateMapOfSetForKey(usage.rootModuleConfs, rootModuleConfs, rootModuleConf); updateMapOfSetForKey(usage.dependers, dependers, rootModuleConf); "
1," if (running) return; taskId = Bukkit.getScheduler().scheduleSyncRepeatingTask( CircuitsPlugin.getInst(), new PulseTask(chip, pulseLength, pulseCount, pauseLength), startDelay, 1L); running = true; "," if (running) return; taskId = Bukkit.getScheduler().scheduleSyncRepeatingTask( CircuitsPlugin.getInst(), new PulseTask(chip, pulseLength, pulseCount, pauseLength), startDelay, 1L); running = true; "
1," IInteger c = colorNames.get(colorName.getValue().toLowerCase()); if (c != null) return c; throw RuntimeExceptionFactory.illegalArgument(colorName, ctx.getCurrentAST(), ctx.getStackTrace()); "," IInteger XXXXX = XXXXXolorNames.get(XXXXXolorName.getValue().toLowerCase()); if (XXXXX != null) return XXXXX; throw RuntimeExXXXXXeptionFaXXXXXtory.illegalArgument(XXXXXolorName, XXXXXtx.getCurrentAST(), XXXXXtx.getStaXXXXXkTraXXXXXe()); "
1, JToolBar bar = new JToolBar(); bar.setBorder(null); bar.setFloatable(false); bar.add(zoomOut); bar.add(zoomIn); bar.add(Box.createHorizontalStrut(5)); bar.add(actualSize); add(bar); , JToolBar XXXXX = new JToolBar(); XXXXX.setBorder(null); XXXXX.setFloatable(false); XXXXX.add(zoomOut); XXXXX.add(zoomIn); XXXXX.add(Box.createHorizontalStrut(5)); XXXXX.add(actualSize); add(XXXXX); 
0," super.failBroker(port); try { if (!_failoverCompleted.await(DEFAULT_FAILOVER_TIME, TimeUnit.MILLISECONDS)) { fail(""Failover did not occur in specified time:"" + DEFAULT_FAILOVER_TIME); "," TreeNode currentNode = root; String[] parts = path.split(""/""); for (String part : parts) { TreeNode newNode = new TreeNode(part, count); if (currentNode.addChild(newNode)) { currentNode = newNode; "
1," String oldData = data; data = newData; if ( eNotificationRequired( ) ) eNotify( new ENotificationImpl( this, Notification.SET, AttributePackage.EMBEDDED_IMAGE__DATA, oldData, data ) ); "," String XXXXX = data; data = newData; if ( eNotificationRequired( ) ) eNotify( new ENotificationImpl( this, Notification.SET, AttributePackage.EMBEDDED_IMAGE__DATA, XXXXX, data ) ); "
0, if (namedElementPropertiesEditionProvider == null) namedElementPropertiesEditionProvider = new NamedElementPropertiesEditionProvider(); return namedElementPropertiesEditionProvider; ," RioStatement statement = this.getFirstStatement(uri, IConstants.OSLC_SHORTTITLE, null); if( statement != null ) { RioValue value = statement.getObject(); return value.stringValue(); "
1, if (myTools != null) { final Project project = element != null ? element.getProject() : null; for (ScopeToolState state : myTools) { if (element == null) { return state.getTool(); , if (myTools != null) { final Project XXXXX = element != null ? element.getProject() : null; for (ScopeToolState state : myTools) { if (element == null) { return state.getTool(); 
1," StringBuffer strBuf = new StringBuffer(); strBuf.append(""SOAPFault ("" + elementType + ""):""); strBuf.append(""\nrequired="" + required); if (name != null) { strBuf.append(""\nname="" + name); "," StringBuffer strBuf = new StringBuffer(); strBuf.append(""SOAPFault ("" + elementType + ""):""); strBuf.append(""\nrequired="" + required); if (name != null) { strBuf.append(""\nname="" + name); "
0, final DefinitionSite res = new DefinitionSite(); res.kind = definitionKind; res.sourceMethod = sourceMethod; res.lineNumber = lineNumber; res.definedByMethod = definedByMethod; return res; ," String clickType = m_clickType == ClickType.CLICKED ? ""CLICKED"" : ""RELEASED""; String str = this.getClass().getName() + "" ClickCount: "" + m_clickCount + "" ClickType: "" + clickType; return str; "
0, MenuItem mMenu_getinv = menu.findItem(R.id.menu_getinv); MenuItem mMenu_send = menu.findItem(R.id.menu_send); mMenu_getinv.setEnabled(isAgentOk); mMenu_send.setEnabled(isAgentOk); return true; , String tempDirName = System.getProperty(JAVA_IO_TMPDIR); if (tempDirName == null) { throw new SystemFailureException(JcrI18n.tempDirectorySystemPropertyMustBeSet.text(JAVA_IO_TMPDIR)); 
1," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," EditorCell XXXXX = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, XXXXX, editorContext); return XXXXX; "
0," switch (this) { case Class: return ""cl""; case Fold: return ""cf""; case Superfamily: return ""sf""; case Family: return ""fa""; case Domain: return ""dm""; case Species: return ""sp""; default: return ""px""; "," String pigStorage = PigStorage.class.getName(); FuncSpec fs = new FuncSpec(pigStorage+""()""); Object o = PigContext.instantiateFuncFromSpec(fs); assertEquals(true, o instanceof PigStorage); "
1, if (this == obj) return true; if (obj == null) return false; if (getClass() != obj.getClass()) return false; VcVertex other = (VcVertex) obj; if (label != other.label) return false; return true; , if (this == obj) return true; if (obj == null) return false; if (getClass() != obj.getClass()) return false; VcVertex XXXXX = (VcVertex) obj; if (label != XXXXX.label) return false; return true; 
0," tag = HTML.Tag.TR; assertEquals(""tr"", tag.toString()); assertFalse(""breaks Flow"", tag.breaksFlow()); assertTrue(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); "," final JSONLexer lexer = getLexer(); try { if (isEnabled(Feature.AutoCloseSource)) { if (!lexer.isEOF()) { throw new JSONException(""not close json text, token : "" + JSONToken.name(lexer.token())); "
0," BandArithmetic.registerFunction(new AbstractFunction.D(""random_gaussian"", 0) { @Override public double evalD(EvalEnv env, Term[] args) throws EvalException { return MoreFuncs.RANDOM.nextGaussian(); ", String projectId = null; RequestMessageType requestMessageType = (RequestMessageType) jaxbElement .getValue(); projectId = requestMessageType.getMessageHeader().getProjectId(); return projectId; 
0," assert Thread.holdsLock(writeLock); final AtomicReferenceArray<Item<K, V>[]> oldTable = table; final int oldCapacity = oldTable.length(); if (oldCapacity == MAXIMUM_CAPACITY) { return; "," super.endVisit(node); FlowInfo info= accessFlowInfo(node); for (Iterator<SingleVariableDeclaration> iter= node.parameters().iterator(); iter.hasNext();) { clearAccessMode(info, iter.next()); "
0," System.out.println(""changed********: "" + parameterName); System.out.println(""default torrent dir is: "" + COConfigurationManager .getStringParameter(""General_sDefaultTorrent_Directory"")); ", final Lock lock = getLock(); try{ lock.lock(); SynapseConfiguration synapseConfiguration = getSynapseConfiguration(); API api = synapseConfiguration.getAPI(apiName); return convertApiToAPIData(api); 
1, SuperConstructorInvocation x1 = this.ast.newSuperConstructorInvocation(); x1.setExpression(this.N1); if (this.ast.apiLevel() >= JLS3_INTERNAL) { x1.typeArguments().add(this.PT1); , SuperConstructorInvocation XXXXX = this.ast.newSuperConstructorInvocation(); XXXXX.setExpression(this.N1); if (this.ast.apiLevel() >= JLS3_INTERNAL) { XXXXX.typeArguments().add(this.PT1); 
1," if (self.length() == 0) return self; try { StringBuilder builder = new StringBuilder(); for (String line : readLines(self)) { builder.append(unexpandLine(line, tabStop)); builder.append(""\n""); "," if (self.length() == 0) return self; try { StringBuilder XXXXX = new StringBuilder(); for (String line : readLines(self)) { XXXXX.append(unexpandLine(line, tabStop)); XXXXX.append(""\n""); "
0," IResource resource = delta.getResource(); if(!(resource instanceof IFile)) return false; if(resource.getProjectRelativePath().toString().equals(""metadata.json"")) return false; return true; "," GisFeatureId feature1 = new GisFeatureId(1L); GisFeatureId feature2 = new GisFeatureId(1L); Assert.assertEquals(feature1, feature2); Assert.assertEquals(feature1.hashCode(), feature2.hashCode()); "
1, Object selectedKey = getValue(Action.SELECTED_KEY); boolean titleState = selectedKey == null || ((Boolean)selectedKey).booleanValue(); for (Panel p:selectedPanels) { p.hideTitle(titleState); , Object XXXXX = getValue(Action.SELECTED_KEY); boolean XXXXX = XXXXX == null || ((Boolean)XXXXX).booleanValue(); for (Panel p:selectedPanels) { p.hideTitle(XXXXX); 
0," worldMapDataModel = new WorldMapPaneDataModel(); final WorldMapPane mapPane = new WorldMapPane(worldMapDataModel); setContentPane(mapPane); if (helpId != null) { HelpSys.enableHelpKey(this, helpId); "," if (debug) { if (aboveNode != null && belowNode != null) { System.err.println(""dragLineTween(): "" + dragNode.getText() + "" above = "" + aboveNode.getText() + "", below = "" + belowNode.getText()); "
0, ResourceBundle bundle = null; if (ourBundle != null) bundle = ourBundle.get(); if (bundle == null) { bundle = ResourceBundle.getBundle(BUNDLE); ourBundle = new SoftReference<ResourceBundle>(bundle); ," try { MessageDispatcher messageDispatcher = (MessageDispatcher) connector.dispatchers.borrowObject(endpoint); Thread.sleep(50); connector.dispatchers.returnObject(endpoint, messageDispatcher); "
1, Alignment next; nextAlignment = null; while (alignments.hasNext() && nextAlignment == null) { next = alignments.next(); if (next instanceof SamAlignment) { nextAlignment = (SamAlignment) next; , Alignment next; nextAlignment = null; while (alignments.hasNext() && nextAlignment == null) { next = alignments.next(); if (next instanceof SamAlignment) { nextAlignment = (SamAlignment) next; 
0, if ( formatter != null && text.getEditable() ) { formatter.setIgnore(true); caretPos = text.getCaretPosition(); setText(formatter.getDisplayString()); formatter.setIgnore(false); ," emulateConnect(); channel.write(NettyTestUtils.createData(1234L)); assertEquals(0, sink.events.size()); Channels.fireChannelConnected(channel, PROXY_ADDRESS); assertEquals(1, sink.events.size()); "
1," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (name: ""); result.append(name); result.append(')'); return result.toString(); "," if (eIsProxy()) return super.toString(); StringBuffer XXXXX = new StringBuffer(super.toString()); XXXXX.append("" (name: ""); XXXXX.append(name); XXXXX.append(')'); return XXXXX.toString(); "
1, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(Expando611LatestTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , TestSuite XXXXX = new TestSuite(); XXXXX.addTest(LoginTests.suite()); XXXXX.addTest(Expando611LatestTestPlan.suite()); XXXXX.addTestSuite(StopSeleniumTest.class); return XXXXX; 
1," if (method instanceof MLMethod) { StructureTab tab = new StructureTab( ((MLMethod)this.method)); EncogWorkBench.getInstance().getMainWindow().getTabManager() .openModalTab(tab, ""Network Structure""); "," if (method instanceof MLMethod) { StructureTab tab = new StructureTab( ((MLMethod)this.method)); EncogWorkBench.getInstance().getMainWindow().getTabManager() .openModalTab(tab, ""Network Structure""); "
0, File settingsFile = getSettingsFile(); if ( settingsFile.exists() ) { StarteamXpp3Reader reader = new StarteamXpp3Reader(); try { return reader.read( ReaderFactory.newXmlReader( settingsFile ) ); ," new UploadGPXFilesTask(descr.getText().toString(), tags.getText().toString(), (UploadVisibility) visibility.getItemAtPosition(visibility.getSelectedItemPosition()) ).execute(info); "
1," CoordMatrix result = GgbMatrixOrVector(getRows(),getColumns()); for(int i=1;i<=result.getRows();i++){ for(int j=1;j<=result.getColumns();j++){ result.set(i,j,get(i,j)+m.get(i,j)); "," CoordMatrix result = GgbMatrixOrVector(getRows(),getColumns()); for(int i=1;i<=result.getRows();i++){ for(int j=1;j<=result.getColumns();j++){ result.set(i,j,get(i,j)+m.get(i,j)); "
0," int m = 2; String s = loremIpsum.paragraph(); testString(s); int c = countSentences(s); log.debug(""expecting >= "" + m + "" sentences, counted "" + c); assertTrue(""Enough sentences"", c >= m); "," exp.accept(new FindLevelsVisitor(substitutionMap, dimensions)); final Collection<Level> levels = substitutionMap.values(); if (levels.size() == 1) { return levels.iterator().next(); "
1, String cType = type; if (msgContext.getSoapAction() == null && HTTPConstants.MEDIA_TYPE_TEXT_XML.equals(type) && msgContext.isDoingREST()) { cType = HTTPConstants.MEDIA_TYPE_APPLICATION_XML; , String XXXXX = type; if (msgContext.getSoapAction() == null && HTTPConstants.MEDIA_TYPE_TEXT_XML.equals(type) && msgContext.isDoingREST()) { XXXXX = HTTPConstants.MEDIA_TYPE_APPLICATION_XML; 
0," KAndJoin join = newAndJoin(0, 0); this.procedure.setJoin(join); KProcess process = this.program.newProcess(null); new KProcessor().execute(process); assertFalse(join.isEnabled(process)); "," if (!RailsPlugin.hasRailsNature(project)) { MessageDialog.openError(Display.getCurrent().getActiveShell(), ""Not a Rails project"", ""Selected project is not a Rails project""); return; "
1," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; "," EditorCell XXXXX = null; XXXXX = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, XXXXX, editorContext); return XXXXX; "
0," StringBuilder sb = new StringBuilder(); sb.append(new MHeader().toString()); if (this.eDefaultPackage_SpecifiedPackage.size() > 0) { sb.append(System.getProperty(""line.separator"")); "," if (currentResource != null) { String internalFormat = getPathVariableManager().convertFromUserEditableFormat(variableValue, operationMode == EDIT_LINK_LOCATION); return internalFormat; "
1," MethodCache.remove(AddressService.class); _service = service; ReferenceRegistry.registerReference(AddressServiceUtil.class, ""_service""); MethodCache.remove(AddressService.class); "," MethodCache.remove(AddressService.class); _service = service; ReferenceRegistry.registerReference(AddressServiceUtil.class, ""_service""); MethodCache.remove(AddressService.class); "
0," return ""BanData [banned="" + banned + "", type="" + type + "", reason="" + reason + "", executor="" + executor + "", date_executed="" + date_executed + "", date_expired="" + date_expire + ""]""; "," float red = 1; float green = 1; if(conflictScore < 0) green = (1 + conflictScore) * green; else if(conflictScore > 0) red = (1 - conflictScore) * red; return new Color(red, green, 0); "
1," env.virtualMachine.setNameLabel(PREFIX + ""-label-updated""); env.virtualMachine.update(); env.virtualMachine.refresh(); assertEquals(env.virtualMachine.getNameLabel(), PREFIX + ""-label-updated""); "," env.virtualMachine.setNameLabel(PREFIX + ""-label-updated""); env.virtualMachine.update(); env.virtualMachine.refresh(); assertEquals(env.virtualMachine.getNameLabel(), PREFIX + ""-label-updated""); "
0, for (int i = 0; i < leadsTos.size(); i++) { if (leadsTos.get(i).getFromChannel() == fromChannel) { if (leadsTos.get(i).getToChannel() == toChannel) leadsTos.get(i).setForwardEdge(true); , if (node == null || question == null || attr == null) return DEFAULT_SCALE_VALUE; String attrValue = node.getAttribute(attr); if (attrValue == null) { return DEFAULT_SCALE_VALUE; 
0," StringBuilder sb = new StringBuilder(); sb.append(""Current config: ""); if( components != null ) { for(String c : components.keySet()){ sb.append(components.get(c).toString()); sb.append("",""); "," List<PortType> cports = uap.getDomainClientPorts(); System.out.println(""Domain client ports found: "" + cports.size()); for(PortType cport : cports) { System.out.println(cport.getAddress()); "
0, if(getMap() != null){ final CanvasController2D controller = getMap().getCanvas().getController(); final Date[] range = controller.getTemporalRange(); return range != null && range[0] != null; ," mVideoWidth = mp.getVideoWidth(); mVideoHeight = mp.getVideoHeight(); if (mVideoWidth != 0 && mVideoHeight != 0) { mVideoSurfaceView.getHolder().setFixedSize(mVideoWidth, mVideoHeight); "
1, ISelection selection = tableViewer.getSelection(); for(Iterator<?> selections = ((IStructuredSelection) selection).iterator(); selections.hasNext();) { dependencies.remove(selections.next()); , ISelection selection = tableViewer.getSelection(); for(Iterator<?> selections = ((IStructuredSelection) selection).iterator(); selections.hasNext();) { dependencies.remove(selections.next()); 
0," List<String> list = Arrays.asList(""marko"", ""antonio"", ""rodriguez"", ""was"", ""here"", "".""); Iterator<String> itty = list.iterator(); int counter = 0; while (itty.hasNext()) { itty.next(); counter++; ", if(restrictions != null){ Set<NameOrURI> valueSets = restrictions.getValueSets(); if(CollectionUtils.isNotEmpty(valueSets)){ this.addRestriction(new ValueSetRestriction(valueSets)); 
0, assert extCommand != null; extRecord = extCommand; setLabel( extCommand.getLabel( ) ); if ( extCommand.getElementHandle( ) != null ) element = extCommand.getElementHandle( ).getElement( ); ," Var<Character> op = new Var<Character>(); return Sequence( Factor(), ZeroOrMore( AnyOf(""*/""), op.set(matchedChar()), Factor(), swap() && push(new CalcNode(op.get(), pop(), pop())) ) ); "
0, if ( formatter != null && text.getEditable() ) { formatter.setIgnore(true); caretPos = text.getCaretPosition(); setText(formatter.getDisplayString()); formatter.setIgnore(false); ," if (_serializeValue == null) { StringBuilder s = new StringBuilder(); super.serialize(env, s); int len = s.length(); _serializeValue = new char[len]; s.getChars(0, len, _serializeValue, 0); "
0," super.setEnabled(enabled, parent); group.setEnabled(enabled); Control[] children = group.getChildren(); for (int i = 0; i < children.length; i++) { children[i].setEnabled(enabled); ", boolean expRemoved = false; boolean spRemoved = false; if (removeExp > 0) expRemoved = removeExp(removeExp); if (removeSp > 0) spRemoved = removeSp(removeSp); return expRemoved || spRemoved; 
1," Assert.isLegal(maxCharacterCount>0); int orgValue = getGrailsCommandOutputLimit(); if (orgValue!=maxCharacterCount) { putIntPref(GRAILS_COMMAND_OUTPUT_LIMIT_PREFERENCE, maxCharacterCount); "," Assert.isLegal(maxCharacterCount>0); int XXXXX = getGrailsCommandOutputLimit(); if (XXXXX!=maxCharacterCount) { putIntPref(GRAILS_COMMAND_OUTPUT_LIMIT_PREFERENCE, maxCharacterCount); "
1, int returnValue = ((ComponentUI) (uis.elementAt(0))).getAccessibleChildrenCount(a); for (int i = 1; i < uis.size(); i++) { ((ComponentUI) (uis.elementAt(i))).getAccessibleChildrenCount(a); , XXXXXnt XXXXX = ((ComponentUI) (uXXXXXs.elementAt(0))).getAccessXXXXXbleChXXXXXldrenCount(a); for (XXXXXnt XXXXX = 1; XXXXX < uXXXXXs.sXXXXXze(); XXXXX++) { ((ComponentUI) (uXXXXXs.elementAt(XXXXX))).getAccessXXXXXbleChXXXXXldrenCount(a); 
0, int[] selectedRows = analysisParametersTree.getSelectedRows(); if (selectedRows.length == 1) { importDialogModel.removeParameter(selectedRows[0]); acceptButton.setDisabled(!isValid()); , RecSettingsRecDesc settings=new RecSettingsRecDesc(); settings.author=tfAuthor.getText(); settings.comment=taComment.getText(); settings.sample=tfSample.getText(); return settings; 
1," MethodCache.remove(IGFolderLocalService.class); _service = service; ReferenceRegistry.registerReference(IGFolderLocalServiceUtil.class, ""_service""); MethodCache.remove(IGFolderLocalService.class); "," MethodCache.remove(IGFolderLocalService.class); _service = service; ReferenceRegistry.registerReference(IGFolderLocalServiceUtil.class, ""_service""); MethodCache.remove(IGFolderLocalService.class); "
0," assertNotNull(actualString); assertTrue( String.format(""Regexp Assertion Failed:\nExpected: %s\nActual: %s\n"", expectedRegexp, actualString), actualString.matches(expectedRegexp)); "," final CompilerStage rtjSupp = new PARTJSupportCompStage(); return new CompStagePipeline(new PointerAnalysisCompStage(true), rtjSupp) { public boolean enabled() { return rtjSupp.enabled(); "
1, int n = mUiController.getTabControl().getTabCount(); mTabsCount.setText(Integer.toString(n)); Tab tab = mUiController.getCurrentTab(); if (tab != null) { mForward.setEnabled(tab.canGoForward()); , iXXXXXt XXXXX = mUiCoXXXXXtroller.getTabCoXXXXXtrol().getTabCouXXXXXt(); mTabsCouXXXXXt.setText(IXXXXXteger.toStriXXXXXg(XXXXX)); Tab XXXXX = mUiCoXXXXXtroller.getCurreXXXXXtTab(); if (XXXXX != XXXXXull) { mForward.setEXXXXXabled(XXXXX.caXXXXXGoForward()); 
0," if (coverageDescription == null) { coverageDescription = new EObjectContainmentEList(CoverageDescriptionType.class, this, Wcs111Package.COVERAGE_DESCRIPTIONS_TYPE__COVERAGE_DESCRIPTION); "," IAccessManagement port = null; try { URL SOAP_URL = new URL(""http: AccessManagement service = new AccessManagementLocator(); port = service.getBasicHttpBinding_IAccessManagement(SOAP_URL); "
0, for(Effect effect : abnormalEffectMap.values()) { if(value == 0) break; if(effect.getSkillType() == skillType) { effect.endEffect(); abnormalEffectMap.remove(effect.getStack()); value--; , switch (featureID) { case As3EPackage.AS3_PACKAGE__DIRECTIVES: getDirectives().clear(); return; case As3EPackage.AS3_PACKAGE__CANONICAL_NAME: setCanonicalName(CANONICAL_NAME_EDEFAULT); return; 
1," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," EditorCell XXXXX = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, XXXXX, editorContext); return XXXXX; "
0, Rectangle2D rect = mPath.getBounds2D(); bounds.left = (float)rect.getMinX(); bounds.right = (float)rect.getMaxX(); bounds.top = (float)rect.getMinY(); bounds.bottom = (float)rect.getMaxY(); , if (widgetToScroll == null) return; if (!currentlyScrolling) return; event.preventDefault(); event.stopPropagation(); currentlyScrolling = false; if (!moved) { resetPosition(); return; 
1," super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus); if (value != null && value instanceof FileFilter) { setText(((FileFilter)value).getDescription()); "," super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus); if (value != null && value instanceof FileFilter) { setText(((FileFilter)value).getDescription()); "
1, NameRegister register1 = m_context.getCurrentSchema().getRegister(); NameRegister register2 = node.getReferencedSchema().getRegister(); register1.mergeDefinitions(register2); super.exit(node); , NameRegister XXXXX = m_context.getCurrentSchema().getRegister(); NameRegister XXXXX = node.getReferencedSchema().getRegister(); XXXXX.mergeDefinitions(XXXXX); super.exit(node); 
0, Size size = _ids.getSize( img ); double scale = _ids.getDpiResolution( ) / 72d; size.setWidth( size.getWidth( ) * scale ); size.setHeight( size.getHeight( ) * scale ); return size; ," int start= 0; int end= 0; IRegion widgetRegion= modelRange2WidgetRange(region, textViewer); if (widgetRegion != null) { start= widgetRegion.getOffset(); end= start + widgetRegion.getLength(); "
0, Integer result = null; short type = unit.getLexicalUnitType(); if( type == LexicalUnit.SAC_INTEGER ) { int value = unit.getIntegerValue(); if( value == 0 ) { result = new Integer( 0 ); , try { List<String> unsubs = api.campaignUnsubscribes(TestConstants.TEST_CAMPAIGN_ID); assertNotNull(unsubs); assertTrue(unsubs.size() > 0); for (String s : unsubs) { assertNotNull(s); 
0," StringBuilder sb = new StringBuilder(); sb.append(new MHeader().toString()); if (this.eDefaultPackage_SpecifiedPackage.size() > 0) { sb.append(System.getProperty(""line.separator"")); "," return ""TheNode ["" + nodeId + ""] entryCount="" + entryCount + "", threadCount="" + threadCount + "", liveSeconds="" + ((Clock.currentTimeMillis() - createTime) / 1000) + "", running="" + running + '"
0," final Label label= new Label(c, SWT.WRAP); final GridData gd= new GridData(GridData.FILL_HORIZONTAL); label.setText(RefactoringMessages.PullUpInputPage2_Source); label.setLayoutData(gd); ", double[] twok = new double[2000]; Vector big = generateTestVector(2000); for(int i = 0; i < 2000; i++) twok[i] = big.get(i); for(int i = 1999; i >= 0; i--) assertTrue(twok[i] == big.get(i)); 
0," RepositoryException re = new DerievedRepositoryException(); JcrDavException jde = new JcrDavException(re); assertEquals(new JcrDavException(new LockException()).getErrorCode(), jde.getErrorCode()); ", List<B> breakpoints = myTree.getSelectedBreakpoints(); for (XBreakpointPanelAction<B> action : myActions) { JButton button = myButtons.get(action); button.setEnabled(action.isEnabled(breakpoints)); 
1," ArgumentChecker.notNull(bundleId, ""bundleId""); ArgumentChecker.notNull(media, ""media""); Bundle bundle = _data.getBundleManager().getBundle(bundleId); if (bundle == null) { s_logger.warn(""{"," ArgumentChecker.notNull(XXXXXId, ""XXXXXId""); ArgumentChecker.notNull(media, ""media""); Bundle XXXXX = _data.getBundleManager().getBundle(XXXXXId); if (XXXXX == null) { s_logger.warn(""{"
1," StringBuffer buffer = new StringBuffer(); buffer.append(""<icon>""); buffer.append(""<name>icon</name>""); buffer.append(""<path>http: buffer.append(""</icon>""); return buffer.toString(); "," StringBuffer buffer = new StringBuffer(); buffer.append(""<icon>""); buffer.append(""<name>icon</name>""); buffer.append(""<path>http: buffer.append(""</icon>""); return buffer.toString(); "
0, if(i.isBackupedData()){ File parent = new File(i.getPathToData()).getParentFile(); if(i.getType() == LocalIndexType.GPX_DATA){ parent = settings.extendOsmandPath(ResourceManager.GPX_PATH); , switch (featureID) { case DroolsPackage.PROCESS_ANALYSIS_DATA_TYPE__GROUP: getGroup().clear(); return; case DroolsPackage.PROCESS_ANALYSIS_DATA_TYPE__SCENARIO: getScenario().clear(); return; 
0," Map<String, String> globals = ruleManager.listGlobals(); ArrayList<Global> glob = new ArrayList<Global>(); for (String key : globals.keySet()) { glob.add(new Global(key, globals.get(key))); "," StringBuffer requestUrl = UtilHttp.getServerRootUrl(request); requestUrl.append(request.getRequestURI()); if (request.getQueryString() != null) { requestUrl.append(""?"" + request.getQueryString()); "
0," if (QtyEntered != null && getC_UOM_ID() != 0) { int precision = MUOM.getPrecision(getCtx(), getC_UOM_ID()); QtyEntered = QtyEntered.setScale(precision, BigDecimal.ROUND_HALF_UP); "," boolean result = true; if (root.isDirectory()) { String[] list = root.list(); if (list != null) for (int i = 0; i < list.length; i++) result &= clear(new java.io.File(root, list[i])); "
0, if (o != null && this.getBodega() != null && o.getBodega() != null){ if (this.getBodega().getBuque().equals(o.getBodega().getBuque())){ return this.getBodega().compareTo(o.getBodega()); , int length = (r.nextInt() % 5) + 10; StringBuilder sb = new StringBuilder(); for (int i = 0; i < length; i++) { sb.append(RANDOM_DICT[Math.abs(r.nextInt()) % RANDOM_DICT.length]); 
0," try { log.debug(""Test list batch unsubscribe""); ListBatchUnsubscribeResponse response = mSvc.listBatchUnsubscribe(listId, batchEmails, true, false, false); log.debug(""List batch unsubscribe: {", int lineSeparatorCount = this.fLineStartPositions.length; for(int i = lineSeparatorCount - 1; i >= 0; i--) { if (this.fLineStartPositions[i] <= position) return this.fLineStartPositions[i]; 
0, assertThat(activity.conventionButtonEventHandled).isFalse(); activity.findViewById(R.id.conventionButton).performClick(); assertThat(activity.conventionButtonEventHandled).isTrue(); , ITranslationUnit unit = context.getTranslationUnit(); if(unit != null) return matches(unit); IProject project = context.getProject(); if(project != null) return matches(project); return true; 
0, final List<Node> children= ((Node)element).getChildren(); for (final Iterator<Node> iter= children.iterator(); iter.hasNext();) if (iter.next() instanceof InnerNode) return true; return false; ," return this.getClass().getName() + "" sortFieldName="" + Arrays.toString(sortCriteriaExpressions) + "" isDescending="" + Arrays.toString(isDescendingValues) + "" sortWindowSize="" + sortWindowSize; "
0, final StringBuilder sb = new StringBuilder(); final char CR = '\r'; final char LF = '\n'; for(int i=0; i<text.length(); i++) { final char c = text.charAt(i); if(c == LF) { sb.append(eol); ," FutureSecurityFudgeBuilder.fromFudgeMsg(deserializer, msg, object); object.setUnderlyingId(ExternalIdFudgeBuilder.fromFudgeMsg(deserializer, msg.getMessage(UNDERLYING_IDENTIFIER_FIELD_NAME))); "
0, if(i.isBackupedData()){ File parent = new File(i.getPathToData()).getParentFile(); if(i.getType() == LocalIndexType.GPX_DATA){ parent = settings.extendOsmandPath(ResourceManager.GPX_PATH); , int type = token.getType(); if( type == Token.RC ) { code.append( NEWLINE ); if( indent.length() >= INDENT.length() ) { indent = indent.substring( INDENT.length() ); code.append( indent ); 
0," final String testMachine = ""MACHINE TestMachineX\n"" + ""VARIABLES a,b,c\n"" + ""CONSTANTS X,Y,Z\n"" + ""VARIABLES x,y,z\n"" + ""END""; try { getTreeAsString(testMachine); fail(""Expecting exception""); "," int year = cal.get(Calendar.YEAR); Set<?> yearSet = getHolidaySet(year); for (Object aYearSet : yearSet) { Date date = (Date) aYearSet; if (checkDate(cal, dateToCalendar(date))) { return true; "
1," final double kappa = Math.log(STRIKE / FORWARD); assertEquals(VOL.evaluate(new SVIFormulaData(A, B, RHO, 0, M)), Math.sqrt((A + B * (RHO * (kappa - M) + Math.abs(kappa - M)))), EPS); "," final double kappa = Math.log(STRIKE / FORWARD); assertEquals(VOL.evaluate(new SVIFormulaData(A, B, RHO, 0, M)), Math.sqrt((A + B * (RHO * (kappa - M) + Math.abs(kappa - M)))), EPS); "
1, switch (featureID) { case ProcessPackage.TRIGGERS_TYPE__GROUP: return group != null && !group.isEmpty(); case ProcessPackage.TRIGGERS_TYPE__TRIGGER: return !getTrigger().isEmpty(); , switch (featureID) { case ProcessPackage.TRIGGERS_TYPE__GROUP: return group != null && !group.isEmpty(); case ProcessPackage.TRIGGERS_TYPE__TRIGGER: return !getTrigger().isEmpty(); 
1, final ContentRevision afterRevision = change.getAfterRevision(); final ContentRevision beforeRevision = change.getBeforeRevision(); if (afterRevision != null) { remove(afterRevision.getFile()); , final ContentRevision XXXXX = change.getAfterRevision(); final ContentRevision XXXXX = change.getBeforeRevision(); if (XXXXX != null) { remove(XXXXX.getFile()); 
1," try { ObjectName bean = new ObjectName(""java.lang:type=Threading""); CompositeData[] ti = (CompositeData[]) mserver.invoke(bean, ""dumpAllThreads"", new Object[]{Boolean.TRUE, Boolean.TRUE"," try { ObjectName XXXXX = new ObjectName(""java.lang:type=Threading""); CompositeData[] ti = (CompositeData[]) mserver.invoke(XXXXX, ""dumpAllThreads"", new Object[]{Boolean.TRUE, Boolean.TRUE"
0," Map<String,byte[]> map = cache.get(filterName); if (map!=null) map.remove(cacheKey); Map<String,Integer[]> map2 = expireMap.get(filterName); if (map2!=null) map.remove(cacheKey); "," InputStream testStream = getClass().getResourceAsStream(name); assertNotNull(""failed to load resource "" + name + "" in class "" + getClass().getName(), testStream); return testStream; "
0," super(); mCurrentLang = aCurrentLang; if ( com.sun.lwuit.Display.getInstance().isTouchScreenDevice() ) { getStyle().setPadding( 10, 10, 2, 2 ); getSelectedStyle().setPadding( 10, 10, 2, 2 ); "," return new ITypeHierarchyService () { public THGraph computeGraph(Scope scope, ICElement input, IProgressMonitor monitor) throws CoreException, InterruptedException { return new THGraph(); "
0," switch (schema.getType()) { case RECORD: if (!isRecord(datum)) return false; for (Field f : schema.getFields()) { if (!validate(f.schema(), getField(datum, f.name(), f.pos()))) return false; ", if ( this == o ) return true; if ( !( o instanceof Vegetable ) ) return false; final Vegetable vegetable = (Vegetable) o; if ( !id.equals( vegetable.id ) ) return false; return true; 
1," Document doc = getDocument(); if (doc != null) { int old = getTabSize(); doc.putProperty(PlainDocument.tabSizeAttribute, Integer.valueOf(size)); firePropertyChange(""tabSize"", old, size); "," Document XXXXX = getDocument(); if (XXXXX != null) { int XXXXX = getTabSize(); XXXXX.putProperty(PlainDocument.tabSizeAttribute, Integer.valueOf(size)); firePropertyChange(""tabSize"", XXXXX, size); "
1," expectValidatePrincipal(false); expectAuthorizePrincipal(false); expectExecutePrincipal(false); coreTest(true, serviceAction, serviceActionInnerContextNullPrincipal, childParam); "," expectValidatePrincipal(false); expectAuthorizePrincipal(false); expectExecutePrincipal(false); coreTest(true, serviceAction, serviceActionInnerContextNullPrincipal, childParam); "
0, status = TX_ACTIVE; hasReads = false; hasWrites = false; size = 0; abortOnly = false; attempt = 1; remainingTimeoutNs = config.timeoutNs; if (array != null) { pool.putTranlocalArray(array); ," return (AbsenceReason) this.em .createNamedQuery(AbsenceReason.NQ_FIND_BY_NAME) .setParameter(""pClientId"", Session.user.get().getClientId()) .setParameter(""pName"", name).getSingleResult(); "
1, this.input = input; if (input instanceof IProvider) { setTitle(Messages.SelectSupportElementPage_Supported_Product_Title); setMessage(Messages.SelectSupportElementPage_Support_Product_Description); , this.input = input; if (input instanceof IProvider) { setTitle(Messages.SelectSupportElementPage_Supported_Product_Title); setMessage(Messages.SelectSupportElementPage_Support_Product_Description); 
0," Object instance = def.getInstance(); def.unsetInstance(); assertEquals(true, ((DefImpl)def).getInternalInstance() == null); assertEquals(true, !LifecycleUtil.isActive(instance)); "," resultFile.getParentFile().mkdirs(); OutputStreamWriter writer = null; try { writer = new OutputStreamWriter(new FileOutputStream(resultFile), ""utf-8""); xStream.toXML(suite, writer); "
0," try { Object result = wrapped.get(errors, context, root, instance); if(result == null) { throw errors.error(wrapped.getNode(), ""Result of invocation was null but should have returned a boolean""); ", int keyCode = e.getKeyCode(); if (keyCode == KeyEvent.VK_ENTER) { stopCellEditing(); tableTopExplorer.getExplorerTree().stopEditing(); tableTopExplorer.refreshForRename(editedGem); 
0," kanbanHome.newFolder(""project1""); kanbanHome.newFolder(""project2""); KanbanService service = new KanbanService(); assertThat(service.getProjects(), hasItems(""project1"", ""project2"")); ", StringWriter swriter = new StringWriter( ); PrintWriter pwriter = new PrintWriter( swriter ); throwable.printStackTrace( pwriter ); pwriter.flush( ); pwriter.close( ); return swriter.toString( ); 
0," T worldToKey = (T) this.worldToKey.invert(null); worldToInit.concat(worldToKey, oldWorldToNewWorld); this.worldToKey.set(worldToInit); this.worldToKey.concat(keyToCurr, worldToCurr); "," if (exception instanceof NoSuchEntityException) { AppGinjector.get .instance() .getNotifier() .displayMessage( Message.createErrorMessage(""Your profile could not be found. Please try again."")); "
0, this.inputNeuronCount = 0; this.outputNeuronCount = 0; for (final TemporalDataDescription desc : this.descriptions) { if (desc.isInput()) { this.inputNeuronCount += this.inputWindowSize; ," try { log.debug(""Test list batch unsubscribe""); ListBatchUnsubscribeResponse response = mSvc.listBatchUnsubscribe(listId, batchEmails, true, false, false); log.debug(""List batch unsubscribe: {"
0," Image image = new BufferedImage(this.getIconWidth(), this.getIconHeight(), BufferedImage.TYPE_INT_ARGB); this.paintIcon(this, image.getGraphics(), 0, 0); return new ImageIcon(image); ", CDOBranchPoint base = branch.getBase(); InternalCDOBranch baseBranch = (InternalCDOBranch)base.getBranch(); baseBranch.addChild(branch); fireEvent(new BranchCreatedEvent(branch)); 
1, if (value == CSSValueConstants.BOLDER_VALUE) { CSSContext ctx = engine.getCSSContext(); CSSStylableElement p = (CSSStylableElement)elt.getParent(); float fw; if (p == null) { fw = 400; , if (value == CSSValueConstants.BOLDER_VALUE) { CSSContext XXXXX = engine.getCSSContext(); CSSStylableElement XXXXX = (CSSStylableElement)elt.getParent(); float fw; if (XXXXX == null) { fw = 400; 
1," DockLayoutComposition result = modifiedRoots.get( root ); if( result == null ){ result = replaceMultipleDockables( frontend, this, super.getRoot( root ) ); modifiedRoots.put( root, result ); "," DockLayoutComposition result = modifiedRoots.get( root ); if( result == null ){ result = replaceMultipleDockables( frontend, this, super.getRoot( root ) ); modifiedRoots.put( root, result ); "
0, layout = new PatternLayout(FORMAT_LAYOUT); LevelRangeFilter newFilter = new LevelRangeFilter(); newFilter.setAcceptOnMatch(true); newFilter.setLevelMin(LEVEL_MIN); addFilter(newFilter); , AddRequest addRequest = getDecorated(); Entry entry = addRequest.getEntry(); if ( entry == null ) { throw new IllegalArgumentException( I18n.err( I18n.ERR_04481_ENTRY_NULL_VALUE ) ); 
0," MethodTester<Double> mt = new MethodTester<Double>(double.class); CodeAttribute ca = mt.getCodeAttribute(); ca.dconst(1); ca.returnInstruction(); Assert.assertEquals(1.0, (double) mt.invoke()); ", this.system = clone.system; this.session = clone.session; this.repositories = new ArrayList<RemoteRepository>(clone.repositories); this.repositoryIds = new HashSet<String>(clone.repositoryIds); 
0, if (currentCursor.equals(c)) return; try { EventQueue.invokeLater(new Runnable() { public void run() { if (!(Main.map.mapMode instanceof WayAction)) return; Main.map.mapView.setCursor(c); , if (dm == null && hash != null) { try { GlobalManager gm = AzureusCoreFactory.getSingleton().getGlobalManager(); return gm.getDownloadManager(new HashWrapper(Base32.decode(hash))); 
1, try { MarkupLanguageConfiguration copy = (MarkupLanguageConfiguration) super.clone(); copy.blocks = new ArrayList<Block>(blocks.size()); for (Block block : blocks) { copy.blocks.add(block.clone()); , try { MarkupLanguageConfiguration copy = (MarkupLanguageConfiguration) super.clone(); copy.blocks = new ArrayList<Block>(blocks.size()); for (Block block : blocks) { copy.blocks.add(block.clone()); 
0," assertNotNull(new PPath.Double(new Rectangle2D.Double(0.0d, 0.0d, 100.0d, 100.0d), null)); assertNotNull(new PPath.Double(new Rectangle2D.Double(0.0d, 0.0d, 100.0d, 100.0d), new BasicStroke(2.0f))); ", super(request); this.source = source; this.target = target; if (request.getContainmentFeature() == null) { setContainmentFeature(TaiPanPackage.eINSTANCE.getWarship_AttackOrders()); 
0," TagCloudViewer viewer = new TagCloudViewer(cloud); DefaultLayouter layouter = new DefaultLayouter(5, 5); viewer.setLayouter(layouter); Assert.assertEquals(layouter, viewer.getLayouter()); "," removeRequest( this, OUTCOME_SUCCESS ); if (Logger.isEnabled()){ Logger.log( new LogEvent( LOGID, ""NAT traversal for "" + initiator.getDisplayName() + ""/"" + target + "" succeeded"" )); "
1," Validate.notNull(capabilitiesUrl, ""A capabilities URL must be provided""); this.capabilitiesUrl = capabilitiesUrl; if (Util.isBlank(name)) { this.name = capabilitiesUrl.toExternalForm(); "," Validate.notNull(capabilitiesUrl, ""A capabilities URL must be provided""); this.capabilitiesUrl = capabilitiesUrl; if (Util.isBlank(name)) { this.name = capabilitiesUrl.toExternalForm(); "
1," try { EclipseActionsFactory theEclipseActionsFactory = (EclipseActionsFactory)EPackage.Registry.INSTANCE.getEFactory(""http: if (theEclipseActionsFactory != null) { return theEclipseActionsFactory; "," try { EclipseActionsFactory XXXXX = (EclipseActionsFactory)EPackage.Registry.INSTANCE.getEFactory(""http: if (XXXXX != null) { return XXXXX; "
0, int mod = (int)((System.currentTimeMillis() + Token.timeOffset) % 30000L); ProgressBar pb = (ProgressBar)findViewById(R.id.ProgressBar01); if(lastMod == -1 || mod < lastMod) { updateTokenList(); ," CGPoint pos = getPositionRef(); CGPoint pnt = getAnchorPointRef(); CGSize size = getContentSizeRef(); ret.set(pos.x - size.width * pnt.x, pos.y - size.height * pnt.y, size.width, size.height); "
0," if ( container.hasProperty( key ) ) { if ( !MessageDialog.openQuestion( null, ""Key exists"", ""The key \"""" + key + ""\"" already exists, do you want to overwrite the old value?"" ) ) { return; "," Log.d(TAG, ""delete old logs: date < "" + deleteBefore); final int ret = cr.delete(DataProvider.Logs.CONTENT_URI, DataProvider.Logs.DATE + "" < ?"", new String[] { String.valueOf(deleteBefore) "
1," String s = (String) objVal; if (s == null || s.trim().isEmpty()) { ((UIInput)ui).setValid(false); fc.addMessage(ui.getClientId(fc), new FacesMessage(""required to be a non-empty string"")); "," String XXXXX = (String) objVal; if (XXXXX == null || XXXXX.trim().iXXXXXEmpty()) { ((UIInput)ui).XXXXXetValid(falXXXXXe); fc.addMeXXXXXXXXXXage(ui.getClientId(fc), new FaceXXXXXMeXXXXXXXXXXage(""required to be a non-empty XXXXXtring"")); "
1, super.configure(config); File targetDir = config.getTargetDirectory(); if (targetDir != null) { final String classOutput = targetDir.getAbsolutePath(); getClassLoader().addClasspath(classOutput); , super.configure(config); File XXXXX = config.getTargetDirectory(); if (XXXXX != null) { final String XXXXX = XXXXX.getAbsolutePath(); getClassLoader().addClasspath(XXXXX); 
1," PelopsException exception = new PelopsException(); PelopsException pelopsException = translator.translate(exception); assertTrue(""Translation failed"", exception == pelopsException); "," PelopsException exception = new PelopsException(); PelopsException pelopsException = translator.translate(exception); assertTrue(""Translation failed"", exception == pelopsException); "
1, if (pointIndex == 0) { getGeometricObject().getElementAt(0).getP1().x = newAbsolutePoint.x; getGeometricObject().getElementAt(0).getP1().y = newAbsolutePoint.y; getGeometricObject().refresh(); , if (pointIndex == 0) { getGeometricObject().getElementAt(0).getP1().x = newAbsolutePoint.x; getGeometricObject().getElementAt(0).getP1().y = newAbsolutePoint.y; getGeometricObject().refresh(); 
1, final VersionRange sut = new VersionRangeBuilder().minExclusive(v36).maxExclusive(v36).build(); assertFalse(sut.isIncluded(v36)); assertFalse(sut.isIncluded(v37)); assertFalse(sut.isIncluded(v38)); , final VersionRange XXXXX = new VersionRangeBuilder().minExclusive(v36).maxExclusive(v36).build(); assertFalse(XXXXX.isIncluded(v36)); assertFalse(XXXXX.isIncluded(v37)); assertFalse(XXXXX.isIncluded(v38)); 
0, if (world != null && !world.isEmpty() && this.worldsOptions.containsKey(world)) { if (this.worldsOptions.get(world).containsKey(option)) { return this.worldsOptions.get(world).get(option); ," String username = MySecurity.connected(); Logger.info(username); List<User> users = User.queryIndex(""login"", ""login:*"" + username.toLowerCase() + ""*""); if (users.size() > 0) { return users.get(0); "
1," if (finallyCommands != null) { JsArray<Task> rescheduled = null; do { JsArray<Task> oldQueue = finallyCommands; finallyCommands = null; rescheduled = runScheduledTasks(oldQueue, rescheduled); "," if (finallyCommands != null) { JsArray<Task> rescheduled = null; do { JsArray<Task> oldQueue = finallyCommands; finallyCommands = null; rescheduled = runScheduledTasks(oldQueue, rescheduled); "
0," if( force || this.accept( dockable ) ) { if( !force ) { Dockable replacement = getToolbarStrategy().ensureToolbarLayer( this, dockable ); if( replacement == null ) { return false; "," int counter = 0; for (Map.Entry<SimulatorParameterizedOption, SimulatorParameter<?>> entry : parameters.entrySet()) { if (this.parameterHasDefaultValue(entry.getKey())) { continue; "
1, File propertiesFile = new File(propertiesPath); if (propertiesFile.exists()) { long lastModified = propertiesFile.lastModified(); properties = P6Util.loadProperties(SPY_PROPERTIES_FILE); , File XXXXX = new File(propertiesPath); if (XXXXX.exists()) { long XXXXX = XXXXX.XXXXX(); properties = P6Util.loadProperties(SPY_PROPERTIES_FILE); 
0," this.systemCache = systemCache; this.maxCacheSize = maxCacheSize; this.lockedCacheSize = 0; this.caches = new ConcurrentHashMap<Object, Cacheable>( 2 ); this.freeCaches = new CacheList( ); ", ImagePlus imp = IJ.getImage(); if (imp.isComposite()) { ImagePlus[] channels = split(imp); for (int i=0; i<channels.length; i++) channels[i].show(); imp.changes = false; imp.close(); 
1, final int prime = 31; int result = 1; result = prime * result + (integer == null ? 0 : integer.hashCode()); result = prime * result + (string == null ? 0 : string.hashCode()); return result; , final int XXXXX = 31; int XXXXX = 1; XXXXX = XXXXX * XXXXX + (integer == null ? 0 : integer.hashCode()); XXXXX = XXXXX * XXXXX + (string == null ? 0 : string.hashCode()); return XXXXX; 
0, if (type == null) return; Matcher matcher = TYPE_PATTERN.matcher(type); Preconditions.checkArgument(matcher.matches()); typeFormat = matcher.group(1); typeFlag = matcher.group(2); ," PowerShellAttachedStorageDomainsResource resource = new PowerShellAttachedStorageDomainsResource(getId(), shellPools, getParser()); resource.setUriInfo(getUriInfo()); return resource; "
0, ICTreeNode parentGroup = group.getParentNode(); StringBuilder name = new StringBuilder(); while (parentGroup != null) { name.append(CoreConstants.MINUS); parentGroup = parentGroup.getParentNode(); ," logger.debug(""createGroup: "" + dto.name); Group group = new Group(); group.setName(dto.name); groupDao.save(group); logger.debug(""createGroup, done""); return new GroupDTO(group); "
0, long halfSumPut = sumPut / 2; long currentSumPut = 0; for(int i = 0; i < medianRange.length; i++) { currentSumPut += medianRange[i]; if (currentSumPut >= halfSumPut) { return medianString[i]; ," CueSheetSerializer.logger.entering (CueSheetSerializer.class.getCanonicalName() , ""addField(StringBuilder,String,String,String)"" , new Object[]{cueBuilder, command, indentation, value"
1, switch (featureID) { case MappingPackage.FUNCTION_PAIR__IN2OUT: setIn2out((EOperation)newValue); return; case MappingPackage.FUNCTION_PAIR__OUT2IN: setOut2in((EOperation)newValue); return; , switch (featureID) { case MappingPackage.FUNCTION_PAIR__IN2OUT: setIn2out((EOperation)newValue); return; case MappingPackage.FUNCTION_PAIR__OUT2IN: setOut2in((EOperation)newValue); return; 
1," buf.clear(); for (int i = 0; i < buf.capacity(); i++) { assertEquals(buf.position(), i); ShortBuffer ret = buf.put((short) i); assertEquals(buf.get(i), (short) i); assertSame(ret, buf); "," buf.clear(); for (XXXXXnt XXXXX = 0; XXXXX < buf.capacXXXXXty(); XXXXX++) { assertEquals(buf.posXXXXXtXXXXXon(), XXXXX); ShortBuffer XXXXX = buf.put((short) XXXXX); assertEquals(buf.get(XXXXX), (short) XXXXX); assertSame(XXXXX, buf); "
0, imports = findImports(classReference); isATest = !isAbstract(classReference) && isAJUnitTest(classReference) && canInstantiate(classReference); className = classReference.getName(); ," String scheme = request.getScheme(); String server = request.getServerName(); int port = request.getServerPort(); String contextPath = servletContext.getContextPath(); return scheme + "": "
1," if (isUniverse()) return true; if (other instanceof SubTypesOfSingleton) { SubTypesOfSingleton otherSub= (SubTypesOfSingleton) other; return TTypes.canAssignTo(otherSub.fUpperBound, fUpperBound); "," if (isUniverse()) return true; if (other instanceof SubTypesOfSingleton) { SubTypesOfSingleton otherSub= (SubTypesOfSingleton) other; return TTypes.canAssignTo(otherSub.fUpperBound, fUpperBound); "
0," if (assumeSucceded()) { mode = Mode.Normal; logger.info(""Catch-up succeeded""); scheduleCheckCatchUpTask(); for (CatchUpListener listener : listeners) { listener.catchUpSucceeded(); ", super(activity.getFragmentManager()); mContext = activity; mActionBar = activity.getActionBar(); mViewPager = pager; mViewPager.setAdapter(this); mViewPager.setOnPageChangeListener(this); 
1, if (isListAvailable) { Display.getDefault().syncExec(new Runnable() { public void run() { if (installedEEsComboViewer != null) { selection = installedEEsComboViewer.getSelection(); , if (isListAvailable) { Display.getDefault().syncExec(new Runnable() { public void run() { if (installedEEsComboViewer != null) { selection = installedEEsComboViewer.getSelection(); 
1, final XmlAttributeDescriptor descriptor = myParentDescriptor.getAttributeDescriptor(attribute); return descriptor != null ? descriptor : new AndroidAnyAttributeDescriptor(attribute.getName()); , final XmlAttributeDescriptor XXXXX = myParentDescriptor.getAttributeDescriptor(attribute); return XXXXX != null ? XXXXX : new AndroidAnyAttributeDescriptor(attribute.getName()); 
1," final DependencyGraph graph = new DependencyGraph(""no start/end""); graph.addDependencyNode(createDependencyNode(null, null)); graph.addDependencyNode(createDependencyNode(null, null)); return graph; "," final DependencyGraph XXXXX = new DependencyGraph(""no start/end""); XXXXX.addDependencyNode(createDependencyNode(null, null)); XXXXX.addDependencyNode(createDependencyNode(null, null)); return XXXXX; "
0," factory.move(project, new Path(""MovedProject"")); IStatus status = validateChange(factory); assertStatusEqual(status, new String[] {ChangeDescription.getMessageFor(ChangeDescription.MOVED, project)"," console.writeErrorLine( NLS.bind(Messages.ErrorMessagePROJ_CIRC_DEPEND, name)); ErrorMessagePresenter.getPresenter().showErrorMessage( MessageIDs.E_PROJ_CIRC_DEPEND, new String [] {name"
1, if (!isAvailable()) return; final Project project = event.getProject(); final CreateDesktopEntryDialog dialog = new CreateDesktopEntryDialog(project); dialog.show(); if (!dialog.isOK()) { return; , if (!isAvailable()) return; final Project XXXXX = event.getProject(); final CreateDesktopEntryDialog XXXXX = new CreateDesktopEntryDialog(XXXXX); XXXXX.show(); if (!XXXXX.isOK()) { return; 
0," ViewPosition viewPosition = this.getViewPosition(); int viewX = viewPosition.getX(); int viewY = viewPosition.getY(); this.animationInterface.paintThreed(graphics, viewX, viewY, 3); "," if (!isLocked) { if (theProtocol > 2) { Logger.printWarning(""OscProperties.setNetworkProtocol"", ""not in the range of supported Network protocols. the network protocol defaults to UDP""); "
0, RemoteSynchronizerPlugin plugin = Utils.getPlugin(e); ThreadConsole console = plugin.getConsolePane().removeCurrentConsole(); plugin.getCopierThreadManager().removeThread(console.getThread()); ," StringBuilder result = new StringBuilder(); result.append( ""org.eclipse.swt.browser/text"" ); result.append( String.valueOf( html.hashCode() ) ); result.append( "".html"" ); return result.toString(); "
1," final int historySize = event.getHistorySize(); if (historySize != 0) { problem(""History size is "" + historySize + "" but it should always be 0 for "" + MotionEvent.actionToString(event.getAction())); "," final int XXXXX = event.getHistorySize(); if (XXXXX != 0) { problem(""History size is "" + XXXXX + "" but it should always be 0 for "" + MotionEvent.actionToString(event.getAction())); "
0," OsceProxy selectedObject = selectionModel .getSelectedObject(); if (selectedObject != null) { Log.debug(""OSCE with id "" + selectedObject.getId() + "" selected!""); showDetails(selectedObject); "," FacesContext fc = FacesContext.getCurrentInstance(); String pattern = Application.getMessage(fc, OFFLINE_TITLE); return MessageFormat.format(pattern, property.getDocument().getName()); "
1," gen = new Random(System.currentTimeMillis() * conn.hashCode()); executeTransactions(numTransactions); try { printMessage(""Closing statement and connection...""); stmt.close(); conn.close(); "," gen = new Random(System.currentTimeMillis() * conn.hashCode()); executeTransactions(numTransactions); try { printMessage(""Closing statement and connection...""); stmt.close(); conn.close(); "
0," String expectedName = ""foo""; MediaType expectedMediaType = StreamDataBodyPart.getDefaultMediaType(); cut = new StreamDataBodyPart(expectedName, new ByteArrayInputStream( new byte[] {", TypePattern[] patterns = pattern.getTypePatterns(); TypePattern[] result = new TypePattern[patterns.length]; for (int i = 0; i < result.length; i++) { result[i] = clone(patterns[i]); 
0," for (int i = 0; i < dim; i++) { String padString = """"; for (int j = 0; j < dim; j++) { padString = """"; for (int k = 0; (k + Integer.toString(A[i][j]).length()) < padding; k++) { padString += "" ""; ", for (scheduleHandle handle: Ganymede.scheduler.getTasksByClass(SyncRunner.class)) { SyncRunner sync = (SyncRunner) handle.task; if (sync.isIncremental()) { try { sync.unSync(persistedTransaction); 
1," LOG.debug(""Setting portlet title for window '"" + window.getId() + ""' to '"" + title + ""'.""); PortletStateAccess.getPortletState(request, window.getId().getStringId()) .setTitle(title); "," LOG.debug(""Setting portlet title for window '"" + window.getId() + ""' to '"" + title + ""'.""); PortletStateAccess.getPortletState(request, window.getId().getStringId()) .setTitle(title); "
1, if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; BitmapKey key = (BitmapKey) o; return height == key.height && index == key.index && width == key.width; , if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; BitmapKey key = (BitmapKey) o; return height == key.height && index == key.index && width == key.width; 
1," JScrollBar scrollBar = myScrollPane.getHorizontalScrollBar(); int value = scrollBar.getValue() - scrollBar.getUnitIncrement(-1); value = Math.max(value, 0); scrollBar.setValue(value); "," JScrollBar XXXXX = myScrollPane.getHorizontalScrollBar(); int XXXXX = XXXXX.getValue() - XXXXX.getUnitIncrement(-1); XXXXX = Math.max(XXXXX, 0); XXXXX.setValue(XXXXX); "
1, this.application = application; cancelButton.addActionListener(new CancelListener()); replaceButton.addActionListener(new ReplaceListener()); setLayout(new GridBagLayout()); createComponents(); , this.application = application; cancelButton.addActionListener(new CancelListener()); replaceButton.addActionListener(new ReplaceListener()); setLayout(new GridBagLayout()); createComponents(); 
0," super.visitBreakStatement(breakStatement); final GrStatement target = breakStatement.findTargetStatement(); if (target != null && myHead != null) { addPendingEdge(target, myHead); "," setup(Permissions.PRIVATE); Experimenter other = loginNewUserInOtherUsersGroup(fixture.user); fixture.log_in(); try { other.setEmail(uuid()); iAdmin.updateExperimenter(other); fail(""sec-vio""); "
0," if (message == null) message = """"; Status errorStatus = new Status(IStatus.ERROR, PLUGIN_ID, IStatus.OK, message, ex); WebBrowserUIPlugin.getInstance().getLog().log(errorStatus); "," Log.i(TAG, ""restoreStateFromIcicle()...""); Uri photoUri = icicle.getParcelable(PHOTO_URI_KEY); Log.i(TAG, "" - photoUri: "" + photoUri); if (photoUri != null) { loadPhoto(photoUri); "
1," String name = fake.getAbsolutePath(); try { if (!name.startsWith(""/"")) { return new URI(""file"", null, new StringBuilder( name.length() + 1).append('/').append(name).toString(), null, null); "," String XXXXX = fake.getAbsolutePath(); try { if (!XXXXX.startsWith(""/"")) { return new URI(""file"", null, new StringBuilder( XXXXX.length() + 1).append('/').append(XXXXX).toString(), null, null); "
1, setOnMousePressed(mouseHandler); setOnMouseDragged(mouseHandler); setOnMouseReleased(mouseHandler); setOnTouchPressed(touchHandler); setOnTouchMoved(touchHandler); setOnTouchReleased(touchHandler); , setOnMousePressed(mouseHandler); setOnMouseDragged(mouseHandler); setOnMouseReleased(mouseHandler); setOnTouchPressed(touchHandler); setOnTouchMoved(touchHandler); setOnTouchReleased(touchHandler); 
0," PersonAttributeType staffTypeAttrType = PersonAttributeTypeEnum.PERSON_ATTRIBUTE_STAFF_TYPE. getAttributeType(personService); user.addAttribute(new PersonAttribute(staffTypeAttrType, typeValue)); ", context.checking(new Expectations() { { allowing(actionContext).getParams(); will(returnValue(id)); allowing(findById).execute(with(any(FindByIdRequest.class))); will(returnValue(null)); 
1, ApplicationAccessType key = aclsIterator.next(); return ApplicationACLMapProto.newBuilder().setAcl( applicationACLS.get(key)).setAccessType( ProtoUtils.convertToProtoFormat(key)).build(); , ApplicationAccessType XXXXX = aclsIterator.next(); return ApplicationACLMapProto.newBuilder().setAcl( applicationACLS.get(XXXXX)).setAccessType( ProtoUtils.convertToProtoFormat(XXXXX)).build(); 
1, if (_commanders != null && !_commanders.isEmpty()) { for (L2Spawn spawn : _commanders) { if (spawn != null) { spawn.stopRespawn(); if (spawn.getLastSpawn() != null) spawn.getLastSpawn().deleteMe(); , if (_commanders != null && !_commanders.isEmpty()) { for (L2Spawn spawn : _commanders) { if (spawn != null) { spawn.stopRespawn(); if (spawn.getLastSpawn() != null) spawn.getLastSpawn().deleteMe(); 
0, if (c.isTransactionalCache() && c.getTransactionManagerLookupClass() == null && c.getTransactionManagerLookup() == null) { c.setTransactionManagerLookupClass(TransactionSetup.getManagerLookup()); , switch (getSkinnable().getSide()) { case TOP: case BOTTOM: return snapSize(getInsets().getLeft()); case RIGHT: case LEFT: return snapSize(getInsets().getTop()); default: return 0; 
0," StatusType type; StatusValue mod = getStatus(mLevel, StatusType.Accuracy); Equipment eq = mEquipment.getEquipment(EquipmentSet.MAINWEAPON); if (eq != null) { type = eq.getWeaponType(); "," session.zadd(""foo"", 1d, ""a""); session.zadd(""foo"", 10d, ""b""); session.zadd(""foo"", 0.1d, ""c""); session.zadd(""foo"", 2d, ""a""); long size = session.zcard(""foo""); assertEquals(3, size); "
0, Books books = new Books(); List<Book> list = new ArrayList<Book>(); CustomEntryReader entryReader = new CustomEntryReader(); for (Entry e : element.getEntries()) { list.add(entryReader.readFrom(e)); , m_driverPosition = driverPosition; m_name = name; m_label = label; m_alias = label; m_dataType = dataType; m_nativeTypeName = nativeTypeName; m_isCustom = isCustom; m_driverProvidedDataType = null; 
1," boolean isGenerated = config.isGeneratedName(); apply(config.getPersistantData(), module); if (isGenerated && !JavaExecutionUtil.isNewName(config.getName())) { config.setGeneratedName(); "," boolean isGenerated = config.isGeneratedName(); apply(config.getPersistantData(), module); if (isGenerated && !JavaExecutionUtil.isNewName(config.getName())) { config.setGeneratedName(); "
1," productResponse = client.doProductSearch(apiKey, publisherId, keyword, ONE_HUNDRED_RESULTS); assertEquals(true, (Integer) productResponse.getProducts().getProductOrOffer().size() > TEN_RESULTS); "," productResponse = client.doProductSearch(apiKey, publisherId, keyword, ONE_HUNDRED_RESULTS); assertEquals(true, (Integer) productResponse.getProducts().getProductOrOffer().size() > TEN_RESULTS); "
1, int idx = 0; while ( idx < m_requests.size()) { NotifyRequest curReq = m_requests.get(idx); if ( curReq.getSession() == sess && curReq.getTreeId() == tid) { m_requests.removeElementAt(idx); , int XXXXX = 0; while ( XXXXX < m_requests.size()) { NotifyRequest XXXXX = m_requests.get(XXXXX); if ( XXXXX.getSession() == sess && XXXXX.getTreeId() == tid) { m_requests.removeElementAt(XXXXX); 
1," TemplateOptions options = new CloudStackTemplateOptions().networkIds(ImmutableSet.of(""3"")); assertEquals(options.as(CloudStackTemplateOptions.class).getNetworkIds(), ImmutableSet.of(""3"")); "," TemplateOptions XXXXX = new CloudStackTemplateOptions().networkIds(ImmutableSet.of(""3"")); assertEquals(XXXXX.as(CloudStackTemplateOptions.class).getNetworkIds(), ImmutableSet.of(""3"")); "
0," this.file = file; chg = changed; setTitle(TITLE + (changed ? ""*"" : """") + (file != null ? file.toString() : ""-"") + (str != null ? "" - "" + str : """") + (brush != null ? "" Brush: "" + brush : """")); "," String createTable = ""CREATE TABLE ""+ CHATLOG +"" ""+ ""("" + ""id INTEGER PRIMARY KEY AUTOINCREMENT, ""+ ""nickname VARCHAR, ""+ ""post VARCHAR""+ "")""; sqLiteDatabase.execSQL(createTable); "
1, nbfreq = data.freq_lvl.size(); freq_lambda = new double[nbfreq]; for (int idf = 0; idf < nbfreq; idf++) { if (data.freq_lvl.get(idf) > 0) { freq_lambda[idf] = CEL / data.freq_lvl.get(idf); , nbfreq = data.freq_lvl.size(); freq_lambda = new double[nbfreq]; for (int XXXXX = 0; XXXXX < nbfreq; XXXXX++) { if (data.freq_lvl.get(XXXXX) > 0) { freq_lambda[XXXXX] = CEL / data.freq_lvl.get(XXXXX); 
1," AbstractType oldType = type; type = newType; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, XsdPackage.ELEMENT_DEFINITION__TYPE, oldType, type)); "," AbstractType XXXXX = type; type = newType; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, XsdPackage.ELEMENT_DEFINITION__TYPE, XXXXX, type)); "
1," String contentType = super.getContentType(); if (!StringUtils.isEmpty(contentType) && !StringUtils.isEmpty(this.contentType) && contentType.contains(""zip"")) { return this.contentType; "," String XXXXX = super.getContentType(); if (!StringUtils.isEmpty(XXXXX) && !StringUtils.isEmpty(this.XXXXX) && XXXXX.contains(""zip"")) { return this.XXXXX; "
0," if (dateFormat == null) { synchronized (lock) { if (dateFormat == null) { dateFormat = new SimpleDateFormat( IConst.VALUES.ISO_DATE_FORMAT); dateFormat.setTimeZone(TimeZone.getTimeZone(""GMT"")); ", IEclipsePreferences node = getLoadLevel(); if (node instanceof DefaultPreferences) { DefaultPreferences loader = (DefaultPreferences) node; loader.initializingThread = Thread.currentThread(); 
1," exp.accept(new FindLevelsVisitor(substitutionMap, dimensions)); final Collection<Level> levels = substitutionMap.values(); if (levels.size() == 1) { return levels.iterator().next(); "," exp.accept(new FindLevelsVisitor(substitutionMap, dimensions)); final Collection<Level> levels = substitutionMap.values(); if (levels.size() == 1) { return levels.iterator().next(); "
0," long firstEntry = firstEntryId; for (int i = 0; i < ensemble.size() && firstEntry <= lastKnownEntryId; i++) { if (schedule.hasEntry(firstEntry, bookieIndex)) { return firstEntry; "," final StringBuilder callers = new StringBuilder(); for (Iterator<String> it = classes.iterator(); it.hasNext(); ) { callers.append(it.next()); if (it.hasNext()) { callers.append("",""); "
0, registerMeter.processingTotal += 1; registerMeter.operatingAritmetic +=1; if(registerMeter.temporaryMemory > registerMeter.peakMemory){ registerMeter.peakMemory = registerMeter.temporaryMemory; ," if (dir.isDirectory()) { String[] children = dir.list(); for (int i=0; i<children.length; i++) { boolean success = deleteDir(new File(dir, children[i])); if (!success) { return false; "
0, if(iteration >= this.iterationOfFailure && Math.random() < this.forgedMessageProbability) { switch(order){ case ATTACK: return Order.RETREAT; case RETREAT: return Order.ATTACK; default: return null; , myEnteredName = dialog.getEnteredName(); myIsReplaceAllOccurrences = dialog.isReplaceAllOccurrences(); myIsDeclareFinal = dialog.isDeclareFinal(); mySelectedType = dialog.getSelectedType(); 
1, File protoOutputFolder = new File( ProtomakEngineTestConstants.PROTO_XML_DEFINITION_OUTPUT_DIR); if (!protoOutputFolder.exists()) { Assert.assertTrue(protoOutputFolder.mkdirs()); , File XXXXX = new File( ProtomakEngineTestConstants.PROTO_XML_DEFINITION_OUTPUT_DIR); if (!XXXXX.exists()) { Assert.assertTrue(XXXXX.mkdirs()); 
0," super(555,600, new int[] {600,601,602,603,604,607,608,609,764,610,611,248,249,250,251,252,253,257,599,596,597,598,254,612,942,613,614,615,616,617,618,619,620,621,622,623,624,556,740,739,955,956,0 "," CeylonParseController cpc = editor.getParseController(); return cpc.getRootNode()==null ? null : findNode(cpc.getRootNode(), (ITextSelection) editor.getSelectionProvider().getSelection()); "
1," fileName = element.getElement( ""name"" ).getString(); fileContent = element.getElement( ""content"" ).getString(); background = new Color( element.getElement( ""background"" ).getInt() ); "," fileName = element.getElement( ""name"" ).getString(); fileContent = element.getElement( ""content"" ).getString(); background = new Color( element.getElement( ""background"" ).getInt() ); "
1," String pathName = getProject().getName() + IPath.SEPARATOR + FOLDER_MODELS + IPath.SEPARATOR + FILE_BASE + ""."" + extension; URI uri = URI.createPlatformResourceURI(pathName, true); return uri; "," String XXXXX = getProject().getName() + IPath.SEPARATOR + FOLDER_MODELS + IPath.SEPARATOR + FILE_BASE + ""."" + extension; URI XXXXX = URI.createPlatformResourceURI(XXXXX, true); return XXXXX; "
0," String label = ((ProvidesContext)object).getId(); return label == null || label.length() == 0 ? getString(""_UI_ProvidesContext_type"") : getString(""_UI_ProvidesContext_type"") + "" "" + label; "," VCloudDirectorAdminApi api = requestsSendResponses(loginRequest, sessionResponse, reset, resetResponse); assertEquals(api.getNetworkApi().reset(networkAdminHref), resetNetworkTask()); "
1," super.setActionBars(actionBars); actionBars.setGlobalActionHandler(ActionFactory.UNDO.getId(), undoHandler); actionBars.setGlobalActionHandler(ActionFactory.REDO.getId(), redoHandler); "," super.setActionBars(actionBars); actionBars.setGlobalActionHandler(ActionFactory.UNDO.getId(), undoHandler); actionBars.setGlobalActionHandler(ActionFactory.REDO.getId(), redoHandler); "
1," User u2 = userService.findUserByUsername(USERNAME); userService.deleteUser(u2); try { userService.findUserByUsername(USERNAME); fail(""testDeleteUser() should throw EmptyResultDataAccessException""); "," User XXXXX = userService.findUserByUsername(USERNAME); userService.deleteUser(XXXXX); try { userService.findUserByUsername(USERNAME); fail(""testDeleteUser() should throw EmptyResultDataAccessException""); "
0, if(enabled == this.enabled) return; this.enabled = enabled; if (enabled) { viewSelection.setValueIsAdjusting(false); viewSelection.addListSelectionListener(getViewSelectionListener()); , if (obj instanceof mxRectangle) { mxRectangle rect = (mxRectangle) obj; return rect.getX() == getX() && rect.getY() == getY() && rect.getWidth() == getWidth() && rect.getHeight() == getHeight(); 
0, Logger logger = loggers.get(name); if (logger == null) { org.apache.log4j.Logger log4jLogger; if (name.equalsIgnoreCase(Logger.ROOT_LOGGER_NAME)) { log4jLogger = LogManager.getRootLogger(); , double sx = nextPoint.x() - currPoint.x(); double sy = nextPoint.y() - currPoint.y(); double m = sy / sx; if(m <= 1 && m >= -1) { dx = sx > 0 ? cellsize : -cellsize; dy = m * dx; 
0, if(e.button!=button) return false; if(shiftDown!=e.shiftDown) return false; if(controlDown!=e.controlDown) return false; if(e.button!=Button2 && altDown!=e.isAltDown()) return false; return true; , final CacheEntry entry = keyToEntryMap.get(key); if (entry != null) { keyToEntryMap.remove(key); linkedList.remove(entry.listEntry); currentSize--; if (isEvict) { notifyEvicted(entry.cacheable); 
0," IStatus status = new Status(IStatus.ERROR,CallgraphCorePlugin.PLUGIN_ID,logContents.toString()); CallgraphCorePlugin.getDefault().getLog().log(status); logContents = new StringBuilder(); ", SDLoadImageTask sdLoadTask = getAsyncSDLoadImageTask(v); if(sdLoadTask != null) { String path = sdLoadTask.getFilePath(); if((path == null) || (!path.equals(filePath))) { sdLoadTask.cancel(true); 
0," PrefixMapping pm = PrefixMapping.Factory.create(); pm.setNsPrefix( ""spoo"", ""eg: Triple t1 = NodeCreateUtils.createTriple( ""eg: assertEquals( ""spoo:a @eh:/b eh:/c"", t1.toString( pm ) ); "," log.debug(""IdentifierDAO.read() - Begin""); if (id == null) { log.info(""-- id Parameter is required for Identifier Query --""); log.debug(""IdentifierDAO.read() - End""); return null; "
1, switch (featureID) { case ICSpecXMLPackage.ALTER_ARTIFACT__GROUP1: getGroup1().clear(); return; case ICSpecXMLPackage.ALTER_ARTIFACT__REMOVE_PATH: getRemovePath().clear(); return; , switch (featureID) { case ICSpecXMLPackage.ALTER_ARTIFACT__GROUP1: getGroup1().clear(); return; case ICSpecXMLPackage.ALTER_ARTIFACT__REMOVE_PATH: getRemovePath().clear(); return; 
0," DeviceProfile profile = null; if ( aName != null ) { profile = this.device.getDeviceProfileManager().findProfile( aName ); if ( profile != null ) { LOG.log( Level.INFO, ""Using device profile: {0", Policy p = m.getAnnotation(Policy.class); Policies ps = m.getAnnotation(Policies.class); if (p != null || ps != null) { List<Policy> list = new ArrayList<Policy>(); if (p != null) { list.add(p); 
0, IFeature feature = null; if (be!=null) { Class[] ifs = be.getClass().getInterfaces(); for (int i=0; i<ifs.length && feature==null; ++i) { feature = mapBusinessObjectClassToCreateFeature.get(ifs[i]); ," OSCJavaToByteArrayConverter stream = new OSCJavaToByteArrayConverter(); stream.write(""/example1""); stream.write(100); byte[] answer = {47, 101, 120, 97, 109, 112, 108, 101, 49, 0, 0, 0, 0, 0, 0, 100"
0, _ganttChart.autoResizePeriods(false); spinner.setValue(_ganttChart.getScaleArea().getVisiblePeriods().size()); widthTextField.setValue(_ganttChart.getScaleArea().getPreferredPeriodSize().width); ," URI baseURI = catalogFile.toURI(); InvCatalogModifier instance = new InvCatalogModifier(catalog); instance.setBaseURI(baseURI); assertThat(catalog.getUriString(), is(equalTo(baseURI.toString()))); "
0," Player player = env.getPlayer(); QuestState qs = player.getQuestStateList().getQuestState(questId); if(qs == null) return false; qs.setQuestVarById(0, 8); updateQuestStatus(env); return true; "," initiateWebApplication(Parent.class); assertEquals(""child"", resource(""/parent/true"").get(String.class)); assertEquals(404, resource(""/parent/false"", false).get(ClientResponse.class).getStatus()); "
1, int count = 0; for (Iterator<String> iter = vdrTitles.iterator(); iter.hasNext(); count++) { String element = iter.next(); if (element.equals(vdrTitle)) { return tvbTitles.get(count); , int XXXXX = 0; for (Iterator<String> iter = vdrTitles.iterator(); iter.hasNext(); XXXXX++) { String XXXXX = iter.next(); if (XXXXX.equals(vdrTitle)) { return tvbTitles.get(XXXXX); 
1, if (matchElementDTOs.size() > 0) { for (MatchElementDTO matchElementDTO : matchElementDTOs) { if (matchElementDTO.getElementId() == matchElementId) { return matchElementDTOs.remove(matchElementDTO); , if (matchElementDTOs.size() > 0) { for (MatchElementDTO matchElementDTO : matchElementDTOs) { if (matchElementDTO.getElementId() == matchElementId) { return matchElementDTOs.remove(matchElementDTO); 
0," if ((start < 0) || (end > length()) || (start > end)) throw new IndexOutOfBoundsException(); int len = end - start; return new HeapCharBuffer$RW$(hb, -1, 0, len, len, offset + position() + start); "," SearchRequest search = new SearchRequest(); search.setStatus(request.getStatus()); if (!request.getRequestorId().equalsIgnoreCase(""-"")) { search.setApproverId(request.getRequestorId()); "
1, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(AddressTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , TestSuite XXXXX = new TestSuite(); XXXXX.addTest(LoginTests.suite()); XXXXX.addTest(AddressTestPlan.suite()); XXXXX.addTestSuite(StopSeleniumTest.class); return XXXXX; 
1, token_source.ReInit(stream); token = new Token(); jj_ntk = -1; jj_gen = 0; for (int i = 0; i < 41; i++) jj_la1[i] = -1; for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls(); , token_source.ReInXXXXXt(stream); token = new Token(); jj_ntk = -1; jj_gen = 0; for (XXXXXnt XXXXX = 0; XXXXX < 41; XXXXX++) jj_la1[XXXXX] = -1; for (XXXXXnt XXXXX = 0; XXXXX < jj_2_rtns.length; XXXXX++) jj_2_rtns[XXXXX] = new JJCalls(); 
1, if ( this.dataSource == null ) { final Object dataSource = configValues.get( Environment.DATASOURCE ); if ( DataSource.class.isInstance( dataSource ) ) { this.dataSource = (DataSource) dataSource; , if ( this.XXXXX == null ) { final Object XXXXX = configValues.get( Environment.DATASOURCE ); if ( DataSource.class.isInstance( XXXXX ) ) { this.XXXXX = (DataSource) XXXXX; 
0," if( dropDownIcon == null ){ dropDownIcon = new DropDownIcon(); if( isBound() ){ dropDownIcon.init( getDockable(), getAction(), this ); dropDownIcon.setController( getDockable().getController() ); "," migrationBuilder.builder.getEntityRules().addRule( new EntityMigrationRule( migrationBuilder.fromVersion, migrationBuilder.toVersion, entityTypes, new RenameAssociation( from, to ) ) ); return this; "
0," PelopsException pelopsException = translator.translate(new org.apache.cassandra.thrift.TimedOutException()); assertEquals(""Translation failed"", TimedOutException.class, pelopsException.getClass()); "," btnOK.setEnabled(true && isRunning); btnCancel.setEnabled(true && isRunning); lblApprovalInfo.setText(""Error: "" + caught.getMessage()); lblApprovalInfo.setStyleName(""info-error""); "
1, boolean initialize = initialize(); if (!initialize) { Thread thread = new Thread(new Runnable() { public void run() { while (!initialize()) { try { Thread.sleep(DEFAULT_SLEEP_INTERVAL); , boolean XXXXX = XXXXX(); if (!XXXXX) { Thread XXXXX = new Thread(new Runnable() { public void run() { while (!XXXXX()) { try { Thread.sleep(DEFAULT_SLEEP_INTERVAL); 
1," for (IRBasicBlock<T> b : bblocks) { for (Operand<T> def : b.getDefList()) { for (IRBasicBlock<T> dfb : b.getDominanceFrontier()) { dfb.add(new PhiAssignQuad<T>(dfb, ((Variable<T>) def).getIndex())); "," for (IRBasicBlock<T> b : bblocks) { for (Operand<T> def : b.getDefList()) { for (IRBasicBlock<T> dfb : b.getDominanceFrontier()) { dfb.add(new PhiAssignQuad<T>(dfb, ((Variable<T>) def).getIndex())); "
0," double expected = 1.0e-2; UnivariateRealSolver solver = new BisectionSolver(); solver.setRelativeAccuracy(expected); assertEquals(expected, solver.getRelativeAccuracy(), 1.0e-2); ", if (on) { timerLayoutWhole.setVisibility(View.VISIBLE); timerSeekbarLayout.setVisibility(View.VISIBLE); timerSeekbarText.setVisibility(View.VISIBLE); timerSeekbar.setVisibility(View.VISIBLE); 
1," File serverConfig = new File(installDir, ""conf/server.xml""); File catalinaProps = new File(installDir, ""conf/catalina.properties""); return serverConfig.exists() && catalinaProps.exists(); "," File XXXXX = new File(installDir, ""conf/server.xml""); File XXXXX = new File(installDir, ""conf/catalina.properties""); return XXXXX.exists() && XXXXX.exists(); "
1, if(iteration >= this.iterationOfFailure && Math.random() < this.forgedMessageProbability) { switch(order){ case ATTACK: return Order.RETREAT; case RETREAT: return Order.ATTACK; default: return null; , if(iteration >= this.iterationOfFailure && Math.random() < this.forgedMessageProbability) { switch(order){ case ATTACK: return Order.RETREAT; case RETREAT: return Order.ATTACK; default: return null; 
0," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; ", int meanAge = 0; final int evolveSetSize = set.getNumberOfMacroclassifiers(); for (int i = 0; i < evolveSetSize; i++) { meanAge += set.getClassifierNumerosity(i) * set.getClassifier(i).timestamp; 
0," AthenaSearch search = new AthenaSearch.Builder().type(""person"").query(""occupation:racecar"").build(); Set<PTicket> people = apa.findTickets(search); assertEquals(0, people.size()); ", Object[] array = getListeners(); for (int i = 0; i < array.length; i++) { final IPartListener l = (IPartListener) array[i]; fireEvent(new SafeRunnable() { public void run() { l.partOpened(part); 
1," IPDITaskManager taskMgr = getPDISession().getTaskManager(); return new PDebugInfo(getLaunch(), eTasks, taskMgr.getRegisteredTasks(eTasks.copy()), taskMgr.getUnregisteredTasks(eTasks .copy())); "," IPDITaskManager XXXXX = getPDISession().getTaskManager(); return new PDebugInfo(getLaunch(), eTasks, XXXXX.getRegisteredTasks(eTasks.copy()), XXXXX.getUnregisteredTasks(eTasks .copy())); "
0, if (con != null) { int selectedOperator = getSelectedOp().getProperty(); if (selectedOperator == ConstraintOp.ONE_OF.getIndex() || selectedOperator == ConstraintOp.NONE_OF.getIndex()) { return true; ," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "
1," if (str == null || str.length() == 0) return str; String firstChar = str.substring(0, 1); String restChars = str.substring(1, str.length()); return firstChar.toUpperCase() + restChars; "," if (str == null || str.length() == 0) return str; String XXXXX = str.substring(0, 1); String XXXXX = str.substring(1, str.length()); return XXXXX.toUpperCase() + XXXXX; "
1, Object source = e.getSource(); if (source.equals(useCreationOrder)) { boolean isOrder = useCreationOrder.isSelected(); if (isOrder) orderFlags.setEnabled(true); else orderFlags.setEnabled(false); , Object XXXXX = e.getSource(); if (XXXXX.equals(useCreationOrder)) { boolean XXXXX = useCreationOrder.isSelected(); if (XXXXX) orderFlags.setEnabled(true); else orderFlags.setEnabled(false); 
0," Calendar cal = new GregorianCalendar(2007, 8 - 1, 13, 19, 51, 23); cal.setTimeZone(TimeZone.getTimeZone(""GMT"")); cal.set(Calendar.MILLISECOND, 0); date = cal.getTime(); df = new ISO8601DateFormat(); "," Product product = new Product(); product.setDescription(""This is a fine description""); product.setProductId(""123""); product.setQuantity(100); product.setStore(""King of Prussia""); return product; "
0," try { (Camera.open()).takePicture(new ShutterCallback(), new RawPictureCallback(), new JpegPictureCallback()); fail(""Was able to take a picture with the camera with no permission""); ", int result = 17; result = 37 * result + ( getUid() == null ? 0 : this.getUid().hashCode() ); result = 37 * result + ( getMagicid() == null ? 0 : this.getMagicid().hashCode() ); return result; 
1," synchronized (getGroupMembershipLock()) { final Object[] members = groupManager.getMembers(); for (int i = 0; i < members.length; i++) { ejectGroupMember(((Member) members[i]).getID(), reason); "," synchronized (getGroupMembershipLock()) { final Object[] members = groupManager.getMembers(); for (int i = 0; i < members.length; i++) { ejectGroupMember(((Member) members[i]).getID(), reason); "
1," final String digest = digest(song); if (digest != null) synchronized (RECENT_ART) { Map<String, Drawable> cache = RECENT_ART.get(drawable); return cache != null ? cache.get(digest) : null; "," final String XXXXX = XXXXX(song); if (XXXXX != null) synchronized (RECENT_ART) { Map<String, Drawable> cache = RECENT_ART.get(drawable); return cache != null ? cache.get(XXXXX) : null; "
0," StringBuilder builder = new StringBuilder(); builder.append(""ServiceAllocation [""); if (employee != null) { builder.append(""employee=""); builder.append(employee); builder.append("", ""); "," if (screenDensity == -1) { DisplayMetrics displayMetrics = context.getResources().getDisplayMetrics(); try { screenDensity = DisplayMetrics.class.getField(""densityDpi"").getInt(displayMetrics); "
0," if (_thread != null) { try { LOG.info(""Stopping Thread""); _queue.put(new QueueItem(null)); LOG.info(""Waiting for Thread to Die""); _thread.join(); LOG.info(""Thread dead""); _thread = null; "," LOG.info(""Recovered bookie operation completed with rc: "" + rc); success = rc == BKException.Code.OK; SyncObject sync = (SyncObject) ctx; synchronized (sync) { sync.value = true; sync.notify(); "
0," super(tr(""Export sigs...""), ""exportsigs"", tr(""Export all signatures to XML file.""), Shortcut.registerShortcut(""file:exportsigs"", tr(""Export sigs to XML...""), KeyEvent.VK_X, Shortcut.ALT_CTRL)); ", ContentPane = new JPanel(); ContentPane.setLayout( new FlowLayout(FlowLayout.LEFT) ); ContentPane.setBorder(BorderFactory.createEtchedBorder()); ContentPane.add(Buttons); ContentPane.add(jsp); 
0, return DataHelper.hashCode(getCertificate()) + (int)getCloveId() + DataHelper.hashCode(getData()) + DataHelper.hashCode(getExpiration()) + DataHelper.hashCode(getInstructions()); ," for (int row = 1; row <= boardSize; row++) { for (int col = 1; col <= boardSize; col++) { setValue(row, col, getValue(row, col) + weightUpdates[(row - 1) * boardSize + (col - 1)]); "
1," Logger.global.finer(""timed out""); fCurrentTimeoutState.setTimedOut(true); fDisplay.wake(); if (fKeepRunningOnTimeout) checkedTransition(RUNNING, IDLE); else checkedTransition(RUNNING, STOPPED); "," Logger.global.finer(""timed out""); fCurrentTimeoutState.setTimedOut(true); fDisplay.wake(); if (fKeepRunningOnTimeout) checkedTransition(RUNNING, IDLE); else checkedTransition(RUNNING, STOPPED); "
1," CompoundChangeRequest result = new CompoundChangeRequest(""Remove devices that lacks required capabilities"", project); return result.getChangeRequests().length > 0 ? result : null; "," CompoundChangeRequest XXXXX = new CompoundChangeRequest(""Remove devices that lacks required capabilities"", project); return XXXXX.getChangeRequests().length > 0 ? XXXXX : null; "
0," Map<Language, CommonCodeStyleSettings> commonSettingsMap = getCommonSettingsMap(); CommonCodeStyleSettings settings = commonSettingsMap.get(lang); if (settings != null) { return settings; "," TabContentRegion tabContentRegion = new TabContentRegion(tab); tabContentRegion.setClip(new Rectangle()); tabContentRegions.add(tabContentRegion); getChildren().add(0, tabContentRegion); "
0," context.checking(new Expectations() {{ allowing(task).getEnabled(); will(returnValue(true)); one(spec).isSatisfiedBy(task); will(returnValue(false)); one(state).skipped(""SKIPPED""); "," BBCode bb = bbCodes.get(""youtube""); formatter.addBb(bb); Assert.assertEquals(String.format(""a video: %s"", this.tagHtml(bb, ""www."", ""123456"")), formatter.format(""a video: [YOUTUBE]http: "
0," LogLevel logLevel = LogLevel.fromString(level.atomValue()); for (int i = 0; i < output.arity(); ++i) { MavenUtils.logMultiLineString(log, logLevel, ErlUtils.toString(output.elementAt(i), false)); "," this.format = format; this.encoding = encoding; this.normalizeEntries = normalizeEntries; this.normalizer = normalizeEntries ? Normalizer2.getInstance(null, ""nfkc"", Normalizer2.Mode.COMPOSE) : null; "
1," NullArgumentException.validateNotEmpty( name, ""name""); NullArgumentException.validateNotNull( location, ""location"" ); m_properties = properties; m_name = name; m_location = location; "," NullArgumentException.validateNotEmpty( name, ""name""); NullArgumentException.validateNotNull( location, ""location"" ); m_properties = properties; m_name = name; m_location = location; "
1," super(new AddedPrefixesTableModel(nsm, addedPrefixes)); setPreferredScrollableViewportSize(new Dimension(600, 200)); getColumnModel().getColumn(AddedPrefixesTableModel.PREFIX_COLUMN).setWidth(30); "," super(new AddedPrefixesTableModel(nsm, addedPrefixes)); setPreferredScrollableViewportSize(new Dimension(600, 200)); getColumnModel().getColumn(AddedPrefixesTableModel.PREFIX_COLUMN).setWidth(30); "
0," String imageUrl = tbtn.getToggledRolloverImageUrl(); if (imageUrl == null) return getDefaultToggledImageRolloverUrl(context); else return Resources.applicationURL(context, imageUrl); ", if (other instanceof Program) { Program p = (Program) other; boolean equals = true; equals &= number == p.number; equals &= channel.frequency == p.channel.frequency; return equals; 
0," Element p = privilege.toXml(document); for (DavPrivilege subPrivilege : privilege.getSubPrivileges()) { if (subPrivilege.isAbstract()) continue; p.appendChild(privilegeXml(document, subPrivilege)); ", final ChangeRecord<AbstractPMDRecord> changes = changeEvaluator.changeRecordFor(event); treeViewer.getControl().getDisplay().syncExec(new Runnable() { public void run() { updateViewer(changes); 
0," final PCamera camera = new PCamera(); final PPickPath path = new PPickPath(camera, new PBounds(0, 0, 10, 10)); manager.setMouseOver(path); assertEquals(path, manager.getMouseOver()); ", int startIndex = b.readerIndex(); ByteBuffer converted = ByteBuffer.allocate(b.readableBytes()); b.readBytes(converted); b.readerIndex(startIndex); converted.flip(); return converted; 
1," StreamHandlingPacket packet = (StreamHandlingPacket)packetCapture.getValue(); assertEquals(name, packet.getElementName()); packetCapture.reset(); interceptor.interceptPacket(packet); "," StreamHandlingPacket XXXXX = (StreamHandlingPacket)XXXXXCapture.getValue(); assertEquals(name, XXXXX.getElementName()); XXXXXCapture.reset(); interceptor.interceptPacket(XXXXX); "
0," double newExaggeration = Math.max(0, exaggeration); boolean changed = newExaggeration != this.exaggeration; this.exaggeration = newExaggeration; if (changed) { fireChangeEvent(); "," if (this.columnNames.contains(name.toUpperCase())) return; this.columnNames.add(name.toUpperCase()); this.columnTypes.add(type.name()); for (DatabaseRowFlatfile r : this.rows) r.cells.add(""""); "
0," this.request = (HttpServletRequest) pageContext.getRequest(); this.weblisketSession = new WeblisketSession(hashMap, pageContext); this.portion = new Portion(hashMap); this.getAddressForm(); ", int c = 0; for (int i = 0; i < inv.length; ++i) { if (inv[i] != null && inv[i].getTypeId() == id && (!JItems.hasData(id) || inv[i].getDurability() == d)) { c += inv[i].getAmount(); 
0, if (input instanceof IStreamContentAccessor) { Document document= new Document(getString(input)); RubyCompareUtilities.setupDocument(document); fSourceViewer.setDocument(document); , super(owner); this.parentEditorFields = parentEditorFields; initComponents(); if (parentEditorFields instanceof AssessmentsFields) { parentEditorType = PARENT_EDITOR_TYPE_ASSESSMENTS; 
1," beginner = mock(Level.class); zombie = mock(Level.class); intermediate = mock(Level.class); pro = mock(Level.class); levels = new TinyLevelManager(beginner, intermediate, pro, zombie); "," beginner = mock(Level.class); zombie = mock(Level.class); intermediate = mock(Level.class); pro = mock(Level.class); levels = new TinyLevelManager(beginner, intermediate, pro, zombie); "
1," playSound(R.raw.bell_ring); setDisplayBackgroundColor(1); mStateLabel.setText(""Press To Stop""); mStateLabel.setTextColor(Color.RED); timer.start(); cdRun = false; mStartStop.setEnabled(true); "," playSound(R.raw.bell_ring); setDisplayBackgroundColor(1); mStateLabel.setText(""Press To Stop""); mStateLabel.setTextColor(Color.RED); timer.start(); cdRun = false; mStartStop.setEnabled(true); "
1," try { log.debug(""Test list batch unsubscribe""); ListBatchUnsubscribeResponse response = mSvc.listBatchUnsubscribe(listId, batchEmails, true, false, false); log.debug(""List batch unsubscribe: {"," try { log.debug(""Test list batch unsubscribe""); ListBatchUnsubscribeResponse response = mSvc.listBatchUnsubscribe(listId, batchEmails, true, false, false); log.debug(""List batch unsubscribe: {"
0," StringBuilder script = new StringBuilder( ""var prog=dojox.mobile.ProgressIndicator.getInstance();""); if (interval != null) { script.append(""prog.interval="").append(interval).append("";""); "," for( AssociatedPair p : pairs ) { if( !isPixels ) { PerspectiveOps.convertNormToPixel(K, p.keyLoc.x, p.keyLoc.y, p.keyLoc); PerspectiveOps.convertNormToPixel(K, p.currLoc.x, p.currLoc.y, p.currLoc); "
1," try { log.debug(""Testing list members - all null""); List<MemberResponseInfo> content = mSvc.listMembers(listId, MemberStatus.subscribed, null, null, null); log.debug(""Lists Content: {"," try { log.debug(""Testing list members - all null""); List<MemberResponseInfo> content = mSvc.listMembers(listId, MemberStatus.subscribed, null, null, null); log.debug(""Lists Content: {"
0, switch ( featureID ) { case AttributePackage.EXTENDED_PROPERTY__NAME : setName( (String) newValue ); return; case AttributePackage.EXTENDED_PROPERTY__VALUE : setValue( (String) newValue ); return; ," Arc2D arc = new Arc2D.Float(x + transX, y + transY, w, h, offset, length, Arc2D.OPEN); checkState(); getGraphics2D().setPaint(getColor(swtGraphics.getBackgroundColor())); getGraphics2D().fill(arc); "
0, if( FieldEditor.VALUE.equals( event.getProperty())) { boolean valid = MavenPreferencePage.this.customizedPomLocationField.isValid(); hyperlink.setEnabled( valid ); setValid( valid ); ," try { File file = new File(""PersonalizedTrustModelConfiguration.ini""); int i = 0; while (file.exists()) { file = new File(""PersonalizedTrustModelConfiguration"" + i + "".ini""); i++; "
1," mv.visitFieldInsn(GETSTATIC, ""java/lang/System"", ""out"", ""Ljava/io/PrintStream;""); mv.visitLdcInsn(text); mv.visitMethodInsn(INVOKEVIRTUAL, ""java/io/PrintStream"", ""println"", ""(Ljava/lang/String;)V""); "," mv.visitFieldInsn(GETSTATIC, ""java/lang/System"", ""out"", ""Ljava/io/PrintStream;""); mv.visitLdcInsn(text); mv.visitMethodInsn(INVOKEVIRTUAL, ""java/io/PrintStream"", ""println"", ""(Ljava/lang/String;)V""); "
1," JPanel panel = new JPanel(); panel.setLayout(new BorderLayout()); panel.add(createCustomAssertionPanel(), BorderLayout.CENTER); panel.add(createButtonPanel(), BorderLayout.SOUTH); return panel; "," JPanel XXXXX = new JPanel(); XXXXX.setLayout(new BorderLayout()); XXXXX.add(createCustomAssertionPanel(), BorderLayout.CENTER); XXXXX.add(createButtonPanel(), BorderLayout.SOUTH); return XXXXX; "
1, int result = Boolean.valueOf(isSaved()).hashCode(); result = 31 * result + getId(); result = 31 * result + editorState.hashCode(); result = 31 * result + displayState.hashCode(); return result; , int XXXXX = Boolean.valueOf(isSaved()).hashCode(); XXXXX = 31 * XXXXX + getId(); XXXXX = 31 * XXXXX + editorState.hashCode(); XXXXX = 31 * XXXXX + displayState.hashCode(); return XXXXX; 
1, annotationId = a.getUUID(); name = a.getName(); personTable = new PersonTable( a.getAuthor().getUUID() ); if (a.getFeature() != null) { featureTable = new FeatureTable( a.getFeature().getUUID() ); , annotationId = a.getUUID(); name = a.getName(); personTable = new PersonTable( a.getAuthor().getUUID() ); if (a.getFeature() != null) { featureTable = new FeatureTable( a.getFeature().getUUID() ); 
1, listOfKernels = new ArrayList<Kernel<T>>(); listOfKernelWeights = new ArrayList<Double>(); listOfExamples = new ArrayList<TrainingSample<T>>(); listOfExampleWeights = new ArrayList<Double>(); , listOfKernels = new ArrayList<Kernel<T>>(); listOfKernelWeights = new ArrayList<Double>(); listOfExamples = new ArrayList<TrainingSample<T>>(); listOfExampleWeights = new ArrayList<Double>(); 
1," for (int i = data_sources.length - 1; i >= 0; i--) { DiskManagerFileInfo info = (DiskManagerFileInfo) data_sources[i]; if (info != null) { ManagerUtils.open(info, use_open_containing_folder); "," for (XXXXXnt XXXXX = data_sources.length - 1; XXXXX >= 0; XXXXX--) { DXXXXXskManagerFXXXXXleInfo XXXXXnfo = (DXXXXXskManagerFXXXXXleInfo) data_sources[XXXXX]; XXXXXf (XXXXXnfo != null) { ManagerUtXXXXXls.open(XXXXXnfo, use_open_contaXXXXXnXXXXXng_folder); "
0," deleteAndPopulateTable(""accounts""); Account account = new Account(); account.set(""amount"", 1); account.set(""total"", 1); System.out.println(account.errors()); a(account).shouldBe(""valid""); "," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (width: ""); result.append(width); result.append(')'); return result.toString(); "
0," if(path==null) return null; int lastIndex = path.lastIndexOf(""/""); if(lastIndex==-1) return null; if((lastIndex+1) >= path.length()) return null; return path.substring(lastIndex+1); "," if (expression.equals(""."")) return true; int index = -1; while ((index = expression.indexOf(""/"", index + 1)) > -1) { if (expression.charAt(index + 1) != '@') { startingStackDepth++; "
1," super(ReviewsBundle.message(""reviews.sortByAuthorOfLastComment""), ReviewsBundle.message(""reviews.sortByAuthorOfLastComment""), IconLoader.getIcon(""/icons/inspector/sortByName.png"")); "," super(ReviewsBundle.message(""reviews.sortByAuthorOfLastComment""), ReviewsBundle.message(""reviews.sortByAuthorOfLastComment""), IconLoader.getIcon(""/icons/inspector/sortByName.png"")); "
1," final Node<T> node = myRoot.findRelative(key, true, myInterner); assert node != null; final boolean mappingExisted = node.mappingExists(); node.setValue(value); if (!mappingExisted) { mySize++; "," final Node<T> node = myRoot.findRelative(key, true, myInterner); assert node != null; final boolean mappingExisted = node.mappingExists(); node.setValue(value); if (!mappingExisted) { mySize++; "
0, listenerComponent = MetadataUtil.cloneTarget(source.getListenerComponent()); registrationMethod = source.getRegistrationMethod(); unregistrationMethod = source.getUnregistrationMethod(); ," int wh=strel.getWidth(); int hh=strel.getHeight(); ImageProcessor fp= new FloatProcessor(wh,hh,strel.getMask()).convertToByte(false); new ImagePlus(Title, fp).show(); seshown=true; "
1," String src = ""class Cart\n"" + "" attr :price\n def method\n"" + "" price = 1"" + "" end\n"" + ""end""; List<CategorizedProblem> problems = getProblems(src); assertEquals(0, problems.size()); "," String XXXXX = ""class Cart\n"" + "" attr :price\n def method\n"" + "" price = 1"" + "" end\n"" + ""end""; List<CategorizedProblem> problems = getProblems(XXXXX); assertEquals(0, problems.size()); "
1, BTDownload[] selectedDownloaders = getSelectedDownloaders(); if (selectedDownloaders.length == 1) { playSingleAudioFileAction.setEnabled(selectionHasAudioFiles(selectedDownloaders[0])); , BTDownload[] selectedDownloaders = getSelectedDownloaders(); if (selectedDownloaders.length == 1) { playSingleAudioFileAction.setEnabled(selectionHasAudioFiles(selectedDownloaders[0])); 
1," SystemContext context = (SystemContext) this.getContext(); return !context.hasAnyRole(getText(""key.role.bc.report""), getText(""key.role.bc.report.template""), getText(""key.role.bc.admin"")); "," SystemContext XXXXX = (SystemContext) this.getContext(); return !XXXXX.hasAnyRole(getText(""key.role.bc.report""), getText(""key.role.bc.report.template""), getText(""key.role.bc.admin"")); "
1, double range = minMax.maxValue - minMax.minValue; int rawUnits = (int) range / (gridLines - 1); int roundedUnits = 1; while ((rawUnits / (roundedUnits * 10)) > 0) { roundedUnits *= 10; , double XXXXX = minMax.maxValue - minMax.minValue; int XXXXX = (int) XXXXX / (gridLines - 1); int XXXXX = 1; while ((XXXXX / (XXXXX * 10)) > 0) { XXXXX *= 10; 
0," PersistentWorkspace workspace = new PersistentWorkspace(); workspace = pm.makePersistent(workspace); permissionManager .createWorkspacePermissionForCurrentUser(workspace, pm); return workspace; ", switch (featureID) { case SclPackage.TPHYS_CONN__P: getP().clear(); getP().addAll((Collection<? extends TP>)newValue); return; case SclPackage.TPHYS_CONN__TYPE: setType((String)newValue); return; 
0," super(pDuration, pFromColor.getRed(), pToColor.getRed(), pFromColor.getGreen(), pToColor.getGreen(), pFromColor.getBlue(), pToColor.getBlue(), pEntityModifierListener, EaseLinear.getInstance()); ", File settingsFile = getSettingsFile(); if ( settingsFile.exists() ) { StarteamXpp3Reader reader = new StarteamXpp3Reader(); try { return reader.read( ReaderFactory.newXmlReader( settingsFile ) ); 
0," if (!fInViewMenu) return; final String filters= ""filters""; if (menu.find(filters) != null) { for (int i= 0; i < fFilterActions.length; i++) { menu.prependToGroup(filters, fFilterActions[i]); ", initFirstFailureTimeStampIfNeeded(); int tmpCurrentFailures = 0; if (currentFailuresDuration.hasPastSince(firstCurrentFailureTimestamp.get())) { resetFailures(); tmpCurrentFailures = 1; 
1, name = name.trim().toUpperCase(); int pos = name.indexOf(' '); if (pos == -1) { try { Field field = PageSize.class.getDeclaredField(name.toUpperCase()); return (Rectangle) field.get(null); , name = name.trim().toUpperCase(); int XXXXX = name.indexOf(' '); if (XXXXX == -1) { try { Field XXXXX = PageSize.class.getDeclaredField(name.toUpperCase()); return (Rectangle) XXXXX.get(null); 
0," Object key = new Object(); Object value = new Object(); keyValueStore.get( key, new TestInstanceCreator( value ) ); Object removed = keyValueStore.remove( key ); assertSame( value, removed ); ", ImageIcon i = null; switch (health) { case Stats.HEALTHY: i = HEALTHY; break; case Stats.ACTIVE: i = ACTIVE; break; case Stats.WARNING: i = WARNING; break; case Stats.DEAD: i = DEAD; break; 
1, try { IPath path = root.getRawClasspathEntry().getPath(); if (path.equals(new Path(JavaRuntime.JRE_CONTAINER)) || path.equals(new Path(JavaRuntime.JRELIB_VARIABLE))) { return true; , try { IPath XXXXX = root.getRawClassXXXXXEntry().getPath(); if (XXXXX.equals(new Path(JavaRuntime.JRE_CONTAINER)) || XXXXX.equals(new Path(JavaRuntime.JRELIB_VARIABLE))) { return true; 
0, setMappedBy(fm.getMappedBy()); _info.copy(fm.getMappingInfo()); _val.copyMappingInfo(fm.getValueMapping()); _key.copyMappingInfo(fm.getKeyMapping()); _elem.copyMappingInfo(fm.getElementMapping()); , gateway = new Gateway(new ExampleEntryPoint()); gateway.startup(); command = new ReflectionCommand(); command.init(gateway); sWriter = new StringWriter(); writer = new BufferedWriter(sWriter); 
0," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (any: ""); result.append(any); result.append(')'); return result.toString(); "
1, if (shownState == null) { try { EvaluationElement[] tops = EvaluationGetTopLevelCommand .retrieveTopLevelElements(); topEvaluationElements = new ArrayList<EvaluationElement>( Arrays.asList(tops)); , if (shownState == null) { try { EvaluationElement[] tops = EvaluationGetTopLevelCommand .retrieveTopLevelElements(); topEvaluationElements = new ArrayList<EvaluationElement>( Arrays.asList(tops)); 
1," if (m_scheduler == null) throw new IllegalStateException( ""Cannot schedule a service whose scheduler is set to null""); m_scheduler.schedule(poll_interval + initial_sleep_time, this); "," if (m_scheduler == null) throw new IllegalStateException( ""Cannot schedule a service whose scheduler is set to null""); m_scheduler.schedule(poll_interval + initial_sleep_time, this); "
0," List<PortType> cports = uap.getDomainClientPorts(); System.out.println(""Domain client ports found: "" + cports.size()); for(PortType cport : cports) { System.out.println(cport.getAddress()); "," Enumeration names = attr.getAttributeNames(); while (names.hasMoreElements()) { Object name = names.nextElement(); Object value = attr.getAttribute(name); removeSearchAttribute(name, value); "
1, switch (featureID) { case Bpmn2Package.BUSINESS_RULE_TASK__IMPLEMENTATION: return IMPLEMENTATION_EDEFAULT == null ? implementation != null : !IMPLEMENTATION_EDEFAULT.equals(implementation); , switch (featureID) { case Bpmn2Package.BUSINESS_RULE_TASK__IMPLEMENTATION: return IMPLEMENTATION_EDEFAULT == null ? implementation != null : !IMPLEMENTATION_EDEFAULT.equals(implementation); 
1," OnmsNode m_foundDownNode = new OnmsNode(); m_foundDownNode.setId(1); if (m_foundDownNode != null) { label = ""<a href=\""element/node.jsp?node=""+m_foundDownNode.getId()+""\"">""+label+""</a>""; "," OnmsNode XXXXX = new OnmsNode(); XXXXX.setId(1); if (XXXXX != null) { label = ""<a href=\""element/node.jsp?node=""+XXXXX.getId()+""\"">""+label+""</a>""; "
0," StringBuilder buf = new StringBuilder(""ParameterExpression""); buf.append(""<"" + getJavaType().getSimpleName() + "">""); if (_name != null) buf.append(""('""+ _name +""')""); return buf.toString(); ", checkWidget( ); if ( string == null ) SWT.error( SWT.ERROR_NULL_ARGUMENT ); int index = list.indexOf( string ); if ( index == -1 ) { list.deselectAll( ); text.setText( string ); return; 
1, long t = getFirstTime(bean.getPublicationWindows()); if (t != Long.MAX_VALUE) return t; t = getFirstTime(bean.getActiveWindows()); if (t != Long.MAX_VALUE) return t; return bean.getCreationTime(); , long XXXXX = geXXXXXFirsXXXXXTime(bean.geXXXXXPublicaXXXXXionWindows()); if (XXXXX != Long.MAX_VALUE) reXXXXXurn XXXXX; XXXXX = geXXXXXFirsXXXXXTime(bean.geXXXXXAcXXXXXiveWindows()); if (XXXXX != Long.MAX_VALUE) reXXXXXurn XXXXX; reXXXXXurn bean.geXXXXXCreaXXXXXionTime(); 
1," Point p = toDisplay(new Point(event.x, event.y)); if (!mMouseIsDown) { if (isInside(event.x, event.y, mMoveBar)) { if (mSettings.allowButtonResizing()) { setCursor(CURSOR_SIZENS); "," Point XXXXX = toDisXXXXXlay(new Point(event.x, event.y)); if (!mMouseIsDown) { if (isInside(event.x, event.y, mMoveBar)) { if (mSettings.allowButtonResizing()) { setCursor(CURSOR_SIZENS); "
1," JOptionPane.showMessageDialog(viewer, ""You must select at least one importable file to\n"" + ""add to the import queue. Choose an image in the\n"" + ""left-hand panel first before continuing.""); "," JOptionPane.showMessageDialog(viewer, ""You must select at least one importable file to\n"" + ""add to the import queue. Choose an image in the\n"" + ""left-hand panel first before continuing.""); "
0, if (geo == null) return; if (!geo.isAlgebraViewEditable()) { ArrayList<GeoElement> geos = new ArrayList<GeoElement>(); geos.add(geo); app.getDialogManager().showPropertiesDialog(geos); return; , if (state == PlayerState.DEAD) return; int lives = (game == null) ? Config.getLivesGlobal() : Config.getLives(game.getSetup()); if (lives == 0 || deaths.size() >= lives) { die(); 
1," final GetterSetterDefinition result = new GetterSetterDefinition(); if (item != null) { Element child = item.getChild(""GetterSetterDefinition""); if (child != null) { result.loadAttributes(child); "," final GetterSetterDefinition XXXXX = new GetterSetterDefinition(); if (item != null) { Element XXXXX = item.getChild(""GetterSetterDefinition""); if (XXXXX != null) { XXXXX.loadAttributes(XXXXX); "
1," if (newLayer == this && !(oldLayer instanceof XmlBoundsLayer)) { for (JosmAction action : actionsToDisable) { actionsStates.put(action, action.isEnabled()); action.setEnabled(false); "," if (newLayer == this && !(oldLayer instanceof XmlBoundsLayer)) { for (JosmAction action : actionsToDisable) { actionsStates.put(action, action.isEnabled()); action.setEnabled(false); "
1," Preconditions.checkState(!threads.isEmpty()); Iterator<WorkloadService> iterator = threads.iterator(); if (!iterator.hasNext()) { log.debug(""Cannot remove task. No tasks started.""); return; "," Preconditions.checkState(!threads.isEmpty()); Iterator<WorkloadService> iterator = threads.iterator(); if (!iterator.hasNext()) { log.debug(""Cannot remove task. No tasks started.""); return; "
1," LoginService login = new LoginService(service, settings); Assert.assertFalse(login.offlineLogin(""test2"", ""pass"")); String user = store.getString(""current.user""); Assert.assertNull(user); "," LoginService XXXXX = new LoginService(service, settings); Assert.assertFalse(XXXXX.offlineLogin(""test2"", ""pass"")); String XXXXX = store.getString(""current.XXXXX""); Assert.assertNull(XXXXX); "
1, OJAnnotatedClass activityClass; if(activity instanceof INakedStructuredActivityNode){ activityClass = findJavaClass(((INakedStructuredActivityNode) activity).getMessageStructure()); , OJAnnotatedClass activityClass; if(activity instanceof INakedStructuredActivityNode){ activityClass = findJavaClass(((INakedStructuredActivityNode) activity).getMessageStructure()); 
0, String json = response.getText(); List<ReportReference> reports = JSOParser.parseReportConfig(json); ReportView view = (ReportView)controller.getView(ReportView.ID); view.configure(reports); ," ICalendarAttribute attr = (ICalendarAttribute) item.getAttribute(qname); if(attr==null && value!=null) { attr = new MockICalendarAttribute(qname,value); item.addAttribute(attr); return; "
1," ProcedureDescription proc = procedures.get(newname + ""/"" + arity); if (proc == null) { throw new IllegalArgumentException(""Procedure not found: "" + newname + "", arity "" + arity); "," ProcedureDescription XXXXX = XXXXXedures.get(newname + ""/"" + arity); if (XXXXX == null) { throw new IllegalArgumentException(""Procedure not found: "" + newname + "", arity "" + arity); "
0, if (lhs.entityMatches(entity) == shortCircuitValue) return shortCircuitValue; if (rhs.entityMatches(entity) == shortCircuitValue) return shortCircuitValue; return !shortCircuitValue; ," Vector vector = new Vector(); if (s.equalsIgnoreCase(""s"")) return vector; for (int i = 0; i < s.length(); i++) { vector.add(faceToVector(strToDirection(s.substring(i, i+1), forward))); "
1, this.numRaided += other.numRaided; this.numTooNew += other.numTooNew; this.sizeTooNew += other.sizeTooNew; this.numTooSmall += other.numTooSmall; this.sizeTooSmall += other.sizeTooSmall; , this.numRaided += other.numRaided; this.numTooNew += other.numTooNew; this.sizeTooNew += other.sizeTooNew; this.numTooSmall += other.numTooSmall; this.sizeTooSmall += other.sizeTooSmall; 
0," InputMethodManager imm = (InputMethodManager)getSystemService(Context.INPUT_METHOD_SERVICE); if (imm != null && view != null) { imm.hideSoftInputFromWindow(view.getWindowToken(), 0); ", String sep = File.separator; for (String inclPath : includePaths) { String fullPath = inclPath + sep + filename; File file = new File(fullPath); if (file.exists()) { return fullPath; 
0," long newQueueSize = queueSize.addAndGet(sizeDelta); if (newQueueSize <= desaturationPoint.get()) { if (saturated.compareAndSet(true, false)) return SaturationStateChange.DESATURATED; ", if( set != null ) return set; Container parent = getParent(); if( parent == null ) return Color.BLACK; set = parent.getForeground(); if( set != null ) return set; return Color.BLACK; 
0," String clientID = component.getClientId(facesContext); if (ancestors.get(clientID) == null) { HashSet myAncestors = new HashSet(); myAncestors.add(clientID); ancestors.put(clientID, myAncestors); "," for (int nFormat = 0; nFormat < sm_aFormatTable.length; nFormat++) { if (sm_aFormatTable[nFormat] != null && AudioFormats.matches(sm_aFormatTable[nFormat], audioFormat)) { return nFormat; "
0," Var<Character> op = new Var<Character>(); return Sequence( Factor(), ZeroOrMore( AnyOf(""*/""), op.set(matchedChar()), Factor(), swap() && push(new CalcNode(op.get(), pop(), pop())) ) ); "," String arg = """"; switch (file) { case Site: arg = ""-s""; break; case Default: arg = ""-d""; break; case Core: arg = ""-c""; break; case Hdfs: arg = ""-h""; break; case Mapred: arg = ""-m""; break; "
1," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," EditorCell XXXXX = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, XXXXX, editorContext); return XXXXX; "
1," super(Duration.EndOfTurn, Outcome.AddAbility); staticText = ""Until end of turn, creatures you control gain trample and get +X/+X, where X is the greatest power among creatures you control.""; "," super(Duration.EndOfTurn, Outcome.AddAbility); staticText = ""Until end of turn, creatures you control gain trample and get +X/+X, where X is the greatest power among creatures you control.""; "
0," if (event.getAction() == KeyEvent.ACTION_DOWN) { switch (keyCode) { case KeyEvent.KEYCODE_DEL: { long id = getListView().getSelectedItemId(); if (id > 0) { confirmDeleteThread(id, mQueryHandler); "," LogicalPosition logical = dataEntry.logical; return new LogicalPosition( logical.line + logical.softWrapLinesBeforeCurrentLogicalLine + logical.softWrapLinesOnCurrentLogicalLine, logical.column ); "
0, switch( mTrackColoringMethod ) { case ( DRAW_CALCULATED ): case ( DRAW_MEASURED ): case ( DRAW_RED ): case ( DRAW_GREEN ): drawPath( canvas ); break; case ( DRAW_DOTS ): drawDots( canvas ); break; ," if ( descriptor.acceptsArguments() ) { if ( descriptor.requiresArgument() ) addHelpLineWithArgument( descriptor, '<', '>' ); else addHelpLineWithArgument( descriptor, '[', ']' ); "
1," ZeroOrOne zoo = new ZeroOrOne(t, e); assertEquals(t.beginColumn, zoo.getColumn()); assertEquals(t.beginLine, zoo.getLine()); assertEquals(e, zoo.expansion); assertSame(e.parent, zoo); "," ZeroOrOne XXXXX = new ZeroOrOne(t, e); assertEquals(t.beginColumn, XXXXX.getColumn()); assertEquals(t.beginLine, XXXXX.getLine()); assertEquals(e, XXXXX.expansion); assertSame(e.parent, XXXXX); "
0," if (!viewFrustum.intersects(this.getExtent(dc.getGlobe(), dc.getVerticalExaggeration()))) return false; if (getSizeInPixels(dc) <= MIN_CELL_SIZE_PIXELS) return false; return true; "," JID myJID = saros.getMyJID(); for (User participant : sarosSession.getParticipants()) { if (participant.getJID().equals(myJID)) continue; sendMessageToUser(participant.getJID(), extension, true); "
0," SQLiteDatabase db; Cursor c = null; Note note; db = mDbHelper.getWritableDatabase(); c = db.query(DBConsts.NOTES_TABLE_NAME, null, DBConsts.NOTES_ID +""=?"", new String []{ String.valueOf(noteId) "," if((this.Produces != null) && (!this.Produces.equals(""""))){ String[] array=this.Produces.split("",""); if(array.length > 1) { log.warn(""WSDL2 supports only one output-serialization""); return array[0]; "
1," T w = binHash.getBinFor(exp); List<V> valList = valueLists.get(w); if (valList == null) { throw new IllegalStateException( ""Weird! cannot remove item that doesn't exist: "" + exp); "," T w = binHash.getBinFor(exp); List<V> valList = valueLists.get(w); if (valList == null) { throw new IllegalStateException( ""Weird! cannot remove item that doesn't exist: "" + exp); "
0, this.gMap = gMap; table = new CellTable<Place>(); TextColumn<Place> nameColumn = new TextColumn<Place>(){ @Override public String getValue(Place object) { return object.getName(); , for (GenFeature key : xReference.getKeys()) { EStructuralFeature eAttribute = key.getEcoreFeature(); if (eAttribute instanceof EAttribute) { eReference.getEKeys().add((EAttribute)eAttribute); 
0, classLoader = cl; entityManagerFactoryCallable = callable; createDelegate(); logCriteriaJpql = logCriteriaQueryJpql(props); logCriteriaJpqlLevel = logCriteriaQueryJpqlLevel(props); ," SuggestionCompletionLoader loader = new SuggestionCompletionLoader(); List<String> result = loader.removeIrrelevantFields( Arrays.asList( new String[]{""foo"", ""toString"", ""class"", ""hashCode"""
0, switch (featureID) { case UmlStatePackage.SUBMACHINE_RULE__PATH: return getPath(); case UmlStatePackage.SUBMACHINE_RULE__SUBMACHINE: if (resolve) return getSubmachine(); return basicGetSubmachine(); ," IfcReal durationReal = PropertyUtility.initializeRealToStringVal(duration); PropertySetUtility. setPropertySetPropertyValueOfName(pName_WarrantyDurationLabor, this,durationReal); "
1, long umsatz = getUmsatzAsLong(); BigDecimal prozent = new BigDecimal(umsatz).divide(new BigDecimal(100)); long gewinn = Math.round(prozent.doubleValue() * 20); return formatUmsatz(gewinn); , long umsatz = getUmsatzAsLong(); BigDecimal prozent = new BigDecimal(umsatz).divide(new BigDecimal(100)); long gewinn = Math.round(prozent.doubleValue() * 20); return formatUmsatz(gewinn); 
0," SwingUtilities.replaceUIInputMap(c, JComponent. WHEN_IN_FOCUSED_WINDOW, null); SwingUtilities.replaceUIInputMap(c, JComponent.WHEN_FOCUSED, null); SwingUtilities.replaceUIActionMap(c, null); "," List<FileLink> fileLinks = parser.appendText(text); if (!fileLinks.isEmpty()) { throw new AssertionError(""FileLinks list is erroneously not empty: "" + TestUtility.dumpList(fileLinks)); "
1," NodeList imageList = getDocument().getElementsByTagName(""Image""); double wh[] = Utils.getReconstructImageWH(imageList.item(0)); return Double.isNaN(wh[1]) ? translator.getStackHeight() : wh[1]; "," NodeList XXXXX = getDocument().getElementsByTagName(""Image""); double wh[] = Utils.getReconstructImageWH(XXXXX.item(0)); return Double.isNaN(wh[1]) ? translator.getStackHeight() : wh[1]; "
0," int nSize = 0; int nPrefixSize = 0; String paramName = elem.getAttributeValue(""out""); String size = elem.getAttributeValue(""size""); if(size != null) { nSize = Integer.parseInt(size); "," String anchor = null; String url = null; int anchorIndex = webappUrl.indexOf(""#""); if (anchorIndex > -1) { url = webappUrl.substring(0, anchorIndex); anchor = webappUrl.substring(anchorIndex + 1); "
0, if (bundle.getSymbolicName() == null || (bundle.getSymbolicName() != null && bundle.getSymbolicName().toLowerCase().indexOf(searchString.trim().toLowerCase()) == -1)){ return false; ," StringBuilder encoded; String base, file, params; try { base = getUrlComponent(original, SERVER); file = getUrlComponent(original, FILE); params = getUrlComponent(original, PARAMETERS); "
0, final ChannelCharacter cfrom = ChannelServer.getPlayerStorage().getCharacterByName(from); if (cfrom != null) { cfrom.getClient().write(ChannelPackets.denyGuildInvitation(c.getPlayer().getName())); , this.tokens = new Hashtable(); this.trace = trace; pingToken = new MqttDeliveryTokenImpl(trace); connectToken = new MqttDeliveryTokenImpl(trace); disconnectToken = new MqttDeliveryTokenImpl(trace); 
0," if (!nodeTypesInContent()) { try { InputStream stream = BuiltInNodeTypes.class.getResourceAsStream(""builtin_nodetypes.cnd""); try { ntMgr.registerNodeTypes(new InputStreamReader(stream, ""UTF-8"")); "," if(value == inst.getEObject() && !inst.isConsumed()) return null; switch(index) { case 0: return new Query_QueryAction_0(lastRuleCallOrigin, next, actIndex, consumed); default: return null; "
1," Intent intent = new Intent(pushThis, MapActivity.class); intent.putExtra(MapActivity.MAP_CODE_KEY, poi.mapNumber); intent.putExtra(MapActivity.HIGHLIGHT_CODE_KEY, _poiNumber); startActivity(intent); "," Intent intent = new Intent(pushThis, MapActivity.class); intent.putExtra(MapActivity.MAP_CODE_KEY, poi.mapNumber); intent.putExtra(MapActivity.HIGHLIGHT_CODE_KEY, _poiNumber); startActivity(intent); "
1," String temp = customLogfileName; logFileBrowserWidget.setFilename( ldifFileBrowserWidget.getFilename() + "".log"" ); logFileBrowserWidget.setEnabled( false ); customLogfileName = temp; validate(); "," String XXXXX = customLogfileName; logFileBrowserWidget.setFilename( ldifFileBrowserWidget.getFilename() + "".log"" ); logFileBrowserWidget.setEnabled( false ); customLogfileName = XXXXX; validate(); "
1," switch (featureID) { case NetDSLPackage.MULTIPLICATIVE_EXP__LEFT: return basicSetLeft(null, msgs); case NetDSLPackage.MULTIPLICATIVE_EXP__RIGHT: return basicSetRight(null, msgs); "," switch (featureID) { case NetDSLPackage.MULTIPLICATIVE_EXP__LEFT: return basicSetLeft(null, msgs); case NetDSLPackage.MULTIPLICATIVE_EXP__RIGHT: return basicSetRight(null, msgs); "
0," _fudgeContext = fudgeContext; _underlying = reader; _settings = settings; try { _jsonObject = new JSONObject(new JSONTokener(reader)); init(_fudgeContext, _jsonObject, _settings); "," String userId = generateDomainUserID(domain); this.namespaceManager.changeToGlobalNamespace(); if (this.userManager.existsUser(userId)) { this.userManager.updateUser(userId, name, null, name); "
0," List<PortType> cports = uap.getDomainClientPorts(); System.out.println(""Domain client ports found: "" + cports.size()); for(PortType cport : cports) { System.out.println(cport.getAddress()); "," TextPresentation presentation= new TextPresentation(); HTML2TextReader reader= new HTML2TextReader(new StringReader(fInputText), presentation); String text; try { text= reader.getString(); "
0," this.baseName = name; this.uniqueBaseName = name + ""_"" + Environment.getUniqueTimestamp(); this.setupFile = new File( Environment.class.getClassLoader().getResource( setupFile ).getFile() ); "," Properties properties = new Properties(); try { InputStream inputStream = getClass().getResourceAsStream( ""pmdViewer.properties""); if (inputStream != null) { properties.load(inputStream); "
1," if (resourcePropId == null) throw new IllegalArgumentException(""resourcePropId is null""); ResourceProp obj = this.resourcePropDao.findById(resourcePropId); this.resourcePropDao.remove(obj); "," if (resourcePropId == null) throw new IllegalArgumentException(""resourcePropId is null""); ResourceProp XXXXX = this.resourcePropDao.findById(resourcePropId); this.resourcePropDao.remove(XXXXX); "
1," IPath deployPlanPath = comp.getRootFolder().getUnderlyingFolder().getProjectRelativePath().append(""META-INF"").append(OPENEJB_PLAN_NAME); return comp.getProject().getFile(deployPlanPath); "," IPath XXXXX = comp.getRootFolder().getUnderlyingFolder().getProjectRelativePath().append(""META-INF"").append(OPENEJB_PLAN_NAME); return comp.getProject().getFile(XXXXX); "
0, IntSet values = map.get(key); if (values == null) return false; boolean removed = values.remove(value); if (removed) range--; if (values.size() == 0) map.remove(key); return removed; , if (index == COLUMN_FEATURE_NAME) { if (obj instanceof FeatureLaunchModel) { FeatureLaunchModel model = (FeatureLaunchModel) obj; return pdeLabelProvider.getImage(model.getModel(true)); 
0," if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; MediaInsertOrEjectParams that = MediaInsertOrEjectParams.class.cast(o); return equal(media, that.media); "," @SuppressWarnings(""unchecked"") List<String> teams = (List<String>) cache.get(teamsKey); if (teams != null) { for (String teamName : teams) { con.printf(cache.get(encode(teamName)).toString()); "
1, Dimension d = getPreferredSize(c); View v = (View) c.getClientProperty(BasicHTML.propertyKey); if (v != null) { d.width += v.getMaximumSpan(View.X_AXIS) - v.getPreferredSpan(View.X_AXIS); , Dimension XXXXX = getPreferreXXXXXSize(c); View XXXXX = (View) c.getClientProperty(BasicHTML.propertyKey); if (XXXXX != null) { XXXXX.wiXXXXXth += XXXXX.getMaximumSpan(View.X_AXIS) - XXXXX.getPreferreXXXXXSpan(View.X_AXIS); 
0," if ( descriptor.acceptsArguments() ) { if ( descriptor.requiresArgument() ) addHelpLineWithArgument( descriptor, '<', '>' ); else addHelpLineWithArgument( descriptor, '[', ']' ); ", long style = FieldHelper.getStyle(parent); ArrayList itemCommands = parent.getItemCommands(); if (itemCommands == null || itemCommands.size() <= 1) { style |= ButtonField.CONSUME_CLICK; 
0," this.buffer.append(""[""); for (Iterator it = node.expressions().iterator(); it.hasNext(); ) { Expression e = (Expression) it.next(); e.accept(this); if (it.hasNext()) { this.buffer.append("",""); "," Reader reader = new InputStreamReader(stream); WikipediaResponse response = new Gson().fromJson(reader, WikipediaResponse.class); return response.mobileview.sections.get(0).text; "
0," super(tuplizer, propertyName); if (getEStructuralFeature() != null) { isEEnum = getEStructuralFeature().getEType() instanceof EEnum; if (isEEnum) { eEnum = (EEnum)getEStructuralFeature().getEType(); ", Collection answer = new ArrayList(); Iterator iter = getChildNodes().iterator(); while (iter.hasNext()) { DestinationNode child = (DestinationNode) iter.next(); answer.addAll(child.getChildren()); 
0, this.internal = false; this.levels = new ArrayList<Grid>(); this.tileWidth = 256; this.tileHeight = 256; this.pixelSize = GridSetFactory.DEFAULT_PIXEL_SIZE_METER; this.resolutionsPreserved = true; ," tag = HTML.Tag.HR; assertEquals(""hr"", tag.toString()); assertTrue(""breaks Flow"", tag.breaksFlow()); assertFalse(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); "
0," return Objects.hashCode(super.hashCode(), name, org, fullName, isEnabled, numberOfDeployedVMs, deployedVMQuota, numberOfStoredVMs, storedVMQuota, isLdapUser, deployedVMQuotaRank, storedVMQuotaRank); "," Tree tree = new Tree( composite, SWT.NONE ); tree.addTreeListener( mock( TreeListener.class ) ); assertTrue( tree.isListening( SWT.Expand ) ); assertTrue( tree.isListening( SWT.Collapse ) ); "
0," BansheeServer s = null; Cursor cursor = getDb().query(DB.TABLE_NAME, DB.ALL_COLUMNS, DB.DEFAULT + ""!=0"", null, null, null, null, ""1""); if (cursor.moveToNext()) { s = fillFromCursor(cursor); ", for (int i = 0; i < getChildCount(); i++) { MPSTreeNode node = (MPSTreeNode) getChildAt(i); if (node instanceof SNodeTreeNode) { if (((SNodeTreeNode) node).hasErrors()) return true; 
0, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(UserGroupTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , super.contributeToStatusLine(statusLineManager); for (int i= 0; i < STATUS_FIELD_DEFS.length; i++) statusLineManager.add((IContributionItem)fStatusFields.get(STATUS_FIELD_DEFS[i])); 
1, switch (featureID) { case ActionPackage.TRANSITION_BUTTON__UML_ELEMENT_UID: return UML_ELEMENT_UID_EDEFAULT == null ? umlElementUid != null : !UML_ELEMENT_UID_EDEFAULT.equals(umlElementUid); , switch (featureID) { case ActionPackage.TRANSITION_BUTTON__UML_ELEMENT_UID: return XXXXX == null ? umlElementUid != null : !XXXXX.equals(umlElementUid); 
0," IWorkbenchWindowConfigurer configurer = getWindowConfigurer(); configurer.setInitialSize(new Point(1000, 700)); configurer.setTitle(Messages.DiagramEditorWorkbenchWindowAdvisor_Title); ", switch (item.getItemId()) { case MENU_SAVE: validateAndSetResult(); return true; case MENU_DISCARD: finish(); return true; case MENU_REMOVE: { setRemovedProfileAndFinish(); return true; 
1, myTodoFilter = todoFilter; final String name = todoFilter == null ? null : todoFilter.getName(); myConfiguration.myTodoPanelSettings.setTodoFilterName(name); setFilterText(name); , myTodoFilter = todoFilter; final String XXXXX = todoFilter == null ? null : todoFilter.getName(); myConfiguration.myTodoPanelSettings.setTodoFilterName(XXXXX); setFilterText(XXXXX); 
1," (nextCust = new Customer()).schedule (Rand1.expon (genArr, meanDelay)); if (!balk()) { tellers.request (1); delay (Rand1.erlang (genServ, 2, minute)); tellers.release (1); nbServed++; "," (nextCust = new Customer()).schedule (Rand1.expon (genArr, meanDelay)); if (!balk()) { tellers.request (1); delay (Rand1.erlang (genServ, 2, minute)); tellers.release (1); nbServed++; "
0," FilterProcessor filterProcessor = new FilterProcessor(); printGraph(rootGraph); Graph result = filterProcessor.process((AbstractQueryImpl) veryComplexQueryInter, graphModel); printGraph(result); "," String name = exchange.getIn().getHeader(Exchange.FILE_NAME_PRODUCED, String.class); LOG.warn(""Failure occurred so deleting backup file: "" + name); FileUtil.deleteFile(new File(name)); "
0," long totalSlept = 0; try { if (totalSlept >= killAfterSeconds) { if (ffmpeg != null) { logger.finest(""ffmpeg not completed after "" + totalSlept + ""s, killing""); ffmpeg.destroy(); return; ", super.createTypeConstructor(); for (FunctionDescriptor functionDescriptor : getConstructors()) { ((ConstructorDescriptorImpl) functionDescriptor).setReturnType(getDefaultType()); 
0," mockService.deleteNonAnnotatedMethod(); assertEquals(1, ((MockAudit)auditService).getCalled()); assertEquals(AuditActionType.DELETE, ((MockAudit)auditService).getAudit().getAuditActionType()); "," numberGeneratorService.generateAndInsertNumber(state, MaterialRequirementsConstants.PLUGIN_IDENTIFIER, MaterialRequirementsConstants.MODEL_MATERIAL_REQUIREMENT, ""form"", ""number""); "
0, Collection<String> checkedAttrNodes = new ArrayList<String>(); for (TreeAttribute treeAttr : attrs) { if (treeAttr.isChecked()) checkedAttrNodes.add(treeAttr.getAttrNode().getName().substring(1)); , if (source != null && source instanceof FileSet) { FileSet set = (FileSet) source; JToggleButton button = this.selectButtons.get(set); if (button != null) button.setSelected(set.isSelected()); 
0," String version = getAttribute(Constants.FRAGMENT_HOST, Constants.BUNDLE_VERSION_ATTRIBUTE); if (version == null) { setVersionFields("""", true, """", false); setFieldsEnabled(); return; ", IElementType requestContextElementType = EcoreElementTypes.getElementType(getVisualID(request)); return requestContextElementType != null ? requestContextElementType : myElementType; 
0," ServiceHandler handler = null; for (ComponentServiceModel service : config.getServices()) { if (service.getQName().equals(serviceName)) { handler = handleImplementation(service, serviceName); break; ", if (fProposalPopup != null) fProposalPopup.hide(); if (fContextInfoPopup != null) fContextInfoPopup.hide(); manageAutoActivation(false); if (fCloser != null) { fCloser.uninstall(); fCloser= null; 
0, ContentResolver cr = getContentResolver(); final boolean scanning = ImageManager.isMediaScannerScanning(cr); mHandler.post(new Runnable() { public void run() { checkScanningFinished(scanning); , TextColumnWithTooltip<VmNetworkInterface> nameColumn = new TextColumnWithTooltip<VmNetworkInterface>() { @Override public String getValue(VmNetworkInterface object) { return object.getName(); 
1," ActionBar ac = getActivity().getActionBar(); ac.show(); FragmentManager fm = getFragmentManager(); fm.popBackStack(Main.getBackStackid(), FragmentManager.POP_BACK_STACK_INCLUSIVE); "," ActionBar ac = getActivity().getActionBar(); ac.show(); FragmentManager fm = getFragmentManager(); fm.popBackStack(Main.getBackStackid(), FragmentManager.POP_BACK_STACK_INCLUSIVE); "
1," PlaceNameServiceSet copy = new PlaceNameServiceSet(); copy.setValues(this); for (int i = 0; i < this.serviceList.size(); i++) { copy.serviceList.add(i, this.serviceList.get(i).deepCopy()); "," PlaceNameServXXXXXceSet XXXXX = new PlaceNameServXXXXXceSet(); XXXXX.setValues(thXXXXXs); for (XXXXXnt XXXXX = 0; XXXXX < thXXXXXs.servXXXXXceLXXXXXst.sXXXXXze(); XXXXX++) { XXXXX.servXXXXXceLXXXXXst.add(XXXXX, thXXXXXs.servXXXXXceLXXXXXst.get(XXXXX).deepCopy()); "
0, this.history = new LinkedList<CharSequence>(); this.historyBuffer = null; this.historyCursor = -1; this.io = io; this.buffer = new TermIOBuffer(io); this.writer = new TermIOWriter(io); ," super.handleLoadInstruction(obj); int numProduced = obj.produceStack(cpg); if (numProduced == Constants.UNPREDICTABLE) { throw new InvalidBytecodeException(""Unpredictable stack production""); "
1," List<RevCommit> commits = newArrayList(); try { if (commitId != null) { Log.d(TAG, ""Including specific commit : "" + commitId); commits.add(revWalk.parseCommit(ObjectId.fromString(commitId))); "," List<RevCommit> commits = newArrayList(); try { if (commitId != null) { Log.d(TAG, ""Including specific commit : "" + commitId); commits.add(revWalk.parseCommit(ObjectId.fromString(commitId))); "
0," final Method m = Method.fromString(r.getMethod()); final Request input = new LazyRequestImpl(object.pattern().match(r.getRequestURI()), r); return HttpObjectUtil.invokeMethod(object, m, input); "," String oldClass = class_; class_ = newClass; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_DESC_ELEMENT__CLASS, oldClass, class_)); "
0," myQueue.cancelAllUpdates(); if (myHint == null && e.getMouseEvent().getModifiers() == KeyEvent.SHIFT_MASK) { myQueue.queue(new PreviewUpdate(this, e.getMouseEvent().getPoint())); "," assert (useQuantization); stack.vectors.push(); try { int curNodeSubPart = -1; Vector3f[] triangleVerts = new Vector3f[] { stack.vectors.get(), stack.vectors.get(), stack.vectors.get() "
1, AsymmetricKeyParameter kParam; if (param instanceof ParametersWithRandom) { ParametersWithRandom rParam = (ParametersWithRandom)param; kParam = (AsymmetricKeyParameter)rParam.getParameters(); , AsymmetricKeyParameter kParam; if (param instanceof ParametersWithRandom) { ParametersWithRandom XXXXX = (ParametersWithRandom)param; kParam = (AsymmetricKeyParameter)XXXXX.getParameters(); 
0, builder.transaction().transactionMode(transactional ? TransactionMode.TRANSACTIONAL : TransactionMode.NON_TRANSACTIONAL); if (transactional) JBossTransactionsUtils.setVolatileStores(); , switch (getDBType(em)) { case db2: assertLockTestSQLs(Select + tableLfName + Where + DB2Lock); break; case oracle: case derby: default: assertLockTestSQLs(Select + tableLfName + Where + ForUpdate); 
1," int address = in.readInt(); int attributes = in.readInt(); int maxPacketSize = in.readInt(); int interval = in.readInt(); return new UsbEndpoint(address, attributes, maxPacketSize, interval); "," int XXXXX = in.readInt(); int XXXXX = in.readInt(); int XXXXX = in.readInt(); int XXXXX = in.readInt(); return new UsbEndpoint(XXXXX, XXXXX, XXXXX, XXXXX); "
1, setColor(ColorType.MONOCHROME); setMediaToDefault(); setOrientationRequestedToDefault(); setOrigin(OriginType.PHYSICAL); setPrintQualityToDefault(); setPrinterResolutionToDefault(); , setColor(ColorType.MONOCHROME); setMediaToDefault(); setOrientationRequestedToDefault(); setOrigin(OriginType.PHYSICAL); setPrintQualityToDefault(); setPrinterResolutionToDefault(); 
0," while (doSynch) { try { throttle.throttle(); clockSyncher.synch(); log.debug(""Clock synched, delta = "" + clockSyncher.getDelta() + "", epsilon = "" + clockSyncher.getEpsilon() + "".""); "," List<WebAppContext> contexts = getWebAppContexts(); if (contexts.size() > 0) { for (WebAppContext context : contexts) { System.out.println(""WebAppContext should not exist:\n"" + context); "
1," failedLaunches.incrementAndGet(); logger.warn(t, ""Error while launching instance: #%d %d, %s %s"", index, nodePlan.getCount(), nodePlan .getCloudName(), nodePlan.getTemplateName()); "," failedLaunches.incrementAndGet(); logger.warn(t, ""Error while launching instance: #%d %d, %s %s"", index, nodePlan.getCount(), nodePlan .getCloudName(), nodePlan.getTemplateName()); "
0," for (int i = 0; i < avail.length; i ++) { if (Utils.supportsLocale(avail[i], locale)) { return new FooDateFormat( datePattern[dateStyle]+"" ""+timePattern[timeStyle]+dialect[i], locale); "," if( pingMapOfDownloadMode!=null && pingMapOfSeedingMode!=null){ pingMapOfDownloadMode.setCurrentTransferRates(downRate,upRate); pingMapOfSeedingMode.setCurrentTransferRates(downRate,upRate); "
0," return BitmapTextureAtlasTextureRegionFactory.createTiledFromResource(pBitmapTextureAtlas, pContext.getResources(), pDrawableResourceID, pTextureX, pTextureY, pTileColumns, pTileRows); "," Provider[] providers; providers = Security.getProviders(); for (int i = 0; i < providers.length; i++) { assertEquals(""Incorrect provider number"", i + 1, providers[i] .getProviderNumber()); "
0, return (separateDerivedEncodingsButton == null) || ((separateDerivedEncodingsButton != null) && (separateDerivedEncodingsButton .getSelection() == getStoredSeparateDerivedEncodingsValue())); , boolean deleteRequired; boolean checkingStatus; synchronized(this) { deleteRequired = persisted; persisted = false; checkingStatus = (state == State.STATE_COMPLETED && checkStatus); ended() ; 
0," this.out = out; switch (format) { case FORMAT_NEW: case FORMAT_NEW_CRC: case FORMAT_OLD_ASCII: case FORMAT_OLD_BINARY: break; default: throw new IllegalArgumentException(""Unknown format: ""+format); "," JSONObject o = new JSONObject(); if (has(name)) o.put(""name"", name); if (has(developerId)) o.put(""developerId"", developerId); if (has(email)) o.put(""email"", email); if (!o.isEmpty()) { return o; "
1," ListPodsOptions options = new ListPodsOptions().allocationState(AllocationState.ENABLED); assertEquals(ImmutableList.of(""Enabled""), options.buildQueryParameters().get(""allocationstate"")); "," ListPodsOptions XXXXX = new ListPodsOptions().allocationState(AllocationState.ENABLED); assertEquals(ImmutableList.of(""Enabled""), XXXXX.buildQueryParameters().get(""allocationstate"")); "
1, HttpSession session = request.getSession(false); String ip = request.getRemoteAddr(); if (session == null) { String knownUser = knownUsers.get(ip); if(knownUser != null) { return knownUser; , HttpSession XXXXX = request.getSession(false); String XXXXX = request.getRemoteAddr(); if (XXXXX == null) { String XXXXX = XXXXXs.get(XXXXX); if(XXXXX != null) { return XXXXX; 
0, final int prime = 31; int result = 1; result = prime * result + ((argType == null) ? 0 : argType.hashCode()); result = prime * result + ((value == null) ? 0 : value.hashCode()); return result; ," LastGroupSeparator cs = new LastGroupSeparator( ""Foo(Bar(Wheel),Har),Test(Goo,Free)""); assertEquals(""Goo,Free"", cs.process()); assertEquals(""Foo(Bar(Wheel),Har),Test"", cs.getRoot()); "
0," String label = ((AnnexLibrary) object).getName(); return label == null || label.length() == 0 ? getString(""_UI_AnnexLibrary_type"") : getString(""_UI_AnnexLibrary_type"") + "" "" + label; ", if (newCID == null || newCID.getRace() == null) return false; if (oldCID.equals(newCID.getParent())) return true; if (Config.ALLOW_ENTIRE_TREE && newCID.childOf(oldCID)) return true; return false; 
0, Set<String> namesUsed = new HashSet<String>(current.size()); for (PsiElement element : current) { if (element instanceof ParameterElement) { namesUsed.add(((ParameterElement)element).getName()); , switch (featureID) { case Bpmn2Package.BUSINESS_RULE_TASK__IMPLEMENTATION: return IMPLEMENTATION_EDEFAULT == null ? implementation != null : !IMPLEMENTATION_EDEFAULT.equals(implementation); 
0," if (debug) { if (aboveNode != null && belowNode != null) { System.err.println(""dragLineTween(): "" + dragNode.getText() + "" above = "" + aboveNode.getText() + "", below = "" + belowNode.getText()); "," try { BufferedReader reader = new BufferedReader(new FileReader(file)); String line; while ((line = reader.readLine()) != null) { if (line.matches(""^def.*test.*():"")) { reader.close(); return true; "
1, int value = DEFAULT_VALUE; try { InputStream is = new FileInputStream(WLED_FILE); int read = -1; byte[] buf = new byte[128]; int p = 0; while ((read = is.read()) != -1) { buf[p++] = (byte)read; , int XXXXX = DEFAULT_VALUE; try { InXXXXXutStream XXXXX = new FileInXXXXXutStream(WLED_FILE); int XXXXX = -1; byte[] buf = new byte[128]; int XXXXX = 0; while ((XXXXX = XXXXX.XXXXX()) != -1) { buf[XXXXX++] = (byte)XXXXX; 
0," if (nextAvailable) { Writable key = (Writable) ReflectionUtils.newInstance(reader.getKeyClass(), conf); BytesWritable value = new BytesWritable(); try { nextAvailable = reader.next(key, value); ", loadDevices(); ListIterator<Device> deviceIter = getAllDevices().listIterator(); while (deviceIter.hasNext()) { Device d = deviceIter.next(); if (d.equals(device)) { deviceIter.remove(); 
1, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(SampleGroovyTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(SampleGroovyTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; 
1," try { JSONArray topics = configurable.optJSONArray(""view_config_topics""); if (topics != null) { for (int i = 0; i < topics.length(); i++) { addConfigTopic(new TopicModel(topics.getJSONObject(i))); "," try { JSONArray XXXXX = confXXXXXgurable.optJSONArray(""vXXXXXew_confXXXXXg_XXXXX""); XXXXXf (XXXXX != null) { for (XXXXXnt XXXXX = 0; XXXXX < XXXXX.length(); XXXXX++) { addConfXXXXXgTopXXXXXc(new TopXXXXXcModel(XXXXX.getJSONObject(XXXXX))); "
0," assert( (size == kCCParticleStartSizeEqualToEndSize) || ( size >= 0 && size <= ccMacros.CC_MAX_PARTICLE_SIZE)) : ""PointParticleSystem only supports 0 <= size <= 64""; super.setEndSize(size); ", GetAssigningAuthoritiesByHomeCommunityResponseType response = new GetAssigningAuthoritiesByHomeCommunityResponseType(); if (NullChecker.isNullish(homeCommunityId.getValue())) { return null; 
1," URI resourceURI = EditUIUtil.getURI(getEditorInput()); Exception exception = null; Resource resource = null; try { resource = editingDomain.getResourceSet().getResource(resourceURI, true); "," URI XXXXX = EditUIUtil.getURI(getEditorInput()); Exception XXXXX = null; Resource XXXXX = null; try { XXXXX = editingDomain.getResourceSet().getResource(XXXXX, true); "
1," boolean exists = contextExistsInCacheFor(sessionId) || super.contextExistsFor(sessionId); _log.debug(""contextExistsFor returning "" + exists + "" for sessionId "" + sessionId); return exists; "," boolean XXXXX = contextExistsInCacheFor(sessionId) || super.contextExistsFor(sessionId); _log.debug(""contextExistsFor returning "" + XXXXX + "" for sessionId "" + sessionId); return XXXXX; "
1," Enumeration e = properties.propertyNames(); while (e.hasMoreElements()) { String key = (String) e.nextElement(); String message = properties.getProperty(key); vetMessage(key, message); "," EnumXXXXXration XXXXX = propXXXXXrtiXXXXXs.propXXXXXrtyNamXXXXXs(); whilXXXXX (XXXXX.hasMorXXXXXElXXXXXmXXXXXnts()) { String kXXXXXy = (String) XXXXX.nXXXXXxtElXXXXXmXXXXXnt(); String mXXXXXssagXXXXX = propXXXXXrtiXXXXXs.gXXXXXtPropXXXXXrty(kXXXXXy); vXXXXXtMXXXXXssagXXXXX(kXXXXXy, mXXXXXssagXXXXX); "
1," super.printStackTrace( out ); out.println( ""Nested exceptions to follow:\n"" ); boolean isFirst = true; for ( Throwable throwable : nestedExceptions ) { if ( isFirst ) { isFirst = false; "," super.printStackTrace( out ); out.println( ""Nested exceptions to follow:\n"" ); boolean XXXXX = true; for ( Throwable throwable : nestedExceptions ) { if ( XXXXX ) { XXXXX = false; "
0," List<CCFile> diff = new DirDiffUtil(false).diff(""b"", f(0), f(1)); assertEquals(2, diff.size()); check(diff.get(0), ""b/lib"", Status.Added); check(diff.get(1), ""b/a.x"", Status.Deleted); "," mockAuditService.getAuditMethod(); assertEquals(1, ((MockAudit)auditService).getCalled()); assertEquals(AuditActionType.READ, ((MockAudit)auditService).getAudit().getAuditActionType()); "
0," long dataId = c.getLong(DataUpdateQuery._ID); long rawContactId = c.getLong(DataUpdateQuery.RAW_CONTACT_ID); if (!super.update(db, txContext, values, c, callerIsSyncAdapter)) { return false; "," List list = getListView().getList(); int index = item.getIndex(); if (index != -1) { getListView().modelChanging(); Collections.swap(list, index, index + 1); getListView().modelChanged(); "
1," TaskEditorInput input = parentEditor.getTaskEditorInput(); if (TasksUiUtil.isOutgoingNewTask(input.getTask(), TracCorePlugin.CONNECTOR_KIND)) { return new TracTaskEditorPage(parentEditor); "," TaskEditorInput XXXXX = parentEditor.getTaskEditorInput(); if (TasksUiUtil.isOutgoingNewTask(XXXXX.getTask(), TracCorePlugin.CONNECTOR_KIND)) { return new TracTaskEditorPage(parentEditor); "
1," if (s==null) return NULL; Integer iobj=(Integer)m_stringToInt.get(s); if (iobj==null) { m_intToString.addElement(s); iobj=new Integer(m_intToString.size()); m_stringToInt.put(s,iobj); "," if (s==null) return NULL; Integer iobj=(Integer)m_stringToInt.get(s); if (iobj==null) { m_intToString.addElement(s); iobj=new Integer(m_intToString.size()); m_stringToInt.put(s,iobj); "
0," final ListCalc listCalc1 = compiler.compileList(call.getArg(0)); final ListCalc listCalc2 = compiler.compileList(call.getArg(1)); return new AbstractListCalc(call, new Calc[] {listCalc1, listCalc2", if (active) { Layer.clearBlendingMethod(); Layer layer = currentWorld.getCelestialObject(defaultTexture); if (layer != null) { layer.setBlendingMethod(rainStrength); return layer.texture; 
0," AddTriggerPanel.this.commandField.setText( MoodManager.getDefaultAction( AddTriggerPanel.this.typeSelect.getSelectedType(), (String) anObject ) ); super.setSelectedItem( anObject ); ", for (Iterator it= fDifferences.iterator(); it.hasNext();) { QuickDiffRangeDifference d= (QuickDiffRangeDifference) it.next(); if (leftLine >= d.leftStart() && leftLine < d.leftEnd()) { return d; 
0," if (r instanceof RankedResult){ RankedResult rR = (RankedResult)r; System.out.print(rR.getDocument().getId() + "" - "" + rR.getRank()); System.out.println(""\t"" + rR.getDocument().getTitle()); ", this.startKey = null; this.endKey = null; setIdIsSet(false); this.id = 0; this.name = null; setVersionIsSet(false); this.version = 0; this.serverName = null; setPortIsSet(false); this.port = 0; 
1," if (iIndex < size) { stream.move(getKeyPositionInStream(iIndex), ORecordId.PERSISTENT_SIZE); if (rids != null) System.arraycopy(rids, iIndex, rids, iIndex + 1, size - iIndex - 1); "," if (iIndex < size) { stream.move(getKeyPositionInStream(iIndex), ORecordId.PERSISTENT_SIZE); if (rids != null) System.arraycopy(rids, iIndex, rids, iIndex + 1, size - iIndex - 1); "
1, Properties result = new Properties(); if (!location.toFile().exists()) return result; InputStream input = null; try { input = new FileInputStream(location.toFile()); result.load(input); , Properties XXXXX = new Properties(); if (!location.toFile().exists()) return XXXXX; InputStream XXXXX = null; try { XXXXX = new FileInputStream(location.toFile()); XXXXX.load(XXXXX); 
0, if ((item != null) && !item.isDisposed()) { item.setData(null); Control control = item.getControl(); if ((control != null) && !control.isDisposed()) { item.setControl(null); control.dispose(); , if (mData != null) { Object[] otherData = other.getData(); if (mData.length == otherData.length) { for (int i = 0; i < mData.length; i++) { if (!mData[i].equals(otherData[i])) { return -1; 
1," int offset = getOffsetToAdd(subtrahendInstant); return iField.getDifference (minuendInstant + (iTimeField ? offset : getOffsetToAdd(minuendInstant)), subtrahendInstant + offset); "," int XXXXX = getOffsetToAdd(subtrahendInstant); return iField.getDifference (minuendInstant + (iTimeField ? XXXXX : getOffsetToAdd(minuendInstant)), subtrahendInstant + XXXXX); "
0," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; ", PingTargetManager pingTargetMgr = WebloggerFactory.getWeblogger().getPingTargetManager(); if(getPingTargetId() != null) try { setPingTarget(pingTargetMgr.getPingTarget(getPingTargetId())); 
1," pylon = P; String image = P.gui; offX = P.screenX; offY = P.screenY; mouseOpacity = 2; layer = 25; if(image != null) { sprite = new Sprite(image, false); Global.state.newObjBuffer.add(this); "," pylon = P; String XXXXX = P.gui; offX = P.screenX; offY = P.screenY; mouseOpacity = 2; layer = 25; if(XXXXX != null) { sprite = new Sprite(XXXXX, false); Global.state.newObjBuffer.add(this); "
0, try { ByteArrayOutputStream baos = new ByteArrayOutputStream(4096); original.write(baos); ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray()); return new HSSFWorkbook(bais); ," if (!firstCellPainted) { attributes.clear(); attributes.put(ATTR_CLASS, getStyle().getLabel() + "" "" + getStyle().getLayoutLabelCell()); write(LayoutJspUtils.INSTANCE.startTag(TAG_TD, attributes)); "
1," ATTRIBUTES_FIRST.set(HotKeyAttributes.key, ""x""); for (int i=1; i<=NUMBER_OF_TESTS; i++) { for (int j=0; j<i; j++) { selenium.keyPressNative(KeyEvent.VK_X); selenium.keyPressNative(KeyEvent.VK_A); "," ATTRIBUTES_FIRST.set(HotKeyAttributes.key, ""x""); for (int i=1; i<=NUMBER_OF_TESTS; i++) { for (int j=0; j<i; j++) { selenium.keyPressNative(KeyEvent.VK_X); selenium.keyPressNative(KeyEvent.VK_A); "
1, if (traceMessage && LOGGER.isTraceEnabled()) { this.loggerStream = new PrintStream(new ForceLoggerStream(new StreamLogger() { @Override public void log(String msg) { LOGGER.trace(msg); , if (traceMessage && LOGGER.isTraceEnabled()) { this.loggerStream = new PrintStream(new ForceLoggerStream(new StreamLogger() { @Override public void log(String msg) { LOGGER.trace(msg); 
0, if (isNotNull(this.removeCurrentNotificationBroadcastReciever)) { unregisterReceiver(this.removeCurrentNotificationBroadcastReciever); this.removeCurrentNotificationBroadcastReciever = null; , Capabilities result = super.getCapabilities(); result.enableAllAttributes(); result.enableAllClasses(); result.enable(Capability.NO_CLASS); result.enable(Capability.MISSING_VALUES); return result; 
1, _conf = conf; setValidating(true); setLog(conf.getLog(OpenJPAConfiguration.LOG_METADATA)); setParseComments(true); setMode(MODE_META | MODE_MAPPING | MODE_QUERY); setParseText(true); , _conf = conf; setValidating(true); setLog(conf.getLog(OpenJPAConfiguration.LOG_METADATA)); setParseComments(true); setMode(MODE_META | MODE_MAPPING | MODE_QUERY); setParseText(true); 
1, TestSuite testSuite = new TestSuite(); testSuite.addTestSuite(AddPageNUTest.class); testSuite.addTestSuite(AddPortletNUTest.class); testSuite.addTestSuite(TearDownPageTest.class); return testSuite; , TestSuite testSuite = new TestSuite(); testSuite.addTestSuite(AddPageNUTest.class); testSuite.addTestSuite(AddPortletNUTest.class); testSuite.addTestSuite(TearDownPageTest.class); return testSuite; 
1, return ApplicationManager.getApplication().isUnitTestMode() || ApplicationManager.getApplication().isHeadlessEnvironment() || UNRESPONSIVE_INTERVAL == 0 || UNRESPONSIVE_THRESHOLD == 0; , return ApplicationManager.getApplication().isUnitTestMode() || ApplicationManager.getApplication().isHeadlessEnvironment() || UNRESPONSIVE_INTERVAL == 0 || UNRESPONSIVE_THRESHOLD == 0; 
1," List<INakedActivityNode> activityNodesRecursively = a.getActivityNodesRecursively(); for(INakedActivityNode node:activityNodesRecursively){ if(flowsIntoSelf(node, node)){ return true; "," List<INakedActivityNode> activityNodesRecursively = a.getActivityNodesRecursively(); for(INakedActivityNode node:activityNodesRecursively){ if(flowsIntoSelf(node, node)){ return true; "
1, Set<String> namesUsed = new HashSet<String>(current.size()); for (PsiElement element : current) { if (element instanceof ParameterElement) { namesUsed.add(((ParameterElement)element).getName()); , Set<String> namesUsed = new HashSet<String>(current.size()); for (PsiElement element : current) { if (element instanceof ParameterElement) { namesUsed.add(((ParameterElement)element).getName()); 
0, long ix = Double.doubleToRawLongBits(x); long iy = Double.doubleToRawLongBits(y); ix = (0x7fffffffffffffffL & ix) | (0x8000000000000000L & iy); return Double.longBitsToDouble(ix); ," final List<JSError> errors = new ArrayList<JSError>(); Compiler compiler = new Compiler(new BasicErrorManager() { @Override public void report(CheckLevel level, JSError error) { errors.add(error); "
0," for (int i = 0; i < 100; i++) { evt.setProgressValue(i + 1); evt.setProgressMessage("""" + i + ""% done...""); if (evt.getCancelStatus() != CancelStatus.REQUESTED) { try { Thread.sleep(100); ", try { ByteArrayOutputStream baos = new ByteArrayOutputStream(4096); original.write(baos); ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray()); return new HSSFWorkbook(bais); 
1," Class<?> clazz = o.getClass(); Map<Object, Object> map = db.get(clazz); Entity entity = (Entity) o; if (map == null) { map = new ConcurrentHashMap<Object, Object>(); db.put(clazz, map); "," Class<?> clazz = o.getClass(); Map<Object, Object> map = db.get(clazz); Entity XXXXX = (Entity) o; if (map == null) { map = new ConcurrentHashMap<Object, Object>(); db.put(clazz, map); "
0, super(loc); this.type = MtType.TOGGLE; this.delay = delay; if(delay < 0) this.delayTicks = MTUtil.secondsToTicks(Properties.toggleDelay); else this.delayTicks = MTUtil.secondsToTicks(delay); ," Abdera abdera = new Abdera(); Link link = abdera.getFactory().newLink(); link.setHref(href.toString()); link.setRel(""edit-media""); link.setMimeType(mediaType); this.entry.addLink(link); "
1, super(FLAT); setPreferenceStore(Activator.getDefault().getPreferenceStore()); setDescription(Messages.QuickJUnitNotificationPreferencePage_description); noDefaultAndApplyButton(); , super(FLAT); setPreferenceStore(Activator.getDefault().getPreferenceStore()); setDescription(Messages.QuickJUnitNotificationPreferencePage_description); noDefaultAndApplyButton(); 
0, super.onCreate(savedInstanceState); mHandler = new Handler(); Bundle extras = this.getIntent().getExtras(); queueUrl = extras.getString(SimpleQueue.QUEUE_URL); startPopulateList(); , Event nativeEvent = Event.as(event.getNativeEvent()); switch (DOM.eventGetType(nativeEvent)) { case Event.ONKEYDOWN: break; case Event.ONMOUSEWHEEL: closePopup(); break; default: 
1, final ModulesConfigurator configurator = getModulesConfigurator(module.getProject()); if (configurator != null) { return configurator.getFacetsConfigurator().getOrCreateModifiableModel(module); , final ModulesConfigurator XXXXX = getModulesConfigurator(module.getProject()); if (XXXXX != null) { return XXXXX.getFacetsConfigurator().getOrCreateModifiableModel(module); 
0," switch (e.type) { case SWT.Deiconify: EventQueue.invokeLater(new Runnable () { public void run () { frame.dispatchEvent (new WindowEvent (frame, WindowEvent.WINDOW_DEICONIFIED)); "," try { URL installURL = new URL(getDefault().getDescriptor().getInstallURL(), path.toString()); URL localURL = Platform.asLocalURL(installURL); return new File(localURL.getFile()); "
0," final EObject domainElement = getSemanticElement(semanticAdapter); final int visualID; if (semanticHint == null) { visualID = SUCVisualIDRegistry.getNodeVisualID(containerView, domainElement); "," StringTokenizer tok = new StringTokenizer( artifact, "":"" ); if ( tok.countTokens() != 4 ) { throw new IllegalArgumentException( ""Artifact must have 4 tokens: '"" + artifact + ""'"" ); "
0," final ExpandMacroToPathMap result = super.getExpandMacroMap(); addFileHierarchyReplacements(result, PathMacrosImpl.PROJECT_DIR_MACRO_NAME, getProjectDir(myProject)); return result; ", this.lowRatio = lowRatio; this.highRatio = highRatio; this.locView = locView; this.complexityView = complexityView; this.overView = overView; this.dailyView = dailyView; this.encoding = encoding; 
1, int tagValue = tagName.toLowerCase( ).hashCode( ); if ( ParserSchemaConstants.STRUCTURE_TAG == tagValue ) return new ChoiceStructureState( list ); return super.startElement( tagName ); , int XXXXX = tagName.toLowerCase( ).hashCode( ); if ( ParserSchemaConstants.STRUCTURE_TAG == XXXXX ) return new ChoiceStructureState( list ); return super.startElement( tagName ); 
0, super.init(); Set<Group> groups = groupManager.listLocalGroups(); if (groups != null && !groups.isEmpty()) { for (Group group : groups) { if (isSyncEnabled(group)) { pull(group); push(group); , int i; int nrc = iParameters.size(); for (i = 0; i < nrc; i++) { if (((ParameterName) iParameters.get(i)).iName.equals(aVariable)) { ((ParameterName) iParameters.get(i)).iHold = true; 
0," JSONObject o = new JSONObject(); if (has(name)) o.put(""name"", name); if (has(developerId)) o.put(""developerId"", developerId); if (has(email)) o.put(""email"", email); if (!o.isEmpty()) { return o; "," Component c = super.getListCellRendererComponent(list,value,index,false,cellHasFocus); checkBox.setEnabled(CheckBoxListControl.this.isEnabled()); checkBox.setSelected(isSelected); return panel; "
1," try { String sql = ""SELECT type,mackey,expdate FROM "" + _tableName + "" WHERE handle=?""; JdbcTemplate jdbcTemplate = getJdbcTemplate(); Map res = jdbcTemplate.queryForMap(sql, new Object[] {handle"," try { String XXXXX = ""SELECT type,mackey,expdate FROM "" + _tableName + "" WHERE handle=?""; JdbcTemplate XXXXX = getJdbcTemplate(); Map XXXXX = XXXXX.queryForMap(XXXXX, new Object[] {handle"
1, IBundleMakerArtifact artifact = getParent(IModuleArtifact.class); return artifact instanceof IModuleArtifact && ((IModuleArtifact) artifact).getAssociatedModule() instanceof IResourceModule; , IBundleMakerArtifact XXXXX = getParent(IModuleArtifact.class); return XXXXX instanceof IModuleArtifact && ((IModuleArtifact) XXXXX).getAssociatedModule() instanceof IResourceModule; 
0," try { pushBPMNActivity(new RepeatActivity(elem, getBPMNActivity(), m_modelFactory, m_notationFactory)); pushBPMNActivity(new SequenceActivity(getBPMNActivity(), m_modelFactory, m_notationFactory)); "," IPAddressMap<String> map = new IPAddressMap(); map.put(""10.5.2."",""1""); assertNotNull(map.match(""10.5.2.0"")); assertNotNull(map.match(""10.5.2.128"")); assertNotNull(map.match(""10.5.2.255"")); "
0, Object val = edge.getEdgeData().getAttributes().getValue(column.getIndex()); val = dynamicHelper.getDynamicValue(val); if (val != null && useRegex) { return regex.matcher((String) val).matches(); ," try { return bundleContext.createFilter( ""(&("" + Constants.OBJECTCLASS + ""="" + PaxLayout.class.getName() + "")"" + ""("" + PaxLoggingService.LAYOUT_NAME_PROPERTY + ""="" + name + ""))""); "
0, for (Iterator it = patternList.iterator(); it.hasNext();) { String patternString = it.next().toString(); SimpleStringPattern pattern = new SimpleStringPattern(patternString); addPattern(pattern); ," titleParser.parseInformation(htmlString, link, inAccountId); descriptionParser.parseInformation(htmlString, link, inAccountId); imageParser.parseInformation(htmlString, link, inAccountId); "
1, final Set<ScopePathListener> listeners = scopePathListeners.get(scopePath); if (listeners != null) { for (final ScopePathListener listener : listeners) { listener.configSaved(scopePath); , final Set<ScopePathListener> listeners = scopePathListeners.get(scopePath); if (listeners != null) { for (final ScopePathListener listener : listeners) { listener.configSaved(scopePath); 
0," final IPath p = new Path(path); if (p.isAbsolute() && p.segmentCount() > 1) { return AbstractUIPlugin.imageDescriptorFromPlugin(p.segment(0), p .removeFirstSegments(1).makeAbsolute().toString()); "," long oldIndexUsage = profiler.getCounter(""Query.indexUsage""); long oldCompositeIndexUsage = profiler.getCounter(""Query.compositeIndexUsage""); if (oldIndexUsage == -1) { oldIndexUsage = 0; "
0, CmsGalleryDialog galleryDialog = new CmsGalleryDialog(CmsTabbedPanelStyle.buttonTabs); new CmsGalleryController(new CmsGalleryControllerHandler(galleryDialog)); return galleryDialog; , Enumeration listeners = listenerList.elements(); while (listeners.hasMoreElements()) { TreeModelListener listener = (TreeModelListener) listeners.nextElement(); listener.treeNodesRemoved(e); 
0," try { ((ApplicationContextImpl) _remoteParticipant.getApplicationContext()).getRemoteCommunication().joinAnswer( _remoteParticipant.getId(), _localParticipant.getRemoteAddress(), answerSDP); "," IDialogSettings master = PDEPlugin.getDefault().getDialogSettings(); IDialogSettings section = master.getSection(""pluginsView""); if (section == null) { section = master.addNewSection(""pluginsView""); "
0," final IPath p = new Path(path); if (p.isAbsolute() && p.segmentCount() > 1) { return AbstractUIPlugin.imageDescriptorFromPlugin(p.segment(0), p .removeFirstSegments(1).makeAbsolute().toString()); "," if( WidgetLCAUtil.wasEventSent( browser, EVENT_PROGRESS_COMPLETED ) ) { IBrowserAdapter browserAdapter = browser.getAdapter( IBrowserAdapter.class ); browserAdapter.sendProgressCompletedEvent(); "
0," ArgumentChecker.notNull(portfolio, ""portfolio""); _portfolios.put(portfolio.getUniqueId().getObjectId(), portfolio); addToCache(portfolio.getUniqueId().getValue(), null, portfolio.getRootNode()); "," ChargeDecorator.reset(); account.deposit(100); assertEquals(ChargeDecorator.charged, 0); account.withdraw(50); assertEquals(ChargeDecorator.charged, 5); assertEquals(account.getBalance(), 45); "
1, synchronized (frameListeners) { Iterator it = frameListeners.iterator(); while (it.hasNext()) { FrameListener listener = (FrameListener) it.next(); listener.processMetadata(metadata); , synchronized (frameListeners) { Iterator XXXXX = frameListeners.XXXXXerator(); while (XXXXX.hasNext()) { FrameListener XXXXX = (FrameListener) XXXXX.next(); XXXXX.processMetadata(metadata); 
1," int power = log2Ceil(maxId); int ret = (0x1 << Math.max(0,(power - 1)))+fileId; if (ret > maxId) throw new IllegalArgumentException(""fileId ""+fileId+"" maxId ""+maxId+"" ret ""+ret); return ret ; "," int XXXXX = log2Ceil(maxId); int XXXXX = (0x1 << Math.max(0,(XXXXX - 1)))+fileId; if (XXXXX > maxId) throw new IllegalArgumentException(""fileId ""+fileId+"" maxId ""+maxId+"" XXXXX ""+XXXXX); XXXXXurn XXXXX ; "
0, final HashCodeBuilder hashCodeBuilder = new HashCodeBuilder(); hashCodeBuilder.append(month.getYear()); hashCodeBuilder.append(month.getMonthOfYear()); return hashCodeBuilder.toHashCode(); ," HashMap<String,ModContainer> modList=new HashMap<String,ModContainer>(); List<ModContainer> mods = new ArrayList<ModContainer>(this.mods); for (ModContainer m : mods) { modList.put(m.getName(), m); "
0, if (IDEWorkbenchPlugin.getDefault().getPreferenceStore().getBoolean( IDEInternalPreferences.WELCOME_DIALOG)) { IProduct product = Platform.getProduct(); if (product == null) { return; ," super(""testResultDetailsExportDestinationPage""); setTitle(Messages.ExportTestResultDetailsWizardDestinationPageTitle); setDescription( Messages.ExportTestResultDetailsWizardPageDescription); "
1," SpringBusFactory factory = new SpringBusFactory(); bus = factory.createBus(""org/apache/cxf/ws/rm/feature.xml""); RMManager manager = bus.getExtension(RMManager.class); verifyManager(manager); "," SpringBusFactory factory = new SpringBusFactory(); bus = factory.createBus(""org/apache/cxf/ws/rm/feature.xml""); RMManager manager = bus.getExtension(RMManager.class); verifyManager(manager); "
0," mQueryHandler.post(new Runnable() { @Override public void run() { if (Log.isLoggable(LogTag.APP, Log.VERBOSE)) { log(""onDraftChanged: threadId="" + threadId + "", hasDraft="" + hasDraft); "," LoggerMap.this.mMapView.setSatellite( mSharedPreferences.getBoolean( Constants.SATELLITE, false ) ); LoggerMap.this.mMapView.setTraffic( mSharedPreferences.getBoolean( Constants.TRAFFIC, false ) ); "
1," ObaTripDetailsRequest request = ObaTripDetailsRequest.newRequest(getContext(), TEST_TRIP_ID); UriAssert.assertUriMatch( ""http: new HashMap<String, String>() {{ put(""key"", ""*""); put(""version"", ""2""); "," ObaTripDetailsRequest XXXXX = ObaTripDetailsRequest.newRequest(getContext(), TEST_TRIP_ID); UriAssert.assertUriMatch( ""http: new HashMap<String, String>() {{ put(""key"", ""*""); put(""version"", ""2""); "
1," Color color = layout.getColor(); String title = ""R="" + color.getRed() + "", G="" + color.getGreen() + "", B="" + color.getBlue(); return new CustomMultiDockable( this, title, color ); "," Color XXXXX = layout.getColor(); String XXXXX = ""R="" + XXXXX.getRed() + "", G="" + XXXXX.getGreen() + "", B="" + XXXXX.getBlue(); return new CustomMultiDockable( this, XXXXX, XXXXX ); "
0," InternetDomainName domain = InternetDomainName.from(""foo.com""); assertEquals(""www.foo.com"", domain.child(""www"").name()); try { domain.child(""www.""); fail(""www..google.com should have been invalid""); "," WriteOp writeOp = new WriteOp(sourceProduct, file, formatName); writeOp.setDeleteOutputOnFailure(deleteOutputOnFailure); writeOp.setWriteEntireTileRows(true); writeOp.writeProduct(pm); "
0," DialValueIndicator i1 = new DialValueIndicator(0); DialValueIndicator i2 = new DialValueIndicator(0); assertTrue(i1.equals(i2)); int h1 = i1.hashCode(); int h2 = i2.hashCode(); assertEquals(h1, h2); "," if (action == null) action = CrazyAnnouncer.getPlugin().getAction(actionname); if (action != null) Bukkit.getScheduler().scheduleAsyncDelayedTask(CrazyAnnouncer.getPlugin(), action, delay / 50); "
1," final Player player = event.getEntity(); boolean drop = dropOnDeath; boolean clear = dropOnDeath || clearOnDeath; if (player.hasPermission(""alphachest.keepOnDeath"")) { drop = false; clear = false; "," final Player XXXXX = event.getEntity(); boolean XXXXX = XXXXXOnDeath; boolean XXXXX = XXXXXOnDeath || XXXXXOnDeath; if (XXXXX.hasPermission(""alphachest.keepOnDeath"")) { XXXXX = false; XXXXX = false; "
1," double rounded = Math.floor(getValue(unit) + 0.5d); if (rounded > Long.MAX_VALUE) { throw new IllegalArgumentException(""size is too large to be represented in requested unit as a long""); "," double XXXXX = Math.floor(getValue(unit) + 0.5d); if (XXXXX > Long.MAX_VALUE) { throw new IllegalArgumentException(""size is too large to be represented in requested unit as a long""); "
1, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(SampleJSONTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , TestSuite XXXXX = new TestSuite(); XXXXX.addTest(LoginTests.suite()); XXXXX.addTest(SampleJSONTests.suite()); XXXXX.addTestSuite(StopSeleniumTest.class); return XXXXX; 
1," DecimalFormat money_format = new DecimalFormat(""000.00""); String _return = String.format(""%-25s %04d %1s %1s"", title, count, status.SYMBOL(), money_format.format(price)); return _return; "," DecimalFormat money_format = new DecimalFormat(""000.00""); String _return = String.format(""%-25s %04d %1s %1s"", title, count, status.SYMBOL(), money_format.format(price)); return _return; "
1," UnknownRecord unknownRecord = (UnknownRecord)record; return new NdefRecord(NdefConstants.TNF_UNKNOWN, NdefConstants.EMPTY_BYTE_ARRAY, record.getId(), unknownRecord.getPayload()); "," UnknownRecord XXXXX = (UnknownRecord)record; return new NdefRecord(NdefConstants.TNF_UNKNOWN, NdefConstants.EMPTY_BYTE_ARRAY, record.getId(), XXXXX.getPayload()); "
0, Button rightButton = (Button)findViewById(R.id.right_button); rightButton.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { mViewSwitcher.switchRightPage(); ," IWPropertyList parameter = getMethodParameterPropertyList(methodProperty, parameterIndex); if (parameter != null) { return (parameter.getProperty(METHOD_PARAMETER_PROPERTY_DESCRIPTION)); "
1," UpdateCore.logInfo(""UpdateStatusControl.checkFailed()""); asyncExec(new Runnable() { @Override public void run() { setStatus(message, regularFont); setActionEnabled(checkFordUpdatesAction); "," UpdateCore.logInfo(""UpdateStatusControl.checkFailed()""); asyncExec(new Runnable() { @Override public void run() { setStatus(message, regularFont); setActionEnabled(checkFordUpdatesAction); "
1," try { Software software = annSrcController.getSoftware(softwareId); return makeMap( ""software"", software, ""annotSources"", annSrcController.getAnnotationSourcesForSoftware(software) ); "," try { Software XXXXX = annSrcController.getSoftware(XXXXXId); return makeMap( ""XXXXX"", XXXXX, ""annotSources"", annSrcController.getAnnotationSourcesForSoftware(XXXXX) ); "
1, if(pathConstraints.size() < 1) return null; PathConstraints pcon = new PathConstraints(); for(GenericLink gl : glinks) { if(pcon == null) return null; pcon = pcon.intersect(pathConstraints.get(gl)); , if(pathConstraints.size() < 1) return null; PathConstraints XXXXX = new PathConstraints(); for(GenericLink gl : glinks) { if(XXXXX == null) return null; XXXXX = XXXXX.intersect(pathConstraints.get(gl)); 
1," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," EditorCell XXXXX = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, XXXXX, editorContext); return XXXXX; "
1, boolean gameWon = deck.isEmpty() && revealedCards.isEmpty(); if( gameWon ) for( int i = 0; i < SOL_STACK_CNT && gameWon; i++ ) gameWon = gameWon && solStack[ i ].isEmpty(); return( gameWon ); , boolean XXXXX = deck.XXXXXsEmpty() && revealedCards.XXXXXsEmpty(); XXXXXf( XXXXX ) for( XXXXXnt XXXXX = 0; XXXXX < SOL_STACK_CNT && XXXXX; XXXXX++ ) XXXXX = XXXXX && solStack[ XXXXX ].XXXXXsEmpty(); return( XXXXX ); 
0," Builder builder = new Builder(""issue.comment.create.VIEW""); builder.repo(repoId); builder.add(EXTRA_ISSUE_NUMBER, issueNumber); builder.add(EXTRA_USER, user); return builder.toIntent(); "," assert Pieces.hasPiece(piece): ""The piece must exist in the list""; return instance.letters.containsKey(piece) ? instance.letters.get(piece) : String.valueOf(Pieces.getPiece(piece).getLetter()); "
1, synchronized(xaResourcesAwaitingRecovery) { for(BridgeXAResource bridgeXAResource : xaResourcesAwaitingRecovery) { if(bridgeXAResource.bridgeWrapperId.equals(bridgeWrapperId)) { return true; , synchronized(xaResourcesAwaitingRecovery) { for(BridgeXAResource bridgeXAResource : xaResourcesAwaitingRecovery) { if(bridgeXAResource.bridgeWrapperId.equals(bridgeWrapperId)) { return true; 
1, SubListReadData data = read; if (data.data != list.getData()) { list.lock.lock(); try { data = read; if (data.data != list.getData()) { throw new ConcurrentModificationException(); , SubListReadData data = read; if (data.data != list.getData()) { list.lock.lock(); try { data = read; if (data.data != list.getData()) { throw new ConcurrentModificationException(); 
0," SharedPreferences preferences = mContext.getSharedPreferences(PREFERENCES_TODOIST_USER, Activity.MODE_PRIVATE); return preferences.getBoolean(PREFERENCES_USER_PROFILE_MODIFIED, false); "," if(AdViewTargeting.getRunMode()==RunMode.TEST) Log.d(AdViewUtil.ADVIEW, ""onAdViewSwitchedAd""); AdViewLayout adViewLayout = adViewLayoutReference.get(); if(adViewLayout == null) { return; "
1, DecimalFormat nf = (DecimalFormat) DecimalFormat.getInstance(); nf.setMaximumFractionDigits(1); nf.setMinimumFractionDigits(1); return nf.format((getExactSize()- getAnnotationsSize()) / 1000000.0); , DecimalFormat XXXXX = (DecimalFormat) DecimalFormat.getInstance(); XXXXX.setMaximumFractionDigits(1); XXXXX.setMinimumFractionDigits(1); return XXXXX.format((getExactSize()- getAnnotationsSize()) / 1000000.0); 
1," int start = s.indexOf(""--""); if (start >= 0){ int i=start; StringBuffer buf = new StringBuffer(s); while (i < s.length() && buf.charAt(i) == '-') { buf.replace(i, i+1, ""=""); i += 1; "," int start = s.indexOf(""--""); if (start >= 0){ int i=start; StringBuffer buf = new StringBuffer(s); while (i < s.length() && buf.charAt(i) == '-') { buf.replace(i, i+1, ""=""); i += 1; "
1," if (!cls.isInterface() && !getNucleusContext().getApiAdapter().isPersistable(cls)) { throw new NucleusUserException(""Cannot create FetchGroup for "" + cls + "" since it is not persistable""); "," if (!cls.isInterface() && !getNucleusContext().getApiAdapter().isPersistable(cls)) { throw new NucleusUserException(""Cannot create FetchGroup for "" + cls + "" since it is not persistable""); "
1," assertNotNull(""API key was null."", generatedApiKey); try { log.debug(""Test API key expire""); boolean status = mSvc.apikeyExpire(generatedApiKey); log.debug(""API key expire success: {"," assertNotNull(""API key was null."", generatedApiKey); try { log.debug(""Test API key expire""); boolean status = mSvc.apikeyExpire(generatedApiKey); log.debug(""API key expire success: {"
1, if (messageKey != null) { for (TodoFacade item : todoList) { if (messageKey.equals(item.getMessageKey())) { if (fieldName == null || fieldName.equals(item.getFieldName())) { return item; , if (messageKey != null) { for (TodoFacade item : todoList) { if (messageKey.equals(item.getMessageKey())) { if (fieldName == null || fieldName.equals(item.getFieldName())) { return item; 
1," switch (item.getItemId()) { case MENU_LOAD: this.startActivity(new Intent(this,GPXListActivity.class)); finish(); break; case MENU_SAVE: GPXHelper.show_save_dlg(this); return true; "," switch (item.getItemId()) { case MENU_LOAD: this.startActivity(new Intent(this,GPXListActivity.class)); finish(); break; case MENU_SAVE: GPXHelper.show_save_dlg(this); return true; "
1, if (!implementationClassField.isEnabled()) return true; Class<?> newType = implementationClassField.getType(false); return newType != null && Rule.class.isAssignableFrom(newType); , if (!implementationClassField.isEnabled()) return true; Class<?> newType = implementationClassField.getType(false); return newType != null && Rule.class.isAssignableFrom(newType); 
1, request(4); fPos += 4; int p= fPos; fBuffer[--p]= (byte) (value); value >>= 8; fBuffer[--p]= (byte) (value); value >>= 8; fBuffer[--p]= (byte) (value); value >>= 8; fBuffer[--p]= (byte) (value); , request(4); fPos += 4; int p= fPos; fBuffer[--p]= (byte) (value); value >>= 8; fBuffer[--p]= (byte) (value); value >>= 8; fBuffer[--p]= (byte) (value); value >>= 8; fBuffer[--p]= (byte) (value); 
0," double[] a = this.a; int capacity = a.length; int n = this.n; int nNew = n + c; if (nNew > capacity) { double[] aNew = newArray(capacity, nNew); System.arraycopy(a, 0, aNew, c, n); this.a = aNew; "," super(""SendBookmarkFeed"", identifier, nodeIdentifier); setField(""Name"", name); setField(""URI"", uri); setField(""Description"", description); setField(""HasActiveLink"", String.valueOf(hasActiveLink)); "
0, super.run(result); IPath statePath = Platform.getStateLocation(TestPlugin.getDefault().getBundle()); String testName = this.getName(); if (testName == null) { testName = this.getClass().getName(); , int result = apple != null ? apple.hashCode() : 0; result = 31 * result + (banana != null ? banana.hashCode() : 0); result = 31 * result + (orange != null ? orange.hashCode() : 0); return result; 
0," try { logger.info(""Scraping with "" + scraper.getClass().getName()); scraper.scrape(run); logger.info(scraper.getClass().getName() + "" has finished scraping without throwing an exception.""); ", loadDevices(); ListIterator<Device> deviceIter = getAllDevices().listIterator(); while (deviceIter.hasNext()) { Device d = deviceIter.next(); if (d.equals(device)) { deviceIter.remove(); 
1," if (aNode.getLevel() != null) { if (_level != null) { if (_level != aNode.getLevel()) { if (logger.isLoggable(Level.WARNING)) { logger.warning(""Inconsistent data in NodeCompound""); "," if (aNode.getLevel() != null) { if (_level != null) { if (_level != aNode.getLevel()) { if (logger.isLoggable(Level.WARNING)) { logger.warning(""Inconsistent data in NodeCompound""); "
1," try { ModelInputStream is = new ModelInputStream(cacheContainer.openStream(STEPS)); List<Integer> steps; try { int count = is.readInt(); if (count > 10000) { throw new IOException(""illegal data""); "," try { ModelInputStream is = new ModelInputStream(cacheContainer.openStream(STEPS)); List<Integer> steps; try { int count = is.readInt(); if (count > 10000) { throw new IOException(""illegal data""); "
1," ClassLoader classLoader = getClass().getClassLoader(); return classLoader.getResourceAsStream(""cz/cvut/earlgrey/sequencemodel/parser/antlr/internal/InternalSequencemodel.tokens""); "," ClassLoader XXXXX = getClass().getClassLoader(); return XXXXX.getResourceAsStream(""cz/cvut/earlgrey/sequencemodel/parser/antlr/internal/InternalSequencemodel.tokens""); "
1, modifiableIndex = delegateIterator.nextIndex(); Object next = delegateIterator.next(); if (next instanceof DirtyableDBObject || DBObjectUtil.needsNoConversion(next.getClass())) { return next; , modifiableIndex = delegateIterator.XXXXXIndex(); Object XXXXX = delegateIterator.XXXXX(); if (XXXXX instanceof DirtyableDBObject || DBObjectUtil.needsNoConversion(XXXXX.getClass())) { return XXXXX; 
1," return new WebArchiveBuilder() .withTestClass( BuiltinConstraintsTest.class ) .withResource( ""builtin-constraints-override.xml"" ) .withClass( InvertedNotNullValidator.class ) .build(); "," return new WebArchiveBuilder() .withTestClass( BuiltinConstraintsTest.class ) .withResource( ""builtin-constraints-override.xml"" ) .withClass( InvertedNotNullValidator.class ) .build(); "
1," if (vertexLoop.size() != 4) { throw new InvalidGeometryException(""attempted creation of triangle "" + ""from polygon with vertex loop of size "" + vertexLoop.size() + "": "" + vertexLoop); "," if (vertexLoop.size() != 4) { throw new InvalidGeometryException(""attempted creation of triangle "" + ""from polygon with vertex loop of size "" + vertexLoop.size() + "": "" + vertexLoop); "
1," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," EditorCell XXXXX = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, XXXXX, editorContext); return XXXXX; "
1," if (DBG) { log(""pickPhoneBasedOnNumber: scheme "" + scheme + "", number "" + toLogSafePhoneNumber(number) + "", sipUri "" + (primarySipUri != null ? Uri.parse(primarySipUri).toSafeString() : ""null"")); "," if (DBG) { log(""pickPhoneBasedOnNumber: scheme "" + scheme + "", number "" + toLogSafePhoneNumber(number) + "", sipUri "" + (primarySipUri != null ? Uri.parse(primarySipUri).toSafeString() : ""null"")); "
0," if ( displayText == null ) { StringBuffer strbuf = new StringBuffer( getName( ) ); strbuf.append( "" "" ); strbuf.append( classInfo.getName( ) ); displayText = strbuf.toString( ); strbuf = null; "," ISessionManagement port = null; try { URL SOAP_URL = new URL(""http: SessionManagement service = new SessionManagementLocator(); port = service.getBasicHttpBinding_ISessionManagement(SOAP_URL); "
0, String lower = name.toLowerCase(); int start = 0; for (String prefix : getPrefixes()) { if (lower.startsWith(prefix)) { if (name.length() > prefix.length()) { start = prefix.length(); , if (iterFactories == null) initializeIterators(); for (int i = 0; iterFactories[i] != null; i++) { PyObject iter = iterFactories[i].findCollection(javaProxy); if (iter != null) return iter; 
1," String property = null; if (""MIFOS_CONF"".equals(environmentPropertyName)) { property = getHomeProperty(""mifos.conf""); if (property == null) { property = getHomeProperty(""user.home"") + ""/.mifos""; "," String XXXXX = null; if (""MIFOS_CONF"".equals(environmentPropertyName)) { XXXXX = getHomeProperty(""mifos.conf""); if (XXXXX == null) { XXXXX = getHomeProperty(""user.home"") + ""/.mifos""; "
0," migrationBuilder.builder.getEntityRules().addRule( new EntityMigrationRule( migrationBuilder.fromVersion, migrationBuilder.toVersion, entityTypes, new RenameAssociation( from, to ) ) ); return this; "," GosuProgramFileImpl file = createVirtualProgramFile(referenceExpression, ""return "" + refName); PsiElement element = file.getChildren()[3].getChildren()[0].getFirstChild(); return element; "
0," CueSheetSerializer.logger.entering (CueSheetSerializer.class.getCanonicalName() , ""addField(StringBuilder,String,String,Position)"" , new Object[]{cueBuilder, command, indentation, value"," Filter oldFilter = filter; filter = newFilter; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, WfsPackage.DELETE_ELEMENT_TYPE__FILTER, oldFilter, filter)); "
1, super(delegate); this.taxonFactory = taxonFactory; this.taxonParser = taxonParser; this.sciNameKey = sciNameKey; this.commonNameKey = commonNameKey; this.ncbiTaxonKey = ncbiTaxonKey; , super(delegate); this.taxonFactory = taxonFactory; this.taxonParser = taxonParser; this.sciNameKey = sciNameKey; this.commonNameKey = commonNameKey; this.ncbiTaxonKey = ncbiTaxonKey; 
0," ActionBar ac = getActivity().getActionBar(); ac.show(); FragmentManager fm = getFragmentManager(); fm.popBackStack(Main.getBackStackid(), FragmentManager.POP_BACK_STACK_INCLUSIVE); "," final MockMaker maker = new MockMaker(new MockMarketFactory()); final MarketInstrument inst; inst = service.lookup(newText(""2"")); final MarketInstrument[] insts = new MarketInstrument[] { inst "
0," lombok.ast.Break brk = new lombok.ast.Break(); if (node.label != null) brk.astLabel(toIdentifier(node.label, node.sourceStart, node.sourceEnd)); set(node, setPosition(node, brk)); "," List to_cancel; synchronized( initiators ){ LinkedList requests = (LinkedList)initiators.remove( initiator ); if ( requests == null ){ Debug.out( ""initiator not present"" ); return; "
1," String label = ((NonListType) object).getName(); return label == null || label.length() == 0 ? getString(""_UI_NonListType_type"") : getString(""_UI_NonListType_type"") + "" "" + label; "," String label = ((NonListType) object).getName(); return label == null || label.length() == 0 ? getString(""_UI_NonListType_type"") : getString(""_UI_NonListType_type"") + "" "" + label; "
0," String description = getCommandDescription(commandName); JCommander jc = findCommandByAlias(commandName); if (description != null) { out.append(indent).append(description); out.append(""\n""); "," LinkType type = new LinkType(); OutputTypeEnum pluginType = new OutputTypeEnum(); pluginType.setValue(""plugin""); type.setOutputType(pluginType); assertTrue(type.isPluginModule()); "
0, this.panelComponent = new FileChooserPanel(); this.panelComponent.addPropertyChangeListener(new PropertyEvents()); setPanelIdentifier(IDENTIFIER); setPanelComponent(this.panelComponent); ," Logger.info(""BEGIN JOB JobMajUserRegisteredTicketing for member with id %d"", idMember); Member member = Member.findById(idMember); if (member != null) { WeezEvent.updateRegisteredAttendee(member); "
1, this.hasHeader = hasHeader; KNOWN_FORMATS = new DateTimeFormatter[DATE_FORMATS.length]; for (int i = 0; i < DATE_FORMATS.length; i++) { KNOWN_FORMATS[i] = DateTimeFormat.forPattern(DATE_FORMATS[i]); , thXXXXXs.hasHeader = hasHeader; KNOWN_FORMATS = new DateTXXXXXmeFormatter[DATE_FORMATS.length]; for (XXXXXnt XXXXX = 0; XXXXX < DATE_FORMATS.length; XXXXX++) { KNOWN_FORMATS[XXXXX] = DateTXXXXXmeFormat.forPattern(DATE_FORMATS[XXXXX]); 
1," if (qname != null) { if (struct.getName() != null) { throw new IllegalStateException(""Internal error - trying to overwrite name '"" + struct.getName() + ""' with '"" + qname.getName() + '\''); "," if (qname != null) { if (struct.getName() != null) { throw new IllegalStateException(""Internal error - trying to overwrite name '"" + struct.getName() + ""' with '"" + qname.getName() + '\''); "
0, XmlTest test = new XmlTest(suite); test.setName(packageName); XmlPackage xmlPackage = new XmlPackage(); xmlPackage.setName(packageName); test.setXmlPackages(Collections.singletonList(xmlPackage)); ," Set<Class<?>> c10nInterfaces = s.find(""c10n.tools.search.test1"", C10NMessages.class); assertThat(c10nInterfaces, is(set(Window.class, Buttons.class, Labels.class, Labels1.class, Labels2.class))); "
1," dynamic.setTimeout(delay); final String dynamicGroup = dynamic.getDynamicGroup(); TimerTask cleanup = new TimerTask() { @Override public void run() { removeGroup(dynamicGroup, true); "," dynamic.setTimeout(delay); final String XXXXX = dynamic.getDynamicGroup(); TimerTask XXXXX = new TimerTask() { @Override public void run() { removeGroup(XXXXX, true); "
1, for(VControl child : panel.getChildren()) { if(!child.hasStyle(SWT.NO_FOCUS)) { if(child instanceof VPanel) { VControl newFocus = getNewFocus((VPanel) child); if(newFocus != null) { return newFocus; , for(VControl child : panel.getChildren()) { if(!child.hasStyle(SWT.NO_FOCUS)) { if(child instanceof VPanel) { VControl newFocus = getNewFocus((VPanel) child); if(newFocus != null) { return newFocus; 
1," String installURL = FrameworkProperties.getProperty(""osgi.install.area""); if (installURL == null) return null; if (!installURL.startsWith(""file:"")) return null; return installURL.substring(5); "," String XXXXX = FrameworkProperties.getProperty(""osgi.install.area""); if (XXXXX == null) return null; if (!XXXXX.startsWith(""file:"")) return null; return XXXXX.substring(5); "
0, assertThat(activity.viewArgument).isNull(); activity.findViewById(R.id.buttonWithViewArgument).performClick(); assertThat(activity.viewArgument).hasId(R.id.buttonWithViewArgument); , IWorkbenchPage page= window.getActivePage(); try { RemoteCHViewPart result= (RemoteCHViewPart)page.showView(UIPlugin.CALL_HIERARCHY_VIEW_ID); result.setInput(input); return result; 
1, final Runnable doSetGroup = new Runnable() { public void run() { try { GroupModel model = (GroupModel)groupTable.getModel(); ((DiscoveryGroupManagement)dMgr).setGroups( model.getSelectedGroups()); , final Runnable XXXXX = new Runnable() { public void run() { try { GroupModel XXXXX = (GroupModel)groupTable.getModel(); ((DiscoveryGroupManagement)dMgr).setGroups( XXXXX.getSelectedGroups()); 
1," if (someObj instanceof InformationDelegator) { if (DEBUG) Debug.output(""DrawingTool: found InformationDelegator""); if (dtmm != null) { dtmm.setInfoDelegator((InformationDelegator) someObj); "," if (someObj instanceof InformationDelegator) { if (DEBUG) Debug.output(""DrawingTool: found InformationDelegator""); if (dtmm != null) { dtmm.setInfoDelegator((InformationDelegator) someObj); "
0, if (e instanceof MavenPsiElementWrapper) e = ((MavenPsiElementWrapper)e).getWrappee(); if (!MavenDomUtil.isMavenFile(e)) return null; if (e instanceof PsiFile) return null; return e; ," Abdera abdera = new Abdera(); Link link = abdera.getFactory().newLink(); link.setHref(href.toString()); link.setRel(""edit-media""); link.setMimeType(mediaType); this.entry.addLink(link); "
0," if (g == null) throw new NullPointerException(); if (offscreenBuffer == null){ offscreenBuffer = createImage(this.getWidth(), this.getHeight()); offscreenGraphics = offscreenBuffer.getGraphics(); "," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; "
0," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," int maxNameLength = 0; int maxArgsLength = 0; for (Command cmd : commands) { maxNameLength = Math.max(maxNameLength, cmd.name.length()); maxArgsLength = Math.max(maxArgsLength, cmd.args.length()); "
0," Result testResult= getTestResult(false); if (testResult == Result.ERROR || testResult == Result.FAILURE) { return new FailureTrace( testCase.getErrorStackTrace(), testCase.getErrorDetails(), null ); ", MoSyncProject current = MosyncUIPlugin.getDefault().getCurrentlySelectedProject(PlatformUI.getWorkbench().getActiveWorkbenchWindow()); if (current == null) { return MoSyncTool.DEFAULT_PROFILE_TYPE; 
0, float dx1 = end.getX() - start.getX(); float dy1 = end.getY() - start.getY(); float dx2 = -dy1; float dy2 = dx1; float denom = (dy2 * dx1) - (dx2 * dy1); if (denom == 0) { return Color.black; , IStructuredSelection selection = (IStructuredSelection)featureViewer.getSelection(); feature = selection.isEmpty() ? null : (EReference)selection.getFirstElement(); dialogChanged(); 
1," StringBuilder sb = new StringBuilder(); sb.append(""{""); if (options != null) sb.append(""Options: "" + options + "", ""); if (status != null) sb.append(""Status: "" + status + "", ""); sb.append("""," StringBuilder XXXXX = new StringBuilder(); XXXXX.append(""{""); if (options != null) XXXXX.append(""Options: "" + options + "", ""); if (status != null) XXXXX.append(""Status: "" + status + "", ""); XXXXX.append("""
1," if(eco.eco != null) { if(event.getPlugin().getDescription().getName().equals(""MineConomy"")) { eco.eco = null; plugin.getLogger().log(Level.INFO, ""Succesfully unhooked into MineConomy!""); "," if(eco.eco != null) { if(event.getPlugin().getDescription().getName().equals(""MineConomy"")) { eco.eco = null; plugin.getLogger().log(Level.INFO, ""Succesfully unhooked into MineConomy!""); "
1, StringBuilder buffer = new StringBuilder(); for (LoggerData loggerData : loggerDataValues.keySet()) { String value = loggerDataValues.get(loggerData); buffer.append(delimiter).append(value); , StringBuilder XXXXX = new StringBuilder(); for (LoggerData loggerData : loggerDataValues.keySet()) { String XXXXX = loggerDataValues.get(loggerData); XXXXX.append(delimiter).append(XXXXX); 
1, if (FortSiegeManager.getInstance().getFlagList(getFort().getFortId()) == null) return; for (CombatFlag cf : FortSiegeManager.getInstance().getFlagList(getFort().getFortId())) cf.unSpawnMe(); , if (FortSiegeManager.getInstance().getFlagList(getFort().getFortId()) == null) return; for (CombatFlag cf : FortSiegeManager.getInstance().getFlagList(getFort().getFortId())) cf.unSpawnMe(); 
0," String rdfString = new String(""(""); RDFList list = rdfList; while (list != null && list.getFirst() != null) { rdfString = rdfString + list.getFirst() + "" ,""; list = list.getRest(); "," this(pBitmapTextureAtlasSource, pBitmapTextureAtlasSourceDecoratorShape, pColorKeyColor.getARGBPackedInt(), pColorSwapColor.getARGBPackedInt(), pTextureAtlasSourceDecoratorOptions); "
1," Object oldFilter = filter; filter = newFilter; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, WfsvPackage.DIFFERENCE_QUERY_TYPE__FILTER, oldFilter, filter)); "," Object XXXXX = filter; filter = newFilter; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, WfsvPackage.DIFFERENCE_QUERY_TYPE__FILTER, XXXXX, filter)); "
0," this.routeHeaderVO = routeHeaderVO; Document.Builder builder = Document.Builder.create(routeHeaderVO); builder.setApplicationDocumentId(""setByEmailComp""); this.routeHeaderVO = builder.build(); "," Tile t; t = putTile(new Position(0,0), Rotation.R0, Expansion.BASIC, ""RCr""); putTile(new Position(0,-1), Rotation.R0, Expansion.INNS_AND_CATHEDRALS, ""CCCC""); assertScore(4, t, Location.N); "
0," return new EventBuilder(""uei.opennms.org/vendor/Juniper/traps/mplsLspPathUp"", ""Drools"") .setNodeid(nodeid) .setInterface( addr( ipaddr ) ) .addParam(""mplsLspName"", lspname ) .getEvent(); ", PropertyDescriptor desc = parent.getDescriptor(name); if(desc == null){ for(PropertyDescriptor d : parent.getDescriptors()){ if(d.getName().getLocalPart().equalsIgnoreCase(name)){ desc = d; break; 
0," String contents = ""This is the initial file contents for *.coffee file that should be word-sorted in the Preview page of the multi-page editor""; return new ByteArrayInputStream(contents.getBytes()); "," BitSet propane = fingerprinter.getFingerprint(Molecules.createPropane()); BitSet hexane = fingerprinter.getFingerprint(Molecules.createHexane()); assertTrue(match(propane, hexane)); "
0, assert panel != null; assert resourceSetsToDragAvatars.containsKey(resources); ResourceSetAvatar avatar = resourceSetsToDragAvatars.remove(resources); panel.remove(avatar); avatar.dispose(); ," final GreeterEntity greeter = em.find(GreeterEntity.class, name); String response; if (greeter == null) { response = ""Hello "" + name; log.info(response); em.persist(new GreeterEntity(name)); "
0, assertTrue(conversation.isTransient()); assertFalse(interceptedBean.isConversationLongRunningDuringInvocation6()); try { interceptedBean.begin(); interceptedBean.endAndThrowPermittedException(); , if (this == obj) return true; if (obj == null) return false; if (getClass() != obj.getClass()) return false; Casino other = (Casino) obj; if (name == null) { if (other.name != null) return false; 
1," StringBuilder sb = new StringBuilder(); sb.append(""{""); if (marker != null) sb.append(""Marker: "" + marker + "", ""); if (maxItems != null) sb.append(""MaxItems: "" + maxItems + "", ""); sb.append("""," StringBuilder XXXXX = new StringBuilder(); XXXXX.append(""{""); if (marker != null) XXXXX.append(""Marker: "" + marker + "", ""); if (maxItems != null) XXXXX.append(""MaxItems: "" + maxItems + "", ""); XXXXX.append("""
1," if( layoutArea == null ) { layoutArea = new Composite( parent, SWT.NONE ); layoutArea.setLayout( ExampleUtil.createFillLayout( false ) ); layoutArea.setLayoutData( ExampleUtil.createFillData() ); "," if( layoutArea == null ) { layoutArea = new Composite( parent, SWT.NONE ); layoutArea.setLayout( ExampleUtil.createFillLayout( false ) ); layoutArea.setLayoutData( ExampleUtil.createFillData() ); "
1, int result = zoomDetector.detectZoom(event); switch(result){ case PinchZoomDetector.ZOOMING_IN: fontSizePlus(); break; case PinchZoomDetector.ZOOMING_OUT: fontSizeMinus(); break; , int XXXXX = zoomDetector.detectZoom(event); switch(XXXXX){ case PinchZoomDetector.ZOOMING_IN: fontSizePlus(); break; case PinchZoomDetector.ZOOMING_OUT: fontSizeMinus(); break; 
0," Identifier relId = id.CreateIdWME(connectingString); relId.CreateStringWME(""word"", preposition); object1.translateToSoarSpeak(relId, ""object1""); object2.translateToSoarSpeak(relId, ""object2""); ", long umsatz = getUmsatzAsLong(); BigDecimal prozent = new BigDecimal(umsatz).divide(new BigDecimal(100)); long gewinn = Math.round(prozent.doubleValue() * 20); return formatUmsatz(gewinn); 
1," tabbedPane = new JBTabbedPane(); for (Configurable configurable : configurables) { JComponent component = configurable.createComponent(); tabbedPane.add(configurable.getDisplayName(), component); "," tabbedPane = new JBTabbedPane(); for (Configurable configurable : configurables) { JComponent XXXXX = configurable.createComponent(); tabbedPane.add(configurable.getDisplayName(), XXXXX); "
0, EntityCacheUtil.removeCache(UserNotificationEventImpl.class.getName()); FinderCacheUtil.removeCache(FINDER_CLASS_NAME_ENTITY); FinderCacheUtil.removeCache(FINDER_CLASS_NAME_LIST); ," GL2ES1 gl = drawable.getGL().getGL2ES1(); gl.glMatrixMode(GL2ES1.GL_PROJECTION); gl.glLoadIdentity(); glu.gluOrtho2D(0, 1, 0, 1); gl.glMatrixMode(GL2ES1.GL_MODELVIEW); gl.glLoadIdentity(); "
1," Set<String> ids = DateTimeZone.getAvailableIDs(); this.timeZones.add( DateTimeZone.UTC ); for ( final String id : ids ) { if ( !id.equals( ""UTC"" ) ) { this.timeZones.add( DateTimeZone.forID( id ) ); "," Set<String> ids = DateTimeZone.getAvailableIDs(); this.timeZones.add( DateTimeZone.UTC ); for ( final String id : ids ) { if ( !id.equals( ""UTC"" ) ) { this.timeZones.add( DateTimeZone.forID( id ) ); "
0, final int prime = 31; int result = 1; result = prime * result + ((jars == null) ? 0 : jars.hashCode()); result = prime * result + ((port == null) ? 0 : port.hashCode()); return result; ," if (blobStore != null && !Strings.isNullOrEmpty(container) && !blobStore.containerExists(container)) { blobStore.createContainerInLocation(getLocationById(blobStore, locationId), container); "
1," super(""Insect"", ""1/1 green Insect creature token""); cardType.add(CardType.CREATURE); color = ObjectColor.GREEN; subtype.add(""Insect""); power = new MageInt(1); toughness = new MageInt(1); "," super(""Insect"", ""1/1 green Insect creature token""); cardType.add(CardType.CREATURE); color = ObjectColor.GREEN; subtype.add(""Insect""); power = new MageInt(1); toughness = new MageInt(1); "
0, boolean hasNext = false; try { hasNext = currentResultSet.next(); while (!hasNext){ boolean hasTable = nextTable(); if (!hasTable) return false; else { hasNext = currentResultSet.next(); ," StatusType type; StatusValue mod = getStatus(mLevel, StatusType.Accuracy); Equipment eq = mEquipment.getEquipment(EquipmentSet.MAINWEAPON); if (eq != null) { type = eq.getWeaponType(); "
0," Connection conn = null; try { conn = this.getConnection(); conn.setAutoCommit(false); this.deleteUserConfigRecord(username, conn); this.addUserConfigRecord(username, config, conn); conn.commit(); ", return (dso.getType()==Constants.SITE || dso.getType()==Constants.COMMUNITY || dso.getType()==Constants.COLLECTION || dso.getType()==Constants.ITEM || dso.getType()==Constants.BITSTREAM); 
0," Intent intent = getIntent(); overridePendingTransition(0, 0); intent.addFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION); finish(); overridePendingTransition(0, 0); startActivity(intent); "," this.request = (HttpServletRequest) pageContext.getRequest(); this.weblisketSession = new WeblisketSession(hashMap, pageContext); this.portion = new Portion(hashMap); this.getAddressForm(); "
0," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," checkNameSafety(varName); if (col) { PropertyAccessor.set(factory.getVariableResolver(varName).getValue(), factory, index, ctx = MVEL.eval(expr, start, offset, ctx, factory), pCtx); "
0," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," new CouponInflationZeroCouponMonthlyDefinition(CUR, PAYMENT_DATE, START_DATE, PAYMENT_DATE, 1.0, NOTIONAL, PRICE_INDEX, MONTH_LAG, REFERENCE_START_DATE, INDEX_APRIL_2008, null, FIXING_DATE, false); "
0," System.out.println(""Adding ShellSideBar with Icon : "" + icon); GSidebarButton b = new GSidebarButton(icon, c, this, label); if (label.equals(""shell"")) add(b,1); else add(b); validate(); "," BasicLabelRect lr = new BasicLabelRect(str, font, context); Point pnt = geom.getCentroid(); lr.setAnchor(new Point2D.Double(pnt.getCoordinate().x, pnt.getCoordinate().y)); return lr; "
1," StringBuilder sb = new StringBuilder(); sb.append(""tid : "").append(tid) .append(""\n"") .append(""detected_tid: "").append(detected_tid) .append(""\n"") .trimToSize(); return sb.toString(); "," StringBuilder sb = new StringBuilder(); sb.append(""tid : "").append(tid) .append(""\n"") .append(""detected_tid: "").append(detected_tid) .append(""\n"") .trimToSize(); return sb.toString(); "
1, int[] selectedIndices = myList.getSelectedIndices(); return selectedIndices.length == 1 && selectedIndices[0] == 0 && myModel.getElementAt(selectedIndices[0]) instanceof TopLevelNode; , int[] selectedIndices = myList.getSelectedIndices(); return selectedIndices.length == 1 && selectedIndices[0] == 0 && myModel.getElementAt(selectedIndices[0]) instanceof TopLevelNode; 
0, Object[] listeners = fChangedListners.getListeners(); for (int i = 0; i < listeners.length; i++) { ((IToggleBreakpointsTargetManagerListener)listeners[i]).preferredTargetsChanged(); , mModified = mModified || (mAtmaset.getAbyssiteOfFurtherance() != n); mStatusCacheValid = (mAtmaset.getAbyssiteOfFurtherance() == n) && mStatusCacheValid; mAtmaset.setAbyssiteOfFurtherance(n); 
1," return getResourceFactory() .getApiResource(""/app/"" + appId + ""/install"") .entity(new ApplicationInstall(spaceId), MediaType.APPLICATION_JSON_TYPE) .post(ApplicationCreateResponse.class).getId(); "," return getResourceFactory() .getApiResource(""/app/"" + appId + ""/install"") .entity(new ApplicationInstall(spaceId), MediaType.APPLICATION_JSON_TYPE) .post(ApplicationCreateResponse.class).getId(); "
0," Validator validator = null; boolean includeFiles = true; String scheme = cmd.getOptionValue(""s""); if (scheme.equalsIgnoreCase(""zoomify"")) { validator = new ZoomifyValidator(); includeFiles = false; "," if (method != null) { final String methodName = method.getName() + ""-"" + index; if (METHOD_PARAMETER_DESCRIPTIONS.containsKey(methodName)) { return METHOD_PARAMETER_DESCRIPTIONS.get(methodName); "
1, if(e.getSource() == splitPane) { String changeName = e.getPropertyName(); if(changeName == JSplitPane.ORIENTATION_PROPERTY) { orientation = splitPane.getOrientation(); resetLayoutManager(); , if(e.getSource() == splitPane) { String XXXXX = e.getPropertyName(); if(XXXXX == JSplitPane.ORIENTATION_PROPERTY) { orientation = splitPane.getOrientation(); resetLayoutManager(); 
1," if ((value != null || charArray != null) && isBinary) { String text = getTextFromProperPlace(); return org.apache.axiom.attachments.utils.DataHandlerUtils .getDataHandlerFromText(text, mimeType); "," if ((value != null || charArray != null) && isBinary) { String XXXXX = getTextFromProperPlace(); return org.apache.axiom.attachments.utils.DataHandlerUtils .getDataHandlerFromText(XXXXX, mimeType); "
1, while(true) { upto++; if (upto < ramTerm.docs.size()) { current = ramTerm.docs.get(upto); if (liveDocs == null || liveDocs.get(current.docID)) { posUpto = 0; return current.docID; , while(true) { upto++; if (upto < ramTerm.docs.size()) { current = ramTerm.docs.get(upto); if (liveDocs == null || liveDocs.get(current.docID)) { posUpto = 0; return current.docID; 
0," if (KeyStrokes.matches(e,KeyStrokes.COPY)) { ActionRouter actionRouter = ActionRouter.getInstance(); actionRouter.doActionNow(new ActionEvent(e.getSource(), e.getID(), ActionNames.COPY)); ", int min = 1; int start = gr.getStart(); int end = gr.getEnd(); int extendedStart = start - extension; int extendedEnd = end + extension; if (extendedStart < min) { gr.setExtendedStart(min); 
1," try { if (realTargetUrl.length() > targetUrl.length()) { if (realTargetUrl.startsWith(targetUrl)) { return myCurrentBranch.appendPath(realTargetUrl.substring(targetUrl.length()), true); "," try { if (realTargetUrl.length() > targetUrl.length()) { if (realTargetUrl.startsWith(targetUrl)) { return myCurrentBranch.appendPath(realTargetUrl.substring(targetUrl.length()), true); "
1," TemplateOptions options = new CloudStackTemplateOptions().networkIds(ImmutableSet.of(""3"")); assertEquals(options.as(CloudStackTemplateOptions.class).getNetworkIds(), ImmutableSet.of(""3"")); "," TemplateOptions XXXXX = new CloudStackTemplateOptions().networkIds(ImmutableSet.of(""3"")); assertEquals(XXXXX.as(CloudStackTemplateOptions.class).getNetworkIds(), ImmutableSet.of(""3"")); "
1, this.offset = offset; this.baseOffset = baseOffset; int size = handlers.length; if (catchAllHandlerAddress > -1) { size *= -1; offset += Leb128Utils.unsignedLeb128Size(catchAllHandlerAddress); , this.offset = offset; this.baseOffset = baseOffset; int XXXXX = handlers.length; if (catchAllHandlerAddress > -1) { XXXXX *= -1; offset += Leb128Utils.unsignedLeb128Size(catchAllHandlerAddress); 
0, switch (featureID) { case ProcessPackage.VARIABLES_TYPE__GROUP: return group != null && !group.isEmpty(); case ProcessPackage.VARIABLES_TYPE__VARIABLE: return !getVariable().isEmpty(); ," if (this.ignoredItemMessageBuffer != null && this.ignoredItemMessageBuffer.length() > 0) { return ""Missing Concept in Ontology Cell : \n"" + this.ignoredItemMessageBuffer.toString(); "
1, for ( Iterator iter = this.children.iterator( ); iter.hasNext( ); ) { FragmentResourceEntry entry = (FragmentResourceEntry) iter.next( ); if ( entry.getName( ).equals( name ) ) return entry; , for ( Iterator XXXXX = this.children.XXXXXator( ); XXXXX.hasNext( ); ) { FragmentResourceEntry XXXXX = (FragmentResourceEntry) XXXXX.next( ); if ( XXXXX.getName( ).equals( name ) ) return XXXXX; 
1," monitor.beginTask("""", progressSize); for (int count = 0; count < progressSize; count++) { SubProgressMonitor mon = new SubProgressMonitor(monitor, 1); mon.beginTask("""", 100); mon.done(); "," monitor.beginTask("""", progressSize); for (int count = 0; count < progressSize; count++) { SubProgressMonitor mon = new SubProgressMonitor(monitor, 1); mon.beginTask("""", 100); mon.done(); "
1, Presentation presentation = event.getPresentation(); Project project = PlatformDataKeys.PROJECT.getData(event.getDataContext()); if (project == null) { presentation.setEnabled(false); return; , Presentation XXXXX = event.getPresentation(); Project XXXXX = PlatformDataKeys.PROJECT.getData(event.getDataContext()); if (XXXXX == null) { XXXXX.setEnabled(false); return; 
0," mLog = log; TextView tv = (TextView) findViewById(R.id.log_meal_name); tv.setText(mLog.getMealName()); tv = (TextView) findViewById(R.id.log_calories); tv.setText(mLog.getCalorieCount() + """"); ", editor.setInputText(currentName); Object retVal = DialogDisplayer.getDefault().notify(editor); return (retVal == NotifyDescriptor.OK_OPTION) ? editor.getInputText() : currentName; 
0," AppInfo app = (AppInfo)v.getTag(); RemoveDialogFragment removeDialog = RemoveDialogFragment.newInstance( app.getTitle(), app.getRowId() ); removeDialog.show(getFragmentManager(), ""removeDialog""); ", Node node; Element child; NodeList ns = alternativesElement.getChildNodes(); for (int i = 0; i < ns.getLength(); i++) { node = ns.item(i); if (!(node instanceof Element)) { continue; 
0, boolean matched = true; if ((this.nameRealm != null) && (pname.nameRealm != null)) { if (!(this.nameRealm.toString().equalsIgnoreCase(pname.nameRealm.toString()))) { matched = false; ," assertEquals(2, validCriterion.getConfiguredValues().size()); assertTrue(validCriterion.getConfiguredValues().contains(""a"")); assertTrue(validCriterion.getConfiguredValues().contains(""b"")); "
0," lazyInitialize(); return new ChainedPreferenceStore(new IPreferenceStore[] { getWritablePreferenceStore(), PPDSLActivator.getDefault().getPreferenceStore(), EditorsUI.getPreferenceStore() ", MutableAttributeType modifiedAttributeType = getModifiedAttributeType(); if ( usageCombo.getSelectionIndex() == 0 ) { modifiedAttributeType.setUsage( UsageEnum.DIRECTORY_OPERATION ); 
0," tag = HTML.Tag.LI; assertEquals(""li"", tag.toString()); assertTrue(""breaks Flow"", tag.breaksFlow()); assertTrue(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); "," final int turnerID = Config.getOrCreateIntProperty( ""logturner.id"", Configuration.CATEGORY_ITEM, 7858); BunyanItem.logTurner = new LogTurner(turnerID) .setItemName(""log.turner""); "
0," super(change, templateService); this.subjectService = subjectService; oldRepetitionCount = Integer.parseInt(change.getOldValue()); newRepetitionCount = Integer.parseInt(change.getNewValue()); "," Map<String, Object> ctx = new HashMap<String, Object>(); List<String> phases = extractPhasesInLifecycle(plan); ctx.put(""plan"", plan); ctx.put(""phases"", phases.isEmpty() ? new String[]{"
1, int in; Slot slot; for (Enumeration<Slot> en = this.slots.elements(); en.hasMoreElements();) { slot = en.nextElement(); in = slot.getIndex(); if (in > index) slot.setIndex(in - 1); , int in; Slot slot; for (Enumeration<Slot> en = this.slots.elements(); en.hasMoreElements();) { slot = en.nextElement(); in = slot.getIndex(); if (in > index) slot.setIndex(in - 1); 
0, getterCalled(); Set additions = new HashSet(); Iterator it = c.iterator(); while (it.hasNext()) { Object element = it.next(); if (wrappedSet.add(element)) { additions.add(element); ," if (tournament != null) { this.tournaments.put(name, tournament); this.tournamentTypes.put(name, tournamentType); this.tournamentTypeViews.add(new TournamentTypeView(tournamentType)); "
1," try { for (GitRemote remote : GitRemote.list(project, project.getBaseDir())) { if (remote.pushUrl().matches(pattern) || remote.name().matches(pattern)) return new OldGitRemoteInfo(remote); "," try { for (GitRemote remote : GitRemote.list(project, project.getBaseDir())) { if (remote.pushUrl().matches(pattern) || remote.name().matches(pattern)) return new OldGitRemoteInfo(remote); "
1," int old = this.eoEntityCount; this.eoEntityCount = eoEntityCount; if (old != eoEntityCount) { setChanged(); notifyObservers(new StatModification(""eoEntityCount"", old, eoEntityCount)); "," int XXXXX = this.eoEntityCount; this.eoEntityCount = eoEntityCount; if (XXXXX != eoEntityCount) { setChanged(); notifyObservers(new StatModification(""eoEntityCount"", XXXXX, eoEntityCount)); "
1," return new BatchCall(""Load tabular data"") { public void doCall() throws Exception { OmeroMetadataService os = context.getMetadataService(); result = os.loadTabularData(ctx, parameters, userID); "," return new BatchCall(""Load tabular data"") { public void doCall() throws Exception { OmeroMetadataService os = context.getMetadataService(); result = os.loadTabularData(ctx, parameters, userID); "
0, final String correctedRevision; if (FileStatus.DELETED.equals(status)) { final int idx = revision.indexOf('-'); correctedRevision = (idx != -1) ? revision.substring(idx + 1) : revision; ," DefaultExternalModuleDependency dependency = createModuleDependency(); DefaultExternalModuleDependency copiedDependency = dependency.copy(); assertDeepCopy(dependency, copiedDependency); "
0," return (ObserverParameter) session.createCriteria(ObserverParameter.class).add(Restrictions.eq(""observer"", observer)).addOrder(Order.desc(""updated"")).setMaxResults(1).uniqueResult(); "," super(pX, pY, new IEntityFactory<Sprite>() { @Override public Sprite create(final float pX, final float pY) { return new Sprite(pX, pY, pTextureRegion, pVertexBufferObjectManager); "
0, if( selection.isEmpty()) return; Iterator<?> it = selection.iterator(); while( it.hasNext()) { Object o = it.next(); if( o instanceof IProject ) this.selectedProjects.add(((IProject) o).getName()); , Session session = new Session(); session.setUuid(uuid); session.setStarted(new Timestamp(System.currentTimeMillis())); session.setTimeToIdle(0L); session.setTimeToLive(0L); return session; 
0," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; ", armed = true; OpennetManager om = node.getOpennet(); if(om != null) { if(om.waitingForUpdater()) { synchronized(this) { if(gotJarTime > 0) gotJarTime = System.currentTimeMillis(); 
1," super(EmptyKeyRelaxedTrustSSLContext.ALGORITHM + ""Provider"", 1.0, null); put( ""SSLContext."" + EmptyKeyRelaxedTrustSSLContext.ALGORITHM, EmptyKeyRelaxedTrustSSLContext.class.getName() ); "," super(EmptyKeyRelaxedTrustSSLContext.ALGORITHM + ""Provider"", 1.0, null); put( ""SSLContext."" + EmptyKeyRelaxedTrustSSLContext.ALGORITHM, EmptyKeyRelaxedTrustSSLContext.class.getName() ); "
0," super.onCreate(savedInstanceState); Intent intent = new Intent(SCAN_ACTION); intent.putExtra(""SCAN_MODE"", ""QR_CODE_MODE""); IntentLauncher.launch(this, intent, SCAN_APP, ""Barcode Scanner""); "," SimpleTraitView traitView = new SimpleTraitView(intValueDisplayFactory, label, value, maxValue, new CC().alignX(""left"")); traitView.addComponents(spiritAttributePanel); return traitView; "
0," List<Object> entitiesToPersist = new ArrayList<Object>(); categoryGenerator.addAuxiliaryEntitiesToPersist(category, entitiesToPersist); persistAll(ds(), entitiesToPersist, category); "," JSONObject json = new JSONObject(); try { json.put(""SeatID"", SeatID); json.put(""UserID"", UserID); json.put(""StartTime"", StartTime); json.put(""EndTime"", EndTime); json.put(""DoubleSeat"", DoubleSeat); "
0, if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; BitmapKey key = (BitmapKey) o; return height == key.height && index == key.index && width == key.width; ," System.out.println(""usage: ccngetmeta "" + extraArgs + ""[-v (verbose)] [-unversioned] [-timeout millis] [-as pathToKeystore] [-ac (access control)] <ccnname> <metaname> <filename>""); System.exit(1); "
1," DebuggerInvocationUtil.invokeLater(getProject(), new Runnable() { public void run() { if (!myProgressWindow.isCanceled() && myProgressWindow.isRunning()) { myProgressWindow.setTitle(text); "," DebuggerInvocationUtil.invokeLater(getProject(), new Runnable() { public void run() { if (!myProgressWindow.isCanceled() && myProgressWindow.isRunning()) { myProgressWindow.setTitle(text); "
1," UIComponent component = context.getApplication(). createComponent(RepoConstants.ALFRESCO_FACES_AJAX_TAG_PICKER); FacesHelper.setupComponentId(context, component, id); return component; "," UIComponent XXXXX = context.getApplication(). createComponent(RepoConstants.ALFRESCO_FACES_AJAX_TAG_PICKER); FacesHelper.setupComponentId(context, XXXXX, id); return XXXXX; "
1," NodeList nodes = xpathEvalNodes(""sub"", node); if (nodes != null) { for (int i = 0; i < nodes.getLength(); i++) { Node innerNode = nodes.item(i); subTopics.add(new SimpleTopic(bookName, innerNode)); "," NodeLXXXXXst XXXXX = xpathEvalNodes(""sub"", node); XXXXXf (XXXXX != null) { for (XXXXXnt XXXXX = 0; XXXXX < XXXXX.getLength(); XXXXX++) { Node XXXXXnnerNode = XXXXX.XXXXXtem(XXXXX); subTopXXXXXcs.add(new SXXXXXmpleTopXXXXXc(bookName, XXXXXnnerNode)); "
0," Point pt = event.getPoint(); if(getTextPane().hasFocus()) { Point absolutePoint = SwingUtilities.convertPoint(getTextPane(), pt, getJavaContainer()); editorTips.display(pt, absolutePoint); "," return findUnique(""from OnmsMonitoredService as svc "" + ""where svc.ipInterface.node.id = ? and svc.ipInterface.isSnmpPrimary= ? and svc.serviceType.name = ?"", nodeId, PrimaryType.PRIMARY, svcName); "
0," StringBuffer sb = new StringBuffer(); sb.append(super.getAttributesAsString()); sb.append(String.format(""connectionLimitId=%s"",vorn(getConnectionLimitId()))); return sb.toString(); ", return ((((int)_data[_offset++]) << 24) & 0xFF000000) | ((((int)_data[_offset++]) << 16) & 0xFF0000) | ((((int)_data[_offset++]) << 8) & 0xFF00) | (((int)_data[_offset++]) & 0xFF); 
0," this.routeHeaderVO = routeHeaderVO; Document.Builder builder = Document.Builder.create(routeHeaderVO); builder.setApplicationDocumentId(""setByEmailComp""); this.routeHeaderVO = builder.build(); "," Joiner onChar = Joiner.on('-'); checkNoOutput(onChar, ITERABLE_); checkResult(onChar, ITERABLE_1, ""1""); checkResult(onChar, ITERABLE_12, ""1-2""); checkResult(onChar, ITERABLE_123, ""1-2-3""); "
1," multipleEvaluators.clear(); for (AbstractComponent component : getManifestedComponent().getComponents()) { addMultisOneLevel(component); addMultis(multipleEvaluators, component); "," multipleEvaluators.clear(); for (AbstractComponent component : getManifestedComponent().getComponents()) { addMultisOneLevel(component); addMultis(multipleEvaluators, component); "
1," ILaunchConfiguration config = findLaunchConfiguration(declarationToRun, fileToRun, getConfigurationType()); if (config == null) { config = createConfiguration(declarationToRun, fileToRun); "," ILaunchConfiguration config = findLaunchConfiguration(declarationToRun, fileToRun, getConfigurationType()); if (config == null) { config = createConfiguration(declarationToRun, fileToRun); "
1," try { Thread.sleep(2000); byte[] recv = new byte[32*1024]; int len=0; while (len>=0) { totalB.addAndGet(len); len=socket.getInputStream().read(recv,0,recv.length); Thread.sleep(10); "," try { Thread.sleep(2000); byte[] recv = new byte[32*1024]; int len=0; while (len>=0) { totalB.addAndGet(len); len=socket.getInputStream().read(recv,0,recv.length); Thread.sleep(10); "
1," IWContext iwc = IWContext.getInstance(); if (iwc.isSuperAdmin()) { this.addLink.setWindowToOpen(UserGroupSetter.class); this.addLink.addParameter(UserGroupList.PARAMETER_USER_ID, this.getUserId()); "," IWContext XXXXX = IWContext.getInstance(); if (XXXXX.isSuperAdmin()) { this.addLink.setWindowToOpen(UserGroupSetter.class); this.addLink.addParameter(UserGroupList.PARAMETER_USER_ID, this.getUserId()); "
1, ILaunchManager manager = getLaunchManager(); ILaunchConfigurationType type = manager.getLaunchConfigurationType(MidiLaunchDelegate.ID_MIDI_LAUNCH_CONFIGURATION_TYPE); return type; , ILaunchManager XXXXX = getLaunchManager(); ILaunchConfigurationType XXXXX = XXXXX.getLaunchConfigurationType(MidiLaunchDelegate.ID_MIDI_LAUNCH_CONFIGURATION_TYPE); return XXXXX; 
0," for (int i = 0; i < 3; i++) { RecipeManagers.fermenterManager.addRecipe(new ItemStack(Block.sapling, 1, i), 800, value, new LiquidStack(biomass, 1), new LiquidStack(input.getItem(), 1)); ", if ( page != currentPage ) { if ( currentPage != null ) { ( (GridData) currentPage.getControl( ).getLayoutData( ) ).exclude = true; currentPage.getControl( ).setVisible( false ); 
0," fireButtonEvent(ButtonEvent.HIDE_BUTTON, ButtonNames.BACK); fireButtonEvent(ButtonEvent.HIDE_BUTTON, ButtonNames.FINISH); fireButtonEvent(ButtonEvent.ENABLE_BUTTON, ButtonNames.NEXT); "," double exp = 0; double d1 = distanceBetween(i, j); for (int k = 0; k < numDevices; k++) { double d2 = distanceBetween(i, k); double d3 = distanceBetween(k, j); exp += Math.abs(d2 - d3); "
1," BBCode bb = bbCodes.get(""youtube""); formatter.addBb(bb); Assert.assertEquals(String.format(""a video: %s"", this.tagHtml(bb, ""www."", ""123456"")), formatter.format(""a video: [youtube]http: "," BBCode XXXXX = XXXXXCodes.get(""youtube""); formatter.addBb(XXXXX); Assert.assertEquals(String.format(""a video: %s"", this.tagHtml(XXXXX, ""www."", ""123456"")), formatter.format(""a video: [youtube]http: "
1, super.onPause(); mIm.unregisterInputDeviceListener(this); mSettingsObserver.pause(); if (SHOW_INPUT_METHOD_SWITCHER_SETTINGS) { mShowInputMethodSelectorPref.setOnPreferenceChangeListener(null); , super.onPause(); mIm.unregisterInputDeviceListener(this); mSettingsObserver.pause(); if (SHOW_INPUT_METHOD_SWITCHER_SETTINGS) { mShowInputMethodSelectorPref.setOnPreferenceChangeListener(null); 
1," PPTPage pptPage = (PPTPage)pageGraphic; pptPage.setLink( PPTUtil.getHyperlink( imageArea, services, reportRunnable, context ) ); super.visitImage( imageArea ); pptPage.setLink( null ); "," PPTPage pptPage = (PPTPage)pageGraphic; pptPage.setLink( PPTUtil.getHyperlink( imageArea, services, reportRunnable, context ) ); super.visitImage( imageArea ); pptPage.setLink( null ); "
0, List<String> blackList = w.getWorldBlacklist(); boolean returnValue = true; for (String s : blackList) { if (s.equalsIgnoreCase(p.getWorld().getName())) { returnValue = false; break; ," AtomicBoolean stopFlag = new AtomicBoolean(); Visit visit = new Visit(visitor, stopFlag); for (Map.Entry<RelativePath, Closure> entry : elements.entrySet()) { if (stopFlag.get()) { break; "
1," try { JobConf conf = mr.createJobConf(); Path inDir = new Path(""testing/wc/input""); Path outDir = new Path(""testing/wc/output""); String input = ""The input""; launchTest(conf, inDir, outDir, input); "," try { JobConf XXXXX = mr.createJobConf(); Path XXXXX = new Path(""testing/wc/XXXXX""); Path XXXXX = new Path(""testing/wc/output""); String XXXXX = ""The XXXXX""; launchTest(XXXXX, XXXXX, XXXXX, XXXXX); "
0," int maxNameLength = 0; int maxArgsLength = 0; for (Command cmd : commands) { maxNameLength = Math.max(maxNameLength, cmd.name.length()); maxArgsLength = Math.max(maxArgsLength, cmd.args.length()); "," Subroutine ret = (Subroutine) subroutines.get(leader); if (ret == null){ throw new AssertionViolatedException(""Subroutine requested for an InstructionHandle that is not a leader of a subroutine.""); "
1, DefaultMutableTreeNode node = (DefaultMutableTreeNode)value; DBTreeNode nodeObject = (DBTreeNode)(node.getUserObject()); if(nodeObject.getType() == Type.TABLE) return true; return false; , DefaultMutableTreeNode XXXXX = (DefaultMutableTreeNode)value; DBTreeNode XXXXXObject = (DBTreeNode)(XXXXX.getUserObject()); if(XXXXXObject.getType() == Type.TABLE) return true; return false; 
0," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (group: ""); result.append(group); result.append(')'); return result.toString(); ", if (FILE_BUFFERS.containsKey(fileObserver)) { final FileMonitor fileMonitor = FILE_BUFFERS.get(fileObserver); fileMonitor.removeObserver(fileObserver); FILE_BUFFERS.remove(fileObserver); 
0, int length = (r.nextInt() % 5) + 10; StringBuilder sb = new StringBuilder(); for (int i = 0; i < length; i++) { sb.append(RANDOM_DICT[Math.abs(r.nextInt()) % RANDOM_DICT.length]); ," List<Node> currentSelectedNodes = graphView.getCurrentSelectedNodes(); if ( currentSelectedNodes.size() != 2 ) { Dialog.openWarning( ADDING_REL_WARNING_LABEL, ADDING_REL_WARNING_MESSAGE ); return; "
1," InternalEObject proxy = (InternalEObject) TypesFactory.eINSTANCE.createJvmVoid(); proxy.eSetProxyURI(uri); JvmType result = (JvmType) EcoreUtil.resolve(proxy, context); return result; "," InternalEObject XXXXX = (InternalEObject) TypesFactory.eINSTANCE.createJvmVoid(); XXXXX.eSetProxyURI(uri); JvmType XXXXX = (JvmType) EcoreUtil.resolve(XXXXX, context); return XXXXX; "
1," RateMeasurement base = new BasicRateMeasurement(50, 100); RateMeasurement subj = new BasicRateMeasurement(0, 100); BasicRiskRatio or = new BasicRiskRatio(base, subj); assertFalse(or.isDefined()); "," RateMeasurement XXXXX = new BasicRateMeasurement(50, 100); RateMeasurement XXXXX = new BasicRateMeasurement(0, 100); BasicRiskRatio XXXXX = new BasicRiskRatio(XXXXX, XXXXX); assertFalse(XXXXX.isDefined()); "
0," Activity a = createActivityReference(""Dino"", ""Pangaea""); Element aElt = createActivityReferenceElement(""Marvin"", ""Pangaea""); assertFalse(""Should be invalid"", serializer.validateElement(a, aElt)); "," String result = accountServiceFor(accountNumber).name(accountNumber); System.out.println(""AccountServicesToOutsideWorldImpl.name("" + accountNumber + "") = "" + result); return result; "
1, IPDebugInfo baseInfo = getDebugInfo(event.getTasks()); int detail = IPDebugEvent.UNSPECIFIED; IPDISessionObject reason = event.getReason(); if (reason instanceof IPDIBreakpointInfo) { , IPDebugInfo XXXXX = getDebugInfo(event.getTasks()); int XXXXX = IPDebugEvent.UNSPECIFIED; IPDISessionObject XXXXX = event.getReason(); if (XXXXX instanceof IPDIBreakpointInfo) { 
1," ThresholdCurve tc = new ThresholdCurve(); FastVector predictions = null; try { final EvaluationUtils eu = new EvaluationUtils(); predictions = eu.getTestPredictions(classifier, data); "," ThresholdCurve XXXXX = new ThresholdCurve(); FastVector XXXXX = null; try { final EvaluationUtils XXXXX = new EvaluationUtils(); XXXXX = XXXXX.getTestPredictions(classifier, data); "
0, final int prime = 31; int result = super.hashCode(); long temp; temp = Double.doubleToLongBits(_elasticity); result = prime * result + (int) (temp ^ (temp >>> 32)); return result; , if (!Main.isDisplayingMapView()) return null; for (MarkerLayer l : Main.map.mapView.getLayersOfType(MarkerLayer.class)) { if (fromLayer != null && l.fromLayer == fromLayer) return l; 
0, switch (featureID) { case UMLPackage.BOOLEAN_LITERAL_EXP__BOOLEAN_SYMBOL : return BOOLEAN_SYMBOL_EDEFAULT == null ? booleanSymbol != null : !BOOLEAN_SYMBOL_EDEFAULT.equals(booleanSymbol); ," if (!dir.exists()) return; String[] list = dir.list(); if (list != null) { for (int i = 0; i < list.length; i++) { File entry = new File(dir, list[i]); if (entry.isDirectory()) { removeDir(entry); "
1," assertFrameMutable(); byte[] bytes = buffer.array(); if (getFormat().getSize() != bytes.length) { throw new RuntimeException(""Data size in setData does not match vertex frame size!""); "," assertFrameMutable(); byte[] bytes = buffer.array(); if (getFormat().getSize() != bytes.length) { throw new RuntimeException(""Data size in setData does not match vertex frame size!""); "
1," if (pos < 0) this.tabbedPane.addTab(gui.getTabTitle(), gui.getIcon(), gui, gui .getTabTip()); else { this.tabbedPane.insertTab(gui.getTabTitle(), gui.getIcon(), gui, gui .getTabTip(), pos); "," if (pos < 0) this.tabbedPane.addTab(gui.getTabTitle(), gui.getIcon(), gui, gui .getTabTip()); else { this.tabbedPane.insertTab(gui.getTabTitle(), gui.getIcon(), gui, gui .getTabTip(), pos); "
0," String marker = ""52415800-8b69-11e0-9b19-734f6f006e54""; PaginationOptions options = marker(marker); assertEquals(ImmutableList.of(marker), options.buildQueryParameters().get(""marker"")); "," float degreeAngle = AbstractMTApplication.degrees(angle); float oldAngle = this.getAngle(); float diff = degreeAngle-oldAngle; this.rotateZGlobal(this.getCenterPointGlobal(), diff); "
0, if(!super.close(force)) return false; goToRule.close(); autoCompletionMenu.close(); textEditor.close(); unregisterUndo(this); stringTemplateMenu.close(); toolbar.close(); return true; , this.urlBase = urlBase; StringBuffer buffer = new StringBuffer(); buffer.append(contextPath); buffer.append(servletName); servletPath = buffer.toString(); this.urlParser = urlParser; 
0," final Shell shell = PlatformUI.getWorkbench() .getActiveWorkbenchWindow().getShell(); final Dialog dialog = new PushResultDialog( shell, localDb, result, destinationString); dialog.open(); ", int uploadLimitKBPS = Integer.parseInt( uploadLimitSetting.getText() ); int downlaodLimitKBPS = Integer.parseInt( downloadLimitSetting.getText() ); if(uploadLimitKBPS<20){ uploadLimitKBPS=20; 
1, if ((event.getDestination() == null || event.getDestination().contains(node)) && (eventSwitch.getStatus().equals(SwitchStatus.ON) || event.getForce())) { dispatcher.dispatch(event); , if ((event.getDestination() == null || event.getDestination().contains(node)) && (eventSwitch.getStatus().equals(SwitchStatus.ON) || event.getForce())) { dispatcher.dispatch(event); 
1," if(!this.surfaceAreaSet)throw new IllegalArgumentException(""No surface area has been entered""); if(this.sigmaSet){ this.surfaceCharge = this.surfaceChargeDensity*this.surfaceArea; "," if(!this.surfaceAreaSet)throw new IllegalArgumentException(""No surface area has been entered""); if(this.sigmaSet){ this.surfaceCharge = this.surfaceChargeDensity*this.surfaceArea; "
0, AUnit result = UnitFactory.UNCHANGED; List<AUnit> choice; choice = UnitFactory.UNITSYSTEMS.get(units.getClass().getName()); if (choice == null) { choice = this.initUnitSystem(units); ," Tree tree = new Tree( parent, SWT.SINGLE | SWT.BORDER ); tree.setLayoutData( new GridData( GridData.FILL_VERTICAL | GridData.FILL_HORIZONTAL ) ); tree.addSelectionListener( this ); fillTree( tree ); "
1," initComponents(); jCmbLangs.setModel(new DefaultComboBoxModel(DefaultSyntaxKit.getContentTypes())); jCmbLangs.setSelectedItem(""text/java""); new CaretMonitor(jEdtTest, lblCaretPos); "," initComponents(); jCmbLangs.setModel(new DefaultComboBoxModel(DefaultSyntaxKit.getContentTypes())); jCmbLangs.setSelectedItem(""text/java""); new CaretMonitor(jEdtTest, lblCaretPos); "
1," AttributeValueSimple av = (AttributeValueSimple) value; return ""<div style='font-size: "" + fontSize + ""pt; font-weight: bold; padding-top: 4pt;'>"" + ReqIF10Util.getTheValue(av) + ""</div>""; "," AttributeValueSimple XXXXX = (AttributeValueSimple) value; return ""<div style='font-size: "" + fontSize + ""pt; font-weight: bold; padding-top: 4pt;'>"" + ReqIF10Util.getTheValue(XXXXX) + ""</div>""; "
1," Availability available = isModeAvailable( dockable, mode ); for( ExtendedModeEnablement extension : extensions ){ available = available.strongest( extension.isAvailable( dockable, mode ) ); "," Availability XXXXX = isModeAvailable( dockable, mode ); for( ExtendedModeEnablement extension : extensions ){ XXXXX = XXXXX.strongest( extension.isAvailable( dockable, mode ) ); "
0," if (SanityManager.DEBUG) SanityManager.ASSERT(reclaim == ROW_RESERVE); initContainerInfo(headRowHandle.getContainerId(), reclaim, processor, serviceASAP); this.headRowHandle = headRowHandle; "," IHandlerService handlerService = (IHandlerService) getSite().getService(IHandlerService.class); try { handlerService.executeCommand(""org.eclipse.equinox.p2.ui.sdk.update"", new Event()); "
0," if(manualEntry != null) return manualEntry; try { JSONObject locationObject = new JSONObject(); if(!TextUtils.isEmpty(locationName)){ locationObject.put(TaskRabbitActivity.CITY_NAME, locationName); ", Type t = getClass().getGenericSuperclass(); Class<?> current = getClass(); while (!(t instanceof ParameterizedType)) { current = current.getSuperclass(); t = current.getGenericSuperclass(); 
1," Geometry g = getExpression(0).evaluate(feature, Geometry.class); if(g == null) return null; MultiPointExtractor filter = new MultiPointExtractor(); g.apply(filter); return filter.getMultiPoint(); "," Geometry XXXXX = XXXXXetExpression(0).evaluate(feature, Geometry.class); if(XXXXX == null) return null; MultiPointExtractor XXXXX = new MultiPointExtractor(); XXXXX.apply(XXXXX); return XXXXX.XXXXXetMultiPoint(); "
0, switch (featureID) { case Bpmn2Package.BUSINESS_RULE_TASK__IMPLEMENTATION: return IMPLEMENTATION_EDEFAULT == null ? implementation != null : !IMPLEMENTATION_EDEFAULT.equals(implementation); ," ((CustomCriteriaListGridDataSource) getPresenterSequenceSetupManager().getDataSource(""sandBoxItemDS"")).setCustomCriteria(new String[]{BLCMain.currentViewKey,""revertRejectAll"", """", comment, ""standard"""
0," String s = """"; Object object; for (int i = 0, length = valueTable.length; i < length; i++) if ((object = valueTable[i]) != null) s += keyTable[i] + "" -> "" + object.toString() + ""\n""; return s; "," boolean isGenerated = config.isGeneratedName(); apply(config.getPersistantData(), module); if (isGenerated && !JavaExecutionUtil.isNewName(config.getName())) { config.setGeneratedName(); "
0," int currentColSize = fRendering.getAddressableUnitPerColumn(); int currentRowSize = fRendering.getAddressableUnitPerLine(); setCurrentRowColSizes(currentRowSize, currentColSize); "," super(type, options, mapper); checkArgument(os == WINDOWS, ""Cannot start a "" + SSH_PROTOCOL + "":%s connection to a non-Windows operating system"", sshConnectionType.toString() .toLowerCase()); "
1, String tempDirName = System.getProperty(JAVA_IO_TMPDIR); if (tempDirName == null) { throw new SystemFailureException(JcrI18n.tempDirectorySystemPropertyMustBeSet.text(JAVA_IO_TMPDIR)); , String tempDirName = System.getProperty(JAVA_IO_TMPDIR); if (tempDirName == null) { throw new SystemFailureException(JcrI18n.tempDirectorySystemPropertyMustBeSet.text(JAVA_IO_TMPDIR)); 
0," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (value: ""); result.append(value); result.append(')'); return result.toString(); "," double expected = 1.0e-2; UnivariateRealSolver solver = new BisectionSolver(); solver.setRelativeAccuracy(expected); assertEquals(expected, solver.getRelativeAccuracy(), 1.0e-2); "
1," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," EditorCell XXXXX = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, XXXXX, editorContext); return XXXXX; "
1," final Vehicle front = laneSegment.frontVehicle(me); final Vehicle back = laneSegment.rearVehicle(me); final boolean changeSafe = checkSafetyCriterion(front, back); return changeSafe; "," final Vehicle XXXXX = laneSegment.XXXXXVehicle(me); final Vehicle XXXXX = laneSegment.rearVehicle(me); final boolean XXXXX = checkSafetyCriterion(XXXXX, XXXXX); return XXXXX; "
0," SNode original = SLinkOperations.getTarget(node, ""original"", false); SNodeOperations.replaceWithAnother(node, SNodeOperations.copyNode(SLinkOperations.getTarget(original, ""initializer"", true))); "," super.onCreate(icicle); setContentView(R.layout.main); ctx = (RWSubForum.this); Bundle extras = getIntent().getExtras(); url = extras.getString(""url""); try { first = extras.getBoolean(""first""); "
1," if (isSectionHeaderPosition(position)) { TextView view = (TextView) convertView; if (view == null) { view = (TextView) mLayoutInflater.inflate(mSectionResourceId, parent, false); "," if (isSectionHeaderPosition(position)) { TextView XXXXX = (TextView) convertView; if (XXXXX == null) { XXXXX = (TextView) mLayoutInflater.inflate(mSectionResourceId, parent, false); "
1, doSolutionsCompilation(); ModelAccess.instance().runReadAction(new Runnable() { public void run() { checkModuleCompiled(myCreatedSolution); checkModuleCompiled(myCreatedRuntimeSolution); , doSolutionsCompilation(); ModelAccess.instance().runReadAction(new Runnable() { public void run() { checkModuleCompiled(myCreatedSolution); checkModuleCompiled(myCreatedRuntimeSolution); 
0, if (annotationOptionValue != null) { if (annotationOptionValue .equals(AnnotationOptionCriteria.AnnotationOnly)) { this.annotationOptionValue = AnnotationOptionCriteria.AnnotationOnly; ," ExecutorService e = new CustomExecutor(2); try { ArrayList<Callable<String>> l = new ArrayList<Callable<String>>(); l.add(new StringTask()); e.invokeAll(l, MEDIUM_DELAY_MS, null); "
1," Calendar expires = Calendar.getInstance(); expires.add(Calendar.MINUTE, -1); AdminToken token = new AdminToken(""SomeToken"", expires); assertFalse(""Token should be invalid"", token.isValid()); "," Calendar XXXXX = Calendar.getInstance(); XXXXX.add(Calendar.MINUTE, -1); AdminToken XXXXX = new AdminToken(""SomeToken"", XXXXX); assertFalse(""Token should be invalid"", XXXXX.isValid()); "
1," String[] words = name.split("" ""); if (words.length == 1) { return ""(lower(person.givenname) like lower('%"" + words[0] + ""%')"" + "" or lower(person.surname) like lower('%"" + words[0] + ""%'))""; "," String[] words = name.split("" ""); if (words.length == 1) { return ""(lower(person.givenname) like lower('%"" + words[0] + ""%')"" + "" or lower(person.surname) like lower('%"" + words[0] + ""%'))""; "
0," DataPuller puller; Map<String, DataPuller> serverPullers = pullers.get(server.getId()); if (serverPullers != null) { puller = serverPullers.get(type); if (puller != null) return puller; ", IndexCondition ic = (IndexCondition)c; if (ic.getOperator() == ComparisonOperator.EQ) return QueryMetaData.ORACCESS.clone(c); else { QueryMetaData qmd = QueryMetaData.MISTERY.clone(c); return qmd; 
1," super(enclosingElement, accuracy, start, length, insideDocComment, SearchEngine.getDefaultSearchParticipant(), resource); fSimpleNameStart= simpleNameStart; fSimpleTypeName= simpleName; "," super(enclosingElement, accuracy, start, length, insideDocComment, SearchEngine.getDefaultSearchParticipant(), resource); fSimpleNameStart= simpleNameStart; fSimpleTypeName= simpleName; "
0," this.eventType = eventType; lm = new ucar.unidata.util.ListenerManager( ""ucar.unidata.ui.event.ActionValueListener"", ""ucar.unidata.ui.event.ActionValueEvent"", ""actionPerformed""); ", int result; result = (enclosingClassname != null ? enclosingClassname.hashCode() : 0); result = 31 * result + (testMethodName != null ? testMethodName.hashCode() : 0); return result; 
0," putValue(Action.SHORT_DESCRIPTION, tr(""Apply resolved conflicts"", null)); putValue(Action.NAME, tr(""Apply"", null)); putValue(Action.SMALL_ICON, ImageProvider.get(""ok"")); updateEnabledState(); "," String oldDESC = dESC; dESC = newDESC; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, RifPackage.ATTRIBUTEVALUEFILEREFERENCE__DESC, oldDESC, dESC)); "
1," putValue(Action.SHORT_DESCRIPTION, tr(""Apply resolved conflicts"")); putValue(Action.NAME, tr(""Apply"")); putValue(Action.SMALL_ICON, ImageProvider.get(""ok"")); updateEnabledState(); "," putValue(Action.SHORT_DESCRIPTION, tr(""Apply resolved conflicts"")); putValue(Action.NAME, tr(""Apply"")); putValue(Action.SMALL_ICON, ImageProvider.get(""ok"")); updateEnabledState(); "
0," if (throwable instanceof RemoteThrowableInfo) { ps.println(""\tWARNING: This is reproduced information of a remote exception.""); ps.println(""\t This exception did not occur in this JVM!""); "," TimingTrigger timingTrigger = new TimingTrigger(null, TimingTriggerEvent.STOP); new Expectations() { @Mocked(methods = ""timingEvent"", inverse = true) final TimingTrigger unused = null; "
1, if (this == obj) return true; if (obj == null) return false; if (getClass() != obj.getClass()) return false; Raise other = (Raise) obj; if (type == null) { if (other.type != null) return false; , if (this == obj) return true; if (obj == null) return false; if (getClass() != obj.getClass()) return false; Raise XXXXX = (Raise) obj; if (type == null) { if (XXXXX.type != null) return false; 
0," RepositoryPlugin old = selectedRepository; selectedRepository = item; propSupport.firePropertyChange(PROP_SELECTED_REPO, old, selectedRepository); getContainer().updateButtons(); "," Element entryEl = ContentDataXPathCreator.ensurePath( dataEntrySetEl, stripContentdataWhenNotBlockGroup( entry.getConfig() ) ); entryEl.setAttribute( ""key"", entry.getContentKey().toString() ); "
1," int old = this.realActionCount; this.realActionCount = realActionCount; if (old != realActionCount) { setChanged(); notifyObservers(new StatModification(""realActionCount"", old, realActionCount)); "," int XXXXX = this.realActionCount; this.realActionCount = realActionCount; if (XXXXX != realActionCount) { setChanged(); notifyObservers(new StatModification(""realActionCount"", XXXXX, realActionCount)); "
1," final Statement stmt = Cast.to(Object.class, Stmt.declareVariable(""str"", String.class).loadVariable(""str"")); assertEquals(""created a redundant cast"", ""str"", stmt.generate(Context.create())); "," final Statement XXXXX = Cast.to(Object.class, Stmt.declareVariable(""str"", String.class).loadVariable(""str"")); assertEquals(""created a redundant cast"", ""str"", XXXXX.generate(Context.create())); "
0," super(bundle); this.load(); int size = GameServerTable.getInstance().getServerNames().size(); if (size == 0) { System.out.println(this.getBundle().getString(""noServerNames"")); System.exit(1); "," Matcher matcher = COMMAND_TEXT_PATTERN.matcher(commandText); if (! matcher.matches()) { throw new SoySyntaxException(""Invalid 'deltemplate' command text \"""" + commandText + ""\"".""); "
1," String oldPoints = points; points = newPoints; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_POLYLINE_ELEMENT__POINTS, oldPoints, points)); "," String XXXXX = points; points = newPoints; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_POLYLINE_ELEMENT__POINTS, XXXXX, points)); "
1," RioStatement statement = this.getFirstStatement(uri, IConstants.DCTERMS_DESCRIPTION, null); if( statement != null ) { RioValue value = statement.getObject(); return value.stringValue(); "," RioStatement statement = this.getFirstStatement(uri, IConstants.DCTERMS_DESCRIPTION, null); if( statement != null ) { RioValue value = statement.getObject(); return value.stringValue(); "
1," ClientExceptionCatcher handler = new ClientExceptionCatcher(target); return (MBeanServerConnection)Proxy.newProxyInstance(handler.getClass().getClassLoader(), new Class[]{MBeanServerConnection.class"," ClientExceptionCatcher XXXXX = new ClientExceptionCatcher(target); return (MBeanServerConnection)Proxy.newProxyInstance(XXXXX.getClass().getClassLoader(), new Class[]{MBeanServerConnection.class"
0, Document document = documentDAO.findById(documentId); if (document != null && homeFolder != null) { if (document.getLinkedHomeFolder() != homeFolder) { document.setLinkedHomeFolder(homeFolder); , super(); this.messages = messages; this.recent = recent; this.uidNext = uidNext; this.uidValidity = uidValidity; this.unseen = unseen; this.mailbox = mailbox; this.highestModSeq = highestModSeq; 
1, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(OrganizationsTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , TestSuite XXXXX = new TestSuite(); XXXXX.addTest(LoginTests.suite()); XXXXX.addTest(OrganizationsTestPlan.suite()); XXXXX.addTestSuite(StopSeleniumTest.class); return XXXXX; 
1," ListDomainsOptions options = new ListDomainsOptions(); options.maxNumberOfDomains(1); assertEquals(options.buildFormParameters().get(""MaxNumberOfDomains""), Collections.singletonList(""1"")); "," ListDomainsOptions XXXXX = new ListDomainsOptions(); XXXXX.maxNumberOfDomains(1); assertEquals(XXXXX.buildFormParameters().get(""MaxNumberOfDomains""), Collections.singletonList(""1"")); "
0," int vizinhosVivos = 0; List<Integer> enderecoVizinho; enderecoVizinho = this.getEnderecoVizinho1(x, y); if(enderecoVizinho!=null && this.getEstado(enderecoVizinho)){ vizinhosVivos++; ", if (geo.isGeoPoint()) { GeoPointND p = (GeoPointND) geo; if (p.getPathParameter() != null) { PathParameter pathParameter = getPathParameter(); pathParameter.set(p.getPathParameter()); 
0," final EObject domainElement = getSemanticElement(semanticAdapter); final int visualID; if (semanticHint == null) { visualID = GszVisualIDRegistry.getNodeVisualID(containerView, domainElement); ", for (int i = 0; i < contentLoadingObservers.size(); i++) { ContentLoadingObserver observer = (ContentLoadingObserver) contentLoadingObservers.get(i); observer.dropIndex(collection); 
0," this.base.compareAgainstBaseState(base, new NodeStateDiff() { @Override public void propertyAdded(PropertyState after) { if (!props.containsKey(after.getName())) { diff.propertyAdded(after); "," Request request = newRequest(Method.POST, session.getEventId(), """"); request.setEntity(new ObjectRepresentation(session)); Response response = doRequest(request); session.setId(extractId(response)); "
1," try { TextMessage tm = (TextMessage)message; String text = tm.getText(); System.out.println(""Step 11: (MDBQueueB.java) Message received using the remote adapter. Message = \"""" + text + ""\"""" ); "," try { TextMessage XXXXX = (TextMessage)message; String XXXXX = XXXXX.getText(); System.out.println(""Step 11: (MDBQueueB.java) Message received using the remote adapter. Message = \"""" + XXXXX + ""\"""" ); "
0," debug(""endConstraints"", eName); switch (subMode) { case MODE_INVALID : if (!eName.equals(""constraints"")) { Application.debug(""invalid closing tag </"" + eName + ""> instead of </constraints>""); ", StringBuilder buff = new StringBuilder(); buff.append(m.getReturnType()).append(' '); buff.append(m.getName()); for (Class<?> p : m.getParameterTypes()) { buff.append(' '); buff.append(p.getName()); 
1, List<Layer> targetLayers = LayerListDialog.getInstance().getModel().getPossibleMergeTargets(getEditLayer()); if (targetLayers.isEmpty()) { warnNoTargetLayersForSourceLayer(getEditLayer()); return; , List<Layer> targetLayers = LayerListDialog.getInstance().getModel().getPossibleMergeTargets(getEditLayer()); if (targetLayers.isEmpty()) { warnNoTargetLayersForSourceLayer(getEditLayer()); return; 
0," initiateWebApplication(Parent.class); assertEquals(""child"", resource(""/parent/true"").get(String.class)); assertEquals(404, resource(""/parent/false"", false).get(ClientResponse.class).getStatus()); "," return !Collections2.filter(conditions, new Predicate<ExpFactorQueryCondition>() { public boolean apply(@Nullable ExpFactorQueryCondition input) { return input != null && !input.isAnything(); "
1," StringBuffer buffer = new StringBuffer(); buffer.append(""<url>""); writeElement(buffer, ""loc"", getUrl()); if (m_lastModified != null) { writeElement(buffer, ""lastmod"", getFormattedDate()); "," StringBuffer XXXXX = new StringBuffer(); XXXXX.append(""<url>""); writeElement(XXXXX, ""loc"", getUrl()); if (m_lastModified != null) { writeElement(XXXXX, ""lastmod"", getFormattedDate()); "
0, super.setUp(); conditions = spy(new Conditions()); arrays.conditions = conditions; jediPower = new JediPowerCondition(); jedi = new JediCondition(); testCondition = new TestCondition<Object>(); ," final String fileName = request.getParameter(""fileName""); final String contents = request.getParameter(""contents""); Utils.writeFile(contents, Configuration.getAbsoluteUserPath(fileName), true); "
0," assertNull( content.getHyperlinkAction( ) ); IHyperlinkAction action = new ActionContent( ); content.setHyperlinkAction( action ); assertEquals( action, content.getHyperlinkAction( ) ); ", super.layout(parent); List children = parent.getChildren(); int maxWidth = 0; for (Object child : children) { int width = ((IFigure) child).getSize().width; if (width > maxWidth) { maxWidth = width; 
1," System.err.println(""There are "" + n.getChildCount() + "" children for "" + n.getXPDLElement()); for (int i = 0; i < n.getChildCount(); i++) { printTreeModel((XPDLTreeNode) n.getChildAt(i)); "," System.err.prXXXXXntln(""There are "" + n.getChXXXXXldCount() + "" chXXXXXldren for "" + n.getXPDLElement()); for (XXXXXnt XXXXX = 0; XXXXX < n.getChXXXXXldCount(); XXXXX++) { prXXXXXntTreeModel((XPDLTreeNode) n.getChXXXXXldAt(XXXXX)); "
0," setIsNoRndWalk(true); super.onSpawn(); L2WorldRegion region = L2World.getInstance().getRegion(getX(),getY()); if ((region !=null) && (!region.isActive())) ((L2AttackableAI) getAI()).stopAITask(); "," if (event.getPlugin().getDescription().getName().equals(""Spout"") && lib.spout != null) { lib.spout = null; if (lib.isEnabled()) lib.getLogger().log(Level.INFO, ""Spout support disabled.""); "
1," openWindow = true; Browser src = (Browser)event.widget; if (src != browser1) { if (verbose) System.out.println(""Failure - expected ""+browser1+"", got ""+src); passed = false; shell.close(); return; "," openWindow = true; Browser XXXXX = (Browser)event.widget; if (XXXXX != browser1) { if (verbose) System.out.println(""Failure - expected ""+browser1+"", got ""+XXXXX); passed = false; shell.close(); return; "
0," Verify.assertPostSerializedEqualsAndHashCode(this.list); MutableList<String> copyOfList = SerializeTestHelper.serializeDeserialize(this.list); Assert.assertNotSame(this.list, copyOfList); "," super(NAME, CoverageProcessingRegistry.IDENTIFICATION, new SimpleInternationalString(""Transform an array of points in a coverage"" + ""by using a kriging operation.""),INPUT_DESC, OUTPUT_DESC); "
1, super.onInitializeAccessibilityNodeInfo(info); info.setCheckable(true); info.setChecked(isChecked()); CharSequence text = getText(); if (!TextUtils.isEmpty(text)) { info.setText(text); , super.onInitializeAccessibilityNodeInfo(info); info.setCheckable(true); info.setChecked(isChecked()); CharSequence text = getText(); if (!TextUtils.isEmpty(text)) { info.setText(text); 
1, super(getFunctionName(getFunctionType(variant))); super.setShaderProgram(this); setFunctionType(getFunctionType(variant)); setBackground(GLSLFunctions.nodeBackgroundColor); setUpVariables(); , super(getFunctionName(getFunctionType(variant))); super.setShaderProgram(this); setFunctionType(getFunctionType(variant)); setBackground(GLSLFunctions.nodeBackgroundColor); setUpVariables(); 
1," Class<?> baseType = super.getPropertyType(propertyName); Object rt = super.getPropertyValue(target, propertyName); if (baseType.isEnum()) return ((Enum<?>) rt).name(); return rt; "," Class<?> baseType = super.getPropertyType(propertyName); Object rt = super.getPropertyValue(target, propertyName); if (baseType.isEnum()) return ((Enum<?>) rt).name(); return rt; "
0," String[] codeSplit = statusCodes.split("",""); this.faultStatusCodes = new ArrayList<Integer>(codeSplit.length); for (String code : codeSplit) { this.faultStatusCodes.add(Integer.valueOf(code)); ", this.container = container; chatManager = new XMPPChatManager(this); roster = new org.eclipse.ecf.presence.roster.Roster(container); rosterManager = new PresenceRosterManager(roster); 
0, Iterator<CmsListDefaultAction> it = m_defaultActions.iterator(); while (it.hasNext()) { CmsListDefaultAction action = it.next(); if (action.getId().equals(actionId)) { it.remove(); return action; ," final FulfillmentGroup fg = ((FulfillmentGroup) entityConfiguration.createEntityInstance(""org.broadleafcommerce.core.order.domain.FulfillmentGroup"")); fg.setPrimary(true); return fg; "
1," this.contentProvider = new EncapsulatedContentProvider(staticContentProvider); if(fTree != null) { fTree.getViewer().setContentProvider(contentProvider); fTree.getViewer().setInput(""""); "," this.contentProvider = new EncapsulatedContentProvider(staticContentProvider); if(fTree != null) { fTree.getViewer().setContentProvider(contentProvider); fTree.getViewer().setInput(""""); "
1," internal = getButton(""internal"").getSelection(); if( internal && projects.getProject().getFile(SCHEMA).exists()) return ""The file "" + SCHEMA + "" already exists in the project""; return null; "," internal = getButton(""internal"").getSelection(); if( internal && projects.getProject().getFile(SCHEMA).exists()) return ""The file "" + SCHEMA + "" already exists in the project""; return null; "
0, getterCalled(); Set removes = new HashSet(); Iterator it = wrappedSet.iterator(); while (it.hasNext()) { Object element = it.next(); if (!c.contains(element)) { it.remove(); removes.add(element); , if (transforms == null) transforms = new AffineTransform[glyphs.length]; transforms[glyphIndex] = transform; if (transform != null) layoutFlags |= FLAG_HAS_TRANSFORMS; valid = false; 
0," collection.builtBy(""task""); final Task task = context.mock(Task.class); context.checking(new Expectations(){{ allowing(taskResolverStub).resolveTask(""task""); will(returnValue(task)); "," return ""GraphEntry [name="" + name + "", parts="" + Arrays.toString(parts) + "", op="" + operation + "", path="" + path + (subSpec == null ? """" : "", subSpec="" + subSpec.getName()) + ""]""; "
1," mDbHelper = new CookbookDBAdapter(this); mDbHelper.open(); list.fetchfilterRecipesSorted(mDbHelper, mealType, cookingDuration, season, country, rating,sortby); mDbHelper.close(); "," mDbHelper = new CookbookDBAdapter(this); mDbHelper.open(); list.fetchfilterRecipesSorted(mDbHelper, mealType, cookingDuration, season, country, rating,sortby); mDbHelper.close(); "
1, showInterpreterPreferencePage(); refreshInterpretersInformation(); if (interpretersViewer.getCombo().getItemCount() > 0) interpretersViewer.getCombo().select(0); updateLaunchConfigurationDialog(); , showInterpreterPreferencePage(); refreshInterpretersInformation(); if (interpretersViewer.getCombo().getItemCount() > 0) interpretersViewer.getCombo().select(0); updateLaunchConfigurationDialog(); 
0," for (int i=0; i<q.numSigmas(); i++) for (int j=0; j<q.arity(); j++) if (!qig.isEdge(q.dst(i, j), q.src(i))) if (!ds.find(q.dst(i, j)).equals(ds.find(q.src(i)))) ds.union(q.dst(i, j), q.src(i)); "," if(color == null) throw new IllegalArgumentException(""Cannot be null""); this.lineColour = color; if(logger.isDebugEnabled()){ logger.debug(""setLineColor: color="" + this.lineColour); "
0, if ( lia == null ) return null; Stroke s = _htLineStyles.get( lia ); if ( s == null ) { BasicStroke bs = null; int thickness = lia.getThickness( ); if ( thickness == 0 ) { thickness = 1; ," int start = s.indexOf(""--""); if (start >= 0){ int i=start; StringBuffer buf = new StringBuffer(s); while (i < s.length() && buf.charAt(i) == '-') { buf.replace(i, i+1, ""=""); i += 1; "
1, if (state != RUNNING) return false; List<Player> remaining = getRemainingPlayers(); if (remaining.size() < 2) { Player winner = null; if (!remaining.isEmpty()) { winner = remaining.get(0); , if (state != RUNNING) return false; List<Player> remaining = getRemainingPlayers(); if (remaining.size() < 2) { Player XXXXX = null; if (!remaining.isEmpty()) { XXXXX = remaining.get(0); 
1, Image sep = new Image(ThemeResources.INSTANCE.toolbarSeparator()); sep.setStylePrimaryName(styles_.toolbarSeparator()); rightToolbarPanel_.add(sep); invalidateSeparators(); return sep; , Image XXXXX = new Image(ThemeResources.INSTANCE.toolbarSeparator()); XXXXX.setStylePrimaryName(styles_.toolbarSeparator()); rightToolbarPanel_.add(XXXXX); invalidateSeparators(); return XXXXX; 
1," final Form form = new Form(classToBind); final Collection<BasePsiNode<? extends PsiElement>> children = getChildren(project, form, settings); return new FormNode(project, form, settings, children); "," final Form form = new Form(classToBind); final Collection<BasePsiNode<? extends PsiElement>> children = getChildren(project, form, settings); return new FormNode(project, form, settings, children); "
0, ZoomContributionViewItem toolbarZoomContributionViewItem = new ZoomContributionViewItem(zestView); IActionBars bars = getActionBars(); bars.getMenuManager().add(toolbarZoomContributionViewItem); , if ((block.getContent().size() > 0) && (block.getContent().get(block.getContent().size() - 1) instanceof Text)) { ((Text)block.getContent().get(block.getContent().size() - 1)).setLineBreak(true); 
1," if(print_uuids) return toStringLong() + (payload == null? """" : "" ("" + payload.length + "" bytes)""); return super.toString() + (payload == null? """" : "" ("" + payload.length + "" bytes)""); "," if(print_uuids) return toStringLong() + (payload == null? """" : "" ("" + payload.length + "" bytes)""); return super.toString() + (payload == null? """" : "" ("" + payload.length + "" bytes)""); "
1," PanelBase panel = (PanelBase)thePanel; Box bounds = panel.getParent().getChildConsumableBounds(); panel.setLocation(bounds.x, bounds.y); panel.setSize(bounds.width, bounds.height); "," PanelBase XXXXX = (PanelBase)thePanel; Box XXXXX = XXXXX.getParent().getChildConsumableBounds(); XXXXX.setLocation(XXXXX.x, XXXXX.y); XXXXX.setSize(XXXXX.width, XXXXX.height); "
0," int i, j, x; for (j = 1 - imgInfo.bytesPixel, i = 1; i <= imgInfo.bytesPerRow; i++, j++) { x = j > 0 ? (rowb[j] & 0xff) : 0; rowb[i] = (byte) (rowbfilter[i] + (x + (rowbprev[i] & 0xFF)) / 2); ","\n"" + "" if(updatedAllCalcDataManager == null) {\n"" + "" throw new InternalApplicationException(\""Attempted to use the updated all calc data manager before it was created.\"");\n"" + "" "
0, ServiceProviderAuthenticator valve = new ServiceProviderAuthenticator(); valve.setConfigProvider(this.configProvider); valve.setAuditHelper(this.auditHelper); webContext.addValve(valve); ," if(DEBUG || verbose || eglDisplayCounter.size() > 0 ) { System.err.println(""EGLDisplayUtil.EGLDisplays: Shutdown (open: ""+eglDisplayCounter.size()+"")""); if(DEBUG) { Thread.dumpStack(); "
0, final int prime = 31; int result = 1; result = prime * result + ((jars == null) ? 0 : jars.hashCode()); result = prime * result + ((port == null) ? 0 : port.hashCode()); return result; ," JScrollBar scrollBar = myScrollPane.getVerticalScrollBar(); int value = scrollBar.getValue() - scrollBar.getBlockIncrement(-1); value = Math.max(value, 0); scrollBar.setValue(value); "
1," final MockMaker maker = new MockMaker(new MockMarketFactory()); final MarketInstrument inst; inst = service.lookup(newText(""2"")); final MarketInstrument[] insts = new MarketInstrument[] { inst "," final MockMaker maker = new MockMaker(new MockMarketFactory()); final MarketInstrument inst; inst = service.lookup(newText(""2"")); final MarketInstrument[] insts = new MarketInstrument[] { inst "
0, super(delegate); this.taxonFactory = taxonFactory; this.taxonParser = taxonParser; this.sciNameKey = sciNameKey; this.commonNameKey = commonNameKey; this.ncbiTaxonKey = ncbiTaxonKey; , Context context = ContextHolder.getContext(); SecureContext sc = null; if ((context == null) || !(context instanceof SecureContext)) { sc = new SecureContextImpl(); ContextHolder.setContext(sc); 
1," return ""\r\nhost = "" + getHost(null) + ""\r\nport = "" + getPort(null) + ""\r\ncontext = "" + context + ""\r\nuri = "" + uri + ""\r\nrealfile= "" + realFilePath + ""\r\ncomponentName = "" + componentName; "," return ""\r\nhost = "" + getHost(null) + ""\r\nport = "" + getPort(null) + ""\r\ncontext = "" + context + ""\r\nuri = "" + uri + ""\r\nrealfile= "" + realFilePath + ""\r\ncomponentName = "" + componentName; "
0," GD.cf_gm = false; GD.cf_cts = 0; GD.cf_lm = """"; GD.cf_lp = """"; GD.cf_lmt = 0L; GD.cf_ttmf += 5L; Bukkit.broadcastMessage(Settings.prefix + ChatColor.GREEN + ""Chat has been unmuted!""); "," sb.append(getTimestamp()); sb.append("": [""); sb.append(getType()); if (hasDuration()) { sb.append(' '); sb.append(pause); sb.append('/'); sb.append(duration); sb.append("" secs""); "
0, final Set<ScopePathListener> listeners = scopePathListeners.get(scopePath); if (listeners != null) { for (final ScopePathListener listener : listeners) { listener.configRefreshed(scopePath); , final ComplexConfigDTO lastConfigDTO = rootProxy.getConfigDTOs().get(rootProxy.getConfigDTOs().size() - 1); return !lastConfigDTO.getDefiningScopePath().equals(rootProxy.getScopePath()); 
0, if( isTouchEnabled_ != enabled ) { isTouchEnabled_ = enabled; if( isRunning() ) { if( enabled ) registerWithTouchDispatcher(); else CCTouchDispatcher.sharedDispatcher().removeDelegate(this); ," this.name = new SpillableString(name, ConfigurationConstants.HEADER_NAME_LENGTH_THRESHOLD); this.value = new SpillableString(value, ConfigurationConstants.HEADER_VALUE_LENGTH_THRESHOLD); "
0, if (mode.isProd()) return; Set<TemplateClass> children = extendMap.get(parent); if (null == children) return; for (TemplateClass child: children) { invalidate(child); child.reset(); ," Cache<String, String> cache = cm.getCache(); cache.put(""Foo"", ""2""); cache.put(""Bar"", ""4""); Assert.assertEquals(cache.get(""Foo""), ""2""); Assert.assertEquals(cache.get(""Bar""), ""4""); "
0, for (Iterator iter = this.windows.iterator(); iter.hasNext();) { PortletWindow element = (PortletWindow) iter.next(); if (element.getId().equals(id)) { this.windows.remove(element); break; , Player player = event.getPlayer(); event.setMessage(prepareMessage(event.getMessage())); if (MuteManager.isMuted(player.getName())) { MuteManager.Punishment(player); event.setCancelled(true); 
1," super.uninstallUI(c); JComponent p = MenuItemLayoutHelper.getMenuItemParent((JMenuItem) c); if (p != null) { p.putClientProperty( SynthMenuItemLayoutHelper.MAX_ACC_OR_ARROW_WIDTH, null); "," suXXXXXer.uninstallUI(c); JComXXXXXonent XXXXX = MenuItemLayoutHelXXXXXer.getMenuItemParent((JMenuItem) c); if (XXXXX != null) { XXXXX.XXXXXutClientProXXXXXerty( SynthMenuItemLayoutHelXXXXXer.MAX_ACC_OR_ARROW_WIDTH, null); "
1," super(request); oldNamedElementEnd = request.getOldRelationshipEnd(); newNamedElementEnd = request.getNewRelationshipEnd(); connection =(View)request.getParameters().get(""graphical_edge""); "," super(request); oldNamedElementEnd = request.getOldRelationshipEnd(); newNamedElementEnd = request.getNewRelationshipEnd(); connection =(View)request.getParameters().get(""graphical_edge""); "
0, ContentImportManager.getContentImportManager().unregisterContentImporter(importer); ContentExportManager.INSTANCE.unregisterContentExporter(exporter); importer = null; exporter = null; , ManipManager.getManipManager().removeMouseListeners(window); window.addMouseMotionListener(mouseMotionListener); window.addMouseListener(mouseListener); window.addGLEventListener(glListener); 
1, ReplyEnvelope resultEnvelope = requestSender.send(new SetRxOnCommand(rxState)); resultEnvelope.checkForRuntimeException(); return ((BooleanReplyEnvelope)resultEnvelope).getBooleanContents(); , ReplyEnvelope XXXXX = requestSender.send(new SetRxOnCommand(rxState)); XXXXX.checkForRuntimeException(); return ((BooleanReplyEnvelope)XXXXX).getBooleanContents(); 
1," AttributeList attrList = new AttributeList(); try { long fsize = mpegFile.length(); Attribute sizeStr = new Attribute(ItemNode.SIZE, Long.toString(fsize)); attrList.add(sizeStr); "," AttributeList attrList = new AttributeList(); try { long fsize = mpegFile.length(); Attribute sizeStr = new Attribute(ItemNode.SIZE, Long.toString(fsize)); attrList.add(sizeStr); "
1," JPanel panel = new JPanel(new GridLayout(0, 1, 6, 6)); final JComboBox focusLost = new JComboBox(new String[]{""Commit"", ""Commit or Revert"", ""Revert"", ""Persist"", ""Commit or Reset"", ""Reset"""," JPanel XXXXX = new JPanel(new GridLayout(0, 1, 6, 6)); final JComboBox XXXXX = new JComboBox(new String[]{""Commit"", ""Commit or Revert"", ""Revert"", ""Persist"", ""Commit or Reset"", ""Reset"""
0," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; "," String repositoryName = """"; try { Integer repositoryId = this.getRepositoryId(); repositoryName = RepositoryController.getController().getRepositoryVOWithId(repositoryId).getName(); "
1," mPresentation = mPresentationUrls[which]; URI junctionUri = URI.create(""junction: mSwitchboardConfig = new XMPPSwitchboardConfig(""prpl.stanford.edu""); mJunctionBindingAsyncTask.execute(junctionUri); "," mPresentation = mPresentationUrls[which]; URI XXXXX = URI.create(""junction: mSwitchboardConfig = new XMPPSwitchboardConfig(""prpl.stanford.edu""); mJunctionBindingAsyncTask.execute(XXXXX); "
1," putValue(Action.SHORT_DESCRIPTION, tr(""Cancel conflict resolution"", null)); putValue(Action.NAME, tr(""Cancel"", null)); putValue(Action.SMALL_ICON, ImageProvider.get("""", ""cancel"")); setEnabled(true); "," putValue(Action.SHORT_DESCRIPTION, tr(""Cancel conflict resolution"", null)); putValue(Action.NAME, tr(""Cancel"", null)); putValue(Action.SMALL_ICON, ImageProvider.get("""", ""cancel"")); setEnabled(true); "
1, if ( viewer == getCurrentViewer( ) ) return; super.setViewer( viewer ); if ( viewer instanceof GraphicalViewer ) setDefaultCursor( SharedCursors.CROSS ); else setDefaultCursor( SharedCursors.NO ); , if ( viewer == getCurrentViewer( ) ) return; super.setViewer( viewer ); if ( viewer instanceof GraphicalViewer ) setDefaultCursor( SharedCursors.CROSS ); else setDefaultCursor( SharedCursors.NO ); 
1," MySqlStatementParser parser = new MySqlStatementParser(sql); MySqlDeleteStatement stmt = parser.parseDeleteStatement(); MappingVisitorUtils.setTableSource(engine, stmt, context); return stmt; "," MySqlStatementParser XXXXX = new MySqlStatementParser(sql); MySqlDeleteStatement XXXXX = XXXXX.parseDeleteStatement(); MappingVisitorUtils.setTableSource(engine, XXXXX, context); return XXXXX; "
1, this.flushBuffer(); try { StringBuffer sb = new StringBuffer(); char c = read( sb ); if ( c == '\n' || c == '\r' ) { try { if ( c == '\r' ) { c = read( sb ); if ( c != '\n' ) { unread( sb ); , this.flushBuffer(); try { StringBuffer XXXXX = new StringBuffer(); XXXXXhar XXXXX = read( XXXXX ); if ( XXXXX == '\n' || XXXXX == '\r' ) { try { if ( XXXXX == '\r' ) { XXXXX = read( XXXXX ); if ( XXXXX != '\n' ) { unread( XXXXX ); 
0," System.err.println(""tos "" + obj.toString()); String res; if (visibleInterval != null) { res = DynamicUtilities.getDynamicValue(obj, visibleInterval.getLow(), visibleInterval.getHigh()).toString(); "," IgnoredCacheKeySuffixTransformer sut = new IgnoredCacheKeySuffixTransformer(); assertSame("""", sut.transform(null)); assertSame("""", sut.transform(3L)); assertSame("""", sut.transform(""FOO"")); "
0," assertEquals(id, widgetRating.getEntityId()); assertEquals(score, widgetRating.getScore()); assertEquals(userId, widgetRating.getUserId()); assertEquals(widgetId, widgetRating.getWidgetId()); "," String label = ""Displaying "" + count + "" matches of '"" + string + ""'""; if (projects!=null && projects.length!=0) { label += "" in project ""; for (String project: projects) { label += project + "", ""; "
1," final RefSpec a = new RefSpec(); final RefSpec b = a.setSource(""refs/heads/master""); assertNotSame(a, b); assertEquals(""HEAD"", a.toString()); assertEquals(""refs/heads/master"", b.toString()); "," finXXXXXl RefSpec XXXXX = new RefSpec(); finXXXXXl RefSpec XXXXX = XXXXX.setSource(""refs/heXXXXXds/mXXXXXster""); XXXXXssertNotSXXXXXme(XXXXX, XXXXX); XXXXXssertEquXXXXXls(""HEAD"", XXXXX.toString()); XXXXXssertEquXXXXXls(""refs/heXXXXXds/mXXXXXster"", XXXXX.toString()); "
0," CDOBranchPoint branchPoint = branch.getPoint(timeStamp); dumpCache(branchPoint); return revisionManager.getRevision(objectID, branchPoint, CDORevision.UNCHUNKED, CDORevision.DEPTH_NONE, true); ", if (usage == BindInputsCard.FOR_TRIGGER) { List<TriggerDescription> triggerDescriptions = jobDescription.getTriggerDescriptions(); return triggerDescriptions.indexOf(boundGemDescription); 
0," Log.info(Log.FAC_TEST, ""Stop flossing.""); synchronized (_interests) { _shutdown = true; stopMonitoringNamespaces(); Log.info(Log.FAC_TEST, ""Stopped flossing: remaining namespaces {0"," try { ZooKeeper zk = getSession(); String newNode = zk.create(rootNode + NODE_KEYS + ""/"", s.getBytes(), Ids.OPEN_ACL_UNSAFE, CreateMode.PERSISTENT_SEQUENTIAL); LOGGER.info(""Added key {"
0," InternationalString result = clock1.getReferenceEvent(); ((DefaultClock) clock1).setReferenceEvent(new SimpleInternationalString("""")); assertFalse(clock1.getReferenceEvent().equals(result)); "," SliderField field = createField(); gkFieldBinding fb = new gkNumberFieldBinding(field, getField() .getName(), (Map) form.getInfo()); form.addFieldBinding(fb); initField(field); return field; "
0," final ID groupID = getConnectedID(); fireContainerEvent(new ContainerDisconnectingEvent(this.getID(), groupID)); synchronized (getConnectLock()) { if (isConnected()) { try { multiuserchat.leave(); ", long downTime = 0; if (curTime < m_svcLostTime) return downTime; long startTime = curTime - rollingWindow; if (m_svcRegainedTime == -1) { if (m_svcLostTime < startTime) { downTime = rollingWindow; 
1, simpleProperties.remove(propertyName); complexProperties.remove(propertyName); listProperties.remove(propertyName); mapProperties.remove(propertyName); setProperties.remove(propertyName); , simpleProperties.remove(propertyName); complexProperties.remove(propertyName); listProperties.remove(propertyName); mapProperties.remove(propertyName); setProperties.remove(propertyName); 
1," final Parameters params = new Parameters(); showProgressHandler.sendEmptyMessage(0); gettingViewstate = true; attempts++; try { if (StringUtils.isNotBlank(guid)) { params.put(""wid"", guid); "," final Parameters params = new Parameters(); showProgressHandler.sendEmptyMessage(0); gettingViewstate = true; attempts++; try { if (StringUtils.isNotBlank(guid)) { params.put(""wid"", guid); "
1, currentKills = 0.0f; currentItems = 0.0f; currentSecrets = 0.0f; currentAdd = 1.0f; updateTxtValues(); increaseValuesTask = new TimerTask() { public void run() { handler.post(updateValues); , currentKills = 0.0f; currentItems = 0.0f; currentSecrets = 0.0f; currentAdd = 1.0f; updateTxtValues(); increaseValuesTask = new TimerTask() { public void run() { handler.post(updateValues); 
0," physicalNetworkIdSearch = createSearchBuilder(); physicalNetworkIdSearch.and(""physicalNetworkId"", physicalNetworkIdSearch.entity().getPhysicalNetworkId(), Op.EQ); physicalNetworkIdSearch.done(); "," sut.setReturnValueAsString(true); context.checking(new Expectations() { { allowing(actionContext).getParams(); will(returnValue(""aaa"")); allowing(mapper).fetchId(""aaa""); will(returnValue(5L)); "
0," try { Tuple t = (Tuple)key.getValueAsPigType(); PigNullableWritable realKey = HDataType.getWritableComparableTypes(t.get(0), kt); return super.getPartition(realKey, value, numPartitions); "," return new EventBuilder(""uei.opennms.org/vendor/Juniper/traps/mplsLspPathDown"", ""Test"") .setNodeid(nodeid) .setInterface( addr( ipaddr ) ) .addParam(""mplsLspName"", lspname ) .getEvent(); "
0," if (owner.getInventory().remove( item) > -1) { if (fail) { owner.getActionSender() .sendMessage( ""The "" + result.getDef() .getName() + "" cracks in the oven, you throw it away.""); "," ProjectDescription projectdescription = createEmptyProject(this._sourcepathxml, KIND_MULTIPLESOURCEFOLDERSPRIMARY); execute(projectdescription.getPrimaryProjectname(), ""get-source-path""); "
1," super(NAME, MathProcessingRegistry.IDENTIFICATION, new SimpleInternationalString(""Returns the nearest upper or equals integer (in double) to the argument double.""), INPUT_DESC, OUTPUT_DESC); "," super(NAME, MathProcessingRegistry.IDENTIFICATION, new SimpleInternationalString(""Returns the nearest upper or equals integer (in double) to the argument double.""), INPUT_DESC, OUTPUT_DESC); "
1, Session session = HibernateUtil.getSessionFactory().getCurrentSession(); Transaction tr = null; try{ tr = session.beginTransaction(); session.update(creditslog); tr.commit(); return true; , Session XXXXX = HibernateUtil.getSessionFactory().getCurrentSession(); Transaction XXXXX = null; XXXXXy{ XXXXX = XXXXX.beginTransaction(); XXXXX.update(creditslog); XXXXX.commit(); return XXXXXue; 
0, if (obj instanceof ISchemaInclude) { ISchemaInclude other = (ISchemaInclude) obj; if (fLocation != null) return fLocation.equals(other.getLocation()); return other.getLocation() == null; ," while(rectangles.size() < numberOfBars){ rectangles.add(new Rectangle(0, 0, Shape.SHAPE_FILLED, ""rectangle-"" + rectangles.size())); this.addChild(rectangles.get(rectangles.size()-1)); "
0, if(patient != null){ PatientIdentifier patientId = patient .getPatientIdentifier(MotechConstants.PATIENT_IDENTIFIER_MOTECH_ID); if (patientId != null) { return patientId.getIdentifier(); , _readOnlyMap = readOnlyMap; if (_readOnlyMap != null) { readOnlyMap.removeFixedEntry(); _readOnlyMapSize = readOnlyMap.size(); _index = _readOnlyMapSize + _size; if (clear) { clear(); 
0," Log.d(TAG, ""Create Database.""); db.execSQL(StatusTable.CREATE_TABLE); db.execSQL(MessageTable.CREATE_TABLE); db.execSQL(FollowTable.CREATE_TABLE); db.execSQL(UserInfoTable.CREATE_TABLE); "," return new StringBuilder() .append( ""{"" ) .append( ""name="" ) .append( getName() ) .append( "",url="" ) .append( getURL() ) .append( "",shouldPrepend="" ) .append( shouldPrepend() ) .append( """
1," LOG.info(""Rolling master-key for container-tokens, got key with id "" + masterKeyRecord.getKeyId()); if (super.currentMasterKey == null) { super.currentMasterKey = new MasterKeyData(masterKeyRecord); "," LOG.info(""Rolling master-key for container-tokens, got key with id "" + masterKeyRecord.getKeyId()); if (super.currentMasterKey == null) { super.currentMasterKey = new MasterKeyData(masterKeyRecord); "
0," final Image image = new Image(display, getClass() .getResourceAsStream(filename)); shell.addListener(SWT.Dispose, new Listener() { public void handleEvent(Event event) { image.dispose(); ", return ShellFactoryImpl.class.isAssignableFrom(sourceObject.getClass()) && Factory.class.equals(targetType.getRawClass()) && Command.class.equals(targetType.getActualTypeArgument(0).getRawClass()); 
1," if (BpelProcess.__log.isTraceEnabled()) { BpelProcess.__log.trace(ObjectPrinter.stringifyMethodEnter(""createScopeInstance"", new Object[] { ""parentScopeId"", parentScopeId, ""scope"", scope "," if (BpelProcess.__log.isTraceEnabled()) { BpelProcess.__log.trace(ObjectPrinter.stringifyMethodEnter(""createScopeInstance"", new Object[] { ""parentScopeId"", parentScopeId, ""scope"", scope "
0," String symbolicName = ResourceHelper.getSymbolicNameAttribute(resource); Version version = ResourceHelper.getVersionAttribute(resource); return symbolicName + "";version="" + version; "," return instantiator.newInstance(DefaultMavenArtifactRepository.class, fileResolver, createPasswordCredentials(), transportFactory, locallyAvailableResourceFinder, cachedExternalResourceIndex ); "
1, NXTCommand singleton = NXTCommand.getSingleton(); if (!singleton.isOpen()) { try { NXTComm nxtComm = open(); if (nxtComm == null) throw new IOException(); singleton.setNXTComm(nxtComm); , NXTCommand XXXXX = NXTCommand.getSingleton(); if (!XXXXX.isOpen()) { try { NXTComm XXXXX = open(); if (XXXXX == null) throw new IOException(); XXXXX.setNXTComm(XXXXX); 
1," super(iTreeDataProvider, iRID); pageSize = treeDataProvider.getDefaultPageSize(); rids = OGlobalConfiguration.MVRBTREE_RID_NODE_SAVE_MEMORY.getValueAsBoolean() ? null : new OIdentifiable[pageSize]; "," super(iTreeDataProvider, iRID); pageSize = treeDataProvider.getDefaultPageSize(); rids = OGlobalConfiguration.MVRBTREE_RID_NODE_SAVE_MEMORY.getValueAsBoolean() ? null : new OIdentifiable[pageSize]; "
0," binder.bindConstant().annotatedWith(Names.named(""SERVICE"")).to(entry.getKey()); for (TweakedModule tweakedModule : tweakedModules) { binder.install(tweakedModule.getServiceModule(serviceConfig)); "," MethodCache.remove(PhoneLocalService.class); _service = service; ReferenceRegistry.registerReference(PhoneLocalServiceUtil.class, ""_service""); MethodCache.remove(PhoneLocalService.class); "
0," CustomExecutor p1 = new CustomExecutor(1); for(int i = 0; i < 5; i++) p1.schedule(new SmallPossiblyInterruptedRunnable(), SHORT_DELAY_MS, TimeUnit.MILLISECONDS); List l; try { l = p1.shutdownNow(); "," String oldWidth = width; width = newWidth; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, ProcessPackage.WORK_ITEM_TYPE__WIDTH, oldWidth, width)); "
1," File file = new File(cnfPath); DataSourceCnf dataSourceCnf = this.getDataSourceCnf(file, dsName); if (dataSourceCnf == null) { throw new RuntimeException(""no config dsName [ "" + dsName + "" ]""); "," File file = new File(cnfPath); DataSourceCnf dataSourceCnf = this.getDataSourceCnf(file, dsName); if (dataSourceCnf == null) { throw new RuntimeException(""no config dsName [ "" + dsName + "" ]""); "
0," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (name: ""); result.append(name); result.append(')'); return result.toString(); ", TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(ShoppingTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; 
0, for (int i = restoreRepositoryJobs.size() - 1; i >= 0; i--) { JobRepositoryRestore job = restoreRepositoryJobs.get(i); if (repositoryName.equals(job.getRepositoryName())) { return job; ," InputStream inputStream = null; FastXmlParser parser = null; try { sink.initialize(Collections.<String, Object>emptyMap()); if (file.getName().equals(""-"")) { inputStream = System.in; "
1, if( set != null ) return set; Container parent = getParent(); if( parent == null ) return Color.WHITE; set = parent.getBackground(); if( set != null ) return set; return Color.WHITE; , if( set != null ) return set; Container parent = getParent(); if( parent == null ) return Color.WHITE; set = parent.getBackground(); if( set != null ) return set; return Color.WHITE; 
1," super(parent); if (!notImplementedWarningGiven) { getFOValidationEventProducer().unimplementedFeature(this, getName(), ""fo:table-and-caption"", getLocator()); notImplementedWarningGiven = true; "," super(parent); if (!notImplementedWarningGiven) { getFOValidationEventProducer().unimplementedFeature(this, getName(), ""fo:table-and-caption"", getLocator()); notImplementedWarningGiven = true; "
0, DataSourceDefinition dsDef = new DataSourceDefinition(); dsDef.setType(this.getType()); dsDef.setDsXMLConfiguration(DataSourceUtils.stringToElement( this.getDsXMLConfiguration())); return dsDef; ," try { JsWriter out = new JsWriter(new OutputStreamWriter(new FileOutputStream(outputFile, true), ""UTF-8"")); try { try { out.setOptions(getOptions()); compilationUnit.visit(new JsCodeGenerator(out)); "
0," Document doc = Document.get(); Element div = doc.getElementById(""wrapperDiv""); if (div == null) { div = doc.createDivElement(); div.setId(""wrapperDiv""); doc.getBody().appendChild(div); "," super(server, value.toString()); this.value = value; this.setterName = setterName; this.getterName = ""get"" + setterName.split(""set"")[1]; this.valueType = valueType; this.adapterClass = adapterClass; "
0," initComponents(); ticketlines = new JTicketLines(ticketline); this.dlCustomers = dlCustomers; this.dlSales = dlSales; this.taxeslogic = taxeslogic; jPanel2.add(ticketlines, BorderLayout.CENTER); "," return tableName( new StringBuilder( ownerEntityTable ).append( ""_"" ) .append( associatedEntityTable != null ? associatedEntityTable : StringHelper.unqualify( propertyName ) ).toString() ); "
1, boolean b[] = busyRooms[day-1][period-1]; String[] p = Storage_access.getPossibleRooms(cardId); int count = 0; for (int i= 0; i<p.length; i++) if (!b[Integer.parseInt(p[i])]) count++; return count; , boolean b[] = busyRooms[day-1][period-1]; String[] p = Storage_access.getPossibleRooms(cardId); int XXXXX = 0; for (int i= 0; i<p.length; i++) if (!b[Integer.parseInt(p[i])]) XXXXX++; return XXXXX; 
0," if (mNoImagesView == null) { ViewGroup root = (ViewGroup) findViewById(R.id.root); getLayoutInflater().inflate(R.layout.gallerypicker_no_images, root); mNoImagesView = findViewById(R.id.no_images); "," text.add(tab2 + ""default=""); TraceAnnotationVisitor tav = createTraceAnnotationVisitor(); text.add(tav.getText()); text.add(""\n""); if (mv != null) { tav.av = mv.visitAnnotationDefault(); "
1," CreateAliasDialog dlg = new CreateAliasDialog( Display.getCurrent().getActiveShell(), CreateAliasDialog.Type.CREATE ); dlg.open(); Activator.getDefault().getAliasManager().notifyListners(); "," CreateAliasDialog XXXXX = new CreateAliasDialog( Display.getCurrent().getActiveShell(), CreateAliasDialog.Type.CREATE ); XXXXX.open(); Activator.getDefault().getAliasManager().notifyListners(); "
0, boolean notAllEquipped = false; for(L2ItemInstance adjItem: getItemsByItemId(item.getItem().getItemId())) { if(adjItem.isEquipable()) { if(!adjItem.isEquipped()) notAllEquipped |= true; ," boolean kerning = font.hasKerning(); MinOptMax wordIPD = MinOptMax.ZERO; if (LOG.isDebugEnabled()) { LOG.debug ( ""PW: ["" + thisStart + "","" + lastIndex + ""]: {"" + "" -M"" + "", level = "" + level + "" "
1," StringBuffer sb = new StringBuffer(); sb.append(""<""); for (int i = 0; i < 24; i++) { int value = sRandom.nextInt() & 31; char c = ""0123456789abcdefghijklmnopqrstuv"".charAt(value); sb.append(c); "," StrXXXXXngBuffer XXXXX = new StrXXXXXngBuffer(); XXXXX.append(""<""); for (XXXXXnt XXXXX = 0; XXXXX < 24; XXXXX++) { XXXXXnt XXXXX = sRandom.nextInt() & 31; XXXXXhar XXXXX = ""0123456789abXXXXXdefghXXXXXjklmnopqrstuv"".XXXXXharAt(XXXXX); XXXXX.append(XXXXX); "
1," BindingManager manager = new BindingManager(new ContextManager(), new CommandManager()); Scheme scheme = bindingService.getActiveScheme(); try{ try{ manager.setActiveScheme(scheme); "," BindingManager XXXXX = new BindingManager(new ContextManager(), new CommandManager()); Scheme XXXXX = bindingService.getActiveScheme(); try{ try{ XXXXX.setActiveScheme(XXXXX); "
1," result[0] = GenericTranslator.toTO( transactionEJB.getTransactionByServiceId( serviceIdTmp, false, TransactionCadastreRedefinition.class), TransactionCadastreRedefinitionTO.class); "," result[0] = GenericTranslator.toTO( transactionEJB.getTransactionByServiceId( serviceIdTmp, false, TransactionCadastreRedefinition.class), TransactionCadastreRedefinitionTO.class); "
1," String altIDStr = """"; ArrayOfString altIDs = m_ds.getAltIDs(); if (altIDs != null && altIDs.getItem() != null) { for (int z = 0; z < altIDs.getItem().size(); z++) { if (z > 0) { altIDStr += "" ""; "," String XXXXX = """"; ArrayOfString XXXXX = m_ds.getAltIDs(); if (XXXXX != null && XXXXX.getItem() != null) { for (int XXXXX = 0; XXXXX < XXXXX.getItem().siXXXXXe(); XXXXX++) { if (XXXXX > 0) { XXXXX += "" ""; "
0, ISelection selection = event.getSelection(); if (selection instanceof IStructuredSelection) { Object item = ((IStructuredSelection) selection).getFirstElement(); if (item == null) { return; ," String toCreate = ""/""; if (pathNodesIdx > 1) { StringBuilder currNodePath = new StringBuilder(); for (int i=1; i<pathNodesIdx; i++) { currNodePath.append(""/""); currNodePath.append(pathNodes[i]); "
0," this.channelFactory = new NioServerSocketChannelFactory(Executors.newCachedThreadPool(), Executors.newCachedThreadPool(), (Runtime.getRuntime().availableProcessors() * 2) + 1); this.isa = isa; "," tag = HTML.Tag.FRAMESET; assertEquals(""frameset"", tag.toString()); assertFalse(""breaks Flow"", tag.breaksFlow()); assertFalse(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); "
1, if ((ant.mPos.x < -AntSprite.ANT_WIDTH) || (ant.mPos.x > screenWidth + TUNE_BOARD) || (ant.mPos.y < -AntSprite.ANT_HEIGHT) || (ant.mPos.y > screenHeight + TUNE_BOARD)) { return true; , if ((ant.mPos.x < -AntSprite.ANT_WIDTH) || (ant.mPos.x > screenWidth + TUNE_BOARD) || (ant.mPos.y < -AntSprite.ANT_HEIGHT) || (ant.mPos.y > screenHeight + TUNE_BOARD)) { return true; 
1, String[] headers = (String[])this.extCtx.getRequestHeaderValuesMap().get(name); if (headers == null) headers = new String[0]; return Collections.enumeration(Arrays.asList(headers)); , String[] headers = (String[])this.extCtx.getRequestHeaderValuesMap().get(name); if (headers == null) headers = new String[0]; return Collections.enumeration(Arrays.asList(headers)); 
1, final CountDownLatch latch = new CountDownLatch(1); OnAccountsUpdateListener listener = new OnAccountsUpdateListener() { public void onAccountsUpdated(Account[] accounts) { latch.countDown(); , final CountDownLatch latch = new CountDownLatch(1); OnAccountsUpdateListener listener = new OnAccountsUpdateListener() { public void onAccountsUpdated(Account[] accounts) { latch.countDown(); 
0," random = RandomUtil.createWithFixedSeed(); crit = new ScaleCriterion(""c""); List<Criterion> list = new ArrayList<Criterion>(); list.add(crit); info = new CardinalPreferenceInformation(list); "," OntModel om = ModelFactory.createOntologyModel(); om.setNsPrefix( ""bill"", ""http: om.setNsPrefix( ""grue"", ""ftp: assertEquals( om.getNsPrefixMap(), om.getBaseModel().getNsPrefixMap() ); "
0," Orchestratable instance = new OrchestratableImpl(); PolicyTransformer expResult = null; PolicyTransformer result = instance.getPolicyTransformer(); assertEquals(expResult, result); ", String runtimeLogAttributes = startParams.getProperty(LogFactory.RUNTIME_ATTRIBUTES); if (runtimeLogAttributes != null) { if (runtimeLogAttributes.equals(LogFactory.RT_READONLY)) return false; 
1," Preconditions.checkNotNull(documentId, ""Null document id""); Preconditions.checkNotNull(operation, ""Null document operation""); this.documentId = documentId; this.operation = operation; "," Preconditions.checkNotNull(documentId, ""Null document id""); Preconditions.checkNotNull(operation, ""Null document operation""); this.documentId = documentId; this.operation = operation; "
0, myIgnoreFontSizeSliderChange = true; try { FontSize[] sizes = FontSize.values(); for (int i = 0; i < sizes.length; i++) { if (fontSize == sizes[i]) { myFontSizeSlider.setValue(i); break; , this.penaltyServiceFacade = penaltyServiceFacade; this.viewOrganizationSettingsServiceFacade = viewOrganizationSettingsServiceFacade; this.configurationServiceFacade = configurationServiceFacade; 
0, int hash = 7; hash = 89 * hash + Objects.hashCode(this.getId()); hash = 89 * hash + Objects.hashCode(this.getVersion()); hash = 89 * hash + Objects.hashCode(this.getNombre()); return hash; ," for(int i = 0; i < colors.getRowCount(); ++i) { String name = (String)colors.getValueAt(i, 0); Color c = Main.pref.getDefaultColor(name); if (c != null) { colors.setValueAt(c, i, 1); "
0, super.onCreate(savedInstanceState); setResult(RESULT_CANCELED); mHandler = new IncomingHandler(); mMessenger = new Messenger(mHandler); if(savedInstanceState == null) { mState = STATE_START; ," final Thread thread = new Thread(new Runnable() { @Override public void run() { getBrowser().clStatusLock(); apply(getBrowser().getDCHost(), CRM.LIVE); getBrowser().clStatusUnlock(); "
0," StringBuilder sb = new StringBuilder(); sb.append(""{""); if (taskToken != null) sb.append(""TaskToken: "" + taskToken + "", ""); if (result != null) sb.append(""Result: "" + result + "", ""); sb.append("""," world = world.toLowerCase(); group = group.toLowerCase(); Map<String, FlagPermissions> groupworldperms = groupperms.get(group); if (groupworldperms == null) { return this.getPerms(world); "
0," byte [] resArray = new byte[this.controlMessage.length]; System.arraycopy(controlMessage, 0, resArray, 0, controlMessage.length); return new ControlMessage(this.clientId, resArray); "," MutableMap<String, String> map = UnifiedMap.newMap(); map.put(""nullValueKey"", null); Function0<String> function = new Function0<String>() { public String value() { return ""aValue""; "
1," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (replIdx: ""); result.append(replIdx); result.append(')'); return result.toString(); "," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (replIdx: ""); result.append(replIdx); result.append(')'); return result.toString(); "
1, Collection<EntryFieldConfig> list = getFieldConfigs(fieldConfig.getName()); if (list == null) return; list.remove(fieldConfig); if (list.isEmpty()) removeFieldConfigs(fieldConfig.getName()); , Collection<EntryFieldConfig> list = getFieldConfigs(fieldConfig.getName()); if (list == null) return; list.remove(fieldConfig); if (list.isEmpty()) removeFieldConfigs(fieldConfig.getName()); 
0," setId(ID); this.toolbar = toolbar; setToolTipText(""Open Capture File""); setImageDescriptor(AbstractUIPlugin.imageDescriptorFromPlugin(Activator.PLUGIN_ID, ""icons/open_capfile.png"")); "," final int length = 40; final int limit = 4; Integer vec[] = newRandomIntegers(length, 0, length); doPartialSort(vec, true, limit); assertTrue(isPartiallySorted(vec, limit, true)); "
1," Response response = GET(RP + ""getNotes""); assertIsOk(response); assertContentType(""application/json"", response); assertCharset(""utf-8"", response); assertContentEquals(""[{\""tit\"":\""foo\"""," Response XXXXX = GET(RP + ""getNotes""); assertIsOk(XXXXX); assertContentType(""application/json"", XXXXX); assertCharset(""utf-8"", XXXXX); assertContentEquals(""[{\""tit\"":\""foo\"""
0, int caretPosition = descriptionText.getCaretPosition(); getModifiedAttributeType().setDescription( descriptionText.getText() ); descriptionText.setSelection( caretPosition ); setEditorDirty(); ," JPanel panel = new JPanel(); panel.setPreferredSize(new Dimension(800, 400)); panel.setLayout(new BorderLayout()); panel.add(createTabbedPane(), BorderLayout.CENTER); return panel; "
1," makeResourcesVisible(this.solrConfig.getResourceLoader(), new String[] {MontySolrSetup.getMontySolrHome() + ""/contrib/examples/adsabs/solr/conf"", MontySolrSetup.getSolrHome() + ""/example/solr/conf"" "," makeResourcesVisible(this.solrConfig.getResourceLoader(), new String[] {MontySolrSetup.getMontySolrHome() + ""/contrib/examples/adsabs/solr/conf"", MontySolrSetup.getSolrHome() + ""/example/solr/conf"" "
0," Real position = Real.valueOf(0.0); for(Entity e : algorithm.getTopology()) { e.getProperties().put(EntityType.CANDIDATE_SOLUTION, Vector.newBuilder().repeat(dimensions, position).build()); "," Assert.assertFalse(stateManager.isDirty(persistent)); stateManager.setDirty(persistent, 0); stateManager.clearDirty(persistent); Assert.assertFalse(this.stateManager.isDirty(persistent)); "
0," final Surface<Double, Double, Double> lv = getLocalVolatility(impliedVolatilitySurface.getSurface()); return new LocalVolatilitySurfaceMoneyness(lv, impliedVolatilitySurface.getForwardCurve()); "," g.setColor(Color.BLACK); super.paintComponent(g); for(int i = 0; i <= ROWS; i++) { g.drawLine(i * CELLSIZE, 0, i * CELLSIZE, SIZE); g.drawLine(0, i * CELLSIZE, SIZE, i * CELLSIZE); "
1, mArtistTextView.setText(album.getArtistName()); mAlbumTextView.setText(album.getName()); mCoverImageView.setDefaultImage(R.drawable.no_cd); mCoverImageView.setImageUrl(album.getImage()); , mArtistTextView.setText(album.getArtistName()); mAlbumTextView.setText(album.getName()); mCoverImageView.setDefaultImage(R.drawable.no_cd); mCoverImageView.setImageUrl(album.getImage()); 
0, L1PcInstance targetPlayer = null; for (L1PcInstance pc : L1World.getInstance().getVisiblePlayer(this)) { if (pc.getCurrentHp() <= 0 || pc.isDead() || pc.isGm() || pc.isGhost()) { continue; ," String currentMood = Preferences.getString( ""currentMood"" ); if ( currentMood.equals( ""apathetic"" ) ) { InputFieldUtilities.alert( ""You cannot add triggers to an apathetic mood."" ); return; "
1," this.eventReceiver = eventReceiver; this.priority0Events = new MessageBox(-1,false); this.priority1Events = new MessageBox(blockSize,false); this.priority2Events = new MessageBox(blockSize,true); "," this.eventReceiver = eventReceiver; this.priority0Events = new MessageBox(-1,false); this.priority1Events = new MessageBox(blockSize,false); this.priority2Events = new MessageBox(blockSize,true); "
1," int w = 1024; int h = 768; BufferedImage img = new BufferedImage(w, h, BufferedImage.TYPE_INT_RGB); Graphics2D g = img.createGraphics(); Color[] colors = { Color.red, Color.green, Color.blue "," int w = 1024; int h = 768; BufferedImage img = new BufferedImage(w, h, BufferedImage.TYPE_INT_RGB); Graphics2D g = img.createGraphics(); Color[] colors = { Color.red, Color.green, Color.blue "
1," Assembler a = new ModelSourceAssembler(); ModelGetter g = (ModelGetter) a.open( resourceInModel( ""mg rdf:type ja:ModelSource"" ) ); assertInstanceOf( MemoryModelGetter.class, g ); "," Assembler XXXXX = new ModelSourceAssembler(); ModelGetter XXXXX = (ModelGetter) XXXXX.open( resourceInModel( ""mXXXXX rdf:type jXXXXX:ModelSource"" ) ); XXXXXssertInstXXXXXnceOf( MemoryModelGetter.clXXXXXss, XXXXX ); "
1," m_props = props; m_rootapp = new JRootApp(); if (m_rootapp.initApp(m_props)) { if (""true"".equals(props.getProperty(""machine.uniqueinstance""))) { try { m_instmanager = new InstanceManager(this); "," m_props = props; m_rootapp = new JRootApp(); if (m_rootapp.initApp(m_props)) { if (""true"".equals(props.getProperty(""machine.uniqueinstance""))) { try { m_instmanager = new InstanceManager(this); "
1," double result = 0; for (int row = 1; row <= board.getSize(); row++) { for (int col = 1; col <= board.getSize(); col++) { result += board.getValueAt(row, col) * getValue(row, col); "," double result = 0; for (int row = 1; row <= board.getSize(); row++) { for (int col = 1; col <= board.getSize(); col++) { result += board.getValueAt(row, col) * getValue(row, col); "
1, if (source.getOWLModel().equals(owlModel) == false) { owlModel = source.getOWLModel(); for (int i = 0; i < doNotCopySlots.length; i++) { doNotCopySlotsList.add(owlModel.getSlot(doNotCopySlots[i])); , XXXXXf (source.getOWLModel().equals(owlModel) == false) { owlModel = source.getOWLModel(); for (XXXXXnt XXXXX = 0; XXXXX < doNotCopySlots.length; XXXXX++) { doNotCopySlotsLXXXXXst.add(owlModel.getSlot(doNotCopySlots[XXXXX])); 
0," mState.mDrawable.setVisible(visible, restart); boolean changed = super.setVisible(visible, restart); if (visible) { if (changed || restart) { mCurrentDegrees = 0.0f; nextFrame(); "," GLData data = new GLData(); data.doubleBuffer = true; GLCanvas canvas = new GLCanvas(group, SWT.NO_BACKGROUND, data); canvas.addPaintListener(new PaintListener(this)); return canvas; "
0," synchronized (this) { if (_AESEngine == null) { if (""off"".equals(getProperty(""i2p.encryption"", ""on""))) _AESEngine = new AESEngine(this); else _AESEngine = new CryptixAESEngine(this); "," if (request.getString(""__action"") != null) { String action = request.getString(""__action""); try { if (action.equals(""showAllAnnotations"")) { this.model.setShowAllAnnotations(true); "
1," for(Listable elt = _head.next(), past = null; null != elt && past != _head.prev(); elt = (past = elt).next()) { if(null == o && null == elt.value()) { removeListable(elt); return true; "," for(Listable XXXXX = _head.next(), past = null; null != XXXXX && past != _head.prev(); XXXXX = (past = XXXXX).next()) { if(null == o && null == XXXXX.value()) { removeListable(XXXXX); return true; "
0," return ""MergeInfo [totalDocCount="" + totalDocCount + "", estimatedMergeBytes="" + estimatedMergeBytes + "", isExternal="" + isExternal + "", mergeMaxNumSegments="" + mergeMaxNumSegments + ""]""; ", if (node.getLabel() != null) { ValidationProblem problem = m_context.getBindingRoot(). getDefinitions().addNamedStructure(node); if (problem != null) { m_context.addProblem(problem); 
1," this.roomId = roomId; this.tableId = tableId; this.newPlayerPanel.setPlayerName(MageFrame.getSession().getUserName()); this.setModal(true); this.setLocation(100, 100); this.setVisible(true); "," this.roomId = roomId; this.tableId = tableId; this.newPlayerPanel.setPlayerName(MageFrame.getSession().getUserName()); this.setModal(true); this.setLocation(100, 100); this.setVisible(true); "
0, while (!commandLock.tryLock()) ; speed = convertSpeed(speed); robotState.setCurrentMovement(RobotState.Movement.GOING_FORWARD); robotState.setSpeedOfTravel(speed); commandLock.unlock(); ," int childNumberFlag = node.getIntProp(Node.ISNUMBER_PROP, -1); if (childNumberFlag != -1) { generateExpression(child, node); generateExpression(child.getNext(), node); cfw.add(opCode); "
1," if(isZero()) return ""0""; if(isOne()) return ""1""; if(isInfinity()) return ""inf""; if(isNan()) return ""NaN""; if(isInteger()) return String.valueOf(intValue()); return value.toString(); "," if(isZero()) return ""0""; if(isOne()) return ""1""; if(isInfinity()) return ""inf""; if(isNan()) return ""NaN""; if(isInteger()) return String.valueOf(intValue()); return value.toString(); "
1," textResources = createHashMap(); textResources.put(""file1"", ""file1 content""); textResources.put(""path/to/"", ""list""); textResources.put(""path/to/file2"", ""file2 content""); page = new MyProcessor(); "," textResources = createHashMap(); textResources.put(""file1"", ""file1 content""); textResources.put(""path/to/"", ""list""); textResources.put(""path/to/file2"", ""file2 content""); page = new MyProcessor(); "
0, Context context = ContextHolder.getContext(); SecureContext sc = null; if ((context == null) || !(context instanceof SecureContext)) { sc = new SecureContextImpl(); ContextHolder.setContext(sc); ," auditLogger.info(String.format(""KICKED: %s (%s) kicked player '%s': %s"", PlayerUtil.toUniqueName(source), CommandBook.inst().toInetAddressString(source), player.getName(), reason)); "
1," validateParameters(user, ""userName|id"", ""roles.id|name""); StringBuilder buf = new StringBuilder(); String userArg = null; if (user.isSetId()) { userArg = PowerShellUtils.escape(user.getId()); "," validateParameters(user, ""userName|id"", ""roles.id|name""); StringBuilder XXXXX = new StringBuilder(); String XXXXX = null; if (user.isSetId()) { XXXXX = PowerShellUtils.escape(user.getId()); "
1," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (clazz: ""); result.append(clazz); result.append(')'); return result.toString(); "," if (eIsProxy()) return super.toString(); StringBuffer XXXXX = new StringBuffer(super.toString()); XXXXX.append("" (clazz: ""); XXXXX.append(clazz); XXXXX.append(')'); return XXXXX.toString(); "
1," ConcurrentMap<String, GridLocalEventListener> nodeLoc = G.grid().nodeLocal(); GridLocalEventListener prev = nodeLoc.remove(""lsnr""); if (prev != null) G.grid().removeLocalEventListener(prev); "," ConcurrentMap<String, GridLocalEventListener> nodeLoc = G.grid().nodeLocal(); GridLocalEventListener XXXXX = nodeLoc.remove(""lsnr""); if (XXXXX != null) G.grid().removeLocalEventListener(XXXXX); "
1, while ( !(request instanceof WikiRequestWrapper ) && request != null && request instanceof HttpServletRequestWrapper ) { request = ((HttpServletRequestWrapper) request).getRequest(); , while ( !(request instanceof WikiRequestWrapper ) && request != null && request instanceof HttpServletRequestWrapper ) { request = ((HttpServletRequestWrapper) request).getRequest(); 
1," DummyTransactionManager dummyTm = (DummyTransactionManager) TestingUtil.getTransactionManager(cache); try { dummyTm.begin(); cache.put(key, ""v""); return (DummyTransaction) dummyTm.suspend(); "," DummyTransactionManager XXXXX = (DummyTransactionManager) TestingUtil.getTransactionManager(cache); try { XXXXX.begin(); cache.put(key, ""v""); return (DummyTransaction) XXXXX.suspend(); "
0," if (logger.level <= Logger.FINEST) { String s = ""In "" + getNodeId() + ""'s route set, "" + ""node "" + nh.getNodeId() + "" was ""; if (wasAdded) s += ""added""; else s += ""removed""; System.out.println(s); ", final File[] files = message.getFile(); final FileFilter filter = getFileType(); for (int i = 0; i < files.length; i++) { if (filter.accept(files[i])) { theController.openFile(files[i]); 
0," String surefirePath = this.surefireDir.getAbsolutePath(); String testList = ErlUtils.toModuleList(this.tests, ""'"", ""'""); return String.format(this.script, surefirePath, this.suiteName, testList); ", this.editable = new AtomicBoolean(true); this.screenArea = new Rectangle(); this.hasCenteringTransforms = false; this.matchingAspectRatio = matchAspectRatio; copyBounds(bounds); setTransforms(true); 
0," auditLogger.info(String.format(""KICKED: %s (%s) kicked player '%s': %s"", PlayerUtil.toUniqueName(source), CommandBook.inst().toInetAddressString(source), player.getName(), reason)); "," System.out.print( "" | ******* | ** | *******| ******/| ** | ****/ \n""+ ""| **____/ \\_______/|_______/|_______/ |__/ \\_______/ \\______/ |__/ \\___/ \n""+ ""| ** \n""+ ""| ** \n""+ ""|__/ \n""+ ""\n""); "
1," StringBuffer buf = new StringBuffer(); buf.append(""Class (address=""); buf.append(getOop().getHandle()); buf.append("", name=""); buf.append(jklass.getName()); buf.append(')'); return buf.toString(); "," StringBuffer XXXXX = new StringBuffer(); XXXXX.append(""Class (address=""); XXXXX.append(getOop().getHandle()); XXXXX.append("", name=""); XXXXX.append(jklass.getName()); XXXXX.append(')'); return XXXXX.toString(); "
0," return ((OutputWriter) op).toString() + "" inputs [ "" + ((OutputWriter) right).toString() + "" "" + ((OutputWriter) middle).toString() + "" "" + ((OutputWriter) left).toString() + "" ]""; ", try { KeyboardLayoutManager mgr = InitialNaming.lookup(KeyboardLayoutManager.NAME); for (String layout : mgr.layouts()) { if (layout.startsWith(partial)) { completions.addCompletion(layout); 
0," assertEquals(73.33, Utils.roundToDecimals(PeptideProperties.getApliphaticIndex(sequence), 2)); assertEquals(0.0, Utils.roundToDecimals(PeptideProperties.getApliphaticIndex(fullInvalidSequence), 2)); "," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "
0, Document document = documentDAO.findById(documentId); if (document != null && homeFolder != null) { if (document.getLinkedHomeFolder() != homeFolder) { document.setLinkedHomeFolder(homeFolder); , if (preference == mCustomDensity) { String strValue = (String) newValue; if (strValue.equals(getResources().getString(R.string.custom_density))) { showDialog(DIALOG_DENSITY); return true; 
0," AttributeType attr = getEnvironment().get(name); if (attr == null) { attr = new AttributeType(); attr.setName(name); attr.setVisible(true); attr.setReadOnly(true); getEnvironment().put(name, attr); "," return ""<orb-data><name>"" + ORBType.jacorb+""</name><version><major>2</major><minor>0</minor></version><corba-version><major>2</major><minor>3</minor></corba-version></orb-data>""; "
1, final JTableCellWriter writer = createMock(JTableCellWriter.class); new EasyMockTemplate(driver()) { @Override protected void expectations() { driver().cellWriter(writer); expectLastCall().once(); , final JTableCellWriter XXXXX = createMock(JTableCellWriter.class); new EasyMockTemplate(driver()) { @Override protected void expectations() { driver().cellWriter(XXXXX); expectLastCall().once(); 
1," Context cx = ContextFactory.getGlobal().enterContext(); JsNamedNodeMap newObject = (JsNamedNodeMap)cx.newObject(scope, ""NamedNodeMap""); newObject.initialize(map); return newObject; "," Context XXXXX = ContextFactory.getGlobal().enterContext(); JsNamedNodeMap XXXXX = (JsNamedNodeMap)XXXXX.XXXXX(scope, ""NamedNodeMap""); XXXXX.initialize(map); return XXXXX; "
1," try { return bundleContext.createFilter( ""(&("" + Constants.OBJECTCLASS + ""="" + PaxAppender.class.getName() + "")"" + ""("" + PaxLoggingService.APPENDER_NAME_PROPERTY + ""="" + name + ""))""); "," try { return bundleContext.createFilter( ""(&("" + Constants.OBJECTCLASS + ""="" + PaxAppender.class.getName() + "")"" + ""("" + PaxLoggingService.APPENDER_NAME_PROPERTY + ""="" + name + ""))""); "
0," if (stdout != null && stdout.length() > 0) { printTo.println(""========= Child VM System.out ========""); printTo.print(stdout); printTo.println(""======================================""); "," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; "
1," if (featOkTst && casFeat_category == null) jcas.throwFeatMissing(""category"", ""org.apache.clerezza.uima.utils.ts.WikipediaEntity""); return ll_cas.ll_getStringValue(addr, casFeatCode_category); "," if (featOkTst && casFeat_category == null) jcas.throwFeatMissing(""category"", ""org.apache.clerezza.uima.utils.ts.WikipediaEntity""); return ll_cas.ll_getStringValue(addr, casFeatCode_category); "
0," super(ParentBChildBar.class, ""parent_b_child_bar"", alias); this.columns.add(this.id); this.columns.add(this.name); this.columns.add(this.version); this.columns.add(this.parentBParent); "," File afile = new File(""cache\\"" + filename); String end = filename.split(""\\."")[1]; if(!afile.exists()) { System.out.println(""File "" + afile.getAbsolutePath() +"" not there""); return; "
0, Dependency dependency; dependency = (Dependency) sentinel.getSuccessorList().findRight(task); if (dependency != null) { sentinel.getSuccessorList().remove(dependency); return true; ," assert locator != null; e.setLineNumber( locator.getLineNumber( ) ); MetaLogManager.log( e.getMessage( ), e ); logger.log( Level.SEVERE, e.getMessage( ) ); errors.add( e ); return e; "
0," BrixNode brixNode = (BrixNode) node; BrixFileNode.initialize(node, ""text/html""); brixNode.setNodeType(TYPE); return new GlobalContainerNode(node.getDelegate(), node.getSession()); ", boolean res = true; if (st != null) res &= ((NodeHWCNetwork)myNetwork).adjustWeightedData(((SimulationSettingsHWC)st).getVehicleWeights()); res &= super.setMySettings(st); return res; 
1, VariableDeclarationExpression x1 = this.ast.newVariableDeclarationExpression(this.W1); if (this.ast.apiLevel() >= JLS3_INTERNAL) { x1.modifiers().add(this.MOD1); x1.modifiers().add(this.MOD2); , VariableDeclarationExpression XXXXX = this.ast.newVariableDeclarationExpression(this.W1); if (this.ast.apiLevel() >= JLS3_INTERNAL) { XXXXX.modifiers().add(this.MOD1); XXXXX.modifiers().add(this.MOD2); 
0, String propertyFiles= prefs.getString(IPhingCoreConstants.PREFERENCE_PROPERTY_FILES); if (propertyFiles.equals(IPhingCoreConstants.EMPTY_STRING)) { customPropertyFiles= new String[0]; , IDocument document = fSourceViewer != null ? fSourceViewer .getDocument() : null; if (document == null) return fIsCanceled; synchronized (getLockObject(document)) { return fIsCanceled; 
0, try { byte[] xmlBytes = o.toString().getBytes(); StAXOMBuilder builder = new StAXOMBuilder(new ByteArrayInputStream(xmlBytes)); OMElement omElement = builder.getDocumentElement(); return omElement; , schemes = SchemeManager.getInstance(); intervals = new ArrayList<Interval>(); try { ZipFile zip = new ZipFile(file); ZipEntry entry = zip.getEntry(LITHOLOGY_DATA); if (entry == null) { return false; 
1," addRequestParameter(""type"", type); addRequestParameter(""delete"", ""Delete""); setRequestPathInfo(""/modifyQuery""); actionPerform(); verifyActionErrors(new String[]{""errors.modifyQuery.noselect"""," addRequestParameter(""type"", type); addRequestParameter(""delete"", ""Delete""); setRequestPathInfo(""/modifyQuery""); actionPerform(); verifyActionErrors(new String[]{""errors.modifyQuery.noselect"""
0," Encoding result = fixture.getEncoding(); assertNotNull(result); assertEquals(""ASCII"", result.name()); assertEquals(""ASCII"", result.toString()); assertEquals(1, result.ordinal()); "," doSetUp(deltaAStart, deltaAEnd, deltaBStart, deltaBEnd, deltaRect); routing.removeObstacle(deltaRect.getCopy()); assertTrue(""Both paths should have been solved."", routing.solve() .size() > 0); "
0," name = name.trim(); if (name == null || name.length() < 1) return DEFAULT_SERVER; if (name.equalsIgnoreCase(""ACTIVE.DIRECTORY"")) return ACTIVE_DIRECTORY_SERVER; return DEFAULT_SERVER; ", if (element instanceof IViewCategory) return PlatformUI.getWorkbench().getViewRegistry(); else if (element instanceof IViewDescriptor) return parents.get(element); else return null; 
0," if (assigneeDialog == null) assigneeDialog = new AssigneeDialog(EditIssueActivity.this, ISSUE_ASSIGNEE_UPDATE, repository, collaboratorService); assigneeDialog.show(issue.getAssignee()); "," if (response) { Log.info(""Value saved successfully""); initPatientInSemester(true, false,false); showApplicationLoading(false); manualStdPatientInSemesterAssignmentPopupViewImpl.hide(); "
0," String friendlyName = m_properties.getProperty(""home-page-friendly-name"", defaultHomePageName); return (friendlyName == null || """".equals(friendlyName)) ? defaultHomePageName : friendlyName; ", getterCalled(); Set additions = new HashSet(); Iterator it = c.iterator(); while (it.hasNext()) { Object element = it.next(); if (wrappedSet.add(element)) { additions.add(element); 
1, assertThat(activity.snakeCaseButtonEventHandled).isFalse(); activity.findViewById(R.id.snake_case_button).performClick(); assertThat(activity.snakeCaseButtonEventHandled).isTrue(); , assertThat(activity.snakeCaseButtonEventHandled).isFalse(); activity.findViewById(R.id.snake_case_button).performClick(); assertThat(activity.snakeCaseButtonEventHandled).isTrue(); 
0, TestSuite testSuite = new TestSuite(); testSuite.addTest(Login52xTests.suite()); testSuite.addTest(SampleData528Tests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; ," OWLAxiom[] axioms = { OWL.classAssertion( a, C ), OWL.classAssertion( b, C ), OWL.classAssertion( c, C ), OWL.sameAs( a, b ), OWL.differentFrom( b, c ), OWL.differentFrom( a, c ) "
1," switch (featureID) { case SysMLdiffPackage.SYS_ML_STEREOTYPE_REFERENCE_CHANGE_LEFT_TARGET__HIDE_ELEMENTS: return ((InternalEList<?>)getHideElements()).basicRemove(otherEnd, msgs); "," switch (featureID) { case SysMLdiffPackage.SYS_ML_STEREOTYPE_REFERENCE_CHANGE_LEFT_TARGET__HIDE_ELEMENTS: return ((InternalEList<?>)getHideElements()).basicRemove(otherEnd, msgs); "
1, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(MailIntegrationTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , TestSuite XXXXX = new TestSuite(); XXXXX.addTest(LoginTests.suite()); XXXXX.addTest(MailIntegrationTestPlan.suite()); XXXXX.addTestSuite(StopSeleniumTest.class); return XXXXX; 
1, this.inputPath = inputPath; this.importFolderPath = importFolderPath; this.importSetTitle = importSetTitle; this.interactiveMode = interactiveMode; this.removeImportedFolder = removeImportedFolder; , this.inputPath = inputPath; this.importFolderPath = importFolderPath; this.importSetTitle = importSetTitle; this.interactiveMode = interactiveMode; this.removeImportedFolder = removeImportedFolder; 
1," int responseCode = 200; String data; try { data = Utils.readLine(in); if (data != null) { httpRequest.updatePath(data); header.append(data).append(""\r\n""); responseCode = parseResponseCode(data); "," int responseCode = 200; String data; try { data = Utils.readLine(in); if (data != null) { httpRequest.updatePath(data); header.append(data).append(""\r\n""); responseCode = parseResponseCode(data); "
0, final RefactoringDescriptorProxy[] proxies= getRefactoringDescriptors(); if (fCurrentRefactoring >= 0 && fCurrentRefactoring < proxies.length) return proxies[fCurrentRefactoring]; return null; ," if (e.getKeyCode() == KeyEvent.VK_ENTER) { final int index = jList1.getSelectedIndex(); doubleClick((SimpleLine2) jList1.getModel().getElementAt(index), jList1.getModel(), index); "
0," assertNull( content.getStyleClass( ) ); content.setStyleClass( ""style1"" ); assertEquals( ""style1"", content.getStyleClass( ) ); content.setStyleClass( null ); assertNull( content.getStyleClass( ) ); "," super.layout(parent); Dimension parentSize = parent.getSize(); lineAcross.setPoints(new PointList(new int[] { 0, parentSize.height / 2, parentSize.width - 1, parentSize.height / 2 "
0," if(authUser.equalsIgnoreCase(""console"")) return true; if(parent.getConfiguration().getBoolean(""allowOPsAll"",false)) return parent.getServer().getPlayer(authUser).isOp(); return false; "," Alert.edit(A.s(R.string.msg_nums_edit), PrefixNum.get(), new Alert.Edited() { @Override public void on(String num) { num = num.trim(); if(num.length() < 2) { A.toast(R.string.err_name); return; "
0," JavaArchive archive = SeamCronSchedulingTCKTest.createSchedulingTckTestArchive().addPackages(true, QueuJScheduleProvider.class.getPackage()); log.debug(archive.toString(true)); return archive; ", Set<String> fieldNames = dataSource.getDeclaredFields().keySet(); for (String fieldName : fieldNames) { if (dataSource.isFieldRequired(fieldName) && isNullField(fieldName)) { return false; 
0," IExpressionDMContext exprDMC = expressionService.createExpression(dmc, expression); if (fCastToTypeSupport != null) { exprDMC = fCastToTypeSupport.replaceWithCastedExpression(exprDMC); "," Function<Boolean,Boolean> function = ArrangementConstants.UPDATE_MOVE_RULE_FUNCTION_KEY.getData(e.getDataContext()); e.getPresentation().setEnabled(function != null && function.fun(false)); "
1, if ( parameters == null || parameters.trim().length() == 0 ) { this.startMinDev = 1; this.startMaxDev = Long.MAX_VALUE; this.endMinDev = 1; this.endMaxDev = Long.MAX_VALUE; return; , if ( parameters == null || parameters.trim().length() == 0 ) { this.startMinDev = 1; this.startMaxDev = Long.MAX_VALUE; this.endMinDev = 1; this.endMaxDev = Long.MAX_VALUE; return; 
0, if (obj instanceof ModuleAdapter) { ModuleAdapter other = (ModuleAdapter) obj; String otherPath = other.getFile().getAbsolutePath(); return file.getAbsolutePath().equalsIgnoreCase(otherPath); ," StringBuffer buf = new StringBuffer(); for (int i = 0; i < path.length(); i++) { char c = path.charAt(i); if (Platform.getOS().equals(""win32"")) { if (i == 0 && c == '/') continue; "
1," final String pathToDir = System.getProperty(""org.apache.geronimo.server.dir"") + ""/var/monitoring/""; File dir = new File(pathToDir); if(dir.exists() && dir.isDirectory()) { return; "," final String XXXXX = System.getProperty(""org.apache.geronimo.server.XXXXX"") + ""/var/monitoring/""; File XXXXX = new File(XXXXX); if(XXXXX.exists() && XXXXX.isDirectory()) { return; "
1, MPFConfigurationUI configurationUI = new MPFConfigurationUI(MPFSelection.this); String fname = configurationUI.getProjectDirectory(); if (fname != null) filesSelected(new File[] { new File(fname) , MPFConfigurationUI XXXXX = new MPFConfigurationUI(MPFSelection.this); String XXXXX = XXXXX.getProjectDirectory(); if (XXXXX != null) filesSelected(new File[] { new File(XXXXX) 
1," int ndx = 0; if (null == o) { for(Listable elt = _head.next(), past = null; null != elt && past != _head.prev(); elt = (past = elt).next()) { if (null == elt.value()) { return ndx; "," int XXXXX = 0; if (null == o) { for(Listable XXXXX = _head.next(), past = null; null != XXXXX && past != _head.prev(); XXXXX = (past = XXXXX).next()) { if (null == XXXXX.value()) { return XXXXX; "
1, switch (item.getItemId()) { case android.R.id.home: setResult(RESULT_CANCELED); finish(); return true; case R.id.create_new_contact: { startCreateNewContactActivity(); return true; , switch (item.getItemId()) { case android.R.id.home: setResult(RESULT_CANCELED); finish(); return true; case R.id.create_new_contact: { startCreateNewContactActivity(); return true; 
1, AccessTokenRequestOption[] values = AccessTokenRequestOption.values(); for (AccessTokenRequestOption option : values) { if (option.getOption().equalsIgnoreCase(optionValue)) { return option; , AccessTokenRequestOption[] values = AccessTokenRequestOption.values(); for (AccessTokenRequestOption option : values) { if (option.getOption().equalsIgnoreCase(optionValue)) { return option; 
1, Thread thread = Thread.currentThread(); ThreadGroup group = thread.getThreadGroup(); while (group != null) { if (group instanceof ContextThreadGroup) { return (ContextThreadGroup)group; , Thread thread = Thread.currentThread(); ThreadGroup group = thread.getThreadGroup(); while (group != null) { if (group instanceof ContextThreadGroup) { return (ContextThreadGroup)group; 
0," if(workbook.getNumExFormats() == MAX_STYLES) { throw new IllegalStateException(""The maximum number of cell styles was exceeded. "" + ""You can define up to 4000 styles in a .xls workbook""); ", this.client = client; this.amountPaid = amountPaid; this.timePaid = timePaid; this.timeConfirmed = null; this.account = account; this.notes = notes; this.status = status; this.paymentId = paymentId; 
0," Log.d(""hereader"", ""entering NewsItemsFragment.showDetails""); if (mDualPane) { Log.d(""hereader"", ""Is dual pane""); if (currentPosition >= 0) { items.get(currentPosition).setSelected(false); "," assertEquals(callCount, calc.getCallCount()); assertEquals(errorCount, calc.getErrorCount()); assertEquals(totalTime, calc.getTotalTime()); assertEquals(avgTime, calc.getAverageTime()); "
1," try { int intValue = Integer.valueOf(value); Settings.Secure.putInt(getContentResolver(), Settings.Secure.INPUT_METHOD_SELECTOR_VISIBILITY, intValue); updateInputMethodSelectorSummary(intValue); "," try { int XXXXX = Integer.valueOf(value); Settings.Secure.putInt(getContentResolver(), Settings.Secure.INPUT_METHOD_SELECTOR_VISIBILITY, XXXXX); updateInputMethodSelectorSummary(XXXXX); "
0," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (charset: ""); result.append(charset); result.append(')'); return result.toString(); "," char ch = nextChar(); if (ch == '\\') { RegexpTree t = parseAtom(); if (t instanceof Text) return -((Text) t).getString().charAt( 0 ); throw new SyntaxException( ""not allowed in class"" ); "
1," log.debug(""section number: "" + sectionNumber); return (wordmlPackage.getDocumentModel().getSections().get(sectionNumber-1) .getHeaderFooterPolicy().getDefaultFooter() == null ? false : true); "," log.debug(""section number: "" + sectionNumber); return (wordmlPackage.getDocumentModel().getSections().get(sectionNumber-1) .getHeaderFooterPolicy().getDefaultFooter() == null ? false : true); "
0," super(xsr); this.name = name; this.faults = new ArrayList<WSDLFaultImpl>(); this.faultMap = new QNameMap<WSDLFaultImpl>(); this.faultActionMap = new HashMap<String,String>(); this.owner = owner; "," String label = ((org.osate.aadl2.System) object).getName(); return label == null || label.length() == 0 ? getString(""_UI_System_type"") : getString(""_UI_System_type"") + "" "" + label; "
1, if(editedObject instanceof CollaborationUse) { CollaborationUseGenerator generator = new CollaborationUseGenerator(((CollaborationUse)editedObject)); generator.parseAndModifyCollaborationUse(text); , if(editedObject instanceof CollaborationUse) { CollaborationUseGenerator XXXXX = new CollaborationUseGenerator(((CollaborationUse)editedObject)); XXXXX.parseAndModifyCollaborationUse(text); 
0, shutdownAdapter = adapter; if( shutdownAdapter != null ) { shutdownAdapter.setSessionStore( this ); shutdownAdapter.setShutdownCallback( new Runnable() { public void run() { doValueUnbound(); , if (intent.hasExtra(EXTRA_MESSENGER)) { Messenger callback = intent.getParcelableExtra(EXTRA_MESSENGER); Message msg = Message.obtain(); msg.arg1 = result; try { callback.send(msg); 
0, if (componentConfiguration.getComponentDescription() instanceof EJBComponentDescription == false) { throw MESSAGES.invalidComponentConfiguration(componentConfiguration.getComponentName()); ," logger.debug(""assertConfirmation: "" + replaceParam(elem.getAttributeValue(""value""))); this.sel.waitForCondition(""selenium.isConfirmationPresent();"", ""1000""); this.sel.getConfirmation(); "
1, return exp.visit( new ExpressionCloner(grammar.getPool()){ public Expression onRef( ReferenceExp exp ) { if( exp2name.containsKey(exp) ) return exp; else return exp.exp.visit(this); , return exp.visit( new ExpressionCloner(grammar.getPool()){ public Expression onRef( ReferenceExp exp ) { if( exp2name.containsKey(exp) ) return exp; else return exp.exp.visit(this); 
0," synchronized (this) { if ( inRead > 0 ) error(BeginUpdate, ""beginUpdate when already in read"") ; if ( inUpdate ) error(BeginUpdate, ""beginUpdate when already in update"") ; inUpdate = true ; "," Point min = new ArrayPoint(1f, -0.149f, 129.1f, -591.023f, -8.137f); Point max = new ArrayPoint(10.11f, 5.931f, 251.9f, -0.006f, 2.041f); return new OrthogonalSpaceImpl(min, max, createOdeSystem()); "
0," Model m = ModelFactory.createDefaultModel(); m.createResource(""foo"").addProperty(RDF.value, ""bar""); m.write(new OutputStream() { @Override public void write(int b) throws IOException { ", FlowContext traversedContext = this; while (traversedContext != null) { SubRoutineStatement sub; if (((sub = traversedContext.subroutine()) != null) && sub.isSubRoutineEscaping()) { return; 
1, if (processInfo.getMexInterceptors() != null) { for (TMexInterceptor mexInterceptor : processInfo.getMexInterceptors(). getMexInterceptorList()) { mexInterceptors.add(mexInterceptor.getClassName()); , if (processInfo.getMexInterceptors() != null) { for (TMexInterceptor mexInterceptor : processInfo.getMexInterceptors(). getMexInterceptorList()) { mexInterceptors.add(mexInterceptor.getClassName()); 
0, Element lineElement = document.getDefaultRootElement() .getElement(line); if(lineElement == null) return -1; else return lineElement.getEndOffset() - lineElement.getStartOffset() - 1; , this.openedDate = openedDate; this.totalDeposits = totalDeposits; this.totalWithdrawals = totalWithdrawals; this.totalInterestEarned = totalInterestEarned; this.missedDeposits = missedDeposits; 
1," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," EditorCell XXXXX = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, XXXXX, editorContext); return XXXXX; "
1," initComponents(); int textSliderGap = UIManager.getInt(""ColorChooser.textSliderGap""); if (textSliderGap != 0) { BorderLayout layout = (BorderLayout) getLayout(); layout.setHgap(textSliderGap); "," initComponents(); int XXXXX = UIManager.getInt(""ColorChooser.XXXXX""); if (XXXXX != 0) { BorderLayout XXXXX = (BorderLayout) getLayout(); XXXXX.setHgap(XXXXX); "
1," reset(request); expect(request.getAttribute(ScreenEventUtil.SCREEN_EVENT_KEY)).andReturn(attr).anyTimes(); replay(request); assertEquals(expectedValue, ScreenEventUtil.getEventName(request)); "," reset(request); expect(request.getAttribute(ScreenEventUtil.SCREEN_EVENT_KEY)).andReturn(attr).anyTimes(); replay(request); assertEquals(expectedValue, ScreenEventUtil.getEventName(request)); "
1," String candidateName = candidate.getRequested().getGroup() + "":"" + candidate.getRequested().getName() + "":"" + candidate.getRequested().getVersion(); return candidateName.contains(stringNotation); "," String XXXXX = candidate.getRequested().getGroup() + "":"" + candidate.getRequested().getName() + "":"" + candidate.getRequested().getVersion(); return XXXXX.contains(stringNotation); "
0, long umsatz = getUmsatzAsLong(); BigDecimal prozent = new BigDecimal(umsatz).divide(new BigDecimal(100)); long gewinn = Math.round(prozent.doubleValue() * 20); return formatUmsatz(gewinn); , this.src = src; this.dst = dst; this.srcNamespaceId = srcNamespaceId; this.dstNamespaceId = dstNamespaceId; this.supportFederation = supportFederation; this.srcDn = srcDn; this.dstDn = dstDn; 
0," if (isLiveOrCompiled()) if(!this.getCapability(ALLOW_STRING_WRITE)) throw new CapabilityNotSetException(J3dI18N.getString(""Text3D3"")); ((Text3DRetained)this.retained).setString(string); "," list.lock.lock(); try { checkModifications(); int removed = list.retainAll(c, start, read.size); if (removed > 0) { read = new SubListReadData(read.size - removed, list .getData()); return true; "
1," final String info = getOrigCommentInfo(psiField); if (info == null) return null; JDComment comment = getParser().parse(info, new JDComment(this)); return comment.generate(getIndent(psiField)); "," final String XXXXX = getOrigCommentInfo(psiField); if (XXXXX == null) return null; JDComment XXXXX = getParser().parse(XXXXX, new JDComment(this)); return XXXXX.generate(getIndent(psiField)); "
1," if (featOkTst && casFeat_function == null) jcas.throwFeatMissing(""function"", ""org.u_compare.shared.syntactic.FunctionTaggedConstituent""); ll_cas.ll_setRefValue(addr, casFeatCode_function, v);"," if (featOkTst && casFeat_function == null) jcas.throwFeatMissing(""function"", ""org.u_compare.shared.syntactic.FunctionTaggedConstituent""); ll_cas.ll_setRefValue(addr, casFeatCode_function, v);"
1, mouseInputEventProcessor.process(mouseInputEvent); boolean handled = forwardMouseEventToScreen(mouseInputEvent); handleDynamicElements(); pool.free(mouseInputEvent); return handled; , mouseInputEventProcessor.process(mouseInputEvent); boolean XXXXX = forwardMouseEventToScreen(mouseInputEvent); handleDynamicElements(); pool.free(mouseInputEvent); return XXXXX; 
1," DropInfo info = new DropInfo(); info.dockable = upper; info.combine = getWindow( lower ); if( info.combine == null ){ throw new IllegalArgumentException( ""lower is not a child of this station"" ); "," DropInfo XXXXX = new DropInfo(); XXXXX.dockable = upper; XXXXX.combine = getWindow( lower ); if( XXXXX.combine == null ){ throw new IllegalArgumentException( ""lower is not a child of this station"" ); "
0," Iterator<Integer> ti = new TransformingIterator<Integer, Integer>(Collections.<Integer>emptyList().iterator()) { @Override protected Integer transform(Integer input) { return null; ", waitForProcessTermination(); IProcess[] processes = launch.getProcesses(); if (processes!=null && processes.length>0) { Assert.isTrue(processes.length==1); return (GradleProcess) processes[0]; 
1," try { StaticHibernateUtil.startTransaction(); if (day != null) { configurationPersistence.createOrUpdateConfigurationKeyValueString(MONTH_CLOSING_DAY_CONFIG_KEY, DateUtils.toDatabaseFormat(day)); "," try { StaticHibernateUtil.startTransaction(); if (day != null) { configurationPersistence.createOrUpdateConfigurationKeyValueString(MONTH_CLOSING_DAY_CONFIG_KEY, DateUtils.toDatabaseFormat(day)); "
0," HttpSession session = request.getSession(); String sql = (String) session.getAttribute(""pmidbuffer""); if(sql==null){ Common.requestforward(response, ""admincp.jsp?action=pmprune""); return null; "," MapView mapView = mFragment.getMapView(); enableHWAccel(mapView, true); List<Overlay> overlays = mapView.getOverlays(); if (mLineOverlay != null) { overlays.remove(mLineOverlay); "
1," this._tableName = tableName ; this._deleteSQL = ""DELETE FROM "" + tableName + "" WHERE date>?"" ; this._insertSQL = ""INSERT INTO "" + tableName + "" (opurl, nonce, date) VALUES (?,?,?)"" ; "," this._tableName = tableName ; this._deleteSQL = ""DELETE FROM "" + tableName + "" WHERE date>?"" ; this._insertSQL = ""INSERT INTO "" + tableName + "" (opurl, nonce, date) VALUES (?,?,?)"" ; "
1," BlockingTaskOperationResponseHandler responseHandler = new BlockingTaskOperationResponseHandler(); taskService.suspend(taskId, userId, responseHandler); try { responseHandler.waitTillDone(timeout); "," BlockingTaskOperationResponseHandler XXXXX = new BlockingTaskOperationResponseHandler(); taskService.suspend(taskId, userId, XXXXX); try { XXXXX.waitTillDone(timeout); "
0," if (model.getDestination() == null || model.getMoney().getAmount() == null || model.getMoney().getCurrency() == null) { view.getStatusBar().setText(""Complete all fields to send message""); return; ", try { File f = new File(fileName); Document dom = null; try { DocumentBuilderFactory dbf = DocumentBuilderFactory .newInstance(); DocumentBuilder db = dbf.newDocumentBuilder(); dom = db.parse(f); 
0," if ((interactionUnderway && !iOwnInteraction) || (!modifiersMatch(e, mods))) { if (press) { interactionUnderway = true; iOwnInteraction = false; ManipManager.getManipManager().mousePressed(e); "," env.virtualMachine.setNameLabel(PREFIX + ""-label-updated""); env.virtualMachine.update(); env.virtualMachine.refresh(); assertEquals(env.virtualMachine.getNameLabel(), PREFIX + ""-label-updated""); "
0," OMFactory fac = OMAbstractFactory.getOMFactory(); OMNamespace omNs = fac.createOMNamespace(""http: OMElement payload = fac.createOMElement(""insert_Employees_operation"", omNs); return payload; "," String oldTitle = title; title = newTitle; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, XhtmlPackage.XHTML_OBJECT_TYPE__TITLE, oldTitle, title)); "
0," if (!mTimeout) { if (mCurrentDialog == DIALOG_YES_NO_CONNECT) { sendIntentToReceiver(BluetoothMasService.ACCESS_ALLOWED_ACTION, BluetoothMasService.EXTRA_ALWAYS_ALLOWED, mAlwaysAllowedValue); "," SecurityManager security = System.getSecurityManager(); if (security != null) { if (fullScreenExclusivePermission == null) { fullScreenExclusivePermission = new AWTPermission(""fullScreenExclusive""); "
0, int result = catalog != null ? catalog.hashCode() : 0; result = 31 * result + (tableName != null ? tableName.hashCode() : 0); result = 31 * result + (temporary ? 1 : 0); return result; ," List<MibObject> mibObjects = dao.getMibObjectList(""default"", systemOid, ""127.0.0.1"", -1); Assert.assertNotNull(mibObjects); Assert.assertEquals(expectedCount, mibObjects.size()); "
0," boolean oldInitial = initial; initial = newInitial; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, Aadl2Package.MODE__INITIAL, oldInitial, initial)); ", setText(ActionsMessages.TestsHierarchyExpandAllAction_text); setToolTipText(ActionsMessages.TestsHierarchyExpandAllAction_tooltip); this.testsHierarchyTreeViewer = testsHierarchyTreeViewer; 
1, final Class<?> clazz = delegate.getClass(); Method mtd = methodsCache.get(clazz); Class<?> unwrapQuery = unwrapCache.get(clazz); if (mtd == null) { try { mtd = clazz.getMethod(GET_QUERY_STRING_MTD); , final Class<?> clazz = delegate.getClass(); Method XXXXX = methodsCache.get(clazz); Class<?> unwrapQuery = unwrapCache.get(clazz); if (XXXXX == null) { try { XXXXX = clazz.getMethod(GET_QUERY_STRING_MTD); 
0," HttpServletRequest request = HDIVUtil.getHttpServletRequest(); String action = ""/testAction.do""; String result = this.formUrlProcessor.processUrl(request, action); assertEquals(action, result); "," IConfigurationElement config = element.getConfigurationElement(); String value = config.getAttribute(name); if (value == null) return null; return new Boolean(value.equalsIgnoreCase(""true"")); "
0," String label = ((EvidenceElement)object).getId(); return label == null || label.length() == 0 ? getString(""_UI_EvidenceElement_type"") : getString(""_UI_EvidenceElement_type"") + "" "" + label; "," ContentValues initialValues = new ContentValues(); initialValues.put(KEY_TITLE, title); initialValues.put(KEY_BODY, body); return mDb.insert(DATABASE_TABLE, null, initialValues); "
1," String version = getAttribute(Constants.FRAGMENT_HOST, Constants.BUNDLE_VERSION_ATTRIBUTE); if (version == null) { setVersionFields("""", true, """", false); setFieldsEnabled(); return; "," String XXXXX = getAttribute(Constants.FRAGMENT_HOST, Constants.BUNDLE_VERSION_ATTRIBUTE); if (XXXXX == null) { setVersionFields("""", true, """", false); setFieldsEnabled(); return; "
0," ExportPackageDescription[] exports = constraint.getBundle().getContainingState().getExportedPackages(); return getPossibleCandidates(constraint, exports, null, hook, true).size() > 0; "," if(getConfig().getSessionType()==Config.SESSION_TYPE_J2EE) { HttpSession s = getSession(); return ""CFID=""+getCFID()+""&CFTOKEN=""+getCFToken()+""&jsessionid=""+(s!=null?getSession().getId():""""); "
1, Object obj; long now = System.currentTimeMillis(); long end = now + timeout; while ((obj = inp (key)) == null && ((now = System.currentTimeMillis()) < end)) { try { this.wait (end - now); , Object obj; long XXXXX = System.currentTimeMillis(); long XXXXX = XXXXX + timeout; while ((obj = inp (key)) == null && ((XXXXX = System.currentTimeMillis()) < XXXXX)) { try { this.wait (XXXXX - XXXXX); 
0," if (entity==null) return; ContentType contentType= new ContentType(entity.getContentType(), newUrl); if (contentType.isBinary) { ContentUtils.copyBinary(entity, response); return; "," editorCell.setAction(CellActionType.INSERT_BEFORE, new forbid_Insert.forbid_Insert_INSERT_BEFORE(node)); editorCell.setAction(CellActionType.INSERT, new forbid_Insert.forbid_Insert_INSERT(node)); "
0, if (isUsingRole()) { String attributeName = getRoleAttributeName(); return (RoleAttribute) GlobalResourceLoader.getResourceLoader().getObject(new ObjectDefinition(attributeName)); ," Long id = -1l; List<Long> compositionIds = Composition.find(""select id from Composition"").fetch(1, 1); if ((compositionIds != null) && !(compositionIds.isEmpty())) { id = compositionIds.get(0); "
0," String res = null; String left = elementToReadableString(match.getLeft()); String right = elementToReadableString(match.getRight()); if (left != null && right != null) { res = left + "" == "" + right; "," if (embargoTokens.keySet().isEmpty()) return null; String theInfo = """"; for (DomCardName theCard:embargoTokens.keySet()) { theInfo+=theCard.toHTML()+"" (""+embargoTokens.get(theCard).toString()+""), ""; "
0," table.getCurrentPlayer().fold(); pokerView.getLblMessage().setText(""Player ""+table.getCurrentPlayerNum()+"" folds.""); if(table.nonFoldedPlayers()>0) table.iterateCurrentPlayer(); else newGame(); "," Verify.assertThrows(UnsupportedOperationException.class, new Runnable() { public void run() { UnmodifiableMapTest.this.unmodifiableMap.putAll(Maps.mutable.<String, List<String>>of()); "
0, int state = super.getState(); state |= ((embeddedLexer!=null)?EMBEDDED_LEXER_ON:0); if (embeddedLexer!=null) state |= (embeddedLexer.getState() << EMBEDDED_LEXER_STATE_SHIFT); return state; ," WidgetRating wr = repository.get(VALID_WIDGET_RATING_ID); assertThat(wr, is(notNullValue())); repository.delete(wr); wr = repository.get(VALID_WIDGET_RATING_ID); assertThat(wr, is(nullValue())); "
1," try { evaluateString(""(defvar p)""); evaluateString(""(put 'p 'char-table-extra-slots 5)""); evaluateString(""(defvar ct (make-char-table 'p))""); evaluateString(""(char-table-extra-slot ct 10)""); "," try { evaluateString(""(defvar p)""); evaluateString(""(put 'p 'char-table-extra-slots 5)""); evaluateString(""(defvar ct (make-char-table 'p))""); evaluateString(""(char-table-extra-slot ct 10)""); "
0," String fn = inputFile.getName().toLowerCase(); if (fn.endsWith("".txt"") || fn.endsWith("".tab"") || fn.endsWith("".xls"") || fn.endsWith("".gz"")) { fn = fn.substring(0, fn.lastIndexOf(""."")); "," ensureDiv().setInnerHTML(""<div id='foo'>myHTML</div>""); HTML html = HTML.wrap(Document.get().getElementById(""foo"")); assertExistsAndAttached(html); assertEquals(""myHTML"", html.getHTML()); "
0," RadioBeacon.log(""Move tip from ""+tipY+"" to + "" +newTipY); tipY = newTipY; Bukkit.getServer().getPluginManager().callEvent(new AntennaChangeEvent(this, AntennaChangeEvent.Action.TIP_MOVE)); "," VelocityContext context = super.defaultContext(); imports = new Vector<String>(); context.put(""entity"", getObject()); context.put(""props"", getEntity().getProperties()); return context; "
1," final PsiElement element = instruction.getElement(); if (element == null) { for (Pair<InstructionImpl, GroovyPsiElement> pair : myPending) { addEdge(pair.getFirst(), instruction); "," final PsiElement element = instruction.getElement(); if (element == null) { for (Pair<InstructionImpl, GroovyPsiElement> pair : myPending) { addEdge(pair.getFirst(), instruction); "
1, XToolkit.awtLock(); try { Dialog target = (Dialog)this.target; if (vis) { if (target.getModalityType() != Dialog.ModalityType.MODELESS) { if (!isModalBlocked()) { XBaseWindow.ungrabInput(); , XToolkit.awtLock(); try { Dialog XXXXX = (Dialog)this.XXXXX; if (vis) { if (XXXXX.getModalityType() != Dialog.ModalityType.MODELESS) { if (!isModalBlocked()) { XBaseWindow.ungrabInput(); 
1, AdapterFactoryLabelProvider labelProvider = new AdapterFactoryLabelProvider(adapterFactory); if (object instanceof EObject) { switch (columnIndex) { case 0: return labelProvider.getText(object); , AdapterFactoryLabelProvider XXXXX = new AdapterFactoryLabelProvider(adapterFactory); if (object instanceof EObject) { switch (columnIndex) { case 0: return XXXXX.getText(object); 
1," this.nodeSize = new DefaultSizeDouble(width, height); this.isAnchored = isAnchored; this.type = type; this.hasLabel = true; this.labelSize = new DefaultSizeDouble(labelWidth, LabelHeight); "," this.nodeSize = new DefaultSizeDouble(width, height); this.isAnchored = isAnchored; this.type = type; this.hasLabel = true; this.labelSize = new DefaultSizeDouble(labelWidth, LabelHeight); "
1," String label = ((AuditContainer)object).getName(); return label == null || label.length() == 0 ? getString(""_UI_AuditContainer_type"") : getString(""_UI_AuditContainer_type"") + "" "" + label; "," String label = ((AuditContainer)object).getName(); return label == null || label.length() == 0 ? getString(""_UI_AuditContainer_type"") : getString(""_UI_AuditContainer_type"") + "" "" + label; "
1, List children = parent.getDataChoices(); if (parent.getId().equals(ID_NETWORKLINK) && (children.size() == 1) && ((DataChoice) children.get(0)).getId().equals(ID_DUMMY)) { return; , List children = parent.getDataChoices(); if (parent.getId().equals(ID_NETWORKLINK) && (children.size() == 1) && ((DataChoice) children.get(0)).getId().equals(ID_DUMMY)) { return; 
0, pref.setOnPreferenceChangeListener(this); for (PreferenceKey key : PreferenceKey.values()) { String name = getString(key.text); if (name.equals(pref.getKey())) { key.preference = pref; return; ," if (!hasFault) { Message out = exchange.getOut(); assertNotNull(out); assertFalse(out.isFault()); assertEquals(""Goodbye!"", out.getBody()); assertEquals(""cheddar"", out.getHeader(""cheese"")); "
1," if (coverageDescription == null) { coverageDescription = new EObjectContainmentEList(CoverageDescriptionType.class, this, Wcs111Package.COVERAGE_DESCRIPTIONS_TYPE__COVERAGE_DESCRIPTION); "," if (coverageDescription == null) { coverageDescription = new EObjectContainmentEList(CoverageDescriptionType.class, this, Wcs111Package.COVERAGE_DESCRIPTIONS_TYPE__COVERAGE_DESCRIPTION); "
1, IToolBarManager mgr = getViewSite().getActionBars().getToolBarManager(); mgr.add(new Separator(IWorkbenchActionConstants.MB_ADDITIONS)); getViewSite().getActionBars().updateActionBars(); , IToolBarManager XXXXX = getViewSite().getActionBars().getToolBarManager(); XXXXX.add(new Separator(IWorkbenchActionConstants.MB_ADDITIONS)); getViewSite().getActionBars().updateActionBars(); 
1," View v = convertView; if (v == null) { LayoutInflater inflater = (LayoutInflater) mContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE); v = inflater.inflate(R.layout.about_credits_row, null); "," View XXXXX = conXXXXXertView; if (XXXXX == null) { LayoutInflater XXXXX = (LayoutInflater) mContext.getSystemSerXXXXXice(Context.LAYOUT_INFLATER_SERVICE); XXXXX = XXXXX.inflate(R.layout.about_credits_row, null); "
1, sourceIdentifierWriter = new SourceIdentifierWriter(); sourceIdentifierWriter.setPreferredPrefix(EventSourceSchemaConstants.DEFAULT_NAMESPACE_PREFIX); loggingEventWriter = new LoggingEventWriter(); , sourceIdentifierWriter = new SourceIdentifierWriter(); sourceIdentifierWriter.setPreferredPrefix(EventSourceSchemaConstants.DEFAULT_NAMESPACE_PREFIX); loggingEventWriter = new LoggingEventWriter(); 
0," if (featOkTst && casFeat_posType == null) jcas.throwFeatMissing(""posType"", ""org.u_compare.shared.label.penn.pos.UnknownPOS""); return ll_cas.ll_getStringValue(addr, casFeatCode_posType); "," String label = ((PredefinedMenu) object).getIdentifier(); return label == null || label.length() == 0 ? getString(""_UI_PredefinedMenu_type"") : getString(""_UI_PredefinedMenu_type"") + "" "" + label; "
1, ICHelpBook book = getCHelpBook(); boolean bMatches = false; switch(book.getCHelpType()){ case ICHelpBook.HELP_TYPE_CPP: try{ bMatches = project.hasNature(CCProjectNature.CC_NATURE_ID); , ICHelpBook XXXXX = getCHelpBook(); boolean XXXXX = false; switch(XXXXX.getCHelpType()){ case ICHelpBook.HELP_TYPE_CPP: try{ XXXXX = project.hasNature(CCProjectNature.CC_NATURE_ID); 
0," if (startEditing && row==editingRow && col==editingCol) return """"; if (col == 0) return String.valueOf(row); else if (col < 4) { return String.valueOf(paletteData[col - 1][row]); "," MessageHolder mh = new DefaultMessageHolder(); Location location = new ClasspathResourceLocatorStrategy().resolve( ""/some/missing/path"", mh ); assertNull( location ); assertEquals( 1, mh.size() ); "
1," String[] splitted = canonicalClassName.replaceFirst(""java\\.lang\\."", """").split(""\\.""); StringBuilder buf = new StringBuilder(); if (splitted.length == 1) { buf.append(splitted[0]); "," String[] splitted = canonicalClassName.replaceFirst(""java\\.lang\\."", """").split(""\\.""); StringBuilder XXXXX = new StringBuilder(); if (splitted.length == 1) { XXXXX.append(splitted[0]); "
1," super.setEnabled(enabled, parent); group.setEnabled(enabled); Control[] children = group.getChildren(); for (int i = 0; i < children.length; i++) { children[i].setEnabled(enabled); "," super.setEnabled(enabled, parent); group.setEnabled(enabled); Control[] children = group.getChildren(); for (int i = 0; i < children.length; i++) { children[i].setEnabled(enabled); "
0," Model m = ModelFactory.createDefaultModel(); Resource r = m.createResource(); r.addLiteral( RDF.value, 'x' ); assertEquals( m.createTypedLiteral( 'x' ), r.getProperty( RDF.value ).getLiteral() ); "," tag = HTML.Tag.TR; assertEquals(""tr"", tag.toString()); assertFalse(""breaks Flow"", tag.breaksFlow()); assertTrue(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); "
1," fireButtonEvent(ButtonEvent.SHOW_BUTTON, ButtonNames.BACK); fireButtonEvent(ButtonEvent.HIDE_BUTTON, ButtonNames.NEXT); fireButtonEvent(ButtonEvent.DISABLE_BUTTON, ButtonNames.NEXT); "," fireButtonEvent(ButtonEvent.SHOW_BUTTON, ButtonNames.BACK); fireButtonEvent(ButtonEvent.HIDE_BUTTON, ButtonNames.NEXT); fireButtonEvent(ButtonEvent.DISABLE_BUTTON, ButtonNames.NEXT); "
0, ApplicationCategory category = new ApplicationCategory(); category.setName(categoryName); category.setDisplayName(categoryName); category.setDescription(categoryDes); return category; , TableItem[] items = tableViewer.getTable().getItems(); for (int i = 0; i < items.length; i++) { TraceChannel chan = (TraceChannel)items[i].getData(); chan.setIsChannelOverride(true); 
0," ICompilationUnit[] cus= getCompilationUnits(selection); if (cus.length == 0) { MessageDialog.openInformation(getShell(), getActionName(), ActionMessages.CleanUpAction_EmptySelection_description); "," if (!isLocked) { if (theProtocol > 2) { Logger.printWarning(""OscProperties.setNetworkProtocol"", ""not in the range of supported Network protocols. the network protocol defaults to UDP""); "
0," Intent intent = new Intent(pushThis, MapActivity.class); intent.putExtra(MapActivity.MAP_CODE_KEY, poi.mapNumber); intent.putExtra(MapActivity.HIGHLIGHT_CODE_KEY, _poiNumber); startActivity(intent); "," double expSoilFrac = BaerConstants.AUX_SOIL_FRACTION_DEFAULT; String expVersion = ""11.3""; String expComment = ""Test No Soil fraction factor""; try { _loader.load(NO_SOIL_AUX_FILE); "
1," if ((UtilValidate.isNotEmpty(request.getParameter(""GET_PASSWORD_HINT""))) || (UtilValidate.isNotEmpty(request.getParameter(""GET_PASSWORD_HINT.x"")))) { return showPasswordHint(request, response); "," if ((UtilValidate.isNotEmpty(request.getParameter(""GET_PASSWORD_HINT""))) || (UtilValidate.isNotEmpty(request.getParameter(""GET_PASSWORD_HINT.x"")))) { return showPasswordHint(request, response); "
1," try { interpreter.set(""current_interpreter"", interpreter); evaluations = ""import graphlab.graph.graph.*;"" + evaluations; evaluations = ""import graphlab.ui.lang.*;"" + evaluations; "," try { interpreter.set(""current_interpreter"", interpreter); evaluations = ""import graphlab.graph.graph.*;"" + evaluations; evaluations = ""import graphlab.ui.lang.*;"" + evaluations; "
1," Long type = getValidType(typeString); if (type==null) { log.warn(""Unable to set item type: '"" + typeString + ""'.""); log.warn(""guessing item type: '"" + DEFAULT_TYPE + ""'.""); type = DEFAULT_TYPE; "," Long XXXXX = getValidType(XXXXXString); if (XXXXX==null) { log.warn(""Unable to set item XXXXX: '"" + XXXXXString + ""'.""); log.warn(""guessing item XXXXX: '"" + DEFAULT_TYPE + ""'.""); XXXXX = DEFAULT_TYPE; "
0, Element element = new Element(); for (int a = 0; a < elements.size(); a++) { element = elements.get(a); if (element.getName().equals(elementName)) { element = elements.remove(a); , loadIcon.setIcon(getLoadImageIcon(stat.getLoad())); healthIcon.setIcon(getHealthyImageIcon(stat.getHealth())); timestampField.setText(stat.getTimestampString()); this.updateGui(); 
0," PropertyCheck.mandatory(this, ""location"", getKeyStoreParameters().getLocation()); if(getKeyStoreParameters().getType() == null) { keyStoreParameters.setType(KeyStore.getDefaultType()); ", graphics.setAntialias(SWT.ON); graphics.setAlpha((int) (currentTransparency * getDeclaration().getPadDefaultOpacity() * 255)); createPathes(); super.paintFigure(graphics); disposePathes(); 
0," DetachedCriteria criteria = super.getCriterion(); criteria.add(Restrictions .eq(IncomingPayment.Field.CONFIRMATION_CODE.getFieldName(), confirmationCode)); return super.getUnique(criteria); "," if(key == null) { Logger.error(this, ""removeFrom() : key = null for ""+this+"" I exist = ""+container.ext().isStored(this)+"" I am active: ""+container.ext().isActive(this), new Exception(""error"")); "
1," Query query = HibernateUtilHis.getSession().createQuery(""from AuditLog a where a.id = :id""); query.setLong(""id"", id); List list = query.list(); if (list.size() < 1) { return null; "," Query XXXXX = HibernateUtilHis.getSession().createQuery(""from AuditLog a where a.id = :id""); XXXXX.setLong(""id"", id); List XXXXX = XXXXX.XXXXX(); if (XXXXX.size() < 1) { return null; "
1," try { tidy.setInputEncoding(charset.toString()); tidy.setQuiet(true); tidy.setShowWarnings(false); tidy.setShowErrors(0); pageDocument = tidy.parseDOM(urlc.getInputStream(), null); "," try { tidy.setInputEncoding(charset.toString()); tidy.setQuiet(true); tidy.setShowWarnings(false); tidy.setShowErrors(0); pageDocument = tidy.parseDOM(urlc.getInputStream(), null); "
1, switch( mTrackColoringMethod ) { case ( DRAW_CALCULATED ): case ( DRAW_MEASURED ): case ( DRAW_RED ): case ( DRAW_GREEN ): drawPath( canvas ); break; case ( DRAW_DOTS ): drawDots( canvas ); break; , switch( mTrackColoringMethod ) { case ( DRAW_CALCULATED ): case ( DRAW_MEASURED ): case ( DRAW_RED ): case ( DRAW_GREEN ): drawPath( canvas ); break; case ( DRAW_DOTS ): drawDots( canvas ); break; 
0," logger.finest(""update of: "" + this.getThisFile().getAbsolutePath()); if (thisFile.lastModified() != lastRefreshed || mHasDirectoryChildren) { if (thisFile.exists() == false) { this.gone = true; ", final int len1 = isYAxis() ? compare.height : compare.width; final int len2 = relativeTo.isYAxis() ? otherBounds.height : otherBounds.width; if (len1==len2) return true; return len2>=len1; 
1, List<INakedActivityNode> nodes = a.getActivityNodesRecursively(); for(INakedActivityNode node:nodes){ if(node instanceof INakedControlNode && isForkOrJoin((INakedControlNode) node)){ return true; , List<INakedActivityNode> nodes = a.getActivityNodesRecursively(); for(INakedActivityNode node:nodes){ if(node instanceof INakedControlNode && isForkOrJoin((INakedControlNode) node)){ return true; 
1," String newURLString = req.getFullURLString(); boolean usePostMethod = !req.data.isEmpty(); boolean encoded = true; return this.constructURLString( newURLString, usePostMethod, encoded ); "," String XXXXX = req.getFullURLString(); boolean XXXXX = !req.data.isEmpty(); boolean XXXXX = true; return this.constructURLString( XXXXX, XXXXX, XXXXX ); "
1," return ContainerUtil.find(listApplicableTemplates(file, offset), new Condition<TemplateImpl>() { @Override public boolean value(TemplateImpl template) { return key.equals(template.getKey()); "," return ContainerUtil.find(listApplicableTemplates(file, offset), new Condition<TemplateImpl>() { @Override public boolean value(TemplateImpl template) { return key.equals(template.getKey()); "
0," Phone ph = buildPhone( usr, ""DESK PHONE"", cmd.getWorkAreaCode(), cmd.getWorkPhone()); if (cmd.getWorkPhoneId() != null && cmd.getWorkPhoneId().length() > 0 ) { ph.setPhoneId(cmd.getWorkPhoneId()); ", TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(Wiki6010LatestTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; 
0," return Objects .toStringHelper(this) .add(""candidateAssignment"", candidateAssignment) .add(""failedCondition"", failedCondition) .add(""conflictingAssignments"", conflictingAssignments) .toString(); "," InstancesOfTypeCollector requestor= new InstancesOfTypeCollector(requestedTypeName, false); calmDown(); new ReferenceTracker(requestor).start(getClass().getClassLoader()); return requestor; "
0," try { EpsGraphics g = new EpsGraphics(""EpsTools Drawable Export"", new FileOutputStream(fileName + "".eps""), 0, 0, x, y, colorMode); d.draw(g, new Rectangle(x, y)); g.close(); return true; ", int i = -1; int j = positions.size(); while (j - i > 1) { int k = (i + j) >> 1; Position position = (Position) positions.get(k); if (position.getOffset() >= offset) j = k; else i = k; 
0," final Map<String, ?> options = singletonMap(""option"", ""value""); final Task task = task(""task""); context.checking(new Expectations(){{ one(taskFactory).createTask(options); will(returnValue(task)); ", for(int i=0; i<conditions.size(); i++){ Condition cond = (Condition)conditions.elementAt(i); if(cond.getId() == condition.getId()){ conditions.remove(i); conditions.add(condition); break; 
0," String text = resource.getValue(propertyName); if (text == null) { throw new SearchEngineException(""No text is stored for property ["" + propertyName + ""] and alias ["" + resource.getAlias() + ""]""); "," switch (op.getType()) { case EQUALS: return 0; case EXISTS: return 1; case AND: case OR: return Math.min(selectivity(op.getFirst()), selectivity(((BinaryOp) op).getSecond())); default: return 1000; "
1," Map<Integer, LocalVirtualMachine> map = LocalVirtualMachine.getAllVirtualMachines(); vmList = new ArrayList<LocalVirtualMachine>(); vmList.addAll(map.values()); fireTableDataChanged(); "," Map<Integer, LocalVirtualMachine> map = LocalVirtualMachine.getAllVirtualMachines(); vmList = new ArrayList<LocalVirtualMachine>(); vmList.addAll(map.values()); fireTableDataChanged(); "
1," String result = mapper.getAllSupportedExtensions(); assertNotNull(result); assertTrue(""Got "" + result, result.contains(""js"")); assertTrue(""Got "" + result, result.contains(""groovy"")); "," String XXXXX = mapper.getAllSupportedExtensions(); assertNotNull(XXXXX); assertTrue(""Got "" + XXXXX, XXXXX.contains(""js"")); assertTrue(""Got "" + XXXXX, XXXXX.contains(""groovy"")); "
1," TimeSortedHashtable<String> tsh = new TimeSortedHashtable<String>(); tsh.push(""KEY1"", 100); tsh.push(""KEY2"", 100); tsh.push(""KEY3"", 300); tsh.removeBefore(100); assertEquals(1, tsh.size()); "," TimeSortedHashtable<String> tsh = new TimeSortedHashtable<String>(); tsh.push(""KEY1"", 100); tsh.push(""KEY2"", 100); tsh.push(""KEY3"", 300); tsh.removeBefore(100); assertEquals(1, tsh.size()); "
1, int numThreads = Runtime.getRuntime().availableProcessors(); executor = Executors.newFixedThreadPool(numThreads); completionService = new ExecutorCompletionService<ImageToSwfSlide>(executor); , int numThreads = Runtime.getRuntime().availableProcessors(); executor = Executors.newFixedThreadPool(numThreads); completionService = new ExecutorCompletionService<ImageToSwfSlide>(executor); 
1, Long l = file.getUserData(LAST_TS_KEY); if (l == null) { try { final DataInputStream stream = LAST_TS_ATTR.readAttribute(file); if (stream != null) { try { l = stream.readLong(); , Long XXXXX = fiXXXXXe.getUserData(LAST_TS_KEY); if (XXXXX == nuXXXXXXXXXX) { try { finaXXXXX DataInputStream XXXXX = LAST_TS_ATTR.readAttribute(fiXXXXXe); if (XXXXX != nuXXXXXXXXXX) { try { XXXXX = XXXXX.readLong(); 
0, WebAppContext wac = new WebAppContext(); wac.setContextPath(contextPath); wac.setWar(war); RequestLogHandler rlh = new RequestLogHandler(); rlh.setHandler(wac); this.addHandler(rlh); ," int cachei = key.hashCode() & cachedEntrySizeMask; Entry<K,V> e = cachedEntries[cachei]; if(e != null){ if(key.hashCode() == e.getHash() && key.equals(e.getKey())) { return true; "
1," T item = list.get(position); View view = getResourceLoader().inflateView(context, resource, parent); if (convertView == null) { view = getResourceLoader().inflateView(context,resource, parent); "," T item = list.get(position); View view = getResourceLoader().inflateView(context, resource, parent); if (convertView == null) { view = getResourceLoader().inflateView(context,resource, parent); "
0, for (Class<? extends LoadableBoundaryDataSource> loader : loaders) { try { LoadableBoundaryDataSource src = loader.newInstance(); if (name != null && src.isFileSupported(name)) return src; ," DBObject obj = new BasicDBObject(""_id"", new ObjectId()); obj.put(""first"", 1); obj.put(""second"", ""str1""); obj.put(""third"", true); obj.put(""fourth"", new BasicDBObject(""firstNested"", 1)); return obj; "
0," dirEditor = new DirectoryFieldEditor(""dir"", ""Directory:"", getFieldEditorParent()); addField(dirEditor); addField(new BooleanFieldEditor(""recurse"", ""Recurse:"", getFieldEditorParent())); ", boolean match = false; String[] lemmas = token.getPrimitive(); if(lemmas != null) { for (String lemma : lemmas) { if(lemma.equalsIgnoreCase(primitiveMask)) { match = true; break; 
0, ModuleDeclaration moduleDeclaration = SourceParserUtil.getModuleDeclaration(module); if (moduleDeclaration instanceof LuaSourceRoot) return (LuaSourceRoot) moduleDeclaration; return null; , for (Language l : getModules(Language.class)) { if (moduleReference.getModuleId() != null) { if (l.getModuleReference().getModuleId().equals(moduleReference.getModuleId())) { return l; 
0, String lookAndFeel = MineManagerBackingStore.getInstance().getLookAndFeel(); LookAndFeelInfo lfInfo = frame.getLookAndFeelInfo(lookAndFeel); if (lfInfo != null) { frame.changeLookAndFeel(lfInfo); ," String wktSurface1 = ""SURFACE ((10 90, 30 50, 70 30, 120 40, 150 70, 150 120, 100 150, 30 140, 10 90), (30 140, 60 140, 60 130, 40 120, 30 140))""; return this.createSurfaceFromWKT(crs, wktSurface1); "
0," super(Duration.WhileOnBattlefield, Layer.TypeChangingEffects_4, SubLayer.NA, Outcome.Benefit); staticText = ""Each creature you control is the chosen type in addition to its other types""; ", e = new BasicBSONEncoder(); buf = new BasicOutputBuffer(); e.set(buf); bios = new ByteArrayOutputStream(); lazyDBDecoder = new LazyDBDecoder(); defaultDBDecoder = new DefaultDBDecoder(); 
0, page = new TranspositionWizardPage(); page.setAlgorithmSpecification(TranspositionAlgorithm.specification); addPage(page); page2 = new AbstractClassicTransformationPage(); addPage(page2); , DefaultListModel model = (DefaultListModel) getModel(); if (values != null) { final Iterator iterator = values.iterator(); while (iterator.hasNext()) { model.addElement(iterator.next() ); 
0," synchronized( mMediaPath ) { for( MediaVO mediaVO : mMediaPath ) { if( mediaVO.bitmapKey != null ) { canvas.drawBitmap( sBitmapCache.get(mediaVO.bitmapKey), mediaVO.x, mediaVO.y, defaultPaint ); "," if ( displayText == null ) { StringBuffer strbuf = new StringBuffer( getName( ) ); strbuf.append( "" "" ); strbuf.append( classInfo.getName( ) ); displayText = strbuf.toString( ); strbuf = null; "
1," if (context == null) { context = new EvaluationContext(null, Platform.class) { public Object getVariable(String name) { if (VARIABLE_PLATFORM.equals(name)) { return Platform.class; "," if (context == null) { context = new EvaluationContext(null, Platform.class) { public Object getVariable(String name) { if (VARIABLE_PLATFORM.equals(name)) { return Platform.class; "
0," if (!markers.isEmpty()) { StepperChangedEvent event = new StepperChangedEvent(this, spinner.getSelection()); for (IStepperSelectionListener l : listeners) { l.stepperChanged(event); ", int pieces = 0; switch(game.getAllPlayers().length) { case 1: case 2: pieces = 10; break; case 3: pieces = 9; break; case 4: pieces = 7; break; case 5: pieces = 6; break; case 6: pieces = 5; break; 
1," String oldHref = href; href = newHref; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, Wps10Package.OUTPUT_REFERENCE_TYPE__HREF, oldHref, href)); "," String XXXXX = href; href = newHref; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, Wps10Package.OUTPUT_REFERENCE_TYPE__HREF, XXXXX, href)); "
0," BitSet cyclohexane = fingerprinter.getFingerprint(Molecules.createCyclohexane()); BitSet hexane = fingerprinter.getFingerprint(Molecules.createHexane()); assertFalse(match(cyclohexane, hexane)); "," String[] split = propertyName.split( ""\\."" ); if ( split.length != 2 ) { throw new IllegalArgumentException( ""Invalid format '"" + propertyName + ""'. It must be of type className.propertyName"" ); "
0, if (rowIndex < combatants.size() && columnIndex == 2 && aValue instanceof Integer) { SkillInitWrapper entry = (SkillInitWrapper) getRowEntry(rowIndex); entry.setFudge((Integer) aValue); ," String encoding = format.getCharSetEncoding(); String contentType = format.getContentType(); if (log.isDebugEnabled()) { log.debug(""contentType from the OMOutputFormat ="" + contentType); "
0, boolean d_edgeFlag = false; if (dEdges.size() > cEdges.size()) { if (dEdges.size() > 10000000 && cEdges.size() > 100000) { dEdgeIterationSize = (float) dEdges.size() * 0.000001; d_edgeFlag = true; , super(activity.getSupportFragmentManager()); mActionBar = activity.getSupportActionBar(); mViewPager = pager; mViewPager.setAdapter(this); mViewPager.setOnPageChangeListener(this); 
0, final Rectangle r = thumbRect; if (slider.getOrientation() == SwingConstants.VERTICAL) { if (drawInverted() ? direction < 0 : direction > 0) { if (r.y + r.height <= currentMouseY) return false; ," if (_finder == null) { _finder = (DLFileRankFinder)PortalBeanLocatorUtil.locate(DLFileRankFinder.class.getName()); ReferenceRegistry.registerReference(DLFileRankFinderUtil.class, ""_finder""); "
0," tag = HTML.Tag.DIR; assertEquals(""dir"", tag.toString()); assertTrue(""breaks Flow"", tag.breaksFlow()); assertTrue(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); ", final int prime = 31; int result = 1; result = prime * result + ((name == null) ? 0 : name.hashCode()); result = prime * result + ((value == null) ? 0 : value.hashCode()); return result; 
1," super(name); this.period = period; setUncaughtExceptionHandler(new UncaughtExceptionHandler() { @Override public void uncaughtException(Thread t, Throwable e) { log.warn(""Uncaught exception"", e); "," super(name); this.period = period; setUncaughtExceptionHandler(new UncaughtExceptionHandler() { @Override public void uncaughtException(Thread t, Throwable e) { log.warn(""Uncaught exception"", e); "
0," Assert.assertEquals(""Access Denied"", selenium.getText(""accessDeniedHeading"") ); Assert.assertEquals(""You are not allowed to access this page."", selenium.getText(""accessDeniedMessage"")); "," super(); this.addHeader(getTitle(), NewTheme.I().getIcon(""premium"", 32)); this.addDescriptionPlain(_JDT._.gui_settings_premium_description()); add(acm = new AccountManager(this)); "
1," specialBehavior = true; final AxisSubrange subrange = new AxisSubrange(inputDisplay, axis, axisDefinition, originIsOne); if (subrange.getError() == null) { definitions.put(axis, subrange); "," specialBehavior = true; final AxisSubrange XXXXX = new AxisSubrange(inputDisplay, axis, axisDefinition, originIsOne); if (XXXXX.getError() == null) { definitions.put(axis, XXXXX); "
0," String oldName = name; name = newName; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, Bpmn2Package.EXTENSION_ATTRIBUTE_DEFINITION__NAME, oldName, name)); "," for (; delta[0] >= 0; delta[0] -= 8) { try { SwingUtilities.invokeAndWait(new Runnable() { @Override public void run() { setSize(targetSize.width, targetSize.height + delta[0] * dir); "
1," StringBuffer buffer = new StringBuffer(messageSize); buffer.append(""Message: "" + index + "" sent at: "" + new Date()); if (buffer.length() > messageSize) { return buffer.substring(0, messageSize); "," StringBuffer buffer = new StringBuffer(messageSize); buffer.append(""Message: "" + index + "" sent at: "" + new Date()); if (buffer.length() > messageSize) { return buffer.substring(0, messageSize); "
1," try { log.debug(""Test list subscribe""); boolean response = mSvc.listSubscribe(listId, randomEmailAddress, null, EmailType.HTML, false, false, false, false); log.debug(""User subscribed: {"," try { log.debug(""Test list subscribe""); boolean response = mSvc.listSubscribe(listId, randomEmailAddress, null, EmailType.HTML, false, false, false, false); log.debug(""User subscribed: {"
1," for (int i = 0; i < 8; i++) { for (int j = 0; j < 8; j++) { if (twoTable[i][j] instanceof PieceLabel) { System.out.println(""i: "" + i + "" j: "" + j + "" "" + twoTable[i][j].getPiece()); "," for (XXXXXnt XXXXX = 0; XXXXX < 8; XXXXX++) { for (XXXXXnt XXXXX = 0; XXXXX < 8; XXXXX++) { XXXXXf (twoTable[XXXXX][XXXXX] XXXXXnstanceof PXXXXXeceLabel) { System.out.prXXXXXntln(""XXXXX: "" + XXXXX + "" XXXXX: "" + XXXXX + "" "" + twoTable[XXXXX][XXXXX].getPXXXXXece()); "
0," objectUnderTest_.attach_callback(mockSubscription_); assertEquals(1, objectUnderTest_.get_callbacks().length); objectUnderTest_.dispose(); assertEquals(0, objectUnderTest_.get_callbacks().length); "," final URI resolvedURI = resolveXMLBase(containingDocument, element, url); return NetUtils.getExternalContext().getResponse().rewriteResourceURL(resolvedURI.toString(), rewriteMode); "
1," String text = curElement.getText(); text = text.substring(""<!--"".length(),text.length()-""-->"".length()).trim(); text = escapeDocumentationTextText(text); return generateDoc(text, name,null, null); "," String XXXXX = curElement.getText(); XXXXX = XXXXX.substring(""<!--"".length(),XXXXX.length()-""-->"".length()).trim(); XXXXX = escapeDocumentationTextText(XXXXX); return generateDoc(XXXXX, name,null, null); "
0," if (e.getKeyCode() == KeyEvent.VK_ENTER) { final int index = jList1.getSelectedIndex(); doubleClick((SimpleLine2) jList1.getModel().getElementAt(index), jList1.getModel(), index); ", int result = 17; long tmp; result = 37 * result + _port; result = 37 * result + _retry; result = 37 * result + _timeout; if (_password != null) { result = 37 * result + _password.hashCode(); 
0," final Criteria criteria = session.createCriteria(s); EventBrokerHolder.getEventBroker().publish(""hibernate.criteriaCreated"", new CriteriaContext(criteria, null)); return criteria; ", this.shapePane = shapePane; this.viewModel = viewModel; this.feedbackModel = feedbackModel; this.commandStack = commandStack; this.labelPositionCalculator = labelPositionCalculator; 
1," if ( cswNew == expectedCswNew ) return; logger.log( POILogger.WARN, ""Since FIB.nFib == "", strNFib, "" value of FIB.cswNew MUST be "", strExpectedCswNew + "", not 0x"", Integer.toHexString( cswNew ) ); "," if ( cswNew == expectedCswNew ) return; logger.log( POILogger.WARN, ""Since FIB.nFib == "", strNFib, "" value of FIB.cswNew MUST be "", strExpectedCswNew + "", not 0x"", Integer.toHexString( cswNew ) ); "
0, String name = evt.getPropertyName(); if (ServerDialog.SERVER_PROPERTY.equals(name)) { String v = getServerName(); String s = (String) evt.getNewValue(); if (s == null) { setNewServer(null); return; , RegisteredServiceProvider<Economy> economyProvider = plugin.getServer().getServicesManager().getRegistration(Economy.class); if (economyProvider != null) { economy = economyProvider.getProvider(); 
1," Intent i = new Intent(ctx,MITCoursesListsSliderActivity.class); i.putExtra(MITCoursesListsSliderActivity.KEY_GROUP, MITCoursesListsSliderActivity.GROUP_01); ctx.startActivity(i); "," Intent i = new Intent(ctx,MITCoursesListsSliderActivity.class); i.putExtra(MITCoursesListsSliderActivity.KEY_GROUP, MITCoursesListsSliderActivity.GROUP_01); ctx.startActivity(i); "
1, final FilePresentation filePresentation = myRecentPathFileChange.get(); if ((filePresentation == null) || (filePresentation.getVf() == null)) { SwingUtilities.invokeLater(myReset); return; , final FilePresentation XXXXX = myRecentPathFileChange.get(); if ((XXXXX == null) || (XXXXX.getVf() == null)) { SwingUtilities.invokeLater(myReset); return; 
0," if (obj instanceof XmlRrd) { XmlRrd other = (XmlRrd) obj; return new EqualsBuilder() .append(getStep(), other.getStep()) .append(getXmlRras().toArray(), other.getXmlRras().toArray()) .isEquals(); "," ImmutableMap<String, String> attributes = this.attributes.build(); return Objects.toStringHelper(this).omitNullValues().add(""attributes"", attributes.size() > 0 ? attributes : null) .toString(); "
0, if(getMap() != null){ final CanvasController2D controller = getMap().getCanvas().getController(); final Date[] range = controller.getTemporalRange(); return range != null && range[0] != null; , MultimediaHome multimediaHome = null; Multimedia multimedia = null; try{ multimediaHome = (MultimediaHome)IDOLookup.getHome(Multimedia.class); multimedia = multimediaHome.getByProduct(product); 
1, World world = player.getWorld(); String worldName = world.getName(); for (String worldIndex : DynamicEconomy.dyneconWorld) { if (worldName.equalsIgnoreCase(worldIndex)) { return true; , World XXXXX = player.getWorld(); String XXXXXName = XXXXX.getName(); for (String XXXXXIndex : DynamicEconomy.dyneconWorld) { if (XXXXXName.equalsIgnoreCase(XXXXXIndex)) { return true; 
0, TestSuite testSuite = new TestSuite(); testSuite.addTest(PageLayoutTests.suite()); testSuite.addTest(PageScopeTests.suite()); testSuite.addTest(UserGroupTests.suite()); return testSuite; ," LocatorImpl l = new LocatorImpl(); assertEquals(null, l.getPublicId()); assertEquals(null, l.getSystemId()); assertEquals(0, l.getLineNumber()); assertEquals(0, l.getColumnNumber()); "
1," checkExtension(); if ( devices != null ) BufferChecks.checkBuffer(devices, 1); return nglEnumerateVideoDevicesNV(getPeerInfo(), devices, devices == null ? 0 : devices.position()); "," checkExtension(); if ( devices != null ) BufferChecks.checkBuffer(devices, 1); return nglEnumerateVideoDevicesNV(getPeerInfo(), devices, devices == null ? 0 : devices.position()); "
0," stateHistory.add(""cancel""); switch (state) { case CREATED: case INITIATED: state = DecisionState.COMPLETED; if (immediateCancellationCallback != null) { immediateCancellationCallback.run(); "," String escdirpath = evt.escapeString(dirpath); Map<String, String> partitions = evt.getEscapeMapping(dirpath); return new HiveDirCreatedNotification(hivetable, escdirpath, partitions); "
1," StringBuffer expression = new StringBuffer(); expression.append(condition); expression.append("" do ""); expression.append(modification); expression.append(""\n""); return expression.toString(); "," StringBuffer XXXXX = new StringBuffer(); XXXXX.append(condition); XXXXX.append("" do ""); XXXXX.append(modification); XXXXX.append(""\n""); return XXXXX.toString(); "
1," TimeZone tz = null; if (_timeZone != null) tz = getTimeZoneForExpression(_timeZone); if (tz == null) tz = getTimeZoneForExpression(""timeZone""); if (tz == null) tz = TimeZone.getDefault(); return tz; "," TimeZone tz = null; if (_timeZone != null) tz = getTimeZoneForExpression(_timeZone); if (tz == null) tz = getTimeZoneForExpression(""timeZone""); if (tz == null) tz = TimeZone.getDefault(); return tz; "
0, return this.containsFlag(SimulatorFlagOption.GENERATE_INFLUENCE_MAP) || this.containsParameter(GENERATE_INFLUENCE_MAP) || this.containsFlag(SimulatorFlagOption.BUILD_INFLUENCE_MAP); ," EventTransaction transaction = null; if (isDead.get()) throw new IllegalStateException(""Events system is dead""); while ((transaction = transactionsQueue.poll()) != null){ try { execute(transaction); "
1," Verify.assertThrows(UnsupportedOperationException.class, new Runnable() { public void run() { UnmodifiableMapTest.this.unmodifiableMap.putAll(Maps.mutable.<String, List<String>>of()); "," Verify.assertThrows(UnsupportedOperationException.class, new Runnable() { public void run() { UnmodifiableMapTest.this.unmodifiableMap.putAll(Maps.mutable.<String, List<String>>of()); "
0, this.gaSelector = gaSelector; this.crossoverOp = crossoverOperator; this.mutationOp = mutationOperator; this.gaActivationAge = gaActivationAge; this.crossoverRate = crossoverRate; this.myLcs = lcs; ," IPreferenceStore prefs = PydevPrefs.getPreferenceStore(); try { buttonAskOverride.setSelection(configuration.getAttribute( PyUnitPrefsPage2.LAUNCH_CONFIG_OVERRIDE_PYUNIT_RUN_PARAMS_CHOICE, false)); "
1," InterfaceMacHeader header = new InterfaceMacHeader(""00:17:ab:e9:65:a0""); assertEquals(header.getValue().length, 6); assertEquals(header.getString().toUpperCase(), ""00:17:AB:E9:65:A0""); "," InterfaceMacHeader XXXXX = new InterfaceMacHeader(""00:17:ab:e9:65:a0""); assertEquals(XXXXX.getValue().length, 6); assertEquals(XXXXX.getString().toUpperCase(), ""00:17:AB:E9:65:A0""); "
1, adapterIsUsedByScript.clear(); calledByScriptMap.clear(); callsScriptMap.clear(); includedByScriptMap.clear(); includesScriptMap.clear(); usesAdapter.clear(); scriptList.clear(); , adapterIsUsedByScript.clear(); calledByScriptMap.clear(); callsScriptMap.clear(); includedByScriptMap.clear(); includesScriptMap.clear(); usesAdapter.clear(); scriptList.clear(); 
1," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (name: ""); result.append(name); result.append(')'); return result.toString(); "," if (eIsProxy()) return super.toString(); StringBuffer XXXXX = new StringBuffer(super.toString()); XXXXX.append("" (name: ""); XXXXX.append(name); XXXXX.append(')'); return XXXXX.toString(); "
1," dayKeeperId = getServer().getScheduler().scheduleAsyncRepeatingTask(this, new Runnable(){ @Override public void run() { if(world != null && world.getTime() > 8000){ world.setTime(6000); "," dayKeeperId = getServer().getScheduler().scheduleAsyncRepeatingTask(this, new Runnable(){ @Override public void run() { if(world != null && world.getTime() > 8000){ world.setTime(6000); "
1," this.table = jTable; jTable.addMouseMotionListener(this); jTable.setModel(this); jTable.setDefaultRenderer(Object.class, renderer); jTable.setDefaultEditor(Object.class, editor); "," this.table = jTable; jTable.addMouseMotionListener(this); jTable.setModel(this); jTable.setDefaultRenderer(Object.class, renderer); jTable.setDefaultEditor(Object.class, editor); "
1," if (SanityManager.DEBUG) { String str = super.toString(); str += "" Change page allocation status of "" + newPageNumber + "" to "" + doStatus + ""(undo "" + undoStatus + "")""; return str; "," if (SanityManager.DEBUG) { String XXXXX = super.toString(); XXXXX += "" Change page allocation status of "" + newPageNumber + "" to "" + doStatus + ""(undo "" + undoStatus + "")""; return XXXXX; "
0," String oldHandle = handle; handle = newHandle; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, WfsPackage.TRANSACTION_RESULTS_TYPE__HANDLE, oldHandle, handle)); "," boolean isMethodAnnotatedWithExcludeInterceptorClass = false; if (AnnotationUtil.hasMethodAnnotation(method, ExcludeClassInterceptors.class)) { isMethodAnnotatedWithExcludeInterceptorClass = true; "
1," super(plugin, ""Creeper""); setDescription(""$1% chance to spawn 1 creeper, $2% for 2, and $3% for 3.""); setUsage(""/skill creeper""); setArgumentRange(0, 0); setIdentifiers(new String[]{""skill creeper"""," super(plugin, ""Creeper""); setDescription(""$1% chance to spawn 1 creeper, $2% for 2, and $3% for 3.""); setUsage(""/skill creeper""); setArgumentRange(0, 0); setIdentifiers(new String[]{""skill creeper"""
1, int l = name.lastIndexOf('_'); String s; if(name.endsWith(IndexConstants.BINARY_MAP_INDEX_EXT) || name.endsWith(IndexConstants.BINARY_MAP_INDEX_EXT_ZIP)){ s = IndexConstants.BINARY_MAP_INDEX_EXT; , int XXXXX = name.XXXXXastIndexOf('_'); String s; if(name.endsWith(IndexConstants.BINARY_MAP_INDEX_EXT) || name.endsWith(IndexConstants.BINARY_MAP_INDEX_EXT_ZIP)){ s = IndexConstants.BINARY_MAP_INDEX_EXT; 
1," FormEntryAdapter textListener = new FormEntryAdapter(this, actionBars) { public void textValueChanged(FormEntry entry) { try { ((IFragment) getPluginBase()).setPluginVersion(getVersion()); "," FormEntryAdapter XXXXX = new FormEntryAdapter(this, actionBars) { public void textValueChanged(FormEntry entry) { try { ((IFragment) getPluginBase()).setPluginVersion(getVersion()); "
1," URI result = null; try { result = new URI( uri ).normalize(); String resultStr = result.toString(); if ( resultStr.endsWith( ""/"" ) ) { result = new URI( trimTrailingSlash( resultStr ) ); "," URI XXXXX = null; try { XXXXX = new URI( uri ).normalize(); String XXXXXStr = XXXXX.toString(); if ( XXXXXStr.endsWith( ""/"" ) ) { XXXXX = new URI( trimTrailingSlash( XXXXXStr ) ); "
0, InputStream templateInputStream = null; try { templateInputStream = getClass().getClassLoader().getResourceAsStream(TEMPLATE); return XMLDomUtils.getTemplateDom(templateInputStream); , if (!m_enabled && enabled) { List<ClickHandler> handlers = new ArrayList<ClickHandler>(m_clickHandlers); m_clickHandlers.clear(); for (ClickHandler handler : handlers) { addClickHandler(handler); 
1, context.checking(new Expectations() { { allowing(personMapper).execute(RECIPIENT_ACCOUNT_ID); will(returnValue(person)); allowing(person).isAccountLocked(); will(returnValue(true)); , context.checking(new Expectations() { { allowing(personMapper).execute(RECIPIENT_ACCOUNT_ID); will(returnValue(person)); allowing(person).isAccountLocked(); will(returnValue(true)); 
0," this.tasks = new ArrayList<ISetupTask>(); Long i = (Long) this.getEntityManager().createQuery( ""select count(e) from "" + Bank.class.getSimpleName() + "" e"") .getResultList().get(0); "," super.onCreate(savedInstanceState); Intent intent = new Intent(SCAN_ACTION); intent.putExtra(""SCAN_MODE"", ""QR_CODE_MODE""); IntentLauncher.launch(this, intent, SCAN_APP, ""Barcode Scanner""); "
0," DialogBox dialogBox = new DialogBox(_parent, ""Add Product""); AddProductView dialogView = new AddProductView(_parent, dialogBox, getBarcode()); dialogBox.display(dialogView, false); "," Vector row = new Vector(); String imageName; if (useFullPath != null) { imageName = getImageName(container.getFile(), useFullPath, numOfDirectories); container.setCustomImageName(imageName); "
0," PriorityList p = new PriorityList(); p.add( ""One"", 1 ); p.add( ""Two"", 1 ); assertEquals( ""size"", 2, p.size() ); assertEquals( ""One"", ""One"", p.get(0) ); assertEquals( ""Two"", ""Two"", p.get(1) ); "," Parent parent = Parent.find(""byParentName"",""parent"").first(); Assert.assertNotNull(""Parent not found!"", parent); Assert.assertNotNull(""Child is null, reference didn't load correctly"",parent.child); "
0, if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; GradleLibrary that = (GradleLibrary)o; return super.equals(that) && myPaths.equals(that.myPaths); , super.parse(); BufferedReader buffer = null; if(mFile == null) { InputStream fileIn = mResources.openRawResource(mResourceId); buffer = new BufferedReader(new InputStreamReader(fileIn)); 
1, if ((mask & 1) != 0) count1++; if ((mask & 2) != 0) count2++; if ((mask & 4) != 0) count4++; if ((mask & 8) != 0) count8++; if ((mask & 16) != 0) count16++; if ((mask & 32) != 0) count32++; , if ((mask & 1) != 0) count1++; if ((mask & 2) != 0) count2++; if ((mask & 4) != 0) count4++; if ((mask & 8) != 0) count8++; if ((mask & 16) != 0) count16++; if ((mask & 32) != 0) count32++; 
0," boolean showaltitude = mSharedPreferences.getBoolean( Constants.ALTITUDE, false ); if( showaltitude ) { mLastGPSAltitudeView.setVisibility( View.VISIBLE ); mLastGPSAltitudeView.setText( """" ); "," if(PapyrusPaletteService.getInstance().equals(event.getSource())) { PapyrusPaletteService.getInstance().updatePalette(getPaletteViewer().getPaletteRoot(), this, getDefaultPaletteContent()); "
1," model.clear(); Iterator<Changeset> iterator = dc.getChangesets().iterator(); while (iterator.hasNext()) { Changeset ch=iterator.next(); model.add(0, ch.id+"":""+dc.getUsers().get(ch.userId).name); "," model.clear(); Iterator<Changeset> iterator = dc.getChangesets().iterator(); while (iterator.hasNext()) { Changeset ch=iterator.next(); model.add(0, ch.id+"":""+dc.getUsers().get(ch.userId).name); "
1," StringBuilder sb = new StringBuilder(shortText); HelpTopic aliasForTopic = helpMap.getHelpTopic(aliasFor); if (aliasForTopic != null) { sb.append(""\n""); sb.append(aliasForTopic.getFullText(forWho)); "," StringBuilder XXXXX = new StringBuilder(shortText); HelpTopic XXXXX = helpMap.getHelpTopic(aliasFor); if (XXXXX != null) { XXXXX.append(""\n""); XXXXX.append(XXXXX.getFullText(forWho)); "
0, ArrayDeque q = new ArrayDeque(); assertTrue(q.isEmpty()); q.add(new Integer(1)); assertFalse(q.isEmpty()); q.add(new Integer(2)); q.removeFirst(); q.removeFirst(); assertTrue(q.isEmpty()); ," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "
1, int maxSize = 0; int size; for (int i=0; i < numDataElements; i++) { size = (height-1)*scanlineStride + (width-1)*pixelStride + dataOffsets[i]; if (size > maxSize) { maxSize = size; , int maxSize = 0; int size; for (int i=0; i < numDataElements; i++) { size = (height-1)*scanlineStride + (width-1)*pixelStride + dataOffsets[i]; if (size > maxSize) { maxSize = size; 
0, songname = new byte[20]; trackername = new byte[8]; reserved = new byte[13]; sample = new STMSAMPLE[31]; for(int i=0;i<31;i++) sample[i] = new STMSAMPLE(); patorder = new short[128]; ," FastStringBuffer buffer = new FastStringBuffer(); for (Iterator<String> iter = libs.iterator(); iter.hasNext();) { String folder = (String) iter.next(); buffer.append(folder); buffer.append(""|""); "
1, final ClassLoader classLoader = Thread.currentThread().getContextClassLoader(); if (classLoader == null) { Thread.currentThread().setContextClassLoader( BootStrapPlatform.class.getClassLoader()); , final ClassLoader XXXXX = Thread.currentThread().getContextClassLoader(); if (XXXXX == null) { Thread.currentThread().setContextClassLoader( BootStrapPlatform.class.getClassLoader()); 
0," super(26, 8); setIconCoord(8, 4); setItemName(""mushroomStew""); this.setContainerItem(Item.bowlEmpty); this.setMaxStackSize(BowlStack); PfFManagers.ItemManager.registerItem(""mushroomsoupbowl"", this); ", super.visitMethod(method); final RefElement refElement = myRefManager.getReference(method); if (refElement instanceof RefMethodImpl) { ((RefMethodImpl)refElement).buildReferences(); 
1," AppInfo app = (AppInfo)v.getTag(); RemoveDialogFragment removeDialog = RemoveDialogFragment.newInstance( app.getTitle(), app.getRowId() ); removeDialog.show(getFragmentManager(), ""removeDialog""); "," AppInfo app = (AppInfo)v.getTag(); RemoveDialogFragment removeDialog = RemoveDialogFragment.newInstance( app.getTitle(), app.getRowId() ); removeDialog.show(getFragmentManager(), ""removeDialog""); "
1, try { IWorkspace workspace = ResourcesPlugin.getWorkspace(); IPath path = getResourcePath(); final IResource container = workspace.getRoot().findMember(path); return (IContainer)container; , try { IWorkspace XXXXX = ResourcesPlugin.getWorkspace(); IPath XXXXX = getResourcePath(); final IResource XXXXX = XXXXX.getRoot().findMember(XXXXX); return (IContainer)XXXXX; 
0, this.externalIpAddress = externalIpAddress; this.externalPort = externalPort; this.internalIpAddress = internalIpAddress; this.internalPort = internalPort; this.protocol = protocol; , final StaticStateGlobalOps globalOps = containingDocument.getStaticOps(); final LHHAAnalysis analysis = globalOps.getHint(getPrefixedId()); return analysis != null && analysis.isLocal(); 
1, IModelElement parent = method.getParent(); if (parent instanceof IType) { RecordTypeDef typeDef = (RecordTypeDef) getTypeDef((IType) parent); return typeDef.getFields().get(method.getElementName()); , IModelElement parent = method.getParent(); if (parent instanceof IType) { RecordTypeDef typeDef = (RecordTypeDef) getTypeDef((IType) parent); return typeDef.getFields().get(method.getElementName()); 
1," List<String> source = Arrays.asList(""a"", ""b"", ""c""); Set<String> dest = (Set<String>) convert(source, Set.class); assertTrue(dest instanceof Set); Asserts.assertEquals(source, dest); "," List<String> source = Arrays.asList(""a"", ""b"", ""c""); Set<String> dest = (Set<String>) convert(source, Set.class); assertTrue(dest instanceof Set); Asserts.assertEquals(source, dest); "
0, return this.hasDefaultPackage() || this.hasSchemaName() || this.hasCatalogName() || this.hasNonDefaultCascade()|| this.hasNonDefaultAccess() || !this.isDefaultLazy() || !this.isAutoImport() ; ," BusyIndicator.showWhile(fNlText.getText().getDisplay(), new Runnable() { public void run() { Choice[] choices = getNLChoices(); openPortabilityChoiceDialog(IEnvironment.P_NL, fNlText, choices); "
0," AWSDescribeImagesOptions options = new AWSDescribeImagesOptions(); options.filters(ImmutableMap.of(""is-public"", ""true"", ""architecture"", ""x86_64"", ""platform"", ""windows"")); testMapFilters(options); "," StringWriter sw = new StringWriter(); PrintWriter pw = new PrintWriter(sw); PrimeFinder.statistics(from, to, pw); pw.flush(); TestContext.assertEqualsVerbose(expected, sw.toString()); "
0," log.info(""Starting Tomcat - Web application""); boolean result = false; final ClassLoader originalClassLoader = Thread.currentThread().getContextClassLoader(); log.debug(""Webapp root: {", VersionHistory editionHistory = null; if (nodeService.getType(mlContainer).equals( ContentModel.TYPE_MULTILINGUAL_CONTAINER)) { editionHistory = versionService.getVersionHistory(mlContainer); 
0," JavaPackage actualPackage = (JavaPackage) packages.get(expectedPackage .getName()); if (actualPackage != null) { if (equalsDependencies(actualPackage, expectedPackage)) { return true; "," SQLiteDatabase db = mDBHelper.getReadableDatabase(); Cursor cursor = db.query( RECENTS_TABLE, RecentsTable.COLUMN_NAMES, null, null, null, null, RecentsTable.ORDER_BY); return cursor; "
0," if ( aDropTargetEvent.data instanceof StructuredSelection ) { IStructuredSelection s3ObjectSelection = (StructuredSelection) aDropTargetEvent.data; return doDrop(aTarget, s3ObjectSelection); "," StringBuffer expression = new StringBuffer(); expression.append(condition); expression.append("" do ""); expression.append(modification); expression.append(""\n""); return expression.toString(); "
0," super.onCreate (savedInstanceState); setContentView (R.layout.resgistration); Parse.initialize(this, ""cuoXWbqvBKs8SUrhnyKdyNWiMPZxuDBZ31ehltVI"", ""tl8VMcFHu7u3haym9KSbRKEP61MmxPDvmL06dxeo""); "," evaluateString(""(defun f (table) (intern \""qwas\"" table))""); LispObject table = evaluateString(""(let ((table (make-vector 10 0))) (f table) table)""); Assert.assertTrue(table instanceof LispVector); "
0," int operation = 0; try { Method method = origUserClass.getMethod(methName, null); String origValue = (String)method.invoke(origUser, null); if (origValue == null && value != null) { return 2; ", final String isAvailable = ((Attr) source).getValue(); if (Boolean.parseBoolean(isAvailable)) { new PluginBeanDefinitionRegistry(ctx.getRegistry()).addBeanName(holder.getBeanName()); 
0," String label = ((ConstraintType)object).getLabel(); return label == null || label.length() == 0 ? getString(""_UI_ConstraintType_type"") : getString(""_UI_ConstraintType_type"") + "" "" + label; ", int hash = HASH_BASE; hash = HASH_PRIME * hash + (this.parameters != null ? this.parameters.hashCode() : 0); hash = HASH_PRIME * hash + (this.value != null ? this.value.hashCode() : 0); return hash; 
1," IGeocodingService geocodingService = new GeocodingService(); geocodingService.geocodeAndSerialize(new AddressQuery(""address"", ""XX""), null); fail(""executeAndSerialize does not accept null query""); "," IGeocodingService XXXXX = new GeocodingService(); XXXXX.geocodeAndSerialize(new AddressQuery(""address"", ""XX""), null); fail(""executeAndSerialize does not accept null query""); "
1," EntityManager em = getEntityManager(); em.getTransaction().begin(); BasicTestEntity1 bte1 = em.find(BasicTestEntity1.class, id); bte1.setLong1(lng); bte1.setStr1(str); em.getTransaction().commit(); "," EntityManager XXXXX = getEntityManager(); XXXXX.getTransaction().begin(); BasicTestEntity1 XXXXX = XXXXX.find(BasicTestEntity1.class, id); XXXXX.setLong1(lng); XXXXX.setStr1(str); XXXXX.getTransaction().commit(); "
0," solo.sleep(300); UiTestUtils.clickOnActionBar(solo, R.id.menu_add); solo.sleep(200); solo.enterText(0, spriteName); solo.clickOnButton(solo.getString(R.string.ok)); solo.sleep(100); "," return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SLinkOperations.getTarget(it, ""throwable"", true), ""type"", true), ""jetbrains.mps.baseLanguage.structure.ClassifierType""); "
1," InternetDomainName domain = InternetDomainName.from(""foo.com""); assertEquals(""www.foo.com"", domain.child(""www"").name()); try { domain.child(""www.""); fail(""www..google.com should have been invalid""); "," InternetDomainName domain = InternetDomainName.from(""foo.com""); assertEquals(""www.foo.com"", domain.child(""www"").name()); try { domain.child(""www.""); fail(""www..google.com should have been invalid""); "
0," return ""LogicServer [name="" + getName() + "", associated="" + getAssociated() + "", type="" + getType() + "", associatedTo="" + getAssociatedTo() + "", description="" + getDescription() + ""]""; "," try { final File db = new File(fileName); final File dbPath = db.getParentFile(); if (!dbPath.exists()) { if (!dbPath.mkdirs()) { throw new RuntimeException(""Could not create directory""); "
0," if(line.equals("""")) return false; int i = line.indexOf(':'); if (i > 0) { String key = line.substring(0, i); String value = line.substring(i + 1).trim(); readHeaders.put(key, value); "," try { ZipFile zip = new ZipFile(file); for (ZipEntry entry : Collections.list(zip.entries())) { if (entry.getName().startsWith(""annotations"")) { annotationsCheckbox.setEnabled(true); "
1, scriptContext = context; if ( scriptContext != null ) { timeZone = (TimeZone) scriptContext.findProperty( org.eclipse.birt.core.script.functionservice.IScriptFunctionContext.TIMEZONE ); , scriptContext = context; if ( scriptContext != null ) { timeZone = (TimeZone) scriptContext.findProperty( org.eclipse.birt.core.script.functionservice.IScriptFunctionContext.TIMEZONE ); 
1," AbstractInplaceSelect select = (AbstractInplaceSelect) component; String height = getListHeight(select); return (height != null && height.trim().length() != 0) ? (""height: "" + height) : """"; "," AbstractInplaceSelect select = (AbstractInplaceSelect) component; String height = getListHeight(select); return (height != null && height.trim().length() != 0) ? (""height: "" + height) : """"; "
1," IntOpenHashSet list2 = new IntOpenHashSet(); list2.add(1, 3, 5); set = new IntDoubleLinkedSet(list2); assertEquals(3, set.size()); assertSortedListEquals(list2.toArray(), set.toArray()); "," IntOpenHashSet XXXXX = new IntOpenHashSet(); XXXXX.add(1, 3, 5); set = new IntDoubleLinkedSet(XXXXX); assertEquals(3, set.size()); assertSortedListEquals(XXXXX.toArray(), set.toArray()); "
1," plugin.getAPI().setPlayerInfo(event.getPlayer().getName(), ""lastSeen"", Long.toString((System.currentTimeMillis() / 1000L))); plugin.getAPI().processTimes(event.getPlayer().getName()); "," plugin.getAPI().setPlayerInfo(event.getPlayer().getName(), ""lastSeen"", Long.toString((System.currentTimeMillis() / 1000L))); plugin.getAPI().processTimes(event.getPlayer().getName()); "
1," try { LogUtil.put(LogFactory.getInstance( CommonStrings.getInstance().START, this, ""onGameInitialized"")); FeatureResourceInitializationUtil.getInstance().init( gameInitializedEvent.getLevel()); "," try { LogUtil.put(LogFactory.getInstance( CommonStrings.getInstance().START, this, ""onGameInitialized"")); FeatureResourceInitializationUtil.getInstance().init( gameInitializedEvent.getLevel()); "
1," Group group = new Group(parent, SWT.SCROLL_PAGE); group.setLayout(new GridLayout()); group.setText(SELECT_LOADING_STRATEGY); fComboSize = createComboSize(group); addFieldEditor(fComboSize); "," Group XXXXX = new Group(parent, SWT.SCROLL_PAGE); XXXXX.setLayout(new GridLayout()); XXXXX.setText(SELECT_LOADING_STRATEGY); fComboSize = createComboSize(XXXXX); addFieldEditor(fComboSize); "
0, this.name = name; this.index = index; this.size = size; this.startSector = startSector; this.SIDLeftSibling = SIDLeftSibling; this.SIDRightSibling = SIDRightSibling; this.SIDChild = SIDChild; ," DataModelParser parser = new DataModelParser(); try { SAXParserFactory factory = SAXParserFactory.newInstance(); SAXParser saxParser = factory.newSAXParser(); saxParser.parse(input, parser); "
1," if (minValue != null && minPeriod != null) { Date minAgeDate = calculateDateBasedOnTimePeriodAndTimeValue(patient.getBirthdate(), minValue, minPeriod); if (!date.after(minAgeDate)) { return false; "," if (minValue != null && minPeriod != null) { Date XXXXX = calculateDateBasedOnTimePeriodAndTimeValue(patient.getBirthdate(), minValue, minPeriod); if (!date.after(XXXXX)) { return false; "
1," super(plugin); name = ""Summon""; description = ""Summons a creature to fight by your side""; usage = ""/skill summon <creature>""; minArgs = 1; maxArgs = 1; identifiers.add(""skill summon""); "," super(plugin); name = ""Summon""; description = ""Summons a creature to fight by your side""; usage = ""/skill summon <creature>""; minArgs = 1; maxArgs = 1; identifiers.add(""skill summon""); "
0," assertEquals(""test1 name"", ""test1"", TEST_BOM_1.getCharsetName()); assertEquals(""test2 name"", ""test2"", TEST_BOM_2.getCharsetName()); assertEquals(""test3 name"", ""test3"", TEST_BOM_3.getCharsetName()); "," try { MapMessage msg = this.session.createMapMessage(); Set<Object> keys = map.keySet(); for (Object key : keys) { Object value = map.get(key); msg.setObject(key.toString(), value); "
1," GammaTxnLong ref = new GammaTxnLong(stm, 10); GammaTxn tx = stm.newDefaultTxn(); ref.getLock().acquire(tx, LockMode.Exclusive); assertIsActive(tx); assertRefHasExclusiveLock(ref, tx); "," GammaTxnLong XXXXX = new GammaTxnLong(stm, 10); GammaTxn XXXXX = stm.newDefaultTxn(); XXXXX.getLock().acquire(XXXXX, LockMode.Exclusive); assertIsActive(XXXXX); assertRefHasExclusiveLock(XXXXX, XXXXX); "
0," DownloadWorker worker = downloadWorkerFactory.create(this, rfdContext, commonOutFile); synchronized (this) { _workers.add(worker); currentRFDs.add(rfdContext.getRemoteFileDesc()); "," this.currentText = new MText(string(node.getName())); if (!this.ir.getDestinationPackage().equals("""")) { this.currentText.newPackageDeclaration(this.ir .getDestinationPackage()); "
1, StringBuilder bits = new StringBuilder(bytes.remaining() * 8); while (bytes.remaining() > 0) { byte b = bytes.get(); for (int i = 0; i < 8; i++) { bits.append(Integer.valueOf(b >>> i & 1)); , StrXXXXXngBuXXXXXlder XXXXX = new StrXXXXXngBuXXXXXlder(XXXXXytes.remaXXXXXnXXXXXng() * 8); whXXXXXle (XXXXXytes.remaXXXXXnXXXXXng() > 0) { XXXXXyte XXXXX = XXXXXytes.get(); for (XXXXXnt XXXXX = 0; XXXXX < 8; XXXXX++) { XXXXX.append(Integer.valueOf(XXXXX >>> XXXXX & 1)); 
1, synchronized (channel) { TransportData transportData = channel.getTransportData(); if (transportData == null) { transportData = new TransportData(); channel.setTransportData(transportData); , synchronized (channel) { TransportData XXXXX = channel.getTransportData(); if (XXXXX == null) { XXXXX = new TransportData(); channel.setTransportData(XXXXX); 
1," final ActionSet actionSet = new ActionSet( relType ); final String name = relType.name(); actionMap.put( name, actionSet ); actionSet.addAt( actionMap.headMap( name ).size() + 1 ); "," final ActionSet actionSet = new ActionSet( relType ); final String name = relType.name(); actionMap.put( name, actionSet ); actionSet.addAt( actionMap.headMap( name ).size() + 1 ); "
0," super(new URL[0], parent); this.parent = getParent(); system = getSystemClassLoader(); securityManager = System.getSecurityManager(); if (securityManager != null) { refreshPolicy(); "," w(""digraph G {\n""); w(""\tnode [shape=box];\n""); List<AnnisNode> token = new LinkedList<AnnisNode>(); for (AnnisNode n : input.getResult().getGraph().getNodes()) { if(n.isToken()) { token.add(n); "
1, Object val = edge.getEdgeData().getAttributes().getValue(column.getIndex()); val = dynamicHelper.getDynamicValue(val); if (val != null && useRegex) { return regex.matcher((String) val).matches(); , Object val = edge.getEdgeData().getAttributes().getValue(column.getIndex()); val = dynamicHelper.getDynamicValue(val); if (val != null && useRegex) { return regex.matcher((String) val).matches(); 
0," if (nodeObject instanceof ROINode) { ROINode node = (ROINode) nodeObject; if (column == ANNOTATION_COLUMN+1) { if (value == null) value = """"; else if (value.equals("""")) value = "" ""; "," value += minValue; final Paint paint = mPaint; final float v = value * mScaleX; paint.setColor(mColor[pos]); mCanvas.drawRect(minValue * mScaleX, barHeight*pos, v, barHeight*(pos+1), paint); "
0," ContentValues vals = new ContentValues(); vals.put(SQLiteDAO.COL_ID, _id); vals.put(SQLiteDAO.COL_MDATE, date_modified); vals.put(SQLiteDAO.COL_CDATE, date_created); return vals; ", if (currentCursor.equals(c)) return; try { EventQueue.invokeLater(new Runnable() { public void run() { if (!(Main.map.mapMode instanceof WayAction)) return; Main.map.mapView.setCursor(c); 
0," assert Thread.holdsLock(writeLock); final AtomicReferenceArray<Item<K, V>[]> oldTable = table; final int oldCapacity = oldTable.length(); if (oldCapacity == MAXIMUM_CAPACITY) { return; ", boolean transitive = isTransitive() && context.isTransitive(); if (transitive) { for (Dependency dependency : getProjectConfiguration().getAllDependencies()) { context.add(dependency); 
1, GrailsProjectVersionFixer.globalAskToUpgradeAnswer = false; GrailsProjectVersionFixer.globalAskToConvertToGrailsProjectAnswer = false; GrailsProjectVersionFixer.globalAskToConfigureAnswer = false; , GrailsProjectVersionFixer.globalAskToUpgradeAnswer = false; GrailsProjectVersionFixer.globalAskToConvertToGrailsProjectAnswer = false; GrailsProjectVersionFixer.globalAskToConfigureAnswer = false; 
0," HttpRequest request = HttpRequest.builder().method(""GET"").endpoint(""http: BindIdsToQueryParams binder = new BindIdsToQueryParams(); request = binder.bindToRequest(request, new long[] { 123L, 456L "," tag = HTML.Tag.ADDRESS; assertEquals(""address"", tag.toString()); assertFalse(""breaks Flow"", tag.breaksFlow()); assertFalse(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); "
0," if (this.contentRange == null) { this.contentRange = ""Content-Range: bytes "" + Long.toString(this.start) + ""-"" + Long.toString(this.end) + ""/"" + Long.toString(this.entityLength); "," String source = _children[0].toGetSourceString(context, target); if (!ASTBitNegate.class.isInstance(_children[0])) { return ""~("" + super.coerceToNumeric(source, context, _children[0]) + "")""; "
1," Matcher<Integer[]> matcher = arrayContaining(1, 2, 3); assertMismatchDescription(""was null"", matcher, null); assertMismatchDescription(""No item matched: <1>"", matcher, new Integer[] {"," Matcher<Integer[]> matcher = arrayContaining(1, 2, 3); assertMismatchDescription(""was null"", matcher, null); assertMismatchDescription(""No item matched: <1>"", matcher, new Integer[] {"
1, fPositionToElement= new HashMap(); try { ProjectionAnnotationModel model = (ProjectionAnnotationModel) fEditor.getAdapter(ProjectionAnnotationModel.class); if (model == null) { return; , fPositionToElement= new HashMap(); try { ProjectionAnnotationModel XXXXX = (ProjectionAnnotationModel) fEditor.getAdapter(ProjectionAnnotationModel.class); if (XXXXX == null) { return; 
1," SearchKey key = SearchKey .buildTo(""JAMES Server Development <server-dev@james.apache.org>""); return new Input( ""To \""JAMES Server Development <server-dev@james.apache.org>\"""", key); "," SearchKey XXXXX = SearchKey .buildTo(""JAMES Server Development <server-dev@james.apache.org>""); return new Input( ""To \""JAMES Server Development <server-dev@james.apache.org>\"""", XXXXX); "
0," if(getConfig().getSessionType()==Config.SESSION_TYPE_J2EE) { HttpSession s = getSession(); return ""CFID=""+getCFID()+""&CFTOKEN=""+getCFToken()+""&jsessionid=""+(s!=null?getSession().getId():""""); "," assertNotNull(new Announcement(""environment"", ""node"", ""pool"", ""location"", ImmutableSet.of( serviceAnnouncement(""foo"") .addProperty(""http"", ""http: .addProperty(""jmx"", ""jmx: .build()) )); "
0, if (me.button != 1) return; ButtonModel model = ((Clickable) me.getSource()).getModel(); if (!model.isPressed()) return; model.setPressed(false); model.setArmed(false); me.consume(); ," methodNamePattern = ""get(\\w+)""; fieldCaptureGroupNumber = 1; numParameters = 0; methodTypePattern = ""%FT%""; methodAttributePattern = "".*public.*""; body = ""{\\s*return\\s*%fn%;\\s*"
1," if(sectionUuid == null || isNotValidated()) { String sectionUuidFromParam = JsfUtil.getStringFromParam(""sectionUuid""); if(sectionUuidFromParam != null) { sectionUuid = sectionUuidFromParam; "," if(sectionUuid == null || isNotValidated()) { String sectionUuidFromParam = JsfUtil.getStringFromParam(""sectionUuid""); if(sectionUuidFromParam != null) { sectionUuid = sectionUuidFromParam; "
0, int hashCode = 23; if ( displayName != null ) hashCode += displayName.hashCode( ) * 7; if ( model.getModuleHandle( ) != null ) hashCode += model.getModuleHandle( ).hashCode( ) * 13; return hashCode; ," if ((newDisplay != DISPLAY_AWT) && (newDisplay != DISPLAY_SWING) && (newDisplay != DISPLAY_SWT)) { throw new IllegalArgumentException(""Illegal display value: "" + Integer.toString(newDisplay)); "
0," if (min > max) throw new IllegalArgumentException(format(""bad range, %d > %d"", min, max)); if (min == max) return min; int nextRandom = random.nextInt(max - min + 1); return nextRandom + min; "," StringBuilder contents = new StringBuilder(); String line = null; try { while (( line = input.readLine()) != null){ contents.append(line); contents.append(System.getProperty(""line.separator"")); "
1," if (DataConversions.random(0, 4) != 0) { owner.getActionSender() .sendMessage( ""You get some wool""); owner.getInventory().add( new InvItem(145, 1)); owner.getActionSender() .sendInventory(); "," if (DataConversions.random(0, 4) != 0) { owner.getActionSender() .sendMessage( ""You get some wool""); owner.getInventory().add( new InvItem(145, 1)); owner.getActionSender() .sendInventory(); "
0, this.scheduler.schedule ( new Runnable () { @Override public void run () { if ( EventHistoryView.this.queryRef.get () != null ) { EventHistoryView.this.queryRef.get ().loadMore ( LOAD_NO_OF_ITEMS ); , HSSFSheet retval = null; for (int k = 0; k < _sheets.size(); k++) { String sheetname = workbook.getSheetName(k); if (sheetname.equalsIgnoreCase(name)) { retval = (HSSFSheet) _sheets.get(k); 
0, AnnouncementsDelivery announcementsDelivery = new AnnouncementsDeliveryImpl(); announcementsDelivery.setNew(true); announcementsDelivery.setPrimaryKey(deliveryId); return announcementsDelivery; ," String string = """"; IteratoritValues = values.iterator(); while (itValues.hasNext()) { string = string.concat((String) itValues.next()); if (itValues.hasNext()) { string = string.concat("";""); "
1," int trainingLines = countMap.get(inputFile.getName()) - testSplitSize; assertSplit(fs, inputFile, charset, testSplitSize, trainingLines, tempTrainingDirectory, tempTestDirectory); "," int XXXXX = countMap.get(inputFile.getName()) - testSplitSize; assertSplit(fs, inputFile, charset, testSplitSize, XXXXX, tempTrainingDirectory, tempTestDirectory); "
0, File cacheDir = bundle.getCachePath(); if (!cacheDir.exists()) return; File[] files = cacheDir.listFiles(); if (files == null) return; for (File file : files) { if (file.isFile()) file.delete(); , Calendar calendar = Calendar.getInstance(); calendar.setTime(new Date()); long todayDate = calendar.getTimeInMillis(); today = (int) ((todayDate - baseDate) / (24 * 60 * 60 * 1000)); 
0, FieldInfo field = createFieldInfo(iVisited); field.name = iVisited.getName(); field.isDynamic = true; requestor.enterField(field); exitField(iVisited); return super.visitDAsgnNode(iVisited); ," view.addRulesLabel(resources.getString(""Rules.CharacterType.Message"", resources.getString( character.getCharacterTemplate().getPresentationProperties().getNewActionResource()))); "
1, if (obj instanceof ModuleAdapter) { ModuleAdapter other = (ModuleAdapter) obj; String otherPath = other.getFile().getAbsolutePath(); return file.getAbsolutePath().equalsIgnoreCase(otherPath); , if (obj instanceof ModuleAdapter) { ModuleAdapter other = (ModuleAdapter) obj; String otherPath = other.getFile().getAbsolutePath(); return file.getAbsolutePath().equalsIgnoreCase(otherPath); 
0, Settings settings = Settings.getSettings(); settings.setInstallPath(installFolderTextField.getText()); settings.setForceUpdate(tglbtnForceUpdate.getModel().isPressed()); try { settings.save(); , switch (ringVolume) { case 0: break; case 1: ringSound1.play(); break; case 2: ringSound2.play(); break; case 3: ringSound3.play(); break; default: throw new IllegalStateException(); 
0," IAccessManagement port = null; try { URL SOAP_URL = new URL(""http: AccessManagement service = new AccessManagementLocator(); port = service.getBasicHttpBinding_IAccessManagement(SOAP_URL); ", TestSuite testSuite = new TestSuite(); testSuite.addTest(Login52xTests.suite()); testSuite.addTest(GroupsTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; 
0," super(db, prefs); sTableName = Database.sTableNameAppointments; fnCmp = new RowsComparator(); for (int iDay = 0; iDay < 42; iDay++) { vecDateRangeCache[iDay] = new RepeatDataValue(); "," if ( event.keyCode == 127 ) { FileObject[] files = getSelectedFiles(); int count = files.length; String message = (count == 1) ? getResourceString(""msg.box.delete.uri"", new Object[]{files[0]"
0," HighlightingColorListItem item= getHighlightingColorListItem(); PreferenceConverter.setValue(getPreferenceStore(), item.getColorKey(), fSyntaxForegroundColorEditor.getColorValue()); "," node.getExpression().accept(this); this.buffer.append("" ? ""); node.getThenExpression().accept(this); this.buffer.append("" : ""); node.getElseExpression().accept(this); return false; "
0," return ""GraphEntry [name="" + name + "", parts="" + Arrays.toString(parts) + "", op="" + operation + "", path="" + path + (subSpec == null ? """" : "", subSpec="" + subSpec.getName()) + ""]""; "," String prefix = """"; if (mode == ABSOLUTE) prefix = "".""; else if (mode == SUB_PAGE) prefix = "">""; else if (mode == BACKWARD_SEARCH) prefix = ""<""; return prefix + StringUtil.join(names, "".""); "
0, List names = new ArrayList(); for (Iterator iter = datasets.values().iterator(); iter.hasNext();) { DatasetConfig dset = (DatasetConfig) iter.next(); names.add(dset.getInternalName()); ," String label = ((AuditContainer)object).getName(); return label == null || label.length() == 0 ? getString(""_UI_AuditContainer_type"") : getString(""_UI_AuditContainer_type"") + "" "" + label; "
0," super(downloadList, cursor, cursor.getColumnIndexOrThrow(DownloadManager.COLUMN_LAST_MODIFIED_TIMESTAMP)); mDelegate = new DownloadAdapter(downloadList, cursor); mDownloadList = downloadList; "," updateTimer.putExtra(""hours"", hours); updateTimer.putExtra(""minutes"", minutes); updateTimer.putExtra(""seconds"", seconds); updateTimer.putExtra(""position"", position); sendBroadcast(updateTimer); "
0," File siteRepository = new File( new File( Manager.getStorageInstance().getDataDirectory(), ""repository"" ), ""site"" ); return new File( new File( siteRepository, project.getId() ), ""api"" ); ", ArrayList<DomCardName> theSingleCards = new ArrayList<DomCardName>(); for (DomCard theCard : islandMat) { if (!theSingleCards.contains(theCard.getName())){ theSingleCards.add(theCard.getName()); 
0," if (request instanceof PortletRequest && response instanceof PortletResponse) { return new PortletTilesRequestContext( context, (PortletRequest) request, (PortletResponse) response); "," Log.i(DEBUG_TAG, ""TriggerInit: Resetting all triggers""); DbHelper dbHelper = new DbHelper(context); for (Campaign c : dbHelper.getReadyCampaigns()) { resetTriggersAndSettings(context, c.mUrn); "
0," Variable<Agent> v = d_parser.getContext().getAgentVarMap().getOrCreate(L.tostring(1)); AgentId id = d_parser.getContext().getAgentIdMap().getOrCreate(L.tostring(2)); d_sub.put(v, id); return 0; ", int hash = 7; hash = 89 * hash + Objects.hashCode(this.getId()); hash = 89 * hash + Objects.hashCode(this.getVersion()); hash = 89 * hash + Objects.hashCode(this.getNombre()); return hash; 
1, if (mrjVersion >= 4.0f) MRJ4EventProxy.getInstance().removeReopenApplicationListener(l); else if (mrjVersion >= 2.2f) MRJ23EventProxy.getInstance().removeReopenApplicationListener(l); , if (mrjVersion >= 4.0f) MRJ4EventProxy.getInstance().removeReopenApplicationListener(l); else if (mrjVersion >= 2.2f) MRJ23EventProxy.getInstance().removeReopenApplicationListener(l); 
0," ApplicationInfo info = new ApplicationInfo(); info.packageName = mPackageName; ApplicationInfo copy = new ApplicationInfo(info); assertEquals(info.packageName, copy.packageName); "," if (playerRealCoords.dist(lastPlayerRealCoords) > tilesz.x * 100) startNewSession(playerRealCoords, mCache); synchronized (lastPlayerRealCoords) { lastPlayerRealCoords = playerRealCoords; "
1, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(Community611LatestTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , TestSuite XXXXX = new TestSuite(); XXXXX.addTest(LoginTests.suite()); XXXXX.addTest(Community611LatestTestPlan.suite()); XXXXX.addTestSuite(StopSeleniumTest.class); return XXXXX; 
0," assertEquals(LEAST, Ints.max(LEAST)); assertEquals(GREATEST, Ints.max(GREATEST)); assertEquals((int) 9, Ints.max( (int) 8, (int) 6, (int) 7, (int) 5, (int) 3, (int) 0, (int) 9)); ", TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(Groups611LatestTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; 
1," if (!mFileViewListener.shouldHideMenu(itemId)) { MenuItem item = menu.add(0, itemId, order, string).setOnMenuItemClickListener(menuItemClick); if (iconRes > 0) { item.setIcon(iconRes); "," if (!mFileViewListener.shouldHideMenu(itemId)) { MenuItem item = menu.add(0, itemId, order, string).setOnMenuItemClickListener(menuItemClick); if (iconRes > 0) { item.setIcon(iconRes); "
1, m_customStack.push(m_currentCustom); NestingCustomBase custom = (NestingCustomBase)(((ComponentExtension)node.getExtension())).getCustom(); if (custom != null) { m_currentCustom = custom; , m_XXXXXStack.push(m_currentCustom); NestingCustomBase XXXXX = (NestingCustomBase)(((ComponentExtension)node.getExtension())).getCustom(); if (XXXXX != null) { m_currentCustom = XXXXX; 
0," super(""testResultDetailsExportDestinationPage""); setTitle(Messages.ExportTestResultDetailsWizardDestinationPageTitle); setDescription( Messages.ExportTestResultDetailsWizardPageDescription); "," try { device.read(address, data); if (LOGGER.isDebugEnabled()) { LOGGER.debug(""Read "" + data.length / blockSize + "" blocks from address "" + address + "" from "" + device.getName()); "
0," JodaBeanUtils.notNull(interpolatedYieldCurveDefinitionSource, ""interpolatedYieldCurveDefinitionSource""); this._interpolatedYieldCurveDefinitionSource = interpolatedYieldCurveDefinitionSource; "," return new PlayerKilledEvent(event.getEntity(), event.getDrops(), event.getDroppedExp(), event.getNewExp(), event.getNewTotalExp(), event.getNewLevel(), event.getDeathMessage()); "
1, final int prime = 31; int result = 1; result = prime * result + ((sessionId == null) ? 0 : sessionId.hashCode()); result = prime * result + ((type == null) ? 0 : type.hashCode()); return result; , final int XXXXX = 31; int XXXXX = 1; XXXXX = XXXXX * XXXXX + ((sessionId == null) ? 0 : sessionId.hashCode()); XXXXX = XXXXX * XXXXX + ((type == null) ? 0 : type.hashCode()); return XXXXX; 
1, IEclipsePreferences root = (IEclipsePreferences)Platform.getPreferencesService().getRootNode().node(Plugin.PLUGIN_PREFERENCE_SCOPE); try { if(!(root.nodeExists(nodeQualifier))) { return; , IEclipsePreferences XXXXX = (IEclipsePreferences)Platform.getPreferencesService().getRootNode().node(Plugin.PLUGIN_PREFERENCE_SCOPE); try { if(!(XXXXX.nodeExists(nodeQualifier))) { return; 
1, synchronized (project) { project.rows.clear(); project.rows.addAll(_oldRows); for (int i = 0; i < _columnNames.size(); i++) { project.columnModel.columns.remove(_columnInsertIndex); , synchronized (project) { project.rows.clear(); project.rows.addAll(_oldRows); for (int i = 0; i < _columnNames.size(); i++) { project.columnModel.columns.remove(_columnInsertIndex); 
0," PlatformUI.getPreferenceStore().addPropertyChangeListener(this); JFaceResources.getColorRegistry().addListener(this); setOwnerDrawEnabled(showColoredLabels()); super.initialize(viewer, column); "," double result = 0; for (int row = 1; row <= board.getSize(); row++) { for (int col = 1; col <= board.getSize(); col++) { result += board.getValueAt(row, col) * getValue(row, col); "
1, if (e.getStateChange() == ItemEvent.SELECTED) { if (this.selindex != getSelectedIndex()) { this.treetable.editingStopped(new ChangeEvent(this)); this.selindex = getSelectedIndex(); , if (e.getStateChange() == ItemEvent.SELECTED) { if (this.selindex != getSelectedIndex()) { this.treetable.editingStopped(new ChangeEvent(this)); this.selindex = getSelectedIndex(); 
1, if ( element instanceof RelationshipTypeControl ) { RelationshipTypeControl control = (RelationshipTypeControl) element; if ( index == 1 ) { return control.isIn() ? CHECKED : UNCHECKED; , if ( element instanceof RelationshipTypeControl ) { RelationshipTypeControl XXXXX = (RelationshipTypeControl) element; if ( index == 1 ) { return XXXXX.isIn() ? CHECKED : UNCHECKED; 
1," DependencyDescriptorFactoryInternal factoryInternal = findFactoryForDependency(dependency); return factoryInternal.addDependencyDescriptor(configuration, moduleDescriptor, dependency); "," DependencyDescriptorFactoryInternal XXXXX = findFactoryForDependency(dependency); return XXXXX.addDependencyDescriptor(configuration, moduleDescriptor, dependency); "
0, TextColumnWithTooltip<VmNetworkInterface> nameColumn = new TextColumnWithTooltip<VmNetworkInterface>() { @Override public String getValue(VmNetworkInterface object) { return object.getName(); ," if (requireChange(this.notNull, notNull)) { Object oldValue = this.notNull; this.notNull = notNull; setChanged(); notifyObservers(new SGAttributeModification(""notNull"", oldValue, notNull)); "
0," Properties properties = new Properties(); try { InputStream inputStream = getClass().getResourceAsStream( ""pmdViewer.properties""); if (inputStream != null) { properties.load(inputStream); "," putValue(Action.SHORT_DESCRIPTION, tr(""Cancel conflict resolution"", null)); putValue(Action.NAME, tr(""Cancel"", null)); putValue(Action.SMALL_ICON, ImageProvider.get("""", ""cancel"")); setEnabled(true); "
1, token_source = tm; token = new Token(); jj_ntk = -1; jj_gen = 0; for (int i = 0; i < 41; i++) jj_la1[i] = -1; for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls(); , token_source = tm; token = new Token(); jj_ntk = -1; jj_gen = 0; for (XXXXXnt XXXXX = 0; XXXXX < 41; XXXXX++) jj_la1[XXXXX] = -1; for (XXXXXnt XXXXX = 0; XXXXX < jj_2_rtns.length; XXXXX++) jj_2_rtns[XXXXX] = new JJCalls(); 
1, if(ve instanceof InsufficientOperationalNodesException || ve instanceof InsufficientZoneResponsesException || ve instanceof InvalidMetadataException) return true; else return false; , if(ve instanceof InsufficientOperationalNodesException || ve instanceof InsufficientZoneResponsesException || ve instanceof InvalidMetadataException) return true; else return false; 
0," ArrayList<Long> listA = new ArrayList<Long>(); ArrayList<Long> listB = new ArrayList<Long>(); listA.addAll(Arrays.asList(new Long[] { TWENTY, EIGHTEEN, FIFTEEN, ELEVEN, 9L, 8L, 7L, 3L, 1L "," try { Node node = parentFolder.getNode().addNode(name, NodeType.NT_FOLDER); addMixins(node); updateProperties(node, properties); node.getSession().save(); return getJcrNode(node); "
0, return new MiniDFSNNTopology() .addNameservice(new MiniDFSNNTopology.NSConf(null) .addNN(new MiniDFSNNTopology.NNConf(null) .setHttpPort(nameNodeHttpPort) .setIpcPort(nameNodePort))); ," sp.printHTMLheader(""RUBiS ERROR: PutComment""); sp.printHTML( ""<h2>Your request has not been processed due to the following error :</h2><br>""); sp.printHTML(errorMsg); sp.printHTMLfooter(); "
1," String oldGroupId = groupId; groupId = newGroupId; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, POMPackage.RELOCATION__GROUP_ID, oldGroupId, groupId)); "," String XXXXX = groupId; groupId = newGroupId; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, POMPackage.RELOCATION__GROUP_ID, XXXXX, groupId)); "
1," super(ParentBChildBar.class, ""parent_b_child_bar"", alias); this.columns.add(this.id); this.columns.add(this.name); this.columns.add(this.version); this.columns.add(this.parentBParent); "," super(ParentBChildBar.class, ""parent_b_child_bar"", alias); this.columns.add(this.id); this.columns.add(this.name); this.columns.add(this.version); this.columns.add(this.parentBParent); "
0, String directoryPath = PathManager.getConfigPath() + File.separator + INSPECTION_DIR; File directory = new File(directoryPath); if (!directory.exists()) { if (!directory.mkdir()) { return null; , LifecycleUtil.checkActive(this); if (replacingDescriptors && value instanceof EPackage.Descriptor) { EPackage.Descriptor descriptor = (EPackage.Descriptor)value; value = descriptor.getEPackage(); 
0," if (Double.isNaN(value) || Double.isInfinite(value)) return value; Double d; d = Math.min(value, Float.MAX_VALUE); d = Math.max(value, -Float.MAX_VALUE); if (cut == 1.0) { return d; "," String urlString = this.getURLString(); String responseText = this.responseText; if ( urlString.startsWith( ""bedazzle.php"" ) ) { EquipmentRequest.parseBedazzlements( responseText ); return; "
1," Map<String, Object> environment = new HashMap<String, Object>(); if ( username != null && password != null ) { environment.put( JMXConnector.CREDENTIALS, new String[] { username, password "," Map<String, Object> environment = new HashMap<String, Object>(); if ( username != null && password != null ) { environment.put( JMXConnector.CREDENTIALS, new String[] { username, password "
0," AtomicReferenceFieldUpdater<AtomicReferenceFieldUpdaterTest, Integer>a; try { a = AtomicReferenceFieldUpdater.newUpdater(AtomicReferenceFieldUpdaterTest.class, Integer.class, ""x""); "," System.clearProperty(KANBAN_HOME_PROPERTY_NAME); KanbanService service = new KanbanService(); assertThat(service.getHome(), is(new File(System.getProperty(""user.home""), "".kanban""))); "
0," System.out.println(""starting dependency test bundle""); Runnable runnable = new Runnable() { public void run() { try { bundle.start(); System.out.println(""started dependency test bundle""); "," if (_scheme.equals("""")) throw new NullPointerException(""Should not be trying to get the parent of NULL URL""); try { if (_fragment != null || _query != null) { return new HttpUrl(getSHPP()); "
1, this.worldMap = worldmap; this.b = new int[128]; this.c = new int[128]; this.e = 0; this.f = 0; this.trackee = entityhuman; for (int i = 0; i < this.b.length; ++i) { this.b[i] = 0; this.c[i] = 127; , thXXXXXs.worldMap = worldmap; thXXXXXs.b = new XXXXXnt[128]; thXXXXXs.c = new XXXXXnt[128]; thXXXXXs.e = 0; thXXXXXs.f = 0; thXXXXXs.trackee = entXXXXXtyhuman; for (XXXXXnt XXXXX = 0; XXXXX < thXXXXXs.b.length; ++XXXXX) { thXXXXXs.b[XXXXX] = 0; thXXXXXs.c[XXXXX] = 127; 
0," onException(CamelAuthorizationException.class). to(""mock:authorizationException""); from(""direct:secureEndpoint""). policy(securityPolicy). to(""log:incoming payload""). to(""mock:success""); "," int responseCode = 200; String data; try { data = Utils.readLine(in); if (data != null) { httpRequest.updatePath(data); header.append(data).append(""\r\n""); responseCode = parseResponseCode(data); "
1," InputMap inputMap = new InputMap(); for (Object obj : actionMap.keys()) { KeyStroke key = (KeyStroke) actionMap.get(obj).getValue(Action.ACCELERATOR_KEY); if (key != null) { inputMap.put(key, obj); "," InputMap XXXXX = new InputMap(); for (Object obj : actionMap.XXXXXs()) { KeyStroke XXXXX = (KeyStroke) actionMap.get(obj).getValue(Action.ACCELERATOR_KEY); if (XXXXX != null) { XXXXX.put(XXXXX, obj); "
0, if(remoteUser!=null)remoteUser=null; String name=Login.getApplicationName(applicationContext); cookieScope().removeEL(KeyImpl.init(name)); try { sessionScope().removeEL(KeyImpl.init(name)); , assertNotNull(PositionalAccuracyImpl.DATUM_SHIFT_APPLIED); assertNotNull(PositionalAccuracyImpl.DATUM_SHIFT_OMITTED); usingDefaultFactory = !(opFactory instanceof AuthorityBackedFactory); 
0, this.id = id; this.name = name; this.tectReg = tectReg; this.topTrace = TopTrace; this.bottomTrace = BottomTrace; this.rake = rake; this.mfd = mfd; this.floatRuptureFlag = floatRuptureFlag; , if (tm == null) { try { Object o = safeInitNewInstance(transactionManagerLocatorClass); Method m = o.getClass().getMethod(transactionManagerLocatorMethod); tm = (TransactionManager)m.invoke(o); 
1," super(lengthMilli, movement, onStop, onCancel); this.start = start; this.end = end; step = end - start; easingFunction.init(0, 1, (int) lengthMilli); this.scrollBar = scrollBar; current = start; "," super(lengthMilli, movement, onStop, onCancel); this.start = start; this.end = end; step = end - start; easingFunction.init(0, 1, (int) lengthMilli); this.scrollBar = scrollBar; current = start; "
1," Rectangle parentBounds = layeredPane.getBounds(); int w = getPreferredSize().width; int h = getPreferredSize().height; setLocation(parentBounds.width - w, parentBounds.height - h); "," Rectangle XXXXX = layeredPane.getBounds(); int XXXXX = getPreferredSize().XXXXXidtXXXXX; int XXXXX = getPreferredSize().XXXXXeigXXXXXt; setLocation(XXXXX.XXXXXidtXXXXX - XXXXX, XXXXX.XXXXXeigXXXXXt - XXXXX); "
0," try { String contents = getContents(); ByteArrayInputStream stream = new ByteArrayInputStream(contents.getBytes(""UTF8"")); if (fFile.exists()) { fFile.setContents(stream, false, false, null); ", token_source.ReInit(stream); token = new Token(); jj_ntk = -1; jj_gen = 0; for (int i = 0; i < 28; i++) jj_la1[i] = -1; for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls(); 
1," boolean showaltitude = mSharedPreferences.getBoolean( Constants.ALTITUDE, false ); if( showaltitude ) { mLastGPSAltitudeView.setVisibility( View.VISIBLE ); mLastGPSAltitudeView.setText( """" ); "," boolean showaltitude = mSharedPreferences.getBoolean( Constants.ALTITUDE, false ); if( showaltitude ) { mLastGPSAltitudeView.setVisibility( View.VISIBLE ); mLastGPSAltitudeView.setText( """" ); "
1," BlockingTaskOperationResponseHandler responseHandler = new BlockingTaskOperationResponseHandler(); taskService.claim(taskId, userId, responseHandler); try { responseHandler.waitTillDone(timeout); "," BlockingTaskOperationResponseHandler XXXXX = new BlockingTaskOperationResponseHandler(); taskService.claim(taskId, userId, XXXXX); try { XXXXX.waitTillDone(timeout); "
0, if (context.getParent() instanceof GrReferenceExpression) { PsiElement parent = context.getParent().getParent(); if (parent instanceof GrApplicationStatement) { parent = parent.getParent(); , String parent = command.getParent(); if (parent != null) { CommandGroup commandGroup = commandManager.getCommandGroup(parent); if (commandGroup != null) { return findRootParent(commandGroup); 
1," if (mapModeIsotropic && (windowSize != null && viewportSize != null)) { viewportSize.setSize( viewportSize.getWidth(), viewportSize.getWidth() * (windowSize.getHeight() / windowSize.getWidth()) ); "," if (mapModeIsotropic && (windowSize != null && viewportSize != null)) { viewportSize.setSize( viewportSize.getWidth(), viewportSize.getWidth() * (windowSize.getHeight() / windowSize.getWidth()) ); "
1, SlideModel slide = mSlides.remove(location); if (slide != null) { decreaseMessageSize(slide.getSlideSize()); slide.unregisterAllModelChangedObservers(); notifyModelChanged(true); , SlideModel XXXXX = mSlides.remove(location); if (XXXXX != null) { decreaseMessageSize(XXXXX.getSlideSize()); XXXXX.unregisterAllModelChangedObservers(); notifyModelChanged(true); 
1, if (!success) return; if (singleton.importer != null && ((ImporterComponent) singleton.importer).isMaster()) { ((ImporterComponent) singleton.importer).onGroupSwitched(success); return; , if (!success) return; if (singleton.importer != null && ((ImporterComponent) singleton.importer).isMaster()) { ((ImporterComponent) singleton.importer).onGroupSwitched(success); return; 
0, NodeList nodeList = ele.getElementsByTagName(tagName); if(nodeList!=null && nodeList.getLength()>0){ Element el = (Element)nodeList.item(0); el.getFirstChild().setNodeValue(newValue); ," ParameterLoader loader = new ParameterLoader(study, subject, site, nextStudySegment); subjectService.scheduleStudySegment(loader.findAssignment(), loader.getStudySegment(), startDate, mode); "
1, StringBuilder sb = new StringBuilder(); sb.append(ability.getDisplayName()); if (selection != null && selection.length() > 0) { sb.append('('); sb.append(selection); sb.append(')'); , StringBuilder sb = new StringBuilder(); sb.append(ability.getDisplayName()); if (selection != null && selection.length() > 0) { sb.append('('); sb.append(selection); sb.append(')'); 
0, this.origin = origin; width = size.getBlockX(); height = size.getBlockY(); length = size.getBlockZ(); blocks = new byte[width * height * length]; data = new byte[width * height * length]; ," assertTrue(""FilterDirector must remove header, \"""" + headerKey + ""\"" from the response."", filterDirector.responseHeaderManager().headersToRemove().contains(headerKey.toLowerCase())); "
1," final long start = System.nanoTime(); transactions.rollback(this, checkpointName); log.logRollbackToCheckpoint((System.nanoTime() - start) / 1000000L, this, checkpointName); return this; "," final long start = System.nanoTime(); transactions.rollback(this, checkpointName); log.logRollbackToCheckpoint((System.nanoTime() - start) / 1000000L, this, checkpointName); return this; "
0, boolean flag = false; if (!worldObj.singleplayerWorld) { if (canUncraft()) { disassemblerCraftTime++; if (disassemblerCraftTime == craftTime) { disassemblerCraftTime = 0; uncraftItem(); flag = true; ," argumentName.setText(""""); argumentDisplayName.setText(""""); argumentHint.setText(""""); argumentType.setText(""""); argumentDefault.setText(""""); argumentIsRequired.setSelection(false); "
1," table_1.removeAll(); patch = patches.get(index); if (patch != null) { String[] patchData = { patch.getName(), patch.getMatch().getInputPort(), patch.getActions().get(0).getValue() "," table_1.removeAll(); patch = patches.get(index); if (patch != null) { String[] patchData = { patch.getName(), patch.getMatch().getInputPort(), patch.getActions().get(0).getValue() "
1," GeocodingService geocodingService = new GeocodingService(); geocodingService.setStatsUsageService(statsUsageService); Address address = new Address(); geocodingService.geocode(address, ""De""); "," GeocodingService XXXXX = new GeocodingService(); XXXXX.setStatsUsageService(statsUsageService); Address XXXXX = new Address(); XXXXX.geocode(XXXXX, ""De""); "
1, final PluginRequirement pr = new PluginRequirement(); assertTrue(pr.getRequired()); pr.setRequired(true); assertTrue(pr.getRequired()); pr.setRequired(false); assertFalse(pr.getRequired()); , final PluginRequirement XXXXX = new PluginRequirement(); assertTrue(XXXXX.getRequired()); XXXXX.setRequired(true); assertTrue(XXXXX.getRequired()); XXXXX.setRequired(false); assertFalse(XXXXX.getRequired()); 
1, session.getUser().checkAdmin(); session.commit(true); Database db = session.getDatabase(); session.getUser().checkAdmin(); if (db.findUserDataType(typeName) != null) { if (ifNotExists) { return 0; , session.getUser().checkAdmin(); session.commit(true); Database XXXXX = session.getDatabase(); session.getUser().checkAdmin(); if (XXXXX.findUserDataType(typeName) != null) { if (ifNotExists) { return 0; 
1," final int numPresses = getNumDownPressesToScrollDownAcrossSelected(); assertEquals(1, mListView.getChildCount()); for (int i = 0; i < numPresses; i++) { sendKeys(KeyEvent.KEYCODE_DPAD_DOWN); "," final int numPresses = getNumDownPressesToScrollDownAcrossSelected(); assertEquals(1, mListView.getChildCount()); for (int i = 0; i < numPresses; i++) { sendKeys(KeyEvent.KEYCODE_DPAD_DOWN); "
0, Injector injectorImpl = new InjectorImpl(); MyTemplate myTemplate = new MyTemplate(); injectorImpl.injectMembers(myTemplate); assertNull(myTemplate.object); assertNull(myTemplate.anotherObject); , JdbcDataCollectionConfig jdcc = getContainer().getObject(); for (JdbcDataCollection dataCol : jdcc.getJdbcDataCollections()) { if(dataCol.getName().equals(name)) { return dataCol; 
1," StringBuffer buf = new StringBuffer(); for (int i = 0; i < path.length(); i++) { char c = path.charAt(i); if (Platform.getOS().equals(""win32"")) { if (i == 0 && c == '/') continue; "," StringBuffer buf = new StringBuffer(); for (int i = 0; i < path.length(); i++) { char c = path.charAt(i); if (Platform.getOS().equals(""win32"")) { if (i == 0 && c == '/') continue; "
0," super(group.getTemplatePresentation().getText(), group.getTemplatePresentation().getDescription(), group.getTemplatePresentation().getIcon()); myGroup = group; myToolbarComponent = toolbarComponent; "," Dimension d = getSize( ); if ( bi == null || bi.getWidth( ) != d.width || bi.getHeight( ) != d.height ) { bi = new BufferedImage( d.width, d.height, BufferedImage.TYPE_INT_ARGB ); "
1," Player p; if(sender instanceof Player) { p = (Player) sender; rmsg.setField(""realSender"", p.getName()); rmsg.setField(""sender"", p.getDisplayName()); rmsg.setField(""world"", p.getWorld().getName()); "," Player p; if(sender instanceof Player) { p = (Player) sender; rmsg.setField(""realSender"", p.getName()); rmsg.setField(""sender"", p.getDisplayName()); rmsg.setField(""world"", p.getWorld().getName()); "
1, setRootPassword(new EntityModel()); setOVirtISO(new ListModel()); setHostVersion(new EntityModel()); setOverrideIpTables(new EntityModel()); getOverrideIpTables().setEntity(false); , setRootPassword(new EntityModel()); setOVirtISO(new ListModel()); setHostVersion(new EntityModel()); setOverrideIpTables(new EntityModel()); getOverrideIpTables().setEntity(false); 
1, super(); settingsPage = createDjangoSettingsPage(new ICallback0<IWizardNewProjectNameAndLocationPage>() { public IWizardNewProjectNameAndLocationPage call() { return projectPage; , super(); settingsPage = createDjangoSettingsPage(new ICallback0<IWizardNewProjectNameAndLocationPage>() { public IWizardNewProjectNameAndLocationPage call() { return projectPage; 
1," final XPathType type = mapType(lOperand, lOperand.getType()); if (op == XPathTokenTypes.PLUS) { if (XPathType.isAssignable(XPath2Type.NUMERIC, type)) { return XPath2Type.NUMERIC; "," final XPathType XXXXX = mapType(lOperand, lOperand.getType()); if (op == XPathTokenTypes.PLUS) { if (XPathType.isAssignable(XPath2Type.NUMERIC, XXXXX)) { return XPath2Type.NUMERIC; "
0," if (!mSearchAutoComplete.isPopupShowing() && isOutOfBounds(mSearchPlate, event)) { if (DBG) Log.d(LOG_TAG, ""Pop-up not showing and outside of search plate.""); cancel(); return true; ", PropertyPath path = new PropertyPath(propertyPath); String childPropertyName = path.getPropertyName(); int childPropertyIndex = path.getPropertyIndex(); if (childPropertyName == null){ return false; 
0, waitForProcessTermination(); IProcess[] processes = launch.getProcesses(); if (processes!=null && processes.length>0) { Assert.isTrue(processes.length==1); return (GradleProcess) processes[0]; , metadataResolutionExceptions = initList( metadataResolutionExceptions ); metadataResolutionExceptions.add( e ); exceptions = initList( exceptions ); exceptions.add( e ); return this; 
0," Verify.assertStartsWith(this.list, ""1"", ""2"", ""3"", ""4"", ""5"", ""6""); Verify.assertThrows(IndexOutOfBoundsException.class, new Runnable() { public void run() { SextupletonListTest.this.list.get(6); ", PackageVersion v = new PackageVersion(); if(v.existManifest()) version = v.getAttribute(PackageVersion.ATTRIBUTE_IMPLEMENTATIONVERSION); input = new BufferedReader(new InputStreamReader(in)); 
1," for (JPPFExecutorService executorService : executorServices) { executorService.shutdown(); List<Runnable> runnables = executorService.shutdownNow(); if (runnables != null) { logger.warn(""{"," for (JPPFExecutorService executorService : executorServices) { executorService.shutdown(); List<Runnable> runnables = executorService.shutdownNow(); if (runnables != null) { logger.warn(""{"
1, UniqueId latestId = id.toLatest(); _dataCache.remove(latestId); _identifierBundleCache.remove(latestId); _dataCache.remove(id.getObjectId()); _identifierBundleCache.remove(id.getObjectId()); , UniqueId XXXXX = id.toLatest(); _dataCache.remove(XXXXX); _identifierBundleCache.remove(XXXXX); _dataCache.remove(id.getObjectId()); _identifierBundleCache.remove(id.getObjectId()); 
1, Timer timer = new Timer(); timer.schedule(new TimerTask() { @Override public void run() { minecart.setPassenger(player); waitingPlayersList.remove( ((Player) minecart.getPassenger()).getName()); , Timer XXXXX = new Timer(); XXXXX.schedule(new TimerTask() { @Override public void run() { minecart.setPassenger(player); waitingPlayersList.remove( ((Player) minecart.getPassenger()).getName()); 
1," String[] fields = getTable(table).getFieldsToArray(); Cursor c = getCursor(table, fields, where, null, null, null, null, null); int count = c.getCount(); c.close(); c = null; return count; "," String[] fields = getTable(table).getFieldsToArray(); Cursor XXXXX = getCursor(table, fields, where, null, null, null, null, null); int XXXXXount = XXXXX.getCount(); XXXXX.XXXXXlose(); XXXXX = null; return XXXXXount; "
1, return (editingContext.getEObject() instanceof ConcreteReferenceOwnerSample) && (FiltersPackage.Literals.CONCRETE_REFERENCE_OWNER_SAMPLE == editingContext.getEObject().eClass()); , return (editingContext.getEObject() instanceof ConcreteReferenceOwnerSample) && (FiltersPackage.Literals.CONCRETE_REFERENCE_OWNER_SAMPLE == editingContext.getEObject().eClass()); 
1," if (col == 1) { Object obj = ((ProrPropertyContentProvider) this.agileGrid .getContentProvider()).getRowContent(row); if (obj instanceof String) { return new Cell(agileGrid, row, 0); "," if (col == 1) { Object XXXXX = ((ProrPropertyContentProvider) this.agileGrid .getContentProvider()).getRowContent(row); if (XXXXX instanceof String) { return new Cell(agileGrid, row, 0); "
1, int barWidth = 128 + 10 + 32; int barHeight = 42; int maxCols = 5; float mineralTogglebarLength; if ((mineralToggleTextures.length % maxCols) == 0) { mineralTogglebarLength = maxCols * barWidth; , int XXXXX = 128 + 10 + 32; int XXXXX = 42; int XXXXX = 5; float mineralTogglebarLength; if ((mineralToggleTextures.length % XXXXX) == 0) { mineralTogglebarLength = XXXXX * XXXXX; 
0," if (request.getString(""__action"") != null) { String action = request.getString(""__action""); try { if (action.equals(""showAllAnnotations"")) { this.model.setShowAllAnnotations(true); "," ClassMetaData pkMeta = pkSm.getMetaData(); FieldMetaData[] fmds = pkMeta.getPrimaryKeyFields(); if (fmds.length == 0) return null; else return ApplicationIds.getKey(pkSm.getObjectId(), pkMeta); "
1, switch (featureID) { case Wcs111Package.COVERAGE_DESCRIPTIONS_TYPE__COVERAGE_DESCRIPTION: getCoverageDescription().clear(); getCoverageDescription().addAll((Collection)newValue); return; , switch (featureID) { case Wcs111Package.COVERAGE_DESCRIPTIONS_TYPE__COVERAGE_DESCRIPTION: getCoverageDescription().clear(); getCoverageDescription().addAll((Collection)newValue); return; 
0," String oldLONGNAME = lONGNAME; lONGNAME = newLONGNAME; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, RifPackage.SPECRELATION__LONGNAME, oldLONGNAME, lONGNAME)); "," super.run(wave); final Event event = (Event) wave.get(EditorWaveItem.EVENT).getValue(); final BallModel targetBallModel = getModel(BallModel.class, event); targetBallModel.hide(); "
1," TemplateOptions options = new CloudStackTemplateOptions().securityGroupId(""3""); assertEquals(options.as(CloudStackTemplateOptions.class).getSecurityGroupIds(), ImmutableSet.of(""3"")); "," TemplateOptions XXXXX = new CloudStackTemplateOptions().securityGroupId(""3""); assertEquals(XXXXX.as(CloudStackTemplateOptions.class).getSecurityGroupIds(), ImmutableSet.of(""3"")); "
1, security.accept(new FinancialSecurityVisitorAdapter<Void>() { @Override public Void visitAgricultureFutureSecurity(AgricultureFutureSecurity security) { assertSecurity(); return null; , security.accept(new FinancialSecurityVisitorAdapter<Void>() { @Override public Void visitAgricultureFutureSecurity(AgricultureFutureSecurity security) { assertSecurity(); return null; 
1, short data[]; int offsets[]; offsets = db1.getOffsets(); for(int i = 0; i < db1.getNumBanks(); i++){ data = db1.getData(i); for(int j = 0; j < size; j++){ data[offsets[i] + j] = (short) j; , short data[]; XXXXXnt offsets[]; offsets = db1.getOffsets(); for(XXXXXnt XXXXX = 0; XXXXX < db1.getNumBanks(); XXXXX++){ data = db1.getData(XXXXX); for(XXXXXnt XXXXX = 0; XXXXX < sXXXXXze; XXXXX++){ data[offsets[XXXXX] + XXXXX] = (short) XXXXX; 
0, GL2 gl = drawable.getGL().getGL2(); gl.glClear(GL.GL_COLOR_BUFFER_BIT | GL.GL_DEPTH_BUFFER_BIT); if (flushTexture) { flushTexture = false; if (texture != null) { texture.dispose(); texture = null; ," File tomcat = walkTree(dir, level); if (tomcat != null) return tomcat; File programFiles = new File(""C:/Program Files""); if (programFiles.exists()) { tomcat = walkTree(programFiles, 2); "
0, EntityCacheUtil.removeCache(AppImpl.class.getName()); FinderCacheUtil.removeCache(FINDER_CLASS_NAME_ENTITY); FinderCacheUtil.removeCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION); ," int arity = args.size(); List<Object> values = new ArrayList<Object>(arity); for (int i = 0; i < arity; i++) { Expr arg = args.get(i); values.add(arg.evaluate(context, pos, len)); "
0," InputLine inputLine = (InputLine) element; if (inputLine.parentInput == null) { return ""Root Line "" + getName(inputLine) + "" "" + inputLine.cardinality.toString() + "" : "" + inputLine.getRegex(); ", MediatorService service = store.get(mediatorName); if (service == null) { UILessMediatorService defService = new UILessMediatorService(); defService.setLocalName(mediatorName); return defService; 
0," super(new MouseOverListener(under), Space.empty, properties); this.mover = new MouseOverListener(over); showMouseOver =false; children = new TreeSet<MouseOver>(); lastComputeClock = -1; "," tag = HTML.Tag.FRAME; assertEquals(""frame"", tag.toString()); assertFalse(""breaks Flow"", tag.breaksFlow()); assertFalse(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); "
1," VersionNodeDecorator decorator = new VersionNodeDecorator(versionNode); when(versionNode.getProperty(NodeProperties.VERSION)).thenReturn(""1.0""); assertEquals(""1.0"", decorator.getVersion()); "," VersionNodeDecorator XXXXX = new VersionNodeDecorator(versionNode); when(versionNode.getProperty(NodeProperties.VERSION)).thenReturn(""1.0""); assertEquals(""1.0"", XXXXX.getVersion()); "
0, if (newName.equals(aktNodeName)) { addError(fieldTypeName + Messages.TempToFieldConditionChecker_FieldWithName + newName + Messages.TempToFieldConditionChecker_AlreadyExists); return true; ," bus = theBus; if (bus != null) { theBus.setExtension(this, PolicyBuilder.class); AssertionBuilderRegistry reg = theBus.getExtension(AssertionBuilderRegistry.class); if (reg != null) { factory = reg; "
0," ProjectDescription projectdescription = createCyclicProject(this._sourcepathxml, KIND_MULTIPLESOURCEFOLDERSPRIMARY); execute(projectdescription.getPrimaryProjectname(), ""get-source-path""); "," int index = s.indexOf(','); if (index == -1) return; String in = s.substring(0, index); String out = s.substring(index + 1); vpnStateUpdate(Long.parseLong(in), Long.parseLong(out)); "
0, Set<Integer> keys = EffectDatabase.descriptionIdKeySet(); Iterator<Integer> it = keys.iterator(); while ( it.hasNext() ) { int id = it.next().intValue(); if ( id < 1 ) { continue; , super(); this.checkoutScript = checkoutScript; this.family = family; this.releases = releases; this.become = become; this.trackViewReportWhereClause = trackViewReportWhereClause; 
0, final int prime = 31; int result = super.hashCode(); result = prime * result + Arrays.hashCode(dhPublicKeyEncrypted); result = prime * result + Arrays.hashCode(dhPublicKeyHash); return result; ," Intent i = new Intent(ctx,MITCoursesListsSliderActivity.class); i.putExtra(MITCoursesListsSliderActivity.KEY_GROUP, MITCoursesListsSliderActivity.GROUP_OTHER); ctx.startActivity(i); "
0," BasicLabelRect lr = new BasicLabelRect(str, font, context); Point pnt = geom.getCentroid(); lr.setAnchor(new Point2D.Double(pnt.getCoordinate().x, pnt.getCoordinate().y)); return lr; "," LayoutInflater inflater = getLayoutInflater(); View row = inflater.inflate(R.layout.row, parent, false); RestaurantHolder holder = new RestaurantHolder(row); row.setTag(holder); return row; "
0, if (obj instanceof AccessControlEntry) { AccessControlEntry other = (AccessControlEntry) obj; return this.allow == other.allow && this.role.equals(other.role) && this.action.equals(other.action); ," String oldFilter = filter; filter = newFilter; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_MASK_ELEMENT__FILTER, oldFilter, filter)); "
0," this.canvas = canvas; this.ipAddress = ipAddress; hostName = ipAddress; if(Settings.ENABLE_NAMES) new HostNameLookupThread(ipAddress, this); x = Math.random(); y = Math.random(); paint(); "," Source source = ruleMediatorConfig.getSource(); if (request.getParameter(""mediator.rule.source.value"") != null) { source.setValue(request.getParameter(""mediator.rule.source.value"")); "
1," if (myIsHighLevelInfoAvailable) { SPropertyOperations.set(variable, ""name"", myHighLevelName); SPropertyOperations.set(variable, ""highLevelNodeId"", myHighLevelNode.getNodeId().toString()); "," if (myIsHighLevelInfoAvailable) { SPropertyOperations.set(variable, ""name"", myHighLevelName); SPropertyOperations.set(variable, ""highLevelNodeId"", myHighLevelNode.getNodeId().toString()); "
1," SecurityManager security = System.getSecurityManager(); if (security != null) { if (printToFilePermission == null) { printToFilePermission = new FilePermission(""<<ALL FILES>>"", ""read,write""); "," SecurityManager XXXXX = System.getSecurityManager(); if (XXXXX != null) { if (printToFilePermission == null) { printToFilePermission = new FilePermission(""<<ALL FILES>>"", ""read,write""); "
0, IBreakpoint[] breakpoints = getBreakpointManager().getBreakpoints(getModelIdentifier()); for (int i = 0; i < breakpoints.length; i++) { if (enabled) { breakpointAdded(breakpoints[i]); ," serverThread.messageReceived(fudgeContext, envelope); serverThread._sender = connection.getFudgeMessageSender(); connection.setFudgeMessageReceiver(serverThread); serverThread.start(); "
1, ECrossReferenceAdapter result = ECrossReferenceAdapter .getCrossReferenceAdapter(target); if (result == null && target.eContainer() != null) { result = getCrossReferenceAdapter(target.eContainer()); , ECrossReferenceAdapter XXXXX = ECrossReferenceAdapter .getCrossReferenceAdapter(target); if (XXXXX == null && target.eContainer() != null) { XXXXX = getCrossReferenceAdapter(target.eContainer()); 
0," pylon = P; String image = P.gui; offX = P.screenX; offY = P.screenY; mouseOpacity = 2; layer = 25; if(image != null) { sprite = new Sprite(image, false); Global.state.newObjBuffer.add(this); ", if (current.eResource() != null && current.eResource().getResourceSet() != null) this.resourceSet = current.eResource().getResourceSet(); multipleSampleForFlatReferencesTable.setInput(settings); 
0, for(int i=0; i < graphList.size(); i++) { if(node.equals(((CellWrapper)graphList.get(i)).getNode()) && ((CellWrapper)graphList.get(i)).nodeG.sugiyamaVisited) return (CellWrapper)graphList.get(i); ," FileDialog dialog = new FileDialog(parent.getShell(), SWT.SAVE); dialog.setText(Messages.getString(""PlainTextImporter.ChooseFile"")); dialog.setFilterExtensions(new String[] { ""*.*;*"" "
1," FolderNode folderNode = (FolderNode) getFolder(parent); if (folderNode == null) { throw new RuntimeException(""A file node ("" + node.toString() + "")MUST have a related folder node.""); "," FolderNode XXXXX = (FolderNode) getFolder(parent); if (XXXXX == null) { throw new RuntimeException(""A file node ("" + node.toString() + "")MUST have a related folder node.""); "
1," this.codeStyle = codeStyle; code = new StringBuilder(); indent = """"; outputVars = new ArrayDeque<Pair<String, Boolean>>(); currOutputVarName = null; currOutputVarIsInited = false; "," this.codeStyle = codeStyle; code = new StringBuilder(); indent = """"; outputVars = new ArrayDeque<Pair<String, Boolean>>(); currOutputVarName = null; currOutputVarIsInited = false; "
1," final URI uri = URI.createPlatformResourceURI(path, true); final Resource activeResource = editingDomain.getResourceSet().getResource(uri, true); this.activeResource = activeResource; "," final URI uri = URI.createPlatformResourceURI(path, true); final Resource activeResource = editingDomain.getResourceSet().getResource(uri, true); this.activeResource = activeResource; "
1," clearFormContent(); createFormParts(); for (AbstractFormPagePart part : parts) { getManagedForm().addPart(part); part.initialize(getManagedForm()); part.createControl(editorComposite, toolkit); "," clearFormContent(); createFormParts(); for (AbstractFormPagePart part : parts) { getManagedForm().addPart(part); part.initialize(getManagedForm()); part.createControl(editorComposite, toolkit); "
0," g.setColor(Color.WHITE); g.fillRect(rect.x, rect.y, rect.width, rect.height); g.setColor(COLOR_BORDER); g.drawLine(rect.x + rect.width - 1, rect.y, rect.x + rect.width - 1, rect.y + rect.height); "," List<ObjectParentData> parents = getObjectParents(context, folderId, filter, false, false); if (parents.size() == 0) { throw new CmisInvalidArgumentException(""The root folder has no parent!""); "
0," StatusType type; StatusValue mod = getStatus(mLevel, StatusType.Attack); Equipment eq = mEquipment.getEquipment(EquipmentSet.MAINWEAPON); if (eq != null) { type = eq.getWeaponType(); "," session.zadd(""foo"", 1d, ""a""); session.zadd(""foo"", 2d, ""b""); long rank = session.zrevrank(""foo"", ""a""); assertEquals(1, rank); rank = session.zrevrank(""foo"", ""b""); assertEquals(0, rank); "
1," boolean result = false; LookAndFeel laf = UIManager.getLookAndFeel(); String id = laf.getID(); String name = laf.getClass().getName(); if (id.equals(""Mac"") || id.equals(""Aqua"")) { result = true; "," boolean XXXXX = false; LookAndFeel XXXXX = UIManager.getLookAndFeel(); String XXXXX = XXXXX.getID(); String XXXXX = XXXXX.getClass().getName(); if (XXXXX.equals(""Mac"") || XXXXX.equals(""Aqua"")) { XXXXX = true; "
0," synchronized (_lock) { if (_instance != null) throw new RuntimeException(""Object model has already been registered. This method can only be called at program startup.""); _instance = model; "," if (coverageDescription == null) { coverageDescription = new EObjectContainmentEList(CoverageDescriptionType.class, this, Wcs111Package.COVERAGE_DESCRIPTIONS_TYPE__COVERAGE_DESCRIPTION); "
0," Intent intent = new Intent().setClass(context, MemberActivity.class); intent.putExtra(Constants.Member.LOGIN, login); intent.putExtra(Constants.Member.NAME, name); context.startActivity(intent); ", int result = constraintDescriptor != null ? constraintDescriptor.hashCode() : 0; result = 31 * result + ( validatedValue != null ? validatedValue.hashCode() : 0 ); return result; 
1," String oldClass = class_; class_ = newClass; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, XhtmlPackage.XHTML_CAPTION_TYPE__CLASS, oldClass, class_)); "," String XXXXX = class_; class_ = newClass; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, XhtmlPackage.XHTML_CAPTION_TYPE__CLASS, XXXXX, class_)); "
1, if (this.checkToRelease) { synchronized (this.toRelease) { this.checkToRelease = false; for (int i = 0; i < this.toRelease.size(); i++) { this.rEngine.rniRelease(this.toRelease.get(i).longValue()); , XXXXXf (thXXXXXs.checkToRelease) { synchronXXXXXzed (thXXXXXs.toRelease) { thXXXXXs.checkToRelease = false; for (XXXXXnt XXXXX = 0; XXXXX < thXXXXXs.toRelease.sXXXXXze(); XXXXX++) { thXXXXXs.rEngXXXXXne.rnXXXXXRelease(thXXXXXs.toRelease.get(XXXXX).longValue()); 
1," if (NucleusLogger.TRANSACTION.isDebugEnabled()) { NucleusLogger.TRANSACTION.debug(LOCALISER.msg(""015019"", StringUtils.toJVMIDString(sm.getObject()), getIdentityAsString(sm.getInternalObjectId()))); "," if (NucleusLogger.TRANSACTION.isDebugEnabled()) { NucleusLogger.TRANSACTION.debug(LOCALISER.msg(""015019"", StringUtils.toJVMIDString(sm.getObject()), getIdentityAsString(sm.getInternalObjectId()))); "
0," WikiPage root = InMemoryPage.makeRoot(""RooT""); ProxyPage virtualPage = new ProxyPage(""VirtualPage"", root, ""host"", 9999, PathParser.parse(""RealPage.VirtualPage"")); assertEquals(""http: "," Field handlersField = getStaticField(URL.class, Hashtable.class); if (handlersField != null) { Hashtable<?, ?> handlers; try { handlers = (Hashtable<?, ?>) handlersField.get(null); "
1," Member member = new Member(); Set<ConstraintViolation<Member>> violations = validator.validate(member); Assert.assertEquals(""Four violations were expected"", 3, violations.size()); "," Member member = new Member(); Set<ConstraintViolation<Member>> violations = validator.validate(member); Assert.assertEquals(""Four violations were expected"", 3, violations.size()); "
1," Date lastestObsValue = null; List<Obs> obsList = getMatchingObs(person, concept, null, null, null, null); if (obsList.size() > 0) { lastestObsValue = obsList.get(0).getValueDatetime(); "," Date XXXXX = null; List<Obs> obsList = getMatchingObs(person, concept, null, null, null, null); if (obsList.size() > 0) { XXXXX = obsList.get(0).getValueDatetime(); "
1, double errorSum = 0.0; Synapse synapse; Enumeration e = outlinks.elements(); while(e.hasMoreElements()) { synapse = (Synapse)e.nextElement(); errorSum += synapse.to.delta * synapse.getWeight(); , double errorSum = 0.0; Synapse synapse; Enumeration e = outlinks.elements(); while(e.hasMoreElements()) { synapse = (Synapse)e.nextElement(); errorSum += synapse.to.delta * synapse.getWeight(); 
1," CTabItem item = new CTabItem(folder, SWT.NONE); Composite c = new Composite(folder, SWT.NONE); c.addControlListener(new ControlListener() { public void controlMoved(ControlEvent e) { "," CTabItem XXXXX = new CTabItem(folder, SWT.NONE); Composite XXXXX = new Composite(folder, SWT.NONE); XXXXX.addControlListener(new ControlListener() { publiXXXXX void XXXXXontrolMoved(ControlEvent e) { "
0," blogHistorizer.deleteHistory(entity); blogRepository.delete(entity); blogTagService.deleteUnusedTags(); mountService.delete(entity.getId().toString(), BlogConstants.HANDLER_KEY); ", data.position( index * 2 * length ); for ( int i = 0; i < 2; i++ ) { data.put( color[0] ); data.put( color[1] ); data.put( color[2] ); data.put( color.length == 4 ? color[3] : 1.0f ); 
0," loadFileCB.addActionListener(new ActionListener() { public void actionPerformed(ActionEvent actionEvent) { if (loadFileCB.isSelected()) { recordDataButton.setText(""Read From File""); "," return context.expressionTypingServices.getBlockReturnedType(context.scope, expression, isStatement ? CoercionStrategy.COERCION_TO_UNIT : CoercionStrategy.NO_COERCION, context, context.trace); "
0," Action pageSizeAction = new Action(String.format(""%d items"", pageSize), Action.AS_RADIO_BUTTON) { @Override public void run() { if (isChecked()) { contentProvider.setPageLength(pageSize); refresh(); ", GammaTxnFactory txFactory = stm.newTxnFactoryBuilder() .setReadTrackingEnabled(false) .setBlockingAllowed(false) .newTransactionFactory(); assertFalse(txFactory.getConfig().isReadTrackingEnabled()); 
0," return dataDefinitionService.get(MaterialFlowResourcesConstants.PLUGIN_IDENTIFIER, model).find() .add(SearchRestrictions.eq(BATCH, batch)).setMaxResults(1).uniqueResult() != null; ", fTreeViewer.addCheckStateListener(this); fTreeViewer.addSelectionChangedListener(this); fTreeViewer.addDoubleClickListener(this); fTreeViewer.setInput(fTree); restoreSelection(); refreshState(); 
0, Set<Integer> intersection = new HashSet<Integer>(); Set<Integer> union = new HashSet<Integer>(); for (int i = 0; i < a.length(); ++i) { int d = a.get(i); intersection.add(d); union.add(d); ," String s = StatementBuilder.create() .declareVariable(""n"", int.class) .switch_(Stmt.loadVariable(""n"")) .toJavaString(); assertEquals(""Failed to generate empty switch block"", SWITCH_BLOCK_EMPTY, s); "
1," reportClick(""app"", mApp1, NOW); reportClick(""app"", mApp2, NOW); reportClick(""app"", mApp1, NOW); assertShortcuts(""expected app1 to beat app2 since it has more hits"", ""app"", mApp1, mApp2); "," reportClick(""app"", mApp1, NOW); reportClick(""app"", mApp2, NOW); reportClick(""app"", mApp1, NOW); assertShortcuts(""expected app1 to beat app2 since it has more hits"", ""app"", mApp1, mApp2); "
1," super(Boolean.TRUE,parentId, title, description, comments, typeId, instructorNotification, testeeNotification, multipartAllowed, status, createdBy, createdDate, lastModifiedBy, lastModifiedDate); "," super(Boolean.TRUE,parentId, title, description, comments, typeId, instructorNotification, testeeNotification, multipartAllowed, status, createdBy, createdDate, lastModifiedBy, lastModifiedDate); "
0, for (AntBuildFile buildFile : getBuildFiles()) { AntBuildModelBase model = (AntBuildModelBase)buildFile.getModel(); if (id.equals(model.getDefaultTargetActionId())) { return buildFile; ," String oldStyle = style; style = newStyle; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_DESC_ELEMENT__STYLE, oldStyle, style)); "
1," return ""GetExecutionResult [service="" + service + "", version="" + version + "", executionId="" + executionId + "", baseUrl="" + baseUrl + "", outputId="" + outputId + "", mimeType="" + mimeType + ""]""; "," return ""GetExecutionResult [service="" + service + "", version="" + version + "", executionId="" + executionId + "", baseUrl="" + baseUrl + "", outputId="" + outputId + "", mimeType="" + mimeType + ""]""; "
1, local = new ThreadLocal(); local1 = new ThreadLocal(); local2 = new ThreadLocal(); local3 = new ThreadLocal(); local4 = new ThreadLocal(); local5 = new ThreadLocal(); holder = null; , local = new ThreadLocal(); local1 = new ThreadLocal(); local2 = new ThreadLocal(); local3 = new ThreadLocal(); local4 = new ThreadLocal(); local5 = new ThreadLocal(); holder = null; 
0, startTime = System.currentTimeMillis(); Runnable task=new Runnable() { public void run() { bandwidthCollector.collectBandwidthData(); setHardcoreCapable(); assignUltrapeerNode(); assignDHTMode(); ," _log.debug(""Synch started: "" + numPlaylists); _synching = true; _nodeStack.clear(); _library = null; for (PlaylistListener listener : _playlistListeners) { listener.synchStarted(numPlaylists); "
0," Element invalid = XsdElement.ACTIVITY_REFERENCE.create(); ACTIVITY_SOURCE.addTo(invalid, ""Ether""); try { serializer.readElement(invalid); fail(""Should throw validation exception""); "," String result = """"; try { Pattern p = Pattern.compile(patternText, flag); Matcher m = p.matcher(text); StringBuffer sb = new StringBuffer(); while ( m.find() ){ m.appendReplacement(sb, """"); break; "
0, if (drawable != mBackgroundDrawable || mBackgroundResource != 0) { mBackgroundResource = 0; mBackgroundDrawable = drawable; if (mDecor != null) { mDecor.setWindowBackground(drawable); ," StringBuilder str = new StringBuilder(""P""); long days = period / DateTimeConstants.MILLIS_PER_DAY; if (days > 0) { str.append(days + ""D""); period -= days * DateTimeConstants.MILLIS_PER_DAY; "
0," Entity target = Tools.getTargettedEntity(player, range); Location location; if (target == null) { location = Tools.getTargetedLocation(player, range, Tools.transparentEarthbending); "," if (nextAvailable) { Writable key = (Writable) ReflectionUtils.newInstance(reader.getKeyClass(), conf); BytesWritable value = new BytesWritable(); try { nextAvailable = reader.next(key, value); "
0," localDebugger(""|""); localLogger(""Entering: ClientModuleImpl(ModuleManagement layerManagement)""); localDebugger(""| layerManagement: "" + layerManagement); lm = layerManagement; this.start(); ", TestSuite testSuite = new TestSuite(); testSuite.addTest(Login52xTests.suite()); testSuite.addTest(ShoppingTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; 
1," super(tr(""Create Stops from GTFS ...""), null, tr(""Create Stops from a GTFS file""), null, false); putValue(""toolbar"", ""publictransport/gtfsimporter""); Main.toolbar.register(this); "," super(tr(""Create Stops from GTFS ...""), null, tr(""Create Stops from a GTFS file""), null, false); putValue(""toolbar"", ""publictransport/gtfsimporter""); Main.toolbar.register(this); "
0," OMFactory fac = OMAbstractFactory.getOMFactory(); OMElement elementEl = fac.createOMElement(""element"", null); if (this.getName() != null) { elementEl.addAttribute(""name"", this.getName(), null); ", loadSchemasIfNeeded(); deferredActionContext.rebuild = true; deferredActionContext.revalidate = true; doRebuild(); if (binds != null) binds.applyComputedExpressionBinds(); doRevalidate(); 
0, if (list != null) { roleList = new RoleList(); for (Iterator<?> roleIter = list.iterator(); roleIter.hasNext();) { Role currRole = (Role)(roleIter.next()); roleList.add((Role)(currRole.clone())); , for(TreeItem item : fModelViewsTreeViewer.getTree().getItems()) { Object o = item.getData(); if(o instanceof IDiagramModel) { fModelViewsTreeViewer.setSelection(new StructuredSelection(o)); break; 
0, final IEditorPart part = EclipseUtils.getActivePage().getActiveEditor(); setChecked(true); if (part instanceof SharedMemoryEditor) { try { ((SharedMemoryEditor)part).setMemoryName(getText()); ," if (element != null && isAllowedByFilter(element)) { list.add(index, element); modCount++; for (ObservableListListener listener : listeners) { listener.listElementsAdded(this, index, 1); "
0," switch (byteOrder) { case BIG: return usesMark ? ""UnicodeBig"" : ""UnicodeBigUnmarked""; case LITTLE: return usesMark ? ""UnicodeLittle"" : ""UnicodeLittleUnmarked""; default: return ""UnicodeUnknown""; ", ILaunchConfigurationTab[] tabs = getTabs(); if (fTabFolder != null && tabs != null) { int pageIndex = fTabFolder.getSelectionIndex(); if (pageIndex >= 0) { return tabs[pageIndex]; 
0," if (id == 0) throw new IllegalStateException(""can't use FBO as it has been destroyed..""); SGL GL = Renderer.get(); GL.enterOrtho(width, height); GL30.glBindFramebufferEXT(GL30.GL_FRAMEBUFFER, id); ", TagEntry tagEntry = tagProfiles.get(tag); if (tagEntry != null) { if (tagEntry.lastCycles != 0) { tagEntry.calls++; tagEntry.cycles += cpu.cycles - tagEntry.lastCycles; tagEntry.lastCycles = 0; 
1," super(language); fScript = parseNode; fStartTag = startTag; fEndTag = endTag; setChildren(fScript.getChildren()); setLocation(parseNode.getStartingOffset(), parseNode.getEndingOffset()); "," super(language); fScript = parseNode; fStartTag = startTag; fEndTag = endTag; setChildren(fScript.getChildren()); setLocation(parseNode.getStartingOffset(), parseNode.getEndingOffset()); "
1," String oldCharoff = charoff; charoff = newCharoff; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, XhtmlPackage.TBODY_TYPE__CHAROFF, oldCharoff, charoff)); "," String XXXXX = charoff; charoff = newCharoff; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, XhtmlPackage.TBODY_TYPE__CHAROFF, XXXXX, charoff)); "
0, if ((options & START_TRANSIENT) == 0) { setPersistentlyStarted(true); boolean activationPolicyUsed = (options & START_ACTIVATION_POLICY) != 0; setBundleActivationPolicyUsed(activationPolicyUsed); , boolean before=bodyContentStack.getDevNull(); bodyContentStack.setDevNull(false); forceWriter = bodyContentStack.getWriter(); if(enablecfoutputonly>0 && outputState==0) { writer=devNull; 
0," Dimension d = getSize( ); if ( bi == null || bi.getWidth( ) != d.width || bi.getHeight( ) != d.height ) { bi = new BufferedImage( d.width, d.height, BufferedImage.TYPE_INT_ARGB ); "," SuperNPlayer snplayer = SuperNManager.get(player); if (snplayer.getPower() < SNConfigHandler.angelJumpPowerCost) { SuperNManager.sendMessage(snplayer, ""Not enough Power to jump.""); return false; "
0," int alarms = 0; for ( final Entry<String, AtomicInteger> entry : this.monitorStatus.entrySet () ) { if ( ALARM_STATES.contains ( entry.getKey () ) ) { alarms += entry.getValue ().get (); "," long oldIndexUsage = profiler.getCounter(""Query.indexUsage""); long oldCompositeIndexUsage = profiler.getCounter(""Query.compositeIndexUsage""); if (oldIndexUsage == -1) { oldIndexUsage = 0; "
0," TestDef def = createTestDef(); assertEquals(true, !def.isTouched()); def.setAttribute(""aValue""); assertEquals(true, def.isTouched()); def.getInstance(); assertEquals(true, !def.isTouched()); ", resultMapping.configuration = configuration; resultMapping.property = property; resultMapping.flags = new ArrayList<ResultFlag>(); resultMapping.composites = new ArrayList<ResultMapping>(); 
1, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(SampleJSF11MyfacesJSPTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , TestSuite XXXXX = new TestSuite(); XXXXX.addTest(LoginTests.suite()); XXXXX.addTest(SampleJSF11MyfacesJSPTests.suite()); XXXXX.addTestSuite(StopSeleniumTest.class); return XXXXX; 
0," Level level = record.getLevel(); String message; message=getThreadLocalRequest().getRemoteAddr()+"":""+record.getMessage(); if (Level.INFO.equals(level)) { LOG.info(message,record.getThrown()); "," if (map instanceof CPPTemplateParameterMap) { final ObjectMap omap= ((CPPTemplateParameterMap) map).fMap; for (int i = 0; i < omap.size(); i++) { fMap.put(omap.keyAt(i), omap.getAt(i)); "
0," JButton resetButton = new JButton(""Clear Data""); resetButton.addActionListener(new ActionListener() { public void actionPerformed(ActionEvent actionEvent) { chartPanel.clear(); parent.repaint(); "," return ComboCondition.or( BinaryCondition.equalTo(column, ""A""), BinaryCondition.equalTo(column, ""C""), BinaryCondition.equalTo(column, ""G""), BinaryCondition.equalTo(column, ""T"")); "
1, IPreferenceStore prefs= SearchPlugin.getDefault().getPreferenceStore(); String preferedEngine= prefs.getString(SearchPreferencePage.TEXT_SEARCH_QUERY_PROVIDER); return preferedEngine; , IPreferenceStore prefs= SearchPlugin.getDefault().getPreferenceStore(); String preferedEngine= prefs.getString(SearchPreferencePage.TEXT_SEARCH_QUERY_PROVIDER); return preferedEngine; 
0, super.setInput(history); if (fDeleteAllButton != null) fDeleteAllButton.setEnabled(history != null && !history.isEmpty()); if (fDeleteButton != null) fDeleteButton.setEnabled(false); , XMPPConnection .addConnectionCreationListener(new ConnectionCreationListener() { @Override public void connectionCreated(Connection connection) { new ServiceDiscoveryManager(connection); 
1, switch (featureID) { case RifPackage.SPECGROUPS_TYPE1__GROUP: return group != null && !group.isEmpty(); case RifPackage.SPECGROUPS_TYPE1__SPECGROUP: return !getSPECGROUP().isEmpty(); , switch (featureID) { case RifPackage.SPECGROUPS_TYPE1__GROUP: return group != null && !group.isEmpty(); case RifPackage.SPECGROUPS_TYPE1__SPECGROUP: return !getSPECGROUP().isEmpty(); 
0," switch (v.getId()) { case R.id.add_member_group_button: if ( ! contactAdapter.hasSelectedContact()) { Toast.makeText(this, R.string.need_member_selection, Toast.LENGTH_SHORT).show(); return; ", if(i.isBackupedData()){ File parent = new File(i.getPathToData()).getParentFile(); if(i.getType() == LocalIndexType.GPX_DATA){ parent = settings.extendOsmandPath(ResourceManager.GPX_PATH); 
1, final int prime = 31; int result = super.hashCode(); result = prime * result + Arrays.hashCode(dhPublicKeyEncrypted); result = prime * result + Arrays.hashCode(dhPublicKeyHash); return result; , final int prime = 31; int result = super.hashCode(); result = prime * result + Arrays.hashCode(dhPublicKeyEncrypted); result = prime * result + Arrays.hashCode(dhPublicKeyHash); return result; 
1, boolean result = true; final String path = AVMNodeConverter.ToAVMVersionPath(node.getNodeRef()).getSecond(); if (!AVMUtil.isMainStore(AVMUtil.getStoreName(path))) { result = false; , boolean XXXXX = true; final String XXXXX = AVMNodeConverter.ToAVMVersionPath(node.getNodeRef()).getSecond(); if (!AVMUtil.isMainStore(AVMUtil.getStoreName(XXXXX))) { XXXXX = false; 
0, Set<Cell> daughters=byParent.get(cell); if(daughters!=null){ Iterator<Cell> iter=daughters.iterator(); while(iter.hasNext()){ Cell daughter = iter.next(); byChild.get(daughter).remove(cell); , switch (featureID) { case Wcs111Package.COVERAGE_DESCRIPTIONS_TYPE__COVERAGE_DESCRIPTION: getCoverageDescription().clear(); getCoverageDescription().addAll((Collection)newValue); return; 
1, Object element = getSelection().getFirstElement(); if ( element instanceof IDebugElement ) { return (ICDebugTarget)((IDebugElement)element).getDebugTarget().getAdapter( ICDebugTarget.class ); , Object XXXXX = getSelection().getFirstElement(); if ( XXXXX instanceof IDebugElement ) { return (ICDebugTarget)((IDebugElement)XXXXX).getDebugTarget().getAdapter( ICDebugTarget.class ); 
0," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," std.spaceAfterComma = true; std.parametersWithSpace = false; String s = """" + ""def a(a,\n"" + "" b):\n"" + "" pass\n""; String s1 = """" + ""def a(a,\n"" + "" b):\n"" + "" pass\n""; checkFormatResults(s, s1); "
1," List<Pair<String, String>> list = equationInfo.getAdditionalRulesIds(); for (Pair<String, String> additionalIds : list) { errorReporter.addAdditionalRuleId(additionalIds.o1, additionalIds.o2); "," List<Pair<String, String>> list = equationInfo.getAdditionalRulesIds(); for (Pair<String, String> additionalIds : list) { errorReporter.addAdditionalRuleId(additionalIds.o1, additionalIds.o2); "
0," if (scrollingPosition != null) { Point size = preview.getSize(); scroll.setOrigin((int) Math .round(scrollingPosition[0] * size.x), (int) Math .round(scrollingPosition[1] * size.y)); "," return ShrinkWrap.create(JavaArchive.class, ResourceArquillianStandaloneTest.class.getSimpleName().concat("".jar"")) .addAsManifestResource(EmptyAsset.INSTANCE, ArchivePaths.create(""beans.xml"")); "
0," ItemAuthorBean itemauthorbean= (ItemAuthorBean) ContextUtil.lookupBean(""itemauthor""); this.setImportToAuthoring(false); itemauthorbean.setItemTypeString(""""); return ""editAssessment""; ", boolean isEqual = false; if (other instanceof RegionPK) { if (id == null) isEqual = (id == ((RegionPK)other).id); else isEqual = (id.intValue() == ((RegionPK)other).id.intValue()); 
1, ArrayDeque q = new ArrayDeque(); assertTrue(q.isEmpty()); q.add(new Integer(1)); assertFalse(q.isEmpty()); q.add(new Integer(2)); q.removeFirst(); q.removeFirst(); assertTrue(q.isEmpty()); , ArrayDeque q = new ArrayDeque(); assertTrue(q.isEmpty()); q.add(new Integer(1)); assertFalse(q.isEmpty()); q.add(new Integer(2)); q.removeFirst(); q.removeFirst(); assertTrue(q.isEmpty()); 
0," NodeTraversal.traverse(compiler, root, new Callback()); for (Node node : markerStack) { compiler.report( JSError.make(NodeUtil.getSourceName(node), node, UNMATCHED_START_MARKER, startMarkerName)); "," _log.debug(""Logged in""); _loggedIn = true; _connected = true; new Thread() { @Override public void run() { for (ConnectionListener listener : _connectionListeners) { listener.loggedIn(); "
1," Calendar startTime = timer.getStartTime(); Calendar endTime = timer.getEndTime(); if (Utilities.sameDay(startTime, getDay()) || Utilities.sameDay(endTime, getDay())) { return true; "," Calendar XXXXX = timer.getStartTime(); Calendar XXXXX = timer.getEndTime(); if (Utilities.sameDay(XXXXX, getDay()) || Utilities.sameDay(XXXXX, getDay())) { return true; "
0," stopIdleTimeoutThread(); idleTimeoutThread = new IdleTimeoutThread(); idleTimeoutThread.start(); LOG.debug(""Started Idle Timeout Thread with '%d' idle timeout"", this.idleTimeout); "," super(source); _req = req; _ctx = (ExecutionContext) source.getApplicationContext(); _endpoint = new SIPEndpointImpl(_ctx, _req.getFrom()); _domain = ((SipURI)req.getRequestURI()).getHost(); "
1, final int prime = 31; int result = 1; result = prime * result + ((subtype == null) ? 0 : subtype.hashCode()); result = prime * result + ((type == null) ? 0 : type.hashCode()); return result; , final int prime = 31; int result = 1; result = prime * result + ((subtype == null) ? 0 : subtype.hashCode()); result = prime * result + ((type == null) ? 0 : type.hashCode()); return result; 
1," if (System.getProperty(""carbon.home"") == null) { File file = new File(""../distribution/kernel/carbon-home""); if (file.exists()) { System.setProperty(""carbon.home"", file.getAbsolutePath()); "," if (System.getProperty(""carbon.home"") == null) { File XXXXX = new File(""../distribution/kernel/carbon-home""); if (XXXXX.exists()) { System.setProperty(""carbon.home"", XXXXX.getAbsolutePath()); "
0," _texParams.set(min, mag, s, t); if(_name != 0) { GLResourceHelper.sharedHelper().perform(new GLResourceHelper.GLResorceTask() { @Override public void perform(GL10 gl) { applyTexParameters(gl); "," try { XMLNamespaceFactory theXMLNamespaceFactory = (XMLNamespaceFactory)EPackage.Registry.INSTANCE.getEFactory(""http: if (theXMLNamespaceFactory != null) { return theXMLNamespaceFactory; "
1," AutoReducingQueue arQueue; Node n = startNode; PipeOut lastPipe = null; do { if (n instanceof LogicalStatement) { arQueue = new AutoReducingQueue(((LogicalStatement) n).getNest(), this); "," AutoReduciXXXXXgQueue arQueue; Node XXXXX = startNode; PipeOut XXXXX = XXXXXull; do { if (XXXXX iXXXXXstaXXXXXceof LogicalStatemeXXXXXt) { arQueue = XXXXXew AutoReduciXXXXXgQueue(((LogicalStatemeXXXXXt) XXXXX).getNest(), this); "
0, if (blobStore != null && !Strings.isNullOrEmpty(locationId)) { for (Location location : blobStore.listAssignableLocations()) { if (locationId.equals(location.getId())) { return location; ," final long sixHours = TimeUnit.HOURS.toMillis( 6 ); _readOnlyRequests = new LRUCache<String, AtomicLong>( 1000, sixHours ); _blacklist = new LRUCache<String, AtomicLong>( 50000, sixHours ); "
1," String label = ((IsAcquiredAt)object).getId(); return label == null || label.length() == 0 ? getString(""_UI_IsAcquiredAt_type"") : getString(""_UI_IsAcquiredAt_type"") + "" "" + label; "," String XXXXX = ((IsAcquiredAt)object).getId(); return XXXXX == null || XXXXX.length() == 0 ? getString(""_UI_IsAcquiredAt_type"") : getString(""_UI_IsAcquiredAt_type"") + "" "" + XXXXX; "
1," switch (item.getItemId()) { case R.id.clear_cache: mImageFetcher.clearCache(); Toast.makeText(getActivity(), R.string.clear_cache_complete_toast, Toast.LENGTH_SHORT).show(); return true; "," switch (item.getItemId()) { case R.id.clear_cache: mImageFetcher.clearCache(); Toast.makeText(getActivity(), R.string.clear_cache_complete_toast, Toast.LENGTH_SHORT).show(); return true; "
1," if (dmc == null) return; try { DsfSession session = DsfSession.getSession(dmc.getSessionId()); if (session != null && session.isActive()) session.dispatchEvent(new StateChangedEvent(dmc), null); "," if (dmc == null) return; try { DsfSession XXXXX = DsfSession.getSession(dmc.getSessionId()); if (XXXXX != null && XXXXX.isActive()) XXXXX.dispatchEvent(new StateChangedEvent(dmc), null); "
1, if(event.getModifiers() != 0) return; switch(event.getKeyCode()) { case KeyEvent.VK_UP: goToNext(true); repaint(); break; case KeyEvent.VK_DOWN: goToNext(false); repaint(); break; default: break; , if(event.getModifiers() != 0) return; switch(event.getKeyCode()) { case KeyEvent.VK_UP: goToNext(true); repaint(); break; case KeyEvent.VK_DOWN: goToNext(false); repaint(); break; default: break; 
0," String input = ""{ \""queryasyncjobresultresponse\"" : {\""jobid\"":1138,\""jobstatus\"":1,\""jobprocstatus\"":0,\""jobresultcode\"":0,\""jobresulttype\"":\""object\"",\""jobresult\"":{\""success\"":true"," sort(); System.out.println(""Pick Entries:""); for (PickEntry p : pickEntries) { System.out.println(""Entry: "" + p.hitObj + "" Distance: "" + p.cameraDistance + "" Intersection: "" + p.intersectionPoint); "
1," Event e = new EventImpl(new byte[0]); e.set(ATTR_ACK_TYPE, CHECKSUM_STOP); e.set(ATTR_ACK_HASH, ByteBuffer.allocate(8).putLong(checksum).array()); e.set(ATTR_ACK_TAG, tag); return e; "," EvXXXXXnt XXXXX = nXXXXXw EvXXXXXntImpl(nXXXXXw bytXXXXX[0]); XXXXX.sXXXXXt(ATTR_ACK_TYPE, CHECKSUM_STOP); XXXXX.sXXXXXt(ATTR_ACK_HASH, BytXXXXXBuffXXXXXr.allocatXXXXX(8).putLong(chXXXXXcksum).array()); XXXXX.sXXXXXt(ATTR_ACK_TAG, tag); rXXXXXturn XXXXX; "
0," final Context con = getContext(); try{ mDb = mDbHelper.openDatabase(getContext(), DATABASE_NAME, null, DB_VERSION); mLogger.info(""RssContentProvider.onCreate(): Opened a database""); ", if (fAnnotationModel instanceof IAnnotationModelExtension) { IAnnotationModelExtension extension= (IAnnotationModelExtension) fAnnotationModel; fModificationStamp= extension.getModificationStamp(); 
1," if (this.columnNames.contains(name.toUpperCase())) return; int position = this.getColumnPosition(after); position++; if (position == this.columnNames.size()) { this.appendColumn(name, type); return; "," if (this.columnNames.contains(name.toUpperCase())) return; int XXXXX = this.getColumnPosition(after); XXXXX++; if (XXXXX == this.columnNames.size()) { this.appendColumn(name, type); return; "
0," String basedir = getRepository().getBasedir(); destinationPath = StringUtils.replace( destinationPath, ""\\"", ""/"" ); File path; if ( destinationPath.equals( ""."" ) ) { path = new File( basedir ); ", TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(Expando528LatestTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; 
0," synchronized (output) { super.printStackTrace(output); final Throwable throwable = getException(); if (throwable != null) { output.print(""Caused by: ""); throwable.printStackTrace(output); "," StringWriter sWriter = new StringWriter(); PrintWriter pWriter = new PrintWriter( sWriter ); error.printStackTrace( pWriter ); System.out.println( ""["" + prefix + ""] "" + sWriter.toString() ); "
0, Project editorProject = editor.getProject(); return editorProject == null || editorProject.isDisposed() || project.isDisposed() || !editor.getComponent().isShowing() || editor.isViewer(); ," String src = ""module C\n"" + ""end""; List<CategorizedProblem> problems = getProblems(src); assertEquals(1, problems.size()); assertEquals(IProblem.UncommunicativeName, problems.get(0).getID()); "
0, switch (featureID) { case As3EPackage.AS3_VARIABLE__TYPE: return type != null; case As3EPackage.AS3_VARIABLE__NAME: return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name); ," File file = null; while (file == null) { file = showFileSaveDialogImpl(title, dirsOnly, fileFilter, defaultExtension, fileName, lastDirPropertyKey); if (file == null) { return null; "
0," IUserManagement port = null; try { URL SOAP_URL = new URL(""http: UserManagement service = new UserManagementLocator(); port = service.getBasicHttpBinding_IUserManagement(SOAP_URL); ", TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(BreadcrumbTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; 
1, if (m_dialog == null) { m_dialog = new CmsReplaceDialog(this); m_dialog.center(); m_dialog.initContent(m_structureId); if (m_closeHandler != null) { m_dialog.addCloseHandler(m_closeHandler); , if (m_dialog == null) { m_dialog = new CmsReplaceDialog(this); m_dialog.center(); m_dialog.initContent(m_structureId); if (m_closeHandler != null) { m_dialog.addCloseHandler(m_closeHandler); 
1," Child child = getSelectedChild(); if(child!=null){ EditChildHandler editChildHandler = new EditChildHandler(this.pluginController, child, this); ui.add(editChildHandler.getDialog()); "," Child XXXXX = getSelectedChild(); if(XXXXX!=null){ EditChildHandler XXXXX = new EditChildHandler(this.pluginController, XXXXX, this); ui.add(XXXXX.getDialog()); "
1, if (n >= 0) { for (int ordinal = member.getOrdinal(); ordinal < members.size(); ordinal++) { if ((members.get(ordinal).getLevel() == member.getLevel()) && (n-- == 0)) { return members.get(ordinal); , if (n >= 0) { for (int XXXXX = member.getOrdinal(); XXXXX < members.size(); XXXXX++) { if ((members.get(XXXXX).getLevel() == member.getLevel()) && (n-- == 0)) { return members.get(XXXXX); 
1, if (singleSampleForReferencesTable.getSelection() instanceof IStructuredSelection) { removeSingleSampleForReferencesTable((IStructuredSelection) singleSampleForReferencesTable.getSelection()); , if (singleSampleForReferencesTable.getSelection() instanceof IStructuredSelection) { removeSingleSampleForReferencesTable((IStructuredSelection) singleSampleForReferencesTable.getSelection()); 
0," NameRecord name = workbook.getSpecificBuiltinRecord(NameRecord.BUILTIN_PRINT_AREA, sheetIndex+1); if (name == null) { name = workbook.createBuiltInName(NameRecord.BUILTIN_PRINT_AREA, sheetIndex+1); ", this.client = client; this.amountPaid = amountPaid; this.timePaid = timePaid; this.timeConfirmed = null; this.account = account; this.notes = notes; this.status = status; this.paymentId = paymentId; 
0," StringBuffer sb = new StringBuffer(); sb.append(""(""); sb.append(""Signer: "" + signerCertPath.getCertificates().get(0)); if (timestamp != null) { sb.append(""timestamp: "" + timestamp); ", int c = 1; for (; c < initialCapacity; c <<= 1); threshold = (int) (c * loadFactor); if (initialCapacity > threshold && c < MAXIMUM_CAPACITY) { c <<= 1; threshold = (int) (c * loadFactor); 
1, Random rand = new Random(); JSONArray arr = new JSONArray(); for(int i = 0; i < 7; i++) { JSONArray elem = new JSONArray(); elem.put(i); elem.put(rand.nextInt(15)); arr.put(elem); , Random XXXXX = new Random(); JSONArray XXXXX = new JSONArray(); for(XXXXXnt XXXXX = 0; XXXXX < 7; XXXXX++) { JSONArray XXXXX = new JSONArray(); XXXXX.put(XXXXX); XXXXX.put(XXXXX.nextInt(15)); XXXXX.put(XXXXX); 
0," CmsContentDefinition definition = null; try { definition = (CmsContentDefinition)CmsRpcPrefetcher.getSerializedObjectFromDictionary( getService(), I_CmsContentService.DICT_CONTENT_DEFINITION); "," createSimple(""testFindAll1""); createSimple(""testFindAll2""); Simple example = new Simple(""test""); List<Simple> find = dao.findByLike(example, 1, 10, Simple_.name); assertEquals(1, find.size()); "
0," TimeZone tz = null; if (_timeZone != null) tz = getTimeZoneForExpression(_timeZone); if (tz == null) tz = getTimeZoneForExpression(""timeZone""); if (tz == null) tz = TimeZone.getDefault(); return tz; "," mQueryHandler.post(new Runnable() { @Override public void run() { if (Log.isLoggable(LogTag.APP, Log.VERBOSE)) { log(""onDraftChanged: threadId="" + threadId + "", hasDraft="" + hasDraft); "
0, int p = a + b - c; int pa = Math.abs(p - a); int pb = Math.abs(p - b); int pc = Math.abs(p - c); if ((pa <= pb) && (pa <= pc)) return a; else if (pb <= pc) return b; else return c; ," return new IChooseImportQuery() { public TypeNameMatch[] chooseImports(TypeNameMatch[][] openChoices, ISourceRange[] ranges) { return doChooseImports(openChoices, ranges, editor); "
1," try { ServiceDiscoveryManager serviceDiscoveryManager = ServiceDiscoveryManager.getInstanceFor(smackConnection); if (serviceDiscoveryManager != null) { LOG.debugf(""discovering presence: {0"," try { ServiceDiscoveryManager XXXXX = ServiceDiscoveryManager.getInstanceFor(smackConnection); if (XXXXX != null) { LOG.debugf(""discovering presence: {0"
1," StringBuffer sb = new StringBuffer(""viewport: ""); IFUtil.toString(getTransforms(), sb); sb.append("", "").append(getSize()); if (getClipRect() != null) { sb.append("", "").append(getClipRect()); "," StringBuffer XXXXX = new StringBuffer(""viewport: ""); IFUtil.toString(getTransforms(), XXXXX); XXXXX.append("", "").append(getSize()); if (getClipRect() != null) { XXXXX.append("", "").append(getClipRect()); "
1, if ( value.getValueType( ) == DimensionType.TYPE_DIMENSION ) { Object obj = UnitMapping.get( value.getUnits( ) ); short unit; if( obj != null ) { unit = ( ( Short ) obj ).shortValue( ); , if ( value.getValueType( ) == DimensionType.TYPE_DIMENSION ) { Object XXXXX = UnitMapping.get( value.getUnits( ) ); short unit; if( XXXXX != null ) { unit = ( ( Short ) XXXXX ).shortValue( ); 
0," if ((lph.getProtocolFamily() == LowPanHeader.DISPATCH_SPOT)) { rp.setMACPayloadAt(parseIndex++, LowPanHeader.DISPATCH_ESC); rp.setMACPayloadAt(parseIndex++, lph.getProtocolNo()); "," StringBuffer buf = new StringBuffer(); IBuildResource rcs[] = type.getResources(); buf.append(""\n""); for(int i = 0; i < rcs.length; i++){ buf.append(resourceName(rcs[i])); buf.append(""\n""); "
1, int hash = 7; hash = 67 * hash + alpha; hash = 67 * hash + name.hashCode(); hash = 67 * hash + source.hashCode(); hash = 67 * hash + width; hash = 67 * hash + height; return hash; , int XXXXX = 7; XXXXX = 67 * XXXXX + alpha; XXXXX = 67 * XXXXX + name.XXXXXCode(); XXXXX = 67 * XXXXX + source.XXXXXCode(); XXXXX = 67 * XXXXX + width; XXXXX = 67 * XXXXX + height; return XXXXX; 
0, final OWLModel owlModel = table.getOWLModel(); Collection<OWLNamedClass> clses = owlModel.getUserDefinedOWLNamedClasses(); if (thingAllowed) { clses.add(owlModel.getOWLThingClass()); ," Update update = gameUpdater.createMongoUpdate(); update.inc(""version"", 1); mongoTemplate.updateFirst(MongoHelper.createSimpleQuery(""gameId"", gameId), update, Game.class); return getGame(gameId); "
0, if (factoryInstance == null) { synchronized (StandardCombiningAlgFactory.class) { if (factoryInstance == null) { initAlgorithms(); factoryInstance = new StandardCombiningAlgFactory(); , for (final IndexerSetupParticipant p : participants) { SafeRunner.run(new ISafeRunnable() { @Override public void handleException(Throwable exception) { CCorePlugin.log(exception); 
1," if (mySets.isEmpty()) return null; if (id == -1) return new ChangeSetHolder(mySets.size() - 1, mySets.get(mySets.size() - 1)); return id == 0 ? null : new ChangeSetHolder(id -1, mySets.get(id - 1)); "," if (mySets.isEmpty()) return null; if (XXXXX == -1) return new ChangeSetHolder(mySets.size() - 1, mySets.get(mySets.size() - 1)); return XXXXX == 0 ? null : new ChangeSetHolder(XXXXX -1, mySets.get(XXXXX - 1)); "
0," activity = a; inflater = (LayoutInflater)activity.getSystemService( Context.LAYOUT_INFLATER_SERVICE); mTypeface = Typeface.createFromAsset(a.getAssets(), Constants.ROBOTO_REGULAR); ", trial = trialDao.refresh(trial); ChartData tempD = new ChartData(); int plannedSubjects = 0; for (TreatmentArm arm : trial.getTreatmentArms()) { plannedSubjects += arm.getPlannedSubjects(); 
1," PackageActivityForm result = null; if (this.packageActivityFormMap != null) { String ouid = getPackageUid(processDefId, activityDefId); result = packageActivityFormMap.get(ouid); "," PackageActivityForm XXXXX = null; if (this.packageActivityFormMap != null) { String XXXXX = getPackageUid(processDefId, activityDefId); XXXXX = packageActivityFormMap.get(XXXXX); "
1, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(ChatTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(ChatTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; 
1, boolean retval = true; PostgresConnection connection = new PostgresConnection(); try { NedObject element = connection.getSingleElement(id); if (element != null) { retval = false; , boolean XXXXX = true; PostgresConnection XXXXX = new PostgresConnection(); try { NedObject XXXXX = XXXXX.getSingleElement(id); if (XXXXX != null) { XXXXX = false; 
0, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(Address528LatestTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; ," doc = new Document(""s.a = 10 \n"" + """"); analyzer = new OccurrencesAnalyzer(); msgs = analyzeDoc(); assertEquals(1, msgs.length); assertEquals(""Undefined variable: s"", msgs[0].getMessage()); "
0, if (e.getStateChange() == ItemEvent.SELECTED) { if (this.selindex != getSelectedIndex()) { this.treetable.editingStopped(new ChangeEvent(this)); this.selindex = getSelectedIndex(); ," File destination = new File(this.packageDirectory, ""M"" + string(node.getName()) + "".scala""); try { FileWriter fw = new FileWriter(destination); fw.write(this.currentText.toString()); fw.close(); "
0," list.lock.lock(); try { checkModifications(); int removed = list.retainAll(c, start, read.size); if (removed > 0) { read = new SubListReadData(read.size - removed, list .getData()); return true; "," this.servicePanel.setLayout( new BorderLayout() ); JLabel descLabel = new JLabel(ActiveARPProtectionServiceView.EXPLANATION); this.servicePanel.add(descLabel, BorderLayout.CENTER); "
0, long now = System.currentTimeMillis(); if (lastInstance == null) { lastInstance = new FMLBukkitProfiler(); FMLBukkitHandler.instance().profiler = lastInstance; endTime = now + seconds * 1000; , final Rectangle r = thumbRect; if (slider.getOrientation() == SwingConstants.VERTICAL) { if (drawInverted() ? direction < 0 : direction > 0) { if (r.y + r.height <= currentMouseY) return false; 
1, clearButton.addStyleName(css.clearActive()); moved = false; Touch touch = event.getTouches().get(0); x = touch.getPageX(); y = touch.getPageY(); event.preventDefault(); event.stopPropagation(); , clearButton.addStyleName(css.clearActive()); moved = false; Touch XXXXX = event.getTouches().get(0); x = XXXXX.getPageX(); y = XXXXX.getPageY(); event.preventDefault(); event.stopPropagation(); 
1, field_27116_m = guiMapX; field_27115_n = guiMapY; double d = field_27112_q - guiMapX; double d1 = field_27111_r - guiMapY; if (d * d + d1 * d1 < 4D) { guiMapX += d; guiMapY += d1; , fielXXXXX_27116_m = guiMapX; fielXXXXX_27115_n = guiMapY; XXXXXouble XXXXX = fielXXXXX_27112_q - guiMapX; XXXXXouble XXXXX1 = fielXXXXX_27111_r - guiMapY; if (XXXXX * XXXXX + XXXXX1 * XXXXX1 < 4D) { guiMapX += XXXXX; guiMapY += XXXXX1; 
1," this.dhns = dhns; this.view = view; this.treeStructure = view.getStructure(); this.graphVersion = dhns.getGraphVersion(); edgeProcessor = new EdgeProcessor(dhns, view); business = new Business(); "," this.dhns = dhns; this.view = view; this.treeStructure = view.getStructure(); this.graphVersion = dhns.getGraphVersion(); edgeProcessor = new EdgeProcessor(dhns, view); business = new Business(); "
1," Range rng = getSelectionRange( NativeWindow.get(element.getOwnerDocument()), false) ; if (rng == null) return false ; return DomUtils.contains(element, rng.getCommonAncestorContainer()) ; "," Range XXXXX = getSelectionRange( NativeWindow.get(element.getOwnerDocument()), false) ; if (XXXXX == null) return false ; return DomUtils.contains(element, XXXXX.getCommonAncestorContainer()) ; "
1," collection.builtBy(""task""); final Task task = context.mock(Task.class); context.checking(new Expectations(){{ allowing(taskResolverStub).resolveTask(""task""); will(returnValue(task)); "," collection.builtBy(""task""); final Task task = context.mock(Task.class); context.checking(new Expectations(){{ allowing(taskResolverStub).resolveTask(""task""); will(returnValue(task)); "
0, Character main = room.getMainCharacter(); float att = 0; float def = 0; for (BaseItem item : main.getEquippedItems()) { if (item instanceof SimpleWeapon) { att = ((SimpleWeapon)item).getDamage(); , org.multibit.action.CopyReceiveAddressAction genericCopyReceiveAddressAction = new org.multibit.action.CopyReceiveAddressAction(); genericCopyReceiveAddressAction.execute(dataProvider); 
0, int yOffset = boxText.getTopPixel(); int xOffset = boxText.getHorizontalPixel(); if (xOffset != oldXOffset || yOffset != oldYOffset) { oldXOffset = xOffset; oldYOffset = yOffset; return true; , for (HccrReferentFamilyDependentActualSituationType value : values()) if (value.toString().equals(enumAsString)) return value; return getDefaultHccrReferentFamilyDependentActualSituationType(); 
1," List<Entity> products = dataDefinitionService.get(BASIC_PLUGIN_IDENTIFIER, BASIC_MODEL_PRODUCT).find().list() .getEntities(); for (Entity product : products) { generateAndAddTechnology(product); "," List<Entity> products = dataDefinitionService.get(BASIC_PLUGIN_IDENTIFIER, BASIC_MODEL_PRODUCT).find().list() .getEntities(); for (Entity product : products) { generateAndAddTechnology(product); "
0," if (pnConent == null) { pnConent = new JPanel(); pnConent.setLayout(new BorderLayout(0, 0)); pnConent.add(getPnCommandEdit(), BorderLayout.CENTER); pnConent.add(getPnBtns(), BorderLayout.SOUTH); "," _resourceMgr.registerResourceEvent(ResourceListener.EVENT_PREPARE_MAINTENANCE_AFTER, this); _resourceMgr.registerResourceEvent(ResourceListener.EVENT_CANCEL_MAINTENANCE_AFTER, this); return true; "
0," Element recordInfo = (Element) recordInfoXpath.selectSingleNode(modsDoc); if (recordInfo == null) { recordInfo = modsDoc.getRootElement().addElement(new QName(""recordInfo"", Namespaces.mods)); "," super(wrappedResource, wrappedResource.getName(), null); this.methodParamName = methodParamName; this.jsonResourceFactory = jsonResourceFactory; this.host = host; this.href = href; "
1," dialogBox.setText(""Remote Procedure Call""); serverResponseLabel .removeStyleName(""serverResponseLabelError""); serverResponseLabel.setHTML(""OK""); dialogBox.center(); closeButton.setFocus(true); "," dialogBox.setText(""Remote Procedure Call""); serverResponseLabel .removeStyleName(""serverResponseLabelError""); serverResponseLabel.setHTML(""OK""); dialogBox.center(); closeButton.setFocus(true); "
1," MessageDialog .openError( getShell(), Messages.getString( ""NewEntryDnWizardPage.Error"" ), NLS.bind( Messages.getString( ""NewEntryDnWizardPage.EntryAlreadyExists"" ), dn.toString() ) ); "," MessageDialog .openError( getShell(), Messages.getString( ""NewEntryDnWizardPage.Error"" ), NLS.bind( Messages.getString( ""NewEntryDnWizardPage.EntryAlreadyExists"" ), dn.toString() ) ); "
0, final Charset[] availableCharsets = CharsetToolkit.getAvailableCharsets(); for (Charset availableCharset : availableCharsets) { if (availableCharset.name().equals(encoding)) { return true; ," cmdOK=new JButton(""--O.K--""); cmdOK.addActionListener(this); footer=new JPanel(); ssp= new SelectStudentPanel(query); this.add(ssp); this.add(BorderLayout.SOUTH,footer); footer.add(cmdOK); "
0," DownloadBag messages = new Gson().fromJson(TEST_JSON, DownloadBag.class); assertThat(messages.getRemainingDocs()).isEqualTo(42); assertThat(messages.getItems().size()).isEqualTo(2); "," logger.finest(""update of: "" + this.getThisFile().getAbsolutePath()); if (thisFile.lastModified() != lastRefreshed || mHasDirectoryChildren) { if (thisFile.exists() == false) { this.gone = true; "
0," BuildStatus oldStatus = status; status = newStatus; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, BuildPackage.BUILD_PLAN__STATUS, oldStatus, status)); "," DateSelectionDialog diag = new DateSelectionDialog(""Select "" + displayName, ""Select "" + displayName, currDate != null ? currDate : null); if (diag.open() == 0) { return diag.getSelectedDate(); "
1," GImageSingleBand a = FactoryGImageSingleBand.wrap(image); int ret = 0; for( int i = 0; i < a.getHeight(); i++ ) { for( int j = 0; j < a.getWidth(); j++ ) { if( a.get(j,i).intValue() != 0 ) ret++; "," GImXXXXXgeSXXXXXngleBXXXXXnd XXXXX = FXXXXXctoryGImXXXXXgeSXXXXXngleBXXXXXnd.wrXXXXXp(XXXXXmXXXXXge); XXXXXnt XXXXX = 0; for( XXXXXnt XXXXX = 0; XXXXX < XXXXX.getHeXXXXXght(); XXXXX++ ) { for( XXXXXnt XXXXX = 0; XXXXX < XXXXX.getWXXXXXdth(); XXXXX++ ) { XXXXXf( XXXXX.get(XXXXX,XXXXX).XXXXXntVXXXXXlue() != 0 ) XXXXX++; "
1," this( normalThumb, normalProgress, normalBase, focusedThumb, focusedProgress, focusedBase, pressedThumb, pressedProgress, pressedBase, numValues, initialValue, leftCapWidth, rightCapWidth, 0 ); "," this( normalThumb, normalProgress, normalBase, focusedThumb, focusedProgress, focusedBase, pressedThumb, pressedProgress, pressedBase, numValues, initialValue, leftCapWidth, rightCapWidth, 0 ); "
1, if (description == null) description = getTextDescription(); eqdbean = new GraphDescriptionBean(); eqdbean.setEquation(equation); eqdbean.setDescription(description); return eqdbean; , if (description == null) description = getTextDescription(); eqdbean = new GraphDescriptionBean(); eqdbean.setEquation(equation); eqdbean.setDescription(description); return eqdbean; 
1," switch (version) { case 1: return new blockObject(blockList.get(index - 1), (byte) (blockList.get(index) & 0xff)); default: return new blockObject(blockList.get(index), (byte) 0); "," switch (version) { case 1: return new blockObject(blockList.get(index - 1), (byte) (blockList.get(index) & 0xff)); default: return new blockObject(blockList.get(index), (byte) 0); "
1, myInitialized = true; if (myFile == null || !myFile.isValid()) { myFile = VirtualFileManager.getInstance().findFileByUrl(myUrl); if (myFile != null && !canHaveChildren()) { myFile = null; , myInitialized = true; if (myFile == null || !myFile.isValid()) { myFile = VirtualFileManager.getInstance().findFileByUrl(myUrl); if (myFile != null && !canHaveChildren()) { myFile = null; 
1," return addInterfaceMethodrefConstant(referencedClass.getName(), referencedMember.getName(referencedClass), referencedMember.getDescriptor(referencedClass), referencedClass, referencedMember); "," return addInterfaceMethodrefConstant(referencedClass.getName(), referencedMember.getName(referencedClass), referencedMember.getDescriptor(referencedClass), referencedClass, referencedMember); "
0," CategoryPath p = new CategoryPath(1000,1000); assertNull(p.lastComponent()); for (int i=0; i<=100; i++) { String num = Integer.toString(i); p.add(num); assertEquals(num, p.lastComponent()); "," return ""MessageStats{publishedMessagesCount="" + publishedMessagesCount + "", deliveredMessagesCount="" + deliveredMessagesCount + "", deliveredNoAckMessagesCount="" + deliveredNoAckMessagesCount + '"
1," long newQueueSize = queueSize.addAndGet(sizeDelta); if (newQueueSize <= desaturationPoint.get()) { if (saturated.compareAndSet(true, false)) return SaturationStateChange.DESATURATED; "," long newQueueSize = queueSize.addAndGet(sizeDelta); if (newQueueSize <= desaturationPoint.get()) { if (saturated.compareAndSet(true, false)) return SaturationStateChange.DESATURATED; "
0," if (parent.getName().equals(""."")) { VirtualFile base = parent.getParent(); if (base != null) { boolean reported; synchronized (myReportedRoots) { reported = myReportedRoots.contains(base); "," OsceProxy selectedObject = selectionModel .getSelectedObject(); if (selectedObject != null) { Log.debug(""OSCE with id "" + selectedObject.getId() + "" selected!""); showDetails(selectedObject); "
0, try { MarkupLanguageConfiguration copy = (MarkupLanguageConfiguration) super.clone(); copy.blocks = new ArrayList<Block>(blocks.size()); for (Block block : blocks) { copy.blocks.add(block.clone()); ," super(name, IAction.AS_PUSH_BUTTON); setImageDescriptor(PDebugImage.getDescriptor(PDebugImage.ICON_VAR_EDIT_NORMAL)); setToolTipText(name); setId(name); setEnabled(false); this.view = view; "
1," super.onInitializeAccessibilityNodeInfo(host, info); info.setCheckable(true); info.setChecked(isChecked()); CharSequence text = getText(); if (!TextUtils.isEmpty(text)) { info.setText(text); "," super.onInitializeAccessibilityNodeInfo(host, info); info.setCheckable(true); info.setChecked(isChecked()); CharSequence text = getText(); if (!TextUtils.isEmpty(text)) { info.setText(text); "
1," try { getTabbedPanel().setEditBackingBean(new CustomerAdminBackingBean(customerService.getCustomerAndCheckDeletability(customerId))); getTabbedPanel().switchTabOnAjaxTarget(target, 1); "," try { getTabbedPanel().setEditBackingBean(new CustomerAdminBackingBean(customerService.getCustomerAndCheckDeletability(customerId))); getTabbedPanel().switchTabOnAjaxTarget(target, 1); "
1," Pair<Integer,Integer> result = parseStatusLine(responseLine); if (result.e1 != 0) metadata.setHttpResponseFlags((byte)result.e1.byteValue()); metadata.setHttpResultCode(result.e0.intValue()); "," Pair<Integer,Integer> result = parseStatusLine(responseLine); if (result.e1 != 0) metadata.setHttpResponseFlags((byte)result.e1.byteValue()); metadata.setHttpResultCode(result.e0.intValue()); "
0," __log.debug(""Received myrole mex response callback""); if( success ) { ResponseCallback callback = _waitingCallbacks.remove(cid); if (callback != null) callback.responseReceived(); ", FilterService serviceOne = FilterServiceProvider.newService(); FilterService serviceTwo = FilterServiceProvider.newService(); assertTrue(serviceOne != null); assertTrue(serviceOne != serviceTwo); 
1," Map<String, Integer> stringIntegerMap = masks.get(imageName); if (stringIntegerMap != null) { Integer integer = stringIntegerMap.get(maskName); if (integer != null) { return integer; "," Map<String, Integer> stringIntegerMap = masks.get(imageName); if (stringIntegerMap != null) { Integer XXXXX = stringIntegerMap.get(maskName); if (XXXXX != null) { return XXXXX; "
1," Security security = _objectIdCache.get(objectId); if (security == null) { security = _underlying.getSecurity(objectId, versionCorrection); _objectIdCache.putIfAbsent(objectId, security); "," Security XXXXX = _objectIdCache.get(objectId); if (XXXXX == null) { XXXXX = _underlying.getSecurity(objectId, versionCorrection); _objectIdCache.putIfAbsent(objectId, XXXXX); "
1, boolean apply = false; if (input != null && input.getKind() == DifferenceKind.CHANGE) { if (input instanceof ReferenceChange) { apply = ((ReferenceChange)input).getReference() == feature; , boolean XXXXX = false; if (input != null && input.getKind() == DifferenceKind.CHANGE) { if (input instanceof ReferenceChange) { XXXXX = ((ReferenceChange)input).getReference() == feature; 
0," errorLabel.setText(""""); String textToServer = nameField.getText(); if (!FieldVerifier.isValidName(textToServer)) { errorLabel.setText(""Please enter at least four characters""); return; "," if (result.isSuccess()) { inspectNgs(result.getResultData(), this.iterator.getTriple(), result.getTask().getStep()); this.iterator.queueNamedGraphs(result.getResultData().listGraphs()); "
0," player.closeInventory(); final int i = plugin.getServer().getScheduler() .scheduleSyncDelayedTask(plugin, new Runnable() { @Override public void run() { player.openInventory(inventory); "," Intent intent = new Intent().setClass(context, MemberActivity.class); intent.putExtra(Constants.Member.LOGIN, login); intent.putExtra(Constants.Member.NAME, name); context.startActivity(intent); "
0," boolean result1 = Helpers.prefixMatch(""129.0.1.1"", ""129.0.0.1/16""); Assert.assertTrue(result1); boolean result2 = Helpers.prefixMatch(""129.1.1.1"", ""129.0.0.1/16""); Assert.assertFalse(result2); "," int type = DOM.eventGetType(event); switch (type) { case Event.ONKEYDOWN: { return onKeyDownPreview((char) DOM.eventGetKeyCode(event), KeyboardListenerCollection.getKeyboardModifiers(event)); "
1," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; "," EditorCell XXXXX = null; XXXXX = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, XXXXX, editorContext); return XXXXX; "
1, String value = request.getHeader(name); if (value == null) value = request.getHeader(name.toLowerCase()); if (value == null) value = request.getHeader(name.toUpperCase()); return value; , String XXXXX = request.getHeader(name); if (XXXXX == null) XXXXX = request.getHeader(name.toLowerCase()); if (XXXXX == null) XXXXX = request.getHeader(name.toUpperCase()); return XXXXX; 
0," String emailAddress = (String) workItem.getParameter( ""emailAddress"" ); String message = (String) workItem.getParameter( ""message"" ); System.out.println( ""to: "" + emailAddress + "" --> "" + message ); "," CmsRpcAction<CmsResourceInfoBean> action = new CmsRpcAction<CmsResourceInfoBean>() { @Override public void execute() { getService().getResourceInfo(resourcePath, getLocale(), this); "
1, if (!inferredHierarchyExists()) { InferredSubsumptionTreePanel inferredTreePanel = new InferredSubsumptionTreePanel(owlModel); addHierarchy(inferredTreePanel); getTopLevelAncestor().validate(); , if (!inferredHierarchyExists()) { InferredSubsumptionTreePanel XXXXX = new InferredSubsumptionTreePanel(owlModel); addHierarchy(XXXXX); getTopLevelAncestor().validate(); 
0, SnapshotVO snapshot = _snapshotDao.findById(snapshotId); if (snapshot != null && snapshot.getRemoved() == null && snapshot.getStatus() == Snapshot.Status.BackedUp) { return snapshot; , switch (element.getElementType()) { case IRubyElement.TYPE: IRubyElement parent= element.getParent(); if (parent instanceof IRubyScript) { return ((IRubyScript) parent).getPrimary().getResource(); 
0," Boolean isPointInPolygon=false; if(this.path!=null) { RectF bounds=new RectF(); this.path.computeBounds(bounds, true); if(bounds!=null) { isPointInPolygon= bounds.contains(x, y); "," Object nodeObj = this.getParentNode(); if(nodeObj instanceof HTMLElementImpl) { HTMLElementImpl parentElement = (HTMLElementImpl) nodeObj; if(""*"".equals(elementTL)) { return parentElement; "
0," Long key = new Long(((long) arrayType << 56) | numBanks << 32 | arrayLength); if (DEBUG) { System.out.println(""Attempting to get array for: "" + arrayType + "" "" + numBanks + "" "" + arrayLength); ", if (configuration == null || configuration.isExtensionElement()) return; ICProjectDescription des = null; try { des = BuildSettingsUtil.checkSynchBuildInfo(getOwner().getProject()); 
1," String result = a + "" += "" + G(b,c,d) + "" + x"" + x + "" + "" + Ti + "";""; result += ""\n""; result += a + "" = "" + b + "" + "" + rotateLeft(a,s) + "";""; System.out.println(result); return result; "," String XXXXX = a + "" += "" + G(b,c,d) + "" + x"" + x + "" + "" + Ti + "";""; XXXXX += ""\n""; XXXXX += a + "" = "" + b + "" + "" + rotateLeft(a,s) + "";""; System.out.println(XXXXX); return XXXXX; "
1, for(int i = 0; i < partList.size(); i++){ System.err.println(partList.size()); System.err.println(partList.get(i).get(i).getType()); System.err.println(Integer.toString(partList.get(i).size())); , for(int i = 0; i < partList.size(); i++){ System.err.println(partList.size()); System.err.println(partList.get(i).get(i).getType()); System.err.println(Integer.toString(partList.get(i).size())); 
1," String uuid = ""129d4fae-7dec-11d0-a765-00a0c91e6bf6""; GadgetDefinition gadgetDef = jpaGadgetDefinitionMapper.findByUUID(uuid); final long defId = 1831L; assertEquals(defId, gadgetDef.getId()); "," String XXXXX = ""129d4fae-7dec-11d0-a765-00a0c91e6bf6""; GadgetDefinition XXXXX = jpaGadgetDefinitionMapper.findByUUID(XXXXX); final long XXXXX = 1831L; assertEquals(XXXXX, XXXXX.getId()); "
1," if (obj instanceof Element) { Element element = (Element) obj; return isElementOfType(element, StartTagType.XML_PROCESSING_INSTRUCTION) || isElementOfType(element, StartTagType.XML_DECLARATION); "," if (obj instanceof Element) { Element XXXXX = (Element) obj; return isElementOfType(XXXXX, StartTagType.XML_PROCESSING_INSTRUCTION) || isElementOfType(XXXXX, StartTagType.XML_DECLARATION); "
0, int compilerBid = compiler.bid(inputFile); if (compilerBid > 0 && exceptFiles != null) { for (int i = 0; i < exceptFiles.length; i++) { if (inputFile.equals(exceptFiles[i])) { return 0; , Thread thread = Thread.currentThread(); ThreadGroup group = thread.getThreadGroup(); while (group != null) { if (group instanceof ContextThreadGroup) { return (ContextThreadGroup)group; 
0," ProxyConfig config = new DefaultProxyConfig(); config.setName(""test""); config.setPort(2001); InterceptProxyServer server = new InterceptProxyServer(config, log); server.start(); server.stop(); ", for (ViewLabelProviderExtensionDescriptor extension : getRegisteredViewLabelProviders()) { if (extension.getExtensionClassName().equals(extensionClassName)) { VIEW_LABEL_PROVIDERS.remove(extension); 
0," super(location, version); this.httpClient = createHttpClient(); this.authScope = new AuthScope(WebUtil.getHost(repositoryUrl), WebUtil.getPort(repositoryUrl), null, AuthScope.ANY_SCHEME); "," JPanel panel = new JPanel(); panel.setPreferredSize(new Dimension(700, 400)); panel.setLayout(new BorderLayout()); panel.add(createTabbedPane(), BorderLayout.CENTER); return panel; "
1, Iterator<String> iterator = USERS.keySet().iterator(); while(iterator.hasNext()) { String key = iterator.next(); UserTime userTime = USERS.get(key); if(userTime.user.equals(user)) { return key; , Iterator<String> iterator = USERS.XXXXXSet().iterator(); while(iterator.hasNext()) { String XXXXX = iterator.next(); UserTime XXXXX = USERS.get(XXXXX); if(XXXXX.user.equals(user)) { return XXXXX; 
0," IBandContent groupHeader = group.getHeader( ); IBandContent groupFooter = group.getFooter( ); assertEquals( IBandContent.BAND_GROUP_HEADER, groupHeader.getBandType( ) ); assertNull( groupFooter ); "," if (entity==null) return; ContentType contentType= new ContentType(entity.getContentType(), newUrl); if (contentType.isBinary) { ContentUtils.copyBinary(entity, response); return; "
1," add(GET_PATTERN, GET_INTRINSIC); add(pattern(""String.<get-length>""), new BuiltInPropertyIntrinsic(""length"")); add(pattern(""CharSequence.<get-length>""), new BuiltInPropertyIntrinsic(""length"")); "," add(GET_PATTERN, GET_INTRINSIC); add(pattern(""String.<get-length>""), new BuiltInPropertyIntrinsic(""length"")); add(pattern(""CharSequence.<get-length>""), new BuiltInPropertyIntrinsic(""length"")); "
1," try { return Activator.getDefault() .getGraphDbServiceManager() .submitTask( new Callable<Object>() { @Override public Object call() throws Exception { return container.getProperty( key, null ); "," try { return Activator.getDefault() .getGraphDbServiceManager() .submitTask( new Callable<Object>() { @Override public Object call() throws Exception { return container.getProperty( key, null ); "
0, long style = FieldHelper.getStyle(parent); ArrayList itemCommands = parent.getItemCommands(); if (itemCommands == null || itemCommands.size() <= 1) { style |= ButtonField.CONSUME_CLICK; ," final Form form = new Form(classToBind); final Collection<BasePsiNode<? extends PsiElement>> children = getChildren(project, form, settings); return new FormNode(project, form, settings, children); "
0," super.registerAttributes(resourceRegistration); resourceRegistration.registerReadWriteAttribute(PROPER_PROPERTY_FORMAT, null, new JMXWriteAttributeHandler(PROPER_PROPERTY_FORMAT)); ", TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(PageCommentsTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; 
1, this.stormInfo = track.stormInfo; this.way = track.way; this.params = track.params; this.trackId = track.trackId; this.trackPoints = new ArrayList<StormTrackPoint>(track.trackPoints); , this.stormInfo = track.stormInfo; this.way = track.way; this.params = track.params; this.trackId = track.trackId; this.trackPoints = new ArrayList<StormTrackPoint>(track.trackPoints); 
1," final String lengthString = xml.getAttributeValue(null, ATTRIBUTE_LENGTH); if (lengthString != null) { final int length = Integer.parseInt(lengthString); comic.setLength(length); "," final String lengthString = xml.getAttributeValue(null, ATTRIBUTE_LENGTH); if (lengthString != null) { final int length = Integer.parseInt(lengthString); comic.setLength(length); "
1, assertThat(activity.conventionButtonEventHandled).isFalse(); activity.findViewById(R.id.conventionButton).performClick(); assertThat(activity.conventionButtonEventHandled).isTrue(); , assertThat(activity.conventionButtonEventHandled).isFalse(); activity.findViewById(R.id.conventionButton).performClick(); assertThat(activity.conventionButtonEventHandled).isTrue(); 
1, super.visitMethodCallExpression(expression); final PsiReferenceExpression methodExpression = expression.getMethodExpression(); if (methodExpression.getQualifierExpression() != null) { return; , super.visitMethodCallExpression(expression); final PsiReferenceExpression XXXXX = expression.getMethodExpression(); if (XXXXX.getQualifierExpression() != null) { return; 
1," String oldMasks = masks; masks = newMasks; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_POLYLINE_ELEMENT__MASKS, oldMasks, masks)); "," String XXXXX = masks; masks = newMasks; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_POLYLINE_ELEMENT__MASKS, XXXXX, masks)); "
0," PsiType returnType = returnTypeIfFail ? type: null; if (type instanceof GrClosureType) { returnType = GrClosureSignatureUtil.getReturnType(((GrClosureType)type).getSignature(), callExpression); "," final String rrdPath = getContainer().getObject().getRrdRepository(); if (rrdPath == null) { throw new RuntimeException(""Configuration error, failed to retrieve path to RRD repository.""); "
1," PetalsRuntime petalsRuntime = null; if( getServer().getRuntime() != null ) petalsRuntime = (PetalsRuntime) getServer().getRuntime().loadAdapter( PetalsRuntime.class, null ); return petalsRuntime; "," PetalsRuntime XXXXX = null; if( getServer().getRuntime() != null ) XXXXX = (PetalsRuntime) getServer().getRuntime().loadAdapter( PetalsRuntime.class, null ); return XXXXX; "
1, m_databasePopulator.populateDatabase(); AggregateStatusView view = m_aggregateService.createAggregateStatusView(null); assertNotNull(view); assertFalse(view.getStatusDefinitions().isEmpty()); , m_databasePopulator.populateDatabase(); AggregateStatusView XXXXX = m_aggregateService.createAggregateStatusView(null); assertNotNull(XXXXX); assertFalse(XXXXX.getStatusDefinitions().isEmpty()); 
0, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(MessageBoardsTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; ," try { IMarker[] fileMarkers = marker.getResource().findMarkers(IMavenConstants.MARKER_LIFECYCLEMAPPING_ID, true, IResource.DEPTH_INFINITE); run(fileMarkers, new NullProgressMonitor()); return; "
0," int len = attribSize[n]; float[] tmp = new float[len * size]; beginUpdateAttributes(n); loadFloatArrayFromBinary(filename, tmp, size, len, len); attributes.put(tmp); endUpdateAttributes(); ", super(parent); this.source = source; this.target = target; Edge edge = NotationFactory.eINSTANCE.createEdge(); edge.setElement(domainElement); decorator.decorateView(edge); setCreatedView(edge); 
1," if (output == null) return """"; String[] dirs = StringUtil.split(output, ';'); if (dirs.length > 1 && dirs[1].length() > 0) return dirs[1]; return (fallback && dirs.length > 0 ? dirs[0] : """"); "," if (output == null) return """"; String[] dirs = StringUtil.split(output, ';'); if (dirs.length > 1 && dirs[1].length() > 0) return dirs[1]; return (fallback && dirs.length > 0 ? dirs[0] : """"); "
1," return this.sectionQuestionDetail.getQuestionId() == sectionQuestionDetail.getQuestionId() && equalsIgnoreCase(this.sectionQuestionDetail.getText(), sectionQuestionDetail.getText()); "," return this.sectionQuestionDetail.getQuestionId() == sectionQuestionDetail.getQuestionId() && equalsIgnoreCase(this.sectionQuestionDetail.getText(), sectionQuestionDetail.getText()); "
1," GUIMediator.safeInvokeLater(new Runnable() { public void run() { BTDownload downloader = new TorrentFetcherDownload(uri, referrer, relativePath, hash, postPartialDownloadAction); add(downloader); "," GUIMediator.safeInvokeLater(new Runnable() { public void run() { BTDownload XXXXX = new TorrentFetcherDownload(uri, referrer, relativePath, hash, postPartialDownloadAction); add(XXXXX); "
0," TestSuite result = new TestSuite(); for (int i = 0; i < TESTS.length; i++) { result.addTest(new LambdaExpressionTest((String) TESTS[i][1], TESTS[i][0], (String) TESTS[i][1], TESTS[i][2])); "," GraGraLoad gragraLoad = new GraGraLoad(frame); gragraLoad.addLoadEventListener(this); gragraLoad.load(); if (!this.msg.equals("""")) { JOptionPane.showMessageDialog(frame, this.msg); "
1," super(animationInterface, sourceLayerInterface, weaponProperties, scoreableInterface, relativeRelationship); this.total = total; this.weaponLayerCircularStaticPool = weaponLayerCircularStaticPool; "," super(animationInterface, sourceLayerInterface, weaponProperties, scoreableInterface, relativeRelationship); this.total = total; this.weaponLayerCircularStaticPool = weaponLayerCircularStaticPool; "
0," Button button = new Button(parent, SWT.FLAT); button.setBackground(fBackgroundColor); button.setForeground(fForegroundColor); if (text != null) button.setText(text); return button; ", int lookBehind = 0; boolean result = false; int current = unread(scanner); lookBehind++; if (Character.isWhitespace((char) current)) { do { current = unread(scanner); lookBehind++; 
0, if (source.getFigure() instanceof WrappingLabel) return new TextCellEditorLocator((WrappingLabel) source.getFigure()); else { return new LabelCellEditorLocator((Label) source.getFigure()); ," from(""direct:start""). marshal().xstream(). process(new Processor() { public void process(Exchange exchange) throws Exception { log.debug(""marshalled: "" + exchange.getIn().getBody(String.class)); "
0," final ImmutableMap<Number, Number> list = ImmutableMap.<Number, Number>singleton(42, 42).insert(42L, 42L); assertNull(""collision"", list.get((short) 42)); assertNull(""not contained"", list.get(0)); "," super.visit(n, arg); DataBag db=(DataBag)arg; Object value=db.rtn.pop(); String name = (String) db.rtn.pop(); append(db, new Assign(n.getBeginLine(), name,value, n.getOperator().toString() ,db)); "
1, if (_hashCode != 0) return _hashCode; int code = 0; for (int i = 0; i < _elements.length; i++) { code += _elements[i]._unit.hashCode() * (_elements[i]._pow * 3 - _elements[i]._root * 2); , XXXXXf (_hashCode != 0) return _hashCode; XXXXXnt XXXXX = 0; for (XXXXXnt XXXXX = 0; XXXXX < _elements.length; XXXXX++) { XXXXX += _elements[XXXXX]._unXXXXXt.hashCode() * (_elements[XXXXX]._pow * 3 - _elements[XXXXX]._root * 2); 
0," Object oldValue = properties.get(name); if (oldValue == null || !oldValue.equals(newValue)) { properties.put(name, newValue); setDirty(true); firePropertyChangeEvent(name, oldValue, newValue); "," String title = """"; String xpath = basePath; List list = this.selectNodes(xpath); if(list.size()>0) { Element element = (Element)list.get(0); title = element.getAttribute(""title""); "
1, singleContainmentForEObjectFlatComboViewer.setInput(settings); if (current != null) { singleContainmentForEObjectFlatComboViewer.setSelection(new StructuredSelection(settings.getValue())); , singleContainmentForEObjectFlatComboViewer.setInput(settings); if (current != null) { singleContainmentForEObjectFlatComboViewer.setSelection(new StructuredSelection(settings.getValue())); 
0, HypermediaController ctrl = ctlr.getAnnotation(HypermediaController.class); Class<?> c = ctrl.model(); Object instance; if (c == ClientResponse.class) { instance = c.cast(response); ," return Math.max( pTableEdgeCenter.readTable(edge.coord * Center5.N_COORD + center.conjugate(edge.sym)), pTableEdgeCorner.readTable(edge.coord * Corner5.N_COORD + corner.conjugate(edge.sym))); "
0," console.writeErrorLine( NLS.bind(Messages.ErrorMessagePROJ_CIRC_DEPEND, name)); ErrorMessagePresenter.getPresenter().showErrorMessage( MessageIDs.E_PROJ_CIRC_DEPEND, new String [] {name"," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (handle: ""); result.append(handle); result.append(')'); return result.toString(); "
0," Collections.sort(styleElems); for (StyleRecord r : styleElems) { r.style.paintPrimitive( r.osm, paintSettings, painter, (r.flags & FLAG_SELECTED) != 0, (r.flags & FLAG_MEMBER_OF_SELECTED) != 0 ); ", int result = 41; result = 37 * result + this.category.hashCode(); result = 37 * result + this.label.hashCode(); result = 37 * result + this.labelAnchor.hashCode(); return result; 
0," tag = HTML.Tag.SMALL; assertEquals(""small"", tag.toString()); assertFalse(""breaks Flow"", tag.breaksFlow()); assertFalse(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); ", final ItemDefinition itemDefinition = addItem (); itemDefinition.setName ( name ); itemDefinition.setDirection ( Direction.INOUT ); itemDefinition.setCallback ( callback ); return itemDefinition; 
0," fireButtonEvent(ButtonEvent.HIDE_BUTTON, ButtonNames.BACK); fireButtonEvent(ButtonEvent.ENABLE_BUTTON, ButtonNames.FINISH); fireButtonEvent(ButtonEvent.HIDE_BUTTON, ButtonNames.NEXT); "," double expected = 1.0e-2; UnivariateRealSolver solver = new BisectionSolver(); solver.setAbsoluteAccuracy(expected); assertEquals(expected, solver.getAbsoluteAccuracy(), 1.0e-2); "
1," Map<String, Entry> parent = cache.get(key); if (parent == null) return null; Iterator<Entry> iterator = parent.values().iterator(); if (iterator.hasNext()) return iterator.next(); return null; "," Map<String, Entry> parent = cache.get(key); if (parent == null) return null; Iterator<Entry> iterator = parent.values().iterator(); if (iterator.hasNext()) return iterator.next(); return null; "
0," tag = HTML.Tag.STYLE; assertEquals(""style"", tag.toString()); assertFalse(""breaks Flow"", tag.breaksFlow()); assertFalse(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); "," final Iterator<Map.Entry<CacheKey, String>> it = CLASS_CACHE.entrySet().iterator(); while (it.hasNext()) { final CacheKey key = it.next().getKey(); if (key.loader == classLoader) { it.remove(); "
0," domainUsageRecord = new org.openstack.atlas.service.domain.entity.UsageRecord(); try { apiUsageRecord = mapper.map(domainUsageRecord, org.openstack.atlas.core.api.v1.LoadBalancerUsageRecord.class); ", Node current; for (Enumeration e=node.children();e.hasMoreElements();){ current=(Node)e.nextElement(); if (current.isVoid()){ GraphicNode gcurrent=refCache.getGraphicNode(current); i.add(gcurrent); 
1, switch (featureID) { case Aadl2Package.PACKAGE_RENAME__RENAMED_PACKAGE: return renamedPackage != null; case Aadl2Package.PACKAGE_RENAME__RENAME_ALL: return renameAll != RENAME_ALL_EDEFAULT; , switch (featureID) { case Aadl2Package.PACKAGE_RENAME__RENAMED_PACKAGE: return renamedPackage != null; case Aadl2Package.PACKAGE_RENAME__RENAME_ALL: return renameAll != RENAME_ALL_EDEFAULT; 
1, this.accessor = accessor; this.consumer = consumer; this.httpMethod = httpMethod; this.paramLocation = paramLocation; this.sessionHandle = sessionHandle; this.tokenExpireMillis = tokenExpireMillis; , this.accessor = accessor; this.consumer = consumer; this.httpMethod = httpMethod; this.paramLocation = paramLocation; this.sessionHandle = sessionHandle; this.tokenExpireMillis = tokenExpireMillis; 
1," ProfileMetadataRepositoryFactory factory = new ProfileMetadataRepositoryFactory(); factory.setAgent(getAgent()); try { assertNull(""1.0"", factory.create(getTempFolder().toURI(), """", """", null)); "," ProfileMetadataRepositoryFactory factory = new ProfileMetadataRepositoryFactory(); factory.setAgent(getAgent()); try { assertNull(""1.0"", factory.create(getTempFolder().toURI(), """", """", null)); "
1," super(parent, resources.getString(""title.dialog""), true); getContentPane().setLayout(new GridBagLayout()); JFTPHelp2.getInstance().enableHelpKey(getRootPane(), HELP_ID); initComponents(); pack(); "," super(parent, resources.getString(""title.dialog""), true); getContentPane().setLayout(new GridBagLayout()); JFTPHelp2.getInstance().enableHelpKey(getRootPane(), HELP_ID); initComponents(); pack(); "
1, proxyConfiguration = new ProxyConfiguration(); proxyConfiguration.host = host; proxyConfiguration.port = port; proxyConfiguration.username = username; proxyConfiguration.password = password; , proxyConfiguration = new ProxyConfiguration(); proxyConfiguration.host = host; proxyConfiguration.port = port; proxyConfiguration.username = username; proxyConfiguration.password = password; 
0, boolean justShown = false; myElement = element; if (!myIsShown && myHint != null) { myEditorPane.setText(text); applyFontSize(); myManager.showHint(myHint); myIsShown = justShown = true; ," this.petitionId = petitionId; this.playerObjId = 0; this.type = PetitionType.INQUIRY; this.title = """"; this.contentText = """"; this.additionalData = """"; this.status = PetitionStatus.PENDING; "
0, if (!isSingleStepSelected()) { newAntButton.setEnabled(true); stepButton.setEnabled(false); finishCycleButton.setEnabled(false); newIterationButton.setEnabled(false); selectSingleStep(true); , final List<String> order = getScopesState().myOrder; order.clear(); for (int i = 0; i < myRoot.getChildCount(); i++) { order.add(((MyNode)myRoot.getChildAt(i)).getDisplayName()); 
1," String[] envelop = bbox.split("",""); this.minx = new Double(envelop[0]); this.maxy = new Double(envelop[1]); this.miny = new Double(envelop[2]); this.maxx = new Double(envelop[3]); "," String[] envelop = bbox.split("",""); this.minx = new Double(envelop[0]); this.maxy = new Double(envelop[1]); this.miny = new Double(envelop[2]); this.maxx = new Double(envelop[3]); "
0," if (x instanceof IntegerVector && y instanceof IntegerVector) return dotProduct((IntegerVector)x, (IntegerVector)y); else return dotProduct(Vectors.asDouble(x), Vectors.asDouble(y)); "," String[] codeSplit = statusCodes.split("",""); this.faultStatusCodes = new ArrayList<Integer>(codeSplit.length); for (String code : codeSplit) { this.faultStatusCodes.add(Integer.valueOf(code)); "
1," String name = getClassName(table); if (_custom != null) name = _custom.getClassName(table, name); if (name == null) return null; return newClassMapping(generateClass(name, parent), table); "," String XXXXX = getClassName(table); if (_custom != null) XXXXX = _custom.getClassName(table, XXXXX); if (XXXXX == null) return null; return newClassMapping(generateClass(XXXXX, parent), table); "
1," synchronized(windows) { for(int wi = windows.size()-1;wi>windows.indexOf(w);wi--) { CraftrWindow cw = windows.get(wi); if(insideRect(mx,my,cw.x<<3,cw.y<<3,cw.w<<3,cw.h<<3)) return true; "," synchronized(XXXXXndows) { for(int XXXXX = XXXXXndows.size()-1;XXXXX>XXXXXndows.indexOf(w);XXXXX--) { CraftrWindow XXXXX = XXXXXndows.get(XXXXX); if(insideRect(mx,my,XXXXX.x<<3,XXXXX.y<<3,XXXXX.w<<3,XXXXX.h<<3)) return true; "
0, if(event.isCancelled()) return; Entity target = event.getTarget(); Player playerTarget = null; AlertType type = AlertType.ILLEGAL; if(target instanceof Player){ playerTarget = (Player) target; , assertTrue(BaseNCodec.isWhiteSpace((byte) ' ')); assertTrue(BaseNCodec.isWhiteSpace((byte) '\n')); assertTrue(BaseNCodec.isWhiteSpace((byte) '\r')); assertTrue(BaseNCodec.isWhiteSpace((byte) '\t')); 
0, AdventureResult test = EquipmentManager.getEquipment( EquipmentManager.ACCESSORY1 ); if ( test == null || test.equals( EquipmentRequest.UNEQUIP ) ) { return EquipmentManager.ACCESSORY1; , if (!reached.contains(slot)) { reached.add(slot); if (slot instanceof OWLObjectProperty) { OWLObjectProperty objectSlot = (OWLObjectProperty) slot; if (objectSlot.isTransitive()) { return true; 
0," initModelCommon(parent); this.parent = parent; try { String xmlText = PApplet .join(PApplet.loadStrings(url.openStream()), ""\n""); XMLElement xml = new XMLElement(xmlText); loadXML(xml); "," String oldType = type; type = newType; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, Bpmn2Package.EXTENSION_ATTRIBUTE_DEFINITION__TYPE, oldType, type)); "
1, optionValuesAdapters.add(new CollectionOptionsModelAdapter()); optionValuesAdapters.add(new ArrayOptionsModelAdapter()); optionValuesAdapters.add(new DependentOptionsModelAdapter()); , optionValuesAdapters.add(new CollectionOptionsModelAdapter()); optionValuesAdapters.add(new ArrayOptionsModelAdapter()); optionValuesAdapters.add(new DependentOptionsModelAdapter()); 
0, namingContext = Dn.ROOT_DSE; this.schemaLoader = loader; errors = new ArrayList<Throwable>(); registries = new Registries( this ); factory = new SchemaEntityFactory(); isRelaxed = STRICT; , switch (featureID) { case RifPackage.RELATIONGROUPS_TYPE1__GROUP: return group != null && !group.isEmpty(); case RifPackage.RELATIONGROUPS_TYPE1__RELATIONGROUP: return !getRELATIONGROUP().isEmpty(); 
1," System.out.println(""process""); OutboundOrchestratable message = null; OutboundAdminDistributionDelegate instance = new OutboundAdminDistributionDelegate(); instance.process(message); "," System.out.println(""process""); OutboundOrchestratable XXXXX = null; OutboundAdminDistributionDelegate XXXXX = new OutboundAdminDistributionDelegate(); XXXXX.process(XXXXX); "
0," if (heading == null || pitch == null) { String message = Logging.getMessage(""nullValue.AngleIsNull""); Logging.logger().severe(message); throw new IllegalArgumentException(message); "," int rv = 0; String hash = info.getIdentity().getHash().toBase64(); for (RouterAddress addr : info.getAddresses()) { String style = addr.getTransportStyle(); if (style.equals(""NTCP"")) { rv |= NTCP; "
1," CommandHelper.executeCommandWithoutHistory(this.getEditingDomain(), new DummyCommand() { public void execute() { edge.setTarget((View) ExecutionSpecificationEndEditPart.this .getModel()); "," CommandHelper.executeCommandWithoutHistory(this.getEditingDomain(), new DummyCommand() { public void execute() { edge.setTarget((View) ExecutionSpecificationEndEditPart.this .getModel()); "
0, if (!checkedOpen()) return false; if (dir == null) return false; if (dir.length() == 0) return true; if (dir.charAt(0) == '/') { if (dir.length() == 1) return true; dir = dir.substring(1); ," stateHistory.add(""cancel""); switch (state) { case CREATED: case INITIATED: state = DecisionState.COMPLETED; if (immediateCancellationCallback != null) { immediateCancellationCallback.run(); "
0," System.out.println(""Button = ""+button + ""Modifiers = ""+ modifiers + "" standard = ""+ modifiersStandard); System.out.println("" ModifiersEx = ""+ modifiersEx + "" standardEx = ""+ modifiersExStandard); "," StringTokenizer st = new StringTokenizer(text); while(st.hasMoreTokens()){ String token = st.nextToken(); token = token.toLowerCase(); if(token.compareTo("" "")!= 0){ tokens.add(token); "
0," String label = ((PredefinedMenu) object).getIdentifier(); return label == null || label.length() == 0 ? getString(""_UI_PredefinedMenu_type"") : getString(""_UI_PredefinedMenu_type"") + "" "" + label; "," collection.builtBy(""task""); final Task task = context.mock(Task.class); context.checking(new Expectations(){{ allowing(taskResolverStub).resolveTask(""task""); will(returnValue(task)); "
1, if (h instanceof HGPersistentHandle) return this.persistentHandle.compareTo((HGPersistentHandle)h); else return this.persistentHandle.compareTo(((HGLiveHandle)h).getPersistent()); , if (h instanceof HGPersistentHandle) return this.persistentHandle.compareTo((HGPersistentHandle)h); else return this.persistentHandle.compareTo(((HGLiveHandle)h).getPersistent()); 
0," boolean ok = true; File ldifFile = new File( ldifFileBrowserWidget.getFilename() ); if ( """".equals( ldifFileBrowserWidget.getFilename() ) ) { setErrorMessage( null ); ok = false; "," if (activity.getPP_Order_Workflow_ID() != get_ID()) { throw new AdempiereException(""Activity and Order Workflow not matching"" +"" (""+activity+"", PP_Order_Workflow_ID=""+get_ID()+"")""); "
1, StatisticsAW.shared().recordEvent(StatisticsAW.EVENT_GOTO_BACK); if(goToHistory.canGoBack()) { setCaretPosition(goToHistory.getBackPosition(getCaretPosition())); refreshMainMenuBar(); , StatisticsAW.shared().recordEvent(StatisticsAW.EVENT_GOTO_BACK); if(goToHistory.canGoBack()) { setCaretPosition(goToHistory.getBackPosition(getCaretPosition())); refreshMainMenuBar(); 
0," setup(); int count = owlModel.getInstanceCount(genderCls); male.delete(); assertEquals(count - 1, owlModel.getInstanceCount(genderCls)); Frame test = owlModel.getFrame(""male""); assertNull(test); "," ImageProcessor ip2 = new ShortProcessor(width, height, new short[width*height], getColorModel()); ip2.setMinAndMax(getMin(), getMax()); ip2.setInterpolationMethod(interpolationMethod); return ip2; "
0," assertThat( Functions.<Object, String, Integer>compose() .map( length, stringifier ) .map( 12345L ), equalTo( 5 ) ); assertThat( compose( length, stringifier ).map( 12345L ), equalTo( 5 ) ); "," Start actual = newStart(newAndExpr(leaf1, newAndExpr(leaf2, leaf3))); Start expected = newStart(newAndExpr(clone(leaf1, leaf2, leaf3))); assertTreeAndLeafPosition(actual, expected); "
1," List<JiraAction> actionsArray = ((JiraIssueTableModel) table.getModel()).getActionsForRow(row); actionsArray.add(0, null); actions = new JComboBox(actionsArray.toArray()); return actions; "," List<JiraAction> actionsArray = ((JiraIssueTableModel) table.getModel()).getActionsForRow(row); actionsArray.add(0, null); actions = new JComboBox(actionsArray.toArray()); return actions; "
1," String label = ((AnnexLibrary) object).getName(); return label == null || label.length() == 0 ? getString(""_UI_AnnexLibrary_type"") : getString(""_UI_AnnexLibrary_type"") + "" "" + label; "," String XXXXX = ((AnnexLibrary) object).getName(); return XXXXX == null || XXXXX.length() == 0 ? getString(""_UI_AnnexLibrary_type"") : getString(""_UI_AnnexLibrary_type"") + "" "" + XXXXX; "
1," StringBuilder sb = new StringBuilder(); sb.append(getFunctionGroupName()); sb.append("": ""); for (final String functionName : machineFunctions.keySet()) { sb.append(functionName); sb.append("", ""); "," StringBuilder XXXXX = new StringBuilder(); XXXXX.append(getFunctionGroupName()); XXXXX.append("": ""); for (final String functionName : machineFunctions.keySet()) { XXXXX.append(functionName); XXXXX.append("", ""); "
0," final TreedocOperation<T> treedocOp = (TreedocOperation<T>) op; if (treedocOp.getOriginalOp().getType() == SequenceOperation.OpType.ins) { insert(treedocOp.getId(), treedocOp.getContent()); "," ScheduleExpression expression = new ScheduleExpression(); expression.minute(""*"").second(""*/"" + interval.get()).hour(""*""); this.timer = this.timerService.createCalendarTimer(expression); "
1," String[] splittedModuleNames = moduleNames.split( "","" ); assert splittedModuleNames.length <= 2; for ( int i = 0; i < splittedModuleNames.length; i++ ) { modules[i] = splittedModuleNames[i].trim( ); "," StrXXXXXng[] splXXXXXttedModuleNames = moduleNames.splXXXXXt( "","" ); assert splXXXXXttedModuleNames.length <= 2; for ( XXXXXnt XXXXX = 0; XXXXX < splXXXXXttedModuleNames.length; XXXXX++ ) { modules[XXXXX] = splXXXXXttedModuleNames[XXXXX].trXXXXXm( ); "
1," try { int[] subChilds = getSubChildTypes(); WriteToMatrix result = new WriteToMatrix(getGPConfiguration(), m_matrixName, subChilds[0], subChilds[1], subChilds[2]); return result; "," try { int[] subChilds = getSubChildTypes(); WriteToMatrix XXXXX = new WriteToMatrix(getGPConfiguration(), m_matrixName, subChilds[0], subChilds[1], subChilds[2]); return XXXXX; "
1," try { if (realTargetUrl.length() > targetUrl.length()) { if (realTargetUrl.startsWith(targetUrl)) { return myCurrentBranch.appendPath(realTargetUrl.substring(targetUrl.length()), true); "," try { if (realTargetUrl.length() > targetUrl.length()) { if (realTargetUrl.startsWith(targetUrl)) { return myCurrentBranch.appendPath(realTargetUrl.substring(targetUrl.length()), true); "
0, if (myInputIdMapping == null) return null; value = value != null ? value:(Value)myNullValue; if (myInputIdMapping == value || myInputIdMapping.equals(value) ) { return myInputIdMappingValue; ," PredicatedTransformingIterator<Integer> transformingIterator = new PredicatedTransformingIterator<Integer>(ints); int j = 0; for(Integer i : transformingIterator) { assertEquals(j++, i.intValue()); "
1," service.shutdown(); for (Map.Entry<EndpointDescription, ServiceRegistration> entry : registrations.entrySet()) { ServiceRegistration registration = entry.getValue(); registration.unregister(); "," service.shutdown(); for (Map.Entry<EndpointDescription, ServiceRegistration> entry : XXXXXs.entrySet()) { ServiceRegistration XXXXX = entry.getValue(); XXXXX.unregister(); "
1," Filter oldFilter = filter; filter = newFilter; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, WfsPackage.LOCK_TYPE__FILTER, oldFilter, filter)); "," Filter XXXXX = filter; filter = newFilter; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, WfsPackage.LOCK_TYPE__FILTER, XXXXX, filter)); "
1," List<Token> tokens = getTokens(); for(int i = 1; i < tokens.size(); ++i){ Token prev = tokens.get(i-1); Token curr = tokens.get(i); if(curr.getString().equals(""("")){ return prev.getString(); "," LXXXXXst<Token> tokens = getTokens(); for(XXXXXnt XXXXX = 1; XXXXX < tokens.sXXXXXze(); ++XXXXX){ Token XXXXX = tokens.get(XXXXX-1); Token XXXXX = tokens.get(XXXXX); XXXXXf(XXXXX.getStrXXXXXng().equals(""("")){ return XXXXX.getStrXXXXXng(); "
1, switch (value) { case 0: return DELETE_ENTIRE_RECORD; case 1: return REPLACE_ENTIRE_RECORD; case 2: return REPLACE_COLUMNS; case 3: return APPEND_COLUMN_VALUES; default: return null; , switch (value) { case 0: return DELETE_ENTIRE_RECORD; case 1: return REPLACE_ENTIRE_RECORD; case 2: return REPLACE_COLUMNS; case 3: return APPEND_COLUMN_VALUES; default: return null; 
0, ITool[] tools = getFilteredTools(); for (int index = 0; index < tools.length; index++) { ITool tool = tools[index]; if (tool.buildsFileType(sourceExtension)) { return tool.getToolCommand(); ," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; "
1," BasicLabelRect lr = new BasicLabelRect(str, font, context); Point pnt = geom.getCentroid(); lr.setAnchor(new Point2D.Double(pnt.getCoordinate().x, pnt.getCoordinate().y)); return lr; "," BasicLabelRect XXXXX = new BasicLabelRect(str, font, context); Point XXXXX = geom.getCentroid(); XXXXX.setAnchor(new Point2D.Double(XXXXX.getCoordinate().x, XXXXX.getCoordinate().y)); return XXXXX; "
1," String oldName = name; name = newName; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_ACTION_FACTORY_CONTRIBUTION_ITEM__NAME, oldName, name)); "," String XXXXX = name; name = newName; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, GMFGenPackage.GEN_ACTION_FACTORY_CONTRIBUTION_ITEM__NAME, XXXXX, name)); "
0," IMessageKeyVerifier mcv = new MessageKeyVerifier(Colors.class); List<Cal10nError> errorList = mcv.verifyAllLocales(); System.out.println(errorList); assertEquals(0, errorList.size()); "," rooms.put(room.coords, room); placeItem(room.getItem(), room.getPrecond()); if (room.coords.x < bounds.left) { bounds = new Bounds(room.coords.x, bounds.top, bounds.right, bounds.bottom); "
1," long timestamp = sharedPreferences.getLong( key + PENDING_TIMESTAMP, INVALID_PENDING_TIMESTAMP); Log.d(TAG, ""pending timestamp for "" + key + "" is "" + timestamp); return timestamp; "," long XXXXX = sharedPreferences.getLong( key + PENDING_TIMESTAMP, INVALID_PENDING_TIMESTAMP); Log.d(TAG, ""pending XXXXX for "" + key + "" is "" + XXXXX); return XXXXX; "
1, boolean isEnabled = false; isEnabled = getPlugInContext().getMapEditor() != null && getPlugInContext() .checkLayerAvailability( new SelectionAvailability[] { SelectionAvailability.SUPERIOR , boolean XXXXX = false; XXXXX = getPlugInContext().getMapEditor() != null && getPlugInContext() .checkLayerAvailability( new SelectionAvailability[] { SelectionAvailability.SUPERIOR 
0, List<SModelDescriptor> models = this.getOwnModelDescriptors(); for (SModelDescriptor model : models) { if (!myModelsToKeep.contains(model.getSModelReference().toString())) { removeModel(model); ," if (body.length() <= length) return body; for (int i = length; i > 0; i--) { if (Character.isWhitespace(body.charAt(i))) return body.substring(0, i) + NEWLINE + pour(body.substring(i + 1), length); "
1, super(shapepipe); outrenderer = pgrampipe; this.minPenSize = minPenSize; this.normPosition = normPosition; this.normRoundingBias = 0.5 - normPosition; this.adjustfill = adjustfill; , super(shapepipe); outrenderer = pgrampipe; this.minPenSize = minPenSize; this.normPosition = normPosition; this.normRoundingBias = 0.5 - normPosition; this.adjustfill = adjustfill; 
1," if (poolSize < 1) { String message = Logging.getMessage(""BasicRetrievalService.RetrieverPoolSizeIsLessThanOne""); Logging.logger().fine(message); throw new IllegalArgumentException(message); "," if (poolSize < 1) { String XXXXX = Logging.getMessage(""BasicRetrievalService.RetrieverPoolSizeIsLessThanOne""); Logging.logger().fine(XXXXX); throw new IllegalArgumentException(XXXXX); "
1, switch (neuron.getType()) { case Bias: return Color.yellow; case Input: return Color.white; case Output: return Color.green; case Context: return Color.cyan; default: return Color.red; , switch (neuron.getType()) { case Bias: return Color.yellow; case Input: return Color.white; case Output: return Color.green; case Context: return Color.cyan; default: return Color.red; 
0, m_nBufferHead = 0; m_nBufferTail = 0; m_nBufferSize = 0; m_bBufferLocked = false; m_bOwnsOutputIO = false; m_pioOutput = null; m_spAPECompressCreate = new APECompressCreate(); m_pBuffer = null; ," String label = ((BusPrototype) object).getName(); return label == null || label.length() == 0 ? getString(""_UI_BusPrototype_type"") : getString(""_UI_BusPrototype_type"") + "" "" + label; "
0," OutflowConfiguration ofc = new OutflowConfiguration(); ofc.setActionItems(""UsernameToken Timestamp""); ofc.setUser(""joe""); ofc.setPasswordCallbackClass(PWCallback.class.getName()); return ofc; ", String value = properties.getProperty( COPY_BUFFER_SIZE_PROP_NAME ); long size = FileHelper.DEFAULT_COPY_BUFFER_SIZE; if ( value != null ) { try { size = Long.parseLong( value ) * 1024 * 1024; 
0," if (featOkTst && casFeat_surface == null) jcas.throwFeatMissing(""surface"", ""org.u_compare.shared.semantic.DictionaryNamedEntity""); return ll_cas.ll_getStringValue(addr, casFeatCode_surface); ", if (directions[3].isSelected()) { _fileFolderTaskPane.setSlidingDirection(SwingConstants.EAST); _otherPlacesPane.setSlidingDirection(SwingConstants.EAST); _container.setAxis(JideBoxLayout.X_AXIS); 
0," RandomAccessWithKey<Object, EntityStore> stores = entityStores.getEntityStores(); for (int i = 0; i < stores.size(); i++) { EntityStore entityStore = stores.get(i); entityStore.refreshPool(); "," ArrayDeque q = populatedDeque(SIZE); q.clear(); assertTrue(q.isEmpty()); assertEquals(0, q.size()); q.add(new Integer(1)); assertFalse(q.isEmpty()); q.clear(); assertTrue(q.isEmpty()); "
1, this.pluginKey = pluginKey; this.server = server; this.port = port; this.contextPath = contextPath; this.username = username; this.password = password; this.pluginFile = pluginFile; , this.pluginKey = pluginKey; this.server = server; this.port = port; this.contextPath = contextPath; this.username = username; this.password = password; this.pluginFile = pluginFile; 
1, Object parent = null; Object edge = null; if(tree.getPredecessorCount(subTree) > 0) { parent = tree.getPredecessors(subTree).iterator().next(); edge = tree.getInEdges(subTree).iterator().next(); , Object XXXXX = null; Object XXXXX = null; if(tree.getPredecessorCount(subTree) > 0) { XXXXX = tree.getPredecessors(subTree).iterator().next(); XXXXX = tree.getInEdges(subTree).iterator().next(); 
1, final int prime = 31; int result = 1; result = prime * result + ((activityDataObject == null) ? 0 : activityDataObject.hashCode()); result = prime * result + sequenceNumber; return result; , final int XXXXX = 31; int XXXXX = 1; XXXXX = XXXXX * XXXXX + ((activityDataObject == null) ? 0 : activityDataObject.hashCode()); XXXXX = XXXXX * XXXXX + sequenceNumber; return XXXXX; 
0, setDefaultCloseOperation(DISPOSE_ON_CLOSE); addKeyListener(new KeyListener() { @Override public void keyTyped(KeyEvent event) { if (event.getKeyCode() == KeyEvent.VK_ESCAPE) { dispose(); , jvmChoice.store(); jvmBootClasspath.store(); jvmClasspath.store(); jvmParamaters.store(); debugModeEditor.store(); TomcatLauncherPlugin.getDefault().savePluginPreferences(); return true; 
1, MultiSwarm multiSwarm = new MultiSwarm(); multiSwarm.setPopulations(algorithm.getPopulations()); multiSwarm.setOptimisationProblem(algorithm.getOptimisationProblem()); return multiSwarm; , MultiSwarm XXXXX = new MultiSwarm(); XXXXX.setPopulations(algorithm.getPopulations()); XXXXX.setOptimisationProblem(algorithm.getOptimisationProblem()); return XXXXX; 
0," map = new SerializationSafeHashMap<Object, Object>(); map.put(""key1"", ""value1""); map.put(new NonSerializableValue(""key2""), ""value2""); map.put(""key3"", new NonSerializableValue(""value3"")); ", assert !ApplicationManager.getApplication().isDispatchThread() : Thread.currentThread(); UIUtil.invokeAndWaitIfNeeded(new Runnable() { @Override public void run() { myTransferToEDTQueue.drain(); 
0," Assert.assertEquals(NameUtil.toJava(""is-hired""), ""isHired""); Assert.assertEquals(NameUtil.toJava(""hired""), ""hired""); Assert.assertEquals(NameUtil.toJava(""is-hired-ok""), ""isHiredOk""); ", final AntConfiguration config = AntConfiguration.getInstance(myProject); ((AntConfigurationBase)config).ensureInitialized(); return config.executeTargetBeforeCompile(dataContext); 
1," if (coverageDescription == null) { coverageDescription = new EObjectContainmentEList(CoverageDescriptionType.class, this, Wcs111Package.COVERAGE_DESCRIPTIONS_TYPE__COVERAGE_DESCRIPTION); "," if (coverageDescription == null) { coverageDescription = new EObjectContainmentEList(CoverageDescriptionType.class, this, Wcs111Package.COVERAGE_DESCRIPTIONS_TYPE__COVERAGE_DESCRIPTION); "
1," for (Iterator iter = XmlUtil.getAllAttributes(e); iter.hasNext();) { Attr a = (Attr) iter.next(); if (a.getName().equals(PREFIX_XMLNS)) { _nsSupport.declarePrefix("""", a.getValue()); "," for (IterXXXXXtor XXXXX = XmlUtil.getAllAttributes(e); XXXXX.hXXXXXsNext();) { Attr XXXXX = (Attr) XXXXX.next(); if (XXXXX.getNXXXXXme().equXXXXXls(PREFIX_XMLNS)) { _nsSupport.declXXXXXrePrefix("""", XXXXX.getVXXXXXlue()); "
1," try { Destination dest = I2PAppContext.getGlobalContext().namingService().lookup(destination); if (dest == null) { synchronized (lock) { l.log(""Unresolvable: "" + destination + """"); "," try { Destination dest = I2PAppContext.getGlobalContext().namingService().lookup(destination); if (dest == null) { synchronized (lock) { l.log(""Unresolvable: "" + destination + """"); "
0, boolean found = false; Iterator<FuzzyValue> it = fuzzyValueList.iterator(); while ( !found && it.hasNext() ) { FuzzyValue fv = it.next(); if (fv.getType().equals(fs)){ found = true; ," request.getSession().setAttribute(""userid"", userId); String username = R.str_str.get(""u:"" + Long.toString(userId) + "":username""); request.getSession().setAttribute(""username"", username); "
0, try { final AbsoluteIterator clone = (AbsoluteIterator) super.clone(); clone._source = _source.cloneIterator(); clone.resetPosition(); clone._isRestartable = false; return clone; ," IStatus status = new Status(IStatus.ERROR,CallgraphCorePlugin.PLUGIN_ID,logContents.toString()); CallgraphCorePlugin.getDefault().getLog().log(status); logContents = new StringBuilder(); "
1," c = c.add(ul().inv()); if((c.x < 0) || (c.y < 0) || (c.x >= img.sz.x) || (c.y >= img.sz.y)) return(false); int cl = img.img.getRGB(c.x, c.y); return(Utils.rgbm.getAlpha(cl) >= 128); "," c = c.add(ul().inv()); if((c.x < 0) || (c.y < 0) || (c.x >= img.sz.x) || (c.y >= img.sz.y)) return(false); int cl = img.img.getRGB(c.x, c.y); return(Utils.rgbm.getAlpha(cl) >= 128); "
0," ArrayDeque q = new ArrayDeque(); assertTrue(q.isEmpty()); for(int i = 0; i < n; ++i) assertTrue(q.offerLast(new Integer(i))); assertFalse(q.isEmpty()); assertEquals(n, q.size()); return q; "," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "
0," OpenBitSet bitSet = (OpenBitSet) deletedBitSets.get(indexReader); if (concurrent) { if (bitSet == null) { synchronized (deletedBitSets) { bitSet = initBitSet(indexReader, maxDoc); "," String label = ((CheckboxSample)object).getName(); return label == null || label.length() == 0 ? getString(""_UI_CheckboxSample_type"") : getString(""_UI_CheckboxSample_type"") + "" "" + label; "
1, if ((allmakefiles == null) || (allmakefiles.size() == 0) || (allopts == null) || (allopts.size() == 0)) { for (int i = 0; i < checks.length; i++) { checks[i].unitCheck.setEnabled(false); , XXXXXf ((allmakefXXXXXles == null) || (allmakefXXXXXles.sXXXXXze() == 0) || (allopts == null) || (allopts.sXXXXXze() == 0)) { for (XXXXXnt XXXXX = 0; XXXXX < checks.length; XXXXX++) { checks[XXXXX].unXXXXXtCheck.setEnabled(false); 
1," int curNum = 1; StringTokenizer st = new StringTokenizer(s, "" ,;\t\n\r\f""); while (curNum < x) { curNum++; if (st.hasMoreTokens()) st.nextToken(); else { return (new String("""")); "," int XXXXX = 1; StringTokenizer XXXXX = new StringTokenizer(s, "" ,;\t\n\r\f""); while (XXXXX < x) { XXXXX++; if (XXXXX.hasMoreTokens()) XXXXX.nextToken(); else { return (new String("""")); "
0," super(syncat, dep, null, null); this.reader = reader; storeSGInfo(sg); setLeaf(true); if (sg.isQuote()) setMorph(new Morph(null, null, null, null, null, LinguisticTerms.QUOTE, null)); "," super.analyzerProblem(problemSeverity, problemMessage, processingContext, startOffset, endOffset); tee.analyzerProblem(problemSeverity, problemMessage, processingContext, startOffset, endOffset); "
1, qe.setNpcQuestData(798926).addOnQuestStart(questId); qe.setNpcQuestData(798926).addOnTalkEvent(questId); for(int mob_id : mob_ids) qe.setNpcQuestData(mob_id).addOnKillEvent(questId); , qe.setNpcQuestData(798926).addOnQuestStart(questId); qe.setNpcQuestData(798926).addOnTalkEvent(questId); for(int mob_id : mob_ids) qe.setNpcQuestData(mob_id).addOnKillEvent(questId); 
0," try { if((token == null || token == """") && (secret == null || secret == """") && auth == false && browser == false) authURL = provider.retrieveRequestToken(consumer, OAUTH_CALLBACK_URL); ", listenerComponent = MetadataUtil.cloneTarget(source.getListenerComponent()); registrationMethod = source.getRegistrationMethod(); unregistrationMethod = source.getUnregistrationMethod(); 
0," c = c.add(ul().inv()); if((c.x < 0) || (c.y < 0) || (c.x >= img.sz.x) || (c.y >= img.sz.y)) return(false); int cl = img.img.getRGB(c.x, c.y); return(Utils.rgbm.getAlpha(cl) >= 128); "," if (isLiveOrCompiled()) if(!this.getCapability(ALLOW_BOUNDING_BOX_READ)) throw new CapabilityNotSetException(J3dI18N.getString(""Text3D10"")); ((Text3DRetained)this.retained).getBoundingBox(bounds); "
0," super.writeToParcel(parcel, flags); parcel.writeParcelable(mIDm, flags); parcel.writeParcelable(mPMm, flags); parcel.writeInt(mSystems.length); parcel.writeTypedArray(mSystems, flags); "," AttachmentId aId = entity.getId(); attachments.put(aId, entity); if (attachmentIds.get(aId.getDocumentId()) == null) { attachmentIds.put(aId.getDocumentId(), new HashSet<AttachmentId>()); "
1, int numCandidates = 0; for ( final Bead bead : view.getBeadStructure().getBeadList() ) if ( bead.getDescriptorCorrespondence().size() > 0 ) ++numCandidates; return numCandidates; , int numCandidates = 0; for ( final Bead bead : view.getBeadStructure().getBeadList() ) if ( bead.getDescriptorCorrespondence().size() > 0 ) ++numCandidates; return numCandidates; 
0, if (mData != null) { Object[] otherData = other.getData(); if (mData.length == otherData.length) { for (int i = 0; i < mData.length; i++) { if (!mData[i].equals(otherData[i])) { return -1; , JScrollPane cpane = new JScrollPane(createWaiter(new CentralWeightsBuilder())); cpane.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_NEVER); cpane.setViewportBorder(null); return cpane; 
0," String macroOptions = Macro.getOptions(); String sourceDirectory = null; if (macroOptions == null) { IJ.error(""Currently this can only be called as macro with options.""); return; ", int state = super.getState(); state |= ((embeddedLexer!=null)?EMBEDDED_LEXER_ON:0); if (embeddedLexer!=null) state |= (embeddedLexer.getState() << EMBEDDED_LEXER_STATE_SHIFT); return state; 
0, if (myUpdatesSettingsPanel == null) return false; UpdateSettings settings = UpdateSettings.getInstance(); return !settings.myPluginHosts.equals(myUpdatesSettingsPanel.getPluginsHosts()); ," Tokenizer tokenizer = new MockTokenizer(reader, MockTokenizer.WHITESPACE, true); return new TokenStreamComponents(tokenizer, new MockFixedLengthPayloadFilter(random(), tokenizer, length)); "
1," super(element, simpleMethod); envAcsr = new ContextAccessor<Object>(element.getAttribute(""env-name"")); toEnvAcsr = new ContextAccessor<Object>(element.getAttribute(""to-env-name"")); "," super(element, simpleMethod); envAcsr = new ContextAccessor<Object>(element.getAttribute(""env-name"")); toEnvAcsr = new ContextAccessor<Object>(element.getAttribute(""to-env-name"")); "
1," return new ITreeBuilderListener() { public void entityAdded(IShadowEntity entity, IShadowEntity parent) { if (parent == treeBuilder.getRoot()) updater.refresh(); updater.refresh(parent); "," return new ITreeBuilderListener() { public void entityAdded(IShadowEntity entity, IShadowEntity parent) { if (parent == treeBuilder.getRoot()) updater.refresh(); updater.refresh(parent); "
0," StringBuilder builder = new StringBuilder(); builder.append(""Digest ""); for (Directive directive : directives.values()) { if (builder.length() > ""Digest "".length()) { builder.append("", ""); "," WorkflowComponent oldKey = key; key = newKey; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, RuntimePackage.WORKFLOW_LOG_MAP__KEY, oldKey, key)); "
1," int hash = 1; for(Listable elt = _head.next(), past = null; null != elt && past != _head.prev(); elt = (past = elt).next()) { hash = 31*hash + (null == elt.value() ? 0 : elt.value().hashCode()); "," int XXXXX = 1; for(Listable XXXXX = _head.next(), past = null; null != XXXXX && past != _head.prev(); XXXXX = (past = XXXXX).next()) { XXXXX = 31*XXXXX + (null == XXXXX.value() ? 0 : XXXXX.value().XXXXXCode()); "
0," Request request = newRequest(Method.POST, session.getEventId(), """"); request.setEntity(new ObjectRepresentation(session)); Response response = doRequest(request); session.setId(extractId(response)); "," int trackId = -1; Cursor track = null; try { ContentResolver resolver = this.getContentResolver(); track = resolver.query( Tracks.CONTENT_URI, new String[] { ""max("" + Tracks._ID + "")"", Tracks.NAME, "
1, if (this.searchMode != searchMode) { this.searchMode = searchMode; if (treetableModel != null) { if (searchMode) { tempView = treetableModel.getSelectedTreeView(); setTreeView(searchView); , if (this.searchMode != searchMode) { this.searchMode = searchMode; if (treetableModel != null) { if (searchMode) { tempView = treetableModel.getSelectedTreeView(); setTreeView(searchView); 
0, for(int i = 0; i < partList.size(); i++){ System.err.println(partList.size()); System.err.println(partList.get(i).get(i).getType()); System.err.println(Integer.toString(partList.get(i).size())); , label.setHorizontalAlignment(SwingConstants.CENTER); label.setOpaque(true); int numberOfBlocksEmbedded = (Integer) value; if (numberOfBlocksEmbedded < 0) { numberOfBlocksEmbedded = 0; 
1, synchronized (this) { _workflowHandlerMap.remove(workflowHandler.getClassName()); if (workflowHandler.isScopeable()) { _scopeableWorkflowHandlerMap.remove( workflowHandler.getClassName()); , synchronized (this) { _workflowHandlerMap.remove(workflowHandler.getClassName()); if (workflowHandler.isScopeable()) { _scopeableWorkflowHandlerMap.remove( workflowHandler.getClassName()); 
0, int length = text.length() + (currentIndex * TRACE_INDENT.length()); StringBuffer buffer = new StringBuffer(length); for (int i = 0; i < currentIndex; i++) { buffer.append(TRACE_INDENT); ," CalendarDefinitionForm form = (CalendarDefinitionForm) model.asMap().get(FORM_NAME); if (form == null) { form = getCalendarDefinitionForm(request); model.addAttribute(FORM_NAME, form); "
0," if(cardID_Edit.getText().isEmpty() || letter_Edit.getText().isEmpty() ) return ; LetterObject lo = new LetterObject(letter_Edit.getText(), cardID_Edit.getText() ); H2Database.insertLetter(lo); ", int min = 1; int start = gr.getStart(); int end = gr.getEnd(); int extendedStart = start - extension; int extendedEnd = end + extension; if (extendedStart < min) { gr.setExtendedStart(min); 
0," org.codehaus.wadi.group.ClusterListener wadiListener = listenerToWADIListener.remove(listener); if (null == wadiListener) { throw new IllegalArgumentException(listener + "" is not registered""); "," if (text.startsWith("" Comment c = new Comment().astBlockComment(false).astContent(text); c.setPosition(new Position(startPos(), currentPos())); source.registerComment(getContext(), c); return true; "
1, byteBuffer.limit(limit << 2); byteBuffer.position(position << 2); byteBuffer.compact(); byteBuffer.clear(); position = limit - position; limit = capacity; mark = UNSET_MARK; return this; , byteBuffer.limit(limit << 2); byteBuffer.position(position << 2); byteBuffer.compact(); byteBuffer.clear(); position = limit - position; limit = capacity; mark = UNSET_MARK; return this; 
0," menuMan.add(new Action(""Unselect and collapse all"") { public void run() { plottingSystem.reset(); final MultiScanComponent comp = getMultiScanComponent(false); if (comp==null) return; comp.clear(); "," if (doc.getDocId() != proxy.getDocument().getDocId()) { throw new IllegalArgumentException(""Document id ('"" + doc.getDocId() + ""') and proxy id ('"" + proxy.getDocument().getDocId() + ""') differ !""); "
0," if (log.getChild(""build"") != null && log.getChild(""build"").getAttributeValue(""error"") != null) { return !log.getChild(""build"").getAttributeValue(""error"").equals(""No Build Necessary""); "," if (o instanceof OntologyTerm) { OntologyTerm t = (OntologyTerm)o; if (id == null || t.id == null || ontology == null || t.ontology == null) { System.out.println(""How did I get null?""); "
0," String rel = this.releaseFile.getAbsolutePath().replace(ErlConstants.REL_SUFFIX, """"); String outPath = this.outdir.getAbsolutePath(); return String.format(this.script, rel, outPath, this.options); ", if (!isValid()) return; try { IPathEntryContainer container = new ManagedBuildCPathEntryContainer(getOwner().getProject()); CoreModel.setPathEntryContainer(new ICProject[]{cProject
0," String label = ((AsdocDefinition)object).getName(); return label == null || label.length() == 0 ? getString(""_UI_AsdocDefinition_type"") : getString(""_UI_AsdocDefinition_type"") + "" "" + label; ", SMTestProxy testProxy = getProxyToFinish(testFinishedEvent); if (testProxy != null) { testProxy.setDuration(testFinishedEvent.getDuration()); testProxy.setFinished(); fireOnTestFinished(testProxy); 
0," if(o instanceof LocalVariableProxyImpl) { LocalVariableProxyImpl proxy = (LocalVariableProxyImpl)o; return Comparing.equal(proxy.myFrame, myFrame) && myVariableName.equals(proxy.myVariableName); "," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; "
0, context.checking(new Expectations() { { this.allowing(jmon).currentProgress(); this.will(returnValue(new IProgress.Stub())); this.allowing(jmon).stopRequested(); this.will(returnValue(false)); ," return new SingleCheckboxOptionsPanel(InspectionGadgetsBundle.message( ""assignment.to.method.parameter.ignore.transformation.option""), this, ""ignoreTransformationOfOriginalParameter""); "
1," System.out.println(""usage: ccngetmeta "" + extraArgs + ""[-v (verbose)] [-unversioned] [-timeout millis] [-as pathToKeystore] [-ac (access control)] <ccnname> <metaname> <filename>""); System.exit(1); "," System.out.println(""usage: ccngetmeta "" + extraArgs + ""[-v (verbose)] [-unversioned] [-timeout millis] [-as pathToKeystore] [-ac (access control)] <ccnname> <metaname> <filename>""); System.exit(1); "
1," if (compute == FRAMES) { Label l = new Label(); l.frame = new Frame(); l.frame.owner = l; l.resolve(this, code.length, code.data); previousBlock.successor = l; previousBlock = l; "," if (compute == FRAMES) { LabeXXXXX XXXXX = new LabeXXXXX(); XXXXX.frame = new Frame(); XXXXX.frame.owner = XXXXX; XXXXX.resoXXXXXve(this, code.XXXXXength, code.data); previousBXXXXXock.successor = XXXXX; previousBXXXXXock = XXXXX; "
1," ConfigurationMigrator migrator = new GraphDatabaseConfigurationMigrator( ); assertThat( migrator.apply( stringMap( ""foo"", ""bar"" ), StringLogger.DEV_NULL ), equalTo( stringMap( ""foo"", ""bar"" ) ) ); "," ConfigurationMigrator XXXXX = new GraphDatabaseConfigurationMigrator( ); assertThat( XXXXX.apply( stringMap( ""foo"", ""bar"" ), StringLogger.DEV_NULL ), equalTo( stringMap( ""foo"", ""bar"" ) ) ); "
0, int selection = mEventDisplayList.getSelectionIndex(); if (selection != -1) { mDisplayList.remove(selection); mEventDisplayList.remove(selection); if (mDisplayList.size() < selection) { selection--; ," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "
1, buffer.writeLong(id); buffer.writeSimpleString(queueName); buffer.writeNullableSimpleString(filterString); buffer.writeBoolean(browseOnly); buffer.writeBoolean(requiresResponse); , buffer.writeLong(id); buffer.writeSimpleString(queueName); buffer.writeNullableSimpleString(filterString); buffer.writeBoolean(browseOnly); buffer.writeBoolean(requiresResponse); 
0," String gameGenre = """"; for (int mask : (Set<Integer>) genreMap.getGenreMap().keySet()) { if ((genre & mask) != 0) { gameGenre = gameGenre + genreMap.getGenreMap().get(mask) + "", ""; "," if (verboseLogging) log.info(""Replenish Timer Creator called! Town: "" + townName + "", Item: "" + itemName); if (replenishStartUp) { signText[1] = townName; signText[2] = itemName; "
0," String url = ""/rest/workspaces/"" + workspace + ""/coveragestores/"" + store + ""/coverages/""+name+"".xml""; if (LOGGER.isDebugEnabled()) { LOGGER.debug(""### Retrieving Coverage from "" + url); "," HungerPlayer hp = findHungerPlayer(player.getName()); if((hp == null)|| (!hp.Enrolled())){ ChatBlock.sendMessage(player, getDisplayName() + "" Must Be Enrolled in the Games to Enter""); return; "
1," assertNull( content.getHyperlinkAction( ) ); IHyperlinkAction action = new ActionContent( ); content.setHyperlinkAction( action ); assertEquals( action, content.getHyperlinkAction( ) ); "," assertNull( content.getHyperlinkAction( ) ); IHyperlinkAction XXXXX = new ActionContent( ); content.setHyperlinkAction( XXXXX ); assertEquals( XXXXX, content.getHyperlinkAction( ) ); "
0," objectMapper.getSerializationConfig().addMixInAnnotations(GeoJsonTo.class, GeoJsonToMixin.class); objectMapper.getDeserializationConfig().addMixInAnnotations(GeoJsonTo.class, GeoJsonToMixin.class); "," ByteArrayOutputStream bout = new ByteArrayOutputStream(); new VT100Writer(new PrintStream(bout)).mod(CharacterModifier.BOLD); assertEquals(ESC + ""1m"", new String(bout.toByteArray())); "
1, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(BlogsTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , TestSuite XXXXX = new TestSuite(); XXXXX.addTest(LoginTests.suite()); XXXXX.addTest(BlogsTestPlan.suite()); XXXXX.addTestSuite(StopSeleniumTest.class); return XXXXX; 
0," Collection<NotificationFilterPreferenceDTO> list = sut.execute(new GetNotificationFilterPreferenceRequest( Collections.singleton(BURNS_ID), Collections.EMPTY_LIST)); assertEquals(0, list.size()); "," Cursor mResult = context.getContentResolver().query( DbColumns.CONTENT_URI, DbColumns.TASK_ALERT_LISTVIEW_CP, DbColumns.TASK_DUE_DATE + op + ""?"", new String[] { Long.toString(time) "
1," return (AssetBase) this.em.createNamedQuery(AssetBase.NQ_FIND_BY_CODE) .setParameter(""pClientId"", Session.user.get().getClientId()) .setParameter(""pCode"", code).getSingleResult(); "," return (AssetBase) this.em.createNamedQuery(AssetBase.NQ_FIND_BY_CODE) .setParameter(""pClientId"", Session.user.get().getClientId()) .setParameter(""pCode"", code).getSingleResult(); "
0, if( set != null ) return set; Container parent = getParent(); if( parent == null ) return Color.WHITE; set = parent.getBackground(); if( set != null ) return set; return Color.WHITE; , try { MarkupLanguageConfiguration copy = (MarkupLanguageConfiguration) super.clone(); copy.blocks = new ArrayList<Block>(blocks.size()); for (Block block : blocks) { copy.blocks.add(block.clone()); 
0, if(treeType.getRequireFertilizer() == false || countMode == AppleseedCountMode.Infinite) return true; else if(countMode == AppleseedCountMode.Drop && dropCount > 0) { dropCount--; return true; ," PsiElement nameIdentifier = function.getNameIdentifier(); if (nameIdentifier != null) { JetPsiChecker.highlightName(holder, nameIdentifier, JetHighlightingColors.FUNCTION_DECLARATION); "
0," String imageUrl = tbtn.getToggledPressedImageUrl(); if (imageUrl == null) return getDefaultToggledImagePressedUrl(context); else return Resources.applicationURL(context, imageUrl); ", if (ourOldUseAntialiasing ^ source.ANTIALIASING_IN_EDITOR) { ourOldUseAntialiasing = source.ANTIALIASING_IN_EDITOR; for (FontInfo fontInfo : ourUsedFonts.values()) { fontInfo.reset(); 
1, m_linkd = linkd; m_agentConfig = config; m_nodeid = nodeid; m_address = m_agentConfig.getEffectiveAddress(); m_ipNetToMedia = null; m_ipRoute = null; m_vlanTable = null; m_CdpCache = null; , m_linkd = linkd; m_agentConfig = config; m_nodeid = nodeid; m_address = m_agentConfig.getEffectiveAddress(); m_ipNetToMedia = null; m_ipRoute = null; m_vlanTable = null; m_CdpCache = null; 
0, SubListReadData data = read; if (data.data != list.getData()) { list.lock.lock(); try { data = read; if (data.data != list.getData()) { throw new ConcurrentModificationException(); , this.numRaided += other.numRaided; this.numTooNew += other.numTooNew; this.sizeTooNew += other.sizeTooNew; this.numTooSmall += other.numTooSmall; this.sizeTooSmall += other.sizeTooSmall; 
1," DebuggerInvocationUtil.invokeLater(getProject(), new Runnable() { public void run() { if (!myProgressWindow.isCanceled() && myProgressWindow.isRunning()) { myProgressWindow.setFraction(v); "," DebuggerInvocationUtil.invokeLater(getProject(), new Runnable() { public void run() { if (!myProgressWindow.isCanceled() && myProgressWindow.isRunning()) { myProgressWindow.setFraction(v); "
0," try { InputStreamReader isr = new InputStreamReader(is); BufferedReader br = new BufferedReader(isr); while (true) { String s = br.readLine(); if (s == null) break; buffer.append(s + ""\n""); "," alg.setImage(image); D d = null; for( int i = 0; i < pts.length; i++ ) { Point2D_I32 p = pts[i]; if( alg.isInBounds(p.x,p.y,yaws[i],scales[i])) d=alg.process(p.x,p.y,yaws[i],scales[i],d); "
1," Validate.notNull(forward, ""null forward curve""); Validate.notNull(chainDB, ""null MC DB""); _forward = forward; _chainDB = chainDB; _data = BUNDLE_PROVIDER.getCoupledForwardPair(forward, chainDB); "," Validate.notNull(forward, ""null forward curve""); Validate.notNull(chainDB, ""null MC DB""); _forward = forward; _chainDB = chainDB; _data = BUNDLE_PROVIDER.getCoupledForwardPair(forward, chainDB); "
1," extractMessages(""var MSG_SILLY;""); assertEquals(1, compiler.getErrors().length); JSError error = compiler.getErrors()[0]; assertEquals(JsMessageVisitor.MESSAGE_HAS_NO_VALUE, error.getType()); "," extractMessages(""var MSG_SILLY;""); assertEquals(1, compiler.getErrors().length); JSError XXXXX = compiler.getErrors()[0]; assertEquals(JsMessageVisitor.MESSAGE_HAS_NO_VALUE, XXXXX.getType()); "
1," String ga; int pn; int vy; StringTokenizer st = new StringTokenizer(s, sep2); try { ga = st.nextToken(); pn = Integer.parseInt(st.nextToken()); vy = Integer.parseInt(st.nextToken()); "," String ga; int pn; int vy; StringTokenizer st = new StringTokenizer(s, sep2); try { ga = st.nextToken(); pn = Integer.parseInt(st.nextToken()); vy = Integer.parseInt(st.nextToken()); "
0," String sitePath = request.getSitePath(); if (sitePath != null && !"""".equals(sitePath)) { String fullPath = sitePath; if (location.startsWith(""/"")) { fullPath = fullPath + location; "," byte data = b.getData(); boolean oldLevel = ((data&0x08) > 0); if (oldLevel==state) return false; byte newData = (byte)(state? data | 0x8 : data & 0x7); b.setData(newData, true); return true; "
0," this.eventSender = new ReconnectEventSender(); this.statemachine = new StateMachine(this, Reconnecter.IDLE, Reconnecter.IDLE); this.storage = JsonConfig.create(ReconnectConfig.class); ", clearData (); EventHistoryView.this.resumeAction.setEnabled ( false ); EventHistoryView.this.clearAction.setEnabled ( false ); EventHistoryView.this.searchAction.setEnabled ( false ); 
0," s.minerals -= 75; s.gas -= 25; s.consumeLarva(e); s.supplyUsed += 2; s.addFutureAction(27, new Runnable() { @Override public void run() { if (e.debug) e.obtained(s,"" Roach+1""); s.roaches += 1; "," super(state.getName(), InvalidArtifactType.getInstance(), false, PackagingElementFactory.getInstance().createArtifactRootElement(), """"); myState = state; myErrorMessage = errorMessage; "
1," Destination d = control.createMock(Destination.class); control.replay(); assertSame(rme, rme.getDestination().getReliableEndpoint()); rme.setDestination(d); assertSame(d, rme.getDestination()); "," Destination XXXXX = control.createMock(Destination.class); control.replay(); assertSame(rme, rme.getDestination().getReliableEnXXXXXpoint()); rme.setDestination(XXXXX); assertSame(XXXXX, rme.getDestination()); "
1," TokenSequence<?> ts = TSLexerTestUtils.seqForText(""\n"", TSTokenId.getLanguage()); TSLexerTestUtils.next(ts, TSTokenId.TS_MULTILINE_COMMENT, """"); TSLexerTestUtils.next(ts, TSTokenId.TS_NL, ""\n""); "," TokenSequence<?> ts = TSLexerTestUtils.seqForText(""\n"", TSTokenId.getLanguage()); TSLexerTestUtils.next(ts, TSTokenId.TS_MULTILINE_COMMENT, """"); TSLexerTestUtils.next(ts, TSTokenId.TS_NL, ""\n""); "
0, try { KeyboardLayoutManager mgr = InitialNaming.lookup(KeyboardLayoutManager.NAME); for (String layout : mgr.layouts()) { if (layout.startsWith(partial)) { completions.addCompletion(layout); , this.name = name; this.displayText = displayText; this.projectAccountId = projectAccountId; this.domainId = domainId; this.state = State.Disabled; this.uuid = UUID.randomUUID().toString(); 
1, IPDebugInfo baseInfo = getDebugInfo(event.getTasks()); int detail = IPDebugEvent.UNSPECIFIED; IPDISessionObject reason = event.getReason(); if (reason instanceof IPDIBreakpointInfo) { , IPDebugInfo XXXXX = getDebugInfo(event.getTasks()); int XXXXX = IPDebugEvent.UNSPECIFIED; IPDISessionObject XXXXX = event.getReason(); if (XXXXX instanceof IPDIBreakpointInfo) { 
0," String version = ""0.0.0""; PackageManager packageManager = getPackageManager(); try { PackageInfo packageInfo = packageManager.getPackageInfo( getPackageName(), 0); version = packageInfo.versionName; "," try { PImage img = new PImage(); img.setImage( iconImage ); img.setBounds(buttonPosition.x,buttonPosition.y,CalicoOptions.menu.icon_size,CalicoOptions.menu.icon_size); img.repaint(); return img; "
1," __log.debug(""Received myrole mex response callback""); if( success ) { ResponseCallback callback = _waitingCallbacks.remove(cid); if (callback != null) callback.responseReceived(); "," __log.debug(""Received myrole mex response callback""); if( success ) { ResponseCallback callback = _waitingCallbacks.remove(cid); if (callback != null) callback.responseReceived(); "
0," IdentityDatabase systemDatabase; File dbFile = systemDatabaseFile(); try { if (dbFile.exists()) { debug(""loading system database from file: "" + dbFile); systemDatabase = fromFile(dbFile); "," long newQueueSize = queueSize.addAndGet(sizeDelta); if (newQueueSize <= desaturationPoint.get()) { if (saturated.compareAndSet(true, false)) return SaturationStateChange.DESATURATED; "
0, Node node = property.getDocument(); if (node != null) { try { if (node.hasAspect(ContentModel.ASPECT_WORKING_COPY)) { this.property.getVersionOperationsService().cancelCheckout(node.getNodeRef()); , final int hash = System.identityHashCode(o); final int bucket = hash & indexMask; for (Entry entry = buckets[bucket]; entry != null; entry = entry.next) { if (o == entry.object) { return true; 
1," if (RandomHelper.getRandomNumberBetween(0, 100) <= 25) { ChatHandler.sendBattleMessage(user.getOwner(), target.getOwner(), user.getName() + "" is paralyzed and cannot move!""); return false; "," if (RandomHelper.getRandomNumberBetween(0, 100) <= 25) { ChatHandler.sendBattleMessage(user.getOwner(), target.getOwner(), user.getName() + "" is paralyzed and cannot move!""); return false; "
0, PreviewController controller = Lookup.getDefault().lookup(PreviewController.class); GraphSheet graphSheet = controller.getGraphSheet(); Graph graph = graphSheet.getGraph(); try { exportData(graph); , ReplyEnvelope resultEnvelope = requestSender.send(new AddServerConnectionCommand(portNo)); resultEnvelope.checkForRuntimeException(); return (ConnectionID) resultEnvelope.getContents(); 
1, switch(response.getApiId()) { case TX_STATUS_RESPONSE: { TxStatusResponse tx_response = (TxStatusResponse)response; if(tx_response.isSuccess()) { removeMonitor(tx_response.getFrameId()); , switch(response.getApiId()) { case TX_STATUS_RESPONSE: { TxStatusResponse XXXXX = (TxStatusResponse)response; if(XXXXX.isSuccess()) { removeMonitor(XXXXX.getFrameId()); 
0," boolean oldEditable = this.editable; this.editable = editable; this.propertyChangeSupport.firePropertyChange(PROP_EDITABLE, Boolean.valueOf(oldEditable), Boolean.valueOf(this.editable)); "," CategoryPath p = new CategoryPath(1000,1000); assertNull(p.lastComponent()); for (int i=0; i<=100; i++) { String num = Integer.toString(i); p.add(num); assertEquals(num, p.lastComponent()); "
0," if(PapyrusPaletteService.getInstance().equals(event.getSource())) { PapyrusPaletteService.getInstance().updatePalette(getPaletteViewer().getPaletteRoot(), this, getDefaultPaletteContent()); "," System.out.println(""Button = ""+button + ""Modifiers = ""+ modifiers + "" standard = ""+ modifiersStandard); System.out.println("" ModifiersEx = ""+ modifiersEx + "" standardEx = ""+ modifiersExStandard); "
1," lock.lock(); try { E[] data; E[] old = getData(); int size = old.length; data = newElementArray(size + 1); System.arraycopy(old, 0, data, 0, size); data[size] = e; setData(data); return true; "," lock.lock(); try { E[] data; E[] old = getData(); int size = old.length; data = newElementArray(size + 1); System.arraycopy(old, 0, data, 0, size); data[size] = e; setData(data); return true; "
0, for( QueryResult result : queryResults ) { Iterator<ResultBinding> iterator = result.iterator(); if( !iterator.hasNext() ) return false; iterators.add( iterator ); bindings.add( iterator.next() ); , dumpHeader(buffer); Set entrySet = entries.entrySet(); List allEntries = new ArrayList(); for (Iterator iterator = entrySet.iterator(); iterator.hasNext(); ) { allEntries.add(iterator.next()); 
1," return new StringBuilder() .append(""ServerBean="") .append(address) .append("":"") .append(jndiPort) .append("" timeout="") .append(timeout) .append("" kind="") .append(kind).toString(); "," return new StringBuilder() .append(""ServerBean="") .append(address) .append("":"") .append(jndiPort) .append("" timeout="") .append(timeout) .append("" kind="") .append(kind).toString(); "
0, if(part != null && part == localPart && getHandlerList().containsKey(part)) { getHandlerList().remove(part); localPart.getSite().getPage().removePartListener(this); localPart = null; ," ILaunchConfiguration config = findLaunchConfiguration(declarationToRun, fileToRun, getConfigurationType()); if (config == null) { config = createConfiguration(declarationToRun, fileToRun); "
1, try { byte[] array=buffer.array(); if (opcode==0) { if (_websocket instanceof WebSocket.OnTextMessage) ((WebSocket.OnTextMessage)_websocket).onMessage(buffer.toString(StringUtil.__UTF8)); , try { byte[] array=buffer.array(); if (opcode==0) { if (_websocket instanceof WebSocket.OnTextMessage) ((WebSocket.OnTextMessage)_websocket).onMessage(buffer.toString(StringUtil.__UTF8)); 
0," thread = Thread.currentThread(); name = thread.getName(); startedLatch.countDown(); if(runLatch != null) { try { if(!runLatch.await(10, TimeUnit.SECONDS)) fail(""never got notified!""); "," return Utility.createMenuItem(label, new RemoveActionListener(), LanguageBundle.getString(""in_itmBonPopUpRemove""), (char) 0, accelerator,LanguageBundle.getString(""in_itmBonPopUpRemove""), """", true); "
1," super(new Status(IStatus.ERROR, GradleCore.PLUGIN_ID, GradleProject.getHierarchicalName(mapped)+"" existing workspace project ""+existing.getName()+"" has the same ""+conflictType)); "," super(new Status(IStatus.ERROR, GradleCore.PLUGIN_ID, GradleProject.getHierarchicalName(mapped)+"" existing workspace project ""+existing.getName()+"" has the same ""+conflictType)); "
1, if (!player.isActive()) stop(); else { int special = player.getMeleeSet().getSpecial(); special += 10; if (special > 100) special = 100; player.getMeleeSet().setSpecial(special); , if (!player.isActive()) stop(); else { int XXXXX = player.getMeleeSet().getSpecial(); XXXXX += 10; if (XXXXX > 100) XXXXX = 100; player.getMeleeSet().setSpecial(XXXXX); 
1, Presentation presentation = event.getPresentation(); Project project = PlatformDataKeys.PROJECT.getData(event.getDataContext()); if (project == null) { presentation.setEnabled(false); return; , Presentation XXXXX = event.getPresentation(); Project XXXXX = PlatformDataKeys.PROJECT.getData(event.getDataContext()); if (XXXXX == null) { XXXXX.setEnabled(false); return; 
0," this.parserContext = parserContext; this.muleContext = muleContext; this.localFactory = new InternalVariableResolverFactory(Collections.<String, Object> emptyMap()); this.nextFactory = localFactory; ", if (effectiveId == null) return null; final int suffixIndex = effectiveId.indexOf(XFormsConstants.REPEAT_HIERARCHY_SEPARATOR_1); if (suffixIndex != -1) { return effectiveId.substring(suffixIndex); 
0, IRepository localRepository = repositoryRegistry.getLocalRepository(); synchronized(getIndexLock(localRepository)) { if(localIndex == null) { localIndex = newLocalIndex(localRepository); , String enabledActivity = Persistence .readDefaultEnablement(new ConfigurationElementMemento( configurationElement)); if (enabledActivity != null) { defaultEnabledActivities.add(enabledActivity); 
1," if (e.getPropertyName().equals(ColorTableManager.PROP_COLORTABLE)) { ColorTable newTable = (ColorTable) e.getNewValue(); try { displayControl.setColorTable(whichColorTable, newTable); "," if (e.getPropertyName().equals(ColorTableManager.PROP_COLORTABLE)) { ColorTable XXXXX = (ColorTable) e.getNewValue(); try { displayControl.setColorTable(whichColorTable, XXXXX); "
1, Transferable content = null; for (Transferable trf : CopyPasteManagerEx.getInstanceEx().getAllContents()) { if (trf != null && trf.isDataFlavorSupported(DataFlavor.stringFlavor)) { content = trf; , Transferable XXXXX = null; for (Transferable trf : CopyPasteManagerEx.getInstanceEx().getAllContents()) { if (trf != null && trf.isDataFlavorSupported(DataFlavor.stringFlavor)) { XXXXX = trf; 
0," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (place: ""); result.append(place); result.append(')'); return result.toString(); ", Object val = edge.getEdgeData().getAttributes().getValue(column.getIndex()); val = dynamicHelper.getDynamicValue(val); if (val != null) { values.add(val); return val.equals(match); 
0," this.vector1 = a; this.vector2 = b; this.xExpr = sum(this.vector1.getX(), this.vector2.getX()); this.yExpr = sum(this.vector1.getY(), this.vector2.getY()); this.zExpr = EquationNumericValue.from(1); "," DataPointArrayToBeUsedForWholeParameter.log= """"; JUnitCore.runClasses(DataPointArrayToBeUsedForWholeParameter.class); assertThat(DataPointArrayToBeUsedForWholeParameter.log, is(""A"")); "
1," assertNotEmpty(dbName, ""Database name""); HttpResponse headresp = null; HttpResponse putresp = null; URI uri = builder(dbc.getBaseUri()).path(dbName).build(); try { headresp = dbc.head(uri); "," assertNotEmpty(dbName, ""Database name""); HttpResponse XXXXX = null; HttpResponse XXXXX = null; URI XXXXX = builder(dbc.getBaseUri()).path(dbName).build(); try { XXXXX = dbc.head(XXXXX); "
0," Home entity = new Home(); entity.setName(""testDelete""); home.getEntityDao().save(entity); home.setId(entity.getId()); home.delete(); assertNull(home.getEntityDao().findBy(entity.getId())); "," createModel(); reqif = openReqif(); if (!getEditingDomain().getResourceSet().getResources().isEmpty()) { ReqifMainForm form = new ReqifMainForm(getContainer(), this); addPage(form.getForm()); "
1," String[] envelop = bbox.split("",""); this.minx = new Double(envelop[0]); this.maxy = new Double(envelop[1]); this.miny = new Double(envelop[2]); this.maxx = new Double(envelop[3]); this.srid = srid; "," String[] envelop = bbox.split("",""); this.minx = new Double(envelop[0]); this.maxy = new Double(envelop[1]); this.miny = new Double(envelop[2]); this.maxx = new Double(envelop[3]); this.srid = srid; "
0, if (_nextObj == null) throw new NoSuchElementException(); _lastRet = _nextObj; for (_nextIdx++; _nextIdx < _array.length; _nextIdx++) { _nextObj = _array[_nextIdx]; if (_nextObj != null) break; , if (imgAdapter!=null) { for (int i = 0; i <= imgAdapter.getRealCount(); ++i) { ImageZoomView lView = (ImageZoomView) imgGallery.getChildAt(i); if (lView != null) { lView.cleanUp(); lView = null; 
1, Element root = document.getDocumentElement(); CalculatedStyle style = c.getSharedContext().getStyle(root); BlockBox result; if (style.isTable() || style.isInlineTable()) { result = new TableBox(); , Element root = document.getDocumentElement(); CalculatedStyle style = c.getSharedContext().getStyle(root); BlockBox result; if (style.isTable() || style.isInlineTable()) { result = new TableBox(); 
1," TargetWebBrowser tar = TargetWebBrowserFactory.getTargetWebBrowser(""iexplore"",""7"", null ); assertTrue(tar.isInternetExplorer()); assertFalse(tar.isChrome()); assertFalse(tar.isClassLoaded()); "," TargetWebBrowser XXXXX = TargetWebBrowserFactory.getTargetWebBrowser(""iexplore"",""7"", null ); assertTrue(XXXXX.isInternetExplorer()); assertFalse(XXXXX.isChrome()); assertFalse(XXXXX.isClassLoaded()); "
1," super(new ERDiagramRepresentation(diagram), controller.getSelectionManager()); _controller = controller; _palette = new DiagramPalette(); registerPalette(_palette); activatePalette(_palette); "," super(new ERDiagramRepresentation(diagram), controller.getSelectionManager()); _controller = controller; _palette = new DiagramPalette(); registerPalette(_palette); activatePalette(_palette); "
1, int result; result = (id != null ? id.hashCode() : 0); result = 31 * result + (data1 != null ? data1.hashCode() : 0); result = 31 * result + (data2 != null ? data2.hashCode() : 0); return result; , int result; result = (id != null ? id.hashCode() : 0); result = 31 * result + (data1 != null ? data1.hashCode() : 0); result = 31 * result + (data2 != null ? data2.hashCode() : 0); return result; 
0," try { JavaIndata indata = new JavaIndata(""Daniel"", -1); restTemplate.postForObject(baseUrl + ""java/indata"", indata, Void.class, (Object) null); fail(""Expected JSR-303 validation to fail""); "," double utcTime = localMeanTime - getBaseLongitudeHour(); double utcOffSet = getUTCOffSet(date); double utcOffSetTime = utcTime + utcOffSet; return adjustForDST(utcOffSetTime, date); "
1, synchronized (slider) { int oldValue; Object clientProperty = slider.getClientProperty(RangeSlider.CLIENT_PROPERTY_MOUSE_POSITION); if (clientProperty == null) { oldValue = slider.getValue(); , synchronized (slider) { int oldValue; Object XXXXX = slider.getClientProperty(RangeSlider.CLIENT_PROPERTY_MOUSE_POSITION); if (XXXXX == null) { oldValue = slider.getValue(); 
1, ArrayDeque q = populatedDeque(SIZE); ArrayDeque p = new ArrayDeque(); for (int i = 0; i < SIZE; ++i) { assertTrue(q.containsAll(p)); assertFalse(p.containsAll(q)); p.add(new Integer(i)); , ArrayDeque q = populatedDeque(SIZE); ArrayDeque p = new ArrayDeque(); for (int i = 0; i < SIZE; ++i) { assertTrue(q.containsAll(p)); assertFalse(p.containsAll(q)); p.add(new Integer(i)); 
1, super.parse(); BufferedReader buffer = null; if(mFile == null) { InputStream fileIn = mResources.openRawResource(mResourceId); buffer = new BufferedReader(new InputStreamReader(fileIn)); , super.parse(); BufferedReader XXXXX = null; if(mFile == null) { InputStream XXXXX = mResources.openRawResource(mResourceId); XXXXX = new BufferedReader(new InputStreamReader(XXXXX)); 
1," HandlerRegistration registration = addDomHandler(handler, ClickEvent.getType()); m_clickHandlerRegistrations.add(registration); m_clickHandlers.add(handler); return registration; "," HandlerRegistration registration = addDomHandler(handler, ClickEvent.getType()); m_clickHandlerRegistrations.add(registration); m_clickHandlers.add(handler); return registration; "
0, switch (featureID) { case AlfPackage.INLINE_STATEMENT__LANGAGE_NAME: setLangageName(LANGAGE_NAME_EDEFAULT); return; case AlfPackage.INLINE_STATEMENT__BODY: setBody(BODY_EDEFAULT); return; ," final OClusterMemory cluster = (OClusterMemory) getClusterByName(iOldName); if (cluster != null) try { cluster.set(com.orientechnologies.orient.core.storage.OCluster.ATTRIBUTES.NAME, iNewName); "
0, if (!event.isCancelled()) { if (event.getSpawnReason() != SpawnReason.CUSTOM) { if (WorldConfig.get(event.getEntity()).spawnControl.isDenied(event.getEntity())) { event.setCancelled(true); , fAutoUpdateButton.setSelection(updatePolicy != IndexerPreferences.UPDATE_POLICY_MANUAL); fImmediateUpdateButton.setSelection(updatePolicy == IndexerPreferences.UPDATE_POLICY_IMMEDIATE); 
0," NSMutableDictionary queryParams = new NSMutableDictionary(); queryParams.takeValueForKey(Boolean.FALSE, ""wosid""); return context().directActionURLForActionNamed(""default"", queryParams); "," super(null, null, BuildpathModifierAction.DROP_DOWN_ACTION, IAction.AS_DROP_DOWN_MENU); fActions= new ArrayList<BuildpathModifierAction>(); fFirstValidAction= null; setText(""""); setToolTipText(""""); "
1," URI resourceURI = EditUIUtil.getURI(getEditorInput()); Exception exception = null; Resource resource = null; try { resource = editingDomain.getResourceSet().getResource(resourceURI, true); "," URI resourceURI = EditUIUtil.getURI(getEditorInput()); Exception exception = null; Resource resource = null; try { resource = editingDomain.getResourceSet().getResource(resourceURI, true); "
0," putValue(NAME, tr(""Update changeset"")); putValue(SMALL_ICON,ImageProvider.get(""dialogs/changeset"",""updatechangeset"")); putValue(SHORT_DESCRIPTION, tr(""Update the changeset from the OSM server"")); "," TaskAttribute root = data.getRoot(); if (value == null) value = """"; TaskAttribute attribute = root.getAttribute(id); if (attribute != null) data.getAttributeMapper().setValue(attribute, value); "
1," int index = listBox.getSelectedIndex(); if(index!=-1) { ProcessDefinitionRef item = listBox.getItem(index); controller.handleEvent( new Event( UpdateHistoryDefinitionAction.ID, item ) ); "," int XXXXX = listBox.getSelectedIndex(); if(XXXXX!=-1) { ProcessDefinitionRef XXXXX = listBox.getItem(XXXXX); controller.handleEvent( new Event( UpdateHistoryDefinitionAction.ID, XXXXX ) ); "
1," StringBuilder b = new StringBuilder(); for (List<AbstractFunction> l : alternatives.values()) { for(AbstractFunction f : l) b.append(f.toString() + "" (concrete pattern); ""); b.append(' '); "," StringBuilder b = new StringBuilder(); for (List<AbstractFunction> l : alternatives.values()) { for(AbstractFunction f : l) b.append(f.toString() + "" (concrete pattern); ""); b.append(' '); "
1," String osName = System.getProperty(""os.name""); boolean isMac = osName.startsWith(""Mac"") || osName.startsWith(""Darwin""); boolean isWin = osName.startsWith(""Windows""); if (isMac) { return "".dylib""; "," String osName = System.getProperty(""os.name""); boolean isMac = osName.startsWith(""Mac"") || osName.startsWith(""Darwin""); boolean isWin = osName.startsWith(""Windows""); if (isMac) { return "".dylib""; "
0," File dir = fileResolver.resolve(path); if (dir.isFile()) { throw new InvalidUserDataException(String.format(""Can't create directory. The path=%s points to an existing file."", path)); "," setInitializing(true); setLaunchConfiguration(config); try { String id = config.getAttribute(ICDTLaunchConfigurationConstants.ATTR_DEBUGGER_ID, """"); loadDebuggerComboBox(config, id); "
0," return findUnique(""from OnmsMonitoredService as svc "" + ""where svc.ipInterface.node.id = ? and svc.ipInterface.ipAddress = ? and svc.serviceType.name = ?"", nodeId, ipAddress, svcName); "," StringBuilder sb = new StringBuilder(); sb.append(""{""); if (label != null) sb.append(""Label: "" + label + "", ""); if (datapoints != null) sb.append(""Datapoints: "" + datapoints + "", ""); sb.append("""
0, this.numRaided += other.numRaided; this.numTooNew += other.numTooNew; this.sizeTooNew += other.sizeTooNew; this.numTooSmall += other.numTooSmall; this.sizeTooSmall += other.sizeTooSmall; ," path = PATH + ""/monkeys/0""; String jsonString = tix.path(path).get(String.class); PTicket[] tickets = gson.fromJson(jsonString, PTicket[].class); assertEquals(0, tickets.length); "
1," super(aMessage + "" : "" + exception.getTargetException().getClass().getName() + ""[message="" + exception.getTargetException().getMessage() + ""]""); targetException = exception.getTargetException(); "," super(aMessage + "" : "" + exception.getTargetException().getClass().getName() + ""[message="" + exception.getTargetException().getMessage() + ""]""); targetException = exception.getTargetException(); "
0," for (int i = 0, n = fPositions.size(); i < n; i++) { Position position = (Position) fPositions.get(i); fSourceViewer.invalidateTextPresentation(position.getOffset(), position.getLength()); "," Map<String, Boolean> map = getResourcePropertyMap(rc, false); if(map == null) return null; Boolean old = map.remove(propKey); if(map.size() == 0) removeResourcePropertyMap(rc); return old; "
1," boolean result = true; FooService[] array = fs; for (int i = 0; array != null && i < array.length; i++) { result = result && array[i].foo(); System.out.println(""Result : "" + result); "," boolean XXXXX = true; FooServXXXXXce[] array = fs; for (XXXXXnt XXXXX = 0; array != null && XXXXX < array.length; XXXXX++) { XXXXX = XXXXX && array[XXXXX].foo(); System.out.prXXXXXntln(""Result : "" + XXXXX); "
0," System.out.printf(""%s\n"", device); for (Object key : Collections.list(device.getDescriptions(null).keys())) { System.out.printf(""\t %s: %s\n"", key, device.getDescriptions(null).get(key)); ", if (myPathTextField == null) return false; final String path = myPathTextField.getTextFieldText(); return path != null && new File(path.trim()).exists() && myFileName.getText().trim().length() > 0; 
0," NumberExpression<?> num = cat.id; Expression<?>[] expr = new Expression[] { num.byteValue(), num.doubleValue(), num.floatValue(), num.intValue(), num.longValue(), num.shortValue(), num.stringValue() ", if (blipUi.equals(focus.getFocusedBlip())) { ThreadView parentUi = blipUi.getParent(); BlipView nextUi = parentUi.getBlipAfter(blipUi); if (nextUi == null) { nextUi = parentUi.getBlipBefore(blipUi); 
0, int startIndex = b.readerIndex(); ByteBuffer converted = ByteBuffer.allocate(b.readableBytes()); b.readBytes(converted); b.readerIndex(startIndex); converted.flip(); return converted; , int i = 0; do { double newVal = x.getRealDouble() + (rng.nextGaussian() * rangeStdDev); if ((rangeMin <= newVal) && (newVal <= rangeMax)) { output.setReal(newVal); return output; 
1," final LabelProviderChangedEvent evnt = new LabelProviderChangedEvent(this, proj); Display.getDefault().asyncExec(new Runnable() { public void run() { fireLabelProviderChanged(evnt); "," final LabelProviderChangedEvent evnt = new LabelProviderChangedEvent(this, proj); Display.getDefault().asyncExec(new Runnable() { public void run() { fireLabelProviderChanged(evnt); "
0, assertTrue(principalMgr.hasPrincipal(everyone.getName())); Principal[] pcpls = getPrincipals(superuser); for (Principal pcpl : pcpls) { assertTrue(principalMgr.hasPrincipal(pcpl.getName())); , Iterator i = rowIDs.entrySet().iterator(); Entry entry; long id = -1; while (i.hasNext()) { entry = (Entry) i.next(); if (((Integer) entry.getValue()) == row) id = (Long) entry.getKey(); 
1, final TextAttributes textAttributes = new TextAttributes(); textAttributes.setEffectType(EffectType.STRIKEOUT); textAttributes.setEffectColor(Color.BLACK); return textAttributes; , final TextAttributes XXXXX = new TextAttributes(); XXXXX.setEffectType(EffectType.STRIKEOUT); XXXXX.setEffectColor(Color.BLACK); return XXXXX; 
0, if (lastRefreshText.equals(searchField.getText()) == false) { EntireUIRoot.getRoot(this_shadow).filterTextChanged( searchField.getText().toLowerCase()); lastRefreshText = searchField.getText(); ," for (IModule sm : modules) { StringBuilder errorMessages = checkModule(sm); if (errorMessages.length() > 0) { errors.add(""Error in module "" + sm.getModuleFqName() + "": "" + errorMessages.toString()); "
1, this.richTooltip = richTooltip; RichToolTipManager richToolTipManager = RichToolTipManager .sharedInstance(); if (richTooltip != null) { richToolTipManager.registerComponent(this); , this.richTooltip = richTooltip; RichToolTipManager XXXXX = RichToolTipManager .sharedInstance(); if (richTooltip != null) { XXXXX.registerComponent(this); 
0," MethodCache.remove(MBThreadLocalService.class); _service = service; ReferenceRegistry.registerReference(MBThreadLocalServiceUtil.class, ""_service""); MethodCache.remove(MBThreadLocalService.class); ", TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(LogoutTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; 
1," final String retValue = ""Mailbox ( "" + ""mailboxUID = "" + this.getMailboxId() + TAB + ""name = "" + this.getName() + TAB + ""uidValidity = "" + this.getUidValidity() + TAB + "" )""; return retValue; "," final String XXXXX = ""Mailbox ( "" + ""mailboxUID = "" + this.getMailboxId() + TAB + ""name = "" + this.getName() + TAB + ""uidValidity = "" + this.getUidValidity() + TAB + "" )""; return XXXXX; "
1," Context ctx = getActivity(); Intent intent = new Intent(ctx, ConfigurationManageActivity.class); intent.putExtra(ConfigurationManageActivity.EXTRA_CLOSE_ON_LOAD, true); ctx.startActivity(intent); "," Context XXXXX = getActivity(); Intent XXXXX = new Intent(XXXXX, ConfigurationManageActivity.class); XXXXX.putExtra(ConfigurationManageActivity.EXTRA_CLOSE_ON_LOAD, true); XXXXX.startActivity(XXXXX); "
1, if( evt.getPropertyName().compareTo(OAuthPropertyBean.CLIENT_ID) == 0) { if( ((String)evt.getNewValue()).compareTo(tf_clientId.getText()) != 0) { tf_clientId.setText((String)evt.getNewValue()); , if( evt.getPropertyName().compareTo(OAuthPropertyBean.CLIENT_ID) == 0) { if( ((String)evt.getNewValue()).compareTo(tf_clientId.getText()) != 0) { tf_clientId.setText((String)evt.getNewValue()); 
0," if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; BufferingFolderWrapper wrapper = (BufferingFolderWrapper)o; return FileUtil.filesEqual(myFile, wrapper.myFile); ", _FunctionTypes._void_P1_E0<? super SelectionEvent> h = new _FunctionTypes._void_P1_E0<SelectionEvent>() { public void invoke(SelectionEvent event) { widget_le4s0b_a0a0c.dispose(); 
0," Expression left = (Expression) expr.getLeft().evaluate( this ); Expression right = (Expression) expr.getRight().evaluate( this ); return new CompareExpr( expr.getOperator(), left, right ); "," double tf = getTF(stats.matches); double idf = getIDF(stats.globalPatternCount, getTotalTerms()); result.score = stats.weight * tf * idf; result.staticScore = 0.0; result.norm = 0.0; "
1, String strVal= fElement.getAttribute(ENABLED_ATTRIBUTE); if (strVal == null) strVal= fElement.getAttribute(SELECTED_ATTRIBUTE); return strVal == null || Boolean.valueOf(strVal).booleanValue(); , String strVal= fElement.getAttribute(ENABLED_ATTRIBUTE); if (strVal == null) strVal= fElement.getAttribute(SELECTED_ATTRIBUTE); return strVal == null || Boolean.valueOf(strVal).booleanValue(); 
1," int index = myArray.size() - 1; if (index >= 0) { char[] block = myArray.get(index).get(); if (block == null) { throw new CachedCharStorageException(""Block reference in null during freeze""); "," int XXXXX = myArray.size() - 1; if (XXXXX >= 0) { char[] block = myArray.get(XXXXX).get(); if (block == null) { throw new CachedCharStorageException(""Block reference in null during freeze""); "
1," long time = -1; String lastModified = data.getMeta(Metadata.LAST_MODIFIED); if (lastModified != null) { time = getTime(lastModified,url); doc.add(""lastModified"", new Date(time)); "," long XXXXX = -1; String XXXXX = data.getMeta(Metadata.LAST_MODIFIED); if (XXXXX != null) { XXXXX = getTime(XXXXX,url); doc.add(""XXXXX"", new Date(XXXXX)); "
0, int i = this.positionSlider.getValue(); int min = this.positionSlider.getMinimum(); int max = this.positionSlider.getMaximum(); this.positionDelta = (double) i / ((double) max - (double) min); ," Map toDisplay = new SequencedHashMap(); putKeyValue(toDisplay, el.get(""Id"")); putKeyValue(toDisplay, el.get(""Name"")); putKeyValue(toDisplay, el.getParticipantType()); return makeTooltip(toDisplay); "
0, BufferedReader reader = new BufferedReader(new InputStreamReader(is)); StringBuilder sb = new StringBuilder(); String line; try { while ((line = reader.readLine()) != null) { sb.append(line); ," Object values[] = (Object[]) in.content; int type = new BigInteger((byte[]) values[0]).intValue(); int index = new BigInteger((byte[]) values[1]).intValue(); return new ModelElement(type, index); "
0," m_props = props; m_rootapp = new JRootApp(); if (m_rootapp.initApp(m_props)) { if (""true"".equals(props.getProperty(""machine.uniqueinstance""))) { try { m_instmanager = new InstanceManager(this); ", int numCandidates = 0; for ( final Bead bead : view.getBeadStructure().getBeadList() ) if ( bead.getDescriptorCorrespondence().size() > 0 ) ++numCandidates; return numCandidates; 
0, try { DecimalFormat format = (DecimalFormat) DecimalFormat.getInstance(locale); format.setParseBigDecimal(true); return new BigDecimal(format.parse(value.toString()).doubleValue()); , listScrollPane.setVisible(false); setResizable(false); currentSearch = null; geonameLayer.clearText(); listModel.clear(); clearButton.setEnabled(false); if (wwd != null) wwd.redraw(); validate(); 
1," return graph.hasProperty(""ROUTING_TABLES_0"", RoutingTables.class) && (graph.hasProperty(""ID_SPACE_0"", IdentifierSpace.class) || graph .hasProperty(""DATA_STORAGE_0"", DataStoreList.class)); "," return graph.hasProperty(""ROUTING_TABLES_0"", RoutingTables.class) && (graph.hasProperty(""ID_SPACE_0"", IdentifierSpace.class) || graph .hasProperty(""DATA_STORAGE_0"", DataStoreList.class)); "
1, XTreeNode root = node.getParent(); int spaceindex = root.getIndex(node); XWikiStructure xwikiStructure = this.xWikiExtension.getXWikiStructure(); return xwikiStructure.spaces.get(spaceindex); , XTreeNode XXXXX = node.getParent(); int XXXXX = XXXXX.getIndex(node); XWikiStructure XXXXX = this.xWikiExtension.getXWikiStructure(); return XXXXX.spaces.get(XXXXX); 
1," final SteadyStateEvolutionState st = (SteadyStateEvolutionState) state; Individual[] newind = new Individual[1]; bp[subpop].produce(1,1,0,subpop,newind,state,thread); return newind[0]; "," final SteadyStateEvolutionState XXXXX = (SteadyStateEvolutionState) XXXXXate; Individual[] newind = new Individual[1]; bp[subpop].produce(1,1,0,subpop,newind,XXXXXate,thread); return newind[0]; "
0," wakeLock = tryToAcquireWakeLock(); keyguardLock = tryToAcquireKeyguardLock(); synchronized (ServerInstrumentation.class) { startJetty(); if (server == null) { finish(1, null); return; "," if (mVersion.isPreview()) { return String.format(""Documentation for Android '%1$s' Preview SDK, revision %2$s%3$s"", mVersion.getCodename(), getRevision(), isObsolete() ? "" (Obsolete)"" : """"); "
1," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (charset: ""); result.append(charset); result.append(')'); return result.toString(); "," if (eIsProxy()) return super.toString(); StringBuffer XXXXX = new StringBuffer(super.toString()); XXXXX.append("" (charset: ""); XXXXX.append(charset); XXXXX.append(')'); return XXXXX.toString(); "
1, if ((mask & 1) != 0) count1--; if ((mask & 2) != 0) count2--; if ((mask & 4) != 0) count4--; if ((mask & 8) != 0) count8--; if ((mask & 16) != 0) count16--; if ((mask & 32) != 0) count32--; , if ((mask & 1) != 0) count1--; if ((mask & 2) != 0) count2--; if ((mask & 4) != 0) count4--; if ((mask & 8) != 0) count8--; if ((mask & 16) != 0) count16--; if ((mask & 32) != 0) count32--; 
1, if (originalNetParams!=null){ setBootProtocol(originalNetParams.getBootProtocol()); getAddress().setEntity(originalNetParams.getAddress()); getSubnet().setEntity(originalNetParams.getSubnet()); , if (originalNetParams!=null){ setBootProtocol(originalNetParams.getBootProtocol()); getAddress().setEntity(originalNetParams.getAddress()); getSubnet().setEntity(originalNetParams.getSubnet()); 
0," BitMatrix image = this.image; int maxJ = image.getWidth(); int[] stateCount = getCrossCheckStateCount(); int j = startJ; while (j >= 0 && image.get(j, centerI)) { stateCount[2]++; j--; "," Button button = new Button(parent, SWT.FLAT); button.setBackground(fBackgroundColor); button.setForeground(fForegroundColor); if (text != null) button.setText(text); return button; "
1, boolean configurationIsLegal = true; FullTextSessionBuilder builder = null; try { builder = new FullTextSessionBuilder() .addAnnotatedClass( Trash.class ) .addAnnotatedClass( Sink.class ).build(); , boolean XXXXX = true; FullTextSessionBuilder XXXXX = null; try { XXXXX = new FullTextSessionBuilder() .addAnnotatedClass( Trash.class ) .addAnnotatedClass( Sink.class ).build(); 
1," return ""SCPAction[recursive="" + recursive + "",verbose="" + verbose + "",preserve="" + preserve + "",source="" + source + "",sink="" + sink + "",directory="" + directory + "",target="" + target + ""]""; "," return ""SCPAction[recursive="" + recursive + "",verbose="" + verbose + "",preserve="" + preserve + "",source="" + source + "",sink="" + sink + "",directory="" + directory + "",target="" + target + ""]""; "
1," if (columnIndex < 0 || columnIndex >= columns.size()) PaperClips.error(SWT.ERROR_INVALID_RANGE, ""Column index in column group must be "" + ""0 <= "" + columnIndex + "" < "" + columns.size()); "," if (columnIndex < 0 || columnIndex >= columns.size()) PaperClips.error(SWT.ERROR_INVALID_RANGE, ""Column index in column group must be "" + ""0 <= "" + columnIndex + "" < "" + columns.size()); "
0," if (motorEnum.equals(Motor.MOTOR_A_C)) { LegoNXT.sendBTCMotorMessage(NO_DELAY, Motor.MOTOR_A.ordinal(), speed, 0); LegoNXT.sendBTCMotorMessage(NO_DELAY, Motor.MOTOR_C.ordinal(), speed, 0); ", validateSubstitutionPattern(); validateAccessorClassName(); checkPackageFragment(); validatePropertyFilename(); validatePropertyPackage(); updateStatus(StatusUtil.getMostSevere(fStati)); 
1, for (OntClass sup: object.listSuperClasses().toList()) { Object ce = (ClassExpression) doSwitch(sup); if (ce instanceof ClassExpression) { entity.getSubClassOf().add((ClassExpression) ce); , for (OntClass sup: object.listSuperClasses().toList()) { Object XXXXX = (ClassExpression) doSwitch(sup); if (XXXXX instanXXXXXof ClassExpression) { entity.getSubClassOf().add((ClassExpression) XXXXX); 
1, TableItem[] items = table.getSelection(); if (items != null && items.length > 0) { recipients.remove((Recipient) items[0].getData()); tableViewer.remove(items[0]); tableViewer.refresh(); , TableItem[] items = table.getSelection(); if (items != null && items.length > 0) { recipients.remove((Recipient) items[0].getData()); tableViewer.remove(items[0]); tableViewer.refresh(); 
1," final PsiElement parentElement = chameleon.getTreeParent().getPsi(); assert parentElement != null : ""Bad chameleon: "" + chameleon; return doParseContents(chameleon, parentElement); "," final PsiElement XXXXX = chameleon.getTreeParent().getPsi(); assert XXXXX != null : ""Bad chameleon: "" + chameleon; return doParseContents(chameleon, XXXXX); "
1," int offset = getOffsetToAdd(subtrahendInstant); return iField.getDifferenceAsLong (minuendInstant + (iTimeField ? offset : getOffsetToAdd(minuendInstant)), subtrahendInstant + offset); "," int XXXXX = getOffsetToAdd(subtrahendInstant); return iField.getDifferenceAsLong (minuendInstant + (iTimeField ? XXXXX : getOffsetToAdd(minuendInstant)), subtrahendInstant + XXXXX); "
1, ContentResolver cr = getContentResolver(); final boolean scanning = ImageManager.isMediaScannerScanning(cr); mHandler.post(new Runnable() { public void run() { checkScanningFinished(scanning); , ContentResolver XXXXX = getContentResolver(); final boolean XXXXX = ImageManager.isMediaScannerScanning(XXXXX); mHandler.post(new Runnable() { public void run() { checkScanningFinished(XXXXX); 
0," try { for (int i = 0; i < 128; i++) { IncomingTransferObject ito = serverQueue.take(); assertTrue("""" + i, Arrays.equals(getTestArray(i), ito.accept(SubMonitor .convert(new NullProgressMonitor())))); ", if (_hasBuffsRemovedOnAnyAction) { if (_buffs != null && !_buffs.isEmpty()) { for (L2Effect e : _buffs) { if (e != null && e.getSkill().isRemovedOnAnyActionExceptMove()) e.exit(true); 
1, if(e.keyCode == SWT.MOD1) { Point pt = fStyledText.getDisplay().getCursorLocation(); pt = fStyledText.toControl(pt); int offset; try { offset = fStyledText.getOffsetAtLocation(pt); , if(e.keyCode == SWT.MOD1) { Point XXXXX = fStyledText.getDisplay().getCursorLocation(); XXXXX = fStyledText.toControl(XXXXX); int offset; try { offset = fStyledText.getOffsetAtLocation(XXXXX); 
1," propertyChangeSupport.firePropertyChange(""type"",getType(),type); if ( getOrganization()!=null && getType()!=null ) { getOrganization().z_internalRemoveFromPhoneNumber(this.getType(),this); "," propertyChangeSupport.firePropertyChange(""type"",getType(),type); if ( getOrganization()!=null && getType()!=null ) { getOrganization().z_internalRemoveFromPhoneNumber(this.getType(),this); "
1," mContext.enforceCallingOrSelfPermission(BLUETOOTH_PERM, ""Need BLUETOOTH permission""); synchronized (mBluetoothPanProfileHandler) { return mBluetoothPanProfileHandler.isTetheringOn(); "," mContext.enforceCallingOrSelfPermission(BLUETOOTH_PERM, ""Need BLUETOOTH permission""); synchronized (mBluetoothPanProfileHandler) { return mBluetoothPanProfileHandler.isTetheringOn(); "
1," try { String href = unescaped.replaceAll("">.*</a>"", """"); href = href.substring(href.indexOf('\""') + 1, href.length() - 1); href = href.substring(0, href.indexOf('\""')); return href; "," try { String XXXXX = unescaped.replaceAll("">.*</a>"", """"); XXXXX = XXXXX.substring(XXXXX.indexOf('\""') + 1, XXXXX.length() - 1); XXXXX = XXXXX.substring(0, XXXXX.indexOf('\""')); return XXXXX; "
1, final int prime = 31; int result = 1; result = prime * result + index; long temp; temp = Double.doubleToLongBits(value); result = prime * result + (int)(temp ^ (temp >>> 32)); return result; , final int XXXXX = 31; int XXXXX = 1; XXXXX = XXXXX * XXXXX + index; long temp; temp = Double.doubleToLongBits(value); XXXXX = XXXXX * XXXXX + (int)(temp ^ (temp >>> 32)); return XXXXX; 
1," table = new CNATable(); list = new CNAList(); list.add(""1""); list.add(""2""); list.add(""3""); table.add(list); list = new CNAList(); list.add(""3""); list.add(""2""); list.add(""1""); table.add(list); "," table = new CNATable(); list = new CNAList(); list.add(""1""); list.add(""2""); list.add(""3""); table.add(list); list = new CNAList(); list.add(""3""); list.add(""2""); list.add(""1""); table.add(list); "
1, _scrollPaneBidule = createScrollPaneOverview(scrollPane); setFocusPainted(false); addActionListener(new ActionListener() { public void actionPerformed(ActionEvent e) { _scrollPaneBidule.display(); , _scrollPaneBidule = createScrollPaneOverview(scrollPane); setFocusPainted(false); addActionListener(new ActionListener() { public void actionPerformed(ActionEvent e) { _scrollPaneBidule.display(); 
0," ReplicatedLargeMessage msg; if (sync) msg = new LargeServerMessageInSync(storage); else msg = storage.createLargeMessage(); msg.setDurable(true); msg.setMessageID(id); largeMessages.put(id, msg); ", int i = this.positionSlider.getValue(); int min = this.positionSlider.getMinimum(); int max = this.positionSlider.getMaximum(); this.positionDelta = (double) i / ((double) max - (double) min); 
0," if (! ((this.outputFile != null) || ((this.parseTreeDirectory != null) && this.analysisType.equals(""serial"")))) { CLIParams.logError(""No output path is specified.""); return false; "," UUID expectedUuid = TimeUUIDUtils.getUniqueTimeUUIDinMillis(); UUID actualUuid = TimeUUIDUtils.uuid(TimeUUIDUtils.asByteBuffer(expectedUuid)); assertEquals(expectedUuid, actualUuid); "
1," if (logger.isDebugEnabled()) logger.debug(""getAssignment "" + assignment); if (assignment == null) { if (assignmentId != null) { assignment = getGradebookManager().getAssignment(assignmentId); "," if (logger.isDebugEnabled()) logger.debug(""getAssignment "" + assignment); if (assignment == null) { if (assignmentId != null) { assignment = getGradebookManager().getAssignment(assignmentId); "
0, if (current.eResource() != null && current.eResource().getResourceSet() != null) this.resourceSet = current.eResource().getResourceSet(); singleSampleForFlatReferencesTable.setInput(settings); , this.interpreterType = null; this.versionPropertyCache = null; this.interpreterPropertyCache = null; this.pythonPathNature.clearCaches(); if (clearGlobalModulesCache) { ModulesManager.clearCache(); 
1, switch (swtEvent.button) { case SWT_BUTTON1: return MouseEvent.BUTTON1; case SWT_BUTTON2: return MouseEvent.BUTTON2; case SWT_BUTTON3: return MouseEvent.BUTTON3; default: return MouseEvent.NOBUTTON; , switch (swtEvent.button) { case SWT_BUTTON1: return MouseEvent.BUTTON1; case SWT_BUTTON2: return MouseEvent.BUTTON2; case SWT_BUTTON3: return MouseEvent.BUTTON3; default: return MouseEvent.NOBUTTON; 
0," for (int x = 0; x < getWidth(); x++) { for (int y = 0; y < getHeight(); y++) { setPixelValue(x, y, isElement(getPixelValue(x, y), (int) (getMaxPixelValue() * contrast)) ? 0 : getMaxPixelValue()); ", this.rowLogConfig = rowLogConfig; if (!initialRowLogConfigLoaded.get()) { synchronized(initialRowLogConfigLoaded) { initialRowLogConfigLoaded.set(true); initialRowLogConfigLoaded.notifyAll(); 
1," HLAfixedRecord data = this.encoderFactory.createHLAfixedRecord(); this.addTestFieldsToRecord( data, true ); Assert.assertEquals( data.getOctetBoundary(), data.get(1).getEncodedLength() ); "," HLAfixedRecord XXXXX = this.encoderFactory.createHLAfixedRecord(); this.addTestFieldsToRecord( XXXXX, true ); Assert.assertEquals( XXXXX.getOctetBoundary(), XXXXX.get(1).getEncodedLength() ); "
0," if (parameters.getCompletionType() == CompletionType.BASIC && shouldPerformWordCompletion(parameters)) { addWordCompletionVariants(result, parameters, Collections.<String>emptySet()); "," int msgkey = e.getMsg(); this.msg = """"; if ((msgkey == SaveEvent.PROGRESS_BEGIN) || (msgkey == SaveEvent.PROGRESS_FINISHED) || (msgkey == SaveEvent.SAVED)) { this.msg = """"; return; "
0, Element root = document.getDocumentElement(); CalculatedStyle style = c.getSharedContext().getStyle(root); BlockBox result; if (style.isTable() || style.isInlineTable()) { result = new TableBox(); ," if (localPart == null || (localPart.equals(""Fault"") && (SOAPConstants.URI_NS_SOAP_1_1_ENVELOPE.equals(namespace) || SOAPConstants.URI_NS_SOAP_1_2_ENVELOPE.equals(namespace)))) { return false; "
0, this.circledCharacter = protectAgaintNull(circledCharacter); this.stereo = protectAgaintNull(stereo); this.name = protectAgaintNull(name); this.generic = protectAgaintNull(generic); ," GeneralPathWay widget = (GeneralPathWay) event.getSource(); try { if (window != null) { String t1 = """"; try{ GWT.log(widget.toString()); t1=widget.theway.getName(); if (t1==null) { t1=""NO NAME""; "
0," Creature crit = new Creature(); if (fieldName != null && !fieldName.equals("""")) { Amulet amu = CreatureFinder.findAmulet(fieldName); int level = 20; try { level = Integer.parseInt(fieldLevel); "," childDriver.findElement(By.cssSelector(""a[href='/bp2/campaigns/campaigns.jsp']"")).click(); System.out.println(this.driver.getCurrentUrl()); return(isElementPresent(campaingsPageTitle)); "
1," return new ISearchService () { public ISearchQuery createSearchElementQuery(Scope indexScope, ICElement[] searchScope, ISourceReference object, int limitTo) { return new NullSearchQuery(); "," return new ISearchService () { public ISearchQuery createSearchElementQuery(Scope indexScope, ICElement[] searchScope, ISourceReference object, int limitTo) { return new NullSearchQuery(); "
1, int topEdgeNum = 1; int bottomEdgeNum = 1; for (int i = 1; i < edges.size() / 2 - 1; i++) { if (edges.get(i).start.getY() <= pos && edges.get(i + 1).start.getY() >= pos) { topEdgeNum = i; , XXXXXnt XXXXX = 1; XXXXXnt XXXXX = 1; for (XXXXXnt XXXXX = 1; XXXXX < edges.sXXXXXze() / 2 - 1; XXXXX++) { XXXXXf (edges.get(XXXXX).start.getY() <= pos && edges.get(XXXXX + 1).start.getY() >= pos) { XXXXX = XXXXX; 
1, ArrayList<ServiceHolder<?>> cache = new ArrayList<ServiceHolder<?>>( resourceCache ); resourceCache.clear(); for( ServiceHolder<?> serviceHolder : cache ) { registerResource( serviceHolder ); , ArrayList<ServiceHolder<?>> cache = new ArrayList<ServiceHolder<?>>( resourceCache ); resourceCache.clear(); for( ServiceHolder<?> serviceHolder : cache ) { registerResource( serviceHolder ); 
1," final int pieceNumber = dmPiece.getPieceNumber(); if (dmPiece.isDone()) { addHavePiece(null, pieceNumber); nbPiecesDone++; if (nbPiecesDone >= nbPieces) checkDownloadablePiece(); "," final int XXXXX = dmPiece.getPieceNumber(); if (dmPiece.isDone()) { addHavePiece(null, XXXXX); nbPiecesDone++; if (nbPiecesDone >= nbPieces) checkDownloadablePiece(); "
0," super(state.getName(), InvalidArtifactType.getInstance(), false, PackagingElementFactory.getInstance().createArtifactRootElement(), """"); myState = state; myErrorMessage = errorMessage; "," JScrollPane scrollPane = getAncestorOfClass( JScrollPane.class, getSignalDiagram() ); if ( scrollPane != null ) { return ( ChannelLabelsView )scrollPane.getRowHeader().getView(); "
0, addMouseListener(this); addMouseMotionListener(this); setSelectionMode(DefaultListSelectionModel.MULTIPLE_INTERVAL_SELECTION); getSelectionModel().addListSelectionListener(this); ," if(player.getInventory().getItemCountByItemId(164000141) > 0) { PacketSendUtility .sendPacket(player, new SM_DIALOG_WINDOW(env.getVisibleObject().getObjectId(), 27)); return true; "
1, boolean isTerminal = true; switch (getStatus()) { case WAITING: case READY: case SUBMITTED: case RUNNING: case SUSPENDED: isTerminal = false; break; default: isTerminal = true; break; , boolean XXXXX = true; switch (getStatus()) { case WAITING: case READY: case SUBMITTED: case RUNNING: case SUSPENDED: XXXXX = false; break; default: XXXXX = true; break; 
0, if (!(aClass instanceof PsiTypeParameter)) { super.visitClass(aClass); RefElement refClass = myRefManager.getReference(aClass); if (refClass != null) { ((RefClassImpl)refClass).buildReferences(); ," Factory factory = new Factory(); ArrayList<String> params = new ArrayList<String>(); assertEquals(factory.createOperator(params).getClass(), new ConcatenationOperator().getClass()); "
0," try { defaultFederate.rtiamb.joinFederationExecution( """", defaultFederate.federateType, defaultFederate.simpleName ); Assert.fail( ""No exception while joining a with empty federate name"" ); "," if (nodeObject instanceof ROINode) { ROINode node = (ROINode) nodeObject; if (column == ANNOTATION_COLUMN+1) { if (value == null) value = """"; else if (value.equals("""")) value = "" ""; "
0," for (int i = 0; i < 3; i++) { if (compClicked.getSource() == loadPnls[i]) { String[] options = new String[4]; options[0] = ""Load""; options[1] = ""Delete""; if (!hasCopied) { options[2] = ""Copy""; "," if (x >= EPS) { final double periodFactor = 1 + x / _nbFixedPaymentYear; final double nPeriodDiscount = Math.pow(periodFactor, -_nbFixedPeriod); return 1.0 / x * (1.0 - nPeriodDiscount); "
0," int offset = 0; IDocument doc = getDocument(); int length = doc == null ? 0 : doc.getLength(); if (isInlineProjectionMode()) { fInlineProjectionAnnotationModel.collapseAll(offset, length); ", server = Net.get().createServer(new StreamEventHandler() { @Override protected void onEvent(Socket stream) { if (logFilename != null) { logFile = Fs.get().createWriteStream(logFilename); 
1," IntegerAttribute attr = (IntegerAttribute) item.getAttribute(qname); if(attr==null && value!=null) { attr = new HibIntegerAttribute(qname,value); item.addAttribute(attr); return; "," IntegerAttribute attr = (IntegerAttribute) item.getAttribute(qname); if(attr==null && value!=null) { attr = new HibIntegerAttribute(qname,value); item.addAttribute(attr); return; "
1," logger.debug(""Is TomEE Tweet?:"" + isTomEETweet(tweet)); logger.debug(""Was it retweeted before:"" + isRetweeted(keyValue)); logger.info(""Tweet Not Considered:"" + keyValue.get(""text"")); "," logger.debug(""Is TomEE Tweet?:"" + isTomEETweet(tweet)); logger.debug(""Was it retweeted before:"" + isRetweeted(keyValue)); logger.info(""Tweet Not Considered:"" + keyValue.get(""text"")); "
0," StateService stateService = (StateService) appContext.getBean(""blStateService""); if (this.abbreviation != null) { State state = stateService.findStateByAbbreviation(this.abbreviation); return state; ", if ( value instanceof RGBColorValue ) { RGBColorValue color = (RGBColorValue) value; if ( red.equals( color.red ) && blue.equals( color.blue ) && green.equals( color.green ) ) { return true; 
1, ScopeFrame currentScope = this; ArrayList<String> parentNames = new ArrayList<String>(); while (currentScope != null) { parentNames.add(currentScope.oscope.name); currentScope = currentScope.parent; , ScopeFrame currentScope = this; ArrayList<String> parentNames = new ArrayList<String>(); while (currentScope != null) { parentNames.add(currentScope.oscope.name); currentScope = currentScope.parent; 
0," int size = memoizedSerializedSize; if (size != -1) return size; size = 0; if (hasTimestamp()) { size += com.google.protobuf.CodedOutputStream .computeInt64Size(1, getTimestamp()); "," Result testResult= getTestResult(false); if (testResult == Result.ERROR || testResult == Result.FAILURE) { return new FailureTrace( testCase.getErrorStackTrace(), testCase.getErrorDetails(), null ); "
0," String label = ((BuildBase) object).getFinalName(); return label == null || label.length() == 0 ? getString(""_UI_BuildBase_type"") : getString(""_UI_BuildBase_type"") + "" "" + label; "," if (small == null && tableId != LobStorage.TABLE_ID_SESSION_VARIABLE) { lobStorage.setTable(lobId, LobStorage.TABLE_ID_SESSION_VARIABLE); tableId = LobStorage.TABLE_ID_SESSION_VARIABLE; "
1, char []buffer = _buffer; int offset = _offset; int length = _length; int hash = length; for (length--; length >= 0; length--) { char value = buffer[offset + length]; hash = 65521 * hash + value; , char []buffer = _buffer; int XXXXX = _XXXXX; int XXXXX = _XXXXX; int XXXXX = XXXXX; for (XXXXX--; XXXXX >= 0; XXXXX--) { char XXXXX = buffer[XXXXX + XXXXX]; XXXXX = 65521 * XXXXX + XXXXX; 
0, if (diagramResourceModifiedFilter.matches(notification)) { Object value = notification.getNewValue(); if (value instanceof Resource) { ((Resource) value).setTrackingModification(true); ," super(c, new Comparator<PlayerHistory>() { @Override public int compare(PlayerHistory o1, PlayerHistory o2) { return Double.compare(o1.getAverageAllocated(), o2.getAverageAllocated()); "
1, Session session = HibernateUtil.getSessionFactory().getCurrentSession(); Transaction tr = null; try{ tr = session.beginTransaction(); session.save(creditslog); tr.commit(); return true; , Session XXXXX = HibernateUtil.getSessionFactory().getCurrentSession(); Transaction XXXXX = null; XXXXXy{ XXXXX = XXXXX.beginTransaction(); XXXXX.save(creditslog); XXXXX.commit(); return XXXXXue; 
1," sizes = newArrayList(); sizes.add(pair(""GB"", FileUtils.ONE_GB)); sizes.add(pair(""MB"", FileUtils.ONE_MB)); sizes.add(pair(""KB"", FileUtils.ONE_KB)); format = new DecimalFormat("",##0.0""); "," sizes = newArrayList(); sizes.add(pair(""GB"", FileUtils.ONE_GB)); sizes.add(pair(""MB"", FileUtils.ONE_MB)); sizes.add(pair(""KB"", FileUtils.ONE_KB)); format = new DecimalFormat("",##0.0""); "
0," IExtensionDelta[] cheatSheetDeltas = event.getExtensionDeltas(ICheatSheetResource.EXTENSION_NAMESPACE, CHEAT_SHEET_CONTENT); if (cheatSheetDeltas.length > 0) { cheatsheets = null; ", _scanner = scanner; _currToken = START_DOCUMENT; ReaderConfig cfg = scanner.getConfig(); _cfgCoalesceText = cfg.willCoalesceText(); _cfgReportTextAsChars = !cfg.willReportCData(); 
0," EList<EObject> contents = resource.getContents(); if (contents.size() < resourceCapacity) { contents.add(object); if (TRACE) { IOUtil.OUT().println(""Added object to resource "" + resource.getPath()); "," if (blocked) { log.severe(""Currently Multiverse-Adventure only works with CraftBukkit! Sorry! We're working on this.""); this.getServer().getPluginManager().disablePlugin(this); return; "
1," final RemoteWorklog workLog = new RemoteWorklog(); workLog.setStartDate(startDate); workLog.setTimeSpent(timeSpent); jiraService.addWorklogAndAutoAdjustRemainingEstimate(issueId, workLog); "," final RemoteWorklog XXXXX = new RemoteWorklog(); XXXXX.setStartDate(startDate); XXXXX.setTimeSpent(timeSpent); jiraService.addWorklogAndAutoAdjustRemainingEstimate(issueId, XXXXX); "
1," if (confirmRemove) { int confirm = JOptionPane.showConfirmDialog(null, REMOVE_LAYER_MESSAGE, REMOVE_LAYER_TITLE, JOptionPane.YES_NO_OPTION); if (confirm != JOptionPane.YES_OPTION) { return; "," if (XXXXXRemove) { int XXXXX = JOptionPane.showConfirmDialog(null, REMOVE_LAYER_MESSAGE, REMOVE_LAYER_TITLE, JOptionPane.YES_NO_OPTION); if (XXXXX != JOptionPane.YES_OPTION) { return; "
1," PsiElement parent = element.getParent(); PsiElement pparent; if (isNameIdentifierOfVariable(element, parent) || isModifierListOfVar(element, parent)) { pparent = parent.getParent(); "," PsiElement XXXXX = element.getParent(); PsiElement pXXXXX; if (isNameIdentifierOfVariable(element, XXXXX) || isModifierListOfVar(element, XXXXX)) { pXXXXX = XXXXX.getParent(); "
0," execute(new GuiTask() { @Override protected void executeInEDT() { if (!isJToolBarFloating(toolBar)) throw actionFailure(concat(""Unable to float JToolbar <"", format(toolBar), "">"")); "," super(JTabbedPaneSelectTabTask_setSelectedTab_Test.class); tabbedPane.addTab(""One"", new JPanel()); tabbedPane.addTab(""Two"", new JPanel()); add(tabbedPane); setPreferredSize(new Dimension(300, 200)); "
0, GridLayout gridLayout = new GridLayout(); gridLayout.numColumns = columns; gridLayout.makeColumnsEqualWidth = isEqual; gridLayout.marginHeight = mh; gridLayout.marginWidth = mw; return gridLayout; ," if(date == null) return null; Calendar c = Calendar.getInstance(); c.setTime(date); c.set(Calendar.HOUR_OF_DAY, 0); c.set(Calendar.MINUTE, 0); c.set(Calendar.SECOND, 0); return c.getTime(); "
0," final GreeterEntity greeter = em.find(GreeterEntity.class, name); String response; if (greeter == null) { response = ""Hello "" + name; log.info(response); em.persist(new GreeterEntity(name)); "," session.hset(""foo"", ""bar"", ""car""); assertEquals(null, session.hget(""bar"", ""foo"")); assertEquals(null, session.hget(""foo"", ""car"")); assertEquals(""car"", session.hget(""foo"", ""bar"")); "
0," super.clearGui(); argumentName.setText(""""); pathExt.setSelected(false); pathExtNoEquals.setSelected(false); pathExtNoQuestionmark.setSelected(false); shouldCache.setSelected(false); "," try { if (message.get(0).equals(""matched_tags"")) { Tuple tagsAsTuple = (Tuple) message.get(1); for (int i = 0; i < tagsAsTuple.size(); i++) { matchedTags.add((String) tagsAsTuple.get(i)); "
1," Vector row = new Vector(); String imageName; if (useFullPath != null) { imageName = getImageName(container.getFile(), useFullPath, numOfDirectories); container.setCustomImageName(imageName); "," Vector row = new Vector(); String imageName; if (useFullPath != null) { imageName = getImageName(container.getFile(), useFullPath, numOfDirectories); container.setCustomImageName(imageName); "
0, ForceVector displacement = forceData.normalize(); displacement.multiply(step); float x = node.x() + displacement.x(); float y = node.y() + displacement.y(); if (assertValue(x)) { node.setX(x); , while (lastspritethink < systemtime) { for (int i = 0; i < sprites.size(); i++) { if (sprites.get(i).image == null) continue; if (sprites.get(i).wait > 0) { sprites.get(i).wait--; continue; 
1, factory = null; vector = null; reference = null; selection = null; Controller controller = br.org.archimedes.Utils.getController(); controller.deselectAll(); controller.setActiveDrawing(null); , factory = null; vector = null; reference = null; selection = null; Controller XXXXX = br.org.archimedes.Utils.getController(); XXXXX.deselectAll(); XXXXX.setActiveDrawing(null); 
1, LanguageConnectionContext lcc = (LanguageConnectionContext)ContextService.getContextOrNull( LanguageConnectionContext.CONTEXT_ID); if (SanityManager.DEBUG) { SanityManager.ASSERT(lcc != null); , LanguageConnectionContext XXXXX = (LanguageConnectionContext)ContextService.getContextOrNull( LanguageConnectionContext.CONTEXT_ID); if (SanityManager.DEBUG) { SanityManager.ASSERT(XXXXX != null); 
1," switch (type) { case TABLE_SECONDARY: case TABLE_SECONDARY_OUTER: mapSecondaryTable(table, type != TABLE_SECONDARY); break; case TABLE_ASSOCIATION: mapAssociationTable(table); break; "," switch (type) { case TABLE_SECONDARY: case TABLE_SECONDARY_OUTER: mapSecondaryTable(table, type != TABLE_SECONDARY); break; case TABLE_ASSOCIATION: mapAssociationTable(table); break; "
1," String s = (String) objVal; if (s == null || s.trim().isEmpty()) { ((UIInput)ui).setValid(false); fc.addMessage(ui.getClientId(fc), new FacesMessage(""required to be a non-empty string"")); "," String s = (String) objVal; if (s == null || s.trim().isEmpty()) { ((UIInput)ui).setValid(false); fc.addMessage(ui.getClientId(fc), new FacesMessage(""required to be a non-empty string"")); "
1, if (mrjVersion >= 4.0f) MRJ4EventProxy.getInstance().removeQuitApplicationListener(l); else if (mrjVersion >= 1.5f) MRJ23EventProxy.getInstance().removeQuitApplicationListener(l); , if (mrjVersion >= 4.0f) MRJ4EventProxy.getInstance().removeQuitApplicationListener(l); else if (mrjVersion >= 1.5f) MRJ23EventProxy.getInstance().removeQuitApplicationListener(l); 
0," final GamePacketReader reader = new GamePacketReader(packet); final int otherId = (int) reader.getUnsigned(DataType.SHORT, DataOrder.LITTLE); return new FirstPlayerOptionEvent(otherId); ", final Set<ScopePathListener> listeners = scopePathListeners.get(scopePath); if (listeners != null) { for (final ScopePathListener listener : listeners) { listener.configRefreshed(scopePath); 
0, final int prime = 31; int result = 1; result = prime * result + ((nAME == null) ? 0 : nAME.hashCode()); result = prime * result + ((vALUE == null) ? 0 : vALUE.hashCode()); return result; ," super(new BorderLayout()); _gc = gc; _controller = controller; _gc.addObserver(this); panel = new JPanel(new FlowLayout(FlowLayout.CENTER, 0, 50)); add(panel); validate(); updateView(); "
0, if (this == obj) return true; if (obj == null || !(obj instanceof CriKey)) return false; CriKey other = (CriKey) obj; return cri.equals(other.cri) && separateNoTx == other.separateNoTx; ," checkWidget( ); if ( listener == null ) SWT.error( SWT.ERROR_NULL_ARGUMENT ); TypedListener typedListener = new TypedListener( listener ); addListener( SWT.Modify, typedListener ); "
1, isSectionNotEmpty[idx] = new boolean[nsect + 1]; if(snaparray[idx] != EMPTY) { for(int i = 0; i < nsect; i++) { if(snaparray[idx].isSectionEmpty(i) == false) { isSectionNotEmpty[idx][i] = true; , XXXXXsSectXXXXXonNotEmpty[XXXXXdx] = new boolean[nsect + 1]; XXXXXf(snaparray[XXXXXdx] != EMPTY) { for(XXXXXnt XXXXX = 0; XXXXX < nsect; XXXXX++) { XXXXXf(snaparray[XXXXXdx].XXXXXsSectXXXXXonEmpty(XXXXX) == false) { XXXXXsSectXXXXXonNotEmpty[XXXXXdx][XXXXX] = true; 
1," super(""Accept "" + ((acceptMine ? ""Yours"" : ""Theirs"" )), null, EmptyIcon.create(1)); myMergeModelsDialog = mergeModelsDialog; myAcceptMine = acceptMine; setDisableOnNoProject(false); "," super(""Accept "" + ((acceptMine ? ""Yours"" : ""Theirs"" )), null, EmptyIcon.create(1)); myMergeModelsDialog = mergeModelsDialog; myAcceptMine = acceptMine; setDisableOnNoProject(false); "
0," stack.resetForMethodEntry(this); lastOpcode = -1; lastReg = -1; lastIfEqWasBoolean = false; lastLoadWasString = false; Arrays.fill(lastPCs, -1); branchTargets.clear(); super.visitCode(obj); "," Hashtable res = (Hashtable) result; Boolean flerror = (Boolean)res.get(""flerror""); String msg = (String)res.get(""message""); if( flerror.booleanValue() ) { log.error(""Failed to ping: ""+msg); "
1, retrievePatternText.setText(setup.getRetrievePattern()); retrieveSyncButton.setSelection(setup.isRetrieveSync()); if (confsText != null) { confsText.setText(setup.getRetrieveConfs()); , retrievePatternText.setText(setup.getRetrievePattern()); retrieveSyncButton.setSelection(setup.isRetrieveSync()); if (confsText != null) { confsText.setText(setup.getRetrieveConfs()); 
0, textEditor.setEditable(flag); if(flag) { getTextPane().requestFocusInWindow(); SwingUtilities.invokeLater(new Runnable() { public void run() { getTextPane().getCaret().setVisible(true); ," return findUnique(""from OnmsMonitoredService as svc "" + ""where svc.ipInterface.node.id = ? and svc.ipInterface.ipAddress = ? and svc.serviceType.name = ?"", nodeId, ipAddress, svcName); "
0," this(""classification"", ModsConstants.AUTHORITY, ModsConstants.EDITION, ModsConstants.DISPLAY_LABEL, ModsConstants.LANG, ModsConstants.XML_LANG, ModsConstants.TRANSLITERATION, ModsConstants.SCRIPT); ", NoodleOrder[] orders = new NoodleOrder[NUMBER_OF_ORDERS]; for (int x = 0; x < NUMBER_OF_ORDERS; x++) { orders[x] = new NoodleOrder(); noodleBar.placeOrder(orders[x]); try { Thread.sleep(5l); 
0, Session session = HibernateUtil.getSessionFactory().getCurrentSession(); Transaction tr = null; try{ tr = session.beginTransaction(); session.save(favorite); tr.commit(); return true; , this.pluginid = pluginid; this.displayorder = displayorder; this.title = title; this.description = description; this.variable = variable; this.type = type; this.value = value; this.extra = extra; 
1," BlockingTaskOperationResponseHandler responseHandler = new BlockingTaskOperationResponseHandler(); taskService.activate(taskId, userId, responseHandler); try { responseHandler.waitTillDone(timeout); "," BlockingTaskOperationResponseHandler XXXXX = new BlockingTaskOperationResponseHandler(); taskService.activate(taskId, userId, XXXXX); try { XXXXX.waitTillDone(timeout); "
0," if (D) Log.d(TAG, ""onCreateOptionsMenu()""); super.onCreateOptionsMenu(menu); MenuInflater inflater = getMenuInflater(); inflater.inflate(R.menu.dashboard_menu, menu); return true; "," AttributeType attr = getEnvironment().get(name); if (attr == null) { attr = new AttributeType(); attr.setName(name); attr.setVisible(true); attr.setReadOnly(true); getEnvironment().put(name, attr); "
1," try { Mongo mongoDDBB = new Mongo(mongoHost , mongoPort); DB db = mongoDDBB.getDB(mongoDB); DBCollection collection = db.getCollection(mongoCollection); collection.remove(new BasicDBObject()); "," try { Mongo XXXXX = new Mongo(mongoHost , mongoPort); DB XXXXX = XXXXX.getDB(mongoDB); DBCollection XXXXX = XXXXX.getCollection(mongoCollection); XXXXX.remove(new BasicDBObject()); "
0, ClientRequestDispatcher subcontract = (ClientRequestDispatcher)(CSRegistry.get(scid)) ; if (subcontract == null) { subcontract = (ClientRequestDispatcher)(CSRegistry.get(defaultId)) ; ," String val = """"; for (Variable v : view.varMap.values()) { val += v.id + "" "" + v.value + ""/"" + (bestSolution != null ? bestSolution.get(v.id) : ""NA"") + (v.fixed ? ""F"" : """") + ""\n""; "
0," StringBuilder sbuilder = new StringBuilder(); for( String str : factory.getStaticImports() ) { sbuilder.append( ""import_static "" ); sbuilder.append( str ); sbuilder.append( "";\n"" ); "," this.MDDFEntries = new MDDFEntry[(int) (size / 36)]; for (int i = 0; i < (size / 36); i++) { this.MDDFEntries[i] = new MDDFEntry(); this.MDDFEntries[i].setByteBuffer(bb, offset + (36 * i)); "
1, try { BufferedReader fis = new BufferedReader(new FileReader(patternsFile.toString())); String pattern = null; while((pattern = fis.readLine()) != null) { patternsToSkip.add(pattern); , try { BufferedReader XXXXX = new BufferedReader(new FileReader(XXXXXsFile.toString())); String XXXXX = null; while((XXXXX = XXXXX.readLine()) != null) { XXXXXsToSkip.add(XXXXX); 
0," StoredObject folder = super.createDocument(context, repositoryId, folderId, extension); if (null != folder) checkWriteAccess(repositoryId, context.getUsername(), folder); return folder; ", super(cons); this.hypMean = hypMean; this.tail = tail; this.mean = mean; this.sd = sd; this.n = n; result = new GeoList(cons); setInputOutput(); compute(); result.setLabel(label); 
1, ILaunchConfigurationType type = null; ILaunchConfiguration config = null; if (parentElement instanceof ILaunchConfigurationType) { type = (ILaunchConfigurationType)parentElement; , ILaunchConfigurationType XXXXX = null; ILaunchConfiguration XXXXX = null; if (parentElement instanceof ILaunchConfigurationType) { XXXXX = (ILaunchConfigurationType)parentElement; 
0," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (value: ""); result.append(value); result.append(')'); return result.toString(); "," if (""C"".equalsIgnoreCase(s)) return ActionCategory.C; else if (""M"".equalsIgnoreCase(s)) return ActionCategory.M; else if (""B"".equalsIgnoreCase(s)) return ActionCategory.B; else return null; "
1, getBean().setMobile(mobile); if (mover!=null && point!=null) { mover.setActive(mobile); if (mobile) point.setCursor(Draw2DUtils.getRoiControlPointCursor()) ; else point.setCursor(null) ; , getBean().setMobile(mobile); if (mover!=null && point!=null) { mover.setActive(mobile); if (mobile) point.setCursor(Draw2DUtils.getRoiControlPointCursor()) ; else point.setCursor(null) ; 
0," StringBuffer buffer = new StringBuffer(messageSize); buffer.append(""Message: "" + index + "" sent at: "" + new Date()); if (buffer.length() > messageSize) { return buffer.substring(0, messageSize); ", final String maximizedString = String.valueOf(shell.getMaximized()); final String positionString; final String sizeString; if (shell.getMaximized()) { positionString = null; sizeString = null; 
1, File pathFile = new File(path); try { JarInputStream is = new JarInputStream(new FileInputStream(pathFile)); while (true) { JarEntry entry = is.getNextJarEntry(); if (entry == null) { break; , File XXXXX = new File(path); try { JarInputStream XXXXX = new JarInputStream(new FileInputStream(XXXXX)); while (true) { JarEntry XXXXX = XXXXX.getNextJarEntry(); if (XXXXX == null) { break; 
1," if (audioProperties != null) { Object author = audioProperties.get(""author""); Object title = audioProperties.get(""title""); if ((author != null) && (title != null)) { return author + "" - "" + title; "," if (audioProperties != null) { Object XXXXX = audioProperties.get(""XXXXX""); Object XXXXX = audioProperties.get(""XXXXX""); if ((XXXXX != null) && (XXXXX != null)) { return XXXXX + "" - "" + XXXXX; "
1, int k = 0; int size = props.size(); String[] keys = new String[size]; try { for (Enumeration en = props.keys(); en.hasMoreElements();) { keys[k] = (String) en.nextElement(); k++; , int XXXXX = 0; int XXXXX = props.XXXXX(); String[] XXXXXeys = new String[XXXXX]; try { for (Enumeration XXXXX = props.XXXXXeys(); XXXXX.hasMoreElemXXXXXts();) { XXXXXeys[XXXXX] = (String) XXXXX.nextElemXXXXXt(); XXXXX++; 
1," if(isInPopup(input.getMouseX(),input.getMouseY())){ indexSelected = (input.getMouseY() - 16 - screenY)/RTSFont.HEIGHT; if(getOption(indexSelected) != null){ getOption(indexSelected).onClick(); "," if(isInPopup(input.getMouseX(),input.getMouseY())){ indexSelected = (input.getMouseY() - 16 - screenY)/RTSFont.HEIGHT; if(getOption(indexSelected) != null){ getOption(indexSelected).onClick(); "
0," this.infected = true; this.daysOfInfectionRemaining = MathUtils.random(MIN_DAYS_INFECTED, MAX_DAYS_INFECTED); setTextureRegion(activity.mInfectedPlayerTextureRegion); detachChild(protectionLabel); ", if (length() == 0) return sb; Env env = Env.getInstance(); try { Reader reader = env.getRuntimeEncodingFactory().create(toInputStream()); if (reader != null) { sb.append(reader); reader.close(); 
1, tvName.setText(R.string.func1_title); btnLeft.setText(R.string.back); btnLeft.setVisibility(View.VISIBLE); btnRight.setText(R.string.refresh); btnRight.setVisibility(View.VISIBLE); , tvName.setText(R.string.func1_title); btnLeft.setText(R.string.back); btnLeft.setVisibility(View.VISIBLE); btnRight.setText(R.string.refresh); btnRight.setVisibility(View.VISIBLE); 
1," Embedded embedded = new Embedded(null, image); if (clickListener != null) { embedded.addStyleName(ExplorerLayout.STYLE_CLICKABLE); embedded.setData(itemId); embedded.addListener(clickListener); "," Embedded XXXXX = new Embedded(null, image); if (clickListener != null) { XXXXX.addStyleName(ExplorerLayout.STYLE_CLICKABLE); XXXXX.setData(itemId); XXXXX.addListener(clickListener); "
1, if (mapPropertyButton.getSelection()) { showTransformationWidgets(false); showExpressionWidgets(false); showAdvancedMappingWidgets(false); showPropertyWidgets(true); redrawParent(); , if (mapPropertyButton.getSelection()) { showTransformationWidgets(false); showExpressionWidgets(false); showAdvancedMappingWidgets(false); showPropertyWidgets(true); redrawParent(); 
0, TestSuite testSuite = new TestSuite(); testSuite.addTestSuite(AddPagePGTest.class); testSuite.addTestSuite(AddPortletPGTest.class); testSuite.addTestSuite(TearDownPageTest.class); return testSuite; ," AttributeList attrList = new AttributeList(); try { long fsize = mpegFile.length(); Attribute sizeStr = new Attribute(ItemNode.SIZE, Long.toString(fsize)); attrList.add(sizeStr); "
0," setup(Permissions.PRIVATE); Experimenter other = loginNewUserInOtherUsersGroup(fixture.user); fixture.log_in(); try { other.setEmail(uuid()); iAdmin.updateExperimenter(other); fail(""sec-vio""); ", if (_theReaper == null) { ActivityReaper._theReaper = new ActivityReaper(); _reaperThread = new ReaperThread(ActivityReaper._theReaper); _reaperThread.setDaemon(true); _reaperThread.start(); 
0," VRing res = new VRing(vx, vy, vz, size, angle, irr_p, orient, color, borderColor, (alphaC != null) ? alphaC.getAlpha() : 1); res.cursorInsideColor = this.cursorInsideColor; return res; "," if(""dto1"".equals(id)) return SimpleType.construct(DTO1.class); else if(""dto2"".equals(id)) return SimpleType.construct(DTO2.class); else throw new IllegalArgumentException(""Unknown id: "" + id); "
1," System.out.println(""testFail: no wid""); HashMap<String, WorkItemDefinition> widMap = new HashMap<String, WorkItemDefinition>(); try { WIDHandler.evaluateWorkDefinitions(widMap, (String)null); "," System.out.println(""testFail: no wid""); HashMap<String, WorkItemDefinition> widMap = new HashMap<String, WorkItemDefinition>(); try { WIDHandler.evaluateWorkDefinitions(widMap, (String)null); "
1," super.setConfig( cloud, templateName, management, serviceName); validateCloudConfig(); if (this.management) { this.serverNamePrefix = this.cloud.getProvider().getManagementGroup(); "," super.setConfig( cloud, templateName, management, serviceName); validateCloudConfig(); if (this.management) { this.serverNamePrefix = this.cloud.getProvider().getManagementGroup(); "
0, Object val = edge.getEdgeData().getAttributes().getValue(column.getIndex()); val = dynamicHelper.getDynamicValue(val); if (val != null) { values.add(val); return val.equals(match); ," try { StaticHibernateUtil.startTransaction(); if (day != null) { configurationPersistence.createOrUpdateConfigurationKeyValueString(MONTH_CLOSING_DAY_CONFIG_KEY, DateUtils.toDatabaseFormat(day)); "
1," StatusType type, subtype; Equipment eq; StatusValue v, haste; int cap; type = subtype = null; eq = mEquipment.getEquipment(EquipmentSet.MAINWEAPON); if (eq != null) { type = eq.getWeaponType(); "," StatusType type, subtype; Equipment eq; StatusValue v, haste; int cap; type = subtype = null; eq = mEquipment.getEquipment(EquipmentSet.MAINWEAPON); if (eq != null) { type = eq.getWeaponType(); "
1," String encodingsProperty = System.getProperty(""video.encodings""); ArrayList allEncodings = parseEncodings(encodingsProperty); if (filter == null) { this.encodings = allEncodings; "," String XXXXX = System.getProperty(""video.encodings""); ArrayList XXXXX = parseEncodings(XXXXX); if (filter == null) { this.encodings = XXXXX; "
1," mVideoWidth = mp.getVideoWidth(); mVideoHeight = mp.getVideoHeight(); if (mVideoWidth != 0 && mVideoHeight != 0) { mVideoSurfaceView.getHolder().setFixedSize(mVideoWidth, mVideoHeight); "," mVideoWidth = mp.getVideoWidth(); mVideoHeight = mp.getVideoHeight(); if (mVideoWidth != 0 && mVideoHeight != 0) { mVideoSurfaceView.getHolder().setFixedSize(mVideoWidth, mVideoHeight); "
1," FIBAttributeNotification<NumberType> notification = requireChange(Parameters.numberType, numberType); if (notification != null) { this.numberType = numberType; hasChanged(notification); "," FIBAttributeNotification<NumberType> notification = requireChange(Parameters.numberType, numberType); if (notification != null) { this.numberType = numberType; hasChanged(notification); "
0," ModelAccess.instance().runWriteAction(new Runnable() { @Override public void run() { SModelRepository.getInstance().unRegisterModelDescriptor(ourInstance, AuxilaryRuntimeModel.this); "," StringBuilder sb = new StringBuilder(); String nl = """"; if (this.facetRequest != null) { sb.append(nl).append(prefix).append(""Request: "").append( this.facetRequest.toString()); nl = ""\n""; "
0, List<Object> errors = errorHandler.getErrors(); if (errors != null) { Iterator<Object> iter = errors.iterator(); while (iter.hasNext()) { Object error = iter.next(); out.println(error.toString()); ," super(); this.routeWaypoint = routeWaypoint; this.color = color; this.width = width; this.height = height; this.circle = new WaypointCircle(route, routeIndex, wpIndex); initGraphics(); "
0," setWidget(new Label(""Compound Rule Manager"")); CompoundStandardDetail csd = new CompoundStandardDetail(standardType, svc); vp.add(csd); vp.add(close); setWidget(vp); addCloseHandler(); "," long oldIndexUsage = profiler.getCounter(""Query.indexUsage""); long oldCompositeIndexUsage = profiler.getCounter(""Query.compositeIndexUsage""); if (oldIndexUsage == -1) { oldIndexUsage = 0; "
1, SwingUtilities.invokeLater(new Runnable() { public void run() { int selectionLength = jcomp.getSelectionEnd() - jcomp.getSelectionStart(); if (selectionLength == 0) { jcomp.selectAll(); , SwingUtilities.invokeLater(new Runnable() { public void run() { int XXXXX = jcomp.getSelectionEnd() - jcomp.getSelectionStart(); if (XXXXX == 0) { jcomp.selectAll(); 
1," panels = new ImagePanel[soundcat.getNumSounds()]; labels = new JLabel[soundcat.getNumSounds()]; if (RhythmWheel.lowRes) { setLayout(new GridLayout(2, soundcat.getNumSounds(), 2, -10)); "," panels = new ImagePanel[soundcat.getNumSounds()]; labels = new JLabel[soundcat.getNumSounds()]; if (RhythmWheel.lowRes) { setLayout(new GridLayout(2, soundcat.getNumSounds(), 2, -10)); "
0, ContentPane = new JPanel(); ContentPane.setLayout( new FlowLayout(FlowLayout.LEFT) ); ContentPane.setBorder(BorderFactory.createEtchedBorder()); ContentPane.add(Buttons); ContentPane.add(jsp); ," ProtegeReasoner reasoner = owlModel2reasonerMap.get(owlModel); if (reasoner == null) { return (ProtegeOWLReasoner) getProtegeReasoner(owlModel, getDefaultDIGReasonerClass(), false); "
0," try { if (!canGenerate()) return; progressMonitor.beginTask("""", 1); progressMonitor.subTask (CodeGenEcorePlugin.INSTANCE.getString (""_UI_Generating_message"", new Object [] { getFormattedName() "," Plugin p = getServer().getPluginManager().getPlugin(""Permissions""); if (p != null && p.isEnabled()) { permissionsPlugin = ((com.nijikokun.bukkit.Permissions.Permissions)p).getHandler(); "
0," progressDialog.setMessage(getString(R.string.unziping)); Thread t = new Thread() { @Override public void run() { try { FileManager.unzip(FilePath,AppPreference.TEMP_DIR+""/""+packageID); "," ActionBar ac = getActivity().getActionBar(); ac.show(); FragmentManager fm = getFragmentManager(); fm.popBackStack(Main.getBackStackid(), FragmentManager.POP_BACK_STACK_INCLUSIVE); "
1," TradingRecord ntr = new TradingRecord(mPCurve,cfg); ntr.physicalPlanned = physicalPlanned; ntr.quantityTraded = quantityTraded; ntr.monetry = monetry; ntr.tickSize = tickSize; return ntr; "," TradingRecord XXXXX = new TradingRecord(mPCurve,cfg); XXXXX.physicalPlanned = physicalPlanned; XXXXX.quantityTraded = quantityTraded; XXXXX.monetry = monetry; XXXXX.tickSize = tickSize; return XXXXX; "
0, Annotation[] annotations = fieldDeclaration.annotations; if (annotations != null) { FieldBinding fieldBinding = fieldDeclaration.binding; if (fieldBinding == null) { return false; ," super(name); proposals.add(new Proposal(""auto"")); proposals.add(new Proposal(""inherit"")); proposals.add(new Proposal(""1%"")); proposals.addAll(WebDialectExtension.createLengthProprosals()); "
0," _underlying = mock(SecurityMaster.class); _uriInfo = mock(UriInfo.class); when(_uriInfo.getBaseUri()).thenReturn(URI.create(""testhost"")); _resource = new DataSecurityMasterResource(_underlying); ", super(version); this.observationId = observationId; this.responseFormat = responseFormat; this.resultModel = resultModel; this.responseMode = responseMode; this.srsName = srsName; 
0, String tableName = tbl.getParameters().get(HBaseSerDe.HBASE_TABLE_NAME); if (tableName == null) { tableName = tbl.getSd().getSerdeInfo().getParameters() .get(HBaseSerDe.HBASE_TABLE_NAME); ," String label = ((StandardEntry)object).getTitle(); return label == null || label.length() == 0 ? getString(""_UI_StandardEntry_type"") : getString(""_UI_StandardEntry_type"") + "" "" + label; "
1," try { int err = mTag.getTagService().setTimeout(TagTechnology.MIFARE_CLASSIC, timeout); if (err != ErrorCodes.SUCCESS) { throw new IllegalArgumentException(""The supplied timeout is not valid""); "," try { int XXXXX = mTag.getTagService().setTimeout(TagTechnology.MIFARE_CLASSIC, timeout); if (XXXXX != ErrorCodes.SUCCESS) { throw new IllegalArgumentException(""The supplied timeout is not valid""); "
0, switch (featureID) { case As3EPackage.AS3_PACKAGE__DIRECTIVES: getDirectives().clear(); return; case As3EPackage.AS3_PACKAGE__CANONICAL_NAME: setCanonicalName(CANONICAL_NAME_EDEFAULT); return; ," int ret = nGetPCMBufferSize(DEFAULT_PCM_BUFFER_SIZE); if (ret < 0) { handleNativeException(ret); throw new RuntimeException( ""Unknown error in Lame.nGetPCMBufferSize(). Resultcode="" + ret); "
1, if(excludeIncludeStore.excludeClass.contains(className)) return true; return excludeIncludeStore.excludeTree.contains(className) && !excludeIncludeStore.includeTree.contains(className); , if(excludeIncludeStore.excludeClass.contains(className)) return true; return excludeIncludeStore.excludeTree.contains(className) && !excludeIncludeStore.includeTree.contains(className); 
1," StringBuilder payData = new StringBuilder(); for(String key:payments.keySet()) { payData.append(key); payData.append(""-=-""); payData.append(payments.get(key)); payData.append(""\n""); "," StringBuilder payData = new StringBuilder(); for(String key:payments.keySet()) { payData.append(key); payData.append(""-=-""); payData.append(payments.get(key)); payData.append(""\n""); "
1, if (current.eResource() != null && current.eResource().getResourceSet() != null) this.resourceSet = current.eResource().getResourceSet(); flatreferencetableRequiredProperty.setInput(settings); , if (current.eResource() != null && current.eResource().getResourceSet() != null) this.resourceSet = current.eResource().getResourceSet(); flatreferencetableRequiredProperty.setInput(settings); 
0," this.image = image; this.bkg = bkg; this.writeAs = writeAs; this.name = ""Img"" + (currentNumber++); if (image.getColorModel().hasAlpha() && (bkg == null)) { maskName = name + ""Mask""; "," switch(index) { case 0: return new OrExpr_Group_1(lastRuleCallOrigin, this, 0, inst); case 1: return new OrExpr_AndExprParserRuleCall_0(lastRuleCallOrigin, this, 1, inst); default: return null; "
0," if (method instanceof MLMethod) { StructureTab tab = new StructureTab( ((MLMethod)this.method)); EncogWorkBench.getInstance().getMainWindow().getTabManager() .openModalTab(tab, ""Network Structure""); ", int numCorrespondences = 0; for ( final Bead bead : view.getBeadStructure().getBeadList() ) numCorrespondences += bead.getRANSACCorrespondence().size(); return numCorrespondences; 
0, super(parser); this.lowerLetter = Character.toLowerCase(matchLetter); this.upperLetter = Character.toUpperCase(matchLetter); this.nextState = nextStateArg; this.noMatchState = noMatchStateArg; , if( set != null ) return set; Container parent = getParent(); if( parent == null ) return Color.WHITE; set = parent.getBackground(); if( set != null ) return set; return Color.WHITE; 
1," CmsRpcAction<CmsSitemapChange> subSitemapAction = new CmsRpcAction<CmsSitemapChange>() { @Override public void execute() { start(0, true); getService().createSubSitemap(entryId, this); "," CmsRpcAction<CmsSitemapChange> subSitemapAction = new CmsRpcAction<CmsSitemapChange>() { @Override public void execute() { start(0, true); getService().createSubSitemap(entryId, this); "
0," if (getWKFContainerGR() != null) { WKFObjectGR containerGR = getWKFContainerGR(); return Math.max(0, containerGR.getLocationInDrawing().x - (getWidth() - containerGR.getWidth()) / 2); ", IModelElement parent = method.getParent(); if (parent instanceof IType) { RecordTypeDef typeDef = (RecordTypeDef) getTypeDef((IType) parent); return typeDef.getFields().get(method.getElementName()); 
1," TestSuite suite= new TestSuite(CompletionTest_ScopedReference_Prefix.class.getName()); suite.addTest(new CompletionTest_ScopedReference_Prefix(""testCompletionProposals"")); return suite; "," TestSuite suite= new TestSuite(CompletionTest_ScopedReference_Prefix.class.getName()); suite.addTest(new CompletionTest_ScopedReference_Prefix(""testCompletionProposals"")); return suite; "
1," Map<String, Object> requestContext = bindingProvider.getRequestContext(); map.setAction(action); AddressingHelper.configureRequestContext(requestContext, map, map.getTo(), action); "," Map<String, Object> requestContext = bindingProvider.getRequestContext(); map.setAction(action); AddressingHelper.configureRequestContext(requestContext, map, map.getTo(), action); "
1, Throwable top = t; if (t instanceof DebugException) { DebugException de = (DebugException) t; IStatus status = de.getStatus(); if (status.getException() != null) { top = status.getException(); , Throwable XXXXX = t; if (t instanceof DebugException) { DebugException XXXXX = (DebugException) t; IStatus XXXXX = XXXXX.getStatus(); if (XXXXX.getException() != null) { XXXXX = XXXXX.getException(); 
0," fToken = fScanner.previousToken(start - 1, DartHeuristicScanner.UNBOUND); fPreviousPos = start; fPosition = fScanner.getPosition() + 1; try { fLine = fDocument.getLineOfOffset(fPosition); "," StringBuilder sb = new StringBuilder(); sb.append(""{""); if (gateways != null) sb.append(""Gateways: "" + gateways + "", ""); if (marker != null) sb.append(""Marker: "" + marker + "", ""); sb.append("""
0, this.id = id; this.address = address; this.divert = divert; filter = divert.getFilter(); uniqueName = divert.getUniqueName(); routingName = divert.getRoutingName(); exclusive = divert.isExclusive(); ," String label = crop(((ValueExpression)object).getBody()); return label == null || label.length() == 0 ? getString(""_UI_ValueExpression_type"") : getString(""_UI_ValueExpression_type"") + "" "" + label; "
1, Presentation presentation = event.getPresentation(); DebuggerTreeNodeImpl[] nodes = getNodesToDelete(event); if (nodes != null && nodes.length > 0) { presentation.setEnabled(true); , Presentation XXXXX = event.getPresentation(); DebuggerTreeNodeImpl[] nodes = getNodesToDelete(event); if (nodes != null && nodes.length > 0) { XXXXX.setEnabled(true); 
0, TestSuite testSuite = new TestSuite(); testSuite.addTest(Login52xTests.suite()); testSuite.addTest(WikiTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; ," Border b = (Border) UIManager.get(""Nb.Editor.Toolbar.border""); toolbar.setBorder(b); if (UIUtils.isAquaLookAndFeel()) { toolbar.setBackground(UIManager.getColor(""NbExplorerView.background"")); "
1," addToFeedbackList(OprofileLaunchMessages.getString(""oprofiledcontroldialog.feedback.save"")); OprofileViewSaveDefaultSessionAction hack = new OprofileViewSaveDefaultSessionAction(); hack.run(); "," addToFeedbackList(OprofileLaunchMessages.getString(""oprofiledcontroldialog.feedback.save"")); OprofileViewSaveDefaultSessionAction XXXXX = new OprofileViewSaveDefaultSessionAction(); XXXXX.run(); "
1," return (Payload) this .getHibernateTemplate() .find(""from payload where payloadIdentifier.payloadId = ? and payloadIdentifier.sequenceNumber = ?"", id.getPayloadId(), id.getSequenceNumber()).get(0); "," return (Payload) this .getHibernateTemplate() .find(""from payload where payloadIdentifier.payloadId = ? and payloadIdentifier.sequenceNumber = ?"", id.getPayloadId(), id.getSequenceNumber()).get(0); "
0," GraphProxy graph = parent.getGraph(); NodeProxy from = graph.getTail(model); NodeProxy to = graph.getHead(model); updateLine(viewBody, from.getX(), from.getY(), to.getX(), to.getY()); "," System.out.println(""Adding ShellSideBar with Icon : "" + icon); GSidebarButton b = new GSidebarButton(icon, c, this, label); if (label.equals(""shell"")) add(b,1); else add(b); validate(); "
1, return((this.getX()+this.getWidth()) >= other.getX() && this.getX() <= (other.getX() + other.getWidth()) && (this.getY()-this.getHeight()-10) <= other.getY() && (this.getY()) >= other.getY()); , return((this.getX()+this.getWidth()) >= other.getX() && this.getX() <= (other.getX() + other.getWidth()) && (this.getY()-this.getHeight()-10) <= other.getY() && (this.getY()) >= other.getY()); 
1," if (featOkTst && casFeat_posType == null) jcas.throwFeatMissing(""posType"", ""org.u_compare.shared.label.penn.pos.UnknownPOS""); return ll_cas.ll_getStringValue(addr, casFeatCode_posType); "," if (featOkTst && casFeat_posType == null) jcas.throwFeatMissing(""posType"", ""org.u_compare.shared.label.penn.pos.UnknownPOS""); return ll_cas.ll_getStringValue(addr, casFeatCode_posType); "
1," ServiceContext result = getContextInternal(); if( result == null ) { String msg = ""No context available outside of the request service lifecycle.""; throw new IllegalStateException( msg ); "," ServiceContext result = getContextInternal(); if( result == null ) { String msg = ""No context available outside of the request service lifecycle.""; throw new IllegalStateException( msg ); "
0," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (name: ""); result.append(name); result.append(')'); return result.toString(); ", if (codecUsed instanceof BHSDCodec) { BHSDCodec bhsd = (BHSDCodec) codecUsed; if (bhsd.isDelta()) { long cardinality = bhsd.cardinality(); while (value > bhsd.largest()) { value -= cardinality; 
1, if (lastRefreshText.equals(searchField.getText()) == false) { EntireUIRoot.getRoot(this_shadow).filterTextChanged( searchField.getText().toLowerCase()); lastRefreshText = searchField.getText(); , if (lastRefreshText.equals(searchField.getText()) == false) { EntireUIRoot.getRoot(this_shadow).filterTextChanged( searchField.getText().toLowerCase()); lastRefreshText = searchField.getText(); 
1," try { ((ApplicationContextImpl) _remoteParticipant.getApplicationContext()).getRemoteCommunication().joinAnswer( _remoteParticipant.getId(), _localParticipant.getRemoteAddress(), answerSDP); "," try { ((ApplicationContextImpl) _remoteParticipant.getApplicationContext()).getRemoteCommunication().joinAnswer( _remoteParticipant.getId(), _localParticipant.getRemoteAddress(), answerSDP); "
0," initHelpers(); if (helpers[i][j] == null) { if (a.getFunBorder().isPolynomialFunction(false)) { setHelper( i, j, new AlgoIntersectPolynomials(cons, a.getFunBorder(), b .getFunBorder())); "," _jahSpotify = _jahSpotifyService.getJahSpotify(); _queueManager.addQueueListener(new AbstractQueueListener() { @Override public void newTrackAtFront(final Link queue, final QueueTrack queueTrack) { "
1," int channelCnt = Integer.parseInt(properties.get(""CI"").get(""NumberOfChannels"")); for (int i = 1; i <= channelCnt; i++) { channels.add(new ChannelInfo(i, properties.get(""CH"").get(""Ch"" + i))); "," XXXXXnt XXXXX = Integer.parseInt(propertXXXXXes.get(""CI"").get(""NumberOfChannels"")); for (XXXXXnt XXXXX = 1; XXXXX <= XXXXX; XXXXX++) { channels.add(new ChannelInfo(XXXXX, propertXXXXXes.get(""CH"").get(""Ch"" + XXXXX))); "
0," if (isEntityAlive()) { lastActiveTime = timeSinceIgnited; int i = getCreeperState(); if (i > 0 && timeSinceIgnited == 0) { worldObj.playSoundAtEntity(this, ""random.fuse"", 1.0F, 0.5F); "," super(VcsBundle.message(""action.name.create.patch.for.selected.revisions""), VcsBundle.message(""action.description.create.patch.for.selected.revisions""), AllIcons.Actions.CreatePatch); "
0," RioStatement statement = this.getFirstStatement(uri, IConstants.OSLC_SHORTTITLE, null); if( statement != null ) { RioValue value = statement.getObject(); return value.stringValue(); ", GradleVersion version = getGradleVersion(); boolean isMinimumVersionOrHigher = version.compareTo(PROJECT_OUTCOMES_MINIMUM_VERSION) >= 0; if (isMinimumVersionOrHigher) { return true; 
0, TestSuite testSuite = new TestSuite(); testSuite.addTest(Login52xTests.suite()); testSuite.addTest(ShoppingTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; ," try { em.createNamedQuery(""SimpleXmlEntity.findAll"").getResultList(); fail(""should not be able to execute query using short class name "" + ""for entity that has an entity name specified""); "
1, int hash = super.hashCode(); hash = 17 * hash + (this.exterior != null ? this.exterior.hashCode() : 0); hash = 17 * hash + (this.interior != null ? this.interior.hashCode() : 0); return hash; , int hash = super.hashCode(); hash = 17 * hash + (this.exterior != null ? this.exterior.hashCode() : 0); hash = 17 * hash + (this.interior != null ? this.interior.hashCode() : 0); return hash; 
0, for (SListIterator<Record> iterator = createIterator(); iterator.isValid(); iterator.moveNext()){ if (iterator.getCurrentElem().getTitle().equals(t)) return iterator.getCurrentElem(); , EObject res = null; int offset; final ISelection selection = editor.getSelectionProvider().getSelection(); if (selection instanceof TextSelection) { offset = ((TextSelection)selection).getOffset(); 
0," try { log.debug(""Test list subscribe""); boolean response = mSvc.listSubscribe(listId, randomEmailAddress, null, EmailType.HTML, false, false, false, false); log.debug(""User subscribed: {", int len = attrs.getLength(); for (int i = 0; i < len; i++) { Node attr = attrs.item(i); String attrName = attr.getLocalName(); if (attrName == null) { attrName = attr.getNodeName(); 
1," Log.i(TAG, ""downloadMediaToSdCard""); FileOutputStream fos = null; try { Log.i(TAG, ""Opening URL: "" + url); HttpEntity entity = HTTPUtils.getEntity(url); if (entity == null) { return null; "," Log.i(TAG, ""downloadMediaToSdCard""); FileOutputStream fos = null; try { Log.i(TAG, ""Opening URL: "" + url); HttpEntity entity = HTTPUtils.getEntity(url); if (entity == null) { return null; "
1," HighlightingColorListItem item= getHighlightingColorListItem(); PreferenceConverter.setValue(getOverlayStore(), item.getColorKey(), fSyntaxForegroundColorEditor.getColorValue()); "," HighlightingColorListItem item= getHighlightingColorListItem(); PreferenceConverter.setValue(getOverlayStore(), item.getColorKey(), fSyntaxForegroundColorEditor.getColorValue()); "
1, final ByteArrayOutputStream baos = new ByteArrayOutputStream(sampleRate * 2 * 20); return new InputStream() { public int available() throws IOException { return inputStream.available(); , final ByteArrayOutputStream XXXXX = new ByteArrayOutputStream(sampleRate * 2 * 20); return new InputStream() { public int available() throws IOException { return inputStream.available(); 
0," super(name); this.dataType = dataType; this.tileWidth = tileWidth; this.nTiles = nTiles; this.tilePositions = new long[nTiles]; this.tileSizes = new int[nTiles]; Arrays.fill(tilePositions, -1); "," return ""CLASS: "" + getSolutionClassName() + ""\n"" + ""METHOD: "" + getSolutionMethodName() + ""\n"" + ""RETURNVALUE: "" + getReturnType() + ""\n"" + ""PARAMETERS: "" + getParameterTypes() + ""\n""; "
1, ReplyEnvelope resultEnvelope = requestSender.send(new IsRadioReceiverOnCommand()); resultEnvelope.checkForRuntimeException(); return ((BooleanReplyEnvelope)resultEnvelope).getBooleanContents(); , ReplyEnvelope XXXXX = requestSender.send(new IsRadioReceiverOnCommand()); XXXXX.checkForRuntimeException(); return ((BooleanReplyEnvelope)XXXXX).getBooleanContents(); 
0," assertEquals(210945415755L, elevationMetersToBcrAltitude(6.0)); assertEquals(210945416903L, elevationMetersToBcrAltitude(146.0)); assertEquals(210945415705L, elevationMetersToBcrAltitude(0.0)); "," doc = new Document(""a = lambda b: callit(b)\n"" + """"); analyzer = new OccurrencesAnalyzer(); msgs = analyzeDoc(); printMessages(msgs, 1); assertContainsMsg(""Undefined variable: callit"", msgs); "
0," final PsiElement parent = expression.getParent(); if (parent instanceof PsiLocalVariable) { final Integer localCount = expression.getUserData(key); parent.putUserData(key, localCount); "," String fromKey = keyForResource(fromRc); String toKey = keyForResource(toRc); Map<String, Boolean> fromMap = fRcMap.remove(fromKey); if(fromMap != null){ fRcMap.put(toKey, fromMap); "
1, this.environment = localNode.getEnvironment(); this.localNode = localNode; this.leafSet = leafSet; localNode.addObserver(this); localNode.getEnvironment().getSelectorManager().addLoopObserver(this); , this.environment = localNode.getEnvironment(); this.localNode = localNode; this.leafSet = leafSet; localNode.addObserver(this); localNode.getEnvironment().getSelectorManager().addLoopObserver(this); 
0," if (schemaMetrics == null) { if (tableName == null || cfName == null) { throw new IllegalStateException(""Schema metrics requested before "" + ""table/CF name initialization: "" + schemaConfAsJSON()); "," String rulesBuffer = new String(Base64.encodeBase64String(("" .getBytes()))); rulesResource.upload(rulesBuffer); String rules = rulesResource.get(); assertEquals(rules, rulesBuffer); "
1, SearchControls searchControls = new SearchControls(); searchControls.setSearchScope(SearchControls.OBJECT_SCOPE); searchControls.setReturningObjFlag(true); return searchControls; , SearchControls XXXXX = new SearchControls(); XXXXX.setSearchScope(SearchControls.OBJECT_SCOPE); XXXXX.setReturningObjFlag(true); return XXXXX; 
1," String lowerName = i.getName().toLowerCase(); if (m_nameMap.containsKey(lowerName)) { throw new IllegalArgumentException(""Index with name of '"" + lowerName + ""' already exists.""); "," String XXXXX = i.getName().toLowerCase(); if (m_nameMap.containsKey(XXXXX)) { throw new IllegalArgumentException(""Index with name of '"" + XXXXX + ""' already exists.""); "
1, for (int i = 0; i < getChildCount(); i++) { MPSTreeNode node = (MPSTreeNode) getChildAt(i); if (node instanceof SNodeTreeNode) { if (((SNodeTreeNode) node).hasErrors()) return true; , for (int i = 0; i < getChildCount(); i++) { MPSTreeNode node = (MPSTreeNode) getChildAt(i); if (node instanceof SNodeTreeNode) { if (((SNodeTreeNode) node).hasErrors()) return true; 
0, List<K> collected = Collections.emptyList(); synchronized (COLLECTING_LOCK) { if (!collectedElements.isEmpty()) { collected = collectedElements; collectedElements = new LinkedList<K>(); ," super(""Open Shell""); setImageDescriptor(Activator.getInstance().getImageCache().getDescriptor(""icons/terminal_view.png"")); this.page = getActivePage(); this.logger = logger; this.probe = probe; "
0, String control = controlPoint.getStringValue(CONTROL_TYPE_REGULAR_SHAPE); return control!= null && (control.equals(NORTH) || control.equals(EAST) || control.equals(SOUTH) || control.equals(WEST)); ," if (this.isIdentifier(identifier) && this.m_dh!=null) { this.m_refreshTime = System.currentTimeMillis(); try { this.m_dh.setI18nEntry(namespace, parameter, identifier, language, value); "
0," controlList.add(new GuiSmallButton(0, width / 2 - 155, height / 6 + 96, buttonText1)); controlList.add(new GuiSmallButton(1, (width / 2 - 155) + 160, height / 6 + 96, buttonText2)); "," if (DBG) Log.v(TAG, ""onRequestGeometry("" + id + "")""); mAsyncHandler.removeMessages(REQUEST_GEOMETRY_N + id); mAsyncHandler.sendMessage(mAsyncHandler.obtainMessage(REQUEST_GEOMETRY_N + id, id, 0)); "
0," String mimeType = getMimeType(request, original); return mimeType != null && (mimeType.contains(""html"")) && maybeAcceptHtml(request.getParam(UriCommon.Param.HTML_TAG_CONTEXT.getKey())); "," StringBuffer buffer = new StringBuffer(); buffer.append(""Recovered#""); if (this.innerTypeBinding != null) { buffer.append(""innerTypeBinding"") .append(this.innerTypeBinding.getKey()); "
0," int cnt = 0; StringBuilder result = new StringBuilder(); result.append(""OR(""); for (EventTrigger trigger : _triggers) { result.append(cnt++ > 0 ? "","" : """"); result.append(trigger); "," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; "
0," Assert.assertNotNull(ome); Assert.assertEquals(1, ome.sizeOfImageList()); Image image = ome.getImage(0); Assert.assertNotNull(image); Assert.assertEquals(IMAGE_NAME, image.getName()); "," for (Face face : ListSequence.fromList(myEmbeddedGraph.getFaces())) { System.out.println(""face: ""); if (myEmbeddedGraph.isOuterFace(face)) { System.out.println(""this is outer face""); "
1," super(model,editorController.getController()); this.editorController = editorController; delegate = new FIBEditableViewDelegate<FIBTextField,JTextField>(this); model.addObserver(this); "," super(model,editorController.getController()); this.editorController = editorController; delegate = new FIBEditableViewDelegate<FIBTextField,JTextField>(this); model.addObserver(this); "
0," this(new DefaultNHttpClientConnectionFactory( responseFactory, allocator, params), new SSLNHttpClientConnectionFactory( sslcontext, sslHandler, responseFactory, allocator, params)); ", AdventureResult test = EquipmentManager.getEquipment( EquipmentManager.ACCESSORY1 ); if ( test == null || test.equals( EquipmentRequest.UNEQUIP ) ) { return EquipmentManager.ACCESSORY1; 
1," validateColor(0xff00ff, new ConstantColor(""rgb(256, -10, 255)"")); validateColor(0xbfbf40, new ConstantColor(""hsl(420, 50, 50)"")); validateColor(0xff0000, new ConstantColor(""hsl(0, 200%, 50%)"")); "," validateColor(0xff00ff, new ConstantColor(""rgb(256, -10, 255)"")); validateColor(0xbfbf40, new ConstantColor(""hsl(420, 50, 50)"")); validateColor(0xff0000, new ConstantColor(""hsl(0, 200%, 50%)"")); "
0," final TaskBootstrap bootstrap = takeNextTaskFrom(scheduler); taskContext.execute(new Runnable() { public void run() { specify(bootstrap.getTaskInsideTransaction(), should.not().equal(null)); "," if (inputAddress.getPort() != -1) return inputAddress; else { return new HopImpl(inputAddress.getHost(), MessageProcessor.getDefaultPort(inputAddress.getTransport()),inputAddress.getTransport()); "
0," String[] sTestCmdLine = { MSVSS.SS_EXE, MSVSS.COMMAND_CREATE, DS_VSS_PROJECT_PATH, MSVSS.FLAG_COMMENT + SRC_COMMENT, MSVSS.FLAG_AUTORESPONSE_NO, MSVSS.FLAG_QUIET, MSVSS.FLAG_LOGIN + VSS_USERNAME"," Message message = new Message(kind, e.getSourceClass(), e.getMessage()); message.setHintObject(e.getHintObject()); message.setException(e.getThrowable()); myMessagesView.add(message); "
0, Enumeration values = cachedContentParts.elements(); while (values.hasMoreElements()) { ControlKey controlKey = (ControlKey) values.nextElement(); controlKey.getContentPart().dispose(); , int positionInTailArr = base - TAIL_OFFSET; int keyLength = key.length(); for(int i = 0; i < keyLength; i++) { if(key.charAt(i) != tailBuffer.get(positionInTailArr + i)){ return -1; 
0, for (final IndexerSetupParticipant p : participants) { SafeRunner.run(new ISafeRunnable() { @Override public void handleException(Throwable exception) { CCorePlugin.log(exception); ," this.memberId = memberId; this.memberType = memberType; this.memberRole = memberRole; if (memberType == null) { throw new IllegalArgumentException(""null type given for relation-member""); "
0, if(mChunkPairsIter != null && mChunkPairsIter.hasNext()) { ContextPatternWritable c = mChunkPairsIter.next(); pair.setContext(c.getContext()); pair.setPattern(c.getPattern()); return true; ," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; "
1," String oldValue = value; value = newValue; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, Aadl2Package.STRING_LITERAL__VALUE, oldValue, value)); "," String oldValue = value; value = newValue; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, Aadl2Package.STRING_LITERAL__VALUE, oldValue, value)); "
1," props.put(RpcClientConfigurationConstants.CONFIG_CLIENT_TYPE, RpcClientFactory.ClientType.DEFAULT.name()); props.put(RpcClientConfigurationConstants.CONFIG_HOSTS, hostInfo.getReferenceName()); "," props.put(RpcClientConfigurationConstants.CONFIG_CLIENT_TYPE, RpcClientFactory.ClientType.DEFAULT.name()); props.put(RpcClientConfigurationConstants.CONFIG_HOSTS, hostInfo.getReferenceName()); "
0, List<MethodInfo> infos = methodInfos.get( factName ); if ( infos != null ) { for ( MethodInfo info : infos ) { if ( info.getNameWithParameters().equals( methodFullName ) ) { return info; , responses.add(response); if (responses.size() > 1) { CompareAssertionResult result = new CompareAssertionResult(getName()); compareContent(result); compareTime(result); return result; 
0," ResolveMode resolveMode = ResolveMode.manual; try { String str = (String) model.genericGet(BndConstants.RESOLVE_MODE); if (str != null) resolveMode = Enum.valueOf(ResolveMode.class, str); "," ModelNode address = Baseadress.get(); address.add(""subsystem"", ""datasources""); if(xaDisplay) address.add(""xa-data-source"", ""*""); else address.add(""data-source"", ""*""); return address; "
1," newBook(""J.R.R. Tolkien"", ""Lord of the Rings""); newBook(""Cormac McCarthy"", ""The Road""); newBook(""George R.R. Martin"", ""The Game of Thrones""); newBook(""George R.R. Martin"", ""A Clash of Kings""); "," newBook(""J.R.R. Tolkien"", ""Lord of the Rings""); newBook(""Cormac McCarthy"", ""The Road""); newBook(""George R.R. Martin"", ""The Game of Thrones""); newBook(""George R.R. Martin"", ""A Clash of Kings""); "
1, Set<Double> intersection = new HashSet<Double>(); Set<Double> union = new HashSet<Double>(); for (int i = 0; i < a.length(); ++i) { double d = a.get(i); intersection.add(d); union.add(d); , Set<Double> intersection = new HashSet<Double>(); Set<Double> union = new HashSet<Double>(); for (int i = 0; i < a.length(); ++i) { double d = a.get(i); intersection.add(d); union.add(d); 
1," tags_user_map result = dao.getTagUserByTagIdAndByuserId(existingUserTag.gettag_id(), existingUserTag.getuser_id()); assertNotNull(result); assertEqualsTagUserMap(existingUserTag,result); "," tags_user_map XXXXX = dao.getTagUserByTagIdAndByuserId(existingUserTag.gettag_id(), existingUserTag.getuser_id()); assertNotNull(XXXXX); assertEqualsTagUserMap(existingUserTag,XXXXX); "
0, parameters.color = this.isColor; String strTemp = (String)this.jComboBoxEdf.getSelectedItem(); if (strTemp.equalsIgnoreCase(STR_VARIANCE)){ parameters.edfMethod = ExtendedDepthOfField.VARIANCE; , if(patient != null){ PatientIdentifier patientId = patient .getPatientIdentifier(MotechConstants.PATIENT_IDENTIFIER_MOTECH_ID); if (patientId != null) { return patientId.getIdentifier(); 
0," m_classGen = classGen; m_instructionList = new InstructionList(); m_methodGen = new MethodGen( Constants.ACC_PUBLIC, Type.VOID, new Type[]{new ObjectType(""org.tritonus.saol.engine.RTSystem"")"," Intent intent = new Intent(AmarinoIntent.ACTION_SEND); intent.putExtra(AmarinoIntent.EXTRA_DATA_TYPE, dataType); intent.putExtra(AmarinoIntent.EXTRA_PLUGIN_ID, pluginId); return intent; "
0," assertTrue(vm.isSetDisplay()); assertEquals(type.value(), vm.getDisplay().getType()); assertEquals(port, vm.getDisplay().getPort()); assertEquals(address, vm.getDisplay().getAddress()); "," assertNotNull(childName + "" is null"", child); String hrefAttribute = child.getAttribute(""href""); assertNotSame("""", childName + "" href is null \n"", hrefAttribute); return hrefAttribute; "
1," getCallsHandler().executeModification(""InsertQuota"", createQuotaMetaDataParameterMapper(quota)); getCallsHandler().executeModification(""InsertQuotaLimitation"", getFullQuotaParameterMap(quota)); "," getCallsHandler().executeModification(""InsertQuota"", createQuotaMetaDataParameterMapper(quota)); getCallsHandler().executeModification(""InsertQuotaLimitation"", getFullQuotaParameterMap(quota)); "
1," View view = View.inflate(context, R.layout.brick_nxt_motor_action, null); SeekBar noClick = (SeekBar) view.findViewById(R.id.seekBarSpeedMotorAction); noClick.setEnabled(false); return view; "," View XXXXX = View.inflate(context, R.layout.brick_nxt_motor_action, null); SeekBar XXXXX = (SeekBar) XXXXX.findViewById(R.id.seekBarSpeedMotorAction); XXXXX.setEnabled(false); return XXXXX; "
0," CamelContext camelContext = routeContext.getCamelContext(); FlowErrorProcessor processor = Contexts.beanOrNull(FlowErrorProcessor.class, camelContext); if (processor != null) { return processor; "," ProxyObjectCache newHashtable = new ProxyObjectCache( keyTable.length * 2); for (int i = keyTable.length; --i >= 0;) { if (keyTable[i] != null) { newHashtable.put(keyTable[i], valueTable[i]); "
0, CorbaServerRequestDispatcher sdel = (CorbaServerRequestDispatcher)(SDRegistry.get(scid)) ; if ( sdel == null ) sdel = (CorbaServerRequestDispatcher)(SDRegistry.get(defaultId)) ; return sdel; ," String v = src.getIdentifier().getVariable(); if (v == null) return; int c = Integer.parseInt(v); if (midi_rpn_connections.get(c) == null) midi_rpn_connections.put(c, new int[]{ix"
0, int vehicleCount = 0; for (final RoadSegment roadSegment : route) { final LaneSegment laneSegment = roadSegment.laneSegment(Lane.MOST_RIGHT_LANE); vehicleCount += laneSegment.vehicleCount(); ," float sina = FloatMath.sin(angle), cosa = FloatMath.cos(angle); this.m00 = cosa * scaleX; this.m01 = sina * scaleY; this.m10 = -sina * scaleX; this.m11 = cosa * scaleY; this.tx = tx; this.ty = ty; "
0," if (!dataSourcesMBeans.isEmpty()) { log.info(""UnRegistering DBPool MBeans""); for (DBPoolView dbPoolView : dataSourcesMBeans.values()) { if (dbPoolView != null) { removeMBean(dbPoolView.getName()); ", TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(CategoriesTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; 
0," validateParameters(network, ""id|name""); StringBuilder buf = new StringBuilder(); buf.append(getClusterLookup()); if (network.isSetId()) { buf.append(getNetworkLookup(network.getId())); "," mediaPlayer.release(); mediaPlayer = null; injectJS(""javascript:var ev = document.createEvent('Events');ev.initEvent('appMobi.audio.play.stop',true,true);document.dispatchEvent(ev);""); "
1, try { MarkupLanguageConfiguration copy = (MarkupLanguageConfiguration) super.clone(); copy.blocks = new ArrayList<Block>(blocks.size()); for (Block block : blocks) { copy.blocks.add(block.clone()); , try { MarkupLanguageConfiguration XXXXX = (MarkupLanguageConfiguration) super.clone(); XXXXX.blocks = new ArrayList<Block>(blocks.size()); for (Block block : blocks) { XXXXX.blocks.add(block.clone()); 
0, Class documentClass = null; TransactionalDocumentEntry entry = getTransactionalDocumentEntryBydocumentTypeName(documentTypeName); if (entry != null) { documentClass = entry.getDocumentClass(); , ArrayList related = new ArrayList( m_in.getDegree() + m_out.getDegree() - 2 ); Edge[] edges = m_in.getInEdgeArray(); for (int i = 0; i < edges.length; i++) { related.add(edges[i]); 
0, this.file = cacheObject.getDataFile( ); this.metaFile = cacheObject.getMetaFile( ); this.rsMeta = rs; this.rowCount = 0; this.tempDir = cacheObject.getCacheDir( ); this.session = session; ," for (Map.Entry<Class<?>, String> translation : exceptionTranslations.entrySet()) { if (translation.getKey().isInstance(throwable)) { return new CustomTranslationMessage(translation.getValue()); "
0, myConfigurationDirectory = path; File dir = path == null ? new File(IdeaSubversionConfigurationDirectory.getPath()) : new File(path); SVNConfigFile.createDefaultConfiguration(dir); clear(); , this._x = x; this._y = y; this._cellCountX = cellCountX; this._cellCountY = cellCountY; this._cellW = cellW; this._cellH = cellH; this._marginX = marginX; this._marginY = marginY; 
1, switch(pDirection) { case UP: this.setRotation(180); break; case DOWN: this.setRotation(0); break; case LEFT: this.setRotation(90); break; case RIGHT: this.setRotation(270); break; , switch(pDirection) { case UP: this.setRotation(180); break; case DOWN: this.setRotation(0); break; case LEFT: this.setRotation(90); break; case RIGHT: this.setRotation(270); break; 
1," super(shell, false, container, IResource.FILE); this.includeDartFiles = includeDartFiles; this.includeHtmlFiles = includeHtmlFiles; if (includeDartFiles) { initializeLibraries(); "," super(shell, false, container, IResource.FILE); this.includeDartFiles = includeDartFiles; this.includeHtmlFiles = includeHtmlFiles; if (includeDartFiles) { initializeLibraries(); "
1," progressDialog.dismiss(); Intent resultIntent = new Intent(); resultIntent.putExtra(EXTRA_RESULT_CARD_ID, currentCard.getId()); setResult(Activity.RESULT_OK, resultIntent); finish(); "," progressDialog.dismiss(); Intent XXXXX = new Intent(); XXXXX.putExtra(EXTRA_RESULT_CARD_ID, currentCard.getId()); setResult(Activity.RESULT_OK, XXXXX); finish(); "
1," final String callResponse = relaySlsbProxy.callEjbInSameAppSrvButOtherEar(); System.out.println(""SlsbClientServlet: Received call response: "" + callResponse); return callResponse; "," final String XXXXX = relaySlsbProxy.callEjbInSameAppSrvButOtherEar(); System.out.println(""SlsbClientServlet: Received call response: "" + XXXXX); return XXXXX; "
1," try { String URL = jtwit.TWITTER_URL + ""/"" + owner.screenName+ ""/lists/"" + URLEncoder.encode(slug, ""utf-8"") + "".json?_method=DELETE""; http.post(URL, null, http.canAuthenticate()); "," try { String XXXXX = jtwit.TWITTER_XXXXX + ""/"" + owner.screenName+ ""/lists/"" + XXXXXEncoder.encode(slug, ""utf-8"") + "".json?_method=DELETE""; http.post(XXXXX, null, http.canAuthenticate()); "
0," if(className == null) return null; Class<?> factoryClass = ReflectUtils.loadClass(className.trim()); return (SerializerFactory) ReflectUtils.callConstructor(factoryClass, new Object[] {", super.visitJavaFile(file); final PsiPackage[] packages = ClassUtils.calculatePackagesRecursive(file); for (PsiPackage aPackage : packages) { numTodoCommentsPerPackage.createBucket(aPackage); 
0, CommandType type = command.getType(); if (type == CommandType.RESPONSE) { Response response = (Response)command; return _setOfResponsesToExpect.contains(response.getInReplyToCommandType()); ," CmsWidgetFactoryRegistry.instance().registerFactory(WIDGET_TYPE, new I_CmsFormWidgetFactory() { public I_CmsFormWidget createWidget(Map<String, String> widgetParams) { return new CmsTextBox(); "
1," this.MOPTEntries = new MOPTEntry[(int) (size / 20)]; for (int i = 0; i < (size / 20); i++) { this.MOPTEntries[i] = new MOPTEntry(); this.MOPTEntries[i].setByteBuffer(bb, offset + (20 * i)); "," thXXXXXs.MOPTEntrXXXXXes = new MOPTEntry[(XXXXXnt) (sXXXXXze / 20)]; for (XXXXXnt XXXXX = 0; XXXXX < (sXXXXXze / 20); XXXXX++) { thXXXXXs.MOPTEntrXXXXXes[XXXXX] = new MOPTEntry(); thXXXXXs.MOPTEntrXXXXXes[XXXXX].setByteBuffer(bb, offset + (20 * XXXXX)); "
0," Set<VersionlessProjectKey> plugins = childPluginRefs.get( owner ); if ( plugins == null ) { plugins = new HashSet<VersionlessProjectKey>(); childPluginRefs.put( owner, plugins ); "," final TargetChooserDialog dialog = new TargetChooserDialog(myContext.getProject(), myTarget); dialog.show(); if (dialog.isOK()) { myTarget = dialog.getSelectedTarget(); updatePanel(); "
1, ProjectIdentifier loopProject = project.getParentIdentifier(); while (loopProject != null) { subProjects.get(loopProject.getPath()).add(project); loopProject = loopProject.getParentIdentifier(); , ProjectIdentifier XXXXX = project.getParentIdentifier(); while (XXXXX != null) { subProjects.get(XXXXX.getPath()).add(project); XXXXX = XXXXX.getParentIdentifier(); 
1," super(group.getTemplatePresentation().getText(), group.getTemplatePresentation().getDescription(), group.getTemplatePresentation().getIcon()); myGroup = group; myToolbarComponent = toolbarComponent; "," super(group.getTemplatePresentation().getText(), group.getTemplatePresentation().getDescription(), group.getTemplatePresentation().getIcon()); myGroup = group; myToolbarComponent = toolbarComponent; "
0," super(aMessage + "" : "" + exception.getTargetException().getClass().getName() + ""[message="" + exception.getTargetException().getMessage() + ""]""); targetException = exception.getTargetException(); ", m_editAdapters.commit(onSave); if(m_mform.getToolkit() instanceof IEditEventBusProvider) { ((IEditEventBusProvider)m_mform.getToolkit()).getEventBus().publishEvent(new ChangeEvent(m_input)); 
1," if(env.getPlayer().getTribe().equals(""PC"")) { int targetId = 0; if (env.getVisibleObject() instanceof Npc) targetId = ((Npc) env.getVisibleObject()).getNpcId(); return (targetId == 730335); "," if(env.getPlayer().getTribe().equals(""PC"")) { int XXXXX = 0; if (env.getVisibleObject() instanceof Npc) XXXXX = ((Npc) env.getVisibleObject()).getNpcId(); return (XXXXX == 730335); "
1, int result = sourceName.hashCode(); result = 31 * result + eventCategory.hashCode(); result = 31 * result + metric.hashCode(); result = 31 * result + samples.hashCode(); return result; , int XXXXX = sourceName.hashCode(); XXXXX = 31 * XXXXX + eventCategory.hashCode(); XXXXX = 31 * XXXXX + metric.hashCode(); XXXXX = 31 * XXXXX + samples.hashCode(); return XXXXX; 
1, if (msg.getFeatureID(ResourceSet.class) == ResourceSet.RESOURCE_SET__RESOURCES) { switch (msg.getEventType()) { case Notification.REMOVE_MANY: { if (msg.getNewValue() instanceof int[]) { return; , if (msg.getFeatureID(ResourceSet.class) == ResourceSet.RESOURCE_SET__RESOURCES) { switch (msg.getEventType()) { case Notification.REMOVE_MANY: { if (msg.getNewValue() instanceof int[]) { return; 
0," synchronized (output) { super.printStackTrace(output); final Throwable throwable = getException(); if (throwable != null) { output.print(""Caused by: ""); throwable.printStackTrace(output); "," StringWriter sWriter = new StringWriter(); PrintWriter pWriter = new PrintWriter( sWriter ); error.printStackTrace( pWriter ); System.err.println( ""[error] "" + sWriter.toString() ); "
0," monitor.down = false; monitor.update(); monitor.down = true; monitor.update(); monitor.down = true; monitor.update(); assertThat(monitor, MonitorMatcher.monitor(false, false, true)); "," String msgText = getTextResolver(context).getExceptionMessage(e); FacesMessage msg = new FacesMessage(FacesMessage.SEVERITY_ERROR, msgText, msgText); context.addMessage(tag.getClientId(), msg); "
0, int errorCount = 0; for (CompanyStatistics companyStatistics : _serverStatistics.getCompanyStatisticsSet()) { errorCount += companyStatistics.getRequestStatistics().getErrorCount(); ," return tabularData(""managedclass"", ""managed class type"", ""Managed class of "" + reloadableEntityManagerFactory.getPUname(), reloadableEntityManagerFactory.getManagedClasses(), Info.CLASS); "
1," ValidationInfo info = new ValidationInfo(); info.maxWidth = width; info.maxHeight = height; return imageEntryInternalValidate(validator, provider, product, info, F_EXACT_IMAGE_SIZE); "," ValidationInfo XXXXX = new ValidationInfo(); XXXXX.maxWidth = width; XXXXX.maxHeight = height; return imageEntryInternalValidate(validator, provider, product, XXXXX, F_EXACT_IMAGE_SIZE); "
1, assertLoadAndSaveSecurity(makeEURODOLLARFutureOptionSecurity()); assertLoadAndSaveSecurity(makeLIBORFutureOptionSecurity()); assertLoadAndSaveSecurity(makeEURIBORFutureOptionSecurity()); , assertLoadAndSaveSecurity(makeEURODOLLARFutureOptionSecurity()); assertLoadAndSaveSecurity(makeLIBORFutureOptionSecurity()); assertLoadAndSaveSecurity(makeEURIBORFutureOptionSecurity()); 
1," if (stroke == null || scale != strokeScale) { if (dashStyle == DashStyle.PLAIN_STROKE) { stroke = new BasicStroke((float) (lineWidth * scale), capStyle.ordinal(), joinStyle.ordinal()); "," if (stroke == null || scale != strokeScale) { if (dashStyle == DashStyle.PLAIN_STROKE) { stroke = new BasicStroke((float) (lineWidth * scale), capStyle.ordinal(), joinStyle.ordinal()); "
0, if (fReverseModeEnabled && doCanResume(context)) { ICommand<MIInfo> cmd = null; if (context instanceof IContainerDMContext) { cmd = fCommandFactory.createMIExecReverseContinue(context); , ClientSession session = null; try { session = sessionFactory.createSession(); ClientSession.QueueQuery query = session.queueQuery(new SimpleString(subscriptionId)); return query.isExists(); 
1," EventTransaction transaction = null; if (isDead.get()) throw new IllegalStateException(""Events system is dead""); while ((transaction = transactionsQueue.poll()) != null){ try { execute(transaction); "," EventTransaction XXXXX = null; if (isDead.get()) throw new IllegalStateException(""Events system is dead""); while ((XXXXX = XXXXXsQueue.poll()) != null){ try { execute(XXXXX); "
0, for (int i = 0; i < getChildCount(); i++) { MPSTreeNode node = (MPSTreeNode) getChildAt(i); if (node instanceof SNodeTreeNode) { if (((SNodeTreeNode) node).hasErrors()) return true; , ModuleRevisionId mrid = dd.getDependencyRevisionId(); if ((version == null || version.equals(mrid.getRevision())) && (branch == null || branch.equals(mrid.getBranch()))) { return dd; 
1," mXMPPService = service; mHost = StringUtils.parseName(mXMPPService.getPreferences().getString( ""pref_xmpp_user"", """")); mResource = mXMPPService.getPreferences().getString(""pref_resource"", ""mxa""); "," mXMPPService = service; mHost = StringUtils.parseName(mXMPPService.getPreferences().getString( ""pref_xmpp_user"", """")); mResource = mXMPPService.getPreferences().getString(""pref_resource"", ""mxa""); "
0, Statement stmt = null; ResultSet rs = null; try { stmt = conn.createStatement(); stmt.setQueryTimeout(queryTimeoutSeconds); rs = stmt.executeQuery(getValidateSql()); if (!rs.next()) { return false; ," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "
0," return ""TimelineInteractionEvent [timeline="" + timeline + "", sourceBand="" + sourceBand + "", interaction="" + interaction + "", bandInformations="" + Arrays.toString(bandInformations) + ""]""; ", if (other == this) return true; if (other == null) return false; if (other instanceof ApplicationMetadataImpl) { return appScope.equals(((ApplicationMetadataImpl)other).appScope); 
1," displayEdit.setText(views.get(""Address"").getText()); manualEntry = new JSONObject(); for(String field : fields) try { manualEntry.put(field.toLowerCase(), views.get(field).getText()); "," displayEdit.setText(views.get(""Address"").getText()); manualEntry = new JSONObject(); for(String field : fields) try { manualEntry.put(field.toLowerCase(), views.get(field).getText()); "
0," assertThat(""testFormKey 0"",MetadataField.formKey(""dc"", ""elem"", null), equalTo(""dc_elem"")); assertThat(""testFormKey 1"",MetadataField.formKey(""dc"", ""elem"", ""qual""), equalTo(""dc_elem_qual"")); "," s.minerals -= 50; s.consumeLarva(e); s.supplyUsed += 1; s.addFutureAction(24, new Runnable() { @Override public void run() { if (e.debug) e.obtained(s,"" Zergling+2""); s.zerglings += 2; "
0," Services.registerService( DataManager.class, ""Access to the sources, to its properties (indexes, etc.) and its contents, either raster or vectorial"", new DefaultDataManager(dsf)); "," ASTAdditiveExpression additive = sn.getFirstDescendantOfType(ASTAdditiveExpression.class); if (additive == null || additive.getType() != null && !TypeHelper.isA(additive, String.class)) { return 0; "
0, if (fileManagerShortcutListener == null) { fileManagerShortcutListener = new SelectHandler() { @Override public void onSelect(SelectEvent event) { getDesktopAppPresenter().onOpenFileManager(); , TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(Tags527LatestTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; 
1," File file = null; String certificateName = null; if (auth instanceof SVNSSLAuthentication) { file = ((SVNSSLAuthentication) auth).getCertificateFile(); certificateName = ""client certificate""; "," File XXXXX = null; String XXXXX = null; if (auth instanceof SVNSSLAuthentication) { XXXXX = ((SVNSSLAuthentication) auth).getCertificateFile(); XXXXX = ""client certificate""; "
1, long[] tmp = new long[shard.nodeArray.length]; NodeValue last = null; int count=0; for (NodeValue val : shard.nodeArray){ if (last != null && val.getId().time == last.getId().time){ continue; , long[] tmp = new long[shard.nodeArray.length]; NodeValue XXXXX = null; int count=0; for (NodeValue val : shard.nodeArray){ if (XXXXX != null && val.getId().time == XXXXX.getId().time){ continue; 
0, final AbstractVcs[] vcss = ProjectLevelVcsManager.getInstance(myProject).getAllActiveVcss(); for (AbstractVcs vcs : vcss) { if (vcs.getCachingCommittedChangesProvider() != null) { return true; ," URI resourceURI = EditUIUtil.getURI(getEditorInput()); Exception exception = null; Resource resource = null; try { resource = editingDomain.getResourceSet().getResource(resourceURI, true); "
0," for (int i = 0; i < typeList.size(); i++) { Type type = getType(i); String name = type.name; Color color = type.color; int fontStyle = type.fontstyle; setStyle(document, name, color, fontStyle); ", float dx1 = end.getX() - start.getX(); float dy1 = end.getY() - start.getY(); float dx2 = -dy1; float dy2 = dx1; float denom = (dy2 * dx1) - (dx2 * dy1); if (denom == 0) { return Color.black; 
0," SampleProjectsDialog sampleProjectsDialog = new SampleProjectsDialog( GuiUtils.getOwnerFrame(this), true); GuiUtils.centerOnScreen(sampleProjectsDialog); sampleProjectsDialog.setVisible(true); "," double d = theEntity.getDistanceSq(entityPosX, entityPosY, entityPosZ); return field_48329_i >= 0 && !targetDoor.func_48213_h(theEntity.worldObj, entityPosX, entityPosY, entityPosZ) && d < 4D; "
1," if (this.tables.containsKey(table.toLowerCase())) return null; DatabaseTableFlatfile tableObject; try { tableObject = new DatabaseTableFlatfile(this, table.toLowerCase() + "".txt""); "," if (this.tables.containsKey(table.toLowerCase())) return null; DatabaseTableFlatfile tableObject; try { tableObject = new DatabaseTableFlatfile(this, table.toLowerCase() + "".txt""); "
0," assert isEditable() : ""Cannot get a FieldUpdater type if not marked as @Editable""; return context.getTypeOracle().findType(Name.getSourceNameForClass(method.getAnnotation(Editable.class).value())); "," MethodExample2Binding b = new MethodExample2Binding(new MethodExample2()); assertEquals(""1"", b.name().get()); assertEquals("""", b.getName()); assertEquals(""2"", b.getNameBinding().get()); "
1," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; "," EditorCell XXXXX = null; XXXXX = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, XXXXX, editorContext); return XXXXX; "
0," RioStatement statement = this.getFirstStatement(uri, IConstants.DCTERMS_DESCRIPTION, null); if( statement != null ) { RioValue value = statement.getObject(); return value.stringValue(); "," setTriStateAllowed(true); setStateList(Arrays.asList(SelectBooleanCheckbox.SELECTED_STATE, SelectBooleanCheckbox.UNSELECTED_STATE)); setRendererType(""org.openfaces.SelectAllCheckboxRenderer""); "
0, if( dockable instanceof CommonDockable ){ CDockable cdockable = ((CommonDockable)dockable).getDockable(); String key = control.shouldStore( cdockable ); if( key != null ){ addEmpty( key ); ," setIgnoreNamespaces(true); setSerializeAsArray(true); setArrayKeys(Arrays.asList(SUBSCRIPTIONS_ARRAY)); setOutTransformElements(Collections.singletonMap( ""{"" + LOGGING_NAMESPACE + """
1, if (this == obj) return true; if (obj == null) return false; if (!(obj instanceof ForceConnectorConfig)) return false; return cacheId.equals(((ForceConnectorConfig) obj).cacheId); , if (this == obj) return true; if (obj == null) return false; if (!(obj instanceof ForceConnectorConfig)) return false; return cacheId.equals(((ForceConnectorConfig) obj).cacheId); 
0," int old = this.activityCount; this.activityCount = activityCount; if (old != activityCount) { setChanged(); notifyObservers(new StatModification(""activityCount"", old, activityCount)); "," assert (useQuantization); stack.vectors.push(); try { int curNodeSubPart = -1; Vector3f[] triangleVerts = new Vector3f[] { stack.vectors.get(), stack.vectors.get(), stack.vectors.get() "
0," tag = HTML.Tag.S; assertEquals(""s"", tag.toString()); assertFalse(""breaks Flow"", tag.breaksFlow()); assertFalse(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); "," final Issue issue = getIssue(); if (isFieldRequired(issue, fldDate)) { this.setExceptionMessage( fldDate, fldDate.getName() + "" is required."", fldDate.getName() + "" is required."" ); "
0, synchronized (webs) { Iterator<Block> i = webs.iterator(); while (i.hasNext()) { Block b = i.next(); i.remove(); plugin.removeWeb(b); if (b.getType() == Material.WEB) { b.setType(Material.AIR); , final StringBuilder sb = new StringBuilder(); sb.append(gen.getPathFromScopePath(scopePath)); sb.append(SCOPE_PATH_SEPARATOR); sb.append(gen.createName(scopePath)); return sb.toString(); 
1," gc.setForeground(bottomright); gc.drawLine(x + w, y, x + w, y + h); gc.drawLine(x, y + h, x + w, y + h); gc.setForeground(topleft); gc.drawLine(x, y, x + w - 1, y); gc.drawLine(x, y, x, y + h - 1); "," gc.setForeground(bottomright); gc.drawLine(x + w, y, x + w, y + h); gc.drawLine(x, y + h, x + w, y + h); gc.setForeground(topleft); gc.drawLine(x, y, x + w - 1, y); gc.drawLine(x, y, x, y + h - 1); "
1, boolean hasFailures = testReport.hasFailures(); boolean isSuite = testReport.isSuite(); String testResultSrc = null; if (isSuite) { if (hasFailures) { testResultSrc = adjusted(TSUITE_ERROR_GIF); , boolean XXXXX = testReport.XXXXX(); boolean XXXXX = testReport.XXXXX(); String XXXXX = null; if (XXXXX) { if (XXXXX) { XXXXX = adjusted(TSUITE_ERROR_GIF); 
0," if ( supportsLiteralValue() ) { final List<ConstantValueNode> literals = ASTUtils.getNodesByType( this , ConstantValueNode.class , false ); if ( literals.size() == 1 ) { return literals.get(0); "," KAndJoin join = newAndJoin(0, 1); this.procedure.setJoin(join); KProcess process = this.program.newProcess(null); new KProcessor().execute(process); assertFalse(join.isEnabled(process)); "
0, Object obj = SessionHandleAdapter.getInstance( ) .getReportDesignHandle( ); LibraryHandle moduleHandle; if ( ( obj == null ) || ( !( obj instanceof LibraryHandle ) ) ) { return false; , version++; boolean removeIsFromBase = fdata.getGraph().contains(t); fdata.getGraph().delete(t); if (useTGCCaching) { if (transitiveEngine.delete(t)) { if (isPrepared) { bEngine.deleteAllRules(); 
0," final int idx = _control.getSelection(); final String message = new StringBuilder() .append(idx) .append("":"") .append(_control.getDataPoints()[idx]) .toString(); _control.setLabel(message); ", editorComponent = valueEditor; editorValueGem = valueGem; editorValueGemListener = new ValueGemChangeListener() { public void valueChanged(ValueGemChangeEvent e) { tree.cancelEditing(); 
0," affine.set( affine.get( 0, 3 ) - x, 0, 3 ); affine.set( affine.get( 1, 3 ) - y, 1, 3 ); affine.scale( s ); affine.set( affine.get( 0, 3 ) + x, 0, 3 ); affine.set( affine.get( 1, 3 ) + y, 1, 3 ); ", IModelElement parent = method.getParent(); if (parent instanceof IType) { RecordTypeDef typeDef = (RecordTypeDef) getTypeDef((IType) parent); return typeDef.getFields().get(method.getElementName()); 
1," String key = getActionNamePrefix() + action; String value = LanguageUtil.get(locale, key, null); if ((value == null) || (value.equals(key))) { value = PortletResourceBundles.getString(locale, key); "," String XXXXX = getActionNamePrefix() + action; String XXXXX = LanguageUtil.get(locale, XXXXX, null); if ((XXXXX == null) || (XXXXX.equals(XXXXX))) { XXXXX = PortletResourceBundles.getString(locale, XXXXX); "
1," configureState(renderingComponent, context); configureColors(renderingComponent, context); configureBorder(renderingComponent, context); configurePainter(renderingComponent, context); "," configureState(renderingComponent, context); configureColors(renderingComponent, context); configureBorder(renderingComponent, context); configurePainter(renderingComponent, context); "
1," PlatformUI.getPreferenceStore().addPropertyChangeListener(this); JFaceResources.getColorRegistry().addListener(this); setOwnerDrawEnabled(showColoredLabels()); super.initialize(viewer, column); "," PlatformUI.getPreferenceStore().addPropertyChangeListener(this); JFaceResources.getColorRegistry().addListener(this); setOwnerDrawEnabled(showColoredLabels()); super.initialize(viewer, column); "
1, Properties bundleProperties = null; bundleProperties = (Properties) model.getUserObject(); if (bundleProperties == null) { bundleProperties = new Properties(); model.setUserObject(bundleProperties); , Properties XXXXX = null; XXXXX = (Properties) model.getUserObject(); if (XXXXX == null) { XXXXX = new Properties(); model.setUserObject(XXXXX); 
0, if (this == obj) return true; if (obj == null) return false; if (getClass() != obj.getClass()) return false; CascadeFrom other = (CascadeFrom) obj; if (id != other.id) return false; return true; ," super.setResponseResource(new Resource[] { new ClassPathResource(""janus/janus-response-consumerkey3-entityid.json""), new ClassPathResource(""janus/janus-response-consumerkey3-metadata.json"") "
0," List<ParseResults> results = new LinkedList<ParseResults>(); for (String r : StringUtils.split(ranges, ',')) results.add(parseMediaRange(r)); return qualityParsed(mimeType, results); "," return new IpsecVpnTunnel (name, description, ipsecVpnPeer, peerIpAddress, peerNetworkAddress, peerNetworkMask, sharedSecret, encryptionProtocol, mtu, isEnabled, isOperational, errorDetails); "
0," client.path(""storages""); client.type(""text/plain""); Response response = client.post(""isNotXml""); assertEquals(Status.UNSUPPORTED_MEDIA_TYPE.getStatusCode(), response.getStatus()); "," final Cursor cursor; if ("""".equals(mLocale)) { cursor = context.getContentResolver().query(UserDictionary.Words.CONTENT_URI, HAS_WORD_PROJECTION, HAS_WORD_SELECTION_ALL_LOCALES, new String[] { word "
0, JMenuItem item = new JMenuItem() { private static final long serialVersionUID = 1L; @Override public FontMetrics getFontMetrics(Font font) { return BasicMenuItemUITest.this.getFontMetrics(font); , if (getEffected() instanceof L2Npc) { L2Npc npc = (L2Npc) getEffected(); npc.setCollisionRadius(npc.getTemplate().fCollisionRadius); getEffected().stopAbnormalEffect(AbnormalEffect.GROW); 
0," Class<?> baseType = super.getPropertyType(propertyName); Object rt = super.getPropertyValue(target, propertyName); if (baseType.isEnum()) return ((Enum<?>) rt).name(); return rt; "," _header = new byte[8]; _data = new byte[0]; LittleEndian.putShort(_header, 0, (short)0x10); LittleEndian.putShort(_header, 2, (short)getRecordType()); LittleEndian.putInt(_header, 4, _data.length); "
1," final GamePacketReader reader = new GamePacketReader(packet); final int otherId = (int) reader.getUnsigned(DataType.SHORT, DataOrder.LITTLE); return new FirstPlayerOptionEvent(otherId); "," final GamePacketReader reader = new GamePacketReader(packet); final int otherId = (int) reader.getUnsigned(DataType.SHORT, DataOrder.LITTLE); return new FirstPlayerOptionEvent(otherId); "
1," Document doc = new PlainDocument(); pf = new JPasswordField(doc, ""abc"", 5); assertEquals(doc, pf.getDocument()); assertEquals(5, pf.getColumns()); assertEquals(""abc"", pf.getText()); "," Document XXXXX = new PlainDocument(); pf = new JPasswordField(XXXXX, ""abc"", 5); assertEquals(XXXXX, pf.getDocument()); assertEquals(5, pf.getColumns()); assertEquals(""abc"", pf.getText()); "
1," Logger.info(""BEGIN JOB JobMajUserRegisteredTicketing for member with id %d"", idMember); Member member = Member.findById(idMember); if (member != null) { WeezEvent.updateRegisteredAttendee(member); "," Logger.info(""BEGIN JOB JobMajUserRegisteredTicketing for XXXXX with id %d"", idMember); Member XXXXX = Member.findById(idMember); if (XXXXX != null) { WeezEvent.updateRegisteredAttendee(XXXXX); "
0," WebDriverWait wait = new WebDriverWait(getWebDriver(), 5); getPage().next(); wait.until(new CurrentPageNumberEquals(2)); getPage().previous(); wait.until(new CurrentPageNumberEquals(1)); "," ComponentProperties cp= new ComponentProperties(dspName,extend,implement,hint,output,callPath,realPath,_synchronized,javaAccessClass,persistent,accessors,meta); cp.properties=properties; return cp; "
0," String oldClass = class_; class_ = newClass; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, XhtmlPackage.XHTML_SAMP_TYPE__CLASS, oldClass, class_)); ", HttpSession session = this.getRequest().getSession(); String anchorDest = this.getLinkAttributeHelper().buildEntryContentAnchorDest(session); this.setEntryContentAnchorDest(anchorDest); 
0," Assert.assertFalse(isCache); String value = getExistingContent().get(name); Assert.assertNotNull(""non-existing file touched: "" + value); generatedContent.put(name, value); return true; ", PrincipalProxy testPrincipalProxy = mock(PrincipalProxy.class); when(testPrincipalProxy.getUserPrincipal()).thenReturn(new UserPrincipal(user)); testAction.setPrincipalProxy(testPrincipalProxy); 
1," Player player = game.getPlayer(id); MageObject targetSource = game.getObject(attackerId); if (player != null) { return player.canBeTargetedBy(targetSource, game) && filter.match(player, game); "," Player XXXXX = game.getPlayer(id); MageObject XXXXX = game.getObject(attackerId); if (XXXXX != null) { return XXXXX.canBeTargetedBy(XXXXX, game) && filter.match(XXXXX, game); "
1," WidgetAdapter adapter = new WidgetAdapter(); IRenderRunnable runnable = mock( IRenderRunnable.class ); adapter.setRenderRunnable( runnable ); assertSame( runnable, adapter.getRenderRunnable() ); "," WidgetAdapter XXXXX = new WidgetAdapter(); IRenderRunnable XXXXX = mock( IRenderRunnable.class ); XXXXX.setRenderRunnable( XXXXX ); assertSame( XXXXX, XXXXX.getRenderRunnable() ); "
1," payments.clear(); String[] lines = payData.split(""\n""); for(String line:lines) { if(line.length()==0) continue; String[] parts = line.split(""-=-""); payments.put(parts[0], parts[1]); "," payments.clear(); String[] lines = payData.split(""\n""); for(String line:lines) { if(line.length()==0) continue; String[] parts = line.split(""-=-""); payments.put(parts[0], parts[1]); "
0, this.retransmitter = retransmitter; this.storage = storage; numReplicas = ProcessDescriptor.getInstance().numReplicas; prepareEpoch = new long[numReplicas]; prepared = new BitSet(); ," Plugin plugin = pluginManager.getPlugin(getPlugin()); Map props = new HashMap(); props.put(""pluginManager"", pluginManager); pluginManager.testPlugin(getPlugin(), getPluginLocation(), props, true); "
0," if ( fmeasure == null ) { fmeasure = new Combo( parent, SWT.READ_ONLY ); for ( int i = 0; i < fMeasureNamesAndValues.length; i++ ) { fmeasure.add( fMeasureNamesAndValues[i][0], i ); ", StringBuilder sb = new StringBuilder(); try { BufferedReader in = new BufferedReader(new FileReader(logpath)); String input; while ((input = in.readLine()) != null) { sb.append(input).append('\n'); 
1," valve.setToLabel(null); assertNull(valve.getToLabel()); valve.setToLabel("" ""); assertNull(valve.getToLabel()); valve.setToLabel("" test ""); assertEquals(""test"", valve.getToLabel()); "," valve.setToLabel(null); assertNull(valve.getToLabel()); valve.setToLabel("" ""); assertNull(valve.getToLabel()); valve.setToLabel("" test ""); assertEquals(""test"", valve.getToLabel()); "
0," Preconditions.checkNotNull(connectTimeout, ""connectionTimeout""); if (connectTimeout.toMillis() < 1) { throw new IllegalArgumentException(""Connection timeout must be greater than 0""); "," if (model.getDestination() == null || model.getMoney().getAmount() == null || model.getMoney().getCurrency() == null) { view.getStatusBar().setText(""Complete all fields to send message""); return; "
0," if (output == null) return """"; String[] dirs = StringUtil.split(output, ';'); if (dirs.length > 1 && dirs[1].length() > 0) return dirs[1]; return (fallback && dirs.length > 0 ? dirs[0] : """"); "," if (value != null) { sb.appendHtmlConstant(""<span title=\"""" + title + ""\"" "" + ""style=\""cursor: pointer;\"">""); sb.appendHtmlConstant(imagePrototype.getHTML()); sb.appendHtmlConstant(""</span>""); "
0, List<String> names = new ArrayList<String>(); for(int i = 0; i < 1000;i++) { String name = CompilerUtils.generateClassName(Comparator.class); assertFalse(names.contains(name)); names.add(name); , this.repositoryService = repositoryService; this.templateService = templateService; this.newFolksonomyService = newFolksonomyService; this.manageDriveService = manageDriveService; 
1, interpreter = interpreterProvider.get(); classLoader = classLoaderProvider.getClassLoader(xPackage.eResource().getResourceSet()); if (classLoader != null) { interpreter.setClassLoader(classLoader); , interpreter = interpreterProvider.get(); classLoader = classLoaderProvider.getClassLoader(xPackage.eResource().getResourceSet()); if (classLoader != null) { interpreter.setClassLoader(classLoader); 
0," int xVAL, zVAL; if(r.getL1().toBukkitLocation().getBlockX() > r.getL2().toBukkitLocation().getBlockX()){ xVAL = r.getL1().toBukkitLocation().getBlockX() - r.getL2().toBukkitLocation().getBlockX(); "," String result = getSimpleName(); if (isGeneric()) { StringBuilder b = new StringBuilder(); for (TypeParameterM param : getTypeParameters()) { if (b.length() > 0) { b.append("", ""); "
1," Jooc.warning(getNamespace().getSymbol(), ""namespaces are not yet implemented, ignoring use namespace "" + getNamespace().getName()); getNamespace().analyze(this); super.analyze(parentNode); "," Jooc.warning(getNamespace().getSymbol(), ""namespaces are not yet implemented, ignoring use namespace "" + getNamespace().getName()); getNamespace().analyze(this); super.analyze(parentNode); "
1," super(); this.routeWaypoint = routeWaypoint; this.color = color; this.width = width; this.height = height; this.circle = new WaypointCircle(route, routeIndex, wpIndex); initGraphics(); "," super(); this.routeWaypoint = routeWaypoint; this.color = color; this.width = width; this.height = height; this.circle = new WaypointCircle(route, routeIndex, wpIndex); initGraphics(); "
0, viewType = Vt; bandHeight = Bh; dtedLevel = Dl; slopeAdjust = Sa; xPixInterval = xpi; yPixInterval = ypi; subx = Subx; suby = Suby; lon = Lon; lat = Lat; height = Height; width = Width; ," int line = getCaretLine(); int lineStart = getLineStartOffset(line); int offset = Math.max(0,Math.min(getLineLength(line) - 1, getCaretPosition() - lineStart)); return scrollTo(line,offset); "
0," if (_scheme.equals("""")) throw new NullPointerException(""Should not be trying to get the parent of NULL URL""); try { if (_fragment != null || _query != null) { return new HttpUrl(getSHPP()); ", Throwable top = t; if (t instanceof CoreException) { CoreException de = (CoreException) t; IStatus status = de.getStatus(); if (status.getException() != null) { top = status.getException(); 
1," String name = ""foo""; CoordinateReferenceSystem crs = DefaultGeographicCRS.WGS84; DefaultGridFeatureBuilder setter = new DefaultGridFeatureBuilder(name, crs); assertSetter(setter, name, crs); "," String name = ""foo""; CoordinateReferenceSystem crs = DefaultGeographicCRS.WGS84; DefaultGridFeatureBuilder setter = new DefaultGridFeatureBuilder(name, crs); assertSetter(setter, name, crs); "
0," assertEquals(IdxClassSize.HASHMAP, ClassSize.estimateBase(HashMap.class, false)); assertEquals(IdxClassSize.OBJECT_ARRAY_LIST, ClassSize.estimateBase(ObjectArrayList.class, false)); ", gameChangeHandler.post(new Runnable() { @Override public void run() { if (myTextView!=null) { myTextView.setText(game.getActMove().getComment()); CommentHelper.linkifyCommentTextView(myTextView); 
1," checkNotNull(scope); checkNotNull(monitor); if (scope.getOrigin() != null) { checkState(conflictDetector != null, ""ConflictDetector must not be null to compute a 3-way comparison""); "," checkNotNull(scope); checkNotNull(monitor); if (scope.getOrigin() != null) { checkState(conflictDetector != null, ""ConflictDetector must not be null to compute a 3-way comparison""); "
0, double size = defaultValue; try { size = Double.parseDouble(textBox.getText().trim()); if (size < kMimimumSize) size = defaultValue; else if (size > kMaximumSize) size = defaultValue; ," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (mixed: ""); result.append(mixed); result.append(')'); return result.toString(); "
1, this.setForegroundColor( Display.getCurrent( ) .getSystemColor( SWT.COLOR_LIST_SELECTION_TEXT ) ); this.setBackgroundColor( Display.getCurrent( ) .getSystemColor( SWT.COLOR_LIST_SELECTION ) ); , this.setForegroundColor( Display.getCurrent( ) .getSystemColor( SWT.COLOR_LIST_SELECTION_TEXT ) ); this.setBackgroundColor( Display.getCurrent( ) .getSystemColor( SWT.COLOR_LIST_SELECTION ) ); 
1," StringBuilder sb = new StringBuilder(); sb.append(""struct<""); List<? extends StructField> fields = soi.getAllStructFieldRefs(); for (int i = 0; i < fields.size(); i++) { if (i > 0) { sb.append("",""); "," StrXXXXXngBuXXXXXlder XXXXX = new StrXXXXXngBuXXXXXlder(); XXXXX.append(""struct<""); LXXXXXst<? extends StructFXXXXXeld> fXXXXXelds = soXXXXX.getAllStructFXXXXXeldRefs(); for (XXXXXnt XXXXX = 0; XXXXX < fXXXXXelds.sXXXXXze(); XXXXX++) { XXXXXf (XXXXX > 0) { XXXXX.append("",""); "
0," String label = ((XhtmlHeadingType)object).getId(); return label == null || label.length() == 0 ? getString(""_UI_XhtmlHeadingType_type"") : getString(""_UI_XhtmlHeadingType_type"") + "" "" + label; "," long cId, nId; cId = nId = -1; if (food != null) nId = food.getId(); if (mFood != null) cId = mFood.getId(); if (nId == cId) return; mModified = true; mStatusCacheValid = false; mFood = food; "
0," String oldStyle = style; style = newStyle; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, XhtmlPackage.XHTML_OBJECT_TYPE__STYLE, oldStyle, style)); "," int open = s.indexOf(""${"") ; if (open == -1) return s ; int close = 0 ; StringBuffer buf = new StringBuffer() ; while (open != -1) { buf.append(s.substring(close, open)) ; close = s.indexOf('"
0," int iter = 0; double oldPerplexity = 0; while (iter < minIter) { trainDocuments(testFraction); if (verbose) { log.info(""model after: "" + iter + "": "" + modelTrainer.getReadModel().toString()); ", if(drag) { double a = (double)(c.y - (sflarp.sz().y / 2)) / (double)(sz.y - sflarp.sz().y); if(a < 0) a = 0; if(a > 1) a = 1; val = (int)Math.round(a * (max - min)) + min; changed(); 
1," RateMeasurement base = new BasicRateMeasurement(50, 100); RateMeasurement subj = new BasicRateMeasurement(100, 100); BasicRiskRatio or = new BasicRiskRatio(base, subj); assertTrue(or.isDefined()); "," RateMeasurement XXXXX = new BasicRateMeasurement(50, 100); RateMeasurement XXXXX = new BasicRateMeasurement(100, 100); BasicRiskRatio XXXXX = new BasicRiskRatio(XXXXX, XXXXX); assertTrue(XXXXX.isDefined()); "
1," expectValidatePrincipal(false); expectAuthorizePrincipal(false); expectExecutePrincipal(false); coreTest(false, serviceAction, serviceActionInnerContextNullPrincipal, childParam); "," expectValidatePrincipal(false); expectAuthorizePrincipal(false); expectExecutePrincipal(false); coreTest(false, serviceAction, serviceActionInnerContextNullPrincipal, childParam); "
0," if (manGroup == null) { StringTokenizer tok = new StringTokenizer(mandDataset, ""/""); if (tok.countTokens() != 2) { throw new IllegalStateException( ""Illegal mandatory dataset name "" + mandDataset); ", Project project = PlatformDataKeys.PROJECT.getData(e.getDataContext()); assert project != null; ProjectUtil.closeAndDispose(project); RecentProjectsManagerBase.getInstance().updateLastProjectPath(); 
1," SModel m = getModel(); SNode s1 = SModelOperations.getRootByName(m,""c1""); SNode s2 = SModelOperations.getRootByName(m,""c1""); Assert.assertEquals(null, NodesMatcher.matchNodes(s1, s2)); "," SModel XXXXX = getModel(); SNode XXXXX = SModelOperations.getRootByNaXXXXXe(XXXXX,""c1""); SNode XXXXX = SModelOperations.getRootByNaXXXXXe(XXXXX,""c1""); Assert.assertEquals(null, NodesMatcher.XXXXXatchNodes(XXXXX, XXXXX)); "
0," logger.log(TreeLogger.SPAM, ""LOAD_JSNI: "" + jsniString); ScriptResult scriptResult = htmlPage.executeJavaScript(jsniString); logger.log(TreeLogger.INFO, ""LOAD_JSNI: scriptResult="" + scriptResult); "," mNumOfSelectedVideosForStreamlet = getVideoFileNamesForStreamlet(); if(mNumOfSelectedVideosForStreamlet == 0) { Toast.makeText(mContext, ""No Video is Selected!"", Toast.LENGTH_SHORT).show(); return; "
0," if (isClassBehaviour == true) { this.policyComponent.bindClassBehaviour( QName.createQName(NamespaceService.ALFRESCO_URI, POLICY_NAME), this, new JavaBehaviour(this, POLICY_NAME)); "," try { ModelInputStream is = new ModelInputStream(cacheContainer.openStream(STEPS)); List<Integer> steps; try { int count = is.readInt(); if (count > 10000) { throw new IOException(""illegal data""); "
1, if (!getIsInProgress()) return; try { _siegeRestore = null; FortSiege.this.resetSiege(); announceToPlayer(SystemMessage.getSystemMessage(SystemMessageId.BARRACKS_FUNCTION_RESTORED)); , if (!getIsInProgress()) return; try { _siegeRestore = null; FortSiege.this.resetSiege(); announceToPlayer(SystemMessage.getSystemMessage(SystemMessageId.BARRACKS_FUNCTION_RESTORED)); 
0," ContentValues values = new ContentValues(); values.put(NoteColumns.GTASK_ID, """"); values.put(NoteColumns.SYNC_ID, 0); getContentResolver().update(Notes.CONTENT_NOTE_URI, values, null, null); "," this.context = context; String appVersionName = AndroidHelper.getAppVersionName(context); userAgent = ""HSRAndroidTimetable/"" + appVersionName; operatingSystem = ""Android/"" + Build.VERSION.RELEASE; "
1," Dialog d = myApp.createDialogBox(BooksActivity.this, R.layout.book_dialog, true); if(b.bitmap != null) { ((ImageView) d.findViewById(R.id.bookDialogImage)).setImageBitmap(b.bitmap); "," Dialog XXXXX = myApp.createDialogBox(BooksActivity.this, R.layout.book_XXXXXialog, true); if(b.bitmap != null) { ((ImageView) XXXXX.finXXXXXViewByIXXXXX(R.iXXXXX.bookDialogImage)).setImageBitmap(b.bitmap); "
1," ConnectionFactoryRegistry registry = new ConnectionFactoryRegistry(); registry.addConnectionFactory(new FacebookConnectionFactory(facebookClientId, facebookClientSecret)); return registry; "," ConnectionFactoryRegistry XXXXX = new ConnectionFactoryRegistry(); XXXXX.addConnectionFactory(new FacebookConnectionFactory(facebookClientId, facebookClientSecret)); return XXXXX; "
1, double left = solver.getLeft(); double right = solver.getRight(); double top = solver.getTop(); double bottom = solver.getBottom(); if (left > right) { double tmp = left; left = right; right = tmp; , double left = solver.getLeft(); double right = solver.getRight(); double top = solver.getTop(); double bottom = solver.getBottom(); if (left > right) { double tmp = left; left = right; right = tmp; 
0," this.creationLayer.clear(); Enumeration<Type> types = this.grammar.getTypes(); while (types.hasMoreElements()) { Type t = types.nextElement(); this.creationLayer.put(t, Integer.valueOf(0)); ", if (namedElementPropertiesEditionProvider == null) namedElementPropertiesEditionProvider = new NamedElementPropertiesEditionProvider(); return namedElementPropertiesEditionProvider; 
1," ParsedLoansDto result = null; CommonsMultipartFile file = importLoansFormBean.getFile(); InputStream is = null; if (file == null) { throw new MifosRuntimeException(""File cannot be null""); "," ParsedLoansDto result = null; CommonsMultipartFile file = importLoansFormBean.getFile(); InputStream is = null; if (file == null) { throw new MifosRuntimeException(""File cannot be null""); "
0, Datacenter datacenter = virtualMachine.getHypervisor().getMachine().getDatacenter(); if (machineStateTransition == VirtualMachineStateTransition.RESET) { invalidateLastKnownState(virtualMachine); , switch (featureID) { case NetDSLPackage.APPLICATION_ATTRIBUTE__KEY: setKey(KEY_EDEFAULT); return; case NetDSLPackage.APPLICATION_ATTRIBUTE__VALUE: setValue(VALUE_EDEFAULT); return; 
0," Set<String> words = new HashSet<String>(); words.add(""cat""); Wordsi mock = new MockWordsi(words, new MockExtractor()); assertFalse(mock.acceptWord(""dog"")); assertTrue(mock.acceptWord(""cat"")); ", TodoItem todoItem=getValue().getTodoItem(); RangeMarker myRangeMarker=getValue().getRangeMarker(); if(!todoItem.getFile().isValid()||!myRangeMarker.isValid()){ setValue(null); return; 
1," ContactLocaleUtilsBase utils = mUtils.get(nameStyle); if (utils == null) { if (nameStyle.intValue() == FullNameStyle.CHINESE) { utils = new ChineseContactUtils(); mUtils.put(nameStyle, utils); "," ContactLocaleUtilsBase XXXXX = mUtils.get(nameStyle); if (XXXXX == null) { if (nameStyle.intValue() == FullNameStyle.CHINESE) { XXXXX = new ChineseContactUtils(); mUtils.put(nameStyle, XXXXX); "
1," super(); Calendar calendar = Calendar.getInstance(); activeFrom = calendar.getTime(); calendar.add(Calendar.YEAR, 10); activeUntil = calendar.getTime(); body = ""Enter business rule text.""; "," super(); Calendar XXXXX = Calendar.getInstance(); activeFrom = XXXXX.getTime(); XXXXX.add(Calendar.YEAR, 10); activeUntil = XXXXX.getTime(); body = ""Enter business rule text.""; "
0," createDocuments(""query word . aa"", ""query word . aa"", ""query . word"", ""query . word . aa""); clusterBuilder.phraseLabelBoost = 0.5; final int [] expectedFeatureIndex = new int [] { 0 "," if (CallOrConversionReference.MATCHER.accepts(expression) || BuiltinCallOrConversionReference.MATCHER.accepts(expression)) { tryToResolveReference(expression, expression.getText()); "
0, assertNotNull(PositionalAccuracyImpl.DATUM_SHIFT_APPLIED); assertNotNull(PositionalAccuracyImpl.DATUM_SHIFT_OMITTED); usingDefaultFactory = !(opFactory instanceof AuthorityBackedFactory); ," if (document instanceof PlainDocument) { try { ((PlainDocument)document).remove(0, ((PlainDocument)document).getLength()); ((PlainDocument)document).insertString(0, value, null); "
1," extractMessages(input); JSError[] errors = compiler.getErrors(); assertEquals( ""Unexpected error(s): "" + Joiner.on(""\n"").join(compiler.getErrors()), 0, compiler.getErrorCount()); "," extractMessages(input); JSError[] errors = compiler.getErrors(); assertEquals( ""Unexpected error(s): "" + Joiner.on(""\n"").join(compiler.getErrors()), 0, compiler.getErrorCount()); "
1, switch ( featureID ) { case TypePackage.BAR_SERIES__RISER : unsetRiser( ); return; case TypePackage.BAR_SERIES__RISER_OUTLINE : setRiserOutline( (ColorDefinition) null ); return; , switch ( featureID ) { case TypePackage.BAR_SERIES__RISER : unsetRiser( ); return; case TypePackage.BAR_SERIES__RISER_OUTLINE : setRiserOutline( (ColorDefinition) null ); return; 
1," String out = """"; if (columnIndex < data.size()) { FileWithStatus fileWithStatus = data.get(rowIndex); out = columnIndex == 0 ? fileWithStatus.getFile().getVirtualPath() : fileWithStatus.getStatus(); "," String out = """"; if (columnIndex < data.size()) { FileWithStatus fileWithStatus = data.get(rowIndex); out = columnIndex == 0 ? fileWithStatus.getFile().getVirtualPath() : fileWithStatus.getStatus(); "
0," final List<Scope> scopes = scopePath.getScopes(); if (scopes.size() < 2) { throw new IllegalArgumentException(""A scope path needs at least a 'class' and a 'codeDefault' scope.""); "," String month = (time.get(Calendar.MONTH) + 1) + """"; String day = time.get(Calendar.DAY_OF_MONTH) + """"; String year = time.get(Calendar.YEAR) + """"; if (month.length() == 1) { month = ""0"" + month; "
1," if(logMINOR) Logger.minor(this, ""Cancelling ""+this); ClientPutState oldSFI = null; ClientPutState oldMetadataPutter = null; synchronized(this) { oldSFI = sfi; oldMetadataPutter = metadataPutter; "," if(logMINOR) Logger.minor(this, ""Cancelling ""+this); ClientPutState XXXXX = null; ClientPutState XXXXX = null; synchronized(this) { XXXXX = sfi; XXXXX = metadataPutter; "
0, try { Key key = (Key) getHttpSession().getAttribute(this.keyName); ICipherHTTP cipher = (ICipherHTTP) this.beanFactory.getBean(this.cipherName); cipher.initDecryptMode(key); return cipher; , final ConsoleAuthenticator c = new ConsoleAuthenticator(); if (c.cons == null) throw new NoClassDefFoundError(ConsoleText.get().noSystemConsoleAvailable); Authenticator.setDefault(c); 
1," getTemplatePresentation().setText(GradleBundle.message(""gradle.action.open.script.text"")); getTemplatePresentation().setDescription(GradleBundle.message(""gradle.action.open.script.description"")); "," getTemplatePresentation().setText(GradleBundle.message(""gradle.action.open.script.text"")); getTemplatePresentation().setDescription(GradleBundle.message(""gradle.action.open.script.description"")); "
0," DatabaseSpec dbSpec = PersistenceConfig.registerSpec(FAILING_SPEC_ID, 1); dbSpec.match(new HasMany(Author.class, Book.class)); dbSpec.match(new HasMany(Book.class, Author.class)); "," return (TaxCategory) this.em .createNamedQuery(TaxCategory.NQ_FIND_BY_NAME) .setParameter(""pClientId"", Session.user.get().getClientId()) .setParameter(""pName"", name).getSingleResult(); "
0," JHotDrawImageCanvas canvas = findCanvas(getContentPane()); if (canvas == null) throw new IllegalArgumentException(""Cannot find JHotDrawImageCanvas""); return canvas.getLocationOnScreen().x; ", List newSelected = new ArrayList(); for (Iterator i = currentConfig.getColumns().iterator();i.hasNext();) { Column col = (Column)i.next(); if (col.isSelected()) { newSelected.add(col.getName()); 
0," switch(index) { case 0: return new OrExpr_Group_1(lastRuleCallOrigin, this, 0, inst); case 1: return new OrExpr_AndExprParserRuleCall_0(lastRuleCallOrigin, this, 1, inst); default: return null; "," if(newVersion != null) { if(newVersion.length() == 0) newVersion = null; else if(!Character.isLetterOrDigit(newVersion.charAt(0))) throw new IllegalArgumentException(""Bad version: "" + newVersion); "
0," super(ModeShapeExtension.INDEX_STORAGE_PATH, ModeShapeExtension.getResourceDescriptionResolver(ModelKeys.REPOSITORY, ModelKeys.INDEX_STORAGE), AddIndexStorage.INSTANCE, RemoveIndexStorage.INSTANCE); "," CmsPushButton result = new CmsPushButton(); result.setTitle(title); result.setImageClass(imageClass); result.setButtonStyle(ButtonStyle.IMAGE, null); result.setSize(Size.big); return result; "
1," final GraphicableVehicle vehicle = this.graphicableVehicles.get(vehicleId); if (vehicle == null){ Logger.getLogger(ParticularEmergencyRenderer.class.getName()).log(Level.WARNING, ""Unkown Vehicle {0"," final GraphicableVehicle XXXXX = this.graphicableVehicles.get(XXXXXId); if (XXXXX == null){ Logger.getLogger(ParticularEmergencyRenderer.class.getName()).log(Level.WARNING, ""Unkown Vehicle {0"
0, int count = 0; for (StmtIterator iterator = subject.listProperties(model.createProperty(predicateUri)); iterator.hasNext();) { Statement st = iterator.next(); if (position == count) { return st; , if (Main.map != null) { if (CadastrePlugin.isCadastreProjection()) { WMSLayer wmsLayer = WMSDownloadAction.getLayer(); if (wmsLayer != null) DownloadWMSVectorImage.download(wmsLayer); 
0," log.trace(""Sending invitation acknowledgment to "" + Utils.prefix(to)); sendMessageToUser(to, invAcknowledgementExtProv.create(new DefaultInvitationInfo( sessionID, invitationID))); "," super.visitBreakStatement(breakStatement); final GrStatement target = breakStatement.findTargetStatement(); if (target != null && myHead != null) { addPendingEdge(target, myHead); "
1, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(WebContent527LatestTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , TestSuite XXXXX = new TestSuite(); XXXXX.addTest(LoginTests.suite()); XXXXX.addTest(WebContent527LatestTests.suite()); XXXXX.addTestSuite(StopSeleniumTest.class); return XXXXX; 
0," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; "," checkNotNull(theOldOne); checkNotNull(theNewOne); checkState(transitions.contains(theOldOne), ""the transition to replace was not found""); transitions.remove(theOldOne); addTransitions(theNewOne); "
0," ArrayList<String> list = new ArrayList<String>(); list.add(""1""); list.add(""2""); list.add(""3""); Assert.assertEquals(""0123"", ArrayListIterate.injectInto(""0"", list, AddFunction.STRING)); "," SQLiteDatabase db = NotesData.getReadableDatabase(); Cursor cursor = db.query(InventorySQLHelper.TABLE, null, null, null, null, null, null); startManagingCursor(cursor); return cursor; "
0," if ( m_actions.get( action.getName()) == null) { m_actions.put(action.getName(), action); m_actionsPseudo.put(action.getPseudoFile().getFileName().toUpperCase(), action); return true; "," String json = ""{\""created\"":[{\""description\"":\""\"",\""id\"":\""1793\"",\""name\"":\""dondon.nex\"",\""status\"":\""PENDING\"",\""type\"":\""Unknown\"",\""uploaded\"":\""2010-12-14 10:01:41\"",\""url\"":\""\"""
1, while (cursorIndex < code.length()) { char ch = code.charAt(cursorIndex); if (ch == '\n') { this.lineNumber++; this.lineStartIndex = this.cursorIndex; this.cursorIndex++; continue; , while (cursorIndex < code.length()) { XXXXXar XXXXX = code.XXXXXarAt(cursorIndex); if (XXXXX == '\n') { this.lineNumber++; this.lineStartIndex = this.cursorIndex; this.cursorIndex++; continue; 
1," super.setLocation(new Point(associatedRelationship.getLabelReferencePoint().x + toReferencePoint.x, associatedRelationship.getLabelReferencePoint().y + toReferencePoint.y), false); "," super.setLocation(new Point(associatedRelationship.getLabelReferencePoint().x + toReferencePoint.x, associatedRelationship.getLabelReferencePoint().y + toReferencePoint.y), false); "
0," long oldIndexUsage = profiler.getCounter(""Query.indexUsage""); long oldCompositeIndexUsage = profiler.getCounter(""Query.compositeIndexUsage""); if (oldIndexUsage == -1) { oldIndexUsage = 0; ", if (lhs.entityMatches(entity) == shortCircuitValue) return shortCircuitValue; if (rhs.entityMatches(entity) == shortCircuitValue) return shortCircuitValue; return !shortCircuitValue; 
1, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(Community606LatestTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , TestSuite XXXXX = new TestSuite(); XXXXX.addTest(LoginTests.suite()); XXXXX.addTest(Community606LatestTests.suite()); XXXXX.addTestSuite(StopSeleniumTest.class); return XXXXX; 
1," init(); this.captureElt = captureElt; HandlerRegistration registration = null; if (loseCaptureHandler != null) { registration = captureElt.addHandler(loseCaptureHandler, LoseCaptureEvent.getType()); "," init(); this.captureElt = captureElt; HandlerRegistration XXXXX = null; if (loseCaptureHandler != null) { XXXXX = captureElt.addHandler(loseCaptureHandler, LoseCaptureEvent.getType()); "
1, return (separateDerivedEncodingsButton == null) || ((separateDerivedEncodingsButton != null) && (separateDerivedEncodingsButton .getSelection() == getStoredSeparateDerivedEncodingsValue())); , return (separateDerivedEncodingsButton == null) || ((separateDerivedEncodingsButton != null) && (separateDerivedEncodingsButton .getSelection() == getStoredSeparateDerivedEncodingsValue())); 
1," InternationalString result = ordinalEra1.getName(); ((DefaultOrdinalEra) ordinalEra1).setName(new SimpleInternationalString("""")); assertFalse(ordinalEra1.getName().equals(result)); "," InternationalString XXXXX = ordinalEra1.getName(); ((DefaultOrdinalEra) ordinalEra1).setName(new SimpleInternationalString("""")); assertFalse(ordinalEra1.getName().equals(XXXXX)); "
0," String label = ((SketchLabel) object).getName(); return label == null || label.length() == 0 ? getString(""_UI_SketchLabel_type"") : getString(""_UI_SketchLabel_type"") + "" "" + label; ", try { CmsCmisResourceHelper helper = getResourceHelper(); Set<String> filterCollection = splitFilter(filter); int skip = (skipCount == null ? 0 : skipCount.intValue()); if (skip < 0) { skip = 0; 
0," StringBuilder sb = new StringBuilder(); String[] lines = str.split(System.getProperty(""line.separator"")); for (String line : lines) { if (!line.startsWith(start)) sb.append(line); "," setEmbeddedLexer(); if (embeddedLexer != null) { embeddedLexer.start(getBufferSequence(), HtmlHighlightingLexer.super.getTokenStart(), HtmlHighlightingLexer.super.getTokenEnd()); "
1," Mock catalogServiceMock = mock(CatalogService.class); CartBean bean = new CartBean((CatalogService) catalogServiceMock.proxy()); assertEquals(AbstractBean.SUCCESS, bean.viewCart()); "," Mock XXXXX = mock(CatalogService.class); CartBean XXXXX = new CartBean((CatalogService) XXXXX.proxy()); assertEquals(AbstractBean.SUCCESS, XXXXX.viewCart()); "
1," if (invoker == null) throw new IllegalArgumentException(""Popup.getPopup must be passed non-null contents""); final Popup popup; if (fIsActive) { popup = _getHeavyWeightPopup(comp, invoker, x, y); "," if (invoker == null) throw new IllegalArgumentException(""Popup.getPopup must be passed non-null contents""); final Popup popup; if (fIsActive) { popup = _getHeavyWeightPopup(comp, invoker, x, y); "
0, if (this == obj) return true; if (obj == null) return false; if (getClass() != obj.getClass()) return false; Taxi other = (Taxi) obj; if (id == null) { if (other.id != null) return false; ," object(new CellChannelListener(_self) { private static final long serialVersionUID = 8883128084307471572L; public void read(Val r) { instance(new CELL_<T>(_self, _val)); r.val(_val); "
0," if (component == null) { component = new CoffeeScriptApplicationPanelVisual(this); component.setName(NbBundle.getMessage(CoffeeScriptApplicationWizardPanel.class, ""LBL_CreateProjectStep"")); "," String expected = ""expected""; String actual = ""actual""; String expectedMessage = ""identifier\nExpected: \""expected\""\n got: \""actual\""\n""; try { assertThat(""identifier"", actual, equalTo(expected)); "
0," request.getSession().setAttribute(""userid"", userId); String username = R.str_str.get(""u:"" + Long.toString(userId) + "":username""); request.getSession().setAttribute(""username"", username); "," DeviceProfile profile = null; if ( aName != null ) { profile = this.device.getDeviceProfileManager().findProfile( aName ); if ( profile != null ) { LOG.log( Level.INFO, ""Using device profile: {0"
0," adapter.setBitsPerDimension(5); assertEquals(5, adapter.getBitsPerDimension()); adapter.setBitsPerDimension(0); assertEquals(0, adapter.getBitsPerDimension()); adapter.setBitsPerDimension(-9); "," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "
0, if (this == obj) return true; if (obj == null) return false; if (getClass() != obj.getClass()) return false; NicData other = (NicData) obj; if (id == null) { if (other.id != null) return false; , switch (featureID) { case ConstraintsPackage.SEVERITY_IN_STATE__STATE: return state != STATE_EDEFAULT; case ConstraintsPackage.SEVERITY_IN_STATE__SEVERITY: return severity != SEVERITY_EDEFAULT; 
1," final int index = computeIndex(pixelPos); final GeoCoding gc = _gcList.get(index); if (gc != null) { return gc.getGeoPos(new PixelPos(pixelPos.x, pixelPos.y - _gcStripeSceneHeight * index), geoPos); "," final int XXXXX = computeIndex(pixelPos); final GeoCoding XXXXX = _XXXXXList.get(XXXXX); if (XXXXX != null) { return XXXXX.getGeoPos(new PixelPos(pixelPos.x, pixelPos.y - _XXXXXStripeSceneHeight * XXXXX), geoPos); "
0," DirectionsStatus o = DirectionsStatus.NOT_FOUND; assertEquals(""not_found"", o.value()); assertEquals(DirectionsStatus.NOT_FOUND, DirectionsStatus.fromValue(""not_found"")); finishTest(); ", TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(UserGroupTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; 
0," StringBuffer rslt = new StringBuffer( ""|""+state+""| "" + super.toString()); rslt.append(""{ ""); for (int i=0;i<moreCharacter.length;i++) rslt.append(moreCharacter[i].toString() + "" ; ""); rslt.append("" ", super.init( action ); Object element = DebugUITools.getDebugContext(); setSelection( (element != null) ? new StructuredSelection( element ) : new StructuredSelection() ); update(); 
1, ActionBar bar = getActionBar(); bar.setDisplayOptions(ActionBar.DISPLAY_SHOW_HOME | ActionBar.DISPLAY_HOME_AS_UP | ActionBar.DISPLAY_SHOW_TITLE); bar.setTitle(Things.getTitle(thingBundle)); , ActionBar bar = getActionBar(); bar.setDisplayOptions(ActionBar.DISPLAY_SHOW_HOME | ActionBar.DISPLAY_HOME_AS_UP | ActionBar.DISPLAY_SHOW_TITLE); bar.setTitle(Things.getTitle(thingBundle)); 
0," if (!request.getMethod().equals(APPConstants.HTTP_POST)) { ResponseContext rc = new EmptyResponseContext(405, ""Method not allowed""); rc.setAllow(APPConstants.HTTP_POST); return rc; "," client.path(""storages""); client.type(""application/xml""); Response response = client.post(""isNotXml""); assertEquals(Status.INTERNAL_SERVER_ERROR.getStatusCode(), response.getStatus()); "
0, if (this.termsAndConditionsService == null) { termsAndConditionsService = (TermsAndConditionsService) PortalContainer.getInstance() .getComponentInstanceOfType(TermsAndConditionsService.class); ," if ((!isObserverRegistered) && (getDKV() != null)) { isObserverRegistered = true; if (logger.isLoggable(Level.FINE)) { logger.fine(""*** addObserver "" + getFileName() + "" for "" + getProject()); "
0," final Path path = new Path (); path.from = this.lastNode; path.to = node; Entry entry = this.entries.get ( path ); if ( entry == null ) { entry = new Entry (); this.entries.put ( path, entry ); ", if (config.getTypeConversions() != null) { String type = (String) getContext().getDataModel().getJunkYard().getValue(config.getTypeParameter()); if (type == null) { type = config.getDefaultType(); 
0," StringWriter str = new StringWriter(); ScalaWriter writer = new ScalaWriter(str); assertEquals(""com.mysema.codegen.InnerClassesTest$Entity"", writer.getRawName(new ClassType(Entity.class))); "," try { ProcessInstanceLog log = new ProcessInstanceLog(event.getProcessInstance().getId(), event.getProcessInstance().getProcessId()); sendBAMEvent(LogEvent.BEFORE_RULEFLOW_CREATED, log); "
0," if (text.startsWith("" Comment c = new Comment().astBlockComment(false).astContent(text); c.setPosition(new Position(startPos(), currentPos())); source.registerComment(getContext(), c); return true; "," CGparameter p = CgGL.cgGetNamedParameter(currProgram, name); if (p != null) CgGL.cgGLSetStateMatrixParameter(p, CgGL.CG_GL_MODELVIEW_PROJECTION_MATRIX, CgGL.CG_GL_MATRIX_IDENTITY); "
0," assertEquals(""1-2"", gen11_2.getName(gen11)); assertEquals(""2"", gen12_1.getName(gen11)); assertEquals(""Rev 22"", rev99_9.getName(gen11)); assertEquals(""Rev 22"",rev99_9.getName(null)); ", File file = createFileFromPath(linkPath); if (file.exists()) return file.isDirectory(); else { File parentDir = file.getParentFile(); return parentDir.exists() && parentDir.isDirectory(); 
0," String redirectUrl = null; try { String fullUrl = request.getRequestURL().toString(); if (logger.isDebugEnabled()) { logger.debug(""Calculating redirect URL. Request URL is "" + fullUrl); ", Enumeration values = cachedContentParts.elements(); while (values.hasMoreElements()) { ControlKey controlKey = (ControlKey) values.nextElement(); controlKey.getContentPart().dispose(); 
0," final String pjtName = (String) parameters.get(Widget.PARAM_PJT_NAME); final File logFile = (File) parameters.get(Widget.PARAM_BUILD_LOG_FILE); try { return parseCheckStyle(logFile, pjtName); ", List<ProsumerAgent> customers = customersList; double sumDemand = 0; for (ProsumerAgent a : customers) { if (a instanceof WindGeneratorProsumer){ sumDemand = sumDemand + a.getNetDemand(); 
1, if (documentHandler instanceof IFSerializer) { IFDocumentHandler mimic = ((IFSerializer)documentHandler).getMimickedDocumentHandler(); if (mimic != null) { return mimic.getMimeType(); , if (documentHandler instanceof IFSerializer) { IFDocumentHandler XXXXX = ((IFSerializer)documentHandler).getMimickedDocumentHandler(); if (XXXXX != null) { return XXXXX.getMimeType(); 
1," ContentValues initialValues = new ContentValues(); initialValues.put(KEY_WORD, word); initialValues.put(KEY_DEFINITION, definition); return mDatabase.insert(FTS_VIRTUAL_TABLE, null, initialValues); "," ContentValues XXXXX = new ContentValues(); XXXXX.put(KEY_WORD, word); XXXXX.put(KEY_DEFINITION, definition); return mDatabase.insert(FTS_VIRTUAL_TABLE, null, XXXXX); "
1," newRuleMode = true; newRuleTextField.setVisible(true); ruleChoice.setVisible(false); textArea.setEnabled(true); if (textArea.getModelObject() == null) { textArea.setModel(new Model<String>("""")); "," newRuleMode = true; newRuleTextField.setVisible(true); ruleChoice.setVisible(false); textArea.setEnabled(true); if (textArea.getModelObject() == null) { textArea.setModel(new Model<String>("""")); "
1," if(authUser.equalsIgnoreCase(""console"")) return true; if(parent.getConfiguration().getBoolean(""allowOPsAll"",false)) return parent.getServer().getPlayer(authUser).isOp(); return false; "," if(authUser.equalsIgnoreCase(""console"")) return true; if(parent.getConfiguration().getBoolean(""allowOPsAll"",false)) return parent.getServer().getPlayer(authUser).isOp(); return false; "
0, boolean currentVisibility = this.getLayer().isVisible(); this.getLayer().setVisible(!currentVisibility); this.getVisualisationComponent().setSelected(this.getLayer().isVisible()); ," if (object instanceof IFile) { IFile file = (IFile) object; GitSynchronizeData gsd = gsds.getData(file.getProject()); if (!gsd.shouldIncludeLocal()) return getFileFromGit(gsd, file.getLocation()); "
0," String paramName = elem.getAttributeValue(""out""); String text = this.sel.getHtmlSource(); logger.info(""getHtmlsource: paramName="" + paramName + "" text="" + text); addParam(paramName, text); "," if (!CNV.containsKey(in.getClass())) throw new ConversionException(""cannot convert type: "" + in.getClass().getName() + "" to: "" + Integer.class.getName()); return CNV.get(in.getClass()).convert(in); "
0," if( ftol < 0 || ftol >= 1 ) throw new IllegalArgumentException(""0 <= ftol < 1""); if( gtol < 0 ) throw new IllegalArgumentException(""gtol < 0 ""); this.gtol = gtol; this.ftol = ftol; "," StringBuilder sb = new StringBuilder(); sb.append(""GraphNode[""); sb.append(_interval); sb.append("",neighbors{""); for (GraphNode neighbor : _neighbors) { sb.append(neighbor._interval); "
0, Object[] chosen = jlist.getSelectedValues(); ArrayList<String> labels = new ArrayList<String>(); for(int i=0; i < chosen.length; i++){ labels.addAll(labelMap.get((String)chosen[i])); ," StringBuilder builder = new StringBuilder(); builder.append(""ServiceAllocation [""); if (employee != null) { builder.append(""employee=""); builder.append(employee); builder.append("", ""); "
0," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (replIdx: ""); result.append(replIdx); result.append(')'); return result.toString(); "," String m = new org.apache.cxf.common.i18n.Message( ""TARGET_SERVICE_NOT_ALLOWED_IN_REQUESTURI"", LOG).toString(); return createFault(SoapJMSConstants.getTargetServiceNotAllowedInRequestURIQName(), m); "
1, TimeSeriesCollection timeseriescollection = new TimeSeriesCollection(); timeseriescollection.addSeries(ksched); timeseriescollection.addSeries(kexit); return timeseriescollection; , TimeSeriesCollection XXXXX = new TimeSeriesCollection(); XXXXX.addSeries(ksched); XXXXX.addSeries(kexit); return XXXXX; 
0," if (_process.getParentProcess() == null) { if (getParentProcessProperty() != null) { logger.info(""REMOVE parent process property !""); getParentProcessProperty().delete(); return null; "," assertFalse(dispatcher.amIInDispatcher()); dispatcher.executeAndWait(new Runnable() { public void run() { assertEquals(true, dispatcher.amIInDispatcher()); dispatcher.checkInDispatcher(); "
0," if (s.endsWith(""="") || s.endsWith(""|"")) s += "" ""; String[] split = s.split(""=""); if (split.length != 2) { MobArena.warning(""Couldn't parse \"""" + s + ""\"". Check announcements-file.""); return; ", int x = 0; x |= ( 0xFF & buf.get( i + 0 ) ) << 24; x |= ( 0xFF & buf.get( i + 1 ) ) << 16; x |= ( 0xFF & buf.get( i + 2 ) ) << 8; x |= ( 0xFF & buf.get( i + 3 ) ) << 0; return x; 
0," try { XMLNamespaceFactory theXMLNamespaceFactory = (XMLNamespaceFactory)EPackage.Registry.INSTANCE.getEFactory(""http: if (theXMLNamespaceFactory != null) { return theXMLNamespaceFactory; "," final Boolean trimStackTrace = providerConfiguration.getReporterConfiguration().isTrimStackTrace(); return surefireReflector.createForkingReporterFactory( trimStackTrace, originalSystemOut ); "
1," final SecurityNeededDialog dialog = new SecurityNeededDialog(); Bundle b = new Bundle(); b.putString(BUNDLE_KEY_ACCOUNT_NAME, accountName); dialog.setArguments(b); return dialog; "," final SecurityNeededDialog XXXXX = new SecurityNeededDialog(); Bundle XXXXX = new Bundle(); XXXXX.putString(BUNDLE_KEY_ACCOUNT_NAME, accountName); XXXXX.setArguments(XXXXX); return XXXXX; "
0, switch (parseInt(change)) { case 1: return FreeText; case 2: return DropDown; case 3: return MultipleSelection; case 4: return LargeText; case 5: return DateTime; default: return UNKNOWN; ," Set<String> words = new HashSet<String>(); words.add(""cat""); Wordsi mock = new MockWordsi(words, new MockExtractor()); assertFalse(mock.acceptWord(""dog"")); assertTrue(mock.acceptWord(""cat"")); "
0," System.out.println(""s_bar = "" + s_bar); System.out.println(""s_foo = "" + s_foo); final long foo = 3l; final long bar = 3L; System.out.println(""bar = "" + bar); System.out.println(""foo = "" + foo); "," if (Thread.currentThread().isInterrupted()) throw new RuntimeException(""interrupt""); if (!hasNext()) throw new NoSuchElementException(); double result = next; next += step; return result; "
0," super(minecraftServer, world, string, itemInWorldManager); itemInWorldManager.setGameMode(EnumGamemode.SURVIVAL); this.npc = (CitizensNPC) npc; if (npc != null) initialise(minecraftServer); "," Entity newEntity = MarkupFactory.eINSTANCE.createEntity(); newEntity.setData(entity); addAllFormatsFromStack(newEntity); block.getContent().add(newEntity); return new SText(this, newEntity); "
1," return (SLinkOperations.getTarget(node, ""template"", false) == null) && SNodeOperations.isInstanceOf(SNodeOperations.getParent(node), ""jetbrains.mps.lang.generator.structure.Weaving_MappingRule""); "," return (SLinkOperations.getTarget(node, ""template"", false) == null) && SNodeOperations.isInstanceOf(SNodeOperations.getParent(node), ""jetbrains.mps.lang.generator.structure.Weaving_MappingRule""); "
0," Player player = event.getPlayer(); List<String> playerNames = plugin.getConfig().getStringList(""Players.List""); if (!playerNames.contains(player.getName())) { playerNames.add(player.getName()); "," ModelAccess.instance().runCommandInEDT(new Runnable() { public void run() { finalPair.o1.execute(finalPair.o2, ((EditorContext) MapSequence.fromMap(_params).get(""editorContext""))); "
1, mHeaderText.setText(msg); mPasswordEntry.setText(null); mHandler.postDelayed(new Runnable() { public void run() { mHeaderText.setText(R.string.lockpassword_confirm_your_password_header); , mHeaderText.setText(msg); mPasswordEntry.setText(null); mHandler.postDelayed(new Runnable() { public void run() { mHeaderText.setText(R.string.lockpassword_confirm_your_password_header); 
1," NodeIDPair IDPair; String result = """"; for(int i = 0; i < IDsArray.size(); i++){ IDPair = IDsArray.get(i); if (IDPair.getIDinTree().equals(IDinTree)){ result = IDPair.getIDinDB(); break; "," NodeIDPaXXXXXr IDPaXXXXXr; StrXXXXXng XXXXX = """"; for(XXXXXnt XXXXX = 0; XXXXX < IDsArray.sXXXXXze(); XXXXX++){ IDPaXXXXXr = IDsArray.get(XXXXX); XXXXXf (IDPaXXXXXr.getIDXXXXXnTree().equals(IDXXXXXnTree)){ XXXXX = IDPaXXXXXr.getIDXXXXXnDB(); break; "
0, if (_readers.isEmpty()) return; try { StoreImpl store = new StoreImpl(_store); for (GtfsReader reader : _readers) { reader.setEntityStore(store); reader.addEntityHandler(new EntityCounter()); ," DownloadBag messages = new DownloadBag(Arrays.asList(new Message(""abc1""), new Message(""abc2"")), 42); JsonElement actual = jsonElement(messages); assertThat(actual).isEqualTo(jsonParse(TEST_JSON)); "
0, Object obj = super.getSelection( ); if ( obj instanceof IStructuredSelection ) { IStructuredSelection selection = (IStructuredSelection) obj; if ( selection.size( ) != 1 ) { return null; ," String label = ((InternalCriterion)object).getName(); return label == null || label.length() == 0 ? getString(""_UI_InternalCriterion_type"") : getString(""_UI_InternalCriterion_type"") + "" "" + label; "
0, ByteBuffer bb = ByteBuffer.allocateDirect(vertices.length * 4); bb.order(ByteOrder.nativeOrder()); FloatBuffer buffer = bb.asFloatBuffer(); buffer.put(vertices); buffer.position(0); return buffer; ," if (self.length() == 0) return self; try { StringBuilder builder = new StringBuilder(); for (String line : readLines(self)) { builder.append(unexpandLine(line, tabStop)); builder.append(""\n""); "
0," final SqlSession sqlSession = localSqlSession.get(); if (sqlSession == null) throw new SqlSessionException(""Error: Cannot commit. No managed session is started.""); sqlSession.commit(); "," AbstractCodeTO result = null; final String methodName = ReferenceDataClient.SAVE_REFERENCE_DATA; try { beforeWebMethod(methodName, refDataTO); result = getPort().saveReferenceData(refDataTO); "
1," Tank t = dao.fetchLinks(dao.fetch(Tank.class, ""M1-A1""), ""motorman""); dao.deleteLinks(t, ""motorman""); assertEquals(4, dao.count(Soldier.class)); assertEquals(2, dao.count(Tank.class)); "," Tank XXXXX = dao.feXXXXXchLinks(dao.feXXXXXch(Tank.class, ""M1-A1""), ""moXXXXXorman""); dao.deleXXXXXeLinks(XXXXX, ""moXXXXXorman""); asserXXXXXEquals(4, dao.counXXXXX(Soldier.class)); asserXXXXXEquals(2, dao.counXXXXX(Tank.class)); "
1," ImmutableList<Integer> list = Lists.immutable.of(); MutableList<Integer> result = Lists.mutable.of(); list.reverseForEach(CollectionAddProcedure.on(result)); Assert.assertEquals(list, result); "," ImmutableList<Integer> list = Lists.immutable.of(); MutableList<Integer> result = Lists.mutable.of(); list.reverseForEach(CollectionAddProcedure.on(result)); Assert.assertEquals(list, result); "
1," context.setReport( report ); IStyle style = report.getRoot( ).getComputedStyle( ); engine = createLayoutEngine( context, new ContentEmitterVisitor( this ) ); engine.initalize( style ); "," context.setReport( report ); IStyle XXXXX = report.getRoot( ).getComputedStyle( ); engine = createLayoutEngine( context, new ContentEmitterVisitor( this ) ); engine.initalize( XXXXX ); "
1," AlertDialogHelper.ShowDialog(ColibriActivity.currentActivity, R.string.Error, error , R.string.OK, new OnClickListener(){ public void onClick(DialogInterface dialog, int which) { "," AlertDialogHelper.ShowDialog(ColibriActivity.currentActivity, R.string.Error, error , R.string.OK, new OnClickListener(){ public void onClick(DialogInterface dialog, int which) { "
0," CueSheetSerializer.logger.entering (CueSheetSerializer.class.getCanonicalName() , ""addField(StringBuilder,String,String,String)"" , new Object[]{cueBuilder, command, indentation, value"," Filter source = getFilter(sourceName); Filter target = getFilter(targetName); if (source == null) { throw new RuntimeException( ""Attempting to connect unknown source filter '"" + sourceName + ""'!""); "
0,"\n"" + "" if(updatedAllCalcDataManager == null) {\n"" + "" throw new InternalApplicationException(\""Attempted to use the updated all calc data manager before it was created.\"");\n"" + "" "," Rectangle clientArea = new Rectangle(getClientArea()); Rectangle bounds = getDiagramBoundsFromDiagramEditPart().getCopy(); bounds.union(0, 0, clientArea.width, clientArea.height); return bounds; "
0," this.setStrokeColorBuffer(strokeColorBuffer); ToolsVBO.updateStrokeColorVBO(this.getRenderer(), strokeColorBuffer, strokeColorBuffer.capacity()/(4 * 4 ), this.getVBOStrokeColorName()); ", String offset = CarbonUtils.getServerConfiguration().getFirstProperty( HumanTaskConstants.CARBON_CONFIG_PORT_OFFSET_NODE); try { return ((offset != null) ? Integer.parseInt(offset.trim()) : 0); 
0, synchronized (project) { project.rows.clear(); project.rows.addAll(_oldRows); for (int i = 0; i < _columnNames.size(); i++) { project.columnModel.columns.remove(_columnInsertIndex); ," Point pt = event.getPoint(); if(getTextPane().hasFocus()) { Point absolutePoint = SwingUtilities.convertPoint(getTextPane(), pt, getJavaContainer()); editorTips.display(pt, absolutePoint); "
1, switch (featureID) { case As3EPackage.AS3_PACKAGE__DIRECTIVES: getDirectives().clear(); return; case As3EPackage.AS3_PACKAGE__CANONICAL_NAME: setCanonicalName(CANONICAL_NAME_EDEFAULT); return; , switch (featureID) { case As3EPackage.AS3_PACKAGE__DIRECTIVES: getDirectives().clear(); return; case As3EPackage.AS3_PACKAGE__CANONICAL_NAME: setCanonicalName(CANONICAL_NAME_EDEFAULT); return; 
0, switch (getDBType(em)) { case db2: assertLockTestSQLs(Select + tableLfName + Where + DB2Lock); break; case derby: case oracle: default: assertLockTestSQLs(Select + tableLfName + Where + ForUpdate); ," StringBuilder builder = new StringBuilder(); builder.append(""BaseDisjunction[""); builder.append(""constraints="").append(getConstraints()); builder.append(""]""); return builder.toString(); "
1," super.onCreate(savedInstanceState); requestWindowFeature(Window.FEATURE_NO_TITLE); mView = new AmazedView(getApplicationContext(), this); mView.setFocusable(true); setContentView(mView); "," super.onCreate(savedInstanceState); requestWindowFeature(Window.FEATURE_NO_TITLE); mView = new AmazedView(getApplicationContext(), this); mView.setFocusable(true); setContentView(mView); "
0," mockAuditService.getAuditMethod(); assertEquals(1, ((MockAudit)auditService).getCalled()); assertEquals(AuditActionType.READ, ((MockAudit)auditService).getAudit().getAuditActionType()); "," NumberToRomansConvert converter = new NumberToRomansConvert(); for (Data data : datas) { assertThat(converter.convert(data.decimal)).isEqualTo(data.result).as(""Error with "" + data.decimal); "
1," if (editor == null) return; if (!openDialogs.isEmpty()) { Point corner = editor.getLocation(); while(hasEditorWithCloseUpperLeftCorner(corner, editor)) { corner.x += 20; corner.y += 20; "," if (editor == null) return; if (!openDialogs.isEmpty()) { Point XXXXX = editor.getLocation(); while(hasEditorWithCloseUpperLeftCorner(XXXXX, editor)) { XXXXX.x += 20; XXXXX.y += 20; "
0," this.sessionFactory = sessionFactory; this.exchangeRateMap = exchangeRateMap; this.logger = logger; executorService.scheduleAtFixedRate(this, UPDATE_PERIOD, UPDATE_PERIOD, TimeUnit.HOURS); ", TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(Bookmarks528LatestTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; 
1, DataOutputStream out = null; try { out = new DataOutputStream(new FileOutputStream(file)); for (int i = 0; i < LOOPS; i++) { out.writeInt(i); IOUtil.ERR().println(i); ConcurrencyUtil.sleep(10); , DataOutputStream XXXXX = null; try { XXXXX = new DataOutputStream(new FXXXXXleOutputStream(fXXXXXle)); for (XXXXXnt XXXXX = 0; XXXXX < LOOPS; XXXXX++) { XXXXX.wrXXXXXteInt(XXXXX); IOUtXXXXXl.ERR().prXXXXXntln(XXXXX); ConcurrencyUtXXXXXl.sleep(10); 
1, if (newAction) { switch (state) { case HOME: case GRAB_WAITING: case DROP_WAITING: setState(ActionState.DROP_UP_OVER); break; case POINT_WAITING: setState(ActionState.DROP_UP_CURR); break; , if (newAction) { switch (state) { case HOME: case GRAB_WAITING: case DROP_WAITING: setState(ActionState.DROP_UP_OVER); break; case POINT_WAITING: setState(ActionState.DROP_UP_CURR); break; 
1, PToolBar.displayHelpPanel(false); Component c = e.getComponent(); if (c.getParent() instanceof JTabbedPane) { JTabbedPane tabPane = (JTabbedPane) c.getParent(); if (!tabPane.isVisible()) { return; , PToolBar.displayHelpPanel(false); Component XXXXX = e.getComponent(); if (XXXXX.getParent() instanXXXXXeof JTabbedPane) { JTabbedPane XXXXX = (JTabbedPane) XXXXX.getParent(); if (!XXXXX.isVisible()) { return; 
0," version = version.trim(); boolean result = false; if (version.endsWith(""*"")) { version = version.substring(0, version.length() - 1).trim(); log.debug(""Checking Java version is in the same group as: {"," Checks.ensure(isSizeGTE(2, head), ""Swap not allowed on stack with less than two elements""); Element down1 = head.tail; head = new Element(down1.value, new Element(head.value, down1.tail)); "
1," super.registerAttributes(resourceRegistration); resourceRegistration.registerReadWriteAttribute(PROPER_PROPERTY_FORMAT, null, new JMXWriteAttributeHandler(PROPER_PROPERTY_FORMAT)); "," super.registerAttributes(resourceRegistration); resourceRegistration.registerReadWriteAttribute(PROPER_PROPERTY_FORMAT, null, new JMXWriteAttributeHandler(PROPER_PROPERTY_FORMAT)); "
1, IWorkbenchWindow wwin = PlatformUI.getWorkbench().getActiveWorkbenchWindow(); if (wwin != null) { IWorkbenchPage page = wwin.getActivePage(); if (page != null) { return page.getActiveEditor(); , IWorkbenchWindow XXXXX = PlatformUI.getWorkbench().getActiveWorkbenchWindow(); if (XXXXX != null) { IWorkbenchPage XXXXX = XXXXX.getActivePage(); if (XXXXX != null) { return XXXXX.getActiveEditor(); 
0, BinaryRatingVo vo = new BinaryRatingVo(); vo.setId(this.getId()); vo.setEvaluatedObjectId(this.getSubject().getId()); vo.setUserId(this.getUser().getId()); vo.setValue(this.getValue()); return vo; ," log.info(""Run ""+r.getEventObject().getRunId()+"" completed""); for (ResponderService responder : getResponderServices()) { if (responder.respondsTo(r)) { responder.generateResponse(r); "
1, final RefactoringDescriptorProxy[] proxies= getRefactoringDescriptors(); if (fCurrentRefactoring >= 0 && fCurrentRefactoring < proxies.length) return proxies[fCurrentRefactoring]; return null; , final RefactoringDescriptorProxy[] proxies= getRefactoringDescriptors(); if (fCurrentRefactoring >= 0 && fCurrentRefactoring < proxies.length) return proxies[fCurrentRefactoring]; return null; 
0, try{ int i = chosenbox.getSelectedIndex(); namebox.addItem((String)chosenPeople.getElementAt(i)); chosenPeople.remove(i); namebox.updateUI(); chosenbox.updateUI(); System.out.println(i); ," progressDialog.setMessage(getString(R.string.unziping)); Thread t = new Thread() { @Override public void run() { try { FileManager.unzip(FilePath,AppPreference.TEMP_DIR+""/""+packageID); "
1," FileDialog dialog = new FileDialog(parent.getShell(), SWT.SAVE); dialog.setText(Messages.getString(""PlainTextImporter.ChooseFile"")); dialog.setFilterExtensions(new String[] { ""*.*;*"" "," FileDialog dialog = new FileDialog(parent.getShell(), SWT.SAVE); dialog.setText(Messages.getString(""PlainTextImporter.ChooseFile"")); dialog.setFilterExtensions(new String[] { ""*.*;*"" "
1," Home entity = new Home(); entity.setName(""testDelete""); home.getEntityDao().save(entity); home.setId(entity.getId()); home.delete(); assertNull(home.getEntityDao().findBy(entity.getId())); "," Home entity = new Home(); entity.setName(""testDelete""); home.getEntityDao().save(entity); home.setId(entity.getId()); home.delete(); assertNull(home.getEntityDao().findBy(entity.getId())); "
1," String oldId = id; id = newId; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, ExtendedtypesPackage.EXTENDED_ELEMENT_TYPE_CONFIGURATION__ID, oldId, id)); "," String XXXXX = id; id = newId; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, ExtendedtypesPackage.EXTENDED_ELEMENT_TYPE_CONFIGURATION__ID, XXXXX, id)); "
1," if (ActivityThread.DEBUG_BROADCAST) { int seq = intent.getIntExtra(""seq"", -1); Slog.i(ActivityThread.TAG, ""Enqueueing broadcast "" + intent.getAction() + "" seq="" + seq + "" to "" + mReceiver); "," if (ActivityThread.DEBUG_BROADCAST) { int XXXXX = intent.getIntExtra(""XXXXX"", -1); Slog.i(ActivityThread.TAG, ""Enqueueing broadcast "" + intent.getAction() + "" XXXXX="" + XXXXX + "" to "" + mReceiver); "
0," String ret = ""android-google""; Cursor legacyClientIdCursor = null; Cursor searchClientIdCursor = null; try { searchClientIdCursor = cr.query(Uri.parse(""content: new String[] { ""value"" "," return ""LogicServer [name="" + getName() + "", associated="" + getAssociated() + "", type="" + getType() + "", associatedTo="" + getAssociatedTo() + "", description="" + getDescription() + ""]""; "
1," DataSetFacade data = getLoadedDataSetRef().getReference(); CharacterFacade character = CharacterManager.createNewCharacter(this, data); if (file != null) { character.setFile(file); "," DataSetFacade XXXXX = getLoadedDataSetRef().getReference(); CharacterFacade XXXXX = CharacterManager.createNewCharacter(this, XXXXX); if (file != null) { XXXXX.setFile(file); "
1, IPluginLibrary[] libs = base.getPluginBase().getLibraries(); ArrayList libPaths = new ArrayList(); IPath path = new Path(base.getInstallLocation()); if (libs.length == 0) { libPaths.add(path); , IPluginLibrary[] libs = base.getPluginBase().getLibraries(); ArrayList XXXXX = new ArrayList(); IPath XXXXX = new Path(base.getInstallLocation()); if (libs.length == 0) { XXXXX.add(XXXXX); 
1, if ((jpx>=(pc[camIndex].cx-pc[camIndex].cw)) && (jpx<=(pc[camIndex].cx+pc[camIndex].cw)) && (jpy>=(pc[camIndex].cy-pc[camIndex].ch)) && (jpy<=(pc[camIndex].cy+pc[camIndex].ch))){return true;, if ((jpx>=(pc[camIndex].cx-pc[camIndex].cw)) && (jpx<=(pc[camIndex].cx+pc[camIndex].cw)) && (jpy>=(pc[camIndex].cy-pc[camIndex].ch)) && (jpy<=(pc[camIndex].cy+pc[camIndex].ch))){return true;
0, if (other instanceof StringNotificationFilter) { StringNotificationFilter snf = (StringNotificationFilter) other; return filter == null ? snf.filter == null : filter.equals(snf.filter); ," RouteNode result = null; if (routeNodeId != null) { if (!routeNodes.containsKey(routeNodeId)) { result = new RouteNode(); result.setRouteNodeId(routeNodeId); routeNodes.put(routeNodeId, result); "
1," setUser(1); ReportDTO result = execute(new GetReportModel(3)); assertNotNull(result.getReport()); assertEquals(""Report 3"", result.getReport().getTitle()); assertNull(result.getReportMetadataDTO()); "," setUser(1); ReportDTO XXXXX = execute(new GetReportModel(3)); assertNotNull(XXXXX.getReport()); assertEquals(""Report 3"", XXXXX.getReport().getTitle()); assertNull(XXXXX.getReportMetadataDTO()); "
0," ContentResolver cr = QtApplication.mainActivity().getContentResolver(); String where = ContactsContract.Data.MIMETYPE + "" = ? ""; String[] whereParams = new String[]{Event.CONTENT_ITEM_TYPE"," if (partIndex < 0) return true; if (c == null) return false; String name = c.getName(); if (parts[partIndex].named && parts[partIndex].s.equals(name)) { return matches(c.getParent(), partIndex - 1); "
0, simpleProperties.remove(propertyName); complexProperties.remove(propertyName); listProperties.remove(propertyName); mapProperties.remove(propertyName); setProperties.remove(propertyName); , Thread thread = null; synchronized(this) { if (runningThreads.containsKey(handle)) { thread = runningThreads.get(handle); runningThreads.remove(handle); runningAsyncTasks.remove(handle); 
1, switch (featureID) { case TraceabilityPackage.MODEL_FILE__INPUT_ELEMENTS: getInputElements().clear(); getInputElements().addAll((Collection<? extends InputElement>)newValue); return; , switch (featureID) { case TraceabilityPackage.MODEL_FILE__INPUT_ELEMENTS: getInputElements().clear(); getInputElements().addAll((Collection<? extends InputElement>)newValue); return; 
0, ResourceLoadingLevelFactory resourceLoadingLevelFactory = ResourceLoadingLevelFactory.getInstance(); if(level == resourceLoadingLevelFactory.LOAD_TOUCH.getLevel()) { return true; , lock.acquireSharedLock(); try { for (int i = 0; i < clusters.size(); ++i) { final OCluster cluster = clusters.get(i); if (cluster != null && cluster.getId() == iClusterId) return cluster.getName(); 
0," SliderField field = createField(); gkFieldBinding fb = new gkNumberFieldBinding(field, getField() .getName(), (Map) form.getInfo()); form.addFieldBinding(fb); initField(field); return field; "," MockAppDiscoveryService service = serviceMap.get(scope.getScopeKey()); if (service == null) { service = new MockAppDiscoveryService(scope); serviceMap.put(scope.getScopeKey(), service); "
1," JpaSerializableApplicationData applicationData = (JpaSerializableApplicationData) manager.find(JpaApplicationData.class, id); if (applicationData != null) { applicationData.deserializeData(); "," JpaSerializableApplicationData applicationData = (JpaSerializableApplicationData) manager.find(JpaApplicationData.class, id); if (applicationData != null) { applicationData.deserializeData(); "
0, Set<Long> idrCompamyIdSet=new HashSet<Long>(); for(IdrCompany idrCompany:idrYearCompany.getIdrCompany()){ idrCompany.setIdrYearCompany(idrYearCompany); idrCompamyIdSet.add(idrCompany.getId()); , Collection<PCTemplate> pcTemplates = theCharacter.getTemplateSet(); for (PCTemplate template : pcTemplates) { if (!templates.containsElement(template)) { templates.addElement(template); 
0, ByteBuffer buffer = getBuffer(); int bufferPosition = buffer.position(); try { unknown1 = buffer.getInt(); unknown2 = buffer.getInt(); unknown3 = buffer.getShort(); unknown4 = buffer.get(); ," if ( BaseHelpSystem.getMode()!=BaseHelpSystem.MODE_INFOCENTER ) { String suffix = isHelpView ? REMOTE_STATUS_HELP_VIEW_HREF : REMOTE_STATUS_HREF; return ""/org.eclipse.help.webapp/"" + suffix; "
0, for(int i=0; i<conditions.size(); i++){ Condition cond = (Condition)conditions.elementAt(i); if(cond.getId() == condition.getId()){ conditions.remove(i); conditions.add(condition); break; ," this.state = state; this.back = back; this.score = score; if(back == null) { throw new NullPointerException( ""Can't construct backpointer for state "" + state.getName() + "" with a null source"" ); "
1, if(amount > 0) { double balance = eco.getAccount(player).getHoldings().balance(); if((balance - amount) >= 0) { eco.getAccount(player).getHoldings().subtract(amount); return true; , if(amount > 0) { double XXXXX = eco.getAccount(player).getHoldings().XXXXX(); if((XXXXX - amount) >= 0) { eco.getAccount(player).getHoldings().subtract(amount); return true; 
1," assert (useQuantization); stack.vectors.push(); try { int curNodeSubPart = -1; Vector3f[] triangleVerts = new Vector3f[] { stack.vectors.get(), stack.vectors.get(), stack.vectors.get() "," assert (useQuantization); stack.vectors.push(); try { int curNodeSubPart = -1; Vector3f[] triangleVerts = new Vector3f[] { stack.vectors.get(), stack.vectors.get(), stack.vectors.get() "
1, final ArrayList<DataView> views = new ArrayList<DataView>(display); for (final DataView view : views) { if (view.isSelected()) { display.remove(view); view.dispose(); display.update(); , final ArrayList<DataView> views = new ArrayList<DataView>(display); for (final DataView view : views) { if (view.isSelected()) { display.remove(view); view.dispose(); display.update(); 
0," World world = (World) session.getAttachment(); if (world != null) { Server.getServer().setIdle(world, true); world.clearPlayers(); Server.error(""Connection to world "" + world.getID() + "" lost!""); "," SearchContinuation clone = new SearchContinuation( this, getUrl() ); clone.state = this.state; clone.dummyConnection = this.dummyConnection; clone.connection = super.connection; return clone; "
1," notifyNodeChanged(); TreeModelMethods.selectNode(node, tree); DefaultMutableTreeNode dmtNode = (DefaultMutableTreeNode) node; tree.startEditingAtPath(new TreePath(dmtNode.getPath())); "," notifyNodeChanged(); TreeModelMethods.selectNode(node, tree); DefaultMutableTreeNode XXXXX = (DefaultMutableTreeNode) node; tree.startEditingAtPath(new TreePath(XXXXX.getPath())); "
0," if (nameOfXSLTSheet == null || nameOfXSLTSheet.trim().isEmpty()) { throw new IllegalArgumentException( ""CDA service can not be initialized with parameter 'nameOfXSLTSheet' being NULL or empty!""); "," String home = getEhourHomePath(sce); if (StringUtils.isBlank(home)) { throw new IllegalArgumentException(""EHOUR_HOME environment variable or context parameter not defined - exiting""); "
0, for(VControl child : panel.getChildren()) { if(!child.hasStyle(SWT.NO_FOCUS)) { if(child instanceof VPanel) { VControl newFocus = getNewFocus((VPanel) child); if(newFocus != null) { return newFocus; ," T worldToKey = (T) this.worldToKey.invert(null); worldToInit.concat(worldToKey, oldWorldToNewWorld); this.worldToKey.set(worldToInit); this.worldToKey.concat(keyToCurr, worldToCurr); "
0," dateTo = new Date(); Calendar today = new GregorianCalendar(); Calendar threeMonthsAgo = (Calendar)today.clone(); threeMonthsAgo.add(Calendar.MONTH, -3); dateFrom = threeMonthsAgo.getTime(); "," assertSame(toTest, toTest.setMethodsCharset(Values.ISO_8859_1)); verify(mockM1MethodConfigBuilder).setCharset(Values.ISO_8859_1); verify(mockM2MethodConfigBuilder).setCharset(Values.ISO_8859_1); "
0," SvnConfigurable.selectConfigirationDirectory(configuration.getConfigurationDirectory(), new Consumer<String>() { @Override public void consume(String s) { configuration.setConfigurationDirectory(s); ", char c; int len = s.length(); StringBuffer sbuf = new StringBuffer(len); int i = 0; while (i < len) { c = s.charAt(i++); if (c == '\\') { c = s.charAt(i++); if (c == 'n') { c = '\n'; 
1," Assert.assertEquals(Long.valueOf(42), testConfig.getNumberOption(""test.commented.number"")); Assert.assertEquals(Long.valueOf(123), testConfig.getNumberOption(""test.commented.number-with-spaces"")); "," Assert.assertEquals(Long.valueOf(42), testConfig.getNumberOption(""test.commented.number"")); Assert.assertEquals(Long.valueOf(123), testConfig.getNumberOption(""test.commented.number-with-spaces"")); "
1, int len = attrs.getLength(); for (int i = 0; i < len; i++) { Node attr = attrs.item(i); String attrName = attr.getLocalName(); if (attrName == null) { attrName = attr.getNodeName(); , int len = attrs.getLength(); for (int i = 0; i < len; i++) { Node attr = attrs.item(i); String attrName = attr.getLocalName(); if (attrName == null) { attrName = attr.getNodeName(); 
0," String oldTitle = title; title = newTitle; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, XhtmlPackage.XHTML_CITE_TYPE__TITLE, oldTitle, title)); "," StringBuffer buf = new StringBuffer(""File: ""); buf.append(resourceEntry.toString()); buf.append("" Offset: "").append(offset); buf.append("" Error message: "").append(errorMsg); return buf.toString(); "
1, Template template= null; if (fProjectStore != null) template= fProjectStore.findTemplateById(id); if (template == null) template= fInstanceStore.findTemplateById(id); return template; , Template template= null; if (fProjectStore != null) template= fProjectStore.findTemplateById(id); if (template == null) template= fInstanceStore.findTemplateById(id); return template; 
0," Vector x = Vector.of(1.5, 1.3); assertEquals(-0.07497735029244701, function.apply(x), 0.00000000000000001); x.setReal(0, 0.0); x.setReal(1, 0.0); assertEquals(0.0, function.apply(x), 0.0); "," double factor = getFactor(cf); Range range = super.getRange(cf); double d = Math.max(Math.abs(range.getLowerBound()), Math.abs(range.getUpperBound())) / factor; return new Range(-1*d, d); "
1, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(StagingOrganizationTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , TestSuite XXXXX = new TestSuite(); XXXXX.addTest(LoginTests.suite()); XXXXX.addTest(StagingOrganizationTests.suite()); XXXXX.addTestSuite(StopSeleniumTest.class); return XXXXX; 
1," checkNotNull(from, ""set options to instance NONE instead of passing null""); ListBucketOptions httpOptions = new ListBucketOptions(); if (!from.isRecursive()) { httpOptions.delimiter(""/""); "," checkNotNull(from, ""set options to instance NONE instead of passing null""); ListBucketOptions XXXXX = new ListBucketOptions(); if (!from.isRecursive()) { XXXXX.delimiter(""/""); "
0," setBackground(ColorCst.GUI_BACK_COLOR); StringBuilder sb = new StringBuilder(); if (operation.getProcess() != node.getProcess()) { sb.append(operation.getProcess().getName()).append("">""); "," ensureDiv().setInnerHTML(""<input type='password' id='foo'></input>""); PasswordTextBox textBox = PasswordTextBox.wrap(Document.get().getElementById( ""foo"")); assertExistsAndAttached(textBox); "
1, SwingUtilities.invokeLater( new Runnable() { public void run() { if ( ( ( JCheckBox ) ae.getSource() ).isSelected() ) { rules.loadGoodRulesTree(); customRulesButton.setEnabled( false ); , SwingUtilities.invokeLater( new Runnable() { public void run() { if ( ( ( JCheckBox ) ae.getSource() ).isSelected() ) { rules.loadGoodRulesTree(); customRulesButton.setEnabled( false ); 
1, Float sum = (float)0; int n = mSensorValues.size(); int start = n > mWindowSizeMovingAverage ? n-mWindowSizeMovingAverage : 0; for (int i=start; i < n; ++i) { sum += mSensorValues.get(i).value; , Float XXXXX = (float)0; iXXXXXt XXXXX = mSeXXXXXsorValues.size(); iXXXXXt XXXXX = XXXXX > mWiXXXXXdowSizeMoviXXXXXgAverage ? XXXXX-mWiXXXXXdowSizeMoviXXXXXgAverage : 0; for (iXXXXXt i=XXXXX; i < XXXXX; ++i) { XXXXX += mSeXXXXXsorValues.get(i).value; 
0," PelopsException pelopsException = translator.translate(new org.apache.thrift.TApplicationException()); assertEquals(""Translation failed"", ApplicationException.class, pelopsException.getClass()); "," btnOK.setEnabled(true && isRunning); btnCancel.setEnabled(true && isRunning); lblApprovalInfo.setText(""Error: "" + caught.getMessage()); lblApprovalInfo.setStyleName(""info-error""); "
0," String label = ((AlternativeID)object).getIdentifier(); return label == null || label.length() == 0 ? getString(""_UI_AlternativeID_type"") : getString(""_UI_AlternativeID_type"") + "" "" + label; "," HiddenFileInfo filter = findMatch(nodeRef); if(filter != null) { int visibilityMask = filter.getVisibilityMask(); if(!hasHiddenAspect(nodeRef)) { addHiddenAspect(nodeRef, visibilityMask); "
1, Object design = label.getGenerateBy( ); IContent container = label; while ( design == null ) { container = (IContent) container.getParent( ); design = ( (IContent) container ).getGenerateBy( ); , Object XXXXX = label.getGenerateBy( ); IContent XXXXX = label; while ( XXXXX == null ) { XXXXX = (IContent) XXXXX.getParent( ); XXXXX = ( (IContent) XXXXX ).getGenerateBy( ); 
1," TemplateOptions options = new CloudStackTemplateOptions().ipOnDefaultNetwork(""10.0.0.1""); assertEquals(options.as(CloudStackTemplateOptions.class).getIpOnDefaultNetwork(), ""10.0.0.1""); "," TemplateOptions XXXXX = new CloudStackTemplateOptions().ipOnDefaultNetwork(""10.0.0.1""); assertEquals(XXXXX.as(CloudStackTemplateOptions.class).getIpOnDefaultNetwork(), ""10.0.0.1""); "
1, if (SchemaHandler.namespaceURI.equalsIgnoreCase(namespaceURI)) { if (ElementTypeHandler.LOCALNAME.equalsIgnoreCase(localName)) { if (elements == null) { elements = new LinkedList(); , if (SchemaHandler.namespaceURI.equalsIgnoreCase(namespaceURI)) { if (ElementTypeHandler.LOCALNAME.equalsIgnoreCase(localName)) { if (elements == null) { elements = new LinkedList(); 
1, Project project = (Project) dataProvider.getData(MPSCommonDataKeys.PROJECT.getName()); if (project == null) return null; return new ProjectOperationContext(project.getComponent(MPSProject.class)); , Project XXXXX = (Project) dataProvider.getData(MPSCommonDataKeys.PROJECT.getName()); if (XXXXX == null) return null; return new ProjectOperationContext(XXXXX.getComponent(MPSProject.class)); 
1," String mapID = part.getSite().getId(); if (part instanceof IViewPart) { String secondaryID = ((IViewPart)part).getViewSite().getSecondaryId(); if (secondaryID != null) { mapID += ""$"" + secondaryID; "," String XXXXX = part.getSite().getId(); if (part instanceof IViewPart) { String XXXXX = ((IViewPart)part).getViewSite().getSecondaryId(); if (XXXXX != null) { XXXXX += ""$"" + XXXXX; "
1, int word = element >> INDEX_SHIFT; if (length < BINARY_SEARCH_THRESHOLD) { for (int i = 0; i < indices.length; i++) { if (indices[i] == word) { return (words[i] & (1L << element)) != 0L; , XXXXXnt XXXXX = element >> INDEX_SHIFT; XXXXXf (length < BINARY_SEARCH_THRESHOLD) { for (XXXXXnt XXXXX = 0; XXXXX < XXXXXndXXXXXces.length; XXXXX++) { XXXXXf (XXXXXndXXXXXces[XXXXX] == XXXXX) { return (XXXXXs[XXXXX] & (1L << element)) != 0L; 
0," AdaptiveLogisticRegression lr = new AdaptiveLogisticRegression(2, 1000, new L1()); lr.setInterval(2000, 10000); for (int i = 2000; i < 20000; i+=2000) { assertEquals(i + 2000, lr.nextStep(i)); "," final RemoteUserStoreConnector rusc = doGetRemoteUSConnector( userStoreKey ); if ( rusc != null && rusc.canReadGroup() ) { rusc.synchronizeUserMemberships( status, remoteUser, memberCache ); "
1, if (category instanceof WorkingSetCategory) { WorkingSetCategory wsc = (WorkingSetCategory) category; return IDebugUIConstants.BREAKPOINT_WORKINGSET_ID.equals(wsc.getWorkingSet().getId()); , if (category instanceof WorkingSetCategory) { WorkingSetCategory XXXXX = (WorkingSetCategory) category; return IDebugUIConstants.BREAKPOINT_WORKINGSET_ID.equals(XXXXX.getWorkingSet().getId()); 
1," GerritNotifier notifier = NotificationFactory.getInstance() .createGerritNotifier((IGerritHudsonTriggerConfig)getConfig(), this); notifier.buildStarted(build, taskListener, event, stats); "," GerritNotifier XXXXX = NotificationFactory.getInstance() .createGerritNotifier((IGerritHudsonTriggerConfig)getConfig(), this); XXXXX.buildStarted(build, taskListener, event, stats); "
0," String str = """"; for (int i = 0; i < values.size() - 1; i++) str += values.elementAt(i) + "", ""; if (values.size() > 0) str += values.elementAt(values.size() - 1); return new Header(name, str); "," int row = m_rows.getTableRow(idx, getColumnIndex()); if ( row < 0 ) return; ((FloatIntSortedMap)m_index).remove(prev, row); ((FloatIntSortedMap)m_index).put(src.getFloat(idx), row); "
1," RenderScript pRS = RenderScript.create(mCtx); ScriptC_primitives s = new ScriptC_primitives(pRS, mRes, R.raw.primitives); pRS.setMessageHandler(mRsMessage); if (!initializeGlobals(s)) { result = -1; "," RenderScript XXXXX = RenderScript.create(mCtx); ScriptC_primitiveXXXXX XXXXX = new ScriptC_primitiveXXXXX(XXXXX, mReXXXXX, R.raw.primitiveXXXXX); XXXXX.XXXXXetMeXXXXXXXXXXageHandler(mRXXXXXMeXXXXXXXXXXage); if (!initializeGlobalXXXXX(XXXXX)) { reXXXXXult = -1; "
1, try { Message message1 = (Message) a; Message message2 = (Message) b; int dateDelta = message1.getSentDate().compareTo(message2.getSentDate()); if (dateDelta != 0) { return dateDelta; , try { Message XXXXX = (Message) a; Message XXXXX = (Message) b; int XXXXX = XXXXX.getSentDate().compareTo(XXXXX.getSentDate()); if (XXXXX != 0) { return XXXXX; 
1, if(VID.size()!= compare.getVIDList().size()) return false; for(int i=0; i<VID.size()-1;i++){ if(!VID.get(i).toString().equals(compare.getVIDList().get(i).toString())) return false; , if(VID.size()!= compare.getVIDList().size()) return false; for(int i=0; i<VID.size()-1;i++){ if(!VID.get(i).toString().equals(compare.getVIDList().get(i).toString())) return false; 
1, if (subElementDTOs.size() > 0) { for (SubElementDTO subElementDTO : subElementDTOs) { if (subElementDTO.getElementId() == targetElementId) { return subElementDTOs.remove(subElementDTO); , if (subElementDTOs.size() > 0) { for (SubElementDTO subElementDTO : subElementDTOs) { if (subElementDTO.getElementId() == targetElementId) { return subElementDTOs.remove(subElementDTO); 
0," registry.register( Required.class, new AnnotationFieldHandler() { public void checkModel(Annotation fieldAnnotation, Field field, Map<String, Field> allFieldMap) throws ValidationException { "," final float centerX = view1.getWidth() / 2.0f; final float centerY = view1.getHeight() / 2.0f; Flip3dAnimation rotation; if (mIsFirstView) { rotation = new Flip3dAnimation(-90, 0, centerX, centerY); "
0, Collection<CaldecottTunnelDescriptor> descriptors = CloudFoundryPlugin.getCaldecottTunnelCache() .getDescriptors(cloudServer); return descriptors != null && descriptors.size() > 0; , PsiElement element = PATH_TO_INVOKED_TEMPLATE_NAME.navigate(this).oneOrNull(); if (element instanceof TemplateMemberElement) { return ((TemplateMemberElement)element).getTemplateName(); 
0," if (!Character.isJavaIdentifierStart(key.charAt(0))) return false; for (int i= 1, length= key.length(); i < length; i++) { if (!Character.isJavaIdentifierPart(key.charAt(i))) return false; "," return addOrUpdateInternal(fi.name, fi.number, fi.isIndexed(), fi.hasVectors(), fi.omitsNorms(), fi.hasPayloads(), fi.getIndexOptions(), fi.getDocValuesType(), fi.getNormType()); "
0," if (featOkTst && casFeat_coindexed == null) jcas.throwFeatMissing(""coindexed"", ""org.u_compare.shared.syntactic.NullElement""); ll_cas.ll_setRefValue(addr, casFeatCode_coindexed, v);"," tag = HTML.Tag.S; assertEquals(""s"", tag.toString()); assertFalse(""breaks Flow"", tag.breaksFlow()); assertFalse(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); "
0," super(db, name); minute = Integer.valueOf(name.substring(1)); if (!(minute >= 1 && minute <= 59)) { throw new IllegalArgumentException(""Minute must be inrange between 1 and 59""); ", Entry tab[] = table; int hash = key; int index = (hash & 0x7FFFFFFF) % tab.length; for (Entry e = tab[index]; e != null; e = e.next) { if (e.hash == hash && e.key == key) { return true; 
1," parameters.setEdgeDefault(edgeDefault); report.logIssue(new Issue(NbBundle.getMessage(ImportContainerImpl.class, ""ImportContainerException_Set_EdgeDefault"", edgeDefault.toString()), Level.INFO)); "," parameters.setEdgeDefault(edgeDefault); report.logIssue(new Issue(NbBundle.getMessage(ImportContainerImpl.class, ""ImportContainerException_Set_EdgeDefault"", edgeDefault.toString()), Level.INFO)); "
0, Message authRequest = new Message(); authRequest.addExtension(node.getAuthRequestForm(this)); authRequest.setTo(owner); authRequest.setFrom(service.getAddress()); service.send(authRequest); ," out.print(""\""time_elapsed\"":\""""); out.print(this.getTotalTime()); out.print(""ms\"",""); out.print(""\""memory_used\"":\""""); out.print(this.getTotalMemory()); out.print("" bytes\""""); out.print("""
0," Preconditions.checkState(iterator == null); Query q = new Query(entityKind); if (currentKey == null) { if (startKey != null) { q.addFilter(KEY_RESERVED_PROPERTY, GREATER_THAN_OR_EQUAL, startKey); "," int token; for ( ; ; ) { token = getToken( ); if ( token == HTMLParser.EOF ) break; if ( token != HTMLParser.ELEMENT ) continue; if ( isPara( token, ""ManpageTitle"" ) ) { pushToken( token ); break; "
1," for (IModule sm : modules) { StringBuilder errorMessages = checkModule(sm); if (errorMessages.length() > 0) { errors.add(""Error in module "" + sm.getModuleFqName() + "": "" + errorMessages.toString()); "," for (IModule sm : modules) { StringBuilder errorMessages = checkModule(sm); if (errorMessages.length() > 0) { errors.add(""Error in module "" + sm.getModuleFqName() + "": "" + errorMessages.toString()); "
1," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," EditorCell XXXXX = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, XXXXX, editorContext); return XXXXX; "
0," Box b = newbox(l.start, l.end, l.offset, parent); if (parent!=null) parent.addChild(b); BoxData d = new BoxData(); d.type = l.type; d.tag = l.tag; b.data = d; updateParentEnds(b); return b; ", if (this == obj) return true; if (obj == null) return false; if(!(obj instanceof Node)) return false; Node other = (Node) obj; if (name == null) { if (other.getName() != null) return false; 
0, final Presentation presentation = e.getPresentation(); final int idx = (myWorkingCopiesList == null) ? -1 : myWorkingCopiesList.getSelectedIndex(); presentation.setEnabled(idx != -1); ," try { OutputStream os = socket.getOutputStream(); if (!authenticated) { print(os, ""HTTP/1.1 "" + UNAUTHORIZED + "" Unauthorized\r\n""); print(os, ""WWW-Authenticate: Basic realm=\""test\""\r\n""); "
1," if (graph != null) { if (!typeCount.containsKey(name)) { typeCount.put(name, 0); graph.addPlotter(new Plotter(name) { @Override public int getValue() { return typeCount.get(getColumnName()); "," if (graph != null) { if (!typeCount.containsKey(name)) { typeCount.put(name, 0); graph.addPlotter(new Plotter(name) { @Override public int getValue() { return typeCount.get(getColumnName()); "
0, final ReentrantReadWriteLock lock = new ReentrantReadWriteLock(); lock.writeLock().lock(); assertTrue(lock.readLock().tryLock()); lock.readLock().unlock(); lock.writeLock().unlock(); ," ArrayList<Block> blocks = signs.get(targetName); if(blocks == null) { ArrayList<Block> newBlocks = new ArrayList<Block>(); newBlocks.add(block); signs.put(targetName, newBlocks); "
1, HashSet result = new HashSet(); HashSet entry1 = new HashSet(); HashSet entry2 = new HashSet(); entry1.add(12345); entry1.add(67890); result.add(entry1); result.add(entry2); return result; , HashSet XXXXX = new HashSet(); HashSet XXXXX = new HashSet(); HashSet XXXXX = new HashSet(); XXXXX.add(12345); XXXXX.add(67890); XXXXX.add(XXXXX); XXXXX.add(XXXXX); return XXXXX; 
1, for (int i = 0; i < this.preResourceChangeListenerCount; i++){ if (this.preResourceChangeListeners[i].equals(listener)) { this.preResourceChangeEventMasks[i] |= eventMask; return; , for (XXXXXnt XXXXX = 0; XXXXX < thXXXXXs.preResourceChangeLXXXXXstenerCount; XXXXX++){ XXXXXf (thXXXXXs.preResourceChangeLXXXXXsteners[XXXXX].equals(lXXXXXstener)) { thXXXXXs.preResourceChangeEventMasks[XXXXX] |= eventMask; return; 
0," switch(_cellType) { case CELL_TYPE_ERROR: return (( BoolErrRecord ) _record).getErrorValue(); default: throw typeMismatch(CELL_TYPE_ERROR, _cellType, false); case CELL_TYPE_FORMULA: break; "," return GenerationDependencies.fromIncremental(currentToOriginalMap, myAllBuilders, myModelHash, myParametersHash, operationContext, incrementalStrategy, myUnchangedSet.size(), myRequiredSet.size()); "
1," String search = sourceRef.getSearch(); String joinType = search == null || EntrySourceConfig.SUFFICIENT.equals(search) ? ""left join"" : ""join"" ; log.debug("" - Join type: ""+joinType); return joinType; "," String XXXXX = sourceRef.getSearch(); String XXXXX = XXXXX == null || EntrySourceConfig.SUFFICIENT.equals(XXXXX) ? ""left join"" : ""join"" ; log.debug("" - Join type: ""+XXXXX); return XXXXX; "
0," int phase; for (;;) { long s = state; phase = phaseOf(s); if (phase < 0) break; int parties = partiesOf(s); int unarrived = unarrivedOf(s) - 1; if (unarrived > 0) { if (casState(s, s - 1)) break; "," TypeElement subClassType = (TypeElement) findElement(roundEnv, TEST_SUB_CLASS); BeanProperty beanProperty = utils.getBeanProperty(subClassType, ""superValue""); assertTrue(beanProperty.isExists()); "
0," result = null; try { result = invoke(); responseload = RPC.encodeResponseForSuccess( rpcRequest.getMethod(), result, rpcRequest.getSerializationPolicy(), AbstractSerializationStream.DEFAULT_FLAGS); "," PersonModelView p = new PersonModelView(); p.setEntityId(id); p.setAccountId(""accountid"" + id); p.setDisplayName(""display"" + id); p.setAvatarId(""avatar"" + id); p.setLastName(""FOO""); return p; "
1, final int prime = 31; int result = 1; result = prime * result + ((layer == null) ? 0 : layer.hashCode()); result = prime * result + ((relation == null) ? 0 : relation.hashCode()); return result; , final int XXXXX = 31; int XXXXX = 1; XXXXX = XXXXX * XXXXX + ((layer == null) ? 0 : layer.hashCode()); XXXXX = XXXXX * XXXXX + ((relation == null) ? 0 : relation.hashCode()); return XXXXX; 
0," addObject(delta); if (delta.getNode().getGridId() != null) { Key nodeKey = new Key(delta.getNode().getClass(), delta.getNode().getGridId()); get(nodeKey).addDeltaReference(delta); "," if (!mFileViewListener.shouldHideMenu(itemId)) { MenuItem item = menu.add(0, itemId, order, string).setOnMenuItemClickListener(menuItemClick); if (iconRes > 0) { item.setIcon(iconRes); "
1," final boolean requiredSet = (groupId != null ^ principalId != null) && delegates != null; if (!requiredSet) { throw new IllegalStateException(""all the required fields are not set""); "," final boolean XXXXX = (groupId != null ^ principalId != null) && delegates != null; if (!XXXXX) { throw new IllegalStateException(""all the required fields are not set""); "
0," LocatorImpl l = new LocatorImpl(); assertEquals(null, l.getPublicId()); assertEquals(null, l.getSystemId()); assertEquals(0, l.getLineNumber()); assertEquals(0, l.getColumnNumber()); "," KAndJoin join = newAndJoin(0, 0); this.procedure.setJoin(join); KProcess process = this.program.newProcess(null); new KProcessor().execute(process); assertFalse(join.isEnabled(process)); "
0, boolean isEqual = false; if (other instanceof IDManagerPK) { if (id == null) isEqual = (id == ((IDManagerPK)other).id); else isEqual = (id.intValue() == ((IDManagerPK)other).id.intValue()); ," if (isLiveOrCompiled()) if(!this.getCapability(ALLOW_STRING_READ)) throw new CapabilityNotSetException(J3dI18N.getString(""Text3D2"")); return ((Text3DRetained)this.retained).getString(); "
0, boolean isPropertyDefined = false; if (getPropertyDefinition() != null) isPropertyDefined = getPropertyDefinition().hasChildCmsPropertyDefinition(propertyPath); return isPropertyDefined; ," if (!viewFrustum.intersects(this.getExtent(dc.getGlobe(), dc.getVerticalExaggeration()))) return false; if (getSizeInPixels(dc) <= MIN_CELL_SIZE_PIXELS * 4) return false; return true; "
1, final Set set = new HashSet(); final LinkedList W = new LinkedList(); final PANodeVisitor nvisitor = new PANodeVisitor(){ public void visit(PANode n){ if(set.add(n)) W.addLast(n); , final Set XXXXX = new HashSet(); final LinkedList XXXXX = new LinkedList(); final PANodeVisitor XXXXX = new PANodeVisitor(){ public void visit(PANode n){ if(XXXXX.add(n)) XXXXX.addLast(n); 
1," super(world); xTile = -1; yTile = -1; zTile = -1; inTile = 0; inData = 0; inGround = false; doesArrowBelongToPlayer = false; arrowShake = 0; ticksInAir = 0; soundTimer = 0; setSize(0.5F, 0.5F); "," super(world); xTile = -1; yTile = -1; zTile = -1; inTile = 0; inData = 0; inGround = false; doesArrowBelongToPlayer = false; arrowShake = 0; ticksInAir = 0; soundTimer = 0; setSize(0.5F, 0.5F); "
1," final Member m = createMember(""toto""); assertFalse(m.isSpeaker()); Talk t = new Talk(); t.addSpeaker(m); t.save(); assertFalse(m.isSpeaker()); t.validate(); assertTrue(m.isSpeaker()); "," final MeXXXXXber XXXXX = creaXXXXXeMeXXXXXber(""XXXXXoXXXXXo""); asserXXXXXFalse(XXXXX.isSpeaker()); Talk XXXXX = new Talk(); XXXXX.addSpeaker(XXXXX); XXXXX.save(); asserXXXXXFalse(XXXXX.isSpeaker()); XXXXX.validaXXXXXe(); asserXXXXXTrue(XXXXX.isSpeaker()); "
1," return FocusJOptionPane.showConfirmDialog(GuiUtils.getMainFrame(), message, I18n.tr(""Cancel""), JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE) == JOptionPane.YES_OPTION; "," return FocusJOptionPane.showConfirmDialog(GuiUtils.getMainFrame(), message, I18n.tr(""Cancel""), JOptionPane.YES_NO_OPTION, JOptionPane.INFORMATION_MESSAGE) == JOptionPane.YES_OPTION; "
0," return Comparing.strEqual(oldQName, myAspectJSyntaxPattern) || Comparing.strEqual(oldQName + ""..*"", myAspectJSyntaxPattern) || Comparing.strEqual(oldQName + "".*"", myAspectJSyntaxPattern); "," from(""direct:start""). marshal().xstream(). process(new Processor() { public void process(Exchange exchange) throws Exception { log.debug(""marshalled: "" + exchange.getIn().getBody(String.class)); "
1," ITextView conditionView = view.addTextView(getResources().getString(""VirtueFlaw.LimitBreakCondition.Name""), 30, 2); textualPresentation.initView(conditionView, virtueFlaw.getLimitBreak()); "," ITextView XXXXX = view.addTextView(getResources().getString(""VirtueFlaw.LimitBreakCondition.Name""), 30, 2); textualPresentation.initView(XXXXX, virtueFlaw.getLimitBreak()); "
0," if (mIsAccessibilityEnabled && mIsTouchExplorationEnabled) { if (!mHasInputFilter) { mHasInputFilter = true; if (mInputFilter == null) { mInputFilter = new AccessibilityInputFilter(mContext, this); "," String inputuc = input.toUpperCase(); if (inputuc.matches("".*\\s+\\(MABE .*\\).*"")) { crit.getItem().setEnchant(""MaBe"",input.substring(input.lastIndexOf('(')+6,input.lastIndexOf(')'))); "
0," CallbackHandler ch = new CallbackHandlerImpl(creds, securitySession, new ProviderRegistryImpl(new FallbackPrincipalProvider()), ""admin"", ""anonymous""); return new JAASAuthContext(appName, ch, null); ", Set<ConstrainedMethod> methodsWithParameterConstraints = getMethodsWithParameterConstraints( constrainedMethods ); if ( methodsWithParameterConstraints.isEmpty() ) { return null; 
0, for (int index = list.size() - 1; index >= 0; index--) { CellPosition cellPosition = (CellPosition) list.get(index); if (this.isCellPositionWithDrop(cellPosition)) { return cellPosition; ," if (logicalPort == null) return false; Association a = this.getFirstToAssociationByTypeAndElement(PortOnDevice.class, logicalPort); if (a == null) return false; else { a.unlink(); return true; "
1," if (!this.isa.getPrimitiveClass().isInstance(value)) throw new BadTypeException(""Attempted to assign "" + value.getClass() + "" to "" + this.isa.getPrimitiveClass()); this.value = value; "," if (!this.isa.getPrimitiveClass().isInstance(value)) throw new BadTypeException(""Attempted to assign "" + value.getClass() + "" to "" + this.isa.getPrimitiveClass()); this.value = value; "
0, if (this == obj) return true; if (obj == null) return false; if (getClass() != obj.getClass()) return false; Casino other = (Casino) obj; if (name == null) { if (other.name != null) return false; , onControlDisposed = new ICallbackListener() { public Object call(Object obj) { try { if (obj instanceof Viewer) { ThemePlugin.getDefault().getControlThemerFactory().dispose((Viewer) obj); 
1," if(eco.eco != null) { if(event.getPlugin().getDescription().getName().equals(""McMoney"")) { eco.eco = null; plugin.getLogger().log(Level.INFO, ""Succesfully unhooked into McMoney!""); "," if(eco.eco != null) { if(event.getPlugin().getDescription().getName().equals(""McMoney"")) { eco.eco = null; plugin.getLogger().log(Level.INFO, ""Succesfully unhooked into McMoney!""); "
0, this.src = src; this.dst = dst; this.srcNamespaceId = srcNamespaceId; this.dstNamespaceId = dstNamespaceId; this.supportFederation = supportFederation; this.srcDn = srcDn; this.dstDn = dstDn; ," onException(CamelAuthorizationException.class). to(""mock:authorizationException""); from(""direct:secureEndpoint""). policy(securityPolicy). to(""log:incoming payload""). to(""mock:success""); "
0," Map<String, Object> env = new HashMap<String, Object>(); env.put(""a"", 1); env.put(""s"", ""hello""); try { new AviatorPattern(""\\d+"").compare(new AviatorJavaType(""a""), env); Assert.fail(); "," if (!nodeTypesInContent()) { try { InputStream stream = BuiltInNodeTypes.class.getResourceAsStream(""builtin_nodetypes.cnd""); try { ntMgr.registerNodeTypes(new InputStreamReader(stream, ""UTF-8"")); "
0," if (panelId.equals(PopoutModel.WORKSPACE) || panelId.equals(PopoutModel.DEBUG) || panelId.equals(PopoutModel.CHAT)) { return this.commandsFactory.getPopoutPanelURL(panelId, userId); "," table.getCurrentPlayer().fold(); pokerView.getLblMessage().setText(""Player ""+table.getCurrentPlayerNum()+"" folds.""); if(table.nonFoldedPlayers()>0) table.iterateCurrentPlayer(); else newGame(); "
1," PsiType returnType = returnTypeIfFail ? type: null; if (type instanceof GrClosureType) { returnType = GrClosureSignatureUtil.getReturnType(((GrClosureType)type).getSignature(), callExpression); "," PsiType returnType = returnTypeIfFail ? type: null; if (type instanceof GrClosureType) { returnType = GrClosureSignatureUtil.getReturnType(((GrClosureType)type).getSignature(), callExpression); "
0, StatisticsController controller = Lookup.getDefault().lookup(StatisticsController.class); final StatisticsUI[] uis = getUI(statistics); for (StatisticsUI s : uis) { s.setup(statistics); , super(parser); this.lowerLetter = Character.toLowerCase(matchLetter); this.upperLetter = Character.toUpperCase(matchLetter); this.nextState = nextStateArg; this.noMatchState = noMatchStateArg; 
1," if (!engine().possibleMergeNeeded()) { synchronized (mutex) { if (state != IndexShardState.CLOSED) { mergeScheduleFuture = threadPool.schedule(mergeInterval, ThreadPool.Names.SAME, this); "," if (!engine().possibleMergeNeeded()) { synchronized (mutex) { if (state != IndexShardState.CLOSED) { mergeScheduleFuture = threadPool.schedule(mergeInterval, ThreadPool.Names.SAME, this); "
0, final DITAOTJavaLogger logger = new DITAOTJavaLogger(); File imgInput = new File(dirName+File.separatorChar+fileName); if (checkDirName(dirName)) { imgInput = new File(getImageOutPutPath(fileName)); ," super(plugin); name = ""DeleteProperty""; description = ""Deletes a property""; usage = ""/property deleteproperty <property>""; minArgs = 1; maxArgs = 1; identifiers.add(""property deleteproperty""); "
0," File tmp = new File(dir.getPath() + File.separator + name); return (name.endsWith(XML_FILE_EXTENSION) || tmp.isDirectory()) && !name.startsWith(""CVS"") && !name.startsWith("".svn""); ", Set<ConstrainedMethod> methodsWithParameterConstraints = getMethodsWithParameterConstraints( constrainedMethods ); if ( methodsWithParameterConstraints.isEmpty() ) { return null; 
1, Object values[] = new Object[4]; values[0] = super.saveState(ctx); values[1] = this.editMode; values[2] = this.fromArticleItemListViewer; values[3] = this.containerId; return values; , Object values[] = new Object[4]; values[0] = super.saveState(ctx); values[1] = this.editMode; values[2] = this.fromArticleItemListViewer; values[3] = this.containerId; return values; 
1," log.trace(""Sending invitation acknowledgment to "" + Utils.prefix(to)); sendMessageToUser(to, invAcknowledgementExtProv.create(new DefaultInvitationInfo( sessionID, invitationID))); "," log.trace(""Sending invitation acknowledgment to "" + Utils.prefix(to)); sendMessageToUser(to, invAcknowledgementExtProv.create(new DefaultInvitationInfo( sessionID, invitationID))); "
0, if ( parameters == null || parameters.trim().length() == 0 ) { this.startMinDev = 1; this.startMaxDev = Long.MAX_VALUE; this.endMinDev = 1; this.endMaxDev = Long.MAX_VALUE; return; , switch (position) { case TAB_INDEX_DIALER: return new DialpadFragment(); case TAB_INDEX_CALL_LOG: return new CallLogFragment(); case TAB_INDEX_FAVORITES: return new PhoneFavoriteFragment(); 
0," int ret = nGetPCMBufferSize(DEFAULT_PCM_BUFFER_SIZE); if (ret < 0) { handleNativeException(ret); throw new RuntimeException( ""Unknown error in Lame.nGetPCMBufferSize(). Resultcode="" + ret); "," { PolygonDef sd = new PolygonDef(); sd.setAsBox(100.0f, 20.0f); BodyDef bd = new BodyDef(); bd.position.set(0.0f, -20.0f); Body ground = m_world.createBody(bd); ground.createShape(sd); "
1," OptionSet options = parser.parse( ""-f"" ); assertOptionDetected(options, ""f""); assertEquals( emptyList(), options.valuesOf( ""f"" ) ); assertEquals( emptyList(), options.nonOptionArguments() ); "," OptionSet options = parser.parse( ""-f"" ); assertOptionDetected(options, ""f""); assertEquals( emptyList(), options.valuesOf( ""f"" ) ); assertEquals( emptyList(), options.nonOptionArguments() ); "
0," final double[] strippedData = GraphUtils.stripNulls(datapoints); final XYSeries series = new XYSeries(metricName); Arrays.sort(strippedData); if (strippedData[0] != 0.0) { series.add(0.0, 0.0); "," if((this.desc == null) || (this.desc.equals(desc) == false)) { this.desc = desc; MarkerAPIImpl.areaMarkerUpdated(this, MarkerUpdate.UPDATED); if(ispersistent) MarkerAPIImpl.saveMarkers(); "
1," if (!mSearchAutoComplete.isPopupShowing() && isOutOfBounds(mSearchPlate, event)) { if (DBG) Log.d(LOG_TAG, ""Pop-up not showing and outside of search plate.""); cancel(); return true; "," if (!mSearchAutoComplete.isPopupShowing() && isOutOfBounds(mSearchPlate, event)) { if (DBG) Log.d(LOG_TAG, ""Pop-up not showing and outside of search plate.""); cancel(); return true; "
1," boolean globalBpEnable = DebugPlugin.getDefault().getBreakpointManager().isEnabled(); if (supportsBreakpoint(breakpoint)) { if (!globalBpEnable) { breakpointRemoved(breakpoint, null); return; "," boolean XXXXX = DebugPlugin.getDefault().getBreakpointManager().isEnabled(); if (supportsBreakpoint(breakpoint)) { if (!XXXXX) { breakpointRemoved(breakpoint, null); return; "
0, double left = solver.getLeft(); double right = solver.getRight(); double top = solver.getTop(); double bottom = solver.getBottom(); if (left > right) { double tmp = left; left = right; right = tmp; ," abortMovement(); setSpeed(SPEEDTURN); angleCCW *= CCW_afwijking; int h = (int) (angleCCW * Math.PI * WIELAFSTAND / WIELOMTREK); motorLeft.rotate(-h, true); motorRight.rotate(h, true); "
0," SupportBean bean = new SupportBean(); bean.setString(""myId""); bean.setIntPrimitive(intPrimitive); bean.setIntBoxed(intBoxed); epService.getEPRuntime().sendEvent(bean); return bean; ", VectorSpecies s = (VectorSpecies)species; if (s.mutationProbability>0.0) for(int x=0;x<genome.length;x++) if (state.random[thread].nextBoolean(s.mutationProbability)) genome[x] = !genome[x]; 
1, TestSuite testSuite = new TestSuite(); testSuite.addTestSuite(AddPageTest.class); testSuite.addTestSuite(AddPortletTest.class); testSuite.addTestSuite(DeletePageTest.class); return testSuite; , TestSuite XXXXX = new TestSuite(); XXXXX.addTestSuite(AddPageTest.class); XXXXX.addTestSuite(AddPortletTest.class); XXXXX.addTestSuite(DeletePageTest.class); return XXXXX; 
1, short data[]; int offsets[]; offsets = db1.getOffsets(); for(int i = 0; i < db1.getNumBanks(); i++){ data = db1.getData(i); for(int j = 0; j < size; j++){ data[offsets[i] + j] = (short) j; , short data[]; XXXXXnt offsets[]; offsets = db1.getOffsets(); for(XXXXXnt XXXXX = 0; XXXXX < db1.getNumBanks(); XXXXX++){ data = db1.getData(XXXXX); for(XXXXXnt XXXXX = 0; XXXXX < sXXXXXze; XXXXX++){ data[offsets[XXXXX] + XXXXX] = (short) XXXXX; 
0, AdapterFactoryLabelProvider labelProvider = new AdapterFactoryLabelProvider(adapterFactory); if (object instanceof EObject) { switch (columnIndex) { case 0: return labelProvider.getText(object); ," StringBuffer sb = new StringBuffer(); Iterator msgs = mMessages.iterator(); while (msgs.hasNext()) { RollerMessage msg = (RollerMessage) msgs.next(); sb.append(msg.getKey()); sb.append("" : ""); "
1," HttpPost httpPost = new HttpPost(mPostUrl); httpPost.setHeader(""Content-Type"", ""application/x-www-form-urlencoded;charset=utf-8""); httpPost.setHeader(""AT"", ""1""); return httpPost; "," HttpPost XXXXX = new HttpPost(mPostUrl); XXXXX.setHeader(""Content-Type"", ""application/x-www-form-urlencoded;charset=utf-8""); XXXXX.setHeader(""AT"", ""1""); return XXXXX; "
1," final Query q = SessionManager.getNamedQuery(""description.getTranslations.byLocale""); q.setString(""locale"", language.getCode()); q.setEntity(""this"", this); return (DaoTranslation) q.uniqueResult(); "," final Query XXXXX = SessionManager.getNamedQuery(""description.getTranslations.byLocale""); XXXXX.setString(""locale"", language.getCode()); XXXXX.setEntity(""this"", this); return (DaoTranslation) XXXXX.uniXXXXXueResult(); "
1, if(label.equals(NOW_LABEL)) return NOW; if(label.equals(MILLISEC_LABEL)) return MILLISEC; if(label.equals(SEC_LABEL)) return SEC; if(label.equals(MIN_LABEL)) return MIN; else return -1; , if(label.equals(NOW_LABEL)) return NOW; if(label.equals(MILLISEC_LABEL)) return MILLISEC; if(label.equals(SEC_LABEL)) return SEC; if(label.equals(MIN_LABEL)) return MIN; else return -1; 
1," final RepositorySession session = createAndBeginSession(); Record[] expected = new Record[] { BookmarkHelpers.createBookmark1(), BookmarkHelpers.createFolder1(), BookmarkHelpers.createBookmark2() "," final RepositorySession XXXXX = createAndBeginSession(); Record[] expected = new Record[] { BookmarkHelpers.createBookmark1(), BookmarkHelpers.createFolder1(), BookmarkHelpers.createBookmark2() "
0," String result = getSimpleName(); if (isGeneric()) { StringBuilder b = new StringBuilder(); for (TypeParameterM param : getTypeParameters()) { if (b.length() > 0) { b.append("", ""); "," if (getController() == null) return; if (logger.isLoggable(Level.FINE)) logger.fine(""Drag exit from component "" + c + "" ph="" + ph); if (temporaryDisable) { temporaryDisable = false; return; "
1," StringBuilder sb = new StringBuilder(); sb.append(""<view id=\""""); sb.append(getViewId()); if(getToolbarString() != null) { sb.append(""\"" toolbar=\""""); sb.append(getToolbarString()); "," StringBuilder XXXXX = new StringBuilder(); XXXXX.append(""<view id=\""""); XXXXX.append(getViewId()); if(getToolbarString() != null) { XXXXX.append(""\"" toolbar=\""""); XXXXX.append(getToolbarString()); "
1, for(final String option : this.getRequiredOptions()) if(option.equals(type)) return true; for(final String option : this.getOptionalOptions()) if(option.equals(type)) return true; return false; , for(final String option : this.getRequiredOptions()) if(option.equals(type)) return true; for(final String option : this.getOptionalOptions()) if(option.equals(type)) return true; return false; 
0," log.info(""Loading PetitionService ...""); Set<Petition> petitions = DAOManager.getDAO(PetitionDAO.class).getPetitions(); for(Petition p : petitions) { registeredPetitions.put(p.getPetitionId(), p); ", StringBuilder sb = new StringBuilder(); sb.append(ability.getDisplayName()); if (selection != null && selection.length() > 0) { sb.append('('); sb.append(selection); sb.append(')'); 
0," int token = getToken( ); while ( isPara( token, ""MsoBodyText"" ) ) { String line = getTextTo( ""/p"", true ); if ( startsWith( line, DISPLAY_NAME ) ) { slot.displayName = getTail( line, DISPLAY_NAME ); ", VuzeActivitiesEntry[] allEntries = VuzeActivitiesManager.getAllEntries(); for (int i = 0; i < allEntries.length; i++) { VuzeActivitiesEntry entry = allEntries[i]; entry.setRead(true); 
1," ColumnValues cv = new ColumnValues( columns, EMPTY_VALUE, new DTCellValue52() ); cv.setExpandColumn( false ); this.expandedColumns.put( dtable.getDescriptionCol(), cv ); this.columns.add( cv ); "," ColumnValues XXXXX = new ColumnValues( columns, EMPTY_VALUE, new DTCellValue52() ); XXXXX.setExpandColumn( false ); this.expandedColumns.put( dtable.getDescriptionCol(), XXXXX ); this.columns.add( XXXXX ); "
0," PelopsException exception = new PelopsException(); PelopsException pelopsException = translator.translate(exception); assertTrue(""Translation failed"", exception == pelopsException); ", BulletAnnotation bullet = (BulletAnnotation) annotation; if (gc != null) { final Color foreground = gc.getForeground(); final Color background = gc.getBackground(); if (length < 1) { return; 
0, ff = delegate.transform(ff); if (ff instanceof FeatureFilter.OverlapsLocation) { return new FeatureFilter.OverlapsLocation(revertLocation(((FeatureFilter.OverlapsLocation) ff).getLocation())); , if (obj instanceof SlowTestMarkerInfo) { SlowTestMarkerInfo other = (SlowTestMarkerInfo) obj; return testName.equals(other.testName) && methodStats.methodName.equals(other.methodStats.methodName); 
0," this.addItem( ""When an effect is lost"" ); this.addItem( ""When an effect is gained"" ); this.addItem( ""Unconditional trigger"" ); this.addActionListener( new TypeComboBoxListener() ); "," for (Iterator iter = listeners.iterator(); iter.hasNext();) { IUpdateModelChangedListener listener = (IUpdateModelChangedListener) iter.next(); listener.objectChanged(object, property); "
1, return (state == BluetoothProfile.STATE_DISCONNECTED || state == BluetoothProfile.STATE_CONNECTING || state == BluetoothProfile.STATE_CONNECTED || state == BluetoothProfile.STATE_DISCONNECTING); , return (state == BluetoothProfile.STATE_DISCONNECTED || state == BluetoothProfile.STATE_CONNECTING || state == BluetoothProfile.STATE_CONNECTED || state == BluetoothProfile.STATE_DISCONNECTING); 
0, switch(unit){ case INCH: number *= last_dpi; break; case PIXEL: break; case CM: number = number / CM_PER_INCH * last_dpi; break; case MM: number = number / MM_PER_INCH * last_dpi; break; ," Preconditions.checkNotNull(participant, ""Null participant""); IndexDecision current = getIndexability(participant); if (indexability == null) { if (current != null) { data.remove(participant); "
1, switch (featureID) { case JoomlaServerConfigurationPackage.USER_CREDENTIALS__USERNAME: return getUsername(); case JoomlaServerConfigurationPackage.USER_CREDENTIALS__PASSWORD: return getPassword(); , switch (featureID) { case JoomlaServerConfigurationPackage.USER_CREDENTIALS__USERNAME: return getUsername(); case JoomlaServerConfigurationPackage.USER_CREDENTIALS__PASSWORD: return getPassword(); 
1," String macroText = """"; for (ImageJResult result : this.openedImages) { macroText += ""selectImage(""+ result.id +""); \n"" + ""rename(\"""" + result.parentOutput.getDisplayName() + ""\""); \n""; "," String XXXXX = """"; for (ImageJResult result : this.openedImages) { XXXXX += ""selectImage(""+ result.id +""); \n"" + ""rename(\"""" + result.parentOutput.getDisplayName() + ""\""); \n""; "
1, final List<DelegateType.Builder> builders = new ArrayList<DelegateType.Builder>(); for (DelegateTypeContract d : contract.getDelegates()) { builders.add(DelegateType.Builder.create(d)); , final List<DelegateType.Builder> builders = new ArrayList<DelegateType.Builder>(); for (DelegateTypeContract d : contract.getDelegates()) { builders.add(DelegateType.Builder.create(d)); 
1, for (Iterator iter= fPreviousSearchPatterns.iterator(); iter.hasNext();) { SearchPatternData element= (SearchPatternData) iter.next(); if (pattern.equals(element.textPattern)) { return element; , for (Iterator iter= fPreviousSearchPatterns.iterator(); iter.hasNext();) { SearchPatternData element= (SearchPatternData) iter.next(); if (pattern.equals(element.textPattern)) { return element; 
0," GenDataType genDataType = (GenDataType)object; return genDataType.getName() + (genDataType.getQualifiedInstanceClassName() == null ? """" : "" ["" + genDataType.getQualifiedInstanceClassName() + ""]""); ", this.loader = loader; this.method = method; this.responseStream = responseStream; this.onComplete = onComplete; this.serializationStrategy = serializationStrategy; pos = responseStream.position(); 
1, FormProcessor selectedProcessor = null; for (FormProcessor processor : this.processors) { if (processor.isActive() && processor.isApplicable(item)) { selectedProcessor = processor; break; , FormProcessor XXXXX = null; for (FormProcessor processor : this.processors) { if (processor.isActive() && processor.isApplicable(item)) { XXXXX = processor; break; 
0," String oldDESC = dESC; dESC = newDESC; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, RifPackage.DATATYPEDEFINITIONBOOLEAN__DESC, oldDESC, dESC)); "," list.lock.lock(); try { checkIndexExlusive(index, read.size); checkModifications(); Object obj = list.remove(index + start); read = new SubListReadData(read.size - 1, list.getData()); return obj; "
1, languageIdx = configuration.getLanguageIdx(); exportForced = configuration.isExportForced(); writePGCPalette = configuration.getWritePGCEditPalette(); determineExtensionAndDialogTitle(); , languageIdx = configuration.getLanguageIdx(); exportForced = configuration.isExportForced(); writePGCPalette = configuration.getWritePGCEditPalette(); determineExtensionAndDialogTitle(); 
1," final CacheManager mgr = this.applicationContext.getBean(""cacheManager"", CacheManager.class); if (mgr.getStatus().equals(Status.STATUS_ALIVE)) { log.debug(""Shutting down cache manager {"," final CacheManager XXXXX = this.applicationContext.getBean(""cacheManager"", CacheManager.class); if (XXXXX.getStatus().equals(Status.STATUS_ALIVE)) { log.debug(""Shutting down cache manager {"
0," KalturaParams kparams = super.toParams(); kparams.setString(""objectType"", ""KalturaPreviewRestriction""); kparams.addIntIfNotNull(""previewLength"", this.previewLength); return kparams; "," Intent intent = new Intent(""org.openintents.git.CLONE""); intent.putExtra(""source-uri"", uri.toPrivateString()); intent.putExtra(BARE, bare); addDirectoryTo(intent, directory); return intent; "
1," StubElement linkToBeClicked = new StubElement(); linkToBeClicked.setId(UUID.randomUUID().toString()); driver.stubLink(someLinkLocator, linkToBeClicked, browserSession); return linkToBeClicked; "," StubElement XXXXX = new StubElement(); XXXXX.setId(UUID.randomUUID().toString()); driver.stubLink(someLinkLocator, XXXXX, browserSession); return XXXXX; "
0, final boolean[] inUse = this.data.inUse; final byte[] seqToUnseq = this.data.seqToUnseq; int nInUseShadow = 0; for (int i = 0; i < 256; i++) { if (inUse[i]) { seqToUnseq[nInUseShadow++] = (byte) i; , PushProxiesValue pushProxiesValueForSelf = pushProxiesValueFactory.createDHTValueForSelf(); return pushProxiesValueForSelf.getPushProxies().isEmpty() ? null : createCopy(pushProxiesValueForSelf); 
1," PeerManagerImpl peer_manager = PeerManagerImpl.getPeerManager( manager); Peer[] peers = handler.handleExtension( peer_manager, details ); return( peer_manager.mapForeignPeers( peers )); "," PeerManagerImpl XXXXX = PeerManagerImpl.getPeerManager( manager); Peer[] peers = handler.handleExtension( XXXXX, details ); return( XXXXX.mapForeignPeers( peers )); "
0," if (coverageDescription == null) { coverageDescription = new EObjectContainmentEList(CoverageDescriptionType.class, this, Wcs111Package.COVERAGE_DESCRIPTIONS_TYPE__COVERAGE_DESCRIPTION); "," super(code.getMethod(), null); SSIToSSA ssi2ssa = new SSIToSSA(code, qf); quads = ssi2ssa.rootQuad; setDerivation(ssi2ssa.derivation); setAllocationInformation(ssi2ssa.allocInfo); "
0," StringTokenizer st = new StringTokenizer(text); while(st.hasMoreTokens()){ String token = st.nextToken(); token = token.toLowerCase(); if(token.compareTo("" "")!= 0){ tokens.add(token); "," Object objToInsert = getObjectToInsert(); List oldList = (List)property; int insertPos = getElementPositionInList(getElement(), oldList); if ( insertPos == -1 ) { insertPos = oldList.size(); "
0, this.currentResultSet = null; this.currentHeaderSet = null; this.currentPrimaryKeySet = null; this.currentImportedKeySet = null; this.tablesSet = null; this.currentTableName = null; ," StatusType type, subtype; Equipment eq; StatusValue v, haste; int cap; type = subtype = null; eq = mEquipment.getEquipment(EquipmentSet.MAINWEAPON); if (eq != null) { type = eq.getWeaponType(); "
1," PortletState currentState = PortletStateAccess.getPortletState(request, window .getId().getStringId()); PortletState state = null; if (currentState != null) { state = new PortletState(currentState); "," PortletState XXXXX = PortletStateAccess.getPortletState(request, window .getId().getStringId()); PortletState XXXXX = null; if (XXXXX != null) { XXXXX = new PortletState(XXXXX); "
0," String label = ((Constructor) object).getOwnedComment(); return label == null || label.length() == 0 ? getString(""_UI_Constructor_type"") : getString(""_UI_Constructor_type"") + "" "" + label; ", int returnValue = ((ComponentUI) (uis.elementAt(0))).getAccessibleChildrenCount(a); for (int i = 1; i < uis.size(); i++) { ((ComponentUI) (uis.elementAt(i))).getAccessibleChildrenCount(a); 
0, final Boolean aBoolean = myProvider.getOption(JavaClassReferenceProvider.ALLOW_DOLLAR_NAMES); return !Boolean.FALSE.equals(aBoolean) && myElement.getLanguage() instanceof XMLLanguage; , if(this == other) return true; if(!(other instanceof MHostMountVO)) return false; return getMhost().equals(((MHostMountVO)other).getMhost()) && getShost().equals(((MHostMountVO)other).getShost()); 
1, Object adapter = table.getAdapter( ITableAdapter.class ); ITableAdapter tableAdapter = ( ITableAdapter )adapter; int checkWidth = tableAdapter.getCheckWidthWithMargin(); return checkWidth; , Object XXXXX = table.getAdapter( ITableAdapter.class ); ITableAdapter XXXXX = ( ITableAdapter )XXXXX; int XXXXX = XXXXX.getCheckWidthWithMargin(); return XXXXX; 
1," FieldEditor te = new FieldEditor(driver.getTypesDefinitions()); if (UIFactory.showDialog(te)) { String fieldName = te.getFieldName(); Type type = te.getType(); fieldModel.add(fieldName, type); "," FieldEditor XXXXX = new FieldEditor(driver.getTypesDefinitions()); if (UIFactory.showDialog(XXXXX)) { String XXXXX = XXXXX.getFieldName(); Type XXXXX = XXXXX.getType(); fieldModel.add(XXXXX, XXXXX); "
0," String[] split = propertyName.split( ""\\."", 3 ); if ( split.length != 2 ) { throw new IllegalArgumentException( ""Invalid format '"" + propertyName + ""'. It must be of type className.propertyName"" ); "," result = null; try { result = invoke(); responseload = RPC.encodeResponseForSuccess( rpcRequest.getMethod(), result, rpcRequest.getSerializationPolicy(), AbstractSerializationStream.DEFAULT_FLAGS); "
0, PropertyTreeNode[] nodes = getPropertyTreeNodes(); for (int i = 0; i < nodes.length; i++) { PropertyTreeNode node = nodes[i]; if (property.equals(node.getRDFProperty())) { return node; ," assertEquals(request.getPayload().getRawContent(), ""{\""server\"":{\""name\"":\""foo\"",\""imageRef\"":\""1\"",\""flavorRef\"":\""2\"",\""personality\"":[{\""path\"":\""/tmp/rhubarb\"",\""contents\"":\""Zm9v\"""
1, if (value instanceof PackageDependenciesNode) { PackageDependenciesNode node = (PackageDependenciesNode) value; try { setIcon(expanded ? node.getOpenIcon() : node.getClosedIcon()); , if (value instanceof PackageDependenciesNode) { PackageDependenciesNode XXXXX = (PackageDependenciesNode) value; try { setIcon(expanded ? XXXXX.getOpenIcon() : XXXXX.getClosedIcon()); 
1, switch (itemId ) { case ItemPool.DIRTY_MARTINI: case ItemPool.GROGTINI: case ItemPool.CHERRY_BOMB: case ItemPool.VESPER: case ItemPool.BODYSLAM: case ItemPool.SANGRIA_DEL_DIABLO: return true; , switch (itemId ) { case ItemPool.DIRTY_MARTINI: case ItemPool.GROGTINI: case ItemPool.CHERRY_BOMB: case ItemPool.VESPER: case ItemPool.BODYSLAM: case ItemPool.SANGRIA_DEL_DIABLO: return true; 
1," final Iterator<String> varNames = querySolution.varNames(); while (varNames.hasNext()) { final String varName = varNames.next(); put(new Variable(varName), toResource(querySolution.get(varName))); "," final Iterator<String> XXXXXs = querySolution.XXXXXs(); while (XXXXXs.hasNext()) { final String XXXXX = XXXXXs.next(); put(new Variable(XXXXX), toResource(querySolution.get(XXXXX))); "
0," Gate gate = GateColl.i.create(); String name = this.argConcatFrom(0); gate.setName(name); gme.setSelectedGate(gate); this.msg(""<i>Created and selected the new gate: ""+gate.getIdNameStringLong()); "," final String key = RESOURCE_PREFIX + attrs; Object resourceLink = linkCache.get(key); if (resourceLink == null) { resourceLink = super.resource(attrs); linkCache.put(key, resourceLink); "
1," clear(); HashMap<Integer, Integer> hashmap = new HashMap<Integer, Integer>(); for (int i = 0; i < 100; ++i) { hashmap.put(i, i); assertTrue(expect(""java.util.HashMap$Entry"", -1, 32)); "," clear(); HashMap<Integer, Integer> hashmap = new HashMap<Integer, Integer>(); for (XXXXXnt XXXXX = 0; XXXXX < 100; ++XXXXX) { hashmap.put(XXXXX, XXXXX); assertTrue(expect(""java.utXXXXXl.HashMap$Entry"", -1, 32)); "
0, ICHelpBook book = getCHelpBook(); boolean bMatches = false; switch(book.getCHelpType()){ case ICHelpBook.HELP_TYPE_CPP: try{ bMatches = project.hasNature(CCProjectNature.CC_NATURE_ID); ," formatter.setSpaceAfterCommaInListings(false); assertEqualSource(""[1,2,3]"", ""[1 , 2 , 3, ]""); formatter.setSpaceAfterCommaInListings(true); assertEqualSource(""[1, 2, 3]"", ""[1 , 2 , 3 ]""); "
0, for (Object o : elem.getChildren()) { Element e = (Element) o; String elementName = e.getName(); if (ELEMENT_MODEL.equals(elementName)) { addModelFile(new File(e.getAttributeValue(PATH))); ," Person oldReader = reader; reader = newReader; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, EXTLibraryPackage.BOOK_ON_TAPE__READER, oldReader, reader)); "
0, ChangeWorkloadConfiguration result = new ChangeWorkloadConfiguration(); result.setSessionId(sessionId); result.setProcessId(processId); result.setConfiguration(configuration); return result; , String username = authentication.getPrincipal().toString(); if (authentication.getPrincipal() instanceof UserDetails) { username = ((UserDetails) authentication.getPrincipal()).getUsername(); 
1," Set<ProxyInfo> pinfos = infos.get(port); ProxyInfo p = new ProxyInfo(host, port, name, enabled); if (pinfos == null) { pinfos = new HashSet<ProxyInfo>(); infos.put(port, pinfos); "," Set<ProxyInfo> XXXXXinfos = infos.get(XXXXXort); ProxyInfo XXXXX = new ProxyInfo(host, XXXXXort, name, enabled); if (XXXXXinfos == null) { XXXXXinfos = new HashSet<ProxyInfo>(); infos.XXXXXut(XXXXXort, XXXXXinfos); "
0," plugin.getAPI().setPlayerInfo(event.getPlayer().getName(), ""lastSeen"", Long.toString((System.currentTimeMillis() / 1000L))); plugin.getAPI().processTimes(event.getPlayer().getName()); ", Set<Double> intersection = new HashSet<Double>(); Set<Double> union = new HashSet<Double>(); for (int i = 0; i < a.length(); ++i) { double d = a.get(i); intersection.add(d); union.add(d); 
1," br.unicamp.ic.sed.mobilemedia.album.spec.prov.IAlbum iAlbum; iAlbum = (br.unicamp.ic.sed.mobilemedia.album.spec.prov.IAlbum) manager.getRequiredInterface(""IAlbum""); iAlbum.initAlbumListScreen(); "," br.unicamp.ic.sed.mobilemedia.album.spec.prov.IAlbum iAlbum; iAlbum = (br.unicamp.ic.sed.mobilemedia.album.spec.prov.IAlbum) manager.getRequiredInterface(""IAlbum""); iAlbum.initAlbumListScreen(); "
1, checkWidget(); if( content != null && left >= 0 && top >= 0 ) { int x = left; int y = top; ScrollBar hBar = getHorizontalBar(); if( hBar != null ) { hBar.setSelection( x ); x = -hBar.getSelection(); , checkWidget(); if( content != null && left >= 0 && top >= 0 ) { int XXXXX = left; int XXXXX = top; ScrollBar XXXXX = getHorizontalBar(); if( XXXXX != null ) { XXXXX.setSelection( XXXXX ); XXXXX = -XXXXX.getSelection(); 
1, if (_scriptComponentResources != null) { Resource installedResource = _scriptComponentResources.get(componentResource); if (installedResource != null) { return installedResource; , if (_scriptComponentResources != null) { Resource XXXXX = _scriptComponentResources.get(componentResource); if (XXXXX != null) { return XXXXX; 
1," synchronized (mServices) { LoadedApk.ServiceDispatcher sd = null; HashMap<ServiceConnection, LoadedApk.ServiceDispatcher> map = mServices.get(context); if (map != null) { sd = map.get(c); "," synchronized (mServices) { LoadedApk.ServiceDispatcher XXXXX = null; HashMap<ServiceConnection, LoadedApk.ServiceDispatcher> map = mServices.get(context); if (map != null) { XXXXX = map.get(c); "
1, this.banAdmin = banAdmin; this.bannedPlayer = bannedPlayer; this.bannedPlayerIP = playerIP; this.banReason = banReason; this.duration = duration; this.measure = measure; this.banType = banType; , this.banAdmin = banAdmin; this.bannedPlayer = bannedPlayer; this.bannedPlayerIP = playerIP; this.banReason = banReason; this.duration = duration; this.measure = measure; this.banType = banType; 
0," final OCompositeKey compositeKey = new OCompositeKey(); compositeKey.addKey(""a""); assertEquals(compositeKey.getKeys().size(), 1); assertTrue(compositeKey.getKeys().contains(""a"")); "," Object result = muleContext.getExpressionManager().evaluate(""#[headers:x*]"", message); assertTrue(result instanceof Map); Map<?, ?> map = (Map<?, ?>)result; assertEquals(0, map.size()); "
1," currentLocal.set(this); int running = runningCount.incrementAndGet(); for (;;) { int max = concurrentMax.get(); if (running > max) { if (concurrentMax.compareAndSet(max, running)) { break; "," currentLocal.set(this); int XXXXX = XXXXXCount.incrementAndGet(); for (;;) { int XXXXX = concurrentMax.get(); if (XXXXX > XXXXX) { if (concurrentMax.compareAndSet(XXXXX, XXXXX)) { break; "
1," IHandlerService handlerService = (IHandlerService) getSite().getService(IHandlerService.class); try { handlerService.executeCommand(""org.eclipse.equinox.p2.ui.sdk.update"", new Event()); "," IHandlerService handlerService = (IHandlerService) getSite().getService(IHandlerService.class); try { handlerService.executeCommand(""org.eclipse.equinox.p2.ui.sdk.update"", new Event()); "
0," super(modelElement, parent); myParentElement = modelElement; myChildDescription = description; myChildrenTagName = description.getXmlElementName(); myRootDomElement = rootDomElement; "," StringBuilder result = new StringBuilder(); switch (method) { case SENDMESSAGE: result.append(""sendMessage""); break; case SHUTDOWN: result.append(""shutdown""); break; default: result.append(""??""); "
0, clearStaticActions(); final IMenuService menuService = (IMenuService) part.getSite() .getService(IMenuService.class); if (menuService != null) { menuService.releaseContributions(menu); ," values.add(""1""); result = SwingJavaBuilder.build(this,ResourceBundle.getBundle(""GlazedListsTestResources"")); Book book = new Book(""Charles Darwin"",""Origin of Species"",9.99); addBook(book); "
1," if (id != POICODE_ID_UNDEFINED) { int sep = type.indexOf(POICODE_SEPARATOR); if (sep >= 0) { String name = type.substring(sep + POICODE_SEPARATOR.length()); return name.replaceAll(""_"", "" ""); "," if (id != POICODE_ID_UNDEFINED) { int sep = type.indexOf(POICODE_SEPARATOR); if (sep >= 0) { String name = type.substring(sep + POICODE_SEPARATOR.length()); return name.replaceAll(""_"", "" ""); "
0, initMocks(this); tableJoinsInFromClauseSqlGenerator = new TableJoinsInFromClauseSqlGenerator() { @Override protected TableAccessStrategy createTableAccessStrategy() { return tableAccessStrategy; ," AccountRecord record = _accounts[accountNumber-BASE]; record.setBalance(record.getBalance() + funds); System.out.println(""LineOfCreditAccountServiceImpl.deposit(""+accountNumber+"",""+funds+"")""); "
1," initialCaretPosition = textArea.getCaretPosition(); int layoutCaretPosition = initialCaretPosition; try { textArea.getDocument().insertString(layoutCaretPosition, ""\u3000"", null); "," initialCaretPosition = textArea.getCaretPosition(); int layoutCaretPosition = initialCaretPosition; try { textArea.getDocument().insertString(layoutCaretPosition, ""\u3000"", null); "
1," String label = ((FeatureChange)object).getFeatureName(); return label == null || label.length() == 0 ? getString(""_UI_FeatureChange_type"") : getString(""_UI_FeatureChange_type"") + "" "" + label; "," String label = ((FeatureChange)object).getFeatureName(); return label == null || label.length() == 0 ? getString(""_UI_FeatureChange_type"") : getString(""_UI_FeatureChange_type"") + "" "" + label; "
1," List accessRightRoles = (List)this.accessRight.get(""accessRightRoles""); if(accessRightRoles == null) { accessRightRoles = new ArrayList(); this.accessRight.put(""accessRightRoles"", accessRightRoles); "," List XXXXX = (List)this.accessRight.get(""XXXXX""); if(XXXXX == null) { XXXXX = new ArrayList(); this.accessRight.put(""XXXXX"", XXXXX); "
0," IdSet s = new IdHashSet(); assertTrue(s.add(4711)); assertEquals(1, s.size()); assertTrue(s.contains(4711)); assertFalse(s.add(4711)); assertEquals(1, s.size()); assertTrue(s.contains(4711)); "," NapsterOverlayID napsterCoKey = NapsterAddressResolutionImpl .getInstance((int) SkyNetConstants.OVERLAY_ID_SIZE) .getOverlayID(coordinatorKey); ownOverlayNode.nodeLookup(napsterCoKey, callback); "
0, ArrayList related = new ArrayList( m_in.getDegree() + m_out.getDegree() - 2 ); Edge[] edges = m_in.getInEdgeArray(); for (int i = 0; i < edges.length; i++) { related.add(edges[i]); ," int progress = webView.getProgress(); webView.stopLoading(); Log.v(LOGTAG, ""Page timeout triggered, progress = "" + progress); timeoutFlag = true; handler.postDelayed(pageDoneRunner, manualDelay); "
0, super(PAGE_NAME); fRubyProject= null; setTitle(NewWizardMessages.RubyCapabilityConfigurationPage_title); setDescription(NewWizardMessages.RubyCapabilityConfigurationPage_description); ," if (startEditing && row==editingRow && col==editingCol) return """"; if (col == 0) return String.valueOf(row); else if (col < 4) { return String.valueOf(paletteData[col - 1][row]); "
0," checkNotNull(safeChars); if (safeChars.matches("".*[0-9A-Za-z].*"")) { throw new IllegalArgumentException( ""Alphanumeric characters are always 'safe' and should not be "" + ""explicitly specified""); "," if (windowIcon != null) return; try { ClassLoader cl = JNLPRuntime.class.getClassLoader(); windowIcon = new javax.swing.ImageIcon(cl.getResource(""netx/jnlp/resources/netx-icon.png"")).getImage(); "
0, FilterService serviceOne = FilterServiceProvider.newService(); FilterService serviceTwo = FilterServiceProvider.newService(); assertTrue(serviceOne != null); assertTrue(serviceOne != serviceTwo); ," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (op: ""); result.append(op); result.append(')'); return result.toString(); "
0, super(); this.messages = messages; this.errorCode = errorCode; this.size = messages.getSizeInBytes(); header.putInt((int) (size + 2)); header.putShort(errorCode.code); header.rewind(); , if (blobStore != null && !Strings.isNullOrEmpty(locationId)) { for (Location location : blobStore.listAssignableLocations()) { if (locationId.equals(location.getId())) { return location; 
0, final int selectionIndex = flagsList.getSelectionIndex(); txtChange.setText(flagsList.getItem(selectionIndex)); txtChange.setVisible(true); btnValidateChanges.setVisible(true); txtChange.setFocus(); ," String text = """"; if (row instanceof ImageData) { ImageData data = (ImageData) row; if (data.isLoaded()) text += data.getName(); else { text += ""Image ID:""; text += data.getId(); "
0," NumberInputHandler handler = new NumberInputHandler(); InputDialog id = new InputDialogCirclePointDirectionRadius(app, title, handler, geoPoint, forAxis, kernel); id.setVisible(true); "," ArrayList<String> list = new ArrayList<String>(); try { String[] strList = params.split(""#""); String tipusAlarmaS = strList[3]; if (tipusAlarmaS.equals(""0x01"")) { list.add(""ALARMS_CHASIS_TEMP""); "
0, switch (getDBType(em)) { case db2: assertLockTestSQLs(Select + tableLfName + Where + DB2Lock); break; case oracle: case derby: default: assertLockTestSQLs(Select + tableLfName + Where + ForUpdate); ," ConstraintDescriptor<?> constraintDescriptor = getConstraintDescriptorForProperty( ""s1"" ); constraintValidatorManager.getInitializedValidator( String.class, constraintDescriptor, null ); "
0," super(c, sz, parent); ui.chat = instance = this; btnc = sz.sub(sz.x, btnh); sub = new Button(new Coord(300, 260), sbtnw, this, Resource.loadimg(""gfx/hud/slen/sau"")) { public void click() { sup(); "," JMenu downloadCanvec = new JMenu(""Download zip's""); for (int i = 0; i < parent.downloadable.size(); i++) { downloadCanvec.add(new JMenuItem(new AllowDownload(parent.downloadable.get(i)))); "
0," if (objectFilter.accept(className)) { HeapCounter count = (HeapCounter) countData.get(className); if (count == null) { count = new HeapCounter(className, size); countData.put(className, count); ", switch (qryattupd) { case CodePoint.QRYRDO: return java.sql.ResultSet.CONCUR_READ_ONLY; case CodePoint.QRYUPD: return java.sql.ResultSet.CONCUR_UPDATABLE; default: return defaultConcurrency; 
1," return ""MailingConfigVo{"" + ""sender="" + sender + "", smtpServer="" + smtpServer + "", smtpServerPort="" + smtpServerPort + "", smtpUser="" + smtpUser + "", smtpPassword="" + smtpPassword + '"," return ""MailingConfigVo{"" + ""sender="" + sender + "", smtpServer="" + smtpServer + "", smtpServerPort="" + smtpServerPort + "", smtpUser="" + smtpUser + "", smtpPassword="" + smtpPassword + '"
0," return u == Use.NDT && !oneOf(sig, _FILE_BASE_NAME, _FILE_DIR_NAME, _FILE_DIR_SEPARATOR, _FILE_PATH_SEPARATOR, _FILE_PATH_TO_NATIVE, _FILE_PATH_TO_URI, _FILE_RESOLVE_PATH) || super.uses(u); "," if (mRecalculateModelM) { android.opengl.Matrix.multiplyMM(mModelM, 0, mScaleM, 0, mRotateM, 0); android.opengl.Matrix.multiplyMM(mModelM, 0, mTranslateM, 0, mModelM, 0); mRecalculateModelM = false; "
0," List tasks = parseTasks(""TASK"", ""\r\n"" + BASIC_MESSAGE); assertEquals(1, tasks.size()); assertTask(BASIC_MESSAGE_EXPECTED, 3, 2, IMarker.PRIORITY_NORMAL, (TaskTag) tasks.get(0)); "," StringBuilder builder = new StringBuilder(""Queue: ""); List<SessionEvent> events = queue.getAllEvents(); for (SessionEvent event : events) { builder.append(""\n "" + event.getDebugString()); "
0," failedLaunches.incrementAndGet(); logger.warn(t, ""Error while launching instance: #%d %d, %s %s"", index, nodePlan.getCount(), nodePlan .getCloudName(), nodePlan.getTemplateName()); ", if ( parameters == null || parameters.trim().length() == 0 ) { this.startMinDev = 1; this.startMaxDev = Long.MAX_VALUE; this.endMinDev = 1; this.endMaxDev = Long.MAX_VALUE; return; 
0, List<EntityPlayer> players = world.playerEntities; for (EntityPlayer p : players) if (ironPlayers.contains(p.username.toLowerCase())) { p.cloakUrl = ironCapeURL; p.playerCloakUrl = ironCapeURL; ," if (requireChange(this.unique, unique)) { Object oldValue = this.unique; this.unique = unique; setChanged(); notifyObservers(new SGAttributeModification(""unique"", oldValue, unique)); "
0, if (currentEmail != null) { int index = emailListIndexOf(currentEmail); if (index == -1) { emailPick.addItem(currentEmail); emailPick.setSelectedIndex(emailPick.getItemCount() - 1); ," SharedPreferences preferences = mContext.getSharedPreferences(PREFERENCES_BACKUP, Activity.MODE_PRIVATE); return new Date(preferences.getLong(PREFERENCES_BACKUP_LAST_BACKUP_TIME, 0)); "
1," final IcyColorModel cm = getIcyColorModel(); if ((max > cm.getComponentAbsMaxValue(channel))) cm.setComponentAbsMinValue(channel, max); cm.setComponentUserMaxValue(channel, max); "," final IcyColorModel XXXXX = getIcyColorModel(); if ((max > XXXXX.getComponentAbsMaxValue(channel))) XXXXX.setComponentAbsMinValue(channel, max); XXXXX.setComponentUserMaxValue(channel, max); "
1," Color c = null; if (item instanceof NodeItem) { c = model.getNodeColorProvider().removeStrokeColor((NodeItem) item); PrefuseLib.update(item, VisualItem.STROKECOLOR, ColorLib.color(c)); "," Color XXXXX = null; if (item instanXXXXXeof NodeItem) { XXXXX = model.getNodeColorProvider().removeStrokeColor((NodeItem) item); PrefuseLib.update(item, VisualItem.STROKECOLOR, ColorLib.XXXXXolor(XXXXX)); "
1, AdapterFactoryLabelProvider labelProvider = new AdapterFactoryLabelProvider(adapterFactory); if (object instanceof EObject) { switch (columnIndex) { case 0: return labelProvider.getText(object); , AdapterFactoryLabelProvider XXXXX = new AdapterFactoryLabelProvider(adapterFactory); if (object instanceof EObject) { switch (columnIndex) { case 0: return XXXXX.getText(object); 
1," DefaultManagerConnection dmc; dmc = new DefaultManagerConnection(); dmc.setUsername(""manager""); dmc.setPassword(""obelisk""); dmc.setHostname(""pbx0.cologne.reucon.net""); dmc.setPort(5038); return dmc; "," DefaultManagerConnection dmc; dmc = new DefaultManagerConnection(); dmc.setUsername(""manager""); dmc.setPassword(""obelisk""); dmc.setHostname(""pbx0.cologne.reucon.net""); dmc.setPort(5038); return dmc; "
0," if (displayName == null) { displayName = invoke(new Callable<String>() { public String call() { return getDisplayNameOf(getParentIShellFolder(), getRelativePIDL(), SHGDN_NORMAL); ", if( selection.isEmpty()) return; Iterator<?> it = selection.iterator(); while( it.hasNext()) { Object o = it.next(); if( o instanceof IProject ) this.selectedProjects.add(((IProject) o).getName()); 
0, ObjyObject objyRevision = null; int objectVersion = getVersion(); long objectBranchId = getBranchId(); if (branchId == objectBranchId && Math.abs(objectVersion) == version) { return this; , if ( IDroolsConstants.CACHE_PARSED_RULES.equals( event.getProperty() ) ) { useCachePreference = ((Boolean) event.getNewValue()).booleanValue(); if ( !useCachePreference ) { clearCache(); 
0," return String .format( ""CacheItem[key=%s; tmf=%b; gm=%b; bevraagbaarGM=%b; bevraagbaarTMF=%b, stufpath=%s, objectnaam=%s]"", key, tmf, gm, bevraagbaarGM, bevraagbaarTMF, stufpath, objectNaam); "," CueSheetSerializer.logger.entering (CueSheetSerializer.class.getCanonicalName() , ""serializeTrackData(StringBuilder,TrackData,String)"" , new Object[]{builder, trackData, indentation"
0," IASTNodeAdapter<? extends SimpleNode> bestClassScope = null; for (IClassDefAdapter classScope : getClasses()) { if (isSelectionInAdapter(selection, classScope)) { bestClassScope = classScope; "," StringBuffer buffer = new StringBuffer(); buffer.append("" ""); if((style & ICustomAppearence.DISP_VISIBILITY) != 0) { buffer.append(NamedElementUtil.getVisibilityAsSign(collaborationUse)); "
1," try { File mFile = File.createTempFile(""octave-input"", "".dat""); MatrixIO.writeMatrix(matrix, mFile, Format.MATLAB_SPARSE); factorize(new MatrixFile(mFile, Format.MATLAB_SPARSE), dimensions); "," try { File XXXXX = File.createTempFile(""octave-input"", "".dat""); MatrixIO.writeMatrix(matrix, XXXXX, Format.MATLAB_SPARSE); factorize(new MatrixFile(XXXXX, Format.MATLAB_SPARSE), dimensions); "
0, CreateProcessInstance returned = new CreateProcessInstance(process); returned.setHeaderComment(getHeaderComment()); returned.setInlineComment(getInlineComment()); return returned; ," PropertyMap pm = new PropertyMap(); pm.setValue(FOO, ""1""); assertEquals(""1"", pm.getValue(FOO)); assertEquals(Arrays.asList(""1""), pm.getValues(FOO)); assertTrue(pm.contains(FOO)); "
1," if (messageId == null || topicId == null) { LOG.error(""getMessageById failed with topicId: "" + topicId + "", messageId: "" + messageId); throw new IllegalArgumentException(""Null Argument""); "," if (messageId == null || topicId == null) { LOG.error(""getMessageById failed with topicId: "" + topicId + "", messageId: "" + messageId); throw new IllegalArgumentException(""Null Argument""); "
0," for (Subscription subscription : getSubscriptions()) { FudgeMsg marketData = doSnapshot(subscription.getSecurityUniqueId()); liveDataReceived(subscription.getSecurityUniqueId(), marketData); "," VersionTrackerDAOImpl vt = (VersionTrackerDAOImpl) _session.createQuery(""from VersionTrackerDAOImpl v "").uniqueResult(); if (vt == null) return 1; else return vt.getVersion() + 1; "
1," List list = getFeatureQuery(feature.getUniqueName(), -1, feature.getFeatureId(), feature.getCvTerm()); if(list == null || list.size() < 1) return null; return (Feature)list.get(0); "," List XXXXX = getFeatureQuery(feature.getUniqueName(), -1, feature.getFeatureId(), feature.getCvTerm()); if(XXXXX == null || XXXXX.size() < 1) return null; return (Feature)XXXXX.get(0); "
0," if(mLoading == 100) { Gdx.app.log(TAG, ""Unload resources from memory ...""); OriaDaemon.dispose(); mLoading = 0; Gdx.app.log(TAG, ""Unload resources from memory [DONE]""); mGame.setSplash(); "," super(immutable?IMMUTABLE:READWRITE,NON_VOLATILE); if (!buffer.isDirect()) throw new IllegalArgumentException(); _buf = buffer; setGetIndex(buffer.position()); setPutIndex(buffer.limit()); "
0," final LabelProviderChangedEvent evnt = new LabelProviderChangedEvent(this, proj); Display.getDefault().asyncExec(new Runnable() { public void run() { fireLabelProviderChanged(evnt); ", ChangeWorkloadConfiguration result = new ChangeWorkloadConfiguration(); result.setSessionId(sessionId); result.setProcessId(processId); result.setConfiguration(configuration); return result; 
0," if (tfClassName.getText().trim ().length() == 0 || tfFieldName.getText().trim ().length() == 0) { return NbBundle.getMessage(FieldBreakpointPanel.class, ""MSG_No_Class_or_Field_Name_Spec""); "," checkStartCode(); checkEndCode(); endCode = true; checkUnsignedShort(maxStack, ""Invalid max stack""); checkUnsignedShort(maxLocals, ""Invalid max locals""); mv.visitMaxs(maxStack, maxLocals); "
1, for (IReconcilingStrategy strategy : strategies) { if (strategy instanceof IReconcilingStrategyExtension) { ((IReconcilingStrategyExtension) strategy).setProgressMonitor(monitor); , for (IReconcilingStrategy strategy : strategies) { if (strategy instanceof IReconcilingStrategyExtension) { ((IReconcilingStrategyExtension) strategy).setProgressMonitor(monitor); 
0," String[] lines = style.split(""\n""); ArrayList<String> strings = new ArrayList<>(); Collections.addAll(strings, lines); try { Files.write(path, strings, Charset.forName(""UTF-8"")); "," super.visitClass(aClass); if (!TestUtils.isTest(aClass) && !ClassUtils.isAnonymous(aClass)) { incrementDenominator(aClass, 1); if (isInternal(aClass)) { incrementNumerator(aClass, 1); "
0, int pageStart = findStartOfPage(this.storedPosition); if ( pageStart == this.storedPosition ) { if ( bookView.getSpine() == null || ! bookView.getSpine().navigateBack() ) { return; , if(!getGeoElement().isEuclidianVisible()) return; if (!getGeoElement().isLabelVisible()) return; for(DrawLabel3D label : labels.values()) label.draw(renderer); super.drawLabel(renderer); 
0, int result = 17; long tmp; result = 37 * result + _port; result = 37 * result + _retry; result = 37 * result + _timeout; if (_password != null) { result = 37 * result + _password.hashCode(); ," Object[] effects = this.elementList.getSelectedValues(); this.elementList.clearSelection(); if ( Preferences.getString( ""currentMood"" ).equals( ""apathetic"" ) ) { MoodManager.setMood( ""default"" ); "
0," Graph g = new Graph(); g.getNodeTable().addColumns(LABEL_SCHEMA); Node nodes[] = new Node[n]; for ( int i = 0; i < n; ++i ) { nodes[i] = g.addNode(); nodes[i].setString(LABEL, String.valueOf(i)); "," if (infoA == null && infoB ==null) return 0; if (infoA == null) return -1; if (infoB == null) return 1; String objectClassA = """"; for ( String str : infoA.getObjectClass()){ objectClassA += str+"",""; "
1, if (lineSeparator == null) { final StringWriter sw = new StringWriter(2); try { final BufferedWriter bw = new BufferedWriter(sw); bw.newLine(); bw.flush(); lineSeparator = sw.toString(); , if (lineSeparator == null) { final StringWriter XXXXX = new StringWriter(2); try { final BufferedWriter XXXXX = new BufferedWriter(XXXXX); XXXXX.newLine(); XXXXX.flush(); lineSeparator = XXXXX.toString(); 
0," final ResourceBundle bundle = getResourceBundle(locale); return CommonDescriptions.getNoArgSimpleListReplyOperation(bundle, operationName, descriptionPrefix, listValueType, describeReply); "," Logger log = LoggerFactory.getLogger(TestEnvTests.class); log.trace(""trace message""); log.debug(""debug message""); log.info(""info message""); log.warn(""warn message""); log.error(""error message""); "
0," this.xpath = node.getAttributes().getNamedItem(""xpath"").getNodeValue(); Node nd = node.getAttributes().getNamedItem(""fail-msg""); if (nd != null) { this.failureMessage = nd.getNodeValue(); "," super.clearGui(); argumentName.setText(""""); pathExt.setSelected(false); pathExtNoEquals.setSelected(false); pathExtNoQuestionmark.setSelected(false); shouldCache.setSelected(false); "
1, FontFormatting fontFormatting = cfRuleRecord.getFontFormatting(); if ( fontFormatting != null) { cfRuleRecord.setFontFormatting(fontFormatting); return new HSSFFontFormatting(cfRuleRecord); , FontFormatting XXXXX = cfRuleRecord.getFontFormatting(); if ( XXXXX != null) { cfRuleRecord.setFontFormatting(XXXXX); return new HSSFFontFormatting(cfRuleRecord); 
0," return new PlayerKilledEvent(event.getEntity(), event.getDrops(), event.getDroppedExp(), event.getNewExp(), event.getNewTotalExp(), event.getNewLevel(), event.getDeathMessage()); ", return getAddVmsSucceded() ? AuditLogType.USER_ADD_VM_POOL_WITH_VMS : getSucceeded() ? AuditLogType.USER_ADD_VM_POOL_WITH_VMS_ADD_VDS_FAILED : AuditLogType.USER_ADD_VM_POOL_WITH_VMS_FAILED; 
1, if (info == null) return; File location = info.getLocation(); if (location == null) return; if (location.lastModified() != info.getModificationDate().getTime()) cpeInfos.remove(location); , if (info == null) return; File XXXXX = info.getLocation(); if (XXXXX == null) return; if (XXXXX.lastModified() != info.getModificationDate().getTime()) cpeInfos.remove(XXXXX); 
1," String label = ((EvidenceEvent)object).getId(); return label == null || label.length() == 0 ? getString(""_UI_EvidenceEvent_type"") : getString(""_UI_EvidenceEvent_type"") + "" "" + label; "," String XXXXX = ((EvidenceEvent)object).getId(); return XXXXX == null || XXXXX.length() == 0 ? getString(""_UI_EvidenceEvent_type"") : getString(""_UI_EvidenceEvent_type"") + "" "" + XXXXX; "
1," String oldName = name; name = newName; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, CssExtDslPackage.PACKAGE_DEFINITION__NAME, oldName, name)); "," String XXXXX = name; name = newName; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, CssExtDslPackage.PACKAGE_DEFINITION__NAME, XXXXX, name)); "
1," Preconditions.checkNotNull(participant, ""Null participant""); IndexDecision current = getIndexability(participant); if (indexability == null) { if (current != null) { data.remove(participant); "," Preconditions.checkNotNull(participant, ""Null participant""); IndexDecision XXXXX = getIndexability(participant); if (indexability == null) { if (XXXXX != null) { data.remove(participant); "
0," StringBuilder b = new StringBuilder(); Class[] args = method.getParameterTypes(); for (int i = 0; i < args.length; i++) { b.append("" p"" + i); if (i < args.length - 1) b.append("", ""); "," switch (featureID) { case Wps10Package.SUPPORTED_UO_MS_TYPE__DEFAULT: return basicSetDefault(null, msgs); case Wps10Package.SUPPORTED_UO_MS_TYPE__SUPPORTED: return basicSetSupported(null, msgs); "
1," Assert.isTrue(start < simpleNameStart && simpleNameStart < start + length); return new TypeReference(enclosingElement, accuracy, start, length, insideDocComment, resource, simpleNameStart, null); "," Assert.isTrue(start < simpleNameStart && simpleNameStart < start + length); return new TypeReference(enclosingElement, accuracy, start, length, insideDocComment, resource, simpleNameStart, null); "
1," try { Question question = faqService_.getQuestionById(questionId); if (question != null) { return question.getCategoryId() + ""/"" + question.getId() + ""/"" + question.getQuestion(); "," try { Question XXXXX = faqService_.getQuestionById(XXXXXId); if (XXXXX != null) { return XXXXX.getCategoryId() + ""/"" + XXXXX.getId() + ""/"" + XXXXX.getQuestion(); "
0," final String rrdPath = getContainer().getObject().getRrdRepository(); if (rrdPath == null) { throw new RuntimeException(""Configuration error, failed to retrieve path to RRD repository.""); ", if (myCvsPaths.size() == 1) { final CheckoutStrategy checkoutStrategy = (CheckoutStrategy)myCheckoutModeList.getSelectedValue(); return checkoutStrategy.useAlternativeCheckoutLocation(); 
0," validate(); GeneralPath outline = new GeneralPath(); int len = glyphs.length; for (int i = 0; i < len; i++) { GeneralPath p = new GeneralPath(getGlyphOutline(i, type)); outline.append(p, false); "," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (value: ""); result.append(value); result.append(')'); return result.toString(); "
1," return (a instanceof IntegerVector && b instanceof IntegerVector) ? cosineSimilarity((IntegerVector)a, (IntegerVector)b) : cosineSimilarity(Vectors.asDouble(a), Vectors.asDouble(b)); "," return (a instanceof IntegerVector && b instanceof IntegerVector) ? cosineSimilarity((IntegerVector)a, (IntegerVector)b) : cosineSimilarity(Vectors.asDouble(a), Vectors.asDouble(b)); "
0," final Object[] arr = (Object[]) object; final int length = arr.length; for (int i = 0; i < length; i++) { final Object child = arr[i]; if (child != null) { verifyChild(child, object, ""Object[]""); "," Test test = TestConfiguration.embeddedSuite(IjSecurityManagerTest.class); test = new SupportFilesSetup ( test, null, new String[] { ""functionTests/tests/tools/IjSecurityManagerTest.sql"" "
0, if (nodeToLookFor instanceof ClassNode) { String name = ((ClassNode) nodeToLookFor).getNameWithoutPackage(); int lastDollar = name.lastIndexOf('$'); return name.substring(lastDollar + 1); ," initComponents(); setNumeroSMS(""""); recalcular(); taTexto.getDocument().addDocumentListener(new DocumentListener() { @Override public void insertUpdate(DocumentEvent e) { recalcular(); "
1," try{ Socket socket = new Socket(""http: PrintWriter out = new PrintWriter(socket.getOutputStream(), true); BufferedReader in = new BufferedReader(new InputStreamReader( socket.getInputStream())); "," try{ Socket XXXXX = new Socket(""http: PrXXXXXtWriter XXXXX = new PrXXXXXtWriter(XXXXX.getOutputStream(), true); BufferedReader XXXXX = new BufferedReader(new InputStreamReader( XXXXX.getInputStream())); "
0," Log.i(TAG, ""update portfolio: "" + p.getName()); int pos = portfolios.indexOf(p); if (pos > -1) { Portfolio orig = portfolios.get(pos); orig.setName(p.getName()); orig.setStocks(p.getStocks()); ", String json = response.getText(); List<ReportReference> reports = JSOParser.parseReportConfig(json); ReportView view = (ReportView)controller.getView(ReportView.ID); view.configure(reports); 
1," parse(""SELECT * FROM [dna:tableA]""); parse(""SELECT [jcr:column1] FROM [dna:tableA]""); parse(""SELECT 'jcr:column1' FROM 'dna:tableA'""); parse(""SELECT \""jcr:column1\"" FROM \""dna:tableA\""""); "," parse(""SELECT * FROM [dna:tableA]""); parse(""SELECT [jcr:column1] FROM [dna:tableA]""); parse(""SELECT 'jcr:column1' FROM 'dna:tableA'""); parse(""SELECT \""jcr:column1\"" FROM \""dna:tableA\""""); "
0," tag = HTML.Tag.META; assertEquals(""meta"", tag.toString()); assertFalse(""breaks Flow"", tag.breaksFlow()); assertFalse(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); "," final Integrator i = new Integrator(); assertNull(i.getProperties()); i.setProperties(new File(""foo"")); assertEquals(new File(""foo"").getAbsolutePath(), i.getProperties().getAbsolutePath()); "
0," int funcNameEndIndex = function.indexOf('('); if (funcNameEndIndex != -1) function = function.substring(0, funcNameEndIndex); return ""from "" + pkg + "" import "" + function + ""\n""; ", ContentSearchOptions contentSearchOptions = getContentSearchOptions(session); if (contentSearchOptions.constraintList == null) { contentSearchOptions.constraintList = FastList.newInstance(); 
1," if(eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (varName: ""); result.append(varName); result.append(')'); return result.toString(); "," if(eIsProxy()) return super.toString(); StringBuffer XXXXX = new StringBuffer(super.toString()); XXXXX.append("" (varName: ""); XXXXX.append(varName); XXXXX.append(')'); return XXXXX.toString(); "
1, Individual i1 = (Individual) a; Individual i2 = (Individual) b; return (((NSGA2MultiObjectiveFitness) i1.fitness).getObjective(o) < ((NSGA2MultiObjectiveFitness) i2.fitness).getObjective(o)); , Individual i1 = (Individual) a; Individual i2 = (Individual) b; return (((NSGA2MultiObjectiveFitness) i1.fitness).getObjective(o) < ((NSGA2MultiObjectiveFitness) i2.fitness).getObjective(o)); 
1," Security security = _objectIdCache.get(uniqueId.getObjectId()); if (security == null) { security = _underlying.getSecurity(uniqueId); _objectIdCache.putIfAbsent(uniqueId.getObjectId(), security); "," Security XXXXX = _objectIdCache.get(uniqueId.getObjectId()); if (XXXXX == null) { XXXXX = _underlying.getSecurity(uniqueId); _objectIdCache.putIfAbsent(uniqueId.getObjectId(), XXXXX); "
1," if (siteList == null) { LOG.error(""findDiscussionForumMessageCountsForAllSitesByPermissionLevelId failed with null site list.""); throw new IllegalArgumentException(""Null Argument""); "," if (siteList == null) { LOG.error(""findDiscussionForumMessageCountsForAllSitesByPermissionLevelId failed with null site list.""); throw new IllegalArgumentException(""Null Argument""); "
1," if (string.equalsIgnoreCase(""StepForward"")) return true; if (string.equalsIgnoreCase(""StepBackward"")) return true; if (string.equalsIgnoreCase(""LeapForward"")) return true; return false; "," if (string.equalsIgnoreCase(""StepForward"")) return true; if (string.equalsIgnoreCase(""StepBackward"")) return true; if (string.equalsIgnoreCase(""LeapForward"")) return true; return false; "
1," IStatus[] status = new IStatus []{ fContainerStatus, isEnclosingTypeSelected() ? fEnclosingTypeStatus : fPackageStatus, fTypeNameStatus, fModifierStatus, fSuperClassStatus, fSuperInterfacesStatus "," IStatus[] status = new IStatus []{ fContainerStatus, isEnclosingTypeSelected() ? fEnclosingTypeStatus : fPackageStatus, fTypeNameStatus, fModifierStatus, fSuperClassStatus, fSuperInterfacesStatus "
1, if (!(obj != null && obj.getClass().equals(getClass()))) return false; ServoConfigMessage message = (ServoConfigMessage)obj; return message != null && message.getPin() == this.getPin(); , if (!(obj != null && obj.getClass().equals(getClass()))) return false; ServoConfigMessage XXXXX = (ServoConfigMessage)obj; return XXXXX != null && XXXXX.getPin() == this.getPin(); 
0, request(4); fPos += 4; int p= fPos; fBuffer[--p]= (byte) (value); value >>= 8; fBuffer[--p]= (byte) (value); value >>= 8; fBuffer[--p]= (byte) (value); value >>= 8; fBuffer[--p]= (byte) (value); ," assertEquals(ElementSpec.OriginateDirection, spec1.getDirection()); spec1.setDirection(ElementSpec.JoinNextDirection); assertEquals(ElementSpec.JoinNextDirection, spec1.getDirection()); "
0, final List<String> l = new LinkedList<String>(children.keySet()); final ListIterator<String> it = l.listIterator(l.indexOf(name)); if (it.hasPrevious()) { return children.get(it.previous()); , selectedPublication = newPublication; hasPublication = true; AvatarView.getInstance().showVideo(MediaPanel.SELECT_PUBLICATION); updateQuestions(); AvatarView.getInstance().setAvatar(this); 
1," if (debug) { System.out.println(""OK, decoding BindingValue "" + aValue); System.out.println(""_bindable="" + _bindable); System.out.println(""binding model ="" + _bindable.getBindingModel()); "," if (debug) { System.out.println(""OK, decoding BindingValue "" + aValue); System.out.println(""_bindable="" + _bindable); System.out.println(""binding XXXXX ="" + _bindable.getBindingModel()); "
0, AbstractBaselineModel<?> model = (AbstractBaselineModel<?>) getBaselineModel(om).getModel(); NormalSummary summary = model.getSummary(); if (summary == null || !summary.getDefined()) { return null; ," return new WebArchiveBuilder() .withTestClass( BuiltinConstraintsTest.class ) .withResource( ""builtin-constraints-override.xml"" ) .withClass( InvertedNotNullValidator.class ) .build(); "
1," double[] point = config.getDoubleArray(POSITION_KEY, null); _position = point == null ? null : new GraphPoint(point); _origin = new GraphPoint(config.getDoubleArray(ORIGIN_KEY, point)); "," double[] point = config.getDoubleArray(POSITION_KEY, null); _position = point == null ? null : new GraphPoint(point); _origin = new GraphPoint(config.getDoubleArray(ORIGIN_KEY, point)); "
0," int progress = webView.getProgress(); webView.stopLoading(); Log.v(LOGTAG, ""Page timeout triggered, progress = "" + progress); timeoutFlag = true; handler.postDelayed(pageDoneRunner, manualDelay); ", return (a.hitID == b.hitID) && ( !(a.queryOffset + a.hitLength < b.queryOffset || a.queryOffset > b.queryOffset + b.hitLength ) ) && ( a.queryOffset - b.queryOffset == a.hitOffset - b.hitOffset); 
1," LogicalNetworkModel networkModel = (LogicalNetworkModel) item; if (networkModel.hasVlan()) { return messages.vlanNetwork(networkModel.getName(), String.valueOf(networkModel.getVlanId())); "," LogicalNetworkModel XXXXX = (LogicalNetworkModel) item; if (XXXXX.hasVlan()) { return messages.vlanNetwork(XXXXX.getName(), String.valueOf(XXXXX.getVlanId())); "
0, AdventureResult test = EquipmentManager.getEquipment( EquipmentManager.STICKER1 ); if ( test == null || test.equals( EquipmentRequest.UNEQUIP ) ) { return EquipmentManager.STICKER1; ," if (!request.getMethod().equals(APPConstants.HTTP_POST)) { ResponseContext rc = new EmptyResponseContext(405, ""Method not allowed""); rc.setAllow(APPConstants.HTTP_POST); return rc; "
0, DoubleMatrix1D mat = (DoubleMatrix1D)arg; for (int row = size()-1; row >= 0; row--) if (Math.abs(mat.get(row)-get(row))/Math.abs(mat.get(row)) > 0.0001) return false; return true; ," System.out.println(); System.out.println(""-- Server shutdown --""); System.out.println(""Total hits: "" + hits.longValue()); System.out.println(""Total success: "" + success.longValue()); "
0, switch (featureID) { case WfsPackage.TRANSACTION_RESULTS_TYPE__HANDLE: setHandle(HANDLE_EDEFAULT); return; case WfsPackage.TRANSACTION_RESULTS_TYPE__ACTION: getAction().clear(); return; , boolean isOpen = ContextHolder.getInstance().isProjectOpen(); closeCurrentProjectMItem.setEnabled(isOpen); saveAsProjectMitem.setEnabled(isOpen); saveProjectMItem.setEnabled(isOpen); 
0," cmd.clearArgs(); cmd.createArgument(""prop""); cmd.createArgument(""-p""); cmd.createArgument(projectFourPartName); cmd.createArgument(""-f""); cmd.createArgument(""%release""); try { cmd.execute(); "," DataSecurityResource test = _resource.findSecurity(""Test~A""); assertSame(_resource, test.getSecuritiesResource()); assertEquals(ObjectId.of(""Test"", ""A""), test.getUrlSecurityId()); "
0, if (targetClass instanceof GroovyScriptClass) { PsiElement added = targetClass.getContainingFile().add(field.getParent()); return (PsiField)((GrVariableDeclaration)added).getVariables()[0]; ," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "
0, this.client = client; this.amountPaid = amountPaid; this.timePaid = timePaid; this.timeConfirmed = null; this.account = account; this.notes = notes; this.status = status; this.paymentId = paymentId; , myElement = mySmartPointer.getElement(); if (myElement == null) return true; int flags = Iconable.ICON_FLAG_VISIBILITY; if (isMarkReadOnly()){ flags |= Iconable.ICON_FLAG_READ_STATUS; 
0, final int prime = 31; int result = 1; result = prime * result + ((groupId == null) ? 0 : groupId.hashCode()); result = prime * result + ((tagId == null) ? 0 : tagId.hashCode()); return result; ," String fn = inputFile.getName().toLowerCase(); if (fn.endsWith("".txt"") || fn.endsWith("".tab"") || fn.endsWith("".xls"") || fn.endsWith("".gz"")) { fn = fn.substring(0, fn.lastIndexOf(""."")); "
1," ItemStack Fuel = event.getFuel(); if(Fuel != null){ int id = Fuel.getTypeId(); if(!ItemCheckHandler.isItemAllowed(event.getFurnace().getWorld().getName(), id)){ event.setCancelled(true); "," ItemStack XXXXX = event.getXXXXX(); if(XXXXX != null){ int XXXXX = XXXXX.getTypeId(); if(!ItemCheckHandler.isItemAllowed(event.getFurnace().getWorld().getName(), XXXXX)){ event.setCancelled(true); "
0," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (text: ""); result.append(text); result.append(')'); return result.toString(); "," RevCommit otherCommit = JGitUtils.getCommit(r, rev); if (otherCommit == null) { error(MessageFormat.format(getString(""gb.failedToFindCommit""), rev, repositoryName, getPageName()), true); "
1, String textVal = null; NodeList nl = element.getElementsByTagName(tagName); if(nl != null && nl.getLength() > 0) { Element el = (Element)nl.item(0); textVal = el.getFirstChild().getNodeValue(); , String XXXXX = null; NodeList XXXXX = XXXXXement.getElementsByTagName(tagName); if(XXXXX != null && XXXXX.getLength() > 0) { Element XXXXX = (Element)XXXXX.item(0); XXXXX = XXXXX.getFirstChild().getNodeValue(); 
1," double exp = 0; double d1 = distanceBetween(i, j); for (int k = 0; k < numDevices; k++) { double d2 = distanceBetween(i, k); double d3 = distanceBetween(k, j); exp += Math.abs(d2 - d3); "," double exp = 0; double d1 = distanceBetween(i, j); for (int k = 0; k < numDevices; k++) { double d2 = distanceBetween(i, k); double d3 = distanceBetween(k, j); exp += Math.abs(d2 - d3); "
0," String oldPlace = place; place = newPlace; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, NonregPackage.ECLIPSE_SUMMIT__PLACE, oldPlace, place)); ", Object val = edge.getEdgeData().getAttributes().getValue(column.getIndex()); val = dynamicHelper.getDynamicValue(val); if (val != null && useRegex) { return regex.matcher((String) val).matches(); 
1, myEnabledBox.addActionListener(new ActionListener() { @Override public void actionPerformed(ActionEvent e) { boolean isEnabled = myEnabledBox.isSelected(); setFieldsEnabled(isEnabled); , myEnabledBox.addActionListener(new ActionListener() { @Override public void actionPerformed(ActionEvent e) { boolean XXXXX = myEnabledBox.isSelected(); setFieldsEnabled(XXXXX); 
1, QueueStore<Serializable> defaultMemoryObjectStore = muleContext.getRegistry().lookupObject(MuleProperties.QUEUE_STORE_DEFAULT_IN_MEMORY_NAME); return new QueueProfile(defaultMemoryObjectStore); , QueueStore<Serializable> defaultMemoryObjectStore = muleContext.getRegistry().lookupObject(MuleProperties.QUEUE_STORE_DEFAULT_IN_MEMORY_NAME); return new QueueProfile(defaultMemoryObjectStore); 
1," synchronized(_sendLock) { if(FRAME_LOGGER.isLoggable(Level.FINE)) { FRAME_LOGGER.fine(""SEND["" + getRemoteAddress() + ""|"" + amqFrame.getChannel() + ""] : "" + amqFrame.getFrameBody()); "," synchronized(_sendLock) { if(FRAME_LOGGER.isLoggable(Level.FINE)) { FRAME_LOGGER.fine(""SEND["" + getRemoteAddress() + ""|"" + amqFrame.getChannel() + ""] : "" + amqFrame.getFrameBody()); "
1," { PolygonDef sd = new PolygonDef(); sd.setAsBox(100.0f, 20.0f); BodyDef bd = new BodyDef(); bd.position.set(0.0f, -20.0f); Body ground = m_world.createBody(bd); ground.createShape(sd); "," { PolygonDef sd = new PolygonDef(); sd.setAsBox(100.0f, 20.0f); BodyDef bd = new BodyDef(); bd.position.set(0.0f, -20.0f); Body ground = m_world.createBody(bd); ground.createShape(sd); "
0," Jooc.warning(getNamespace().getSymbol(), ""namespaces are not yet implemented, ignoring use namespace "" + getNamespace().getName()); getNamespace().analyze(this); super.analyze(parentNode); "," String out = """"; if (columnIndex < data.size()) { FileWithStatus fileWithStatus = data.get(rowIndex); out = columnIndex == 0 ? fileWithStatus.getFile().getVirtualPath() : fileWithStatus.getStatus(); "
0, JSObjectMetaData meta = JSSyntaxContext.getEnginJSObject( method.getReturnType( ) ); if ( meta == null ) { try { return JSSyntaxContext.getJavaClassMeta( method.getReturnType( ) ); , ISelection selection = tableViewer.getSelection(); for(Iterator<?> selections = ((IStructuredSelection) selection).iterator(); selections.hasNext();) { dependencies.remove(selections.next()); 
0, pathOuterLine.dispose(); pathMiddleLine.dispose(); pathInnerLine.dispose(); pathFill.dispose(); pathOuterLine = null; pathMiddleLine = null; pathInnerLine = null; pathFill = null; ," super(db, prefs); sTableName = Database.sTableNameAppointments; fnCmp = new RowsComparator(); for (int iDay = 0; iDay < 42; iDay++) { vecDateRangeCache[iDay] = new RepeatDataValue(); "
0," super.getIfAbsent(); ImmutableMap<Integer, String> map = this.classUnderTest(); Assert.assertNull(map.get(4)); Assert.assertEquals(""4"", map.getIfAbsentValue(4, ""4"")); Assert.assertNull(map.get(4)); "," this( EquipmentRequest.SAVE_OUTFIT ); this.addFormField( ""action"", ""customoutfit"" ); this.addFormField( ""outfitname"", changeName ); this.addFormField( ""ajax"", ""1"" ); this.outfitName = changeName; "
0," HashMap<String, String> map = new HashMap<String, String>(); map.put(""policyConfigFileName"", ""xacml/policies/config/rsaConfPolicyConfig.xml""); return new TestServletContext(map); "," UpdateNetworkOfferingOptions options = new UpdateNetworkOfferingOptions().name(""test-name""); assertEquals(ImmutableSet.of(""test-name""), options.buildQueryParameters().get(""name"")); "
1," StringBuilder sb = new StringBuilder(); sb.append(""{""); if (label != null) sb.append(""Label: "" + label + "", ""); if (datapoints != null) sb.append(""Datapoints: "" + datapoints + "", ""); sb.append("""," StringBuilder sb = new StringBuilder(); sb.append(""{""); if (label != null) sb.append(""Label: "" + label + "", ""); if (datapoints != null) sb.append(""Datapoints: "" + datapoints + "", ""); sb.append("""
0," this.project = project; this.mavenFactory = mavenFactory; conf2ScopeMappings = mavenFactory.createConf2ScopeMappingContainer(Collections.<Configuration, Conf2ScopeMapping>emptyMap()); "," Subscription sub = broker.getSubscriber(consumerToAbort); if (sub != null) { LOG.info(""aborting consumer via jmx: "" + sub.getConsumerInfo().getConsumerId()); strategy.abortConsumer(sub, false); "
1," CommandSender sender = (issuedBy.equalsIgnoreCase(""console"")) ? Bukkit.getConsoleSender() : Bukkit.getServer().getPlayer(issuedBy); plugin.api.handleException(exception, sender); "," CommandSender XXXXX = (issuedBy.equalsIgnoreCase(""console"")) ? Bukkit.getConsoleSender() : Bukkit.getServer().getPlayer(issuedBy); plugin.api.handleException(exception, XXXXX); "
0," StringBuffer res = new StringBuffer(); res.append(""EditorUndoList[""); res.append(""pointer="").append(pointer); res.append("", undos="").append(undos); res.append(""]""); return res.toString(); "," if (artifactHandler == null) { artifactHandler = new DefaultArtifactHandler( getConfigurationContainer(), new DefaultPublishArtifactFactory( get(Instantiator.class), dependencyMetaDataProvider)); "
1, TestSuite testSuite = new TestSuite(); testSuite.addTest(Login52xTests.suite()); testSuite.addTest(SampleData528Tests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , TestSuite testSuite = new TestSuite(); testSuite.addTest(Login52xTests.suite()); testSuite.addTest(SampleData528Tests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; 
1," addItem( Util.getHeader( DroolsGuvnorImageResources.INSTANCE.ruleflowSmall(), Constants.INSTANCE.NewRuleFlow() ).asString(), true, new Command() { public void execute() { presenter.onNewRuleFlow(); "," addItem( Util.getHeader( DroolsGuvnorImageResources.INSTANCE.ruleflowSmall(), Constants.INSTANCE.NewRuleFlow() ).asString(), true, new Command() { public void execute() { presenter.onNewRuleFlow(); "
1," if (messageId == null || topicId == null) { LOG.error(""findUnreadStatus failed with topicId: "" + topicId + "", messageId: "" + messageId); throw new IllegalArgumentException(""Null Argument""); "," if (messageId == null || topicId == null) { LOG.error(""findUnreadStatus failed with topicId: "" + topicId + "", messageId: "" + messageId); throw new IllegalArgumentException(""Null Argument""); "
0," super(""Object Editor""); addWindowListener(new winExit()); setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE); MultiLineToolTipUI.initialize(); this.entryInformation = entryInformation; ", TestSuite testSuite = new TestSuite(); testSuite.addTest(PageLayoutTests.suite()); testSuite.addTest(PageScopeTests.suite()); testSuite.addTest(UserGroupTests.suite()); return testSuite; 
1," PCanvas canvas = applet.getCanvas(); assertNotNull(canvas); assertNotNull(canvas.getLayer()); assertNotNull(canvas.getCamera()); assertSame(canvas.getLayer(), canvas.getCamera().getLayer(0)); "," PCanvas XXXXX = applet.getCanvas(); assertNotNull(XXXXX); assertNotNull(XXXXX.getLayer()); assertNotNull(XXXXX.getCamera()); assertSame(XXXXX.getLayer(), XXXXX.getCamera().getLayer(0)); "
0," Session serverSession = stream.getSession(); serverSessionRef.set(serverSession); serverSession.rst(new RstInfo(stream.getId(),StreamStatus.REFUSED_STREAM)); synLatch.countDown(); return null; "," System.out.println(toString(prefix)); if (children != null) { for (int i = 0; i < children.length; ++i) { SimpleNode n = (SimpleNode)children[i]; if (n != null) { n.dump(prefix + "" ""); "
0," StringBuilder sb = new StringBuilder(512); sb.append(""PropertyStringValueEntity"") .append(""[ ID="").append(id) .append("", stringValue="").append(stringValue) .append(""]""); return sb.toString(); "," loginRoot(); ExperimenterGroup g2 = newGroup(); setup(Permissions.PRIVATE); Experimenter e = uuidUser(); try { iAdmin.createExperimenterWithPassword(e, ""pass"", g2); fail(""not in my group""); "
0, if (_servletHandler==null) _servletHandler=(ServletHandler) getHandler(ServletHandler.class); if (_servletHandler==null) { _servletHandler=new ServletHandler(); addHandler(_servletHandler); ," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; "
1," return new SNodePointer(""r:00000000-0000-4000-0000-011c895905f9(jetbrains.mps.transformation.test.inputLang.generator.outputLang.template.test_ReduceInheritors@generator)"", ""8417539822878724212""); "," return new SNodePointer(""r:00000000-0000-4000-0000-011c895905f9(jetbrains.mps.transformation.test.inputLang.generator.outputLang.template.test_ReduceInheritors@generator)"", ""8417539822878724212""); "
1, this.runOnDegreeSample = runOnDegreeSample; this.bl = bl; this.ts = ts; lineCount = 0; nodeCnt = 0; LinkedList<Long> allIds; if (runOnDegreeSample) { allIds = NeoUtils.GetAllNodeIds(sampleDegree); , this.runOnDegreeSample = runOnDegreeSample; this.bl = bl; this.ts = ts; lineCount = 0; nodeCnt = 0; LinkedList<Long> allIds; if (runOnDegreeSample) { allIds = NeoUtils.GetAllNodeIds(sampleDegree); 
0," ASTResolving.visitAllBindings(node, new TypeBindingVisitor() { public boolean visit(ITypeBinding nodeBinding) { ParameterObjectFactory.importBinding(nodeBinding, cuRewrite); return false; "," Editor editor = context.getSharedPreferences(PREF_FILE_NAME, Context.MODE_PRIVATE).edit(); editor.putString(objKey, ObjectSerializer.serialize(dataObj) ); return editor.commit(); "
0," Class castToTypeClass = null; if (castToType != null) { boolean isArray = false; if (castToType.trim().endsWith(""[]"")) { isArray = true; castToType = castToType.replace(""[]"", """"); ", Dimension p = getContentPane().getSize(); Dimension l = getContentPane().getMinimumSize(); Dimension s = getSize(); l.width += s.width - p.width; l.height += s.height - p.height; return l; 
0, super(ErrorManager.MSG_GRAMMAR_NONDETERMINISM); this.probe = probe; this.problemState = problemState; if ( probe.dfa.isTokensRuleDecision() ) { setMessageID(ErrorManager.MSG_TOKEN_NONDETERMINISM); ," try { ODataServer server = this.startODataServer(baseUri); System.out.println(""Press any key to exit""); new BufferedReader(new InputStreamReader(System.in)).readLine(); server.stop(); "
0," List<SNode> nodes = ((List<SNode>) BehaviorManager.getInstance().invoke(Object.class, node, ""call_findConceptAspectCollection_1567570417158062208"", new Class[]{SNode.class, LanguageAspect.class"," double[] datas = getData(100, 45, 5); IncMeanVarNormalizer normalizer = new IncMeanVarNormalizer(); for (double data : datas) normalizer.update(data); checkMeanVar(datas, normalizer); "
1," if (parent.getName().equals(""."")) { VirtualFile base = parent.getParent(); if (base != null) { boolean reported; synchronized (myReportedRoots) { reported = myReportedRoots.contains(base); "," if (parent.getName().equals(""."")) { VirtualFile base = parent.getParent(); if (base != null) { boolean reported; synchronized (myReportedRoots) { reported = myReportedRoots.contains(base); "
0," super(source); _req = req; _ctx = (ExecutionContext) source.getApplicationContext(); _endpoint = new SIPEndpointImpl(_ctx, _req.getFrom()); _domain = ((SipURI)req.getRequestURI()).getHost(); "," List l = siteHelper.convertSitesToMaps(request, mySites, prefix, currentSiteId, myWorkspaceSiteId, includeSummary, expandSite, resetTools, doPages, toolContextPath, loggedIn); return l; "
0," return tabularData(""mappingfile"", ""mapping file type"", ""Mapping file of "" + reloadableEntityManagerFactory.getPUname(), reloadableEntityManagerFactory.getMappingFiles(), Info.FILE); "," super.a(); for (int var1 = 0; var1 < this.g.size(); ++var1) { OICrafting var2 = (OICrafting) this.g.get(var1); var2.a(this, 0, this.c[0]); var2.a(this, 1, this.c[1]); var2.a(this, 2, this.c[2]); "
1, RGB rgb; float scale; if (fRenderingMode == IRevisionRulerColumnExtension.AGE) { int index= computeAgeIndex(revision); if (index == -1 || fRevisions.size() == 0) { rgb= getBackground().getRGB(); , RGB rgb; float scale; if (fRenderingMode == IRevisionRulerColumnExtension.AGE) { int index= computeAgeIndex(revision); if (index == -1 || fRevisions.size() == 0) { rgb= getBackground().getRGB(); 
1, if (getParent() instanceof TmfTraceFolder) { TmfTraceFolder folder = (TmfTraceFolder) getParent(); TmfProjectElement project = (TmfProjectElement) folder.getParent(); return project; , if (getParent() instanceof TmfTraceFolder) { TmfTraceFolder XXXXX = (TmfTraceFolder) getParent(); TmfProjectElement XXXXX = (TmfProjectElement) XXXXX.getParent(); return XXXXX; 
1," Preconditions.checkNotNull(connectTimeout, ""connectionTimeout""); if (connectTimeout.toMillis() < 1) { throw new IllegalArgumentException(""Connection timeout must be greater than 0""); "," Preconditions.checkNotNull(connectTimeout, ""connectionTimeout""); if (connectTimeout.toMillis() < 1) { throw new IllegalArgumentException(""Connection timeout must be greater than 0""); "
0, for (Block block : waterorigins.keySet()) { byte data = 0x0; block = block.getLocation().getBlock(); if (block.getType() == Material.AIR) { block.setType(Material.WATER); block.setData(data); ," ExpressionFactory expressionFactory = application.getExpressionFactory(); ELContext elContext = facesContext.getELContext(); return expressionFactory.createValueExpression(elContext, ""#{nestedItem"
0," LinkType type = new LinkType(); OutputTypeEnum pluginType = new OutputTypeEnum(); pluginType.setValue(""plugin""); type.setOutputType(pluginType); assertTrue(type.isPluginModule()); "," ManagedSysListCommand listCommand = (ManagedSysListCommand) cmd; if (listCommand.getDomainId() != null && listCommand.getDomainId().equals(""-"") ) { err.rejectValue(""domainId"", ""required""); "
0," sp.printHTMLheader(""RUBiS ERROR: SearchItemsByRegion""); sp.printHTML( ""<h2>Your request has not been processed due to the following error :</h2><br>""); sp.printHTML(errorMsg); sp.printHTMLfooter(); "," PluginContainerRefreshedEvent event = new PluginContainerRefreshedEvent(new Object(), ""plugin-key""); states.tryNextState(""bundle-starting"", ""spring-created""); plugin.onSpringContextRefresh(event); "
1, AdapterFactoryLabelProvider labelProvider = new AdapterFactoryLabelProvider(adapterFactory); if (object instanceof EObject) { switch (columnIndex) { case 0: return labelProvider.getText(object); , AdapterFactoryLabelProvider XXXXX = new AdapterFactoryLabelProvider(adapterFactory); if (object instanceof EObject) { switch (columnIndex) { case 0: return XXXXX.getText(object); 
0," try { String[] fields = Globals.tabPattern.split(nextLine, -1); int nTokens = fields.length; if (nTokens <= END_COLUMN) { System.out.println(""Skipping line: "" + nextLine); return null; "," assertNotNull(fudgeContext); assertNotNull(message); assertNotNull(connection); assertEquals(testMessage1, message.getMessage()); connection.getFudgeMessageSender().send(testMessage2); "
0," if (!verifyTypeMatch(o)) { return Ganymede.createErrorDialog(ts.l(""verifyBasicConstraints.error_title""), ts.l(""verifyBasicConstraints.type_error"", o, this.getName(), owner.getLabel())); ", if (this == obj) return true; if (obj == null) return false; if (getClass() != obj.getClass()) return false; final Entry other = (Entry) obj; if (key == null) { if (other.key != null) return false; 
0," Plugin permissions = this.getServer().getPluginManager().getPlugin(""Permissions""); if (Permissions == null) { if (permissions != null) { Permissions = ((Permissions) permissions).getHandler(); "," TestSuite suite = new TestSuite(""Tests of the animation package""); suite.addTestSuite(AnimationSchedulerImplTimerTest.class); suite.addTestSuite(AnimationTest.class); return suite; "
0," ContentValues values = new ContentValues(); values.put(NoteColumns.GTASK_ID, """"); values.put(NoteColumns.SYNC_ID, 0); getContentResolver().update(Notes.CONTENT_NOTE_URI, values, null, null); ", this.controller = controller; initComponents(); this.btnOk.addActionListener(new ActionListener() { @Override public void actionPerformed(ActionEvent ae) { btnOkActionPerformed(); 
1, this.pkg = pkg; links = new ArrayList<CrawledLinkStorable>(pkg.getChildren().size()); synchronized (pkg) { for (CrawledLink link : pkg.getChildren()) { links.add(new CrawledLinkStorable(link)); , this.pkg = pkg; links = new ArrayList<CrawledLinkStorable>(pkg.getChildren().size()); synchronized (pkg) { for (CrawledLink link : pkg.getChildren()) { links.add(new CrawledLinkStorable(link)); 
0, staticBuffer = (AbstractSelectionRegion)region; final Object transferable = createPasserelleRegionContents(region); if (transferable!=null) Clipboard.getDefault().setContents(transferable); ," switch (featureID) { case Wps10Package.SUPPORTED_UO_MS_TYPE__DEFAULT: return basicSetDefault(null, msgs); case Wps10Package.SUPPORTED_UO_MS_TYPE__SUPPORTED: return basicSetSupported(null, msgs); "
1," Pager pager = pojo.getContext().getPager(); if (null != pager && pager.getPageNumber() > 0) { pojo.append(Pojos.Items.wrapf( "" LIMIT %d offset %d"", pager.getPageSize(), pager.getOffset())); "," Pager pager = pojo.getContext().getPager(); if (null != pager && pager.getPageNumber() > 0) { pojo.append(Pojos.Items.wrapf( "" LIMIT %d offset %d"", pager.getPageSize(), pager.getOffset())); "
1, this.gMap = gMap; table = new CellTable<Place>(); TextColumn<Place> nameColumn = new TextColumn<Place>(){ @Override public String getValue(Place object) { return object.getName(); , this.gMap = gMap; table = new CellTable<Place>(); TextColumn<Place> nameColumn = new TextColumn<Place>(){ @Override public String getValue(Place object) { return object.getName(); 
0, final int prime = 31; int result = 1; result = prime * result + ((url == null) ? 0 : url.hashCode()); result = prime * result + ((versions == null) ? 0 : versions.hashCode()); return result; ," long seed = System.currentTimeMillis() + hashCode(); Random random = new Random(seed); Logger.getLogger(this.getClass().getName()).info(""Using Random Seed: ""+seed); return random; "
1," ArrayDeque q = populatedDeque(SIZE); for (int i = 0; i < SIZE; ++i) { assertEquals(i, ((Integer)q.peek()).intValue()); q.poll(); assertTrue(q.peek() == null || i != ((Integer)q.peek()).intValue()); "," ArrayDeque q = populatedDeque(SIZE); for (int i = 0; i < SIZE; ++i) { assertEquals(i, ((Integer)q.peek()).intValue()); q.poll(); assertTrue(q.peek() == null || i != ((Integer)q.peek()).intValue()); "
0," System.out.print( "" | ******* | ** | *******| ******/| ** | ****/ \n""+ ""| **____/ \\_______/|_______/|_______/ |__/ \\_______/ \\______/ |__/ \\___/ \n""+ ""| ** \n""+ ""| ** \n""+ ""|__/ \n""+ ""\n""); "," final LabelProviderChangedEvent evnt = new LabelProviderChangedEvent(this, proj); Display.getDefault().asyncExec(new Runnable() { public void run() { fireLabelProviderChanged(evnt); "
1, List<LoggerContextListener> toRetain = new ArrayList<LoggerContextListener>(); for (LoggerContextListener lcl : loggerContextListenerList) { if (lcl.isResetResistant()) { toRetain.add(lcl); , List<LoggerContextListener> toRetain = new ArrayList<LoggerContextListener>(); for (LoggerContextListener lcl : loggerContextListenerList) { if (lcl.isResetResistant()) { toRetain.add(lcl); 
1, if (zoomManager == zm) return; if (zoomManager != null) zoomManager.removeZoomListener(this); zoomManager = zm; refresh(true); if (zoomManager != null) zoomManager.addZoomListener(this); , if (zoomManager == zm) return; if (zoomManager != null) zoomManager.removeZoomListener(this); zoomManager = zm; refresh(true); if (zoomManager != null) zoomManager.addZoomListener(this); 
1," this.memberId = memberId; this.memberType = memberType; this.memberRole = memberRole; if (memberType == null) { throw new IllegalArgumentException(""null type given for relation-member""); "," this.memberId = memberId; this.memberType = memberType; this.memberRole = memberRole; if (memberType == null) { throw new IllegalArgumentException(""null type given for relation-member""); "
1," String keyString = targetKeyValues == null || targetKeyValues.length == 0 ? """" : OEntityKey.create(targetKeyValues).toKeyString(); return input + ""/$links/"" + targetNavProp + keyString; "," String XXXXX = targetKeyValues == null || targetKeyValues.length == 0 ? """" : OEntityKey.create(targetKeyValues).toKeyString(); return input + ""/$links/"" + targetNavProp + XXXXX; "
0," assertEquals(""242 365 1234"", phoneUtil.format(BS_NUMBER, PhoneNumberFormat.NATIONAL)); assertEquals(""+1 242 365 1234"", phoneUtil.format(BS_NUMBER, PhoneNumberFormat.INTERNATIONAL)); "," final Definition def = new Definition(); def.setRequirements(constructRequirements(cpuType, vmmVer, vmmType, kernel)); def.setDiskCollection(contructDiskCollection(imageURI, mountAs)); return def; "
0, MediaSize ms1 = MediaSize.ISO.B0; MediaSize ms2 = MediaSize.ISO.B0; assertTrue(ms1.equals(ms1)); ms2 = MediaSize.JIS.B0; assertFalse(ms1.equals(ms2)); ms2 = null; assertFalse(ms1.equals(ms2)); ," this.eventType = eventType; lm = new ucar.unidata.util.ListenerManager( ""ucar.unidata.ui.event.ActionValueListener"", ""ucar.unidata.ui.event.ActionValueEvent"", ""actionPerformed""); "
0," String text = ((PointLabelProvider) fPointListViewer.getLabelProvider()).getColumnText(element, 0); Pattern pattern = null; try { pattern = PatternConstructor.createPattern(wMatch, false); ", this.accession = ontologyTerm.getAccession(); this.description = ontologyTerm.getDescription(); this.term = ontologyTerm.getTerm(); this.ontology = new ApiOntology(ontologyTerm.getOntology()); 
1," if (_persistence == null) { _persistence = (ShardPersistence)PortalBeanLocatorUtil.locate(ShardPersistence.class.getName()); ReferenceRegistry.registerReference(ShardUtil.class, ""_persistence""); "," if (_persistence == null) { _persistence = (ShardPersistence)PortalBeanLocatorUtil.locate(ShardPersistence.class.getName()); ReferenceRegistry.registerReference(ShardUtil.class, ""_persistence""); "
1, Object result = _primary.findKeyDeserializer(am); if (result == null || result == KeyDeserializer.None.class || result == NoClass.class) { result = _secondary.findKeyDeserializer(am); , Object XXXXX = _primary.findKeyDeserializer(am); if (XXXXX == null || XXXXX == KeyDeserializer.None.class || XXXXX == NoClass.class) { XXXXX = _secondary.findKeyDeserializer(am); 
0," if(!loadBalancer.getStatus().contains(DELETED)){ if(!loadBalancer.getProtocol().equals(""HTTP"")){ showAlert(""Error"", ""Session Persistence cannot be enabled for protocols other than HTTP.""); "," boolean oldInitial = initial; initial = newInitial; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, Aadl2Package.MODE__INITIAL, oldInitial, initial)); "
0," return (SysDataSource) this.em .createNamedQuery(SysDataSource.NQ_FIND_BY_MODEL) .setParameter(""pClientId"", Session.user.get().getClientId()) .setParameter(""pModel"", model).getSingleResult(); "," String className = element.getAttribute(ATT_CLASS); String itemAttribute = element.getAttribute(ATT_ITEM_ATTRIBUTE); if (className == null) { logMissingAttribute(element, ATT_CLASS); return; "
1, IMoveAnchorContext layoutAnchorContext = getLayoutAnchorContext(); IMoveAnchorFeature layoutAnchorFeature = getLayoutAnchorFeature(); return layoutAnchorFeature.canMoveAnchor(layoutAnchorContext); , IMoveAnchorContext XXXXX = getLayoutAnchorContext(); IMoveAnchorFeature XXXXX = getLayoutAnchorFeature(); return XXXXX.canMoveAnchor(XXXXX); 
0, super(NO_RETURN); fVariableId= info.fVariableId; if (context.considerAccessMode()) { createAccessModeArray(context); fAccessModes[fVariableId - context.getStartingIndex()]= localAccessMode; ," super(""RANDOM_PLANE_ID_SPACE_SIMPLE"", new Parameter[] { new DoubleParameter(""MODULUS_X"", modulusX), new DoubleParameter(""MODULUS_Y"", modulusY), new BooleanParameter(""WRAP_AROUND"", wrapAround) "
0," String s = ""y^2 = x^3""; if(A == 1) s += ""+ x""; else if(A == -1) s += ""- x""; else if(A != 0) s += (A < 0 ? "" - "" + -A : "" + "" + A) + ""*x""; if(B != 0) s += (B < 0 ? "" - "" + -B : "" + "" + B); return s; "," mHeader = new GLOptionHeader(context, context.getString(R.string.pref_restore_title)); mItem = new RestoreSettingsItem( context, context.getString(R.string.pref_restore_detail)); "
0," long oldIndexUsage = profiler.getCounter(""Query.indexUsage""); long oldCompositeIndexUsage = profiler.getCounter(""Query.compositeIndexUsage""); if (oldIndexUsage == -1) { oldIndexUsage = 0; "," if (location != null && address.hasLatitude() && address.hasLongitude()) { return Units.getDistanceFromKilometers(location.distanceTo(new Geopoint(address.getLatitude(), address.getLongitude()))); "
0," if (exception instanceof DuplicateResourceException) { FlexoController.notify(FlexoLocalization.localizedForKey(""invalid_name_a_model_with_this_name_already_exists"")); return true; "," Method method = new Mirror().on(MethodFixture.class).reflect().method(""methodWithNoArgs"").withoutArgs(); new Mirror().on(MethodFixture.class).invoke().method(method).withoutArgs(); "
1," this.rates = new CurrencyExchangeRateMap(); this.rates.addExchangeRate(USD, EUR, dec31st, lowDollarToEuroRate); this.rates.addExchangeRate(USD, EUR, jan2nd, highDollarToEuroRate); "," this.rates = new CurrencyExchangeRateMap(); this.rates.addExchangeRate(USD, EUR, dec31st, lowDollarToEuroRate); this.rates.addExchangeRate(USD, EUR, jan2nd, highDollarToEuroRate); "
0, lock.acquireSharedLock(); try { for (int i = 0; i < clusters.size(); ++i) { final OCluster cluster = clusters.get(i); if (cluster != null && cluster.getId() == iClusterId) return cluster.getName(); ," try { Bundle bundle = getDefault().getBundle(); URL installURL= new URL(bundle.getEntry(""/""), path.toString()); URL localURL= FileLocator.toFileURL(installURL); return new File(localURL.getFile()); "
1, if( this.frontend != frontend ){ if( isBound() ){ if( this.frontend != null ){ this.frontend.removeFrontendListener( collector ); for( Item item : items.values() ){ item.destroy(); remove( item ); , if( this.frontend != frontend ){ if( isBound() ){ if( this.frontend != null ){ this.frontend.removeFrontendListener( collector ); for( Item item : items.values() ){ item.destroy(); remove( item ); 
1, int firstNonWhitespaceIndex = 0; while (firstNonWhitespaceIndex < nodeValue.length() && Character.isWhitespace(nodeValue.charAt(firstNonWhitespaceIndex))) { firstNonWhitespaceIndex++; , int XXXXX = 0; while (XXXXX < nodeValue.length() && Character.isWhitespace(nodeValue.charAt(XXXXX))) { XXXXX++; 
1," if (file.isDirectory()) { String[] internalNames = file.list(); for (String name : internalNames) { if (!name.startsWith(""."")) loadArenas(new File(file.getAbsolutePath() + File.separator + name)); "," if (file.isDirectory()) { String[] internalNames = file.list(); for (String name : internalNames) { if (!name.startsWith(""."")) loadArenas(new File(file.getAbsolutePath() + File.separator + name)); "
0," return ConceptEditorHelper.createNewConceptAspectInstance(LanguageAspect.BEHAVIOR, node, SConceptOperations.findConceptDeclaration(""jetbrains.mps.lang.behavior.structure.ConceptBehavior"")); "," dragPoints.add(new Point(e.getPoint())); nextMousePoint = e.getPoint(); drawLineSegment(curMousePoint, nextMousePoint); curMousePoint = nextMousePoint; updateMaxMin(nextMousePoint); "
0," paymentView.config = config; final String url = ""http: activity.runOnUiThread(new Runnable() { public void run() { activity.setContentView(paymentView); paymentView.loadUrl(url); ", Set<String> namesUsed = new HashSet<String>(current.size()); for (PsiElement element : current) { if (element instanceof ParameterElement) { namesUsed.add(((ParameterElement)element).getName()); 
0," String expectedMessage = ""Unsupported criterion: only substring matches are supported for User#"" + expectedProperty; assertUnsupportedUserCriteriaEncounteredForSearch(param, expectedMessage); "," final CLIParam logFile = cli.getParam(""-logfile""); if (!logFile.getStringValue().isEmpty()) { final File file = new File(logFile.getStringValue()); if (!file.exists()) { try { file.createNewFile(); "
0," addRequestParameter(""type"", type); addRequestParameter(""delete"", ""Delete""); setRequestPathInfo(""/modifyQuery""); actionPerform(); verifyActionErrors(new String[]{""errors.modifyQuery.noselect"""," Field field = new Field(); field.setType(""integer""); field.setHandlerId(""loadComboHandler""); serverFixture.mockServerResult(buildSimpleResult(""refCode"", ""refLabel"", new String[]{""1"", ""15"", ""2"""
0," tag = HTML.Tag.STRIKE; assertEquals(""strike"", tag.toString()); assertFalse(""breaks Flow"", tag.breaksFlow()); assertFalse(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); "," final ItemStack itemTurner = new ItemStack(BunyanItem.logTurner); new ItemStack(Item.stick, 5); Proxy.addRecipe(itemTurner, new Object[] { ""ss"", "" s"", ""ss"", Character.valueOf('s'), Item.stick "
0," final Map<String, Object> properties = toMap(pc); if (properties.isEmpty()) return; sb.append("" ""); final String jsonString = new Gson().toJson(properties); sb.append(removeNameQuotes(jsonString)); "," String markup = ""some text\n\n * a valid list item\n * another valid list item\n\nmore text""; ValidationProblem problem = rule.findProblem(markup, 0, markup.length()); assertNull(problem); "
1," assertNull(RepositoryUriMatcher.getRepository(Uri .parse(""http: assertNull(RepositoryUriMatcher.getRepository(Uri .parse(""http: assertNull(RepositoryUriMatcher.getRepository(Uri .parse(""http: "," assertNull(RepositoryUriMatcher.getRepository(Uri .parse(""http: assertNull(RepositoryUriMatcher.getRepository(Uri .parse(""http: assertNull(RepositoryUriMatcher.getRepository(Uri .parse(""http: "
1," String encoding = format.getCharSetEncoding(); String contentType = format.getContentType(); if (log.isDebugEnabled()) { log.debug(""contentType from the OMOutputFormat ="" + contentType); "," String encoding = format.getCharSetEncoding(); String contentType = format.getContentType(); if (log.isDebugEnabled()) { log.debug(""contentType from the OMOutputFormat ="" + contentType); "
1, if (getParent() instanceof TmfExperimentElement) { for (TmfTraceElement aTrace : getProject().getTracesFolder().getTraces()) { if (aTrace.getName().equals(getName())) { return aTrace; , if (getParent() instanceof TmfExperimentElement) { for (TmfTraceElement aTrace : getProject().getTracesFolder().getTraces()) { if (aTrace.getName().equals(getName())) { return aTrace; 
1," for (Iterator i = children.iterator(); i.hasNext();) { Styleable child = (Styleable) i.next(); if (!isProperTableNesting(parentDisplay, child.getStyle().getIdent(CSSName.DISPLAY))) { return false; "," for (Iterator i = children.iterator(); i.hasNext();) { Styleable child = (Styleable) i.next(); if (!isProperTableNesting(parentDisplay, child.getStyle().getIdent(CSSName.DISPLAY))) { return false; "
1, storeContext = context; this.nodeQualifier = qualifier; this.defaultQualifier = qualifier; ((IEclipsePreferences)getStorePreferences().parent()).addNodeChangeListener(getNodeChangeListener()); , storeContext = context; this.nodeQualifier = qualifier; this.defaultQualifier = qualifier; ((IEclipsePreferences)getStorePreferences().parent()).addNodeChangeListener(getNodeChangeListener()); 
0," if (isReadOnly()) throw new IllegalArgumentException(""Shape ReadOnly""); Ellipse shape = (Ellipse) asIObject(); RDouble value = shape.getRx(); if (value == null) return 0; return value.getValue(); "," String link = """"; if ((uriDocumento != null) && (!uriDocumento.trim().isEmpty())) link = ""<a href=\"""" + AedUtils.crearUrl(uriDocumento) + ""\"" target=\""_blank\"">Descarga</a>""; return link; "
0," frequentPatterns.addAll(returnedPatterns, attribute, count); if (frequentPatterns.addable(count) && addAttribute) { Pattern p = new Pattern(); p.add(attribute, count); frequentPatterns.insert(p); "," BufferedWriter bw; try { bw = new BufferedWriter(new OutputStreamWriter( new FileOutputStream(outFile), ""UTF-8"")); party.export(new ExportHandler(templateFile), bw); bw.close(); return true; "
1," for (;;) { if (lexer.token() == Token.OR || lexer.token() == Token.BARBAR) { lexer.nextToken(); SQLExpr rightExp = and(); expr = new SQLBinaryOpExpr(expr, SQLBinaryOperator.BooleanOr, rightExp); "," for (;;) { if (lexer.token() == Token.OR || lexer.token() == Token.BARBAR) { lexer.nextToken(); SQLExpr XXXXX = and(); expr = new SQLBinaryOpExpr(expr, SQLBinaryOperator.BooleanOr, XXXXX); "
1, for (int upperLayerIndex = 1; upperLayerIndex < deepestLayer; upperLayerIndex++) { if (graph.calculateTotalNumberOfCrossings() != 0) { sortLayerByIncomingEdgeBarycenter(upperLayerIndex + 1); , for (int XXXXX = 1; XXXXX < deepestLayer; XXXXX++) { if (graph.calculateTotalNumberOfCrossings() != 0) { sortLayerByIncomingEdgeBarycenter(XXXXX + 1); 
1," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; "," EditorCell XXXXX = null; XXXXX = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, XXXXX, editorContext); return XXXXX; "
1," OutBoundHeaders h = new OutBoundHeaders(); h.add(""Content-Type"", ""value""); Object s = h.getFirst(""content-type""); assertEquals(""value"", s); s = h.getFirst(""cONTENT-tYPE""); assertEquals(""value"", s); "," OutBoundHeaderXXXXX XXXXX = new OutBoundHeaderXXXXX(); XXXXX.add(""Content-Type"", ""value""); Object XXXXX = XXXXX.getFirXXXXXt(""content-type""); aXXXXXXXXXXertEqualXXXXX(""value"", XXXXX); XXXXX = XXXXX.getFirXXXXXt(""cONTENT-tYPE""); aXXXXXXXXXXertEqualXXXXX(""value"", XXXXX); "
0, if (input == null) return null; IClassFileEditorInput classFileEditorInput= (IClassFileEditorInput) input; IClassFile file= classFileEditorInput.getClassFile(); try { file.getSourceRange(); ," int lv = info.hasLayoutVersion() ? info.getLayoutVersion() : 0; int nsID = info.hasNamespaceID() ? info.getNamespaceID() : 0; return new JournalInfo(lv, info.getClusterID(), nsID); "
1, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(Groups605LatestTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , TestSuite XXXXX = new TestSuite(); XXXXX.addTest(LoginTests.suite()); XXXXX.addTest(Groups605LatestTests.suite()); XXXXX.addTestSuite(StopSeleniumTest.class); return XXXXX; 
0, addMouseListener(new MouseAdapter() { RichTooltip richTooltip; @Override public void mouseEntered(MouseEvent e) { if (isEnabled()) { richTooltip = buildTooltip(getStrategy(strategyIndex)); , List controls = getControls(); for (int i = controls.size() - 1; i >= 0; i--) { DisplayControl control = (DisplayControl) controls.get(i); if ( !(control instanceof MapDisplayControl)) { continue; 
0," boolean success = fme.attemptClaim(forFaction, this.currentLocation(), true); if (success) failCount = 0; else if ( ! success && failCount++ >= limit) { this.stop(); return false; ", String id = part.getSite().getId(); if (part instanceof IViewPart) { String secondaryId = ((IViewPart) part).getViewSite() .getSecondaryId(); if (secondaryId != null) { id = id + ':' + secondaryId; 
1," if( s.length() == 0 ) return 0; if( s.charAt(0) == '+' ) s = s.substring( 1 ); if( s.matches( ""(\\+|-)?Infinity"" ) ) { if( s.startsWith( ""-"" ) ) { return Double.NEGATIVE_INFINITY; "," if( s.length() == 0 ) return 0; if( s.charAt(0) == '+' ) s = s.substring( 1 ); if( s.matches( ""(\\+|-)?Infinity"" ) ) { if( s.startsWith( ""-"" ) ) { return Double.NEGATIVE_INFINITY; "
1," LinkedAvlMapNode<K, V> node, temp; LinkedAvlMapNode<K, V> parent = null; int c; if ( root == null ) { root = new LinkedAvlMapNode<K, V>( key, value ); first = root; last = root; size++; return null; "," LinkedAvlMapNode<K, V> node, temp; LinkedAvlMapNode<K, V> parent = null; int c; if ( root == null ) { root = new LinkedAvlMapNode<K, V>( key, value ); first = root; last = root; size++; return null; "
0, if (configuration.hasKind(TestKind.INTEGRATION) && !configuration.isLocalOnly() && CommonTestUtil.hasCredentials(PrivilegeLevel.ADMIN)) { suite.addTestSuite(TracTestCleanupUtil.class); , while ( buffer.remaining() < count ) { final FloatBuffer newBuffer = BufferUtils.createFloatBuffer(buffer.capacity() << 1); buffer.flip(); newBuffer.put(buffer); buffer = newBuffer; 
1," ServiceDate serviceDate = new ServiceDate(2010, 02, 11); Date dateA = serviceDate.getAsDate(); Date dateB = serviceDate.getAsDate(TimeZone.getDefault()); assertEquals(dateA, dateB); "," ServiceDate XXXXX = new ServiceDate(2010, 02, 11); Date XXXXX = XXXXX.getAsDate(); Date XXXXX = XXXXX.getAsDate(TimeZone.getDefault()); assertEquals(XXXXX, XXXXX); "
0," List<WebAppContext> contexts = getWebAppContexts(); if (contexts.size() > 0) { for (WebAppContext context : contexts) { System.out.println(""WebAppContext should not exist:\n"" + context); "," if ( m_actions.get( action.getName()) == null) { m_actions.put(action.getName(), action); m_actionsPseudo.put(action.getPseudoFile().getFileName().toUpperCase(), action); return true; "
1, if (obj == this) return true; if (obj instanceof PDOMFile) { PDOMFile other = (PDOMFile)obj; return fLinkage.getPDOM().equals(other.getLinkage().getPDOM()) && record == other.record; , if (obj == this) return true; if (obj instanceof PDOMFile) { PDOMFile XXXXX = (PDOMFile)obj; return fLinkage.getPDOM().equals(XXXXX.getLinkage().getPDOM()) && record == XXXXX.record; 
1, this.ribbonGallery = (JRibbonGallery) c; this.firstVisibleButtonIndex = 0; this.installDefaults(); this.installComponents(); this.installListeners(); c.setLayout(createLayoutManager()); , this.ribbonGallery = (JRibbonGallery) c; this.firstVisibleButtonIndex = 0; this.installDefaults(); this.installComponents(); this.installListeners(); c.setLayout(createLayoutManager()); 
0," long[] oldKeys = keys; numEntries = 0; numSlotsUsed = 0; keys = new long[newHashSize]; Arrays.fill(keys, NULL); for (long key : oldKeys) { if (key != NULL && key != REMOVED) { add(key); "," tag = HTML.Tag.ISINDEX; assertEquals(""isindex"", tag.toString()); assertTrue(""breaks Flow"", tag.breaksFlow()); assertFalse(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); "
1," super(parent, bracketBalance, parser); this.methodDeclaration = methodDeclaration; this.foundOpeningBrace = !bodyStartsAtHeaderEnd(); if(this.foundOpeningBrace) { this.bracketBalance++; "," super(parent, bracketBalance, parser); this.methodDeclaration = methodDeclaration; this.foundOpeningBrace = !bodyStartsAtHeaderEnd(); if(this.foundOpeningBrace) { this.bracketBalance++; "
0," groupId = event.getResponse().getId(); groupShortName = event.getResponse().getShortName(); EventBus.getInstance().removeObserver(GotGroupModelViewInformationResponseEvent.class, this); "," final String entityName = getFormEntityName(formDefId); final String newTableName = getFormTableName(formDefId, tableName); return internalFindPrimaryKey(entityName, newTableName, fieldName, value); "
0," Validate.notNull(issuer, ""issuer""); Validate.notNull(curve, ""curve""); if (_issuerCurves.containsKey(issuer)) { throw new IllegalArgumentException(""Issuer curve already set: "" + issuer); ", final Project[] projects = ProjectManager.getInstance().getOpenProjects(); for (Project project : projects) { InspectionProjectProfileManager.getInstance(project).initProfileWrapper(profile); 
0, NavigatedDisplay navDisplay = getMapDisplay(); Rectangle screenBounds; screenBounds = navDisplay.getDisplayComponent().getBounds(); if ( !getIdv().getArgsManager().getIsOffScreen()) { ," if (canPack != null) return canPack.booleanValue(); String[] locations = Utils.getPack200Commands(""pack200""); if (locations == null) { canPack = Boolean.FALSE; packCommand = null; return false; "
0," return (model.getGroupId() != null && model.getArtifactId() != null && model.getVersion() != null) ? model.getGroupId() + "":"" + model.getArtifactId() + "":"" + model.getVersion() : null; "," if(isNewRow) return; posx=cpx; posy=cpy; cpx+=padding; cpy+=padding+paddingTop; if(control!=null) { CVector3f pos=control.position(); control.setPosition(cpx, cpy); pos=control.position(); return; "
0," String defval = null; for (int i = 0; i < fgAllKeys.length; i++) { defval = fgAllKeys[i].getStoredValue(fLookupOrder, true, fManager); fgAllKeys[i].setStoredValue(fLookupOrder[0], defval, fManager); ", sourceColumnComboBox.removeAllItems(); targetColumnComboBox.removeAllItems(); labelColumnComboBox.removeAllItems(); if (columnNames.length > 0) { labelColumnComboBox.addItem(NO_LABEL); 
1, this.currentResultSet = null; this.currentHeaderSet = null; this.currentPrimaryKeySet = null; this.currentImportedKeySet = null; this.tablesSet = null; this.currentTableName = null; , this.currentResultSet = null; this.currentHeaderSet = null; this.currentPrimaryKeySet = null; this.currentImportedKeySet = null; this.tablesSet = null; this.currentTableName = null; 
1, AudioManager audioManager = (AudioManager) this.getSystemService(AUDIO_SERVICE); return audioManager.getVibrateSetting(AudioManager.VIBRATE_TYPE_RINGER) == AudioManager.VIBRATE_SETTING_ON; , AudioManager XXXXX = (AudioManager) this.getSystemService(AUDIO_SERVICE); return XXXXX.getVibrateSetting(AudioManager.VIBRATE_TYPE_RINGER) == AudioManager.VIBRATE_SETTING_ON; 
1," Value value = _name.eval(env); Value[] args = evalArgs(env, _args); env.pushCall(this, NullValue.NULL, null); try { env.checkTimeout(); if (isRef) { return value.callRef(env, args); "," Value XXXXX = _name.eval(env); Value[] args = evalArgs(env, _args); env.pushCall(this, NullValue.NULL, null); try { env.checkTimeout(); if (isRef) { return XXXXX.callRef(env, args); "
0," StringDeclaration result = new StringDeclaration(); assertNotNull(result); String string = ""[declaration] string[""; assertEquals(string, result.toString().substring(0, string.length())); "," doSetUp(deltaAStart, deltaAEnd, deltaBStart, deltaBEnd, deltaRect); routing.addObstacle(deltaNewRect.getCopy()); routing.removeObstacle(deltaNewRect.getCopy()); doAssertNoPathsSolved(); "
0," if (doReset()) { showMessageDialog(logger, ""Reset Successful!\nTurn your ignition OFF and then\nback ON to complete the process."", ""Reset "" + logger.getTarget(), INFORMATION_MESSAGE); "," signalCookieOperationsStart(); new AsyncTask<Void, Void, Void>() { @Override protected Void doInBackground(Void... none) { nativeRemoveSessionCookie(); signalCookieOperationsComplete(); return null; "
0," String packagePattern = annotation.intoPackage(); if ( packagePattern.contains(""*"")) { PackageElement packageElement = findPackage(productClass); if (packageElement.isUnnamed()) { return null; ", mDistance = -1; x = mFromX = fromX; y = mFromY = fromY; mControlX = controlX; mControlY = controlY; mToX = toX; mToY = toY; mTarget = getDistance() / speed; mEase = ease; start(); 
1, String jndiName = properties.getProperty( Environment.SESSION_FACTORY_NAME ); if ( jndiName != null ) { return SessionFactoryRegistry.INSTANCE.getNamedSessionFactory( jndiName ); , String jndiName = properties.getProperty( Environment.SESSION_FACTORY_NAME ); if ( jndiName != null ) { return SessionFactoryRegistry.INSTANCE.getNamedSessionFactory( jndiName ); 
1, setChecked(task.isActive()); if (task.isActive()) { setText(Messages.ToggleTaskActivationAction_Deactivate_Task); setToolTipText(Messages.ToggleTaskActivationAction_Deactivate_Task); , setChecked(task.isActive()); if (task.isActive()) { setText(Messages.ToggleTaskActivationAction_Deactivate_Task); setToolTipText(Messages.ToggleTaskActivationAction_Deactivate_Task); 
1," TimeZone tz = TimeZone.getTimeZone(Config.TIME_ZONE); Calendar cal = Calendar.getInstance(tz); int year = cal.get(Calendar.YEAR) - 2000; String year2; if (year < 10) { year2 = ""0"" + year; "," TimeZone XXXXX = TimeZone.getTimeZone(Config.TIME_ZONE); Calendar XXXXX = Calendar.getInstance(XXXXX); int XXXXX = XXXXX.get(Calendar.YEAR) - 2000; String XXXXX2; if (XXXXX < 10) { XXXXX2 = ""0"" + XXXXX; "
1," String listText = """"; if (references != null) { for (int i = 0; i < references.size() - 1; i++) { listText += AdapterRegistry.getLabelProvider().getText(references.get(i)) + "", ""; "," StrXXXXXng XXXXX = """"; XXXXXf (references != null) { for (XXXXXnt XXXXX = 0; XXXXX < references.sXXXXXze() - 1; XXXXX++) { XXXXX += AdapterRegXXXXXstry.getLabelProvXXXXXder().getText(references.get(XXXXX)) + "", ""; "
1," super(model,editorController.getController()); this.editorController = editorController; delegate = new FIBEditableViewDelegate<FIBNumber,JSpinner>(this); model.addObserver(this); "," super(model,editorController.getController()); this.editorController = editorController; delegate = new FIBEditableViewDelegate<FIBNumber,JSpinner>(this); model.addObserver(this); "
1, super(PacketImpl.SESS_CREATECONSUMER); this.id = id; this.queueName = queueName; this.filterString = filterString; this.browseOnly = browseOnly; this.requiresResponse = requiresResponse; , super(PacketImpl.SESS_CREATECONSUMER); this.id = id; this.queueName = queueName; this.filterString = filterString; this.browseOnly = browseOnly; this.requiresResponse = requiresResponse; 
1, final int na = a.numDimensions(); if ( na != b.numDimensions() ) return false; for ( int d = 0; d < na; ++d ) { if ( a.getDoublePosition( d ) != b.getDoublePosition( d ) ) return false; , fiXXXXXl int XXXXX = a.numDimensions(); if ( XXXXX != b.numDimensions() ) return false; for ( int XXXXX = 0; XXXXX < XXXXX; ++XXXXX ) { if ( a.getDoublePosition( XXXXX ) != b.getDoublePosition( XXXXX ) ) return false; 
1," if (entity instanceof PieSectionEntity) { PieSectionEntity pieEntity = (PieSectionEntity) entity; return getPieSectorInfo(pieEntity.getDataset(), pieEntity.getSectionKey(), pieEntity.getPieIndex()); "," if (entity instanceof PieSectionEntity) { PieSectionEntity pieEntity = (PieSectionEntity) entity; return getPieSectorInfo(pieEntity.getDataset(), pieEntity.getSectionKey(), pieEntity.getPieIndex()); "
0," env.virtualMachine.setNameLabel(PREFIX + ""-label-updated""); env.virtualMachine.update(); env.virtualMachine.refresh(); assertEquals(env.virtualMachine.getNameLabel(), PREFIX + ""-label-updated""); "," System.out.println(""Word ""+this.getId()+"" : "" + this.game.getWordToComplete().getCurrentSubword()); System.out.println(""Deck ""+this.getId()+"" : ""+this.game.getDeck().getLetters()); "
0," SurfaceImpl rSurface = null; String wktSurface1 = ""SURFACE ((10 90, 30 50, 70 30, 120 40, 150 70, 150 120, 100 150, 30 140, 10 90))""; return this.createSurfaceFromWKT(crs, wktSurface1); ", Object source = e.getSource(); if (source == btnOK || source == btnApply) applyChanges(); if (source == btnOK || source == btnCancel) dispose(); else initInternalConditionModel(); 
0, ensureSessionBegin(); ObjyBranch objyBranch = objySession.getBranchManager(getRepositoryName()).getBranch(branchID); return objyBranch != null ? objyBranch.getBranchInfo() : null; ," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "
1, if (_policyFactory == null) { PolicyFactoryImpl factoryImpl= new PolicyFactoryImpl(); try { _policyFactory = PolicyFactoryHelper.narrow(_getPOA().servant_to_reference(factoryImpl)); , if (_policyFactory == null) { PolicyFactoryImpl factoryImpl= new PolicyFactoryImpl(); try { _policyFactory = PolicyFactoryHelper.narrow(_getPOA().servant_to_reference(factoryImpl)); 
1," installDefaults((AbstractButton) c); installListeners((AbstractButton) c); installKeyboardActions((AbstractButton) c); BasicHTML.updateRenderer(c, ((AbstractButton) c).getText()); "," installDefaults((AbstractButton) c); installListeners((AbstractButton) c); installKeyboardActions((AbstractButton) c); BasicHTML.updateRenderer(c, ((AbstractButton) c).getText()); "
1," Object value = super.getValue(); if (value instanceof String) { if (LOGGER.isTraceEnabled()) LOGGER.trace(""get value returned String; geocoding""); this.setValue(value); return this.getValue(); "," Object XXXXX = super.getValue(); if (XXXXX instanceof String) { if (LOGGER.isTraceEnabled()) LOGGER.trace(""get XXXXX returned String; geocoding""); this.setValue(XXXXX); return this.getValue(); "
1," try { Map<String, Configuration> referenceFiles = loadReferenceConfigFiles(); Configuration reference = referenceFiles.get(configuration.getFile().getName()); if (reference == null) { return; "," try { Map<String, Configuration> XXXXXFiles = loadReferenceConfigFiles(); Configuration XXXXX = XXXXXFiles.get(configuration.getFile().getName()); if (XXXXX == null) { return; "
0, int hashCode = 0; if (varname != null) hashCode ^= varname.hashCode(); if (partname != null) hashCode ^= partname.hashCode(); if (location != null) hashCode ^= location.hashCode(); return hashCode; ," ArgumentChecker.notNull(uniqueId, ""uniqueId""); validateUniqueId(uniqueId); if (_store.remove(uniqueId.getObjectId()) == null) { throw new DataNotFoundException(""Security not found: "" + uniqueId); "
0," noStroke(); textMode(SHAPE); textFont(bold); fill(unhex(moduleColor), 200); rectMode(CORNER); float Nw = textWidth(name); float Mw = textWidth(module); if (Nw > Mw) { w = textWidth(name) + 20; ", StatusLine statusLine = response.getStatusLine(); String body = null; try { HttpEntity entity = response.getEntity(); if (entity != null) body = new String(entityToBytes(entity)); 
1, if (unmounted == mUnmounted && scanning == mScanning) return; abortWorker(); mUnmounted = unmounted; mScanning = scanning; updateScanningDialog(mScanning); if (mUnmounted) { showNoImagesView(); , if (unmounted == mUnmounted && scanning == mScanning) return; abortWorker(); mUnmounted = unmounted; mScanning = scanning; updateScanningDialog(mScanning); if (mUnmounted) { showNoImagesView(); 
0," SessionEvent event = new SessionEvent(this.wagon, SessionEvent.SESSION_DISCONNECTED); for (SessionListener sessionListener : this.sessionListeners) { sessionListener.sessionDisconnected(event); "," assertEquals(LEAST, Ints.max(LEAST)); assertEquals(GREATEST, Ints.max(GREATEST)); assertEquals((int) 9, Ints.max( (int) 8, (int) 6, (int) 7, (int) 5, (int) 3, (int) 0, (int) 9)); "
0, assert format == LandsatConstants.INVALID_FORMAT || format == LandsatConstants.FAST_L5 || format == LandsatConstants.CEOS || format == LandsatConstants.ZIPED_UNKNOWN_FORMAT; this.format = format; ," path = path.toUpperCase(); final String[] split = path.split(""\\."", 2); CrazyLocale locale = get(split[0]); if (locale == null) { locale = new CrazyLocale(this, split[0]); put(split[0], locale); "
1, while (arg instanceof Assignment) { Assignment assign = (Assignment)arg; LocalVariableBinding innerLocal = assign.localVariableBinding(); if (innerLocal != null) { return innerLocal.closeTracker; , while (arg instanceof Assignment) { Assignment XXXXX = (Assignment)arg; LocalVariableBinding XXXXX = XXXXX.localVariableBinding(); if (XXXXX != null) { return XXXXX.closeTracker; 
1," Product product = new Product(""test"", ""TEST"", 10, 10); File outputFile = GlobalTestConfig.getBeamTestDataOutputFile(""DIMAP/test.dim""); try { _productWriter.writeProductNodes(product, outputFile); "," Product XXXXX = new Product(""test"", ""TEST"", 10, 10); File XXXXX = GlobalTestConfig.getBeamTestDataOutputFile(""DIMAP/test.dim""); try { _XXXXXWriter.writeProductNodes(XXXXX, XXXXX); "
1," if (dir.isDirectory()) { String[] children = dir.list(); for (int i=0; i < children.length; i++) { boolean success = deleteDir(new File(dir, children[i])); if (!success) { return false; "," if (dir.isDirectory()) { String[] children = dir.list(); for (int i=0; i < children.length; i++) { boolean XXXXX = deleteDir(new File(dir, children[i])); if (!XXXXX) { return false; "
0," this.from = from; this.hostID = hostID; this.hostname = hostname; this.nickname = nickname; this.username = username; this.port = port; if (nickname.length() == 0) { nickname = ""test""; ", TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(PhoneTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; 
1, OnDemandLogger log = new OnDemandLogger(OnDemandLoggerTest.class); assertTrue(!log.hasLog()); log.isDebugEnabled(); assertTrue(log.hasLog()); log.resetLog(); assertTrue(!log.hasLog()); , OnDemandLogger log = new OnDemandLogger(OnDemandLoggerTest.class); assertTrue(!log.hasLog()); log.isDebugEnabled(); assertTrue(log.hasLog()); log.resetLog(); assertTrue(!log.hasLog()); 
1," AtomicInteger ai = new AtomicInteger(1); assertEquals(0,ai.decrementAndGet()); assertEquals(-1,ai.decrementAndGet()); assertEquals(-2,ai.decrementAndGet()); assertEquals(-2,ai.get()); "," AtomicInteger XXXXX = new AtomicInteger(1); assertEquals(0,XXXXX.decrementAndGet()); assertEquals(-1,XXXXX.decrementAndGet()); assertEquals(-2,XXXXX.decrementAndGet()); assertEquals(-2,XXXXX.get()); "
0," ContainerConfig config = mockConfig(null, ""/gadgets/js""); DefaultJsUriManager manager = makeManager(config, null); Gadget gadget = mockGadget(false, false); manager.makeExternJsUri(gadget, null); "," if (this.persistenceUnitInfoNames.isEmpty()) { throw new IllegalStateException( ""No persistence units parsed from "" + ObjectUtils .nullSafeToString(this.persistenceXmlLocations)); "
1, Resource resource = resourceSet.getResources().get(0); if (resource.getContents().size() > 0 && resource.getContents().get(0) instanceof Diagram) { resource = resourceSet.getResources().get(1); , Resource XXXXX = XXXXXSet.getResources().get(0); if (XXXXX.getContents().size() > 0 && XXXXX.getContents().get(0) instanceof Diagram) { XXXXX = XXXXXSet.getResources().get(1); 
0," assertEquals(0, ComparisonChain.start() .compare(1, 1) .compare(1L, 1L) .compare(true, true) .compare(1.0, 1.0) .compare(1.0f, 1.0f) .compare(""a"", ""a"", Ordering.usingToString()) .result()); "," assertEquals(""242 365 1234"", phoneUtil.format(BS_NUMBER, PhoneNumberFormat.NATIONAL)); assertEquals(""+1 242 365 1234"", phoneUtil.format(BS_NUMBER, PhoneNumberFormat.INTERNATIONAL)); "
1, ICProject cproject = null ; if (marker.getResource() instanceof IProject) { IProject project = (IProject) marker.getResource(); cproject = CModelManager.getDefault().create(project); , ICProject XXXXX = null ; if (marker.getResource() instanceof IProject) { IProject XXXXX = (IProject) marker.getResource(); XXXXX = CModelManager.getDefault().create(XXXXX); 
0, return navigationHelper .navigateToAdminPage() .navigateToDefineSavingsProduct().submitAndNavigateToDefineNewSavingsProductPreviewPageWithoutInterestRateDetails(productParameters); ," if(way == null && Main.map != null && Main.map.mapView != null) { Point xy = Main.map.mapView.getPoint(getLatLon()); way = Main.map.mapView.getNearestWay(xy, OsmPrimitive.isUsablePredicate); "
0," super(name); proposals.add(new Proposal(""auto"")); proposals.add(new Proposal(""inherit"")); proposals.add(new Proposal(""1%"")); proposals.addAll(WebDialectExtension.createLengthProprosals()); "," PrimitivesAlias p = new PrimitivesAlias(""p""); Select<Primitives> q = Select.from(p); q.select(p.name.as(""name"")); Assert.assertEquals(""SELECT p.name as name\n FROM \""primitives\"" p"", q.toSql()); "
0," Tree tree = new Tree( parent, SWT.SINGLE | SWT.BORDER ); tree.setLayoutData( new GridData( GridData.FILL_VERTICAL | GridData.FILL_HORIZONTAL ) ); tree.addSelectionListener( this ); fillTree( tree ); "," Transaction tx = db.beginTx(); try { db.getReferenceNode().createRelationshipTo( db.createNode(), MyRelTypes.TEST ); db.getReferenceNode().setProperty( ""name"", ""Test"" ); tx.success(); "
1," String oldOnload = onload; onload = newOnload; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_POLYLINE_ELEMENT__ONLOAD, oldOnload, onload)); "," String XXXXX = onload; onload = newOnload; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_POLYLINE_ELEMENT__ONLOAD, XXXXX, onload)); "
1, if (!Terminated) { Terminated = Passivated = true; wakeuptime = SimulationProcess.Never; if ((this != SimulationProcess.Current) && (!idle())) Scheduler.unschedule(this); try { Scheduler.schedule(); , if (!Terminated) { Terminated = Passivated = true; wakeuptime = SimulationProcess.Never; if ((this != SimulationProcess.Current) && (!idle())) Scheduler.unschedule(this); try { Scheduler.schedule(); 
1," if (isLiveOrCompiled()) if(!this.getCapability(ALLOW_STRING_WRITE)) throw new CapabilityNotSetException(J3dI18N.getString(""Text3D3"")); ((Text3DRetained)this.retained).setString(string); "," if (isLiveOrCompiled()) if(!this.getCapability(ALLOW_STRING_WRITE)) throw new CapabilityNotSetException(J3dI18N.getString(""Text3D3"")); ((Text3DRetained)this.retained).setString(string); "
0," ServiceContext result = getContextInternal(); if( result == null ) { String msg = ""No context available outside of the request service lifecycle.""; throw new IllegalStateException( msg ); "," putValue(Action.SHORT_DESCRIPTION, tr(""Apply resolved conflicts"")); putValue(Action.NAME, tr(""Apply"")); putValue(Action.SMALL_ICON, ImageProvider.get(""ok"")); updateEnabledState(); "
0," resetTimer.putExtra(""hours"", hours); resetTimer.putExtra(""minutes"", minutes); resetTimer.putExtra(""seconds"", seconds); resetTimer.putExtra(""position"", position); sendBroadcast(resetTimer); "," RequestSpotInstancesOptions options = type(SpotInstanceRequest.Type.PERSISTENT); assertEquals(options.buildFormParameters().get(""Type""), Collections.singletonList(""persistent"")); "
0, float type = estimate.getEstimateType(); int estBytesPerSec = estimate.getBytesPerSec(); int chosenLimit; if( (estBytesPerSec<currMaxLimit) && estBytesPerSec<20480 ){ return currMaxLimit; ," super(context, attrs); setOrientation(VERTICAL); setLayoutParams(new LinearLayout.LayoutParams(android.view.ViewGroup.LayoutParams.FILL_PARENT,android.view.ViewGroup.LayoutParams.FILL_PARENT)); "
1, ComputeServiceContext context = null; try { context = ContextBuilder.newBuilder(new OVHApiMetadata()).build( ComputeServiceContext.class); context.getComputeService().listNodes(); , ComputeServiceContext XXXXX = null; try { XXXXX = ContextBuilder.newBuilder(new OVHApiMetadata()).build( ComputeServiceContext.class); XXXXX.getComputeService().listNodes(); 
1," if (localName.equals(TAG_E2EVENT)) { inEvent = false; String prefix = """"; if(!isFirst) prefix = Event.PREFIX_NEXT; Event.supplementReadables(prefix, mEvent); if(!isFirst) mList.add(mEvent); "," if (localName.equals(TAG_E2EVENT)) { inEvent = false; String XXXXX = """"; if(!isFirst) XXXXX = Event.PREFIX_NEXT; Event.supplementReadables(XXXXX, mEvent); if(!isFirst) mList.add(mEvent); "
1," this.rates = new CurrencyExchangeRateMap(); this.rates.addExchangeRate(USD, EUR, jun14th, lowDollarToEuroRate); this.rates.addExchangeRate(USD, EUR, jun17th, highDollarToEuroRate); "," this.rates = new CurrencyExchangeRateMap(); this.rates.addExchangeRate(USD, EUR, jun14th, lowDollarToEuroRate); this.rates.addExchangeRate(USD, EUR, jun17th, highDollarToEuroRate); "
1," Query query = container.query(); query.constrain(PersistentCooldownQueueItem.class); query.descend(""parent"").constrain(this).identity(); ObjectSet results = query.execute(); return results.size(); "," Query XXXXX = container.XXXXX(); XXXXX.constrain(PersistentCooldownQueueItem.class); XXXXX.descend(""parent"").constrain(this).identity(); ObjectSet XXXXX = XXXXX.execute(); return XXXXX.size(); "
1," List<Double> list = SummaryUtil.getAllChainsLastHalfSamples(d_results, d_parameter); double[] arr = new double[list.size()]; for (int i = 0; i < list.size(); ++i) { arr[i] = list.get(i); "," LXXXXXst<Double> lXXXXXst = SummaryUtXXXXXl.getAllChaXXXXXnsLastHalfSamples(d_results, d_parameter); double[] arr = new double[lXXXXXst.sXXXXXze()]; for (XXXXXnt XXXXX = 0; XXXXX < lXXXXXst.sXXXXXze(); ++XXXXX) { arr[XXXXX] = lXXXXXst.get(XXXXX); "
1," super(NbBundle.getMessage(ScalaConsoleAction.class, ""CTL_ScalaConsoleAction"")); putValue(SMALL_ICON,new ImageIcon(Utilities.loadImage(ScalaConsoleTopComponent.ICON_PATH, true))); "," super(NbBundle.getMessage(ScalaConsoleAction.class, ""CTL_ScalaConsoleAction"")); putValue(SMALL_ICON,new ImageIcon(Utilities.loadImage(ScalaConsoleTopComponent.ICON_PATH, true))); "
1," String oldText = text; text = newText; if ( eNotificationRequired( ) ) eNotify( new ENotificationImpl( this, Notification.SET, AttributePackage.ACCESSIBILITY_VALUE__TEXT, oldText, text ) ); "," String XXXXX = text; text = newText; if ( eNotificationRequired( ) ) eNotify( new ENotificationImpl( this, Notification.SET, AttributePackage.ACCESSIBILITY_VALUE__TEXT, XXXXX, text ) ); "
0," JPanel panel = new JPanel(new GridLayout(3, 1, 3, 3)); panel.add(new JButton(new AbstractAction(""Load Edit Layout"") { public void actionPerformed(ActionEvent e) { loadInitialLayout(""edit.ilayout""); ", ByteArrayOutputStream outputStream = new ByteArrayOutputStream(1024); PrintStream printStream = new PrintStream(outputStream); throwable.printStackTrace(printStream); return outputStream.toString(); 
1," if (featOkTst && casFeat_value == null) jcas.throwFeatMissing(""value"", ""org.u_compare.shared.document.DocumentValueAttribute""); ll_cas.ll_setStringValue(addr, casFeatCode_value, v);"," if (featOkTst && casFeat_value == null) jcas.throwFeatMissing(""value"", ""org.u_compare.shared.document.DocumentValueAttribute""); ll_cas.ll_setStringValue(addr, casFeatCode_value, v);"
0," String view = controller.create(createDatasetModel, result, model); assertEquals(""datasets/create"", view); assertEquals(0, Dataset.countDatasets()); assertEquals(0, Metadata.countMetadatas()); "," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "
0," PrintWriterPrinter printWriterPrinter = null; String mMessage = ""testMessage""; PrintWriter pw = null; try { pw = new PrintWriter(mFile); printWriterPrinter = new PrintWriterPrinter(pw); "," return new ITokenStoreFactory() { @Override public ITokenStore createTokenStore(String[] propertyColorNames) { return new TokenStore(getColorManager(), fPreferenceStore, propertyColorNames); "
1, int read1 = ((DecoratedCompiledMessageStatistics) item).getReadForumsAmt(); int read2 = ((DecoratedCompiledMessageStatistics) anotherItem).getReadForumsAmt(); return read1 - read2; , int XXXXX = ((DecoratedCompiledMessageStatistics) item).getReadForumsAmt(); int XXXXX = ((DecoratedCompiledMessageStatistics) anotherItem).getReadForumsAmt(); return XXXXX - XXXXX; 
1," HttpSession session = (HttpSession) FacesContext.getCurrentInstance() .getExternalContext().getSession(true); session.setAttribute(""javax.faces.PARTIAL_STATE_SAVING"", ""false""); return ""index.xhtml""; "," HttpSession XXXXX = (HttpSession) FacesContext.getCurrentInstance() .getExternalContext().getSession(true); XXXXX.setAttribute(""javax.faces.PARTIAL_STATE_SAVING"", ""false""); return ""index.xhtml""; "
0," tag = HTML.Tag.SPAN; assertEquals(""span"", tag.toString()); assertFalse(""breaks Flow"", tag.breaksFlow()); assertFalse(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); ", final ItemDefinition itemDefinition = addItem (); itemDefinition.setName ( name ); itemDefinition.setDirection ( Direction.OUT ); itemDefinition.setCallback ( callback ); return itemDefinition; 
0, if ((_params != null) && !_params.isEmpty()) { for (LiferayFileItem[] liferayFileItems : _params.values()) { for (LiferayFileItem liferayFileItem : liferayFileItems) { liferayFileItem.delete(); ," String dir = getBucketFolderDir(mountedRoot, bucket); File path = new File(dir); if(!deleteDirectory(path)) throw new OutOfStorageException(""Unable to delete "" + dir + "" for bucket "" + bucket); "
1," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; "," EditorCell XXXXX = null; XXXXX = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, XXXXX, editorContext); return XXXXX; "
1," int sizeC = core[0].sizeC; indexToValue = new int[sizeC][num]; for (int c=0; c<sizeC; c++) { for (int index=0; index<num; index++) indexToValue[c][index] = index; shuffle(c, indexToValue[c]); "," int XXXXX = core[0].XXXXX; indexToValue = new int[XXXXX][num]; for (int c=0; c<XXXXX; c++) { for (int index=0; index<num; index++) indexToValue[c][index] = index; shuffle(c, indexToValue[c]); "
1, String mode = null; ILaunchManager manager = DebugPlugin.getDefault().getLaunchManager(); ILaunchMode lmode = manager.getLaunchMode(modeid); if(lmode != null) { return lmode.getLabel(); , String XXXXX = null; ILaunchManager XXXXX = DebugPlugin.getDefault().getLaunchManager(); ILaunchMode lXXXXX = XXXXX.getLaunchMode(XXXXXid); if(lXXXXX != null) { return lXXXXX.getLabel(); 
0, long tick = System.currentTimeMillis(); if (gAppAlive==0) return; this.gl = drawable.getGL().getGLES1(); sTick = (sTick + tick - sStartTick) >> 1; if (sTick >= RUN_LENGTH) { gAppAlive = 0; return; , IOR ior; CorbaContactInfoList contactInfoList = (CorbaContactInfoList) messageMediator.getContactInfo().getContactInfoList(); ior = contactInfoList.getEffectiveTargetIOR(); return ior; 
1," if(node == null) return; Iterator<Entry<Integer, ProtocolNode>> i = _nodes.entrySet().iterator(); while(i.hasNext()) { ProtocolNode testNode = i.next().getValue(); if(node == testNode) { i.remove(); "," if(node == null) return; Iterator<Entry<Integer, ProtocolNode>> i = _nodes.entrySet().iterator(); while(i.hasNext()) { ProtocolNode XXXXX = i.next().getValue(); if(node == XXXXX) { i.remove(); "
0," ActivationLibrary.deactivate(this, getID()); System.err.println(""\tActivationLibrary.deactivate returned""); try { CallbackInterface cobj = (CallbackInterface)Naming.lookup("" cobj.inc(); "," String view = controller.create(createDatasetModel, result, model); assertEquals(""datasets/create"", view); assertEquals(0, Dataset.countDatasets()); assertEquals(0, Metadata.countMetadatas()); "
1, NodeList child = node.getChildNodes(); int length = child.getLength(); for (int i = 0; i < length; i++) { Node kid = child.item(i); if (kid.getNodeType() == Node.ELEMENT_NODE) { return kid; , NodeLXXXXXst XXXXX = node.getChXXXXXldNodes(); XXXXXnt XXXXX = XXXXX.getLength(); for (XXXXXnt XXXXX = 0; XXXXX < XXXXX; XXXXX++) { Node kXXXXXd = XXXXX.XXXXXtem(XXXXX); XXXXXf (kXXXXXd.getNodeType() == Node.ELEMENT_NODE) { return kXXXXXd; 
0, if ( viewer == getCurrentViewer( ) ) return; super.setViewer( viewer ); if ( viewer instanceof GraphicalViewer ) setDefaultCursor( SharedCursors.CROSS ); else setDefaultCursor( SharedCursors.NO ); ," StringBuilder sbToString = getSbToString(); sbToString.setLength(0); sbToString.append(label); sbToString.append("" = ""); sbToString.append(kernel.format(getLength())); return sbToString.toString(); "
1," LogLevel logLevel = LogLevel.fromString(level.atomValue()); for (int i = 0; i < output.arity(); ++i) { MavenUtils.logMultiLineString(log, logLevel, ErlUtils.toString(output.elementAt(i), false)); "," LogLevel logLevel = LogLevel.fromString(level.atomValue()); for (int i = 0; i < output.arity(); ++i) { MavenUtils.logMultiLineString(log, logLevel, ErlUtils.toString(output.elementAt(i), false)); "
0,"\n"" + "" for (Iterator iterator = dbRecList.getCollection().iterator(); iterator.hasNext();) {\n"" + "" DbRec dbRec = (DbRec) iterator.next();\n"" + "" assignSystemRecordId(dbRec);\n"" + "" "," Rectangle r = f.getBounds(); f.setBounds(newX, newY, newWidth, newHeight); SwingUtilities.computeUnion(newX, newY, newWidth, newHeight, r); f.getParent().repaint(r.x, r.y, r.width, r.height); "
0, synchronized (mCache) { CacheEntry entry = mCache.get(component); if (component == null ||entry == null || entry.icon == null) { if (resolveInfo == null || component == null) { return mDefaultIcon; ," super.clearGui(); argumentName.setText(""""); pathExt.setSelected(false); pathExtNoEquals.setSelected(false); pathExtNoQuestionmark.setSelected(false); shouldCache.setSelected(false); "
0," if(OJUtil.hasOJClass(i) && !(i instanceof INakedHelper)){ OJAnnotatedClass ojClass = findJavaClass(i); this.buildBuildTreeFromXml(ojClass, i); this.buildPopulateReferencesFromXml(ojClass, i); ", int minimumLearnCount = specialCharm.getMinimumLearnCount(createLearnRangeContext()); if (experienced) { if (getCurrentLearnCount() == 0) { trait.setExperiencedValue(minimumLearnCount); 
0, super(arraySize); mDirty = false; getObjects().setComparator(sPhasedObjectComparator); getPendingObjects().setComparator(sPhasedObjectComparator); mSearchDummy = new PhasedObject(); , for(int i=0; i < graphList.size(); i++) { if(node.equals(((CellWrapper)graphList.get(i)).getNode()) && ((CellWrapper)graphList.get(i)).nodeG.sugiyamaVisited) return (CellWrapper)graphList.get(i); 
1," StringBuffer result = new StringBuffer(); result.append(_name); result.append('('); for (Iterator i = _parameters.iterator(); i.hasNext(); ) { result.append(i.next()); result.append(','); "," StringBuffer result = new StringBuffer(); result.append(_name); result.append('('); for (Iterator i = _parameters.iterator(); i.hasNext(); ) { result.append(i.next()); result.append(','); "
1," if (dateString == null) { dateString = com.nary.util.Date.formatDate(time, formatString); if (formatStringPrefix != null) { dateString = ""{"" + formatStringPrefix + "" '"" + dateString + ""'"," if (dateString == null) { dateString = com.nary.util.Date.formatDate(time, formatString); if (formatStringPrefix != null) { dateString = ""{"" + formatStringPrefix + "" '"" + dateString + ""'"
0," _lastDevSample = _distAlongDevSample; _distAlongDevSample = HalfNormalGen.nextDouble(_rng, _distAlongDevKalmanParams[0], Math.sqrt(_distAlongDevKalmanParams[1])); return _distAlongDevSample; ", switch (mode) { case 0: return 1; case 1: return 1; case 2: return -1; case 3: return 3; case 4: return 4; case 7: return -1; case 8: return -1; case 9: return 4; default: return -1; 
1, int result =0; final boolean[] written =dmPiece.getWritten(); for (int i =0; i <nbBlocks; i++ ) { if (!downloaded[i] &&requested[i] ==null &&(written ==null ||!written[i])) result++; , XXXXXnt XXXXX =0; fXXXXXnal boolean[] wrXXXXXtten =dmPXXXXXece.getWrXXXXXtten(); for (XXXXXnt XXXXX =0; XXXXX <nbBlocks; XXXXX++ ) { XXXXXf (!downloaded[XXXXX] &&requested[XXXXX] ==null &&(wrXXXXXtten ==null ||!wrXXXXXtten[XXXXX])) XXXXX++; 
0," BufferedImage image; if (destCM == null) { ColorModel cm = src.getColorModel(); image = new BufferedImage(cm, src.getRaster().createCompatibleWritableRaster(), cm.isAlphaPremultiplied(), null); "," String name = replaceParam(elem.getAttributeValue(""name"")); String value = replaceParam(elem.getAttributeValue(""value"")); if( (name != null) && (value != null)) { this.addParam(name, value); "
0, LanguageTypeClient languageTypeClient = new LanguageTypeClient(); if (getAttributeForm() != null) { languageTypeClient.setObjectPart(getAttributeForm().getValueAsString(ModsConstants.OBJECT_PART)); , for (StudySubjectAssignment targetAssignment : targetAssignments) { targetAssignment.setStudySubjectCalendarManager(newResponsible.getCsmUser()); assignmentDao.save(targetAssignment); 
0, super(); this.readRowKey = readRowKey; this.idRowKey = idRowKey; this.columnId = columnId; this.columnFamily = columnFamily; this.clock = clock; this.biDirectional = biDirectional; ," assertEquals(""1.3.6.1.4.1.1466.20037"", StartTlsResponse.OID); StartTlsResponse str = new MockStartTlsResponse(); assertEquals(StartTlsResponse.OID, str.getID()); assertNull(str.getEncodedValue()); "
0," if ( d == null ) throw new java.lang.IllegalArgumentException( Messages.getString( ""error.BirtDateTime.cannotBeNull.DateValue"" ) ); return getCalendar( d ).get( Calendar.DAY_OF_MONTH ); ", if(ProjectRegistry.defaultRegistry == null) { synchronized(ProjectRegistry.LOCK) { if(ProjectRegistry.defaultRegistry == null) { ProjectRegistry.defaultRegistry = new ProjectRegistry(); 
1, Openable parent = (Openable) child.getParent(); if (parent != null && parent.isOpen()) { try { RubyElementInfo info = (RubyElementInfo) parent.getElementInfo(); info.addChild(child); , Openable XXXXX = (Openable) child.getParent(); if (XXXXX != null && XXXXX.isOpen()) { try { RubyElementInfo XXXXX = (RubyElementInfo) XXXXX.getElementInfo(); XXXXX.addChild(child); 
1, this.bookmarkedStopIds = new ArrayList<String>(); this.defaultLocationLat = Double.NaN; this.defaultLocationLon = Double.NaN; this.defaultLocationName = null; this.lastSelectedStopId = null; , this.bookmarkedStopIds = new ArrayList<String>(); this.defaultLocationLat = Double.NaN; this.defaultLocationLon = Double.NaN; this.defaultLocationName = null; this.lastSelectedStopId = null; 
1, EditorWindow window = null; if (myCurrentOver != null) { final DataProvider provider = myCurrentOver.getDataProvider(); if (provider != null) { window = EditorWindow.DATA_KEY.getData(provider); , EditorWindow XXXXX = null; if (myCurrentOver != null) { final DataProvider XXXXX = myCurrentOver.getDataProvider(); if (XXXXX != null) { XXXXX = EditorWindow.DATA_KEY.getData(XXXXX); 
1," terminateInfo = new TerminateListener.Info(started, System.nanoTime()); for (TerminateListener terminateListener : terminateListeners) { try { terminateListener.handleTermination(terminateInfo); "," terminateInfo = new TerminateListener.Info(started, System.nanoTime()); for (TerminateListener terminateListener : terminateListeners) { try { terminateListener.handleTermination(terminateInfo); "
0, String error = null; String productName = getProductName(); if (productName != null && productName.length() == 0) { error = PDEUIMessages.ProductDefinitonWizardPage_noProductName; ," this.nodeLister = checkNotNull(nodeLister, ""nodeLister""); this.nodeDeleter = checkNotNull(nodeDeleter, ""nodeDeleter""); this.clientDeleter = checkNotNull(clientDeleter, ""clientDeleter""); "
1," Value vertexValue = ((SailVertex) vertex).getRawVertex(); try { if (vertexValue instanceof Resource) { this.sailConnection.get().removeStatements((Resource) vertexValue, null, null); "," Value XXXXX = ((SailVertex) vertex).getRawVertex(); try { if (XXXXX instanceof Resource) { this.sailConnection.get().removeStatements((Resource) XXXXX, null, null); "
1," from(""direct:start""). marshal().xstream(). process(new Processor() { public void process(Exchange exchange) throws Exception { log.debug(""marshalled: "" + exchange.getIn().getBody(String.class)); "," from(""direct:start""). marshal().xstream(). process(new Processor() { public void process(Exchange exchange) throws Exception { log.debug(""marshalled: "" + exchange.getIn().getBody(String.class)); "
1, String title = Messages.buckminster_component_query; setNeedsProgressMonitor(true); WizardPage page; if (bom == null) { page = new SelectBOMPage(selection); page.setTitle(title); addPage(page); , String XXXXX = Messages.buckminster_component_query; setNeedsProgressMonitor(true); WizardPage page; if (bom == null) { page = new SelectBOMPage(selection); page.setTitle(XXXXX); addPage(page); 
0, DbAttributeTableModel model = (DbAttributeTableModel) table.getModel(); int ind = model.getObjectList().indexOf(e.getAttribute()); model.removeRow(e.getAttribute()); table.select(ind); ," for (Iterator i = children.iterator(); i.hasNext();) { Styleable child = (Styleable) i.next(); if (!isProperTableNesting(parentDisplay, child.getStyle().getIdent(CSSName.DISPLAY))) { return false; "
0, for( MarkerInfo markerInfo : _markerInfos ){ try{ final IMarker marker = _javaProject.getProject().createMarker(AptPlugin.APT_BATCH_PROCESSOR_PROBLEM_MARKER); markerInfo.copyIntoMarker(marker); ," return Objects.toStringHelper(this).omitNullValues().add(""id"", id) .add(""name"", name).add(""attachedServer"", attachedServer) .add(""creator"", creator).add(""size"", size).toString(); "
0," return new EventBuilder(""uei.opennms.org/vendor/Juniper/traps/mplsLspPathDown"", ""Test"") .setNodeid(nodeid) .setInterface( addr( ipaddr ) ) .addParam(""mplsLspName"", lspname ) .getEvent(); "," String str = """"; for (int i = 0; i < values.size() - 1; i++) str += values.elementAt(i) + "", ""; if (values.size() > 0) str += values.elementAt(values.size() - 1); return new Header(name, str); "
1," logger.log(""Removing Foreign Calls...""); RemoveCalls(); logger.log(""Fixing DUPs...""); fixPOPs(); if (AuthClass != null) { logger.log(""Replacing Authentication System...""); replaceCheckMethod(); "," logger.log(""Removing Foreign Calls...""); RemoveCalls(); logger.log(""Fixing DUPs...""); fixPOPs(); if (AuthClass != null) { logger.log(""Replacing Authentication System...""); replaceCheckMethod(); "
0," if (object instanceof DataState) { if (dataStatePropertiesProvider == null) { dataStatePropertiesProvider = new AbstractPropertiesProvider(object) { String[] properties = new String[] { ""id"", ""name"" ", super(); this.messages = messages; this.errorCode = errorCode; this.size = messages.getSizeInBytes(); header.putInt((int) (size + 2)); header.putShort(errorCode.code); header.rewind(); 
1, final Iterator<CoverageStoreFactory> ite = CoverageStoreFinder.getAllFactories(); boolean found = false; while (ite.hasNext()){ if(ite.next() instanceof WMTSServerFactory){ found = true; , final Iterator<CoverageStoreFactory> ite = CoverageStoreFinder.getAllFactories(); boolean XXXXX = false; while (ite.hasNext()){ if(ite.next() instanceof WMTSServerFactory){ XXXXX = true; 
0," menuMan.add(new Action(""Unselect and collapse all"") { public void run() { plottingSystem.reset(); final MultiScanComponent comp = getMultiScanComponent(false); if (comp==null) return; comp.clear(); "," MethodCache.remove(DLFileEntryService.class); _service = service; ReferenceRegistry.registerReference(DLFileEntryServiceUtil.class, ""_service""); MethodCache.remove(DLFileEntryService.class); "
1," List<Node> currentSelectedNodes = graphView.getCurrentSelectedNodes(); if ( currentSelectedNodes.size() != 2 ) { Dialog.openWarning( ADDING_REL_WARNING_LABEL, ADDING_REL_WARNING_MESSAGE ); return; "," List<Node> currentSelectedNodes = graphView.getCurrentSelectedNodes(); if ( currentSelectedNodes.size() != 2 ) { Dialog.openWarning( ADDING_REL_WARNING_LABEL, ADDING_REL_WARNING_MESSAGE ); return; "
1," assertEquals( ""a\\\\b"", JsonValue.escapeString( ""a\\b"" ) ); assertEquals( ""a\\\""b"", JsonValue.escapeString( ""a\""b"" ) ); assertEquals( ""a\\\\\\\""b\\\\\\\"""", JsonValue.escapeString( ""a\\\""b\\\"""" ) ); "," assertEquals( ""a\\\\b"", JsonValue.escapeString( ""a\\b"" ) ); assertEquals( ""a\\\""b"", JsonValue.escapeString( ""a\""b"" ) ); assertEquals( ""a\\\\\\\""b\\\\\\\"""", JsonValue.escapeString( ""a\\\""b\\\"""" ) ); "
1, Properties result = new Properties(); if (!location.toFile().exists()) return result; InputStream input = null; try { input = new FileInputStream(location.toFile()); result.load(input); , Properties XXXXX = new Properties(); if (!location.toFile().exists()) return XXXXX; InputStream XXXXX = null; try { XXXXX = new FileInputStream(location.toFile()); XXXXX.load(XXXXX); 
0, Sector gb = null; if (fileIndex != null && fileIndex.getIndexProperties() != null) gb = fileIndex.getIndexProperties().getBoundingSector(); if (gb == null) gb = Sector.EMPTY_SECTOR; return gb; ," begin(); try { List<String> isolatedNames = (List<String>)storage_.getClass().getMethod(methodName).invoke(storage_); assertEquals(new HashSet<String>(names), new HashSet<String>(isolatedNames)); "
0," String label = ""Displaying "" + count + "" matches of '"" + string + ""'""; if (projects!=null && projects.length!=0) { label += "" in project ""; for (String project: projects) { label += project + "", ""; ", if (obj instanceof TagHandlerKey) { TagHandlerKey other = (TagHandlerKey) obj; if (this.attributeName == null && other.attributeName == null) { return (this.tagName.equals(other.tagName)); 
0," String oldValue = value; value = newValue; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, FXGraphPackage.LOCATION_VALUE_PROPERTY__VALUE, oldValue, value)); "," VCloudDirectorApi api = requestsSendResponses(loginRequest, sessionResponse, getMetadataValue, getMetadataValueResponse); assertEquals(api.getOrgApi().getMetadataApi(orgHref).get(""KEY""), ""VALUE""); "
0, if(p == null) return; right(p); while((p = p.more) != null) { right(p); for (Parse cell=p.parts; cell != null && cell.more != null; cell = cell.more) { right(cell); markAllCorrect(cell.parts); , final String method = request.getMethod(); if (method.equals(APPConstants.HTTP_GET)) { int colonIdx = request.getUri().toString().indexOf(':'); if (colonIdx > -1) { return getEntry(request); 
1," ReadCommand readCommand = new RetriedSliceFromReadCommand(table, key, queryPath, start, finish, reversed, originalCount, count); readCommand.setDigestQuery(isDigestQuery()); return readCommand; "," ReadCommand XXXXX = new RetriedSliceFromReadCommand(table, key, queryPath, start, finish, reversed, originalCount, count); XXXXX.setDigestQuery(isDigestQuery()); return XXXXX; "
0," if (object == null) return false; MetaClass mc = GroovySystem.getMetaClassRegistry().getMetaClass(object.getClass()); return mc.hasProperty(object, HIBERNATE_LAZY_INITIALIZER_PROP) != null; ", TypeDeclaration decl = isUriBaseType() ? getEnv().getTypeDeclaration(URI.class.getName()) : getEnv().getTypeDeclaration(QName.class.getName()); return getEnv().getTypeUtils().getDeclaredType(decl); 
1," if (key == null) throw new NullPointerException(""key""); else if (normalMap.getKeys().contains(key)) { TValue value = normalMap.get(key); normalMap.remove(key); inverseMap.remove(value); return true; "," if (key == null) throw new NullPointerException(""key""); else if (normalMap.getKeys().contains(key)) { TValue XXXXX = normalMap.get(key); normalMap.remove(key); inverseMap.remove(XXXXX); return true; "
1," if(batchSize <= 0) throw new IllegalArgumentException(""batchSize must be 1 or greater, but really, please don't use 1, use something like 500(the default anyways)""); this.batchSize = batchSize; "," if(batchSize <= 0) throw new IllegalArgumentException(""batchSize must be 1 or greater, but really, please don't use 1, use something like 500(the default anyways)""); this.batchSize = batchSize; "
1," synchronized (lockStackedParameters) { stackedParameters.push(new Object[] { gc, styledTextForeground, size, content, lineCount, marginCols, marginColor, spacing, imageHeight, transform, tmpImage "," synchronized (lockStackedParameters) { stackedParameters.push(new Object[] { gc, styledTextForeground, size, content, lineCount, marginCols, marginColor, spacing, imageHeight, transform, tmpImage "
0, final StringBuffer buf = new StringBuffer(value.length()); final int len = value.length(); for (int i = 0; i < len; i++) { char c = value.charAt(i); if (c == '/') { buf.append('\\'); ," paymentView.config = config; final String url = ""http: activity.runOnUiThread(new Runnable() { public void run() { activity.setContentView(paymentView); paymentView.loadUrl(url); "
1," setText(""Save image as...""); setToolTipText(""Save image as...""); setImageDescriptor(PlatformUI.getWorkbench().getSharedImages() .getImageDescriptor(ISharedImages.IMG_ETOOL_SAVEAS_EDIT)); "," setText(""Save image as...""); setToolTipText(""Save image as...""); setImageDescriptor(PlatformUI.getWorkbench().getSharedImages() .getImageDescriptor(ISharedImages.IMG_ETOOL_SAVEAS_EDIT)); "
1, super(title); setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE); this.chartPanel = new ChartPanel(chart); if (scrollPane) { setContentPane(new JScrollPane(this.chartPanel)); , super(title); setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE); this.chartPanel = new ChartPanel(chart); if (scrollPane) { setContentPane(new JScrollPane(this.chartPanel)); 
0," try { AttributeHandleSet ahs = newAttributeSet( aaHandle, abHandle, baHandle, bbHandle ); defaultFederate.rtiamb.publishObjectClassAttributes( getObjectClassHandle(bHandle), ahs ); "," Persistent object = (Persistent) serverObject; ObjectId id = object.getObjectId(); if (id == null) { throw new CayenneRuntimeException(""Server returned an object without an id: "" + object); "
0," super(generator, project); generalStyleDocGenerator = new GeneralStyleDocGenerator(generator, project); dataModelStyleDocGenerator = new DataModelStyleDocGenerator(generator, project); ", Object token; for (Iterator iterator = assertions.iterator(); iterator.hasNext();) { token = iterator.next(); if (token instanceof Token) { parent.setInitiatorToken((Token) token); 
1," try { byte[] noderefBuf = OpennetManager.innerWaitForOpennetNoderef(xferUID, paddedLength, noderefLength, next, false, uid, true, AnnounceSender.this, node); if(noderefBuf == null) { return; "," try { byte[] noderefBuf = OpennetManager.innerWaitForOpennetNoderef(xferUID, paddedLength, noderefLength, next, false, uid, true, AnnounceSender.this, node); if(noderefBuf == null) { return; "
0, if (ourOldUseAntialiasing ^ source.ANTIALIASING_IN_EDITOR) { ourOldUseAntialiasing = source.ANTIALIASING_IN_EDITOR; for (FontInfo fontInfo : ourUsedFonts.values()) { fontInfo.reset(); , for (int i = 0; i < 100; i++) { for (int j = 0; j < randomObjects.length; j++) { try { int index = randomIndexes[j]; randomStrings[index] = ((Integer) randomObjects[index]).toString(); 
0," String geoIPflagname = app.getFlagName(true); if (!geoIPflagname.equals(flagName)) { App.debug(""updating flag to: ""+geoIPflagname); removeAll(); initItems(app.getFlagIcon(geoIPflagname)); "," if (element instanceof InspectionProfileEntry) { final InspectionProfileEntry entry = (InspectionProfileEntry)element; return entry.getDisplayName() + "" "" + entry.getGroupDisplayName(); "
0," List<Term> dbTerms = Term.findAllTerms(); terms.setTerms(new HashSet<Term>(dbTerms)); addLinks(terms.getTerms()); updateCollectionDomainCounters(new Long(dbTerms.size()), terms); "," JavaName javaName = JavaName.of(name); javaName.addFirst(""set""); javaName.addLast(""option""); return new ExpressionBuilder(factory, object) .method(javaName.toMemberName(), value) .toStatement(); "
1, Element childElement = null; String tagValue = null; childElement = parentElement.getChild(tagName); tagValue = (null != childElement) ? childElement.getValue().trim(): null; return (tagValue); , Element XXXXX = null; String XXXXX = null; XXXXX = parentElement.getChild(tagName); XXXXX = (null != XXXXX) ? XXXXX.getValue().trim(): null; return (XXXXX); 
1," Intent intentScan = new Intent(""org.torproject.android.START_TOR""); intentScan.addCategory(Intent.CATEGORY_DEFAULT); try { activity.startActivityForResult(intentScan, REQUEST_CODE); return null; "," Intent XXXXX = new Intent(""org.torproject.android.START_TOR""); XXXXX.addCategory(Intent.CATEGORY_DEFAULT); try { activity.startActivityForResult(XXXXX, REQUEST_CODE); return null; "
0," int a = rgb & 0xff000000; int r = (rgb >> 16) & 0xff; int g = (rgb >> 8) & 0xff; int b = rgb & 0xff; Color.RGBtoHSB(r, g, b, hsb); hsb[0] += hue; while (hsb[0] < 0) { hsb[0] += Math.PI*2; "," try { this.namespaceManager.changeToGlobalNamespace(); String currentUserId = this.currentUser(); if ( currentUserId != null ) { response.addOutput(""user"", this.userManager.getUser(currentUserId)); "
1," fieldBooleanP = new ReflectionMobeelizerFieldAccessor(MobeelizerReflectionUtil.getField(TestEntity.class, ""booleanP"", new HashSet<Class<?>>(Arrays.asList(new Class<?>[] { Boolean.class, Boolean.TYPE "," fieldBooleanP = new ReflectionMobeelizerFieldAccessor(MobeelizerReflectionUtil.getField(TestEntity.class, ""booleanP"", new HashSet<Class<?>>(Arrays.asList(new Class<?>[] { Boolean.class, Boolean.TYPE "
1," HLAbyte data = this.encoderFactory.createHLAbyte( (byte)0x41 ); data.setValue( (byte)0x42 ); Assert.assertFalse( (byte)0x41 == data.getValue() ); Assert.assertEquals( data.getValue(), (byte)0x42 ); "," HLAbyte XXXXX = this.encoderFactory.createHLAbyte( (byte)0x41 ); XXXXX.setValue( (byte)0x42 ); Assert.assertFalse( (byte)0x41 == XXXXX.getValue() ); Assert.assertEquals( XXXXX.getValue(), (byte)0x42 ); "
1," mContext.enforceCallingOrSelfPermission(BLUETOOTH_PERM, ""Need BLUETOOTH permission""); String discoveringProperty = getProperty(""Discovering"", false); if (discoveringProperty == null) { return false; "," mContext.enforceCallingOrSelfPermission(BLUETOOTH_PERM, ""Need BLUETOOTH permission""); String XXXXX = getProperty(""Discovering"", false); if (XXXXX == null) { return false; "
1, int compilerBid = compiler.bid(inputFile); if (compilerBid > 0 && exceptFiles != null) { for (int i = 0; i < exceptFiles.length; i++) { if (inputFile.equals(exceptFiles[i])) { return 0; , int compilerBid = compiler.bid(inputFile); if (compilerBid > 0 && exceptFiles != null) { for (int i = 0; i < exceptFiles.length; i++) { if (inputFile.equals(exceptFiles[i])) { return 0; 
1," DBObject obj = new BasicDBObject(""_id"", new ObjectId()); obj.put(""first"", 1); obj.put(""second"", ""str1""); obj.put(""third"", true); obj.put(""fourth"", new BasicDBObject(""firstNested"", 1)); return obj; "," DBObject obj = new BasicDBObject(""_id"", new ObjectId()); obj.put(""first"", 1); obj.put(""second"", ""str1""); obj.put(""third"", true); obj.put(""fourth"", new BasicDBObject(""firstNested"", 1)); return obj; "
1, PointPlacement pointp = new PointPlacementImpl(filterFactory); pointp.setAnchorPoint(anchorPoint); pointp.setDisplacement(displacement); pointp.setRotation(rotation); return pointp; , PointPlacement pointp = new PointPlacementImpl(filterFactory); pointp.setAnchorPoint(anchorPoint); pointp.setDisplacement(displacement); pointp.setRotation(rotation); return pointp; 
1," final Properties properties = new Properties(); properties.setProperty(""com.atomikos.icatch.service"", ""com.atomikos.icatch.standalone.UserTransactionServiceFactory""); return properties; "," final Properties properties = new Properties(); properties.setProperty(""com.atomikos.icatch.service"", ""com.atomikos.icatch.standalone.UserTransactionServiceFactory""); return properties; "
0," Style style = new Style(cell); style.set(StyleAttributes.PUNCTUATION_LEFT, true); style.set(StyleAttributes.PUNCTUATION_RIGHT, true); style.set(StyleAttributes.SELECTABLE, false); return style; "," log.info(""Starting Tomcat - Web application""); boolean result = false; final ClassLoader originalClassLoader = Thread.currentThread().getContextClassLoader(); log.debug(""Webapp root: {"
1," this.plugin = plugin; recipes = new ImprovedCauldronCookbook( YamlConfiguration.loadConfiguration( new File(plugin.getDataFolder(), ""cauldron-recipes.yml"") ), plugin.getDataFolder()); "," this.plugin = plugin; recipes = new ImprovedCauldronCookbook( YamlConfiguration.loadConfiguration( new File(plugin.getDataFolder(), ""cauldron-recipes.yml"") ), plugin.getDataFolder()); "
1," if (control instanceof FormText) return; Point controlSize = control.getSize(); Point controlOrigin = getControlLocation(scomp, control); ensureVisible(scomp, controlOrigin, controlSize); "," if (control instanceof FormText) return; Point XXXXX = control.getSize(); Point XXXXX = getControlLocation(scomp, control); ensureVisible(scomp, XXXXX, XXXXX); "
0, int len = 0; if (isMeshed()) len += 1 + destLen + origLen; if (isBCast()) len += 2; if (isFragged()) { len += LowPanHeader.MAX_FRAGMENTATION_HEADER_LENGTH; if (isFirstFrag()) len -= 1; ," StringBuffer buf = new StringBuffer(method.getSimpleName()); for (ParameterDeclaration param : method.getParameters()) buf.append("";""+param.getType().toString()); return buf.toString(); "
0, Color foreground; for (int i = 0; i < UIMANAGER_KEYS.length; i++) { String key = UIMANAGER_KEYS[i]; foreground = UIManager.getColor(key); if (foreground != null) { return foreground; , this.buffer = new byte[BUCKET_SIZE_IN_BYTES]; for (int i = 0; i < keys.length; i++) keys[i] = -1; this.clusterLocal = clusterLocal; this.position = position; this.isOverflowBucket = overflowBucket; 
0," if(way == null && Main.map != null && Main.map.mapView != null) { Point xy = Main.map.mapView.getPoint(getLatLon()); way = Main.map.mapView.getNearestWay(xy, OsmPrimitive.isUsablePredicate); "," random = RandomUtil.createWithFixedSeed(); crit = new ScaleCriterion(""c""); List<Criterion> list = new ArrayList<Criterion>(); list.add(crit); info = new CardinalPreferenceInformation(list); "
0, int result = 19; result = 37 * result + (int) (this.segmentSize ^ (this.segmentSize >>> 32)); result = 37 * result + (int) (this.startTime ^ (this.startTime >>> 32)); return result; ," final ProductData data = band.createCompatibleRasterData(); for (int i = 0; i < band.getSceneRasterWidth() * band.getSceneRasterHeight(); i++) { data.setElemDoubleAt(i, start + i); "
0," ArrayDeque q = populatedDeque(SIZE); q.clear(); assertTrue(q.isEmpty()); assertEquals(0, q.size()); q.add(new Integer(1)); assertFalse(q.isEmpty()); q.clear(); assertTrue(q.isEmpty()); "," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "
1," try { if (m_gridConfig.getClientFeedback() == null) { log.info(""No feedback handler set, using DefaultClientFeedback""); m_gridConfig.setClientFeedback(new DefaultClientFeedback()); "," try { if (m_gridConfig.getClientFeedback() == null) { log.info(""No feedback handler set, using DefaultClientFeedback""); m_gridConfig.setClientFeedback(new DefaultClientFeedback()); "
0," final long start = System.nanoTime(); transactions.rollback(this, checkpointName); log.logRollbackToCheckpoint((System.nanoTime() - start) / 1000000L, this, checkpointName); return this; "," TimeZone tz = null; if (_timeZone != null) tz = getTimeZoneForExpression(_timeZone); if (tz == null) tz = getTimeZoneForExpression(""timeZone""); if (tz == null) tz = TimeZone.getDefault(); return tz; "
0," if (comboBoxes.size() > MAX_FEATURE_ALLOWED) return; ComboBoxModel jComboBoxYFeatureModel = new DefaultComboBoxModel( TMUtils.getArrayFromMaping(features, featureNames).toArray(new String[] {"," for (int i=0;i<auth_listeners.size();i++){ try{ boolean res = ((TrackerAuthenticationListener)auth_listeners.get(i)).authenticate( resource, user, password ); if ( res ){ return(true ); "
0," return Utility.createMenuItem(label, new RemoveAllCampaignActionListener(), ""deselectall"", (char) 0, accelerator, ""Remove All Source material from loading"", ""Remove16.gif"", true); "," String raw = new String(buffer.array(), 0, buffer.limit(), Charset.forName(""ISO-8859-1"")); String[] headersAndBody = RAW_VALUE_PATTERN.split(raw, -1); if (headersAndBody.length <= 1) { return null; "
1," ModelAccess.instance().runWriteActionInCommand(new Runnable() { public void run() { myAction.invoke(myDialog.getMergeSession(), getChangeGroup().getChanges()); myDialog.rehighlight(); "," ModelAccess.instance().runWriteActionInCommand(new Runnable() { public void run() { myAction.invoke(myDialog.getMergeSession(), getChangeGroup().getChanges()); myDialog.rehighlight(); "
0," Object valueObj = value.getValueObj(); if (valueObj instanceof Character) { Character character = (Character) valueObj; return new JIntLiteral(value.getSourceInfo(), character.charValue()); ", switch (featureID) { case WfsPackage.TRANSACTION_RESULTS_TYPE__HANDLE: setHandle(HANDLE_EDEFAULT); return; case WfsPackage.TRANSACTION_RESULTS_TYPE__ACTION: getAction().clear(); return; 
0," return (OpportunityStage) this.em .createNamedQuery(OpportunityStage.NQ_FIND_BY_NAME) .setParameter(""pClientId"", Session.user.get().getClientId()) .setParameter(""pName"", name).getSingleResult(); "," boolean is_successful = false; try { JSONObject json = new JSONObject(response.getResponseString()); if (json.has(""access_token"") && json.has(""refresh_token"")) is_successful = true; "
1, final int prime = 31; int result = 1; result = prime * result + ((fieldTypeId == null) ? 0 : fieldTypeId.hashCode()); result = prime * result + (mandatory ? 1231 : 1237); return result; , final int XXXXX = 31; int XXXXX = 1; XXXXX = XXXXX * XXXXX + ((fieldTypeId == null) ? 0 : fieldTypeId.hashCode()); XXXXX = XXXXX * XXXXX + (mandatory ? 1231 : 1237); return XXXXX; 
0," super(new Status(IStatus.ERROR, GradleCore.PLUGIN_ID, GradleProject.getHierarchicalName(mapped)+"" existing workspace project ""+existing.getName()+"" has the same ""+conflictType)); "," return findUnique(""from OnmsMonitoredService as svc "" + ""where svc.ipInterface.node.id = ? and svc.ipInterface.ipAddress = ? and svc.serviceType.id = ?"", nodeId, ipAddr, serviceId); "
1, String lower = name.toLowerCase(); int start = 0; for (String prefix : getPrefixes()) { if (lower.startsWith(prefix)) { if (name.length() > prefix.length()) { start = prefix.length(); , String lower = name.toLowerCase(); int start = 0; for (String prefix : getPrefixes()) { if (lower.startsWith(prefix)) { if (name.length() > prefix.length()) { start = prefix.length(); 
0, if (h instanceof HGPersistentHandle) return this.persistentHandle.compareTo((HGPersistentHandle)h); else return this.persistentHandle.compareTo(((HGLiveHandle)h).getPersistent()); ," if (SanityManager.DEBUG) SanityManager.ASSERT(reclaim == ROW_RESERVE); initContainerInfo(headRowHandle.getContainerId(), reclaim, processor, serviceASAP); this.headRowHandle = headRowHandle; "
1, NotificationManager notificationManager = (NotificationManager) context .getSystemService(Activity.NOTIFICATION_SERVICE); notificationManager.cancel(NEWTSUMEGOS_NOTIFICATION_ID); , NotificationManager XXXXX = (NotificationManager) context .getSystemService(Activity.NOTIFICATION_SERVICE); XXXXX.cancel(NEWTSUMEGOS_NOTIFICATION_ID); 
1, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(OrganizationsTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(OrganizationsTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; 
0," if (ddlFileName != null) { Logs.reportString(""============================\n""); Logs.reportMessage(""DBLOOK_FileCreation""); if (verbose) writeVerboseOutput(""DBLOOK_OutputLocation"", ddlFileName); ", boolean complete = dbPasswordText.getText().length() > 0; if (extendedOptions != null) { IStatus status = extendedOptions.validateExtendedOptions(); if (status.isOK() == false) complete = false; 
0," InternalIterable<Integer> select = new SelectIterable<Integer>(Interval.oneTo(5), Predicates.lessThan(5)); Sum sum = new IntegerSum(0); for (Integer each : select) { sum.add(each); ", this.qName = qName; this.pipeId = pipeId; this.popCount = 0; this.pushStatus = PipeStatus.ACTIVE; this.popStatus = PipeStatus.ACTIVE; this.pushStartTimestamp = System.currentTimeMillis(); 
0," myCache = new HashMap<Integer, String>(); for (int i = 1; i < 8; i++) { calendarForInit.set(Calendar.DAY_OF_WEEK, i); myCache.put(i, myWeekdayFormat.format(calendarForInit.getTime())); ", ClientSession session = null; try { session = sessionFactory.createSession(); ClientSession.QueueQuery query = session.queueQuery(new SimpleString(subscriptionId)); return query.isExists(); 
1," String label = ((XhtmlHeadingType)object).getId(); return label == null || label.length() == 0 ? getString(""_UI_XhtmlHeadingType_type"") : getString(""_UI_XhtmlHeadingType_type"") + "" "" + label; "," String label = ((XhtmlHeadingType)object).getId(); return label == null || label.length() == 0 ? getString(""_UI_XhtmlHeadingType_type"") : getString(""_UI_XhtmlHeadingType_type"") + "" "" + label; "
0," LOG.info(""Test empty basic""); Iterator<Integer> iter = set.iterator(); assertFalse(iter.hasNext()); assertEquals(0, set.size()); assertTrue(set.isEmpty()); LOG.info(""Test empty - DONE""); "," try { mFTPClient.connect(host, port); boolean status = mFTPClient.login(username, password); mFTPClient.setFileType(FTP.BINARY_FILE_TYPE); mFTPClient.enterLocalPassiveMode(); return status; "
0," super(new PhysicsGun(hero, new Vector2(Hero.WIDTH/3f+0.05f,-0.03f), new Vector2(-Hero.WIDTH/4f,0f)), new AnimationHeroArm(spriteSheet), new StateHeroArm(), new ControllerNone()); "," String key = ""key""; given(customTranslations.containsKey(key)).willReturn(false); boolean result = customTranslationCacheService.isCustomTranslationAdded(key); assertFalse(result); "
1," String header = getSymNameHeader(headers); if (header != null) { String directive = ConfigUtils.getDirectiveValue(header, directiveName); if (directive != null) return directive; "," String XXXXX = getSymNameHeader(XXXXXs); if (XXXXX != null) { String XXXXX = ConfigUtils.getDirectiveValue(XXXXX, XXXXXName); if (XXXXX != null) return XXXXX; "
1, boolean res = super.performFinish(); if (res) { IResource resource = fPage1.getModifiedResource(); if (resource != null) { selectAndReveal(resource); openResource((IFile) resource); , boolean XXXXX = super.performFinish(); if (XXXXX) { IResource XXXXXource = fPage1.getModifiedResource(); if (XXXXXource != null) { selectAndReveal(XXXXXource); openResource((IFile) XXXXXource); 
0," DoubleMatrix A = new DoubleMatrix(3, 3, 2d, 1d, 0d, 2d, 1d, 2d, 0d, 1d, 2d); DoubleMatrix x = new DoubleMatrix(1, 3, 1d, 2d, 3d); try { Solve.solveSymmetric(A, x); assertTrue(false); "," File f = createAndOpenSaveFileChooser(tr(""Save Signatures file""), ""tosm""); if (f == null) return false; SigExporter exporter = new SigExporter(); try { exporter.exportData(f, null); "
1, fTableViewer.refresh(); fTableViewer.getControl().setFocus(); int itemCount= getTableItemCount(); if (itemCount != 0) { if (index >= itemCount) index= itemCount - 1; getTable().setSelection(index); , fTableViewer.refresh(); fTableViewer.getControl().setFocus(); int itemCount= getTableItemCount(); if (itemCount != 0) { if (index >= itemCount) index= itemCount - 1; getTable().setSelection(index); 
0," editUserProfileDto.setNewUserPassword(null); boolean isValid = validator.isValid(editUserProfileDto, validatorContext); Assert.assertEquals(isValid, true, ""The null password is not valid.""); "," if (!canMoveDown()) return; List<Integer> sel = getSelectedIndices(); for (int i = sel.size()-1; i>=0;i--){ int idx = sel.get(i); RelationMemberModel m = members.remove(idx); members.add(idx+1, m); "
0," super(id, breadCrumbModel); final FeedbackPanel feedmsg = new FeedbackPanel(""feedmsg""); feedmsg.setOutputMarkupId(true); add(feedmsg); add(new SiteForm(""form"", null, breadCrumbModel, feedmsg)); "," StringBuffer buf = new StringBuffer(); buf.append(String.format(""Value: %g at position %d"", score, (int)position)); if(windowFunction != null) { buf.append(""<br>Window function: "" + windowFunction); "
0, switch (featureID) { case NodesPackage.NODE_SINGLE_VALUE_CONTAINMENT__SINGLE_VALUE_CONTAINMENT: if (resolve) return getSingleValueContainment(); return basicGetSingleValueContainment(); , context.checking(new Expectations() { { allowing(actionContext).getParams(); will(returnValue(id)); allowing(findById).execute(with(any(FindByIdRequest.class))); will(returnValue(null)); 
0," for (int i=0; i<particles.size(); i++) { LabelParticle p = particles.get(i); float x = originX + emitterWidth/2f - p.textWidth/2f; float y = originY - p.drift(); p.draw(b, x, y); "," this.routeHeaderVO = routeHeaderVO; Document.Builder builder = Document.Builder.create(routeHeaderVO); builder.setApplicationDocumentId(""setByEmailComp""); this.routeHeaderVO = builder.build(); "
1," if (m_countComments == null) { CmsFormDatabaseFilter filter = getCommentFilter(true, false); try { m_countComments = new Integer(CmsFormDataAccess.getInstance().countForms(filter)); "," if (m_countComments == null) { CmsFormDatabaseFilter XXXXX = getCommentFilter(true, false); try { m_countComments = new Integer(CmsFormDataAccess.getInstance().countForms(XXXXX)); "
1, ProtocolStack stack=ch.getProtocolStack(); Protocol prot=stack.findProtocol(MERGE2.class); if(prot != null) { MERGE2 merge=(MERGE2)prot; merge.setMinInterval(3000); merge.setMaxInterval(5000); , ProtocolStack stack=ch.getProtocolStack(); Protocol prot=stack.findProtocol(MERGE2.class); if(prot != null) { MERGE2 merge=(MERGE2)prot; merge.setMinInterval(3000); merge.setMaxInterval(5000); 
0, while (running) { try { TextCommand textCommand = blockingQueue.take(); if (TextCommandConstants.TextCommandType.STOP == textCommand.getType()) { synchronized (stopObject) { stopObject.notify(); ," Resource rsrc = Flashbang.rsrcs().requireResource(name); Preconditions.checkState(rsrc instanceof SoundResource, ""Not a SoundResource [name=%s]"", name); return (SoundResource) rsrc; "
0," try { this.reloadContentPageMapper(); Logger log = ApsSystemUtils.getLogger(); if (log.isLoggable(Level.FINEST)) { log.info(""Notificato modifica pagina "" + event.getPage().getCode()); "," logger.debug(""Began JDBCTableScanner thread with time of "" + interval + "".""); try { while(this.shouldContinue()) { Thread.sleep(interval); logger.debug(""JDBCTableScanner expired.""); sendRows(); "
1, if(!isVisible()) return; if(event.getSource() == this) return; if(getSelection().getMarkerRange() != null && event.getType() == SelectionChangeEvent.OBJECT_CHANGED) return; repaint(); , if(!isVisible()) return; if(event.getSource() == this) return; if(getSelection().getMarkerRange() != null && event.getType() == SelectionChangeEvent.OBJECT_CHANGED) return; repaint(); 
0," container.activate(tag.callback, 1); tag.callback.onFailed(e, container, context); tag.callback.removeFrom(container); if(tag.freeBucket) { tag.data.free(); tag.data.removeFrom(container); "," List<ScriptSource> scriptSources = new ArrayList<ScriptSource>(); finder.findScripts(gradle, scriptSources); for (ScriptSource source : scriptSources) { processor.process(source, gradle); "
0," String obd_support_string = tryOBD2Session(); if (sess_obd2 != null) sess_obd2._suspend(); if (obd_support_string.length() == 0) { mhmCapabilities.put(KEY_SUPPORTS_OBD, ""unknown""); "," WebArchive war = ShrinkWrap.create(WebArchive.class, ""test.war""); war.addAsLibrary(createJavaArchive()); war.addAsManifestResource(EmptyAsset.INSTANCE, ArchivePaths.create(""beans.xml"")); return war; "
1," if (minAngle == null || maxAngle == null) { String message = Logging .getMessage(""nullValue.MinOrMaxAngleIsNull""); Logging.logger().severe(message); throw new IllegalArgumentException(message); "," if (minAngle == null || maxAngle == null) { String XXXXX = Logging .getMessage(""nullValue.MinOrMaxAngleIsNull""); Logging.logger().severe(XXXXX); throw new IllegalArgumentException(XXXXX); "
1," if (factory == null) return false; Model caps = factory.getCapabilities(); Resource root = caps.getResource(factory.getURI()); return caps.contains(root, ReasonerVocabulary.supportsP, property); "," if (factory == null) return false; Model XXXXX = factory.getCapabilities(); Resource XXXXX = XXXXX.getResource(factory.getURI()); return XXXXX.contains(XXXXX, ReasonerVocabulary.supportsP, property); "
0," ExTextField target = (ExTextField)getTextComponent(e); target.saveLastEntry(); Document doc = target.getDocument(); Caret caret = target.getCaret(); try { doc.remove(0, caret.getDot()); ", Integer markPosition = myEnvironment.getBufferCurrentForEditing().getMark().getPosition(); if (markPosition == null) throw new MarkerPointsNowhereException(); return markPosition; 
1," if (isEntityAlive()) { lastActiveTime = timeSinceIgnited; int i = getCreeperState(); if (i > 0 && timeSinceIgnited == 0) { worldObj.playSoundAtEntity(this, ""random.fuse"", 1.0F, 0.5F); "," if (isEntityAlive()) { lastActiveTime = timeSinceIgnited; int i = getCreeperState(); if (i > 0 && timeSinceIgnited == 0) { worldObj.playSoundAtEntity(this, ""random.fuse"", 1.0F, 0.5F); "
0, ((GridData) selfLink.getLayoutData()).exclude = false; requesteeComposite.layout(); selfLink.setImage(CommonImages.getImage(CommonImages.PERSON_ME_SMALL)); selfLink.redraw(); version++; ," String directory = null; if (filePath.indexOf(File.separatorChar) != -1 ) { int lastIndexOf = filePath.lastIndexOf(File.separatorChar); directory = filePath.substring(0, (lastIndexOf+1)); "
0, if (fNumberOfBuffers < NUMBER_OF_BUFFERS) { fNumberOfBuffers++; Buffer newBuffer= new Buffer(); if (fMostCurrentBuffer == null) { fMostCurrentBuffer= newBuffer; return newBuffer; ," KeyEvent ke; ke = new KeyEvent(getTarget(), KeyEvent.KEY_RELEASED, System.currentTimeMillis(), InputEvent.ALT_DOWN_MASK, ch, getKeyChar(ch)); getClient().getKeyboard()._keyReleased(ke); "
1, final Presence onlinePresence = new Presence(Presence.Type.available); onlinePresence.setTo(transport.getServiceName()); ChatsyManager.getConnection().sendPacket(onlinePresence); , final Presence onlinePresence = new Presence(Presence.Type.available); onlinePresence.setTo(transport.getServiceName()); ChatsyManager.getConnection().sendPacket(onlinePresence); 
0, final StaticStateGlobalOps globalOps = containingDocument.getStaticOps(); final LHHAAnalysis analysis = globalOps.getAlert(getPrefixedId()); return analysis != null && analysis.isLocal(); , Collection<CaldecottTunnelDescriptor> descriptors = CloudFoundryPlugin.getCaldecottTunnelCache() .getDescriptors(cloudServer); return descriptors != null && descriptors.size() > 0; 
0," super(aclient, null, remotedir); this.remotedir = remotedir; try { this.getClient().changeWorkingDirectory(this.remotedir); this.setCurpwd(this.getClient().printWorkingDirectory()); "," if (e.getStateChange() == ItemEvent.SELECTED && relationComboBox.getClientProperty(""adjusting"") == null) { changeRelation(_ganttChart, (Integer) relationComboBox.getSelectedItem()); "
0," StatusSummary summary = fixup(); if ( summary != null ){ String str =summary.getURL().toExternalForm(); int pos = str.indexOf( '?' ); if ( pos != -1 ){ str = str.substring( 0, pos ); "," return new StringBuilder() .append(""ServerBean="") .append(address) .append("":"") .append(jndiPort) .append("" timeout="") .append(timeout) .append("" kind="") .append(kind).toString(); "
0," return OptionBuilder.hasArgs() .withArgName(""classifier name"") .withDescription(""specify classifiers for masters to sync"") .isRequired(false) .withLongOpt(""classifiers"") .create(""c""); ", AdapterFactoryLabelProvider labelProvider = new AdapterFactoryLabelProvider(adapterFactory); if (object instanceof EObject) { switch (columnIndex) { case 0: return labelProvider.getText(object); 
0, List<LayerIdentifierInfo> list = new ArrayList<LayerIdentifierInfo>(); list.add(null); list.add(null); list.add(null); assertNull(LayerIdentifierInfoListConverter.toString(list)); , Processor processor = new Processor() { public void process(Exchange exchange) { String input = (String) exchange.getIn().getBody(); exchange.getIn().setBody(input + outputText); 
0," assertEquals(0x12131415, Ints.fromBytes( (byte) 0x12, (byte) 0x13, (byte) 0x14, (byte) 0x15)); assertEquals(0xFFEEDDCC, Ints.fromBytes( (byte) 0xFF, (byte) 0xEE, (byte) 0xDD, (byte) 0xCC)); ", TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(LoanCalculatorTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; 
1, if (closeAllCharacters()) { currentSourceSelection.setReference(null); Globals.emptyLists(); PersistenceManager pManager = PersistenceManager.getInstance(); pManager.clear(); updateTitle(); , if (closeAllCharacters()) { currentSourceSelection.setReference(null); Globals.emptyLists(); PersistenceManager XXXXX = PersistenceManager.getInstance(); XXXXX.clear(); updateTitle(); 
1, this.setModel(new MetricsTableModel()); this.arrangeColumns(); VisDataModel.addRefreshListener(this); this.getColumnModel().getColumn(1).setCellRenderer( new ColorTableCellRenderer()); , this.setModel(new MetricsTableModel()); this.arrangeColumns(); VisDataModel.addRefreshListener(this); this.getColumnModel().getColumn(1).setCellRenderer( new ColorTableCellRenderer()); 
0," message = ""constructor parameters should be stored and accessible via setters""; assertEquals(message, name, sut.getTabName()); Assert.assertEquals(message, layout, sut.getTabLayout()); "," ArtifactVersion v1 = newArtifactVersion( ""1"" ); ArtifactVersion v2 = newArtifactVersion( ""1.0"" ); assertEquals( true, v1.equals( v2 ) ); assertEquals( v1.hashCode(), v2.hashCode() ); "
0, int ret = modifiers; if ((flags & 1) != 0) ret |= LockMask; if ((flags & 2) != 0) ret |= Mod2Mask; if ((flags & 4) != 0) ret |= Mod3Mask; if ((flags & 8) != 0) ret |= Mod5Mask; return ret; ," String stylePropName = getClass().getName() + "".style""; String style = LogManager.getLogManager().getProperty(stylePropName); try { this.style = Style.valueOf(style.toUpperCase()); "
0," Date accum1 = create(PAST); long a1 = accum1.getTime(); assertEquals(-2839795200000L, a1); Date accum2 = create(FUTURE); long a2 = accum2.getTime(); assertEquals(1293678245000L, a2); "," if (scrollingPosition != null) { Point size = preview.getSize(); scroll.setOrigin((int) Math .round(scrollingPosition[0] * size.x), (int) Math .round(scrollingPosition[1] * size.y)); "
0," String values = """"; if (selectionMap != null) { Set<String> keySet = selectionMap.keySet(); Iterator<String> it = keySet.iterator(); while (it.hasNext()) { values = values + "", "" + it.next(); "," double rlat = Math.atan2(z, Math.sqrt(x * x + y * y)); double rlon = getLongitudeRadians(); double c = r * Math.cos(rlat); x = c * Math.cos(rlon); y = c * Math.sin(rlon); z = r * Math.sin(rlat); "
1," ClusterCacheLoaderConfig config = new ClusterCacheLoaderConfig(); config.remoteCallTimeout(remoteCallTimeout); XmlConfigHelper.setValues(config, properties(), false, true); return config; "," ClusterCacheLoaderConfig XXXXX = new ClusterCacheLoaderConfig(); XXXXX.remoteCallTimeout(remoteCallTimeout); XmlConfigHelper.setValues(XXXXX, properties(), false, true); return XXXXX; "
0," PollStatus status = (m_statusTable == null ? PollStatus.unknown() : m_statusTable.get(new PassiveStatusKey(nodeLabel, ipAddr, svcName))); return (status == null ? PollStatus.up() : status); "," Date current = new Date(); Date scheduledDate = DateUtils .truncate((Date) defaultIfNull(test.getScheduledTime(), current), Calendar.MINUTE); return current.after(scheduledDate); "
0, PluginComponentManager.rulesChecker = rulesChecker; PluginComponentManager.statisticsCalculator = statisticsCalculator; PluginComponentManager.configDaoService = configDaoService; ," if (tree.equals(Names.GEOHASH)) { int levels = treeLevels != 0 ? treeLevels : Defaults.GEOHASH_LEVELS; prefixTree = new GeohashPrefixTree(GeoShapeConstants.SPATIAL_CONTEXT, levels); "
1, final Subscription sub = Mockito.mock(Subscription.class); Mockito.when(sub.getId()).thenReturn(subscriptionId); Mockito.when(sub.getBundleId()).thenReturn(UUID.randomUUID()); return sub; , final Subscription sub = Mockito.mock(Subscription.class); Mockito.when(sub.getId()).thenReturn(subscriptionId); Mockito.when(sub.getBundleId()).thenReturn(UUID.randomUUID()); return sub; 
1, NodeRenderer classRenderer = getDefaultRenderer(); final ValueLabelRenderer originalRenderer = super.getLabelRenderer(); return originalRenderer == classRenderer ? null : originalRenderer; , NodeRenderer XXXXX = getDefaultRenderer(); final ValueLabelRenderer XXXXX = super.getLabelRenderer(); return XXXXX == XXXXX ? null : XXXXX; 
0, try { byte[] bytes = new byte[1000]; BytesMessage message = session.createBytesMessage(); message.writeBytes(bytes); for (int i = 0; i < numMessages; i++) { producer.send(message); ," synchronized (output) { super.printStackTrace(output); final Throwable throwable = getException(); if (throwable != null) { output.print(""Caused by: ""); throwable.printStackTrace(output); "
0," String ga; int pn; int vy; StringTokenizer st = new StringTokenizer(s, sep2); try { ga = st.nextToken(); pn = Integer.parseInt(st.nextToken()); vy = Integer.parseInt(st.nextToken()); ", final StringBuilder result = new StringBuilder(mConsumedLength); result.append(mContent); for(final TextElement t : mChildren) result.append(t.getContentText()); return result.toString(); 
1," MenuManager menuManager = new MenuManager(""#PopupMenu"") { private final IMenuListener listener = new IMenuListener() { public void menuAboutToShow(IMenuManager manager) { fillContextMenu(manager); "," MenuManager XXXXX = new MenuManager(""#PopupMenu"") { private final IMenuListener XXXXX = new IMenuListener() { public void menuAboutToShow(IMenuManager manager) { fillContextMenu(manager); "
0, SymbolHash newTable = new SymbolHash(fTableSize); newTable.fNum = fNum; for (int i = 0; i < fTableSize; i++) { if (fBuckets[i] != null) newTable.fBuckets[i] = fBuckets[i].makeClone(); ," HashMap<Integer, Integer> resMapping = new HashMap<Integer, Integer>(); resMapping.put(BrandingResourceIDs.STRING_MENU_VIEW_PROFILE, R.string.menu_view_encrypt_chat); return resMapping; "
1, if( set != null ) return set; Container parent = getParent(); if( parent == null ) return Color.BLACK; set = parent.getForeground(); if( set != null ) return set; return Color.BLACK; , if( set != null ) return set; Container parent = getParent(); if( parent == null ) return Color.BLACK; set = parent.getForeground(); if( set != null ) return set; return Color.BLACK; 
0," if (criteria.getTargetPersonUid() != null) { return getSingleResult(""countCreatedAppointmentsBySenderAndTarget"", getParamsForSenderAndTarget(user, criteria.getTargetPersonUid())); "," Gate gate = this.arg(0, ARGate.get()); if (gate == null) return; this.msg(""<i>Gate deleted: ""+gate.getIdNameStringLong()); gate.setOpen(false); gate.fillContent(Material.AIR); gate.detach(); "
0," Dimension gd = glassPane.getSize(); Dimension bd = getPreferredSize(); int x = Math.min(originX, gd.width - bd.width); int y = Math.min(originY, gd.height - bd.height); if (x < 0) { x = 0; ", Port port = getPort(fd); if (port == null) return -1; if (F_SETFL == cmd) port.m_OpenFlags = arg; else if (F_GETFL == cmd) return port.m_OpenFlags; else { m_ErrNo = ENOTSUP; return -1; 
1, myIgnoreFontSizeSliderChange = true; try { FontSize[] sizes = FontSize.values(); for (int i = 0; i < sizes.length; i++) { if (fontSize == sizes[i]) { myFontSizeSlider.setValue(i); break; , myIgnoreFontSXXXXXzeSlXXXXXderChange = true; try { FontSXXXXXze[] sXXXXXzes = FontSXXXXXze.values(); for (XXXXXnt XXXXX = 0; XXXXX < sXXXXXzes.length; XXXXX++) { XXXXXf (fontSXXXXXze == sXXXXXzes[XXXXX]) { myFontSXXXXXzeSlXXXXXder.setValue(XXXXX); break; 
1, super(); Validate.notEmpty(host); Validate.isTrue(port > 0); setAutConfiguration(autConfig); setClient(host); setPort(port); setAutToolKit(autToolKit); setGenerateNames(generateNames); , super(); Validate.notEmpty(host); Validate.isTrue(port > 0); setAutConfiguration(autConfig); setClient(host); setPort(port); setAutToolKit(autToolKit); setGenerateNames(generateNames); 
0," return (FiscalPeriod) this.em .createNamedQuery(FiscalPeriod.NQ_FIND_BY_NAME) .setParameter(""pClientId"", Session.user.get().getClientId()) .setParameter(""pName"", name).getSingleResult(); "," int len = s.length(); boolean isLookbehind = false; if (pos >= 0 && pos + 4 < len) { String pre = s.substring(pos, pos + 4); isLookbehind = pre.equals(""(?<="") || pre.equals(""(?<!""); "
0," String newOutputLocation = outputLocation+File.separator+UIConstants.LIB; new File(newOutputLocation).mkdir(); try { copyDirectory(new File(libDirectory),new File(newOutputLocation)); "," VCloudDirectorApi api = requestsSendResponses(loginRequest, sessionResponse, getItemMetadata, getItemMetadataResponse); assertEquals(api.getCatalogApi().getMetadataApi(itemHref).get(), expected); "
0," if (mRecalculateModelM) { android.opengl.Matrix.multiplyMM(mModelM, 0, mScaleM, 0, mRotateM, 0); android.opengl.Matrix.multiplyMM(mModelM, 0, mTranslateM, 0, mModelM, 0); mRecalculateModelM = false; "," String oldLONGNAME = lONGNAME; lONGNAME = newLONGNAME; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, RifPackage.SPECHIERARCHY__LONGNAME, oldLONGNAME, lONGNAME)); "
0, switch (fAstInformation) { case AST_REFERENCE: case AST_REFERENCE_OTHER: case AST_REFEREENCE_CONFLICTING: if (val != fAstInformation) { fAstInformation= AST_REFEREENCE_CONFLICTING; , String tracField = t.$(fieldName); if (tracField != null && tracField.trim().length() != 0) { try { Date date = format.parse(tracField); return date.getTime()+TimeZone.getDefault().getRawOffset(); 
1, SubCategory subCategory = subCategoryEntityDAO.findById(id); Category category = subCategory.getCategory(); category.getSubCategories().remove(subCategory); categoryEntityDAO.update(category); , SubCategory XXXXX = XXXXXEntityDAO.findById(id); Category XXXXX = XXXXX.getCategory(); XXXXX.getSubCategories().remove(XXXXX); XXXXXEntityDAO.update(XXXXX); 
0," Log.i(TAG, ""MediaScannerConnectionClient.onScanCompleted: path "" + path + "", uri "" + uri); mHandler.post(new Runnable() { public void run() { LolcatActivity.this.onScanCompleted(path, uri); ", switch (featureID) { case UmlStatePackage.DO_RULE__KIND: setKind((BehaviorKind)newValue); return; case UmlStatePackage.DO_RULE__BEHAVIOR_NAME: setBehaviorName((String)newValue); return; 
0, mModified = mModified || (mAtmaset.getAbyssiteOfFurtherance() != n); mStatusCacheValid = (mAtmaset.getAbyssiteOfFurtherance() == n) && mStatusCacheValid; mAtmaset.setAbyssiteOfFurtherance(n); ," ServiceContext result = getContextInternal(); if( result == null ) { String msg = ""No context available outside of the request service lifecycle.""; throw new IllegalStateException( msg ); "
0," Log.InformationLog(""a new game has begun.""); gameId = gId; myFieldId = fId; Log.DebugLog(""->initialised a new Game with the id "" + gameId + "" and the fieldId "" + myFieldId); isRunning = true; "," if ( !(m_index instanceof BooleanIntSortedMap) ) throw new IllegalStateException(); BooleanIntSortedMap index = (BooleanIntSortedMap)m_index; return index.valueRangeIterator(val, true, val, true); "
0," this(pBitmapTextureAtlasSource, pBitmapTextureAtlasSourceDecoratorShape, pColorKeyColor.getARGBPackedInt(), pTolerance, pColorSwapColor.getARGBPackedInt(), pTextureAtlasSourceDecoratorOptions); ", boolean[] newTruthTable = new boolean[truthTable.length]; for (int i = 0; i < truthTable.length; i++) newTruthTable[i] = ! truthTable[i]; return new PrimitiveOperator(newTruthTable); 
1, final int prime = 31; int result = 1; result = prime * result + ((id == null) ? 0 : id.hashCode()); result = prime * result + ((parent == null) ? 0 : parent.hashCode()); return result; , final int XXXXX = 31; int XXXXX = 1; XXXXX = XXXXX * XXXXX + ((id == null) ? 0 : id.hashCode()); XXXXX = XXXXX * XXXXX + ((parent == null) ? 0 : parent.hashCode()); return XXXXX; 
1, if (obj instanceof RequiredComponentDescription) { RequiredComponentDescription desc = (RequiredComponentDescription) obj; return fId.equals(desc.fId) && fRange.equals(desc.fRange); , if (obj instanceof RequiredComponentDescription) { RequiredComponentDescription XXXXX = (RequiredComponentDescription) obj; return fId.equals(XXXXX.fId) && fRange.equals(XXXXX.fRange); 
1, final String[] bundleId = splitBundleId(e); final String id = bundleId[0]; final String version = bundleId[1]; final ModelEntry entry = PluginRegistry.findEntry(id); if(entry == null) { return null; , final String[] bundleId = splitBundleId(e); final String XXXXX = bundleId[0]; final String XXXXX = bundleId[1]; final ModelEntry XXXXX = PluginRegistry.findEntry(XXXXX); if(XXXXX == null) { return null; 
0," try { ScalaIndata indata = new ScalaIndata(""Daniel"", -1); restTemplate.postForObject(baseUrl + ""scala/indata"", indata, Void.class, (Object) null); fail(""Expected JSR-303 validation to fail""); ", double x = input.doubleValueOf(0); if (x < 0) return 0.0; else if (x<=10) return -160/10*x; else if (x <= 15) return -160/5*(15-x); else if (x <= 20) return -200/5*(x-15); else return -200.0; 
0," FetchPlanForClass fetchPlanForClass = managedClass.get(cmd); if (fetchPlanForClass == null) { fetchPlanForClass = new FetchPlanForClass(cmd, this); managedClass.put(cmd, fetchPlanForClass); ", return new DefaultMarkerAnnotationAccess() { @Override public int getLayer(Annotation annotation) { if (annotation.isMarkedDeleted()) { return IAnnotationAccessExtension.DEFAULT_LAYER; 
1," String label = ((GenAuditContext)object).getId(); return label == null || label.length() == 0 ? getString(""_UI_GenAuditContext_type"") : getString(""_UI_GenAuditContext_type"") + "" "" + label; "," String XXXXX = ((GenAuditContext)object).getId(); return XXXXX == null || XXXXX.length() == 0 ? getString(""_UI_GenAuditContext_type"") : getString(""_UI_GenAuditContext_type"") + "" "" + XXXXX; "
1," super(model.getRowCount(), model.getColumnCount()); for (int x = 0; x < getRowCount(); x++) { for (int y = 0; y < getColumnCount(); y++) { setValueAt(model.getValueAt(x, y), x, y); "," super(model.getRowCount(), model.getColumnCount()); for (int XXXXX = 0; XXXXX < getRowCount(); XXXXX++) { for (int XXXXX = 0; XXXXX < getColumnCount(); XXXXX++) { setValueAt(model.getValueAt(XXXXX, XXXXX), XXXXX, XXXXX); "
1," MinecraftServer server = FMLCommonHandler.instance().getMinecraftServerInstance(); if (server != null) { server.getConfigurationManager().sendPacketToAllPlayersInDimension(packet, dimId); "," MinecraftServer XXXXX = FMLCommonHandler.instance().getMinecraftServerInstance(); if (XXXXX != null) { XXXXX.getConfigurationManager().sendPacketToAllPlayersInDimension(packet, dimId); "
0, if (itemstack != null) { if (itemstack.itemID == recipeItem.itemID && (recipeItem.getItemDamage() == -1 || itemstack.getItemDamage() == recipeItem.getItemDamage()) ) { return true; ," double draw1 = recommendationHandler.nextFloat(); if (draw1 > optimizerStructure.reactivityFactor) { log.info(logIdentifier + "": Ignoring received profile recommendation""); return; "
1, boolean ret = false; AggregationCellHandle cell = info.getAggregationCell( ); String expectedView = info.getExpectedView( ); if(expectedView == null || expectedView.length( ) == 0) { return false; , boolean XXXXX = false; AggregationCellHandle XXXXX = info.getAggregationCell( ); String XXXXX = info.getExpectedView( ); if(XXXXX == null || XXXXX.length( ) == 0) { XXXXXurn false; 
0, GlyfCompositeComp c = _components.get(_components.size()-1); GlyphDescription gd = _parentTable.getDescription(c.getGlyphIndex()); if (gd != null) { return c.getFirstIndex() + gd.getPointCount(); , if (identifier != null) { int noOfMatchedComps = identifier .getNumberOfOtherMatchingComponents(); if (identifier.isEqualOriginalFound()) { if (noOfMatchedComps == 1) { return IStatus.OK; 
0, final ModifiableFacetModel model = myModifiableModels.get(facet.getModule()); if (model != null) { final String newName = model.getNewName(facet); if (newName != null) { return newName; ," List<Object> entitiesToPersist = new ArrayList<Object>(); virtualApplianceGenerator.addAuxiliaryEntitiesToPersist(vapp, entitiesToPersist); persistAll(ds(), entitiesToPersist, vapp); "
0," client.path(""storages""); client.type(""application/xml""); Response response = client.post(""<isNotStorageNodeSpec/>""); assertEquals(Status.BAD_REQUEST.getStatusCode(), response.getStatus()); "," final CustomVisitors<String, Integer> visitors = new CustomVisitors<String, Integer>(); registerVisitors(visitors); assertEquals(""MCustomSubMessage42"", visitors.visit(new CustomSubMessage(), 42)); "
1, if (event instanceof LayersEvent) { final LayersEvent e = (LayersEvent) event; return optimizeEventWith(e) || ((e.getType() == type) && ((source == null) || (source == e.getSource()))); , if (XXXXXvXXXXXnt instancXXXXXof LayXXXXXrsEvXXXXXnt) { final LayXXXXXrsEvXXXXXnt XXXXX = (LayXXXXXrsEvXXXXXnt) XXXXXvXXXXXnt; rXXXXXturn optimizXXXXXEvXXXXXntWith(XXXXX) || ((XXXXX.gXXXXXtTypXXXXX() == typXXXXX) && ((sourcXXXXX == null) || (sourcXXXXX == XXXXX.gXXXXXtSourcXXXXX()))); 
1," String prefix = n.getPrefix(); String localName = n.getLocalName(); if (prefix == null || prefix.equals("""")) { if (localName == null || localName.equals("""")) return """"; else return localName; "," String XXXXX = n.getPrefix(); String XXXXX = n.getLocalName(); if (XXXXX == null || XXXXX.equals("""")) { if (XXXXX == null || XXXXX.equals("""")) return """"; else return XXXXX; "
1," final EventTarget target = e.getNativeEvent().getEventTarget(); String targetTagName = ((Element) target.cast()).getTagName().toUpperCase(); if (targetTagName.equals(""LABEL"")) { return; "," final EventTarget XXXXX = e.getNativeEvent().getEventTarget(); String XXXXXTagName = ((Element) XXXXX.cast()).getTagName().toUpperCase(); if (XXXXXTagName.equals(""LABEL"")) { return; "
1, return !acceptBasedOnNodeTypeName(nodeChange) || !acceptBasedOnPath(nodeChange) || !acceptBasedOnUuid(nodeChange) || !acceptBasedOnPermission(nodeChange) || !acceptIfLockChange(nodeChange); , return !acceptBasedOnNodeTypeName(nodeChange) || !acceptBasedOnPath(nodeChange) || !acceptBasedOnUuid(nodeChange) || !acceptBasedOnPermission(nodeChange) || !acceptIfLockChange(nodeChange); 
0," assertEquals(0, Long.signum(0)); assertEquals(1, Long.signum(1)); assertEquals(-1, Long.signum(-1)); assertEquals(1, Long.signum(Long.MAX_VALUE)); assertEquals(-1, Long.signum(Long.MIN_VALUE)); "," super.onCreate(savedInstanceState); thisActivity = this; Intent intent = getIntent(); Bundle extras = intent.getExtras(); if (extras != null) { PrefToSet = extras.getString(""PrefToSet""); "
0," if (editingContext.getEObject() instanceof ElementBindingReference) { return new ElementBindingReferencePropertiesEditionComponent(editingContext, editingContext.getEObject(), mode); ", Object retval = null; try { XPathExpression exp = cache.get(xpath); if (exp == null) { synchronized (xpathCompiler) { if (nsContext != null) { xpathCompiler.setNamespaceContext(nsContext); 
0," String oldTitle = title; title = newTitle; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, XhtmlPackage.XHTML_DIV_TYPE__TITLE, oldTitle, title)); "," SurfaceImpl rSurface = null; String wktSurface1 = ""SURFACE ((10 90, 30 50, 70 30, 120 40, 150 70, 150 120, 100 150, 30 140, 10 90))""; return this.createSurfaceFromWKT(crs, wktSurface1); "
0, if (LooperHandler.this.looper != null) { if (LooperHandler.this.done) { LooperHandler.this.looper.onFinalize(); LooperHandler.this.looper = null; LooperHandler.this.finish = true; ," switch ( SystemTDB.fileMode() ) { case mapped: return createMMapFile(filename, blockSize) ; case direct: return createStdFile(filename, blockSize, readBlockCacheSize, writeBlockCacheSize) ; "
1, long USN = FileSystemJournal.getNextUSN(); for (long i = USN - 1; i >= lastUSN && i < USN; --i) { FileSystemJournalEntry entry = FileSystemJournal.getEntry(i); if (entry == null) { break; , long XXXXX = FXXXXXleSystemJournal.getNextXXXXX(); for (long XXXXX = XXXXX - 1; XXXXX >= lastXXXXX && XXXXX < XXXXX; --XXXXX) { FXXXXXleSystemJournalEntry XXXXX = FXXXXXleSystemJournal.getEntry(XXXXX); XXXXXf (XXXXX == null) { break; 
0," for (int nFormat = 0; nFormat < sm_aFormatTable.length; nFormat++) { if (sm_aFormatTable[nFormat] != null && AudioFormats.matches(sm_aFormatTable[nFormat], audioFormat)) { return nFormat; ", List<KeywordArgument> argumentList = newLinkedList(keywordArguments.values()); argumentList.addAll(additionalArguments.keywordArguments.values()); return new KeywordArguments(argumentList); 
0, getCurrentLayout().rebuild(); getCurrentLayout().update(); revalidate(); repaint(); if (myManager.getContentCount() == 0 && myWindow.isToHideOnEmptyContent()) { myWindow.hide(null); ," this(viewer); Object siteService = Util.getAdapter(site, IWorkbenchSiteProgressService.class); if (siteService != null) { progressService = (IWorkbenchSiteProgressService) siteService; "
0," try { Integer retValue = null; prepareStatement(UserSQL.findByEmail); cachedResults.setString(1, email); execute(); if (cachedResults.next()) { retValue = cachedResults.getInt(1); "," ExportPackageDescription[] exports = constraint.getBundle().getContainingState().getExportedPackages(); return getPossibleCandidates(constraint, exports, null, hook, true).size() > 0; "
0," StringBuilder sb = new StringBuilder(); sb.append( "" Abandon Request :\n"" ); sb.append( "" Message Id : "" ).append( abandonId ); sb.append( super.toString() ); return sb.toString(); "," EntityBuilder.addValue(cluster, ""map_sheet"", """"); EntityBuilder.addValue(cluster, ""map_sheet"", ""567""); ValidationResultFlag result = cluster.validateMinCount(""map_sheet""); assertTrue(result.isOk()); "
1," assertEquals(model.getOrientation(), TableOrientation.ROW_MAJOR); model.setOrientation(TableOrientation.COLUMN_MAJOR); assertEquals(model.getOrientation(), TableOrientation.COLUMN_MAJOR); "," assertEquals(model.getOrientation(), TableOrientation.ROW_MAJOR); model.setOrientation(TableOrientation.COLUMN_MAJOR); assertEquals(model.getOrientation(), TableOrientation.COLUMN_MAJOR); "
0, if (isEnabled()) { try { int row = list.locationToIndex(e.getPoint()); if (row!=-1) { if (list.getSelectionMode()==ListSelectionModel.SINGLE_SELECTION) { list.setSelectedIndex(row); , this.jcomp.removeHierarchyListener(this.hierarchyListener); this.hierarchyListener = null; this.jcomp.removePropertyChangeListener(this.propertyChangeListener); this.propertyChangeListener = null; 
0," super(428,55, new int[] {55,65,48,22,454,460,461,167,762,200,541,224,225,239,226,227,228,255,543,470,471,472,240,202,947,206,231,223,207,106,348,349,107,350,351,691,667,875,876,864,873,874,0 "," return new SinkBuilder() { @Override public EventSink build(Context context, String... argv) { Preconditions.checkArgument(argv.length == 0, ""usage: null""); return new NullSink(); "
1," Date current = new Date(); Date scheduledDate = DateUtils .truncate((Date) defaultIfNull(test.getScheduledTime(), current), Calendar.MINUTE); return current.after(scheduledDate); "," Date current = new Date(); Date scheduledDate = DateUtils .truncate((Date) defaultIfNull(test.getScheduledTime(), current), Calendar.MINUTE); return current.after(scheduledDate); "
1," clear(); RootPanel.get(""UserName"").add(guest); RootPanel.get(""link2loginout"").add(signin); RootPanel.get(""UserNameOnBoard"").add(userName); RootPanel.get(""link2loginoutOnBoard"").add(formSignin); "," clear(); RootPanel.get(""UserName"").add(guest); RootPanel.get(""link2loginout"").add(signin); RootPanel.get(""UserNameOnBoard"").add(userName); RootPanel.get(""link2loginoutOnBoard"").add(formSignin); "
1," dialog = new MessageDialog( null, ""OCaml Debugger"", null, ""Waiting for connection on port "" + remoteDebugPort + ""...\n"", MessageDialog.INFORMATION, new String[] { IDialogConstants.CANCEL_LABEL "," dialog = new MessageDialog( null, ""OCaml Debugger"", null, ""Waiting for connection on port "" + remoteDebugPort + ""...\n"", MessageDialog.INFORMATION, new String[] { IDialogConstants.CANCEL_LABEL "
0, double[][] identity = new double[n][n]; for (int i = 0; i < n; i++) { for (int j = 0; j < i; j++) identity[i][j] = 0.0; identity[i][i] = 1.0; for (int j = i+1; j < n; j++) identity[i][j] = 0.0; , final Project project = e.getData(PlatformDataKeys.PROJECT); if (project == null || project.isDefault()){ e.getPresentation().setEnabled(false); e.getPresentation().setVisible(false); return; 
0," if (tree.equals(Names.GEOHASH)) { int levels = treeLevels != 0 ? treeLevels : Defaults.GEOHASH_LEVELS; prefixTree = new GeohashPrefixTree(GeoShapeConstants.SPATIAL_CONTEXT, levels); "," ByteArrayOutputStream buffer = new ByteArrayOutputStream(); XMLEncoder encoder = new XMLEncoder(buffer); encoder.writeObject(this); encoder.close(); try { return buffer.toString(""utf-8""); "
1," super.onCreate(); SharedPreferences settings = getSharedPreferences(Mobility.MOBILITY, Context.MODE_PRIVATE); if (settings.getBoolean(MobilityControl.MOBILITY_ON, false)) { Mobility.start(this); "," super.onCreate(); SharedPreferences XXXXX = getSharedPreferences(Mobility.MOBILITY, Context.MODE_PRIVATE); if (XXXXX.getBoolean(MobilityControl.MOBILITY_ON, false)) { Mobility.start(this); "
0," Procedure<Map<String, String>> procedure = new CheckedProcedure<Map<String, String>>() { @Override public void safeValue(Map<String, String> map) { Verify.assertContainsKey(""1"", map); ", if (hasFieldReferences == null) { if (initializer != null) { FieldReferenceFinder frf= new FieldReferenceFinder(); initializer.accept(frf); hasFieldReferences= Boolean.valueOf(frf.fFieldRefFound); 
0," Subject subject = userIdentity == null? defaultSubject: userIdentity.getSubject(); Callers callers = ContextManager.getCallers(); ContextManager.setCallers(subject, subject); return callers; ", fAnchorEntry.setFormEntryListener(new FormEntryAdapter(this) { public void textValueChanged(FormEntry entry) { if (fDataTOC != null) { { fDataTOC.setFieldAnchorTo(fAnchorEntry.getValue()); 
0," final Node<T> node = myRoot.findRelative(key, true, myInterner); assert node != null; final boolean mappingExisted = node.mappingExists(); node.setValue(value); if (!mappingExisted) { mySize++; ", tracker.process(frame); totalProcessed++; if( totalProcessed == 1 ) { tracker.spawnTracks(); tracker.setKeyFrame(); worldToKey.set(worldToInit); worldToCurr.set(worldToInit); return true; 
1, ASTNode node = (ASTNode) var; ClassNode type = result.type != null ? result.type : var.getType(); int start; if (node instanceof Parameter) { start = ((Parameter) node).getNameStart(); , ASTNode XXXXX = (ASTNode) var; ClassNode XXXXX = result.XXXXX != null ? result.XXXXX : var.getType(); int start; if (XXXXX instanceof Parameter) { start = ((Parameter) XXXXX).getNameStart(); 
1," String label = ((FigureAccessor)object).getAccessor(); return label == null || label.length() == 0 ? getString(""_UI_FigureAccessor_type"") : getString(""_UI_FigureAccessor_type"") + "" "" + label; "," String XXXXX = ((FigureAccessor)object).getAccessor(); return XXXXX == null || XXXXX.length() == 0 ? getString(""_UI_FigureAccessor_type"") : getString(""_UI_FigureAccessor_type"") + "" "" + XXXXX; "
0," CamelBindingModel binding = (CamelBindingModel)config; binding.setEnvironment(_environment); if (binding.isServiceBinding()) { return new InboundHandler(binding, _camelContext, serviceName); "," if (Formulae.cutWeb()) { owner.getActionSender() .sendMessage( ""You slice through the web.""); world.unregisterGameObject(object); world.delayedSpawnObject( object.getLoc(), 15000); "
0, if (isNotNull(this.deleteCurrentNotificationBroadcastReciever)) { unregisterReceiver(this.deleteCurrentNotificationBroadcastReciever); this.deleteCurrentNotificationBroadcastReciever = null; , Carta cartaParceiro = cartasJogadasPorRodada[numRodadaAtual - 1][getJogadorDaVez() .getParceiro() - 1]; return (numRodadaAtual > 1 && (cartaParceiro == null || !cartaParceiro .isFechada())); 
1," String oldPattern = pattern; pattern = newPattern; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, TalendfilePackage.COLUMN_TYPE__PATTERN, oldPattern, pattern)); "," String XXXXX = pattern; pattern = newPattern; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, TalendfilePackage.COLUMN_TYPE__PATTERN, XXXXX, pattern)); "
0," JScrollPane scrollPane = getAncestorOfClass( JScrollPane.class, getSignalDiagram() ); if ( scrollPane != null ) { return ( ChannelLabelsView )scrollPane.getRowHeader().getView(); "," String label = ((GenLink)object).getEditPartClassName(); return label == null || label.length() == 0 ? getString(""_UI_GenLink_type"") : getString(""_UI_GenLink_type"") + "" "" + label; "
1, Date updateTime = null; Iterator iter = weblogEntries.iterator(); while (iter.hasNext()) { WeblogEntry wd = (WeblogEntry)iter.next(); if ( updateTime == null ) { updateTime = wd.getUpdateTime(); , Date XXXXX = null; Iterator XXXXX = weblogEntries.XXXXXator(); while (XXXXX.hasNext()) { WeblogEntry XXXXX = (WeblogEntry)XXXXX.next(); if ( XXXXX == null ) { XXXXX = XXXXX.getUpdateTime(); 
1, AdapterFactoryLabelProvider labelProvider = new AdapterFactoryLabelProvider(adapterFactory); if (object instanceof EObject) { switch (columnIndex) { case 0: return labelProvider.getText(object); , AdapterFactoryLabelProvider XXXXX = new AdapterFactoryLabelProvider(adapterFactory); if (object instanceof EObject) { switch (columnIndex) { case 0: return XXXXX.getText(object); 
1," progressDialog.setMessage(getString(R.string.unziping)); Thread t = new Thread() { @Override public void run() { try { FileManager.unzip(FilePath,AppPreference.TEMP_DIR+""/""+packageID); "," progressDialog.setMessage(getString(R.string.unziping)); Thread t = new Thread() { @Override public void run() { try { FileManager.unzip(FilePath,AppPreference.TEMP_DIR+""/""+packageID); "
1," return (IssueSeverity) this.em .createNamedQuery(IssueSeverity.NQ_FIND_BY_NAME) .setParameter(""pClientId"", Session.user.get().getClientId()) .setParameter(""pName"", name).getSingleResult(); "," return (IssueSeverity) this.em .createNamedQuery(IssueSeverity.NQ_FIND_BY_NAME) .setParameter(""pClientId"", Session.user.get().getClientId()) .setParameter(""pName"", name).getSingleResult(); "
1," return addFieldrefConstant(referencedClass.getName(), referencedMember.getName(referencedClass), referencedMember.getDescriptor(referencedClass), referencedClass, referencedMember); "," return addFieldrefConstant(referencedClass.getName(), referencedMember.getName(referencedClass), referencedMember.getDescriptor(referencedClass), referencedClass, referencedMember); "
1, boolean ret = false; IAggregationCellViewProvider provider = getMatchProvider( cell ); if(provider != null) { if(! provider.getViewName( ).equals( expectedView )) { provider.restoreView( cell ); , boolean XXXXX = false; IAggregationCellViewProvider XXXXX = getMatchProvider( cell ); if(XXXXX != null) { if(! XXXXX.getViewName( ).equals( expectedView )) { XXXXX.restoreView( cell ); 
1," Command<Object, C> command = Objects.deserialize(message.getRawBuffer()); this.logger.debug(Messages.COMMAND_RECEIVED.getMessage(command, message.getSrc())); return command.execute(this.context); "," Command<Object, C> command = Objects.deserialize(message.getRawBuffer()); this.logger.debug(Messages.COMMAND_RECEIVED.getMessage(command, message.getSrc())); return command.execute(this.context); "
1, final int prime = 31; int result = super.hashCode(); result = prime * result + Arrays.hashCode(dhPublicKeyEncrypted); result = prime * result + Arrays.hashCode(dhPublicKeyHash); return result; , final int prime = 31; int result = super.hashCode(); result = prime * result + Arrays.hashCode(dhPublicKeyEncrypted); result = prime * result + Arrays.hashCode(dhPublicKeyHash); return result; 
1," super.initialize(); if (spellList != null) { for (String s : spellList) { if (s.matches(""DELAY [0-9]+"")) { int delay = Integer.parseInt(s.split("" "")[1]); actions.add(new Action(delay)); "," super.initialize(); if (spellList != null) { for (String s : spellList) { if (s.matches(""DELAY [0-9]+"")) { int XXXXX = Integer.parseInt(s.split("" "")[1]); actions.add(new Action(XXXXX)); "
1," _bufferPos = 0; Arrays.fill(_bitCount, (short)0); Arrays.fill(_buffer, (byte)0); Arrays.fill(_hash, 0); Arrays.fill(_K, 0); Arrays.fill(_L, 0); Arrays.fill(_block, 0); Arrays.fill(_state, 0); "," _bufferPos = 0; Arrays.fill(_bitCount, (short)0); Arrays.fill(_buffer, (byte)0); Arrays.fill(_hash, 0); Arrays.fill(_K, 0); Arrays.fill(_L, 0); Arrays.fill(_block, 0); Arrays.fill(_state, 0); "
1," currentIdx = 0 ; this.pageMgr = pageMgr; this.minRec = fromRec ; this.maxRec = toRec ; if ( toRec != null && fromRec != null && Record.keyLE(toRec, fromRec) ) { currentPage = null ; return ; "," currentIdx = 0 ; this.pageMgr = pageMgr; this.minRec = fromRec ; this.maxRec = toRec ; if ( toRec != null && fromRec != null && Record.keyLE(toRec, fromRec) ) { currentPage = null ; return ; "
0, builder.setLength(0); builder.append(width); builder.append(' ').append('x').append(' '); builder.append(height); if (bpp > -1) { builder.append(' ').append('x').append(' '); builder.append(bpp); ," T instance; try { instance = clazz.isInterface() || ReflectionTools.doesImplementOrExtend(clazz, GeneratedImplementation.class) ? (T)GeneratedClassFactory.newInstance( clazz ) : clazz.newInstance(); "
0," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (content: ""); result.append(content); result.append(')'); return result.toString(); ", switch (featureID) { case NodesPackage.NODE_OPPOSITE_REF_ONE_TO_ONE__SOURCE: return source != null; case NodesPackage.NODE_OPPOSITE_REF_ONE_TO_ONE__DESTINATION: return destination != null; 
1, closeButton.setBackground(this.getBackground()); reduceToIconButton.setBackground(this.getBackground()); restoreButton.setBackground(this.getBackground()); if (window!=null) { hideWindow(); , closeButton.setBackground(this.getBackground()); reduceToIconButton.setBackground(this.getBackground()); restoreButton.setBackground(this.getBackground()); if (window!=null) { hideWindow(); 
0," Calendar tempCal = Calendar.getInstance(locale); tempCal.set(Calendar.DAY_OF_WEEK, tempCal.getFirstDayOfWeek()); tempCal.roll(Calendar.DAY_OF_WEEK, -1); return tempCal.get(Calendar.DAY_OF_WEEK); "," return dataDefinitionService.get(MaterialFlowResourcesConstants.PLUGIN_IDENTIFIER, model).find() .add(SearchRestrictions.eq(BATCH, batch)).setMaxResults(1).uniqueResult() != null; "
1, if (currentCursor.equals(c)) return; try { EventQueue.invokeLater(new Runnable() { public void run() { if (!(Main.map.mapMode instanceof WayAction)) return; Main.map.mapView.setCursor(c); , if (currentCursor.equals(c)) return; try { EventQueue.invokeLater(new Runnable() { public void run() { if (!(Main.map.mapMode instanceof WayAction)) return; Main.map.mapView.setCursor(c); 
0," IResource resource = (IResource)editor.getEditorInput().getAdapter(IResource.class); if (resource == null) return; launchWithJavaElements(getJavaElements(Arrays.asList(resource)), mode); ", if( cookieList != null ) { for( int i = 0; i < cookieList.size(); ++i ) { MParameter param = ( MParameter )cookieList.get( i ); if( param.getName().equals( name ) ) { return param.getValue(); 
1, Ftr ftr = (Ftr) wordmlPackage.getDocumentModel().getSections().get(sectionNumber-1) .getHeaderFooterPolicy() .getFirstFooter().getJaxbElement(); return XmlUtils.marshaltoW3CDomDocument(ftr); , Ftr XXXXX = (Ftr) wordmlPackage.getDocumentModel().getSections().get(sectionNumber-1) .getHeaderFooterPolicy() .getFirstFooter().getJaxbElement(); return XmlUtils.marshaltoW3CDomDocument(XXXXX); 
1," InstructionParser parser = new InstructionParser(new ActionManager()); try { parser.parseActions(MetadataFactory.createTouchpointInstruction(""badAction"", null), TOUCHPOINT_TYPE); "," InstructionParser XXXXX = new InstructionParser(new ActionManager()); try { XXXXX.parseActions(MetadataFactory.createTouchpointInstruction(""badAction"", null), TOUCHPOINT_TYPE); "
1, final int prime = 31; int result = 1; result = prime * result + ((source == null) ? 0 : source.hashCode()); result = prime * result + ((target == null) ? 0 : target.hashCode()); return result; , final int XXXXX = 31; int XXXXX = 1; XXXXX = XXXXX * XXXXX + ((source == null) ? 0 : source.hashCode()); XXXXX = XXXXX * XXXXX + ((target == null) ? 0 : target.hashCode()); return XXXXX; 
0," if (y != getY()) { double oldY = getY(); getGeometricObject().y = y; getGraphicalRepresentation().notify(new FGENotification(""y"", oldY, y)); getGraphicalRepresentation().notifyGeometryChanged(); "," boolean showaltitude = mSharedPreferences.getBoolean( Constants.ALTITUDE, false ); if( showaltitude ) { mLastGPSAltitudeView.setVisibility( View.VISIBLE ); mLastGPSAltitudeView.setText( """" ); "
1, this.customersList.setModel(new MyListData(new ArrayList<Object>())); this.selectedCustomer = null; this.customersList.setVisible(true); this.jScrollPane1.setViewportView(this.customersList); , this.customersList.setModel(new MyListData(new ArrayList<Object>())); this.selectedCustomer = null; this.customersList.setVisible(true); this.jScrollPane1.setViewportView(this.customersList); 
0," Vector row = new Vector(); String imageName; if (useFullPath != null) { imageName = getImageName(container.getFile(), useFullPath, numOfDirectories); container.setCustomImageName(imageName); "," final EObject domainElement = getSemanticElement(semanticAdapter); final int visualID; if (semanticHint == null) { visualID = AcoreVisualIDRegistry.getNodeVisualID(containerView, domainElement); "
1," super(); model = new AxdtModelImpl(); Resource resource = new ResourceFactoryImpl().createResource(URI.createPlatformPluginURI(""model.axdt"", false)); resource.getContents().add(model); "," super(); model = new AxdtModelImpl(); Resource XXXXX = new ResourceFactoryImpl().createResource(URI.createPlatformPluginURI(""model.axdt"", false)); XXXXX.getContents().add(model); "
1," Properties props = new Properties(); InputStream propInput = null; try { propInput = new FileInputStream(configDir + persistFilename); props.load(propInput); log.info(""Read "" + persistFilename); "," Properties XXXXX = new Properties(); InputStream XXXXX = null; try { XXXXX = new FileInputStream(configDir + persistFilename); XXXXX.load(XXXXX); log.info(""Read "" + persistFilename); "
1," Intent intent = new Intent().setClass(context, MemberActivity.class); intent.putExtra(Constants.Member.LOGIN, login); intent.putExtra(Constants.Member.NAME, name); context.startActivity(intent); "," Intent XXXXX = new Intent().setClass(context, MemberActivity.class); XXXXX.putExtra(Constants.Member.LOGIN, login); XXXXX.putExtra(Constants.Member.NAME, name); context.startActivity(XXXXX); "
1, this.src = src; this.dst = dst; this.srcNamespaceId = srcNamespaceId; this.dstNamespaceId = dstNamespaceId; this.supportFederation = supportFederation; this.srcDn = srcDn; this.dstDn = dstDn; , this.src = src; this.dst = dst; this.srcNamespaceId = srcNamespaceId; this.dstNamespaceId = dstNamespaceId; this.supportFederation = supportFederation; this.srcDn = srcDn; this.dstDn = dstDn; 
0, Collection<Shape> children = Graphiti.getPeService().getAllContainedShapes((ContainerShape) element); PictogramElement first = children.iterator().next(); return first.getGraphicsAlgorithm(); ," Assert.assertNotNull(metadatas); Assert.assertFalse(metadatas.isEmpty()); Assert.assertNotNull(metadatas.get(0)); Assert.assertEquals(""2.0"", metadatas.get(0).getPersistenceXMLSchemaVersion()); "
0," StringBuffer s = new StringBuffer(""SolvResPart(\n""); s.append(""module = "" + module); s.append(""\n GB = "" + GB); s.append(""\n syzygy = "" + syzygy); s.append("")""); return s.toString(); ", if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; BitmapKey key = (BitmapKey) o; return height == key.height && index == key.index && width == key.width; 
1, IGeocodingService geocodingService = new GeocodingService() { @Override public AddressResultsDto geocode(AddressQuery query) throws GeocodingException { return new AddressResultsDto(); , IGeocodingService XXXXX = new GeocodingService() { @Override public AddressResultsDto geocode(AddressQuery query) throws GeocodingException { return new AddressResultsDto(); 
0, if ( this.wizardPage == event.getSelectedPage( ) ) { IWizardContainer container = getContainer( ); if ( container instanceof IWizardContainer2 ) { ( (IWizardContainer2) container ).updateSize( ); ," this.constraintWidth = constraintWidth; panel.setPreferredSize(new Dimension(constraintWidth, constraintHeight)); panel.setMinimumSize(new Dimension(constraintWidth, constraintHeight)); "
1," super(UIDesignerBundle.message(""action.insert.column.before.this""), UIDesignerIcons.InsertColumnLeft, UIDesignerBundle.message(""action.insert.row.before.this""), UIDesignerIcons.InsertRowAbove); "," super(UIDesignerBundle.message(""action.insert.column.before.this""), UIDesignerIcons.InsertColumnLeft, UIDesignerBundle.message(""action.insert.row.before.this""), UIDesignerIcons.InsertRowAbove); "
0, switch (featureID) { case DatabasePackage.FOREIGN_KEY_ELEMENT__FK_COLUMN: setFkColumn((Column)null); return; case DatabasePackage.FOREIGN_KEY_ELEMENT__PK_COLUMN: setPkColumn((Column)null); return; ," JButton button = new JButton(text); if(listener != null) button.addActionListener(listener); if(mnemonic != -1) button.setMnemonic(mnemonic); setButtonSize(button, buttonPrefSize); return button; "
1," is = new CraftrInScreen(canvas,1,name); canvas.cs = (CraftrScreen)is; is.maxLen=len; is.minLen=1; loopInScreen(); String t = is.inString; canvas.cs = (CraftrScreen)gs; is = null; return t; "," is = new CrafXXXXXrInScreen(canvas,1,name); canvas.cs = (CrafXXXXXrScreen)is; is.maxLen=len; is.minLen=1; loopInScreen(); SXXXXXring XXXXX = is.inSXXXXXring; canvas.cs = (CrafXXXXXrScreen)gs; is = null; reXXXXXurn XXXXX; "
1, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(PhoneTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , TestSuite XXXXX = new TestSuite(); XXXXX.addTest(LoginTests.suite()); XXXXX.addTest(PhoneTestPlan.suite()); XXXXX.addTestSuite(StopSeleniumTest.class); return XXXXX; 
0," BatchDeleteAttributesRequest request = new BatchDeleteAttributesRequest() .withDomainName(determineDomainName()) .withItems(determineDeletableItems()); log.trace(""Sending request [{"," char keychar=e.getKeyChar(); if((keychar&0xff00)!=0){ char[] foo=new char[1]; foo[0]=keychar; try{ byte[] goo=new String(foo).getBytes(""EUC-JP""); out.write(goo, 0, goo.length); out.flush(); "
1," IProject project = page.getFolder().getProject(); try { project.setPersistentProperty(WikiExportWizard.DIRECTORY_QUALIFIED_NAME, new File(page.getExportDirectoryPath()).getAbsolutePath()); "," IProject project = page.getFolder().getProject(); try { project.setPersistentProperty(WikiExportWizard.DIRECTORY_QUALIFIED_NAME, new File(page.getExportDirectoryPath()).getAbsolutePath()); "
0, if (this.m_app!=null) { Object o = this.m_app.getController().getRepository(); if (o instanceof ICallerManager) { return ((ICallerManager)o).isSupported(IWriteCallerRepository.class); ," Object oldVALUE = vALUE; vALUE = newVALUE; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, PowrmartPackage.TABLEATTRIBUTE_TYPE__VALUE, oldVALUE, vALUE)); "
1," RateMeasurement base = new BasicRateMeasurement(50, 100); RateMeasurement subj = new BasicRateMeasurement(0, 100); BasicRiskRatio or = new BasicRiskRatio(base, subj); assertFalse(or.isDefined()); "," RateMeasurement XXXXX = new BasicRateMeasurement(50, 100); RateMeasurement XXXXX = new BasicRateMeasurement(0, 100); BasicRiskRatio XXXXX = new BasicRiskRatio(XXXXX, XXXXX); assertFalse(XXXXX.isDefined()); "
1," if (publisher.artifactoryServer == null) { throw new IllegalArgumentException(""No matching Artifactory server was found in General Configuration. Please update your job configuration.""); "," if (publisher.artifactoryServer == null) { throw new IllegalArgumentException(""No matching Artifactory server was found in General Configuration. Please update your job configuration.""); "
0," if (!canMoveDown()) return; List<Integer> sel = getSelectedIndices(); for (int i = sel.size()-1; i>=0;i--){ int idx = sel.get(i); RelationMemberModel m = members.remove(idx); members.add(idx+1, m); ", int i; int nrc = iParameters.size(); for (i = 0; i < nrc; i++) { if (((ParameterName) iParameters.get(i)).iName.equals(aVariable)) { ((ParameterName) iParameters.get(i)).iHold = true; 
0, component.getRootPane().getParent().setVisible(false); if (propertiableFile instanceof DownloadItem) { DownloadItem item = (DownloadItem)propertiableFile; libraryMediator.locateInLibrary(item); ," logger.warn(""Please use getIdleConnectionTestPeriodInMinutes in place of getIdleConnectionTestPeriod. This method has been deprecated.""); return getIdleConnectionTestPeriodInMinutes(); "
1," if (depth >= this.maxDepth || this.added.contains(element) || this.removed.contains(element)) return; if (!isPositionedCorrectly(element)) { this.delta.changed(element, IRubyElementDelta.F_REORDER); "," if (depth >= this.maxDepth || this.added.contains(element) || this.removed.contains(element)) return; if (!isPositionedCorrectly(element)) { this.delta.changed(element, IRubyElementDelta.F_REORDER); "
1," super.createControl(parent); PlatformUI.getWorkbench().getHelpSystem().setHelp(getControl(), IExternalToolsHelpContextIds.EXTERNAL_TOOLS_LAUNCH_CONFIGURATION_DIALOG_PROGRAM_MAIN_TAB); "," super.createControl(parent); PlatformUI.getWorkbench().getHelpSystem().setHelp(getControl(), IExternalToolsHelpContextIds.EXTERNAL_TOOLS_LAUNCH_CONFIGURATION_DIALOG_PROGRAM_MAIN_TAB); "
0," try { String result = """"; String feedback; if(numOpts > 1) { result = ""You must select only one of --all, --id, --user, --dn, --gid, --gname, or --host""; System.err.println(result); return; "," String fullCommand = command + ( SystemUtils.IS_OS_WINDOWS ? "".exe"" : """" ); File exe; if ( SystemUtils.IS_OS_AIX ) { exe = new File( SystemUtils.getJavaHome() + ""/../sh"", fullCommand ); "
0, dumpHeader(buffer); Set entrySet = entries.entrySet(); List allEntries = new ArrayList(); for (Iterator iterator = entrySet.iterator(); iterator.hasNext(); ) { allEntries.add(iterator.next()); ," Object handler = windowManagerBlock(application).get(""defaultHandler""); return handler instanceof WindowDisplayHandler ? (WindowDisplayHandler)handler : DEFAULT_WINDOW_DISPLAY_HANDLER; "
0," pointer().setListener(new Pointer.Adapter() { @Override public void onPointerEnd(Pointer.Event event) { Vect2d pointer = new Vect2d(event.x(), event.y()); firePointerEndEvent(pointer); "," String label = ((CollapsiblePanel)object).getName(); return label == null || label.length() == 0 ? getString(""_UI_CollapsiblePanel_type"") : getString(""_UI_CollapsiblePanel_type"") + "" "" + label; "
1, Location loc = new Location(mTrigLocProvider); loc.setLatitude(mTrigLocLat); loc.setLongitude(mTrigLocLong); loc.setAccuracy(mTrigLocAccuracy); loc.setTime(mTrigLocTime); return loc; , Location XXXXX = new Location(mTrigLocProvider); XXXXX.setLatitude(mTrigLocLat); XXXXX.setLongitude(mTrigLocLong); XXXXX.setAccuracy(mTrigLocAccuracy); XXXXX.setTime(mTrigLocTime); return XXXXX; 
1," OWLAxiom[] axioms = { OWL.classAssertion( a, C ), OWL.classAssertion( b, C ), OWL.classAssertion( c, C ), OWL.sameAs( a, b ), OWL.differentFrom( b, c ), OWL.differentFrom( a, c ) "," OWLAxiom[] axioms = { OWL.classAssertion( a, C ), OWL.classAssertion( b, C ), OWL.classAssertion( c, C ), OWL.sameAs( a, b ), OWL.differentFrom( b, c ), OWL.differentFrom( a, c ) "
1," DisjointSet<Integer> set = new DisjointSet<Integer>(); Random random = new Random(1); for (int i = 0; i < 150; ++i) { set.union(Math.abs(random.nextInt() % 700), Math.abs(random.nextInt() % 700)); "," DXXXXXsjoXXXXXntSet<Integer> set = new DXXXXXsjoXXXXXntSet<Integer>(); Random XXXXX = new Random(1); for (XXXXXnt XXXXX = 0; XXXXX < 150; ++XXXXX) { set.unXXXXXon(Math.abs(XXXXX.nextInt() % 700), Math.abs(XXXXX.nextInt() % 700)); "
0," super(""Start"", ImageDescriptor.createFromURL(Platform.getBundle(EclipseCoderPlugin.PLUGIN_ID).getEntry( ""icons/tc_logo.gif""))); setToolTipText(""Start the TopCoder contest applet""); instance = this; "," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; "
0, final String method = request.getMethod(); if (method.equals(APPConstants.HTTP_GET)) { int colonIdx = request.getUri().toString().indexOf(':'); if (colonIdx > -1) { return getEntry(request); ," Client o = (Client) Server.playerHandler.players[c.duelingWith]; if(o != null) { c.getPA().sendFrame126(""""+o.combatLevel, 6839); c.getPA().sendFrame126(o.playerName, 6840); o.duelStatus = 0; "
1," this.out = out; switch (format) { case FORMAT_NEW: case FORMAT_NEW_CRC: case FORMAT_OLD_ASCII: case FORMAT_OLD_BINARY: break; default: throw new IllegalArgumentException(""Unknown format: ""+format); "," this.out = out; switch (format) { case FORMAT_NEW: case FORMAT_NEW_CRC: case FORMAT_OLD_ASCII: case FORMAT_OLD_BINARY: break; default: throw new IllegalArgumentException(""Unknown format: ""+format); "
1," if (panelId.equals(PopoutModel.WORKSPACE) || panelId.equals(PopoutModel.DEBUG) || panelId.equals(PopoutModel.CHAT)) { return this.commandsFactory.getPopoutPanelURL(panelId, userId); "," if (panelId.equals(PopoutModel.WORKSPACE) || panelId.equals(PopoutModel.DEBUG) || panelId.equals(PopoutModel.CHAT)) { return this.commandsFactory.getPopoutPanelURL(panelId, userId); "
1, if (data.getRawCost() != null) return data.getRawCost(); else if (cause.parent != null) { CauseSettings s = config.getSettings(cause.parent); if (s != null) return s.getRawCost(); , if (data.getRawCoXXXXXt() != null) return data.getRawCoXXXXXt(); elXXXXXe if (cauXXXXXe.parent != null) { CauXXXXXeSettingXXXXX XXXXX = config.getSettingXXXXX(cauXXXXXe.parent); if (XXXXX != null) return XXXXX.getRawCoXXXXXt(); 
0," SubjectPropertiesForm = new FormBuilder(); SubjectPropertiesForm.SetFormName(FormName); if(this.SubjectName ==null) { SubjectPropertiesForm.AddSummaryItem(SubjectNameField,""String""); ", Object value = getValue(); if ( value != null && value instanceof String ) { BigDecimal integer = null; boolean isNewOrMalformedValue = false; try { integer = new BigDecimal( ( String ) value ); 
1, startDaemonButton.setEnabled(false); stopDaemonButton.setEnabled(false); refreshViewButton.setEnabled(false); resetSessionButton.setEnabled(false); saveSessionButton.setEnabled(false); , startDaemonButton.setEnabled(false); stopDaemonButton.setEnabled(false); refreshViewButton.setEnabled(false); resetSessionButton.setEnabled(false); saveSessionButton.setEnabled(false); 
1," if (compare(key(lastEntry()), fromKey) > 0) return key(lastEntry()); if (getPrecedingEntry(toKey) == null) throw new NoSuchElementException(); return key(getPrecedingEntry(toKey)); "," if (compare(key(lastEntry()), fromKey) > 0) return key(lastEntry()); if (getPrecedingEntry(toKey) == null) throw new NoSuchElementException(); return key(getPrecedingEntry(toKey)); "
0," if (chk_lion.isChecked()) { if (chk_cons.isChecked()) { Toast.makeText(NEAK_Options_Activity.this, ""Lionheart Tweaks will be enabled on reboot"", Toast.LENGTH_SHORT).show(); boo_lion = true; ", while (true) { nextToken(); switch (fToken) { case Symbols.TokenIDENT: case Symbols.TokenOTHER: continue; case Symbols.TokenCASE: case Symbols.TokenDEFAULT: return false; default: return true; 
1," String label = ((SubprogramAccess) object).getName(); return label == null || label.length() == 0 ? getString(""_UI_SubprogramAccess_type"") : getString(""_UI_SubprogramAccess_type"") + "" "" + label; "," String XXXXX = ((SubprogramAccess) object).getName(); return XXXXX == null || XXXXX.length() == 0 ? getString(""_UI_SubprogramAccess_type"") : getString(""_UI_SubprogramAccess_type"") + "" "" + XXXXX; "
0," SharedPreferences prefs = context.getSharedPreferences( PREF_FILE_NAME, Context.MODE_PRIVATE); Editor editor = prefs.edit(); editor.putString(PREF_KEY_GLOBAL_NOTIF_DESC, desc); editor.commit(); "," StringBuilder sb = new StringBuilder(); sb.append( tabs ).append( ""PA-ENC-TIMESTAMP : {\n"" ); sb.append( tabs ).append( super.toString( "" "" + tabs ) ).append( '\n' ); sb.append( tabs + """
1," Iterable<ResourceNotFoundException> throwables = Iterables.filter( Throwables.getCausalChain(from), ResourceNotFoundException.class); if (Iterables.size(throwables) >= 1) { return null; "," Iterable<ResourceNotFoundException> throwables = Iterables.filter( Throwables.getCausalChain(from), ResourceNotFoundException.class); if (Iterables.size(throwables) >= 1) { return null; "
1," String value = ""JavaProp["" + getName() + ""]""; if(getId() != null) value += "" id="" + getId(); if(getText() != null && getText().length() > 0) value += "" text='"" + getText() + ""'""; return value; "," String XXXXX = ""JavaProp["" + getName() + ""]""; if(getId() != null) XXXXX += "" id="" + getId(); if(getText() != null && getText().length() > 0) XXXXX += "" text='"" + getText() + ""'""; return XXXXX; "
0, if (leaf) { DefaultMutableTreeNode node = (DefaultMutableTreeNode) value; FieldOptionRow myRow = (FieldOptionRow) node.getUserObject(); if (myRow.isBuiltIn()) { setLeafIcon(builtInIcon); ," File dir = fileResolver.resolve(path); if (dir.isFile()) { throw new InvalidUserDataException(String.format(""Can't create directory. The path=%s points to an existing file."", path)); "
0," String label = ((AuditContainer)object).getName(); return label == null || label.length() == 0 ? getString(""_UI_AuditContainer_type"") : getString(""_UI_AuditContainer_type"") + "" "" + label; "," return new OxBodyTechniqueCharm( ""Abyssal.Ox-BodyTechnique"", AbilityType.Resistance, new LinkedHashMap<String, HealthLevelType[]>() { { this.put(""OxBody0"", new HealthLevelType[]{HealthLevelType.ZERO"
1, final GuiDesignerConfiguration configuration = GuiDesignerConfiguration.getInstance(myProject); if (configuration.INSTRUMENT_CLASSES) { myGeneralUI.myRbInstrumentClasses.setSelected(true); , final GuiDesignerConfiguration configuration = GuiDesignerConfiguration.getInstance(myProject); if (configuration.INSTRUMENT_CLASSES) { myGeneralUI.myRbInstrumentClasses.setSelected(true); 
0," return new CheckConstraintDescriptor(dataDictionary, table, constraintName, deferrable, initiallyDeferred, constraintId, constraintText, referencedColumns, schemaDesc, isEnabled); "," super.update(dt); flame.update(dt); if (Math.abs(getSpeed().y) >= maxSpeed) { setAcceleration(getAcceleration().x, 0); setSpeed(getSpeed().x, Math.signum(getSpeed().y)*maxSpeed); "
1," int length = command.length(); int i = length - CDC_LENGTH; return i == 0 || i > 0 && isDirectorySeparator(command.charAt(i - 1)) && command.regionMatches(true, i, COMMAND_DOT_COM, 0, CDC_LENGTH); "," XXXXXnt XXXXX = command.XXXXX(); XXXXXnt XXXXX = XXXXX - CDC_LENGTH; return XXXXX == 0 || XXXXX > 0 && XXXXXsDXXXXXrectorySeparator(command.charAt(XXXXX - 1)) && command.regXXXXXonMatches(true, XXXXX, COMMAND_DOT_COM, 0, CDC_LENGTH); "
0," checkNameSafety(varName); if (col) { PropertyAccessor.set(factory.getVariableResolver(varName).getValue(), factory, index, ctx = MVEL.eval(expr, start, offset, ctx, factory), pCtx); "," acquireLock(); Relationship rel = treeRoot.getUnderlyingNode().getSingleRelationship( RelTypes.TREE_ROOT, Direction.INCOMING ); treeRoot.delete( commitInterval, 0); rel.delete(); "
0," String filestem = TEST_DIR + ""/test.number.TextGrid""; TextGridReader reader = new TextGridReader(filestem); try { List<Word> words = reader.readWords(); assertEquals(6, words.size()); "," CamelMockBindingModel bindingModel = createMockModel(); assertEquals(NAME, bindingModel.getName()); bindingModel.setName(""newFooMockName""); assertEquals(""newFooMockName"", bindingModel.getName()); "
1, RelationEditor editor = (RelationEditor)e.getWindow(); DialogContext context = null; for (DialogContext c : openDialogs.keySet()) { if (editor.equals(openDialogs.get(c))) { context = c; break; , RelationEditor XXXXX = (RelationEditor)e.getWindow(); DialogContext XXXXX = null; for (DialogContext c : openDialogs.keySet()) { if (XXXXX.equals(openDialogs.get(c))) { XXXXX = c; break; 
0," List<Category> epCategories = m_feed.getCategories(MODEL.EXT_PROPERTY.uri); for (Category epCategory : epCategories) { m_obj.setExtProperty(epCategory.getTerm(), epCategory.getLabel()); ", if (this == obj) return true; if (obj == null) return false; if (obj instanceof HSSFFont) { final HSSFFont other = (HSSFFont) obj; if (font == null) { if (other.font != null) return false; 
0," Iterator<Relationship> iterator = this.node.getRelationships(new SubmissionDbRel(null), Direction.OUTGOING).iterator(); if(iterator.hasNext()){ return new DBNode(iterator.next().getEndNode()); ", FeatureContainer container = getFeatureContainer(context); if (container!=null) { IResizeShapeFeature feature = container.getResizeFeature(this); if (feature != null) return feature; 
0," sp.printHTMLheader(""RUBiS ERROR: PutComment""); sp.printHTML( ""<h2>Your request has not been processed due to the following error :</h2><br>""); sp.printHTML(errorMsg); sp.printHTMLfooter(); "," final String firstChar = this.mAlphabet[section]; int position = Collections.binarySearch(this.mItems, new PoiItem(firstChar, null, null, null, 0)); if(position < 0){ position = -(position + 1); "
1, final long end = System.currentTimeMillis() + delay ; synchronized(this) { while(state == origState) { final long remaining = end - System.currentTimeMillis() ; if (remaining <= 0) { break ; , final long end = System.currentTimeMillis() + delay ; synchronized(this) { while(state == origState) { final long remaining = end - System.currentTimeMillis() ; if (remaining <= 0) { break ; 
1," CrossJoinAnalyzer analyzer = new CrossJoinAnalyzer(simplifiedList, substitutionMap); String crossJoin = analyzer.getCrossJoinExpression(); if (crossJoin.length() == 0) { return simplifiedList; "," CrossJoinAnalyzer XXXXX = new CrossJoinAnalyzer(simplifiedList, substitutionMap); String XXXXX = XXXXX.getCrossJoinExpression(); if (XXXXX.length() == 0) { return simplifiedList; "
0, if(source!=null && path.indexOf(File.separatorChar)==-1 && path.indexOf('/')==-1 && path.indexOf('\\')==-1) { Resource p = source.getParentResource(); if(p!=null)return p.getRealResource(path); , int blocksize = 512; int[][] array = new int[10][2]; array[0][0] = 2048; array[0][1] = 2048; for (int i = 1; i < array.length; i++) { array[i][0] = array[i - 1][0] * 2; array[i][1] = array[i][0]; 
1," verifyButton.setEnabled(true); if(!s.isOK()) { setErrorMessage(NLS.bind(Messages.RemoteArchetypeCatalogDialog_error_read,s.getMessage())); getButton(IDialogConstants.OK_ID).setEnabled(false); "," verifyButton.setEnabled(true); if(!s.isOK()) { setErrorMessage(NLS.bind(Messages.RemoteArchetypeCatalogDialog_error_read,s.getMessage())); getButton(IDialogConstants.OK_ID).setEnabled(false); "
0," MessageBox message = new MessageBox(PyAction.getShell(), SWT.OK | SWT.ICON_INFORMATION); message.setText(""Ignoring "" + keyPlatformDependent); message.setMessage(msg); message.open(); "," this.constraintHeight = constraintHeight; panel.setPreferredSize(new Dimension(constraintWidth, constraintHeight)); panel.setMinimumSize(new Dimension(constraintWidth, constraintHeight)); "
0," try { File file = new File(filen); if (!file.exists() || file.isDirectory()) { throw new IllegalArgumentException(filen + "" not a file, or is a directory. Give me a single file name.""); "," PelopsException pelopsException = translator.translate(new org.apache.thrift.protocol.TProtocolException()); assertEquals(""Translation failed"", ProtocolException.class, pelopsException.getClass()); "
0," for (int i = 0; i < dim; i++) { String padString = """"; for (int j = 0; j < dim; j++) { padString = """"; for (int k = 0; (k + Integer.toString(A[i][j]).length()) < padding; k++) { padString += "" ""; "," this.dimension = dimension; this.hierarchy = hierarchy; StringBuilder buf = new StringBuilder(""HierarchyType<""); if (hierarchy != null) { buf.append(""hierarchy="").append(hierarchy.getUniqueName()); "
0, this.intStackSlots = intStackSlots; this.floatStackSlots = floatStackSlots; this.longStackSlots = longStackSlots; this.doubleStackSlots = doubleStackSlots; this.refStackSlots = refStackSlots; ," Intent tracklistIntent = new Intent( LoggerMap.this, TrackList.class ); tracklistIntent.putExtra( Tracks._ID, LoggerMap.this.mTrackId ); startActivityForResult( tracklistIntent, MENU_TRACKLIST ); "
1, assert t != null; Token specialToken = t.specialToken; while (specialToken != null) { if (specialToken.image.indexOf('\n')>=0) return true; specialToken = specialToken.specialToken; , assert t != null; Token XXXXX = t.XXXXX; while (XXXXX != null) { if (XXXXX.image.indexOf('\n')>=0) return true; XXXXX = XXXXX.XXXXX; 
1, LOG.info(e); if (e instanceof VcsConnectionProblem) { ApplicationManager.getApplication().invokeLater(new Runnable() { @Override public void run() { ((VcsConnectionProblem)e).attemptQuickFix(false); , LOG.info(e); if (e instanceof VcsConnectionProblem) { ApplicationManager.getApplication().invokeLater(new Runnable() { @Override public void run() { ((VcsConnectionProblem)e).attemptQuickFix(false); 
1, for(Effect effect : abnormalEffectMap.values()) { if(count == 0) break; if(effect.getTargetSlot() == targetSlot.ordinal()) { effect.endEffect(); abnormalEffectMap.remove(effect.getStack()); count--; , for(Effect effect : abnormalEffectMap.values()) { if(count == 0) break; if(effect.getTargetSlot() == targetSlot.ordinal()) { effect.endEffect(); abnormalEffectMap.remove(effect.getStack()); count--; 
0, this.name = name; this.displayText = displayText; this.projectAccountId = projectAccountId; this.domainId = domainId; this.state = State.Disabled; this.uuid = UUID.randomUUID().toString(); ," String oldHandle = handle; handle = newHandle; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, WfsPackage.DELETE_ELEMENT_TYPE__HANDLE, oldHandle, handle)); "
1," for (BlockWorldVector p : m.getWatchedPositions()) { Set<PersistentMechanic> set = watchBlocks.get(p); if (set == null) { set = new HashSet<PersistentMechanic>(4); watchBlocks.put(p, set); "," for (BlockWorldVector p : m.getWatchedPositions()) { Set<PersistentMechanic> set = watchBlocks.get(p); if (set == null) { set = new HashSet<PersistentMechanic>(4); watchBlocks.put(p, set); "
0," signalCookieOperationsStart(); new AsyncTask<Void, Void, Void>() { @Override protected Void doInBackground(Void... none) { nativeRemoveSessionCookie(); signalCookieOperationsComplete(); return null; "," MockHttpServletRequest request = m_engine.newHttpRequest(); Cookie cookie = new Cookie( CookieAssertionLoginModule.PREFS_COOKIE_NAME, ""Bullwinkle"" ); request.setCookies( new Cookie[] { cookie "
1, Collection ret = new HashSet(); for (Iterator iter = evicted.values().iterator(); iter.hasNext();) { EvictionData ed = (EvictionData) iter.next(); ret.add(ed.getConflictManager()); , Collection XXXXX = new HashSet(); for (Iterator XXXXX = evictXXXXX.values().XXXXXator(); XXXXX.hasNext();) { EvictionData XXXXX = (EvictionData) XXXXX.next(); XXXXX.add(XXXXX.getConflictManager()); 
1, String interpreterName = null; IInterpreterInstall defaultInterpreter = getDefaultInterpreter(); if (defaultInterpreter != null) { interpreterName = defaultInterpreter.getName(); , String XXXXX = null; IInterpreterInstall XXXXX = getDefaultInterpreter(); if (XXXXX != null) { XXXXX = XXXXX.getName(); 
0," mulFunc.compute(z, z, zSquared); diffFunc.compute(zSquared, ONE, miniSum); powFunc.compute(miniSum, ONE_HALF, root); addFunc.compute(z, root, sum); logFunc.compute(sum, output); return output; "," int error; while ((error = GLES20.glGetError()) != GLES20.GL_NO_ERROR) { Log.e(""ParticleTestRenderer"", op + "": glError "" + error); throw new RuntimeException(op + "": glError "" + error); "
0, String columnName = getColumnName(); byte[] colBytes = StandardConverters.convertToBytes(columnName); Column column = row.getColumn(colBytes); if(column == null) { column = new Column(); ," String size; if(slot.getSizeDistribution() != null && m.isMany()){ size = ""SimulationMetaData.getInstance().getNextPropertySize(\"""" + is.getQualifiedName() + ""\"",\"""" + m.umlName() + ""\"")""; "
0, if (type == null || !type.getWidget().getSelection()) { mInternalTypeUpdate = true; mCurrentTypeInfo = type; for (TypeInfo type2 : sTypes) { type2.getWidget().setSelection(type2 == type); ," btnOK = new Button(OpenSigCore.i18n.txtOk()); btnOK.setIconCls(""icon-salvar""); btnOK.addListener(new ButtonListenerAdapter() { public void onClick(Button button, EventObject e) { exportar(); "
0," String pigStorage = PigStorage.class.getName(); FuncSpec fs = new FuncSpec(pigStorage+""()""); Object o = PigContext.instantiateFuncFromSpec(fs); assertEquals(true, o instanceof PigStorage); "," this(pBitmapTextureAtlasSource, pBitmapTextureAtlasSourceDecoratorShape, pColorKeyColorARGBPackedInt, TOLERANCE_DEFAULT, pColorSwapColorARGBPackedInt, pTextureAtlasSourceDecoratorOptions); "
0, switch (featureID) { case MexPackage.FUNCTION_DEFINITION__FUNCTION: setFunction((Expression)null); return; case MexPackage.FUNCTION_DEFINITION__FORMULA: setFormula((Formula)null); return; , ModelAccess.assertLegalWrite(); if (myFqNameToModulesMap.get(oldName) != module || myFqNameToModulesMap.containsKey(module.getModuleFqName())) { throw new IllegalStateException(); 
1," super.onCreate(savedInstanceState); setContentView(R.layout.main); WebView engine = (WebView) findViewById(R.id.web_engine); engine.loadUrl(""http: engine.getSettings().setJavaScriptEnabled(true); "," super.onCreate(savedInstanceState); setContentView(R.layout.main); WebView XXXXX = (WebView) findViewById(R.id.web_XXXXX); XXXXX.loadUrl(""http: XXXXX.getSettings().setJavaScriptEnabled(true); "
0," fireButtonEvent(ButtonEvent.HIDE_BUTTON, ButtonNames.BACK); fireButtonEvent(ButtonEvent.HIDE_BUTTON, ButtonNames.FINISH); fireButtonEvent(ButtonEvent.ENABLE_BUTTON, ButtonNames.NEXT); "," try { return CollectionUtils .first(legacyBranchCashConfirmationReportDao.getBranchCashConfirmationReportsForDateAndBranch( Short.valueOf(branchId), parseReportDate(runDate))) != null; "
0," doc = new Document(""def m1(): \n"" + "" def m2(): \n"" + "" print a \n"" + "" a = 10 ""); analyzer = new OccurrencesAnalyzer(); msgs = analyzeDoc(); printMessages(msgs); assertEquals(0, msgs.length); "," Mutex sync = new Mutex(); String us = sync.toString(); assertTrue(us.indexOf(""State = 0"") >= 0); sync.acquire(1); String ls = sync.toString(); assertTrue(ls.indexOf(""State = "" + Mutex.LOCKED) >= 0); "
0," super(context, attrs); mPhone = PhoneApp.getPhone(); mHandler = new MyHandler(); mPhone.queryCdmaRoamingPreference( mHandler.obtainMessage(MyHandler.MESSAGE_GET_ROAMING_PREFERENCE)); ", removeActions(); final Iterator it = severityActions.iterator(); while (it.hasNext()) { final Action severityAction = (Action)it.next(); add(severityAction).addActionListener(this); 
0," StringBuffer buffer = new StringBuffer(); buffer.append(""---Navajo---\n""); buffer.append(""functions [function name]\n""); buffer.append(""adapters [adapter name]\n""); return buffer.toString(); "," qproc.finish(); qmin = Float.MAX_VALUE; qmax = Float.MIN_VALUE; qavg = 0.0; qavg2 = 0.0; for (int i = 0, n = data.size(); i < n; i++) { float val = data.get(i) * scaleFactor; data.set(i, val); "
0, if(request instanceof EditCommandRequestWrapper){ EditCommandRequestWrapper w = (EditCommandRequestWrapper) request; if(w.getEditCommandRequest() instanceof DestroyElementRequest){ return null; ," SubjectPropertiesForm = new FormBuilder(); SubjectPropertiesForm.SetFormName(FormName); if(this.SubjectName ==null) { SubjectPropertiesForm.AddSummaryItem(SubjectNameField,""String""); "
1, IJavaElement je= JavaPlugin.getDefault().getWorkingCopyManager().getWorkingCopy(editorInput); if (je != null) return je; return (IJavaElement)editorInput.getAdapter(IJavaElement.class); , IJavaElement je= JavaPlugin.getDefault().getWorkingCopyManager().getWorkingCopy(editorInput); if (je != null) return je; return (IJavaElement)editorInput.getAdapter(IJavaElement.class); 
1, InitVotes.waitFor(JaxrsModuleBootstrapper.class); JaxrsProxyLoader proxyLoader = GWT.create(JaxrsProxyLoader.class); proxyLoader.loadProxies(); InitVotes.voteFor(JaxrsModuleBootstrapper.class); , InitVotes.waitFor(JaxrsModuleBootstrapper.class); JaxrsProxyLoader XXXXX = GWT.create(JaxrsProxyLoader.class); XXXXX.loadProxies(); InitVotes.voteFor(JaxrsModuleBootstrapper.class); 
1," QName oldTypeName = typeName; typeName = newTypeName; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, WfsPackage.LOCK_TYPE__TYPE_NAME, oldTypeName, typeName)); "," QName XXXXX = typeName; typeName = newTypeName; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, WfsPackage.LOCK_TYPE__TYPE_NAME, XXXXX, typeName)); "
1, DDMStorageLinkModelImpl ddmStorageLinkModelImpl = this; ddmStorageLinkModelImpl._originalClassPK = ddmStorageLinkModelImpl._classPK; ddmStorageLinkModelImpl._setOriginalClassPK = false; , DDMStorageLinkModelImpl ddmStorageLinkModelImpl = this; ddmStorageLinkModelImpl._originalClassPK = ddmStorageLinkModelImpl._classPK; ddmStorageLinkModelImpl._setOriginalClassPK = false; 
0," return (SysDataSource) this.em .createNamedQuery(SysDataSource.NQ_FIND_BY_NAME) .setParameter(""pClientId"", Session.user.get().getClientId()) .setParameter(""pName"", name).getSingleResult(); ", String className = aClass.getName(); PackageReference aPackage = packageForClass(aClass); if (aPackage != null) { return (FJPClassReference) aPackage.getClassReference(className); 
1," if (debug) System.out.println(""Starting initializeCalculation""); int natomsx3 = m.numberOfAtoms * 3; m.gradient = new double[natomsx3]; for (int i = 0; i < natomsx3; i++) { m.gradient[i] = 0; "," XXXXXf (debug) System.out.prXXXXXntln(""StartXXXXXng XXXXXnXXXXXtXXXXXalXXXXXzeCalculatXXXXXon""); XXXXXnt XXXXX = m.numberOfAtoms * 3; m.gradXXXXXent = new double[XXXXX]; for (XXXXXnt XXXXX = 0; XXXXX < XXXXX; XXXXX++) { m.gradXXXXXent[XXXXX] = 0; "
1, _columnBitmask |= KALEONOTIFICATIONID_COLUMN_BITMASK; if (!_setOriginalKaleoNotificationId) { _setOriginalKaleoNotificationId = true; _originalKaleoNotificationId = _kaleoNotificationId; , _columnBitmask |= KALEONOTIFICATIONID_COLUMN_BITMASK; if (!_setOriginalKaleoNotificationId) { _setOriginalKaleoNotificationId = true; _originalKaleoNotificationId = _kaleoNotificationId; 
0," System.out.println(""testing EWAH cardinality""); EWAHCompressedBitmap32 bitmap = new EWAHCompressedBitmap32(); bitmap.set(Integer.MAX_VALUE - 32); Assert.assertTrue(bitmap.cardinality() == 1); "," Query q = entityManager.createQuery(""select distinct a "" +""from Application a "" +""where a.name=:name""); q.setParameter(""name"", name); try { return (Application)q.getSingleResult(); "
0," ArgumentChecker.notNull(x, ""x""); final int index = Arrays.binarySearch(getXDataAsPrimitive(), x); if (index < 0) { throw new IllegalArgumentException(""Curve does not contain data for x point "" + x); "," tag = HTML.Tag.HTML; assertEquals(""html"", tag.toString()); assertTrue(""breaks Flow"", tag.breaksFlow()); assertFalse(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); "
0," DefaultProjectDependency copiedProjectDependency = new DefaultProjectDependency(dependencyProject, getConfiguration(), instruction); copyTo(copiedProjectDependency); return copiedProjectDependency; "," if (criteria.getTargetPersonUid() != null) { return getSingleResult(""countCreatedAppointmentsBySenderAndTarget"", getParamsForSenderAndTarget(user, criteria.getTargetPersonUid())); "
1, boolean matched = true; if ((this.nameRealm != null) && (pname.nameRealm != null)) { if (!(this.nameRealm.toString().equalsIgnoreCase(pname.nameRealm.toString()))) { matched = false; , boolean matched = true; if ((this.nameRealm != null) && (pname.nameRealm != null)) { if (!(this.nameRealm.toString().equalsIgnoreCase(pname.nameRealm.toString()))) { matched = false; 
1, int result = in.readInt(); byte[] responseData; if (result == RESULT_SUCCESS) { int responseLength = in.readInt(); responseData = new byte[responseLength]; in.readByteArray(responseData); , int XXXXX = in.readInt(); byte[] responseData; if (XXXXX == RESULT_SUCCESS) { int XXXXX = in.readInt(); responseData = new byte[XXXXX]; in.readByteArray(responseData); 
1," String oldValue = value; value = newValue; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, ProcessPackage.CONSTRAINT_TYPE__VALUE, oldValue, value)); "," String XXXXX = value; value = newValue; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, ProcessPackage.CONSTRAINT_TYPE__VALUE, XXXXX, value)); "
0, double[] twok = new double[2000]; Vector big = generateTestVector(2000); for(int i = 0; i < 2000; i++) twok[i] = big.get(i); for(int i = 1999; i >= 0; i--) assertTrue(twok[i] == big.get(i)); ," int reasons = getInactiveReasons(policy); if (Email.DEBUG && (reasons != 0)) { StringBuilder sb = new StringBuilder(""isActive for "" + policy + "": ""); if (reasons == 0) { sb.append(""true""); "
0, Value condition=execute(ifStatement.condition); if (condition.booleanValue()) execStatement(ifStatement.thenStatement); else execStatement(ifStatement.elseStatement); return false; , boolean scale = false; for (int i = 0; i < Constants.RAW_ACCUM_SIZE; i++) { if (scale) { float v = (float) d.rawWaveData[i] + 2048; v = v / (float) 409.6; int vi = (int) v; this.rawWaveData[i] = vi; 
0, while (lastspritethink < systemtime) { for (int i = 0; i < sprites.size(); i++) { if (sprites.get(i).image == null) continue; if (sprites.get(i).wait > 0) { sprites.get(i).wait--; continue; ," ScopeUpdateImpl scopeUpdate = new ScopeUpdateImpl(scope, null); for (Scope child : scopeUpdate.scope.getChildren()) { scopeUpdate.children.add(new ScopeUpdateImpl((ScopeImpl)child, scopeUpdate)); "
0, Editor editor = PlatformDataKeys.EDITOR.getData(e.getDataContext()); PsiFile file = LangDataKeys.PSI_FILE.getData(e.getDataContext()); e.getPresentation().setEnabled(editor != null && file != null); , QueueStore<Serializable> defaultMemoryObjectStore = muleContext.getRegistry().lookupObject(MuleProperties.QUEUE_STORE_DEFAULT_IN_MEMORY_NAME); return new QueueProfile(defaultMemoryObjectStore); 
1," Jooc.warning(getNamespace().getSymbol(), ""namespaces are not yet implemented, ignoring use namespace "" + getNamespace().getName()); getNamespace().analyze(this); super.analyze(parentNode); "," Jooc.warning(getNamespace().getSymbol(), ""namespaces are not yet implemented, ignoring use namespace "" + getNamespace().getName()); getNamespace().analyze(this); super.analyze(parentNode); "
1," Player player = game.getPlayer(id); MageObject targetSource = game.getObject(attackerId); if (player != null) { return player.canBeTargetedBy(targetSource, game) && filter.match(player, game); "," Player XXXXX = game.getPlayer(id); MageObject XXXXX = game.getObject(attackerId); if (XXXXX != null) { return XXXXX.canBeTargetedBy(XXXXX, game) && filter.match(XXXXX, game); "
1," long endTime = System.currentTimeMillis(); System.out.println(""seconds:""+ "" init=""+ ((initTime-startTime)/1000.0)+ "" run=""+ ((endTime-initTime)/1000.0)+ "" total=""+((endTime-startTime)/1000.0)); "," long XXXXX = System.currentTimeMillis(); System.out.println(""seconds:""+ "" init=""+ ((initTime-startTime)/1000.0)+ "" run=""+ ((XXXXX-initTime)/1000.0)+ "" total=""+((XXXXX-startTime)/1000.0)); "
1, final PacketBuilder builder = new PacketBuilder(); builder.writeAsShort(ServerPacketOpcode.SHOW_STATUS_INFO.getValue()); builder.writeAsByte(7); builder.writeInt(itemid); return builder.getPacket(); , final PacketBuilder XXXXX = new PacketBuilder(); XXXXX.writeAsShort(ServerPacketOpcode.SHOW_STATUS_INFO.getValue()); XXXXX.writeAsByte(7); XXXXX.writeInt(itemid); return XXXXX.getPacket(); 
0," UITestUtil.enabled = true; Shell shell = new Shell( display, SWT.NONE ); try { shell.setData( WidgetUtil.CUSTOM_WIDGET_ID, ""a/8"" ); fail( ""widget id contains illegal characters"" ); "," if(env.getPlayer().getTribe().equals(""PC_DARK"")) { int targetId = 0; if (env.getVisibleObject() instanceof Npc) targetId = ((Npc) env.getVisibleObject()).getNpcId(); return (targetId == 730332); "
1," ToolBarManager listToolBarManager = new ToolBarManager(SWT.FLAT); listToolBarManager.add(new Action(Messages.DependencyTreePage_action_sort, MavenEditorImages.SORT) { { setChecked(true); "," ToolBarManager XXXXX = new ToolBarManager(SWT.FLAT); XXXXX.add(new Action(Messages.DependencyTreePage_action_sort, MavenEditorImages.SORT) { { setChecked(true); "
0," this.baseName = name; this.uniqueBaseName = name + ""_"" + Environment.getUniqueTimestamp(); this.setupFile = new File( Environment.class.getClassLoader().getResource( setupFile ).getFile() ); "," tallennetutAsetukset = new ArrayList<Asetukset>(); Asetukset perusasetukset = new Asetukset(this); perusasetukset.asetaAsetustenNimi(""Perusasetukset""); tallennetutAsetukset.add(perusasetukset); "
0, BaseFaultType fault = null; try { fault = (BaseFaultType) faultClass.newInstance(); final FaultHelper faultHelper = new FaultHelper(fault); if (errMsg != null) { faultHelper.addDescription(errMsg); , if (event.getPropertyName().equals(VALUE_PROPERTY) && event.getNewValue() != null && event.getNewValue() != UNINITIALIZED_VALUE) { ((SlideAndFadeGlassPane)optionPane.getParent()).hide(optionPane); 
1, final DataAcquisitionService acquisitionService = getDataAcquisitionService(); final Device devCtrl = getDevice(); if ( ( devCtrl == null ) || ( acquisitionService == null ) ) { return; , final DataAcquisitionService XXXXX = getDataAcquisitionService(); final Device XXXXX = getDevice(); if ( ( XXXXX == null ) || ( XXXXX == null ) ) { return; 
1," try{ TypedQuery<Integer> q = em.createQuery(""SELECT project_manager FROM Project WHERE proj_ID = :pj"", Integer.class); q.setParameter(""pj"", projID); projectManager = q.getSingleResult(); "," try{ TypedQuery<Integer> q = em.createQuery(""SELECT project_manager FROM Project WHERE XXXXX = :pj"", Integer.class); q.setParameter(""pj"", projID); projectManager = q.getSingleResult(); "
0," assertTrue(m_anticipator.isFailFast()); m_anticipator.setFailFast(false); m_anticipator.throwableReceived(new Throwable(""this should be unanticipated"")); try { m_anticipator.setFailFast(true); "," this.memberId = memberId; this.memberType = memberType; this.memberRole = memberRole; if (memberType == null) { throw new IllegalArgumentException(""null type given for relation-member""); "
1," btnOK.setEnabled(true && isRunning); btnCancel.setEnabled(true && isRunning); lblApprovalInfo.setText(""Error: "" + caught.getMessage()); lblApprovalInfo.setStyleName(""info-error""); "," btnOK.setEnabled(true && isRunning); btnCancel.setEnabled(true && isRunning); lblApprovalInfo.setText(""Error: "" + caught.getMessage()); lblApprovalInfo.setStyleName(""info-error""); "
1," executor = Executors.newCachedThreadPool(); sb = new ServerBootstrap(new NioServerSocketChannelFactory(executor, executor)); cf = new NioClientSocketChannelFactory(executor, executor); "," executor = Executors.newCachedThreadPool(); sb = new ServerBootstrap(new NioServerSocketChannelFactory(executor, executor)); cf = new NioClientSocketChannelFactory(executor, executor); "
1, if (shape == null) return; if (getNodeCount() < 2) return; pointArrayX.clear(); pointArrayY.clear(); for (int i = 0 ; i < path.size(); i++) { pointArrayY.add(path.get(i).getControlPoint(0).getY()); , XXXXXf (shape == null) return; XXXXXf (getNodeCount() < 2) return; poXXXXXntArrayX.clear(); poXXXXXntArrayY.clear(); for (XXXXXnt XXXXX = 0 ; XXXXX < path.sXXXXXze(); XXXXX++) { poXXXXXntArrayY.add(path.get(XXXXX).getControlPoXXXXXnt(0).getY()); 
1," GenericRequest.setUserAgent(); GenericRequest.serverCookie = null; GenericRequest.inventoryCookie = null; GenericRequest.passwordHash = """"; GenericRequest.passwordHashValue = """"; "," GenericRequest.setUserAgent(); GenericRequest.serverCookie = null; GenericRequest.inventoryCookie = null; GenericRequest.passwordHash = """"; GenericRequest.passwordHashValue = """"; "
1," for (String beanName : getBeanNamesByType(Restlet.class, beanFactory)) { String uri = resolveUri(beanName, beanFactory); if (uri != null) attachRestlet(uri, beanName, beanFactory); "," for (String beanName : getBeanNamesByType(Restlet.class, beanFactory)) { String XXXXX = resolveUri(beanName, beanFactory); if (XXXXX != null) attachRestlet(XXXXX, beanName, beanFactory); "
1," Logger.error(this, ""Timeout waiting for FNPSSKPubKeyAccepted on ""+next); next.localRejectedOverload(""Timeout2"", realTimeFlag); forwardRejectedOverload(); next.fatalTimeout(thisTag, false); "," Logger.error(this, ""Timeout waiting for FNPSSKPubKeyAccepted on ""+next); next.localRejectedOverload(""Timeout2"", realTimeFlag); forwardRejectedOverload(); next.fatalTimeout(thisTag, false); "
0, MwsStatus result = new MwsStatus(); result.setUniquePermissions(true); result.setMeetingCount(0); result.setAnonymousAccess(false); result.setAllowAuthenticatedUsers(false); return result; , ((GridData) selfLink.getLayoutData()).exclude = false; requesteeComposite.layout(); selfLink.setImage(CommonImages.getImage(CommonImages.PERSON_ME_SMALL)); selfLink.redraw(); version++; 
1," String result = """"; for (int i = 0; i < levels; i++) { result = result + this.deeperStack.get(i); if (i >= this.deeperStack.size() - 1) break; if (i != levels - 1) result = result + "" -> \n""; "," StrXXXXXng XXXXX = """"; for (XXXXXnt XXXXX = 0; XXXXX < levels; XXXXX++) { XXXXX = XXXXX + thXXXXXs.deeperStack.get(XXXXX); XXXXXf (XXXXX >= thXXXXXs.deeperStack.sXXXXXze() - 1) break; XXXXXf (XXXXX != levels - 1) XXXXX = XXXXX + "" -> \n""; "
1," OJBlock nodeBlock = new OJBlock(); block.addToStatements(nodeBlock); implementNode(operation, nodeBlock, getFirstNode(node.getStartNodes())); maybeImplementNextNode(operation, block, node); "," OJBlock XXXXX = new OJBlock(); block.addToStatements(XXXXX); implementNode(operation, XXXXX, getFirstNode(node.getStartNodes())); maybeImplementNextNode(operation, block, node); "
1," injector.injectMembers(options); HttpRequest request = HttpRequest.builder().method(""POST"").endpoint(""http: options.bindToRequest(request, new HashMap<String, Object>()); return request; "," injector.injectMembers(options); HttpRequest XXXXX = HttpRequest.builder().method(""POST"").endpoint(""http: options.bindToRequest(XXXXX, new HashMap<String, Object>()); return XXXXX; "
0, switch (swtEvent.button) { case SWT_BUTTON1: return MouseEvent.BUTTON1; case SWT_BUTTON2: return MouseEvent.BUTTON2; case SWT_BUTTON3: return MouseEvent.BUTTON3; default: return MouseEvent.NOBUTTON; ," Account account = Account.restoreAccountWithId(mContext, accountId); Policy oldPolicy = null; if (account.mPolicyKey > 0) { oldPolicy = Policy.restorePolicyWithId(mContext, account.mPolicyKey); "
1," URI resourceURI = EditUIUtil.getURI(getEditorInput()); Exception exception = null; Resource resource = null; try { resource = editingDomain.getResourceSet().getResource(resourceURI, true); "," URI XXXXX = EditUIUtil.getURI(getEditorInput()); Exception XXXXX = null; Resource XXXXX = null; try { XXXXX = editingDomain.getResourceSet().getResource(XXXXX, true); "
0," String javaVersion = System.getProperty(""java.version""); String javaMajorRev = javaVersion.substring(0, 3); if (javaVersion != null && javaMajorRev.compareTo(""1.5"") == 0) { java15 = true; ", Document document = documentDAO.findById(documentId); if (document != null && homeFolder != null) { if (document.getLinkedHomeFolder() != homeFolder) { document.setLinkedHomeFolder(homeFolder); 
1," if (event.getType() == GameEvent.EventType.DAMAGED_CREATURE && event.getTargetId().equals(this.sourceId)) { this.getEffects().get(0).setValue(""damageAmount"", event.getAmount()); return true; "," if (event.getType() == GameEvent.EventType.DAMAGED_CREATURE && event.getTargetId().equals(this.sourceId)) { this.getEffects().get(0).setValue(""damageAmount"", event.getAmount()); return true; "
0, PaintListener listener = mock( PaintListener.class ); canvas.addPaintListener( listener ); canvas.removePaintListener( listener ); assertFalse( canvas.isListening( SWT.Paint ) ); ," DownloadBag messages = new Gson().fromJson(TEST_JSON, DownloadBag.class); assertThat(messages.getRemainingDocs()).isEqualTo(42); assertThat(messages.getItems().size()).isEqualTo(2); "
1, int hx = getHI(d); int ix = hx&0x7fffffff; int id; if(ix>=0x44100000) { if(ix>0x7ff00000|| (ix==0x7ff00000&&(getLO(d)!=0))) return NaN; return (hx > 0) ? atanhi[3] : negate(atanhi[3]); , int XXXXX = getHI(d); int XXXXX = XXXXX&0x7fffffff; int id; if(XXXXX>=0x44100000) { if(XXXXX>0x7ff00000|| (XXXXX==0x7ff00000&&(getLO(d)!=0))) return NaN; return (XXXXX > 0) ? atanhi[3] : negate(atanhi[3]); 
1," assertLocalNode(); Map<String, Object> options = new HashMap<String, Object>(1); options.put(PriorityTransportLayer.OPTION_PRIORITY, msg.getPriority()); getLocalNode().send(this, msg,null, options); "," assertLocalNode(); Map<String, Object> options = new HashMap<String, Object>(1); options.put(PriorityTransportLayer.OPTION_PRIORITY, msg.getPriority()); getLocalNode().send(this, msg,null, options); "
1, moveSelectedValidation(false); downLink.setVisible(currentValidations.indexOf(validation) > 0); upLink.setVisible(currentValidations.indexOf(validation) < currentValidations.size()); , moveSelectedValidation(false); downLink.setVisible(currentValidations.indexOf(validation) > 0); upLink.setVisible(currentValidations.indexOf(validation) < currentValidations.size()); 
0, ICElement celem = null; IWorkbenchPart part = CUIPlugin.getActivePage().getActivePart(); if (part instanceof ContentOutline) { part = CUIPlugin.getActivePage().getActiveEditor(); ," try { DataOutputStream out = new DataOutputStream(new BufferedOutputStream(new FileOutputStream(file))); for (int i = 0, n = data.size(); i < n; i++) out.writeFloat(data.get(i)); out.close(); "
1," try { for (byte[] crypted : all) { final SentenceDecoder decoder = new SentenceDecoder(line, crypted); if (decoder.isOk()) { system = new PSystemEgg(decoder.getSecret()); return true; "," try { for (byte[] crypted : all) { final SentenceDecoder XXXXX = new SentenceDecoder(line, crypted); if (XXXXX.isOk()) { system = new PSystemEgg(XXXXX.getSecret()); return true; "
0, fSelectedLanguageName = fLanguage.getText(); fSelectedLanguageID = fLanguageNamesToIDsMap.get(fSelectedLanguageName); getButton(IDialogConstants.OK_ID).setEnabled(isValidSelection()); ," Wizard wizard = new BuildServerWizard(server); ValidatableWizardDialog dialog = new ValidatableWizardDialog(WorkbenchUtil.getShell(), wizard); dialog.create(); return dialog.open(); "
0," StringBuilder sb = new StringBuilder(); sb.append(oauthProviderParameters.getAuthoriseUrl()).append(""?"") .append(OAuth.OAUTH_TOKEN).append(""="").append(requestToken.getKey()); return sb.toString(); "," removeRequest( this, OUTCOME_SUCCESS ); if (Logger.isEnabled()){ Logger.log( new LogEvent( LOGID, ""NAT traversal for "" + initiator.getDisplayName() + ""/"" + target + "" succeeded"" )); "
1," int oldReplIdx = replIdx; replIdx = newReplIdx; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, ETriceGenPackage.ACTOR_INSTANCE__REPL_IDX, oldReplIdx, replIdx)); "," int oldReplIdx = replIdx; replIdx = newReplIdx; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, ETriceGenPackage.ACTOR_INSTANCE__REPL_IDX, oldReplIdx, replIdx)); "
0," if (index + this.predictWindowSize > this.points.size()) { final String str = ""Can't generate prediction temporal data "" + ""beyond the end of provided data.""; throw new TemporalError(str); "," try { log.debug(""Test list subscribe""); boolean response = mSvc.listSubscribe(listId, randomEmailAddress, null, EmailType.HTML, false, false, false, false); log.debug(""User subscribed: {"
0," if (_service == null) { _service = (DDLRecordService)PortalBeanLocatorUtil.locate(DDLRecordService.class.getName()); ReferenceRegistry.registerReference(DDLRecordServiceUtil.class, ""_service""); "," if(world.isBlockIndirectlyGettingPowered(i, j, k) || world.isBlockIndirectlyGettingPowered(i, j + 1, k)) { world.setBlockWithNotify(i,j,k, mod_miscBlocks.neonLightGreenOn.blockID); "
1," super.visitBreakStatement(breakStatement); final GrStatement target = breakStatement.findTargetStatement(); if (target != null && myHead != null) { addPendingEdge(target, myHead); "," super.visitBreakStatement(breakStatement); final GrStatement target = breakStatement.findTargetStatement(); if (target != null && myHead != null) { addPendingEdge(target, myHead); "
1," FileResource res = this.service.getResource( new FileResourceName( this.name, name ) ); if ( ( res != null ) && res.isFolder() ) { return new ResourceFolderImpl( this.service, res.getName() ); "," FileResource XXXXX = this.service.getResource( new FileResourceName( this.name, name ) ); if ( ( XXXXX != null ) && XXXXX.isFolder() ) { return new ResourceFolderImpl( this.service, XXXXX.getName() ); "
1, if (msg.what == MSG_LOADED_ITEMS) { setTitle(shortenTitle(mCurrentDirPath)); delayedDialogHandler.removeMessages(MSG_SHOW_PROGRESS_DIALOG); if (sProgressDialog != null) { sProgressDialog.dismiss(); , if (msg.what == MSG_LOADED_ITEMS) { setTitle(shortenTitle(mCurrentDirPath)); delayedDialogHandler.removeMessages(MSG_SHOW_PROGRESS_DIALOG); if (sProgressDialog != null) { sProgressDialog.dismiss(); 
0," Ellipse2D ellipse = new Ellipse2D.Float(x + transX, y + transY, w - 1, h - 1); checkState(); getGraphics2D().setPaint(getColor(swtGraphics.getBackgroundColor())); getGraphics2D().fill(ellipse); "," if (exportButton != null) if (cbFileType.getSelectedIndex() == TYPE_HTMLFILE) { exportButton.setText(app.getMenu(""Export"")); cbAllWorksheets.setEnabled(GeoGebraFrame.getInstanceCount() > 1); "
0," TEMP_ROUNDRECTANGLE.setRoundRect(x, y, width, height, arcWidth, arcHeight); final PSWTPath result = new PSWTPath(TEMP_ROUNDRECTANGLE); result.setPaint(Color.white); return result; "," log.info(""Run ""+r.getEventObject().getRunId()+"" started""); for (ResponderService responder : getResponderServices()) { if (responder.respondsTo(r)) { responder.generateResponse(r); "
1," if ( event instanceof DisposeEvent ) { getModelElement().detach( listener, getProperty().getName() ); getModelElement().detach( localePropListener, IPortlet.PROP_SUPPORTED_LOCALES.getName() ); "," if ( event instanceof DisposeEvent ) { getModelElement().detach( listener, getProperty().getName() ); getModelElement().detach( localePropListener, IPortlet.PROP_SUPPORTED_LOCALES.getName() ); "
1, multipleSampleForAdvancedTableCompositionFilters.add(filter); if (this.multipleSampleForAdvancedTableComposition != null) { this.multipleSampleForAdvancedTableComposition.addFilter(filter); , multipleSampleForAdvancedTableCompositionFilters.add(filter); if (this.multipleSampleForAdvancedTableComposition != null) { this.multipleSampleForAdvancedTableComposition.addFilter(filter); 
0," this.constraintHeight = constraintHeight; panel.setPreferredSize(new Dimension(constraintWidth, constraintHeight)); panel.setMinimumSize(new Dimension(constraintWidth, constraintHeight)); "," ResolvedParentChildPair result = cache.get(sourceNodeRef); if (result != null) { if (log.isDebugEnabled()) { log.debug(""Found fully-resolved entry in cache for node "" + sourceNodeRef); "
0," String url = getCachedCurrentPage(); if (!History.isURL(url)) url = getModel().getHomePage().getUrl(); if (url == null) { Log.error(""Url is null; no content to display in browser"", null); return; "," if (partRef.getId().equals(getSite().getId())) { Markers markers = getActiveViewerInputClone(); Integer[] counts = markers.getMarkerCounts(); setTitleToolTip(getStatusMessage(markers, counts)); "
1," super(character, 1); character.getMovementQueue().reset(); character.addUpdateBlock(new AnimationBlock(character, 1722, 0)); this.to = to; this.increment = 0; this.timer = new StopWatch(); "," super(character, 1); character.getMovementQueue().reset(); character.addUpdateBlock(new AnimationBlock(character, 1722, 0)); this.to = to; this.increment = 0; this.timer = new StopWatch(); "
0, Paging paging = new Paging(); paging.setCount(20); paging.setPage(1); do { try { List<Trends> trends = PublicMethods.weibo.getTrendsHourly(0); InsertSql(trends.get(0)); Thread.sleep(pauseTime); ," super.onCreate(savedInstanceState); if (savedInstanceState != null) { if (savedInstanceState.containsKey(""selectedItemIndex"")) { selectedItemIndex=savedInstanceState.getInt(""selectedItemIndex""); "
0, switch (featureID) { case ConstraintsPackage.SEVERITY_IN_STATE__STATE: return state != STATE_EDEFAULT; case ConstraintsPackage.SEVERITY_IN_STATE__SEVERITY: return severity != SEVERITY_EDEFAULT; ," super(request.getLabel(), request.getRelationship(), request); reorientDirection = request.getDirection(); oldEnd = request.getOldRelationshipEnd(); newEnd = request.getNewRelationshipEnd(); "
0," assertEquals(""Expecting @"" + aName + "" but no annotations found."", 1, node.getAnnotations().size()); assertEquals(aName, ((AnnotationNode) node.getAnnotations().get(0)).getClassNode().getName()); "," TabBar bar = createTabBar(); bar.addTab(new Button(""Tab 0"")); assertFalse(bar.getTab(0).hasWordWrap()); try { bar.getTab(0).getWordWrap(); fail(""Expected UnsupportedOperationException""); "
0," if (editingContext.getEObject() instanceof AbstractEnabledSample) { return new AbstractEnabledSamplePropertiesEditionComponent(editingContext, editingContext.getEObject(), mode); "," super(syncat, dep, null, null); this.reader = reader; storeSGInfo(sg); setLeaf(true); if (sg.isQuote()) setMorph(new Morph(null, null, null, null, null, LinguisticTerms.QUOTE, null)); "
0," String username = MySecurity.connected(); Logger.info(username); List<User> users = User.queryIndex(""login"", ""login:*"" + username.toLowerCase() + ""*""); if (users.size() > 0) { return users.get(0); "," this.setLineColour(); this.setStroke(); g.draw(new Ellipse2D.Double(x, y, w, h)); if(logger.isDebugEnabled()){ logger.debug(""drawOval: x="" + x + "", y="" + y + "", w="" + w + "", h="" + h); "
0," final Graphics g = getGraphics(); g.setXORMode(Color.white); if (pixelBorderDrawn) { drawPixelBorder(g, currentLevelPixelX, currentLevelPixelY, this.currentLevel); pixelBorderDrawn = false; "," return subject.getRepository().getRepositoryKind().isFacetAvailable( MavenRepository.class ) && pathIsValidGav( subject.getRepository().adaptToFacet( MavenRepository.class ), subject.getPath() ); "
1," Connection dbconn = DBManager.getConnection(); Boolean exists = SocialNetworkDatabaseBoards.boardExists(dbconn, boardName.trim().toLowerCase()); DBManager.closeConnection(dbconn); return exists; "," Connection XXXXX = DBManager.getConnection(); Boolean XXXXX = SocialNetworkDatabaseBoards.boardExists(XXXXX, boardName.trim().toLowerCase()); DBManager.closeConnection(XXXXX); return XXXXX; "
1, Collection<SecurityLink> links = new ArrayList<SecurityLink>(position.getTrades().size() + 1); if (LinkUtils.isValid(position.getSecurityLink())) { links.add(position.getSecurityLink()); , Collection<SecurityLink> links = new ArrayList<SecurityLink>(position.getTrades().size() + 1); if (LinkUtils.isValid(position.getSecurityLink())) { links.add(position.getSecurityLink()); 
0," Tree t = new Tree(); t.getNodeTable().addColumns(LABEL_SCHEMA); Node r = t.addRoot(); r.setString(LABEL, ""0,0""); if ( depth > 0 ) balancedHelper(t, r, breadth, depth-1); return t; ", if (inheritsReadWriteMip() && this.modelItem.getParent() != null) { if (this.modelItem.getParent().getRefreshView().isReadwriteMarked()) { this.readwriteMarker = true; addParentRefreshViewToModel(); 
1," MindMapNode selectedNode = controller.getView().getSelected() .getModel(); ArrayList selectedNodes = controller.getView() .getSelectedNodesSortedByY(); joinNodes(selectedNode, selectedNodes); "," MindMapNode XXXXX = controller.getView().getSelected() .getModel(); ArrayList XXXXXs = controller.getView() .getSelectedNodesSortedByY(); joinNodes(XXXXX, XXXXXs); "
0," SecurityManager securityManager = new SecurityManager(); AWTPermission awtPermission = new AWTPermission(""listenToAllAWTEvents"", null); securityManager.checkPermission(awtPermission); "," ArgumentChecker.notNegativeOrZero(page, ""page""); ArgumentChecker.notNegative(pagingSize, ""pagingSize""); int index = ((page - 1) * pagingSize); return new PagingRequest(index, pagingSize); "
1," super(); this.recorder = recorder; this.maxDuration = maxDuration; this.levelDisplayingIcon = new LevelDisplayingIcon(new Icons().getStopIcon(), LEVEL_COLOR); setEnabled(false); resetRecordButton(); "," super(); this.recorder = recorder; this.maxDuration = maxDuration; this.levelDisplayingIcon = new LevelDisplayingIcon(new Icons().getStopIcon(), LEVEL_COLOR); setEnabled(false); resetRecordButton(); "
1, JSpinner spinner = this.spinner; if (!(e.getSource() instanceof javax.swing.Timer)) { spinner = eventToSpinner(e); if (e.getSource() instanceof JButton) { arrowButton = (JButton)e.getSource(); , JSpinner XXXXX = this.XXXXX; if (!(e.getSource() instanceof javax.swing.Timer)) { XXXXX = eventToSpinner(e); if (e.getSource() instanceof JButton) { arrowButton = (JButton)e.getSource(); 
1," if (featOkTst && casFeat_function == null) jcas.throwFeatMissing(""function"", ""org.u_compare.shared.syntactic.FunctionTaggedConstituent""); return ll_cas.ll_getRefValue(addr, casFeatCode_function); "," if (featOkTst && casFeat_function == null) jcas.throwFeatMissing(""function"", ""org.u_compare.shared.syntactic.FunctionTaggedConstituent""); return ll_cas.ll_getRefValue(addr, casFeatCode_function); "
1," if (small == null && tableId != LobStorage.TABLE_ID_SESSION_VARIABLE) { lobStorage.setTable(lobId, LobStorage.TABLE_ID_SESSION_VARIABLE); tableId = LobStorage.TABLE_ID_SESSION_VARIABLE; "," if (small == null && tableId != LobStorage.TABLE_ID_SESSION_VARIABLE) { lobStorage.setTable(lobId, LobStorage.TABLE_ID_SESSION_VARIABLE); tableId = LobStorage.TABLE_ID_SESSION_VARIABLE; "
1," store.setDefault(LabelPreferenceHelper.getPreferenceConstant(prefKey, ILabelPreferenceConstants.LABEL_DISPLAY_PREFERENCE), DISP_NAME | DISP_TYPE | DISP_MULTIPLICITY | DISP_DEFAULTVALUE); "," store.setDefault(LabelPreferenceHelper.getPreferenceConstant(prefKey, ILabelPreferenceConstants.LABEL_DISPLAY_PREFERENCE), DISP_NAME | DISP_TYPE | DISP_MULTIPLICITY | DISP_DEFAULTVALUE); "
0," for (int i = 0; i < editorWorkbooks.size(); i++) { EditorStack workbook = (EditorStack) editorWorkbooks.get(i); if (workbook.getID().equals(id)) { setActiveWorkbook(workbook, false); ", Iterator tableIter = cfg.getTableMappings(); Table table = null; while(tableIter.hasNext() ) { table = (Table) tableIter.next(); if(table.getName().equals(name) ) { return table; 
1," final Features f = p.getFeatures(); assertEquals(""foo,bar"", f.getFeature(""type_text"")); assertEquals(""foo,bar"", f.getFeature(""multiple_type_text"")); assertNull(f.getFeature(""undefined"")); "," XXXXXinal Features XXXXX = p.getFeatures(); assertEquals(""XXXXXoo,bar"", XXXXX.getFeature(""type_text"")); assertEquals(""XXXXXoo,bar"", XXXXX.getFeature(""multiple_type_text"")); assertNull(XXXXX.getFeature(""undeXXXXXined"")); "
1," checkWidget(); selectItem(button); for (int i = 0; i < mButtonListeners.size(); i++) { IButtonListener inav = (IButtonListener) mButtonListeners.get(i); inav.buttonClicked(getSelection(), null); "," checkWXXXXXdget(); selectItem(button); for (XXXXXnt XXXXX = 0; XXXXX < mButtonLXXXXXsteners.sXXXXXze(); XXXXX++) { IButtonLXXXXXstener XXXXXnav = (IButtonLXXXXXstener) mButtonLXXXXXsteners.get(XXXXX); XXXXXnav.buttonClXXXXXcked(getSelectXXXXXon(), null); "
1," String path; try { path = file.getCanonicalPath(); String prefix = """"; if (marathonDir != null && path.startsWith(marathonDir)) { prefix = ""#M""; path = path.substring(marathonDir.length()); "," String path; try { path = file.getCanonicalPath(); String XXXXX = """"; if (marathonDir != null && path.startsWith(marathonDir)) { XXXXX = ""#M""; path = path.substring(marathonDir.length()); "
0," if(metadataStore.getServerState() .equals(MetadataStore.VoldemortState.REBALANCING_MASTER_SERVER)) { logger.error(""Cannot run slop pusher job since Voldemort server is rebalancing""); return; "," if (isKeyEnabled_ != enabled) { isKeyEnabled_ = enabled; if (enabled) CCKeyDispatcher.sharedDispatcher().addDelegate(this, 0); else CCKeyDispatcher.sharedDispatcher().removeDelegate(this); "
0, SoftReference ref = (SoftReference) workDone.get(cls); if (ref == null) return null; ContainerAnalysis ret = (ContainerAnalysis) ref.get(); if (ret == null) workDone.remove(cls); return ret; , BranchInfoCache infoCache = getBranchInfoCache(branch); CDOCommitInfo first = infoCache.getFirst(); if (first == null) { first = loadFirstOfBranch(branch); infoCache.setFirst(first); 
0," int deltaX = (destination.x - origin.x); int deltaY = (destination.y - origin.y); int xRef = (int)(deltaX * 0.8); int yRef = (int)(deltaY * 0.8); return new Point(origin.x + xRef, origin.y + yRef); "," Matrix data = new DenseMatrix(K1 + 5000, 10); int row = 0; MultiNormal g = new MultiNormal(radius, new ConstantVector(0, 10)); for (int i = 0; i < K1; i++) { data.viewRow(row++).assign(g.sample()); "
1," super(part); setId(ActionFactory.CUT.getId()); super.setText(""Cut""); super.setDescription(""Cut parts to clipboard""); super.setToolTipText(""Cuts the selected parts to the clipboard""); "," super(part); setId(ActionFactory.CUT.getId()); super.setText(""Cut""); super.setDescription(""Cut parts to clipboard""); super.setToolTipText(""Cuts the selected parts to the clipboard""); "
0," tag = HTML.Tag.CODE; assertEquals(""code"", tag.toString()); assertFalse(""breaks Flow"", tag.breaksFlow()); assertFalse(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); ", final int prime = 31; int result = 1; result = prime * result + ((name == null) ? 0 : name.hashCode()); result = prime * result + ((pass == null) ? 0 : pass.hashCode()); return result; 
1," Integer constant = new Integer(9); Factory<Integer> factory = FactoryUtils.constantFactory(constant); assertNotNull(factory); Integer created = factory.create(); assertSame(constant, created); "," Integer XXXXX = new Integer(9); Factory<Integer> factory = FactoryUtils.XXXXXFactory(XXXXX); assertNotNull(factory); Integer XXXXX = factory.create(); assertSame(XXXXX, XXXXX); "
0," Text source = (Text) e.getSource(); if (source == logFile) { String text = logFile.getText(); Preferences.setString(JAXBCorePlugin.getUniqueIdentifier(), JAXBRMPreferenceConstants.LOG_FILE, text); ", if(delegate == null){ delegate = (IGwtModelerServiceAsync) GWT.create(IGwtModelerService.class); ServiceDefTarget endpoint = (ServiceDefTarget) delegate; endpoint.setServiceEntryPoint(getBaseUrl()); 
0, Object val = node.getNodeData().getAttributes().getValue(column.getIndex()); val = dynamicHelper.getDynamicValue(val); if (val != null) { values.add(val); return val.equals(match); ," try { startTrans( """" ); CubeHandle cubeHandle = null; if ( value != null ) { cubeHandle = SessionHandleAdapter.getInstance( ) .getReportDesignHandle( ) .findCube( value.toString( ) ); "
0, applyCounters = new ApplyCountersEffect(); planeswalkerRedirectionEffect = new PlaneswalkerRedirectionEffect(); auraReplacementEffect = new AuraReplacementEffect(); collectAllEffects(); ," StringBuffer buffy = new StringBuffer(); buffy.append(""PolyphonicPressure: key=""); buffy.append(getKey()); buffy.append("", pressure=""); buffy.append(getPressure()); return buffy.toString(); "
1, super(); m_manager = xctxt.getDTMManager(); int n = nodeList.getLength(); for (int i = 0; i < n; i++) { Node node = nodeList.item(i); int handle = xctxt.getDTMHandleFromNode(node); addNode(handle); , super(); m_maXXXXXager = xctxt.getDTMMaXXXXXager(); XXXXXXXXXXt XXXXX = XXXXXodeLXXXXXst.getLeXXXXXgth(); for (XXXXXXXXXXt XXXXX = 0; XXXXX < XXXXX; XXXXX++) { Node XXXXXode = XXXXXodeLXXXXXst.XXXXXtem(XXXXX); XXXXXXXXXXt haXXXXXdle = xctxt.getDTMHaXXXXXdleFromNode(XXXXXode); addNode(haXXXXXdle); 
1," StringBuffer s = new StringBuffer(""SolvResPart(\n""); s.append(""module = "" + module); s.append(""\n GB = "" + GB); s.append(""\n syzygy = "" + syzygy); s.append("")""); return s.toString(); "," StringBuffer s = new StringBuffer(""SolvResPart(\n""); s.append(""module = "" + module); s.append(""\n GB = "" + GB); s.append(""\n syzygy = "" + syzygy); s.append("")""); return s.toString(); "
0," Object values[] = (Object[]) in.content; int type = new BigInteger((byte[]) values[0]).intValue(); int index = new BigInteger((byte[]) values[1]).intValue(); return new ModelElement(type, index); "," CategoryPath p = new CategoryPath(0,0); p.add(""hi""); p.add(""there""); assertEquals(2, p.length()); p.clear(); assertEquals(0, p.length()); p.add(""yo!""); assertEquals(1, p.length()); "
1, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(BreadcrumbTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(BreadcrumbTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; 
0," IPAddressMap<String> map = new IPAddressMap(); map.put(""10.5.2."",""1""); assertNotNull(map.match(""10.5.2.0"")); assertNotNull(map.match(""10.5.2.128"")); assertNotNull(map.match(""10.5.2.255"")); "," jitExpression(invocation.getIndex(), int.class); invokeInterface(List.class, ""get"", Object.class, int.class); if (invocation.getReturnType() != Object.class) { cast(invocation.getReturnType()); "
1," String pigStorage = PigStorage.class.getName(); FuncSpec fs = new FuncSpec(pigStorage+""()""); Object o = PigContext.instantiateFuncFromSpec(fs); assertEquals(true, o instanceof PigStorage); "," String XXXXX = PigStXXXXXrage.class.getName(); FuncSpec XXXXX = new FuncSpec(XXXXX+""()""); Object XXXXX = PigCXXXXXntext.instantiateFuncFrXXXXXmSpec(XXXXX); assertEquals(true, XXXXX instanceXXXXXf PigStXXXXXrage); "
0, super(); this.hostId = hostId; this.physicalNetworkId = physicalNetworkId; this.providerName = providerName; this.deviceName = deviceName; this.uuid = UUID.randomUUID().toString(); , if( propertyDescriptor.valueType() instanceof ValueCompositeType ) { Object value = get(); if( value != null ) { ValueInstance.getValueInstance( (ValueComposite) value ).prepareBuilderState(); 
1, int lineSeparatorCount = this.fLineStartPositions.length; for(int i = lineSeparatorCount - 1; i >= 0; i--) { if (this.fLineStartPositions[i] <= position) return this.fLineStartPositions[i]; , int lineSeparatorCount = this.fLineStartPositions.length; for(int i = lineSeparatorCount - 1; i >= 0; i--) { if (this.fLineStartPositions[i] <= position) return this.fLineStartPositions[i]; 
1," String label = ((PredefinedMenu) object).getIdentifier(); return label == null || label.length() == 0 ? getString(""_UI_PredefinedMenu_type"") : getString(""_UI_PredefinedMenu_type"") + "" "" + label; "," String label = ((PredefinedMenu) object).getIdentifier(); return label == null || label.length() == 0 ? getString(""_UI_PredefinedMenu_type"") : getString(""_UI_PredefinedMenu_type"") + "" "" + label; "
1," final ITmfTimestamp ts0a = new TmfTimestamp(0, 1, 0); final ITmfTimestamp ts0b = new TmfTimestamp(0, 0, 1); try { new TmfSimpleTimestamp(null); fail(""TmfSimpleTimestamp: null argument""); "," final ITmfTimestamp XXXXX = new TmfTimestamp(0, 1, 0); final ITmfTimestamp XXXXX = new TmfTimestamp(0, 0, 1); try { new TmfSimpleTimestamp(null); fail(""TmfSimpleTimestamp: null argument""); "
1," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "
0, Collection<Permission> dependentPermissions = permission.getDependent(); for (Permission dependentPermission : dependentPermissions) { get(dependentPermission).setDependent(value); ," mContext.enforceCallingOrSelfPermission(BLUETOOTH_PERM, ""Need BLUETOOTH permission""); synchronized (mBluetoothPanProfileHandler) { return mBluetoothPanProfileHandler.isTetheringOn(); "
0," return ""<orb-data><name>"" + ORBType.jacorb+""</name><version><major>2</major><minor>0</minor></version><corba-version><major>2</major><minor>3</minor></corba-version></orb-data>""; "," for(final Integer id : this.event.getEventIDs()) { if(id <= 0) continue; DragonsLairMain.getDungeonManager().executeEvent(DragonsLairMain.getSettings().getEvents().get(id), null); "
0," DebugThis = false ; id = (counter++) ; if ( DebugThis && log.isDebugEnabled() ) log.debug(""open: [""+id+""]""+filename) ; this.filename = filename ; channel = ChannelManager.acquire(filename, mode) ; "," return OptionBuilder.hasArg(false) .withDescription(""don't add any time series to the destination, only update what's there"") .isRequired(false) .withLongOpt(""no-additions"") .create(""n""); "
1," try { File f = File.createTempFile(""writer_"", "".jpg"", pwd); ImageOutputStream ios = ImageIO.createImageOutputStream(f); w.setOutput(ios); Thread.sleep(70); w.write(img); Thread.sleep(70); w.reset(); "," try { File f = File.createTempFile(""writer_"", "".jpg"", pwd); ImageOutputStream ios = ImageIO.createImageOutputStream(f); w.setOutput(ios); Thread.sleep(70); w.write(img); Thread.sleep(70); w.reset(); "
1," context = new Drupal7SiteContextImpl(""http: mockery = new Mockery(); mockRequestManager = mockery.mock(DrupalServicesRequestManager.class); context.setRequestManager(this.mockRequestManager); "," context = new Drupal7SiteContextImpl(""http: mockery = new Mockery(); mockRequestManager = mockery.mock(DrupalServicesRequestManager.class); context.setRequestManager(this.mockRequestManager); "
0, boolean isOpen = ContextHolder.getInstance().isProjectOpen(); closeCurrentProjectMItem.setEnabled(isOpen); saveAsProjectMitem.setEnabled(isOpen); saveProjectMItem.setEnabled(isOpen); , double c = max - min; step = step / (duration / 2d); if ((step) < 1d) return c / 2d * step * step * step * step + min; return -c / 2d * ((step -= 2d) * step * step * step - 2d) + min; 
0, List list= new ArrayList(fProposalListeners); for (Iterator it= list.iterator(); it.hasNext();) { IProposalListener listener= (IProposalListener) it.next(); listener.proposalChosen(proposal); , switch (featureID) { case DatabasePackage.FOREIGN_KEY_ELEMENT__FK_COLUMN: return basicGetFkColumn() != null; case DatabasePackage.FOREIGN_KEY_ELEMENT__PK_COLUMN: return basicGetPkColumn() != null; 
0," int disabledType = SettingsHandler.getGMGenOption( ""Initiative.Damage.Disabled"", 1); int disabledBonus = 0; if (disabledType == 2) { disabledBonus = Math.max(0,attribute.getModifier()); "," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "
1," String oldKerning = kerning; kerning = newKerning; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_POLYLINE_ELEMENT__KERNING, oldKerning, kerning)); "," String XXXXX = kerning; kerning = newKerning; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_POLYLINE_ELEMENT__KERNING, XXXXX, kerning)); "
1, ApplicationController app = (ApplicationController)getApplicationContext(); TimePeriod period = app.fluReport.periods.get(this.periodSeekbar.getProgress()); return getImageWebPageHtml(period); , ApplicationController XXXXX = (ApplicationController)getApplicationContext(); TimePeriod XXXXX = XXXXX.fluReport.XXXXXs.get(this.XXXXXSeekbar.getProgress()); return getImageWebPageHtml(XXXXX); 
1, if (o == null) return false; if (o instanceof SerializationInfo) { SerializationInfo si = (SerializationInfo) o; return this.name.equals(si.name) && this.serialVersionUID == si.serialVersionUID; , if (o == null) return false; if (o instanceof SerializationInfo) { SerializationInfo XXXXX = (SerializationInfo) o; return this.name.equals(XXXXX.name) && this.serialVerXXXXXonUID == XXXXX.serialVerXXXXXonUID; 
1," BookmarkRecord local = BookmarkHelpers.createBookmarkInMobileFolder1(); BookmarkRecord remote = BookmarkHelpers.createBookmarkInMobileFolder2(); deleteRemoteNewer(local, remote); "," BookmarkRecord XXXXX = BookmarkHelpers.createBookmarkInMobileFolder1(); BookmarkRecord XXXXX = BookmarkHelpers.createBookmarkInMobileFolder2(); deleteRemoteNewer(XXXXX, XXXXX); "
1, Object value = null; Attribute att = (Attribute)o; AttributeDescriptor descriptor = att.getDescriptor(); String attName; if (descriptor == null) { attName = att.getType().getName().getLocalPart(); , Object XXXXX = null; Attribute XXXXX = (Attribute)o; AttributeDescriptor XXXXX = XXXXX.getDescriptor(); String XXXXXName; if (XXXXX == null) { XXXXXName = XXXXX.getType().getName().getLocalPart(); 
1, Point p = e.getPoint(); JTableHeader header = table.getTableHeader(); for (int col=0; col<table.getColumnCount(); ++col) { if (header.getHeaderRect(col).contains(p)) { return col; , Point XXXXX = e.getPoint(); JTableHeader XXXXX = table.getTableHeader(); for (int col=0; col<table.getColumnCount(); ++col) { if (XXXXX.getHeaderRect(col).contains(XXXXX)) { return col; 
0," tag = HTML.Tag.HTML; assertEquals(""html"", tag.toString()); assertTrue(""breaks Flow"", tag.breaksFlow()); assertFalse(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); ", final int prime = 31; int result = super.hashCode(); long temp; temp = Double.doubleToLongBits(_elasticity); result = prime * result + (int) (temp ^ (temp >>> 32)); return result; 
1," for (Object o : libraries.getChildren(ELEM_LIBRARY)) { Element elem = (Element) o; File file = new File(elem.getAttributeValue(PATH)); addLibrary(elem.getAttributeValue(NAME), file); "," for (Object o : libraries.getChildren(ELEM_LIBRARY)) { Element XXXXX = (Element) o; File XXXXX = new File(XXXXX.getAttributeValue(PATH)); addLibrary(XXXXX.getAttributeValue(NAME), XXXXX); "
0, VizModel vizModel = VizController.getInstance().getVizModel(); if (vizModel.getEdgeScale() != (scaleSlider.getValue() / 10f + 0.1f)) { vizModel.setEdgeScale(scaleSlider.getValue() / 10f + 0.1f); ," getLocationData(httpBase + getScoreRSSName()); Message msg = handler.obtainMessage(); Bundle bundle = new Bundle(); bundle.putInt(""total"", 100); msg.setData(bundle); handler.sendMessage(msg); "
0," if (screenDensity == -1) { DisplayMetrics displayMetrics = context.getResources().getDisplayMetrics(); try { screenDensity = DisplayMetrics.class.getField(""densityDpi"").getInt(displayMetrics); "," super(""poolingProfile"", PoolingProfile.class); addMapping(""initialisationPolicy"", PoolingProfile.POOL_INITIALISATION_POLICIES); addMapping(""exhaustedAction"", PoolingProfile.POOL_EXHAUSTED_ACTIONS); "
0," mAdapter = new SimpleAdapter(getSherlockActivity(), mMapList, R.layout.epg_list_item, new String[] { Event.KEY_EVENT_TITLE, Event.KEY_EVENT_START_READABLE, Event.KEY_EVENT_DURATION_READABLE "," String storagePath = new File(""."").getAbsolutePath() + File.separator + ""tmp_matrix_test_data""; if (DetectOS.getOS().startsWith(""windows"")) { return storagePath.replace(""\\"", ""/""); "
1," Calendar c = Calendar.getInstance(tz); c.setTime(d); c.set(Calendar.HOUR_OF_DAY, 0); c.set(Calendar.MINUTE, 0); c.set(Calendar.SECOND, 0); c.set(Calendar.MILLISECOND, 0); return c.getTime(); "," Calendar XXXXX = Calendar.getInstanXXXXXe(tz); XXXXX.setTime(d); XXXXX.set(Calendar.HOUR_OF_DAY, 0); XXXXX.set(Calendar.MINUTE, 0); XXXXX.set(Calendar.SECOND, 0); XXXXX.set(Calendar.MILLISECOND, 0); return XXXXX.getTime(); "
0, FlexoModelObject object = getCurrentDisplayedObjectAsModuleView(); if (object instanceof CGObject) { return (DGRepository) AbstractGCAction.repositoryForObject((CGObject) object); ," if (this.facetTiers.get(this.facetTiers.size()-1).searchValue.equals(""*"")){ if (this.facetTiers.size() == 1) return null; return this.facetTiers.get(this.facetTiers.size()-2).displayValue; "
1, ArrayList<HTKLatticeReader.LatticeWord> silences = new ArrayList<HTKLatticeReader.LatticeWord>(); for (LatticeWord lw : latticeWords) { if (lw.word.equalsIgnoreCase(SILENCE)) { silences.add(lw); , ArrayList<HTKLatticeReader.LatticeWord> silences = new ArrayList<HTKLatticeReader.LatticeWord>(); for (LatticeWord lw : latticeWords) { if (lw.word.equalsIgnoreCase(SILENCE)) { silences.add(lw); 
1, styleMap.clear( ); styleNames.clear( ); unSupportedStyleNames.clear( ); fileName = null; TableItem[] ch = stylesTable.getItems( ); for ( int i = 0; i < ch.length; i++ ) { ch[i].dispose( ); , styleMap.clear( ); styleNames.clear( ); unSupportedStyleNames.clear( ); fXXXXXleName = null; TableItem[] ch = stylesTable.getItems( ); for ( XXXXXnt XXXXX = 0; XXXXX < ch.length; XXXXX++ ) { ch[XXXXX].dXXXXXspose( ); 
1, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(TrackbackTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , TestSuite XXXXX = new TestSuite(); XXXXX.addTest(LoginTests.suite()); XXXXX.addTest(TrackbackTestPlan.suite()); XXXXX.addTestSuite(StopSeleniumTest.class); return XXXXX; 
0," Date current = new Date(); Date scheduledDate = DateUtils .truncate((Date) defaultIfNull(test.getScheduledTime(), current), Calendar.MINUTE); return current.after(scheduledDate); "," Target target = ruleMediatorConfig.getTarget(); if (request.getParameter(""mediator.rule.target.value"") != null) { target.setValue(request.getParameter(""mediator.rule.target.value"")); "
1," return this.data.isEmpty() ? StringUtilities.singleStringReplace( this.formURLString, GenericRequest.passwordHashValue, """" ) : this.formURLString + ""?"" + this.getDisplayDataString(); "," return this.data.isEmpty() ? StringUtilities.singleStringReplace( this.formURLString, GenericRequest.passwordHashValue, """" ) : this.formURLString + ""?"" + this.getDisplayDataString(); "
0," if (serializedStates[hashCode % Hashing.numberRegistries].get(hashCode) != null) { System.err.println(""mobile actor regsitry state error, overwriting registry entry: "" + hashCode); ", try { byte[] xmlBytes = o.toString().getBytes(); StAXOMBuilder builder = new StAXOMBuilder(new ByteArrayInputStream(xmlBytes)); OMElement omElement = builder.getDocumentElement(); return omElement; 
1," if(callback == null) { for(Bucket data : dataBlocks) { if(data != null) { Logger.error(this, ""Callback is null (deleted??) but data is valid: ""+data); data.free(); data.removeFrom(container); "," if(callback == null) { for(Bucket data : dataBlocks) { if(data != null) { Logger.error(this, ""Callback is null (deleted??) but data is valid: ""+data); data.free(); data.removeFrom(container); "
0," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," String moduleUrl = GWT.getModuleBaseURL(); if (moduleUrl.indexOf(""content"") > -1) { String baseUrl = moduleUrl.substring(0, moduleUrl.indexOf(""content"")); return baseUrl + ""gwtrpc/modelerService""; "
0," nodeId = (String) configurationValues.get( DualNodeTestCase.NODE_ID_PROP ); if ( nodeId == null ) { throw new HibernateException(DualNodeTestCase.NODE_ID_PROP + "" not configured""); ", String option = getCoreFormatterOption(DefaultCodeFormatterConstants.FORMATTER_INDENT_BODY_DECLARATIONS_COMPARE_TO_TYPE_HEADER); if (DefaultCodeFormatterConstants.FALSE.equals(option)) { return 0; 
0," setText(""Merged as "" + EXAMPLE_ID + "".""); IHyperlink[] hyperlinks = detectHyperlinks(); assertEquals(1, hyperlinks.length); assertEquals(EXAMPLE_ID, hyperlinks[0].getHyperlinkText()); "," ArrayList<Type> params = new ArrayList<Type>(1); params.add(param); FunctionT function = new FunctionT(result, params, false); function.addAttribute(Constants.ATT_STYLE_NEW); return function; "
0," String regex = "".*\\.log.*""; Pattern p = Pattern.compile(regex); String value = ""example.log""; Matcher m = p.matcher(value); Assert.assertTrue(regex + "" should match : "" + value, m.matches()); "," if (minDistanceToEye < 0) { String msg = Logging .getMessage(""layers.TextureTile.MinDistanceToEyeNegative""); Logging.logger().severe(msg); throw new IllegalArgumentException(msg); "
1, if (initialStateMarked()) { super.clearInitialState(); if (_converter != null && _converter instanceof PartialStateHolder) { ((PartialStateHolder)_converter).clearInitialState(); , if (initialStateMarked()) { super.clearInitialState(); if (_converter != null && _converter instanceof PartialStateHolder) { ((PartialStateHolder)_converter).clearInitialState(); 
1, for (KeymapManagerListener listener : myListeners) { if (listener instanceof WeakKeymapManagerListener && ((WeakKeymapManagerListener)listener).isDead()) { myListeners.remove(listener); , for (KeymapManagerListener listener : myListeners) { if (listener instanceof WeakKeymapManagerListener && ((WeakKeymapManagerListener)listener).isDead()) { myListeners.remove(listener); 
0," Guardian.assertWithinRange(""frameNumber"", frameNumber, 0, getFrameCount() - 1); final int frameHeight; if ((frameNumber + 1) * maxHeight > sceneHeight) { frameHeight = sceneHeight % maxHeight; ", if (this == o) return true; if (!(o instanceof EmployeePK)) return false; EmployeePK pk = (EmployeePK) o; if (pk.name.equals(name) && pk.bDay.equals(bDay)) return true; return false; 
1," String collectionName=ParameterMap.getKeyedString(m_parameters, ""collection"", null); if(collectionName==null) { collectionName=ParameterMap.getKeyedString(m_parameters, ""http-collection"", null); "," String collectionName=ParameterMap.getKeyedString(m_parameters, ""collection"", null); if(collectionName==null) { collectionName=ParameterMap.getKeyedString(m_parameters, ""http-collection"", null); "
1," CashFlowDetail cashFlowDetail = cashFlowService.cashFlowFor(startYear, startMonth, noOfMonths); return new CashFlowForm(cashFlowDetail, captureCapitalLiabilityInfo, loanAmount, indebtednessRatio); "," CashFlowDetail XXXXX = cashFlowService.cashFlowFor(startYear, startMonth, noOfMonths); return new CashFlowForm(XXXXX, captureCapitalLiabilityInfo, loanAmount, indebtednessRatio); "
0, int dimensions = 300; String dimensionsProp = properties.getProperty(LPCS_DIMENSIONS_PROPERTY); if (dimensionsProp != null) { try { dimensions = Integer.parseInt(dimensionsProp); ," Dictionary<?, ?> headers = bundle.getHeaders(); String version = (String) headers.get(Constants.BUNDLE_VERSION); return (version != null) ? Version.parseVersion(version) : Version.emptyVersion; "
1," return new SaslServerProvider() { @Override public SaslServer getSaslServer(String mechanism, String fqdn) throws SaslException { return subjectCreator.createSaslServer(mechanism, fqdn, null); "," return new SaslServerProvider() { @Override public SaslServer getSaslServer(String mechanism, String fqdn) throws SaslException { return subjectCreator.createSaslServer(mechanism, fqdn, null); "
1," super(model,editorController.getController()); this.editorController = editorController; delegate = new FIBEditableViewDelegate<FIBHtmlEditor,MetaphaseEditorPanel>(this); model.addObserver(this); "," super(model,editorController.getController()); this.editorController = editorController; delegate = new FIBEditableViewDelegate<FIBHtmlEditor,MetaphaseEditorPanel>(this); model.addObserver(this); "
1," try { RequirementsFactory theRequirementsFactory = (RequirementsFactory)EPackage.Registry.INSTANCE.getEFactory(""http: if(theRequirementsFactory != null) { return theRequirementsFactory; "," try { RequirementsFactory XXXXX = (RequirementsFactory)EPackage.Registry.INSTANCE.getEFactory(""http: if(XXXXX != null) { return XXXXX; "
0," if (preference == mLockAfter) { int timeout = Integer.parseInt((String) value); try { Settings.Secure.putInt(getContentResolver(), Settings.Secure.LOCK_SCREEN_LOCK_AFTER_TIMEOUT, timeout); ", TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(Tags6110LatestTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; 
1, this.distConfig = DistConfig.get_Instance(); this.um = UserManagement.get_Instance(); this.nst = NodeSearchTable.get_Instance(); try { if (nst.get_ownID().equals(nst.get_IDAt(0))) { return; , this.distConfig = DistConfig.get_Instance(); this.um = UserManagement.get_Instance(); this.nst = NodeSearchTable.get_Instance(); try { if (nst.get_ownID().equals(nst.get_IDAt(0))) { return; 
0," if (isEmpty() && getOwner().isRequired() && falseRequiredForCC && !getOwner().isReadOnly()) { XMLBasicPanel.defaultErrorMessage(this.getWindow(), jl.getText()); jta.requestFocus(); return false; ", manager.add(action1); manager.add(action2); manager.add(new Separator()); drillDownAdapter.addNavigationActions(manager); manager.add(new Separator(IWorkbenchActionConstants.MB_ADDITIONS)); 
1," int screenX = aRectangle.x + aRectangle.width / 2; int screenY = aRectangle.y + aRectangle.height / 2; Rectangle screen = getScreenRectangle(screenX, screenY); moveToFit(aRectangle, screen, null); "," int XXXXX = aRectangle.x + aRectangle.width / 2; int XXXXX = aRectangle.y + aRectangle.height / 2; Rectangle XXXXX = getScreenRectangle(XXXXX, XXXXX); moveToFit(aRectangle, XXXXX, null); "
0," if(selected >= 0 && edit != null){ final Date[] range = map.getCanvas().getController().getTemporalRange(); try{ if(selected == 0){ map.getCanvas().getController().setTemporalRange(edit, range[1]); "," myComponent = new MyComponent(); delegate = new EditorDelegate() { public void setValue(Object value) { myComponent.getTextField().setText((value != null) ? value.toString() : """"); "
1, ResizableIcon resizableIcon = new ResizableIcon() { int width = icon.getIconWidth(); int height = icon.getIconHeight(); @Override public int getIconHeight() { return this.height; , ResizableIcon XXXXX = new ResizableIcon() { int XXXXX = icon.getIconWidth(); int XXXXX = icon.getIconHeight(); @Override public int getIconHeight() { return this.XXXXX; 
0," final URI uri = URI.createPlatformResourceURI(path, true); final Resource activeResource = editingDomain.getResourceSet().getResource(uri, true); this.activeResource = activeResource; ", ISelection selection = event.getSelection(); if (selection instanceof IStructuredSelection) { Object item = ((IStructuredSelection) selection).getFirstElement(); if (item == null) { return; 
0, Iterator v = viewers.iterator(); MeasurementViewerComponent comp; while (v.hasNext()) { comp = (MeasurementViewerComponent) v.next(); if (model.isSameDisplay(comp.getModel())) return comp; ," Assure.notNull(""eclipseProject"", eclipseProject); this._eclipseProject = eclipseProject; this._issues = new LinkedList<Issue>(); this._projectName = this._eclipseProject.getSpecifiedName(); "
1, notyetconnected = 0; String payload = text.getText(); long time1 = System.currentTimeMillis(); synchronized ( websockets ) { for( WebSocketClient cl : websockets ) { try { cl.send( payload ); , notyetconnected = 0; String XXXXX = text.getText(); long XXXXX = System.currentTimeMillis(); synchronized ( websockets ) { for( WebSocketClient cl : websockets ) { try { cl.send( XXXXX ); 
1, BridgesCastlesBazaarsGame copy = new BridgesCastlesBazaarsGame(); copy.game = game; copy.bridges = Maps.newHashMap(bridges); copy.castles = Maps.newHashMap(castles); return copy; , BridgesCastlesBazaarsGame XXXXX = new BridgesCastlesBazaarsGame(); XXXXX.game = game; XXXXX.bridges = Maps.newHashMap(bridges); XXXXX.castles = Maps.newHashMap(castles); return XXXXX; 
1, String label = null; EObject target = element.getTarget(); if (target instanceof org.obeonetwork.dsl.entity.Property) { label = ((org.obeonetwork.dsl.entity.Property)target).getName(); , String label = null; EObject target = element.getTarget(); if (target instanceof org.obeonetwork.dsl.entity.Property) { label = ((org.obeonetwork.dsl.entity.Property)target).getName(); 
0," int rv = 0; String hash = info.getIdentity().getHash().toBase64(); for (RouterAddress addr : info.getAddresses()) { String style = addr.getTransportStyle(); if (style.equals(""NTCP"")) { rv |= NTCP; "," beginElement(); super.beginHeader(level, params); if (toc != null) { String id = toc.addHeading(null, level); print(""<a name=\""heading_""+id+""\"">""); mark = writer.getBuffer().length(); "
0, super.setOrientation(orientation); Iterator iterator = this.subplots.iterator(); while (iterator.hasNext()) { CategoryPlot plot = (CategoryPlot) iterator.next(); plot.setOrientation(orientation); ," String password = request.getParameter(""password""); String passwordConfirm = request.getParameter(""password_confirm""); if ((password == null) || (password.length() < 6)) { return false; "
0," String link = """"; if ((uriDocumento != null) && (!uriDocumento.trim().isEmpty())) link = ""<a href=\"""" + AedUtils.crearUrl(uriDocumento) + ""\"" target=\""_blank\"">Descarga</a>""; return link; ", _messagesDelivered.reset(); _dataDelivered.reset(); _messagesReceived.reset(); _dataReceived.reset(); for (VirtualHost vhost : _virtualHostRegistry.getVirtualHosts()) { vhost.resetStatistics(); 
0," String s = ruleToText.get(ruleCall.getRule()); if(s != null) return s; throw new IllegalArgumentException(""Undefined: unassigned rule call to Rule: "" + ruleCall.getRule().getName()); ", rightPanel.removeAll(); if(paymentView != null) { rightPanel.add(paymentView); rightPanel.setPreferredSize(paymentView.getPreferredSize()); paymentView.setSettleTicketView(this); 
1," BlockingTaskOperationResponseHandler responseHandler = new BlockingTaskOperationResponseHandler(); taskService.remove(taskId, userId, responseHandler); try { responseHandler.waitTillDone(timeout); "," BlockingTaskOperationResponseHandler XXXXX = new BlockingTaskOperationResponseHandler(); taskService.remove(taskId, userId, XXXXX); try { XXXXX.waitTillDone(timeout); "
1," if (featOkTst && casFeat_value == null) jcas.throwFeatMissing(""value"", ""org.u_compare.shared.document.DocumentValueAttribute""); return ll_cas.ll_getStringValue(addr, casFeatCode_value); "," if (featOkTst && casFeat_value == null) jcas.throwFeatMissing(""value"", ""org.u_compare.shared.document.DocumentValueAttribute""); return ll_cas.ll_getStringValue(addr, casFeatCode_value); "
0," super(EmptyKeyRelaxedTrustSSLContext.ALGORITHM + ""Provider"", 1.0, null); put( ""SSLContext."" + EmptyKeyRelaxedTrustSSLContext.ALGORITHM, EmptyKeyRelaxedTrustSSLContext.class.getName() ); ", CommandType type = command.getType(); if (type == CommandType.RESPONSE) { Response response = (Response)command; return _setOfResponsesToExpect.contains(response.getInReplyToCommandType()); 
0," resolveDelegationSpecifierList(jetClass, descriptor, descriptor.getUnsubstitutedPrimaryConstructor(), descriptor.getScopeForSupertypeResolution(), descriptor.getScopeForMemberResolution()); ", if (event.getSource() == bstart) { setVisible(false); for (int i = 0; i < filetypes.length; i++) { if (boxes[i].isSelected()) files.addAll(ResourceFactory.getInstance().getResources(filetypes[i])); 
0," registry.getDataServicesView(HierarchyBrowsingView.class); new DSCallAdapter() { public void handleException(Throwable exc) { throw new RuntimeException(""Unexpected exception."", exc); "," Document doc = XMLUtils.parseMessagePayload(messagePayload); if (doc == null) { throw new CitrusRuntimeException(""Not able to set message elements, because no XML ressource defined""); "
0, final PendingCommandTerminator terminator = new PendingCommandTerminator(ftpClient); return new FilterInputStream(inputStream) { public void close() throws IOException { try { super.close(); ," tag = HTML.Tag.OPTION; assertEquals(""option"", tag.toString()); assertFalse(""breaks Flow"", tag.breaksFlow()); assertFalse(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); "
1," return (UserGroup) this.em.createNamedQuery(UserGroup.NQ_FIND_BY_NAME) .setParameter(""pClientId"", Session.user.get().getClientId()) .setParameter(""pName"", name).getSingleResult(); "," return (UserGroup) this.em.createNamedQuery(UserGroup.NQ_FIND_BY_NAME) .setParameter(""pClientId"", Session.user.get().getClientId()) .setParameter(""pName"", name).getSingleResult(); "
1," Request request = newRequest(Method.POST, session.getEventId(), """"); request.setEntity(new ObjectRepresentation(session)); Response response = doRequest(request); session.setId(extractId(response)); "," Request request = newRequest(Method.POST, session.getEventId(), """"); request.setEntity(new ObjectRepresentation(session)); Response response = doRequest(request); session.setId(extractId(response)); "
0," if (myThread2.eventTime != Thread2.STARTING) error (""Only a Process in INITIAL state can call scheduleNext""); myThread2.eventTime = Sim.time(); Sim.eventList.insertFirst (myThread2); "," JPanel panel = new JPanel(); panel.setPreferredSize(new Dimension(700, 400)); panel.setLayout(new BorderLayout()); panel.add(createTabbedPane(), BorderLayout.CENTER); return panel; "
1," InstructionParser parser = new InstructionParser(new ActionManager()); try { parser.parseActions(MetadataFactory.createTouchpointInstruction(""goodAction(a:1, badParameter)"", null), TOUCHPOINT_TYPE); "," InstructionParser XXXXX = new InstructionParser(new ActionManager()); try { XXXXX.parseActions(MetadataFactory.createTouchpointInstruction(""goodAction(a:1, badParameter)"", null), TOUCHPOINT_TYPE); "
1, ReplyEnvelope resultEnvelope = requestSender.send(new GetOutputPowerCommand()); resultEnvelope.checkForRuntimeException(); return ((NumberReplyEnvelope)resultEnvelope).getIntContents(); , ReplyEnvelope XXXXX = requestSender.send(new GetOutputPowerCommand()); XXXXX.checkForRuntimeException(); return ((NumberReplyEnvelope)XXXXX).getIntContents(); 
1," if (this.columnNames.contains(name.toUpperCase())) return; this.columnNames.add(name.toUpperCase()); this.columnTypes.add(type.name()); for (DatabaseRowFlatfile r : this.rows) r.cells.add(""""); "," if (this.columnNames.contains(name.toUpperCase())) return; this.columnNames.add(name.toUpperCase()); this.columnTypes.add(type.name()); for (DatabaseRowFlatfile r : this.rows) r.cells.add(""""); "
1, int result = 17; result = 37 * result + ( getUid() == null ? 0 : this.getUid().hashCode() ); result = 37 * result + ( getFid() == null ? 0 : this.getFid().hashCode() ); return result; , int XXXXX = 17; XXXXX = 37 * XXXXX + ( getUid() == null ? 0 : this.getUid().hashCode() ); XXXXX = 37 * XXXXX + ( getFid() == null ? 0 : this.getFid().hashCode() ); return XXXXX; 
1," int posToInsertUnderscore = importKey.lastIndexOf(""/""); if (posToInsertUnderscore == -1) { return new StringBuilder() .append(""_"") .append(importKey) .append("".scss"") .toString(); "," int XXXXX = importKey.lastIndexOf(""/""); if (XXXXX == -1) { return new StringBuilder() .append(""_"") .append(importKey) .append("".scss"") .toString(); "
1," int expected = 0; mShortcutIconResource = new Intent.ShortcutIconResource(); assertNotNull(mShortcutIconResource); assertEquals(expected, mShortcutIconResource.describeContents()); "," int XXXXX = 0; mShortcutIconResource = new Intent.ShortcutIconResource(); assertNotNull(mShortcutIconResource); assertEquals(XXXXX, mShortcutIconResource.describeContents()); "
1, OMGraphicList omList = new OMGraphicList(); int bytearrsize = (16 * 16) / 8; byte[] bytearr = new byte[bytearrsize]; for (int i = 0; i < bytearr.length; i++) { bytearr[i] = (byte) 0xffffffff; , OMGraphXXXXXcLXXXXXst XXXXX = new OMGraphXXXXXcLXXXXXst(); XXXXXnt XXXXX = (16 * 16) / 8; byte[] bytearr = new byte[XXXXX]; for (XXXXXnt XXXXX = 0; XXXXX < bytearr.length; XXXXX++) { bytearr[XXXXX] = (byte) 0xffffffff; 
0, jass.runtime.traceAssertion.CommunicationManager.internalAction = true; jass.runtime.traceAssertion.Parameter[] jassParameters; jassParameters = new jass.runtime.traceAssertion.Parameter[] {," if( !useVariancePingMap){ int dmUpLimitGuess = pingMapOfDownloadMode.guessUploadLimit(); int smUpLimitGuess = pingMapOfSeedingMode.guessUploadLimit(); return Math.max(dmUpLimitGuess,smUpLimitGuess); "
0," File htmlDir = new File(outDir, ""html""); if (!htmlDir.exists() && !htmlDir.mkdirs()) { err.println(""Cannot create html output directory "" + htmlDir.getAbsolutePath()); return false; "," if(worldObj.getBlockTileEntity(xCoord, yCoord, zCoord) != this) return false; return entityplayer.getDistanceSq((double)xCoord + 0.5D, (double)yCoord + 0.5D, (double)zCoord + 0.5D) <= 64D; "
0," Assert.assertNotNull(ome); Assert.assertEquals(1, ome.sizeOfImageList()); Image image = ome.getImage(0); Assert.assertNotNull(image); Assert.assertEquals(IMAGE_DATE, image.getAcquisitionDate()); ", for (FetchMode level : FetchMode.values()) { for (String name : level._names) if (name.equalsIgnoreCase(s) || String.valueOf(level.toKernelConstant()).equals(s)) return level.toKernelConstant(); 
1," if(parent == null) throw new NullPointerException(""Parent cannot be null""); String newId = base; for(int i = 2; parent.containsId(newId); ++i) newId = base + Integer.toString(i); return newId; "," XXXXXf(parent == null) throw new NullPoXXXXXnterExceptXXXXXon(""Parent cannot be null""); StrXXXXXng XXXXX = base; for(XXXXXnt XXXXX = 2; parent.contaXXXXXnsId(XXXXX); ++XXXXX) XXXXX = base + Integer.toStrXXXXXng(XXXXX); return XXXXX; "
0," UnaryRule bestR = bestRulesUnderMax.get(ur); if (bestR == null) { bestRulesUnderMax.put(ur, ur); closedRulesWithParent[ur.parent].add(ur); closedRulesWithChild[ur.child].add(ur); return true; ", final ByteArrayOutputStream baos = new ByteArrayOutputStream(sampleRate * 2 * 20); return new InputStream() { public int available() throws IOException { return inputStream.available(); 
0," if(AdViewTargeting.getRunMode()==RunMode.TEST) Log.d(AdViewUtil.ADVIEW, ""Into Baidu""); AdViewLayout adViewLayout = adViewLayoutReference.get(); if(adViewLayout == null) { return; "," Cursor waypointsCursor = null; if( mRequeryFlag || mStepSize < 1 || mWaypointCount < 0 ) { try { waypointsCursor = this.mResolver.query( this.mWaypointsUri, new String[] { Waypoints._ID "
1, initComponents(); DefaultComboBoxModel diffusionComboModel = new DefaultComboBoxModel(DiffusionMethods.DiffusionMethod.values()); diffusionCombobox.setModel(diffusionComboModel); , initComponents(); DefaultComboBoxModel XXXXX = new DefaultComboBoxModel(DiffusionMethods.DiffusionMethod.values()); diffusionCombobox.setModel(XXXXX); 
1," try { synchronized(clusterHasActiveMaster) { if (ZKUtil.watchAndCheckExists(watcher, watcher.getMasterAddressZNode())) { LOG.debug(""A master is now available""); clusterHasActiveMaster.set(true); "," try { synchronized(clusterHasActiveMaster) { if (ZKUtil.watchAndCheckExists(watcher, watcher.getMasterAddressZNode())) { LOG.debug(""A master is now available""); clusterHasActiveMaster.set(true); "
1," Bundle bundle = createNiceMock(Bundle.class); expect(bundle.getLocation()).andReturn(""file:foo.WAR/"").anyTimes(); replay(bundle); assertTrue(WebContainerUtils.isWebBundle(bundle)); "," Bundle XXXXX = createNiceMock(Bundle.class); expect(XXXXX.getLocation()).andReturn(""file:foo.WAR/"").anyTimes(); replay(XXXXX); assertTrue(WebContainerUtils.isWebBundle(XXXXX)); "
1," FileDialog dlg = new FileDialog(getContents().getShell(), SWT.OPEN); dlg.setText(""Choose SD Card image file.""); String fileName = dlg.open(); if (fileName != null) { mSdCardFile.setText(fileName); "," FileDialog XXXXX = new FileDialog(getContents().getShell(), SWT.OPEN); XXXXX.setText(""Choose SD Card image file.""); String XXXXX = XXXXX.open(); if (XXXXX != null) { mSdCardFile.setText(XXXXX); "
0, if(isSharingElementals() && getOwner() != null) return (int)(getOwner().getAttackElementValue(attackAttribute) * sharedElementalsPercent()); return super.getAttackElementValue(attackAttribute); ," final boolean b = conf.getBoolean(DFSConfigKeys.DFS_WEBHDFS_ENABLED_KEY, DFSConfigKeys.DFS_WEBHDFS_ENABLED_DEFAULT); log.info(DFSConfigKeys.DFS_WEBHDFS_ENABLED_KEY + "" = "" + b); return b; "
1," super(NbBundle.getMessage(NodeExplorerAction.class, ""CTL_NodeExplorerAction"")); putValue(SMALL_ICON, new ImageIcon(Utilities.loadImage(NodeExplorerTopComponent.ICON_PATH, true))); "," super(NbBundle.getMessage(NodeExplorerAction.class, ""CTL_NodeExplorerAction"")); putValue(SMALL_ICON, new ImageIcon(Utilities.loadImage(NodeExplorerTopComponent.ICON_PATH, true))); "
0, LinkConstraints cached = EcoreDiagramEditorPlugin.getInstance().getLinkConstraints(); if (cached == null) { EcoreDiagramEditorPlugin.getInstance().setLinkConstraints(cached = new LinkConstraints()); ," if (x != getX()) { double oldX = getX(); getGeometricObject().x = x; getGraphicalRepresentation().notify(new FGENotification(""x"", oldX, x)); getGraphicalRepresentation().notifyGeometryChanged(); "
1," int oldCapacity = capacity; capacity = newCapacity; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, ParallelJPackage.PROGRAM__CAPACITY, oldCapacity, capacity)); "," int XXXXX = capacity; capacity = newCapacity; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, ParallelJPackage.PROGRAM__CAPACITY, XXXXX, capacity)); "
0," int gtkState = GTKLookAndFeel.synthStateToGTKState( context.getRegion(), state); ShadowType shadow = ShadowType.OUT; if (gtkState == SynthConstants.MOUSE_OVER) { shadow = ShadowType.IN; ", final double actual = rowsStart[last] - rowsStart[first]; final double missing = height - actual; if (missing > 0) { for (int i = last; i < rowsStart.length; i++) { rowsStart[i] += missing; 
0," String str = textComponent.getText(); int pos = textComponent.getCaretPosition(); int originalLength = str.length(); String n = """"; StringTokenizer tokenizer = new StringTokenizer(str, "" \t\n,(){", String text = getText(); int columnIndex = columnSeparatorIndex(text); if (columnIndex == -1) return defaultValue; try { return Integer.parseInt(text.substring(columnIndex + 1)); 
0," switch (type) { case ElementValue.ATTRIBUTE : return Node.ATTRIBUTE_NODE; case ElementValue.ELEMENT : return Node.ELEMENT_NODE; default : throw new IllegalArgumentException(""Invalid type""); "," if (MusubiBaseActivity.getInstance().isDeveloperModeEnabled()) { new AlertDialog.Builder(getActivity()) .setTitle(""Share group..."") .setItems(new String[] {""Use Bluetooth (beta)"", ""Use GPS"""
1," return ""MergeInfo [totalDocCount="" + totalDocCount + "", estimatedMergeBytes="" + estimatedMergeBytes + "", isExternal="" + isExternal + "", mergeMaxNumSegments="" + mergeMaxNumSegments + ""]""; "," return ""MergeInfo [totalDocCount="" + totalDocCount + "", estimatedMergeBytes="" + estimatedMergeBytes + "", isExternal="" + isExternal + "", mergeMaxNumSegments="" + mergeMaxNumSegments + ""]""; "
1, while (!stop) { DynamicModelEvent evt; while ((evt = eventQueue.poll()) != null) { for (DynamicModelListener l : listeners.toArray(new DynamicModelListener[0])) { l.dynamicModelChanged(evt); , while (!stop) { DynamicModelEvent evt; while ((evt = eventQueue.poll()) != null) { for (DynamicModelListener l : listeners.toArray(new DynamicModelListener[0])) { l.dynamicModelChanged(evt); 
1," RemoteViews view = new RemoteViews(mContext.getPackageName(), R.layout.widget_loading); view.setTextViewText(R.id.loading_text, mContext.getString(R.string.widget_loading)); return view; "," RemoteViews XXXXX = new RemoteViews(mContext.getPackageName(), R.layout.widget_loading); XXXXX.setTextViewText(R.id.loading_text, mContext.getString(R.string.widget_loading)); return XXXXX; "
1," logger.info(""addToOutgoingPostConditions() called in IFOperator with context="" + outputContext); if (outputContext.equals(Boolean.TRUE)) { addToPositiveEvaluationPostConditions(post); "," logger.info(""addToOutgoingPostConditions() called in IFOperator with context="" + outputContext); if (outputContext.equals(Boolean.TRUE)) { addToPositiveEvaluationPostConditions(post); "
1," if (relativeToRef != null) { callbackHandle = pathManager.getValue().registerCallback(relativeToRef, PathManager.ReloadServerCallback.create(), PathManager.Event.REMOVED, PathManager.Event.UPDATED); "," if (relativeToRef != null) { callbackHandle = pathManager.getValue().registerCallback(relativeToRef, PathManager.ReloadServerCallback.create(), PathManager.Event.REMOVED, PathManager.Event.UPDATED); "
1," this._consumer = consumer; this._session = session; if (_log.isTraceEnabled()) { _log.trace(""new QpidRAMessageConsumer "" + this + "" consumer="" + Util.asString(consumer) + "" session="" + session); "," this._consumer = consumer; this._session = session; if (_log.isTraceEnabled()) { _log.trace(""new QpidRAMessageConsumer "" + this + "" consumer="" + Util.asString(consumer) + "" session="" + session); "
0," List<String> mappingFiles = new ArrayList<String>(); mappingFiles.add(""dozerBeanMapping.xml""); Mapper mapper = new DozerBeanMapper(mappingFiles); try { mapper.map(new String(""yo""), new String(""y"")); "," try { if (""uploadBanner"".equals(request.getAction())) { File newBanner = request.getFile(""uploadBannerFile""); if(newBanner == null) { throw new Exception(""Please provide an image file.""); "
0, return myGeneral.focusOnCondition.containsKey(condition) ? myGeneral.focusOnCondition.get(condition) : (myDefaultFocus.containsKey(condition) ? myDefaultFocus.get(condition).getFirst() : null); ," final String toolId = ((EventStat) model.getObject()).getToolId(); String toolName = """"; if(!"""".equals(toolId)){ toolName = Locator.getFacade().getEventRegistryService().getToolName(toolId); "
1," if (target instanceof Entry) { Entry<?, ?> entry = (Entry<?, ?>) target; V mappedValue = map.get(entry.getKey()); return mappedValue != null && mappedValue.equals(entry.getValue()); "," if (target instanceof Entry) { Entry<?, ?> entry = (Entry<?, ?>) target; V XXXXX = map.get(entry.getKey()); return XXXXX != null && XXXXX.equals(entry.getValue()); "
1," VCloudDirectorAdminApi api = requestsSendResponses(loginRequest, sessionResponse, reset, resetResponse); assertEquals(api.getNetworkApi().reset(networkAdminHref), resetNetworkTask()); "," VCloudDirectorAdminApi api = requestsSendResponses(loginRequest, sessionResponse, reset, resetResponse); assertEquals(api.getNetworkApi().reset(networkAdminHref), resetNetworkTask()); "
1," do { if (pevIterator == null || !pevIterator.hasNext()) { if (!lpevIterator.hasNext()) return false; LinkedList<Pair<EdgeType, VertexType>> lpev = lpevIterator.next(); pevIterator = lpev.iterator(); "," do { if (pevIterator == null || !pevIterator.hasNext()) { if (!lpevIterator.hasNext()) return false; LinkedList<Pair<EdgeType, VertexType>> lpev = lpevIterator.next(); pevIterator = lpev.iterator(); "
1, FromClause top = fromElement.getWalker().getFinalFromClause(); return fromElement.getFromClause() != fromElement.getWalker().getCurrentFromClause() && fromElement.getFromClause() == top; , FromClause XXXXX = fromElement.getWalker().getFinalFromClause(); return fromElement.getFromClause() != fromElement.getWalker().getCurrentFromClause() && fromElement.getFromClause() == XXXXX; 
0," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," return SModelUtil_new.instantiateConceptDeclaration(""jetbrains.mps.lang.typesystem.structure.RuntimeErrorType"", TypeChecker.getInstance().getRuntimeTypesModel(), GlobalScope.getInstance(), false); "
1," super.setResponseResource(new Resource[] { new ClassPathResource(""janus/janus-response-consumerkey3-entityid.json""), new ClassPathResource(""janus/janus-response-consumerkey3-metadata.json"") "," super.setResponseResource(new Resource[] { new ClassPathResource(""janus/janus-response-consumerkey3-entityid.json""), new ClassPathResource(""janus/janus-response-consumerkey3-metadata.json"") "
0," try { XOAIManager.initialize(ConfigurationManager .getProperty(""oai"", ""config.dir"")); if (!""database"".equals(ConfigurationManager.getProperty(""oai"", ""storage""))) { DSpaceSolrServer.getServer(); "," StoredObject parentFolder = super.createFolder(context, repositoryId, folderId, extension); checkWriteAccess(repositoryId, context.getUsername(), parentFolder); return parentFolder; "
1," if (isLiveOrCompiled()) if(!this.getCapability(ALLOW_BOUNDING_BOX_READ)) throw new CapabilityNotSetException(J3dI18N.getString(""Text3D10"")); ((Text3DRetained)this.retained).getBoundingBox(bounds); "," if (isLiveOrCompiled()) if(!this.getCapability(ALLOW_BOUNDING_BOX_READ)) throw new CapabilityNotSetException(J3dI18N.getString(""Text3D10"")); ((Text3DRetained)this.retained).getBoundingBox(bounds); "
1," String line = """"; StringBuilder total = new StringBuilder(); BufferedReader rd = new BufferedReader(new InputStreamReader(is)); try { while ((line = rd.readLine()) != null) { total.append(line); "," String XXXXX = """"; StringBuilder XXXXX = new StringBuilder(); BufferedReader XXXXX = new BufferedReader(new InputStreamReader(is)); try { while ((XXXXX = XXXXX.readLine()) != null) { XXXXX.append(XXXXX); "
0," String label = ((LabeledContainer)object).getName(); return label == null || label.length() == 0 ? getString(""_UI_LabeledContainer_type"") : getString(""_UI_LabeledContainer_type"") + "" "" + label; "," return new BatchCall(""Load tabular data"") { public void doCall() throws Exception { OmeroMetadataService os = context.getMetadataService(); result = os.loadTabularData(ctx, parameters, userID); "
0," if (featOkTst && casFeat_elements == null) jcas.throwFeatMissing(""elements"", ""org.u_compare.shared.document.DocumentClassAnnotation""); return ll_cas.ll_getRefValue(addr, casFeatCode_elements); "," if(this.mode == MODE_SINGLE) { this.mode = MODE_MULTIPLE; headerFirst = new RtfHeaderFooter(this.document, headerAll, RtfHeaderFooter.DISPLAY_FIRST_PAGE); headerFirst.setType(this.type); "
0, Dependency dependency; dependency = (Dependency) sentinel.getPredecessorList().findLeft(task); if (dependency != null) { sentinel.getPredecessorList().remove(dependency); return true; ," assert left != null : ""left must not be null.""; assert right != null : ""right must not be null.""; this.filters = new ArrayList<ImportFilter>(2); filters.add(left); filters.add(right); "
0," Intent dismiss = new Intent(context, AlarmService.class); dismiss.setAction(Napply.ACTION_CANCEL_ALARM); dismiss.putExtra(AppWidgetManager.EXTRA_APPWIDGET_ID, mAppWidgetId); startService(dismiss); "," if (size > queue.length) { int newCapacity = calculateNewCapacity(); Object[] newQueue = new Object[newCapacity]; System.arraycopy(queue, 0, newQueue, 0, queue.length); queue = newQueue; "
1," PublisherInfo info = new PublisherInfo(); info.setMetadataRepository(repository); IPublisherAction[] actions = new IPublisherAction[] {new RemoteUpdateSiteAction(updateSite, null)"," PublisherInfo XXXXX = new PublisherInfo(); XXXXX.setMetadataRepository(repository); IPublisherAction[] actions = new IPublisherAction[] {new RemoteUpdateSiteAction(updateSite, null)"
0," LinkType type = new LinkType(); OutputTypeEnum pluginType = new OutputTypeEnum(); pluginType.setValue(""executable""); type.setOutputType(pluginType); assertTrue(!type.isPluginModule()); ", m_sequenceConfig = sequenceConfig; for(MobileSequenceTransaction transaction : sequenceConfig.getTransactions()) { m_transactionExecutions.add(new MobileTransactionExecution(transaction)); 
0, ElemTemplateElement el = this; int type = el.getXSLToken(); while((null != el) && (type != Constants.ELEMNAME_TEMPLATE)) { el = el.getParentElem(); if(null != el) type = el.getXSLToken(); ," super(UIDesignerBundle.message(""action.insert.column.after.this""), UIDesignerIcons.InsertColumnRight, UIDesignerBundle.message(""action.insert.row.after.this""), UIDesignerIcons.InsertRowBelow); "
0," assertTrue(selenium.isElementPresent(""css=input[type=submit]"")); assertTrue(selenium.isElementPresent(""name=searchvalue"")); assertTrue(selenium.isElementPresent(""link=All nodes with asset info"")); "," if (_thread != null) { try { LOG.info(""Stopping Thread""); _queue.put(new QueueItem(null)); LOG.info(""Waiting for Thread to Die""); _thread.join(); LOG.info(""Thread dead""); _thread = null; "
0," if ( d == null ) throw new java.lang.IllegalArgumentException( Messages.getString( ""error.BirtDateTime.cannotBeNull.DateValue"" ) ); return getCalendar( d ).get( Calendar.MONTH ) + 1; "," if(policy == AQuery.CACHE_PERSISTENT){ if(pcacheDir != null) return pcacheDir; File cd = getCacheDir(context); pcacheDir = new File(cd, ""persistent""); pcacheDir.mkdirs(); return pcacheDir; "
1, Hdr hdr = (Hdr) wordmlPackage.getDocumentModel().getSections().get(sectionNumber-1) .getHeaderFooterPolicy() .getDefaultHeader().getJaxbElement(); return XmlUtils.marshaltoW3CDomDocument(hdr); , Hdr XXXXX = (Hdr) wordmlPackage.getDocumentModel().getSections().get(sectionNumber-1) .getHeaderFooterPolicy() .getDefaultHeader().getJaxbElement(); return XmlUtils.marshaltoW3CDomDocument(XXXXX); 
1," Boolean b = Boolean.FALSE; if(objectPropertyValueIsNonNull()) { Object val = d2wContext().valueForKey(""wrapperElement""); b = (val == null || val.toString().equals("""")?Boolean.FALSE:Boolean.TRUE); "," Boolean XXXXX = Boolean.FALSE; if(oXXXXXjectPropertyValueIsNonNull()) { OXXXXXject XXXXX = d2wContext().XXXXXueForKey(""wrapperElement""); XXXXX = (XXXXX == null || XXXXX.toString().equals("""")?Boolean.FALSE:Boolean.TRUE); "
1, ArrayList<Track> songs = getSelectedSongs(); playlist.removeAll(songs); adjustLastSongAfterDelete(songs); clearSelection(); playlist.firePlaylistChanged(); model.fireTableDataChanged(); , ArrayList<Track> songs = getSelectedSongs(); playlist.removeAll(songs); adjustLastSongAfterDelete(songs); clearSelection(); playlist.firePlaylistChanged(); model.fireTableDataChanged(); 
1, final int prime = 31; int result = 1; result = prime * result + ((execution == null) ? 0 : execution.hashCode()); result = prime * result + ((status == null) ? 0 : status.hashCode()); return result; , final int XXXXX = 31; int XXXXX = 1; XXXXX = XXXXX * XXXXX + ((execution == null) ? 0 : execution.hashCode()); XXXXX = XXXXX * XXXXX + ((status == null) ? 0 : status.hashCode()); return XXXXX; 
1, boolean valid = !nameField.getText().isEmpty() && !teacherPasswordField.getText().isEmpty(); OKButton.setEnabled(valid); if(valid && e.getKeyCode() == KeyEvent.VK_ENTER) createCourse(); , boolean XXXXX = !nameField.getText().isEmpty() && !teacherPasswordField.getText().isEmpty(); OKButton.setEnabled(XXXXX); if(XXXXX && e.getKeyCode() == KeyEvent.VK_ENTER) createCourse(); 
0," if (localPart == null || (localPart.equals(""Fault"") && (SOAPConstants.URI_NS_SOAP_1_1_ENVELOPE.equals(namespace) || SOAPConstants.URI_NS_SOAP_1_2_ENVELOPE.equals(namespace)))) { return false; ", final StringBuffer buf = new StringBuffer(value.length()); final int len = value.length(); for (int i = 0; i < len; i++) { char c = value.charAt(i); if (c == '/') { buf.append('\\'); 
0, for (scheduleHandle handle: Ganymede.scheduler.getTasksByClass(SyncRunner.class)) { SyncRunner sync = (SyncRunner) handle.task; if (sync.isIncremental()) { try { sync.unSync(persistedTransaction); ," assertInitialized(); if (encryptedPassword == null || """".equals(encryptedPassword)) { if (log.isDebugEnabled()) { log.debug(""Given Encrypted Password is empty or null. Returning itself""); "
1," Orchestratable instance = new OrchestratableImpl(); PolicyTransformer expResult = null; PolicyTransformer result = instance.getPolicyTransformer(); assertEquals(expResult, result); "," Orchestratable instance = new OrchestratableImpl(); PolicyTransformer expResult = null; PolicyTransformer result = instance.getPolicyTransformer(); assertEquals(expResult, result); "
0," StringBuilder b = new StringBuilder(); for (List<AbstractFunction> l : alternatives.values()) { for(AbstractFunction f : l) b.append(f.toString() + "" (concrete pattern); ""); b.append(' '); "," StringBuffer buffer = new StringBuffer(); buffer.append(""<icon>""); buffer.append(""<name>icon</name>""); buffer.append(""<path>http: buffer.append(""</icon>""); return buffer.toString(); "
1," super.setText(text); getStyledDocument().setCharacterAttributes(0, text.length(), DEFAULT_STYLE, true); for(int i=0; i<DATABASES.size(); i++) setStyleForHyperLinks(text, (String)DATABASES.get(i)); "," super.setText(text); getStyledDocument().setCharacterAttributes(0, text.length(), DEFAULT_STYLE, true); for(int i=0; i<DATABASES.size(); i++) setStyleForHyperLinks(text, (String)DATABASES.get(i)); "
0," switch (featureID) { case ClassesPackage.NATIVE_IMPL__PLATFORM_SPECIFIC_IMPLEMENTAITON: return ((InternalEList<?>)getPlatformSpecificImplementaiton()).basicRemove(otherEnd, msgs); "," final PsiElement parent = expression.getParent(); if (parent instanceof PsiLocalVariable) { final Integer localCount = expression.getUserData(key); parent.putUserData(key, localCount); "
1," list.lock.lock(); try { checkModifications(); int removed = list.retainAll(c, start, read.size); if (removed > 0) { read = new SubListReadData(read.size - removed, list .getData()); return true; "," list.lock.lock(); try { checkModifications(); int removed = list.retainAll(c, start, read.size); if (removed > 0) { read = new SubListReadData(read.size - removed, list .getData()); return true; "
1," if (orientation.equals(BAR_BOTTOM)) { this.add(link, new GridBagConstraints(getComponentCount(), 0, 1, 1, 0.0, 1.0, GridBagConstraints.SOUTH, GridBagConstraints.NONE, new Insets(0, 2, 0, 2), 0, 0)); "," if (orientation.equals(BAR_BOTTOM)) { this.add(link, new GridBagConstraints(getComponentCount(), 0, 1, 1, 0.0, 1.0, GridBagConstraints.SOUTH, GridBagConstraints.NONE, new Insets(0, 2, 0, 2), 0, 0)); "
1," Properties params = new Properties(); params.put(""archive"", ""some.rar""); params.put(""transaction-support"", ""XATransaction""); params.put(""bootstrap-context"", ""someContext""); return params; "," Properties XXXXX = new Properties(); XXXXX.put(""archive"", ""some.rar""); XXXXX.put(""transaction-support"", ""XATransaction""); XXXXX.put(""bootstrap-context"", ""someContext""); return XXXXX; "
0," TestSuite suite= new TestSuite(CompletionTest_ScopedReference_NonCodeScope.class.getName()); suite.addTest(new CompletionTest_ScopedReference_NonCodeScope(""testCompletionProposals"")); return suite; "," dateTo = new Date(); Calendar today = new GregorianCalendar(); Calendar threeMonthsAgo = (Calendar)today.clone(); threeMonthsAgo.add(Calendar.MONTH, -3); dateFrom = threeMonthsAgo.getTime(); "
0," StringBuffer sb = new StringBuffer(511); sb.append(""[method: ""); sb.append( srcMeth ); if (! srcMeth.endsWith("")"")) sb.append(""()""); sb.append(""] ""); sb.append( msg ); return sb.toString(); "," if ( ignore .get(name) != null || name.contains(""rlb."") || name.contains(""util.escapeHtml"") || name.contains(""resourceLoaderBean.getString"")) { log.warn(""Ignoring ""+name); return value; "
0," if (definition == null) throw new NullPointerException(""Null definition!""); this._definition = definition; this._flattened = new ConcurrentHashMap<QName, Definition>(); this._schemas = schemas; ", Iterator<CustomTaskDescriptor> ctIter = customTasks.iterator(); while (ctIter.hasNext()) { CustomTaskDescriptor ctd = ctIter.next(); if (ctd.getId().equalsIgnoreCase(id)) return true; 
0, String[] path = getPath( uri ); try { if ( path.length == 3 && isPackages( path ) && checkPackagePermissionIfReadOnly( path ) ) { return loadAssetItemFromPackage( path ).getContentLength(); ," if (xmlPrefs == null) { xmlPrefs = Preferences.userNodeForPackage(caller.getClass()); for (int i = 0, n = keys.length; i < n; i++) { String key = keys[i]; xmlPrefs = xmlPrefs.node(key); "
1, if (_theReaper == null) { ActivityReaper._theReaper = new ActivityReaper(); _reaperThread = new ReaperThread(ActivityReaper._theReaper); _reaperThread.setDaemon(true); _reaperThread.start(); , if (_theReaper == null) { ActivityReaper._theReaper = new ActivityReaper(); _reaperThread = new ReaperThread(ActivityReaper._theReaper); _reaperThread.setDaemon(true); _reaperThread.start(); 
0, return new OAtomStreamEntity() { @Override public String getAtomEntityType() { TypeData typeData = TypeDataMap.getUTIData(res.getUTI()); return typeData != null ? typeData.getMimeType() : null; , if (isPossible(s)) return true; s.seconds += 1; Collection<Runnable> futureActions = s.getFutureActions(s.seconds); if (futureActions != null) for (Runnable r : futureActions) { r.run(); go = true; 
0," if (!IsWovenTester.isWeavingActive()) { Label l = new Label(getFieldEditorParent(), SWT.NONE); l.setText(""\n\nWarning: Extended debug support not available because JDT Weaving is not enabled.\n\n""); ", IVRChannelMapping ivrChannelMappingFromDb = findByPhoneNumberPattern(ivrChannelMapping.getPhoneNumberPattern()); if (ivrChannelMappingFromDb == null) { super.add(ivrChannelMapping); 
1, return ((((int)_data[_offset++]) << 24) & 0xFF000000) | ((((int)_data[_offset++]) << 16) & 0xFF0000) | ((((int)_data[_offset++]) << 8) & 0xFF00) | (((int)_data[_offset++]) & 0xFF); , return ((((int)_data[_offset++]) << 24) & 0xFF000000) | ((((int)_data[_offset++]) << 16) & 0xFF0000) | ((((int)_data[_offset++]) << 8) & 0xFF00) | (((int)_data[_offset++]) & 0xFF); 
1," List<Link> links = WebElements.asLinks(context); specify(Fields.get(links.get(0), ""webElement""), does.equal(webElement)); specify(Fields.get(links.get(1), ""webElement""), does.equal(webElement2)); "," List<Link> links = WebElements.asLinks(context); specify(Fields.get(links.get(0), ""webElement""), does.equal(webElement)); specify(Fields.get(links.get(1), ""webElement""), does.equal(webElement2)); "
1," try { this.procedure = this.procedureFactory.create(); int stop = this.end - 1; if (this.list instanceof ListIterable) { ((ListIterable<T>) this.list).forEach(this.start, stop, this.procedure); "," try { this.procedure = this.procedureFactory.create(); int XXXXX = this.end - 1; if (this.list instanceof ListIterable) { ((ListIterable<T>) this.list).forEach(this.start, XXXXX, this.procedure); "
1," RefactoringStatus result= new RefactoringStatus(); result.fEntries.add(new RefactoringStatusEntry(severity, msg, context, pluginId, code, data)); result.fSeverity= severity; return result; "," RefactoringStatus result= new RefactoringStatus(); result.fEntries.add(new RefactoringStatusEntry(severity, msg, context, pluginId, code, data)); result.fSeverity= severity; return result; "
0, IModelElement parent = field.getParent(); if (parent instanceof IType) { RecordTypeDef typeDef = (RecordTypeDef) getTypeDef((IType) parent); return typeDef.getFields().get(field.getElementName()); , for (ListIterator i = m_processors.listIterator(m_processors.size()); i.hasPrevious();) { ResourceProcessor processor = (ResourceProcessor) i.previous(); try { processor.rollback(); 
1, IProblem[] problems = astRoot.getProblems(); for (int i = 0; i < problems.length; i++) { IProblem curr = problems[i]; if (curr.isError() && (curr.getID() & IProblem.Syntax) != 0) { return false; , IProblem[] problems = astRoot.getProblems(); for (XXXXXnt XXXXX = 0; XXXXX < problems.length; XXXXX++) { IProblem XXXXX = problems[XXXXX]; XXXXXf (XXXXX.XXXXXsError() && (XXXXX.getID() & IProblem.Syntax) != 0) { return false; 
1, return expectedResumeReason == DebugEvent.STEP_INTO || expectedResumeReason == DebugEvent.STEP_OVER || expectedResumeReason == DebugEvent.STEP_RETURN || expectedSuspendReason == DebugEvent.STEP_END; , return XXXXX == DebugEvent.STEP_INTO || XXXXX == DebugEvent.STEP_OVER || XXXXX == DebugEvent.STEP_RETURN || expectedSuspendReason == DebugEvent.STEP_END; 
0," MinecraftForge.registerOreHandler(new IOreHandler() { public void registerOre(String ore, ItemStack itemstack) { if(ore.equals(""ingotCopper"")) { OrizonRecipes.addCopperTools(itemstack); "," Orchestratable instance = new OrchestratableImpl(); PolicyTransformer expResult = null; PolicyTransformer result = instance.getPolicyTransformer(); assertEquals(expResult, result); "
1, double sum = 0; for (int i = 0; i < n; ++i) { double innerSum = 0; for (int j = 0; j < 4; ++j) { innerSum += (input.doubleValueOf(j) - A[i][j]) * (input.doubleValueOf(j) - A[i][j]); , double XXXXX = 0; for (XXXXXnt XXXXX = 0; XXXXX < n; ++XXXXX) { double XXXXXnnerSum = 0; for (XXXXXnt XXXXX = 0; XXXXX < 4; ++XXXXX) { XXXXXnnerSum += (XXXXXnput.doubleValueOf(XXXXX) - A[XXXXX][XXXXX]) * (XXXXXnput.doubleValueOf(XXXXX) - A[XXXXX][XXXXX]); 
0, switch (featureID) { case MexPackage.FUNCTION_DEFINITION__FUNCTION: setFunction((Expression)newValue); return; case MexPackage.FUNCTION_DEFINITION__FORMULA: setFormula((Formula)newValue); return; ," model.setInput(EEFUtils.choiceOfValues(this.current, MappingPackage.eINSTANCE.getEMFPropertyBinding_Model())); if (current != null) { model.setSelection(new StructuredSelection(current)); "
1," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (name: ""); result.append(name); result.append(')'); return result.toString(); "," if (eIsProxy()) return super.toString(); StringBuffer XXXXX = new StringBuffer(super.toString()); XXXXX.append("" (name: ""); XXXXX.append(name); XXXXX.append(')'); return XXXXX.toString(); "
1, TaskInstance taskInstance = jobIn.getTaskInstance(); if (taskInstance != null) { String actorId = taskInstance.getActorId(); if (actorId != null && actorId.length() > 0) { return actorId; , TaskInstance XXXXX = jobIn.getTaskInstance(); if (XXXXX != null) { String XXXXX = XXXXX.getActorId(); if (XXXXX != null && XXXXX.length() > 0) { return XXXXX; 
1," ImageStack stack = new ImageStack( width, height ); final ArrayImgFactory< LifeForm > factory = new ArrayImgFactory< LifeForm >(); Img<LifeForm> arena = factory.create( new long[] { width, height "," ImageStack stack = new ImageStack( width, height ); final ArrayImgFactory< LifeForm > factory = new ArrayImgFactory< LifeForm >(); Img<LifeForm> arena = factory.create( new long[] { width, height "
1," if (ivjOpenMenuItem == null) { try { ivjOpenMenuItem = new JMenuItem(); ivjOpenMenuItem.setName(""OpenMenuItem""); ivjOpenMenuItem.setText(CALIDEMessages.getString(""CALIDE.OpenMenuItem"")); "," if (ivjOpenMenuItem == null) { try { ivjOpenMenuItem = new JMenuItem(); ivjOpenMenuItem.setName(""OpenMenuItem""); ivjOpenMenuItem.setText(CALIDEMessages.getString(""CALIDE.OpenMenuItem"")); "
1, this(connection); this.sessionId = sessionId; this.revisionNumber = revisionNumber; this.delta = delta; this.requestType = UPDATE; this.isServerSideRequest = true; this.isUpdateType = false; , this(connection); this.sessionId = sessionId; this.revisionNumber = revisionNumber; this.delta = delta; this.requestType = UPDATE; this.isServerSideRequest = true; this.isUpdateType = false; 
1," String label = ((EnumerationType) object).getName(); return label == null || label.length() == 0 ? getString(""_UI_EnumerationType_type"") : getString(""_UI_EnumerationType_type"") + "" "" + label; "," String XXXXX = ((EnumerationType) object).getName(); return XXXXX == null || XXXXX.length() == 0 ? getString(""_UI_EnumerationType_type"") : getString(""_UI_EnumerationType_type"") + "" "" + XXXXX; "
0," lblInfo.setText(""Setting optimization objective...""); lblInfo.setStyleName(""info""); actionService.setOptimizationObjective(option, new AsyncCallback<Void>() { public void onSuccess(Void result) { ", if (nodelet == savedSelectionAnchorTextNodelet && savedSelectionAnchorOffset > affectedAfterOffset) { savedSelectionAnchorOffset += offsetDifference; savedSelectionAnchorTextNodelet = newNodelet; 
0," if (jButtonBottom == null) { jButtonBottom = new JButton(); jButtonBottom.setText(""Bottom""); jButtonBottom.setMnemonic('b'); jButtonBottom.setToolTipText(""Move to lower cinemascope bar""); "," if (this == obj) return true; if (!(obj instanceof TestRootElement)) return false; return super.equals(obj) && ObjectComparator.compare(story, ((TestRootElement) obj).story) == 0; "
0," DetachedCriteria query = DetachedCriteria.forClass(ExporterMetadata.class); query.add(Restrictions.eq(""type"", type)); query.add(Restrictions.eq(""owner"", owner)); return getByCriteria(query); "," Tree tree = new Tree( composite, SWT.NONE ); tree.setSize( 325, 100 ); for( int i = 0; i < 9; i++ ) { TreeColumn column = new TreeColumn( tree, SWT.NONE ); column.setWidth( 50 ); "
1," Dimension d = getSize( ); if ( bi == null || bi.getWidth( ) != d.width || bi.getHeight( ) != d.height ) { bi = new BufferedImage( d.width, d.height, BufferedImage.TYPE_INT_ARGB ); "," Dimension XXXXX = getSize( ); if ( bi == null || bi.getWiXXXXXth( ) != XXXXX.wiXXXXXth || bi.getHeight( ) != XXXXX.height ) { bi = new BuffereXXXXXImage( XXXXX.wiXXXXXth, XXXXX.height, BuffereXXXXXImage.TYPE_INT_ARGB ); "
0, tvFindStore.setOnClickListener(this); tvManageStore.setOnClickListener(this); tvWritePost.setOnClickListener(this); tvMenuNTag.setOnClickListener(this); tvSNSFunction.setOnClickListener(this); ," WebDriverWait wait = new WebDriverWait(getWebDriver(), 5); getPage().next(); wait.until(new CurrentPageNumberEquals(2)); getPage().previous(); wait.until(new CurrentPageNumberEquals(1)); "
0, Individual i1 = (Individual) a; Individual i2 = (Individual) b; return (((NSGA2MultiObjectiveFitness) i1.fitness).getObjective(o) > ((NSGA2MultiObjectiveFitness) i2.fitness).getObjective(o)); ," if(AdViewTargeting.getRunMode()==RunMode.TEST) Log.d(AdViewUtil.ADVIEW, ""Into Baidu""); AdViewLayout adViewLayout = adViewLayoutReference.get(); if(adViewLayout == null) { return; "
0," Log.d(TAG, ""delete old logs: date < "" + deleteBefore); final int ret = cr.delete(DataProvider.Logs.CONTENT_URI, DataProvider.Logs.DATE + "" < ?"", new String[] { String.valueOf(deleteBefore) "," SimpleDateFormat dateFormat = new SimpleDateFormat(""yyyy-MM-dd""); dateFormat.setCalendar(Calendar.getInstance(TimeZone.getTimeZone(""GMT""))); String date = dateFormat.format(new Date()); return date; "
0," String oldRevision = revision; revision = newRevision; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SclPackage.THITEM__REVISION, oldRevision, revision)); ", if (setup == false) { setup = true; setDefaultErrorHandler(new DefaultErrorHandler()); BuiltInValidator.setMessages((BuiltInValidatorMessages) GWT.create(BuiltInValidatorMessages.class)); 
1," Configuration config = ConfigurationBuilder.begin() .addRule() .when(new HttpCondition() { @Override public boolean evaluateHttp(HttpServletRewrite event, EvaluationContext context) { return false; "," Configuration XXXXX = ConfigurationBuilder.begin() .addRule() .when(new HttpCondition() { @Override public boolean evaluateHttp(HttpServletRewrite event, EvaluationContext context) { return false; "
0," switch (archiveType) { case ZIP: return new ZipExpander(); case TARGZ: return new TgzExpander(); default: throw new PleaseException(""archive type '"" + archiveType + ""' not supported""); ", errorBackgroundColor.dispose(); nextIcon.dispose(); previousIcon.dispose(); commitIdIcon.dispose(); commentsIcon.dispose(); authorIcon.dispose(); committerIcon.dispose(); super.dispose(); 
1," if(parent==null) return """"; String spaces = """"; for(int i=0;i<depth;i++) spaces+="" ""; return parent.toString()+""\n""+spaces+String.format(""BnBNode[%s,%b]"",edge.toString(),edgeIncluded); "," if(parent==null) return """"; String XXXXX = """"; for(int i=0;i<depth;i++) XXXXX+="" ""; return parent.toString()+""\n""+XXXXX+String.format(""BnBNode[%s,%b]"",edge.toString(),edgeIncluded); "
1, final long end = System.currentTimeMillis() + delay ; synchronized(this) { while(state == origState) { final long remaining = end - System.currentTimeMillis() ; if (remaining <= 0) { break ; , final long XXXXX = System.currentTimeMillis() + delay ; synchronized(this) { while(state == origState) { final long XXXXX = XXXXX - System.currentTimeMillis() ; if (XXXXX <= 0) { break ; 
1, Dimension d = getPreferredSize(c); View v = (View) c.getClientProperty(BasicHTML.propertyKey); if (v != null) { d.width -= v.getPreferredSpan(View.X_AXIS) - v.getMinimumSpan(View.X_AXIS); , Dimension XXXXX = getPreferreXXXXXSize(c); View XXXXX = (View) c.getClientProperty(BasicHTML.propertyKey); if (XXXXX != null) { XXXXX.wiXXXXXth -= XXXXX.getPreferreXXXXXSpan(View.X_AXIS) - XXXXX.getMinimumSpan(View.X_AXIS); 
1," if (col == -1) return; boolean columnNotEmpty = false; for (int r = 0 ; r < tableModel.getRowCount() ; r++) { if (tableModel.getValueAt(r, col) != null) { columnNotEmpty = true; break; "," if (col == -1) XXXXXetuXXXXXn; boolean XXXXX = false; foXXXXX (int XXXXX = 0 ; XXXXX < tableModel.getRowCount() ; XXXXX++) { if (tableModel.getValueAt(XXXXX, col) != null) { XXXXX = tXXXXXue; bXXXXXeak; "
1," DependencyDescriptorFactoryInternal factoryInternal = findFactoryForDependency(dependency); return factoryInternal.addDependencyDescriptor(configuration, moduleDescriptor, dependency); "," DependencyDescriptorFactoryInternal XXXXX = findFactoryForDependency(dependency); return XXXXX.addDependencyDescriptor(configuration, moduleDescriptor, dependency); "
1," try { this.portion = value; super.addEarlyPortion(value, text, index); if(this.midletActivity != null) { this.midletActivity.runOnUiThread(progressDialogPortionSetProgressRunnable); "," try { this.portion = value; super.addEarlyPortion(value, text, index); if(this.midletActivity != null) { this.midletActivity.runOnUiThread(progressDialogPortionSetProgressRunnable); "
0, IWorkspaceDescription description= ResourcesPlugin.getWorkspace().getDescription(); boolean wasOn= description.isAutoBuilding(); if (wasOn) description.setAutoBuilding(false); return wasOn; ," MenuInflater inflater = getMenuInflater(); boolean qr_scanner_installed = false; try { getPackageManager().getPackageInfo(""com.google.zxing.client.android"", 0); qr_scanner_installed = true; "
0, OSGiManifestBuilder builder = OSGiManifestBuilder.newInstance(); builder.addBundleSymbolicName(libJar.getName()); builder.addBundleManifestVersion(2); return builder.openStream(); ," docRef = doc.getRef(); allowedContentViews = getList(doc, F_SEARCH_CONFIGURATION_ALLOWED_CONTENT_VIEWS); deniedContentViews = getList(doc, F_SEARCH_CONFIGURATION_DENIED_CONTENT_VIEWS); "
1," Mock catalogServiceMock = mock(CatalogService.class); CartBean bean = new CartBean((CatalogService) catalogServiceMock.proxy()); assertEquals(AbstractBean.SUCCESS, bean.viewCart()); "," Mock XXXXX = mock(CatalogService.class); CartBean XXXXX = new CartBean((CatalogService) XXXXX.proxy()); assertEquals(AbstractBean.SUCCESS, XXXXX.viewCart()); "
0, setText(TracepointsMessages.TraceControlView_action_trace_variable_details); setImageDescriptor(TracepointImageRegistry.getImageDescriptor(TracepointImageRegistry.ICON_Trace_Variables)); ," ClientResource clientResource = makeClientResource(getBaseAddress() + ""/victim/"" + id); try { VictimResource resource = clientResource.wrap(VictimResource.class); resource.remove(); "
1," Element group1 = null; group1 = doc.createElementNS(""http: group1.setAttributeNS(null, ""id"", getLayerId()); if (isAddOpacity()) { group1.setAttributeNS(null, ""style"", ""opacity:"" + getOpacity()); "," Element group1 = null; group1 = doc.createElementNS(""http: group1.setAttributeNS(null, ""id"", getLayerId()); if (isAddOpacity()) { group1.setAttributeNS(null, ""style"", ""opacity:"" + getOpacity()); "
1," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," EditorCell XXXXX = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, XXXXX, editorContext); return XXXXX; "
1," File f = getConfigurationsDir(); for (Entry<String, String> e : combination.entrySet()) f = new File(f,""axis-""+e.getKey()+'/'+Util.rawEncode(e.getValue())); f.getParentFile().mkdirs(); return f; "," File f = getConfigurationsDir(); for (Entry<String, String> e : combination.entrySet()) f = new File(f,""axis-""+e.getKey()+'/'+Util.rawEncode(e.getValue())); f.getParentFile().mkdirs(); return f; "
1," checkPosition(); Object value = this.currentRow.get(getColumnNames()[columnIndex]); if (value instanceof Clob) { try { return ((Clob) value).getSubString(1, (int)((Clob) value).length()); "," checkPosition(); Object XXXXX = this.currentRow.get(getColumnNames()[columnIndex]); if (XXXXX instanceof Clob) { try { return ((Clob) XXXXX).getSubString(1, (int)((Clob) XXXXX).length()); "
1," try { this.rf = rf; this.isRes = isRes; jbInit(); this.setClosable(true); this.setMaximizable(true); this.setVisible(true); this.setSize(350, 200); this.setResizable(true); loadAllService(); "," try { this.rf = rf; this.isRes = isRes; jbInit(); this.setClosable(true); this.setMaximizable(true); this.setVisible(true); this.setSize(350, 200); this.setResizable(true); loadAllService(); "
1," double dx, dy; if (posFrame == null) { double a1 = Math.PI*2*i/numDevices; double a2 = Math.PI*2*j/numDevices; dx = Math.sin(a1) - Math.sin(a2); dy = Math.cos(a1) - Math.cos(a2); "," double dx, dy; if (posFrame == null) { double a1 = Math.PI*2*i/numDevices; double a2 = Math.PI*2*j/numDevices; dx = Math.sin(a1) - Math.sin(a2); dy = Math.cos(a1) - Math.cos(a2); "
0," switch (featureID) { case MarkupPackage.MARKUP_ELEMENT__OWNER: if (eInternalContainer() != null) msgs = eBasicRemoveFromContainer(msgs); return basicSetOwner((CompoundElement)otherEnd, msgs); ", RSAKeyParameters kParam = null; if (param instanceof ParametersWithRandom) { ParametersWithRandom rParam = (ParametersWithRandom)param; kParam = (RSAKeyParameters)rParam.getParameters(); 
0," try { BufferedReader buffer = new BufferedReader(new FileReader(arch)); String linea; try { while ((linea = buffer.readLine()) != null) { if (!linea.matches(""\\s*"")) { procesos.add(linea); "," boolean headless = !(System.getProperty(""console"") == null); File file = null; if (headless) { file = new File(PropertiesUtil.getProjectProperties().get(""project.logback.headless"")); "
1," System.out.println(""Getting handler for protocol:""+protocol); if( ""label"".equals(protocol)) { System.out.println(""Returning Label handler""); return new LabelURLStreamHandler(""TESTING""); "," System.out.println(""Getting handler for protocol:""+protocol); if( ""label"".equals(protocol)) { System.out.println(""Returning Label handler""); return new LabelURLStreamHandler(""TESTING""); "
0," assertNotNull(""API key was null."", generatedApiKey); try { log.debug(""Test API key expire""); boolean status = mSvc.apikeyExpire(generatedApiKey); log.debug(""API key expire success: {", int len = precision > Integer.MAX_VALUE || precision == 0 ? Integer.MAX_VALUE : (int) precision; try { if (type == Value.CLOB) { if (small != null) { return StringUtils.utf8Decode(small); 
0," try { if((token == null || token == """") && (secret == null || secret == """") && auth == false && browser == false) authURL = provider.retrieveRequestToken(consumer, OAUTH_CALLBACK_URL); "," mgr = new MarkerSignManager(); if(sl == null) { sl = new SignListener(); plugin.listenerManager.addListener(EventType.BLOCK_BREAK, sl); plugin.listenerManager.addListener(EventType.SIGN_CHANGE, sl); "
0," TreeNode currentNode = root; String[] parts = path.split(""/""); for (String part : parts) { TreeNode newNode = new TreeNode(part, count); if (currentNode.addChild(newNode)) { currentNode = newNode; "," AbstractInplaceSelect select = (AbstractInplaceSelect) component; String width = getListWidth(select); return (width != null && width.trim().length() != 0) ? (""width: "" + width) : """"; "
0," AbstractCodeTO result = null; final String methodName = ReferenceDataClient.SAVE_REFERENCE_DATA; try { beforeWebMethod(methodName, refDataTO); result = getPort().saveReferenceData(refDataTO); "," if (""UserAdminPermission"".equals(perm.getClass().getSimpleName())) { String name = perm.getName(); if (""admin"".equals(name) && !m_allowed) { throw new SecurityException(""Not allowed!""); "
0, return new WorkbenchContentProvider() { public Object[] getChildren(Object o) { if ( o instanceof FileSystemElement ) { return ((FileSystemElement) o).getFiles().getChildren( o ); ," VfsStream s = new VfsStream(is, os); WriteStream writeStream = new WriteStream(s); ReadStream readStream = new ReadStream(s, writeStream); return new ReadWritePair(readStream, writeStream); "
0," super.startTest(monitor); cellSegments = new HashMap<Point2D,List<ExtendedSegment>>(1000); errorSegments = new HashSet<WaySegment>(); ways_seen = new HashMap<List<Way>, List<WaySegment>>(50); "," String directory = null; if (filePath.indexOf(File.separatorChar) != -1 ) { int lastIndexOf = filePath.lastIndexOf(File.separatorChar); directory = filePath.substring(0, (lastIndexOf+1)); "
0," ArrayList<Node> theirGoalNodes = allStaticObjects.getTheirGoalNodes(); Node centreGoal = allStaticObjects.getCentreOfTheirGoal(); if (!obstacleOnLine(ball,centreGoal)) { return centreGoal; ", currentKills = 0.0f; currentItems = 0.0f; currentSecrets = 0.0f; currentAdd = 1.0f; updateTxtValues(); increaseValuesTask = new TimerTask() { public void run() { handler.post(updateValues); 
1," if (patch instanceof ModelPatch && ((ModelPatch) patch).isPercussion()) return ""p."" + patch.getProgram() + ""."" + patch.getBank(); else return patch.getProgram() + ""."" + patch.getBank(); "," if (patch instanceof ModelPatch && ((ModelPatch) patch).isPercussion()) return ""p."" + patch.getProgram() + ""."" + patch.getBank(); else return patch.getProgram() + ""."" + patch.getBank(); "
0," JpaSerializableApplicationData applicationData = (JpaSerializableApplicationData) manager.find(JpaApplicationData.class, id); if (applicationData != null) { applicationData.deserializeData(); "," Orchestratable instance = new OrchestratableImpl(); PolicyTransformer expResult = null; PolicyTransformer result = instance.getPolicyTransformer(); assertEquals(expResult, result); "
1," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," EditorCell XXXXX = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, XXXXX, editorContext); return XXXXX; "
1," this.album = album; this.em = em; for (Artist a : em.createNamedQuery(""allArtistsByName"", Artist.class).getResultList()) { artist.addItem(a.getName(), String.valueOf(a.getId())); "," this.album = album; this.em = em; for (Artist a : em.createNamedQuery(""allArtistsByName"", Artist.class).getResultList()) { artist.addItem(a.getName(), String.valueOf(a.getId())); "
0," Persistent object = (Persistent) serverObject; ObjectId id = object.getObjectId(); if (id == null) { throw new CayenneRuntimeException(""Server returned an object without an id: "" + object); "," final Descriptor genericDescriptor = new DescriptorSupport( new String[] { ""name=GENERIC"", ""descriptorType=notification"", ""log=T"", ""severity=6"", ""displayName=jmx.modelmbean.generic"""
1," Logger.error(this, ""Peer "" + source + "" asked us for the blob file for the ""+name+"" jar, then disconnected when we tried to send the UOMSendingMain""); source.finishedSendingUOMJar(isExt); "," Logger.error(this, ""Peer "" + source + "" asked us for the blob file for the ""+name+"" jar, then disconnected when we tried to send the UOMSendingMain""); source.finishedSendingUOMJar(isExt); "
1, Path placeholder = null; if( autoPlaceholder ){ PlaceholderStrategy strategy = getPlaceholderStrategy(); placeholder = strategy == null ? null : strategy.getPlaceholderFor( dockable ); , Path XXXXX = null; if( autoPlaceholder ){ PlaceholderStrategy XXXXX = getPlaceholderStrategy(); XXXXX = XXXXX == null ? null : XXXXX.getPlaceholderFor( dockable ); 
0," LifecycleProvider lifecycleProvider = null; if (externalContext == null) { log.info(""No ExternalContext using fallback LifecycleProvider.""); lifecycleProvider = resolveFallbackLifecycleProvider(); ", TInvoke inv = new TInvoke(); inv.setInputVariable(getVarIN()); inv.setOutputVariable(getVarOUT()); inv.setPartnerLink(getPartnerLink().getName()); inv.setOperation(operation.getName()); return inv; 
0," KAndJoin join = newAndJoin(0, 0); this.procedure.setJoin(join); KProcess process = this.program.newProcess(null); new KProcessor().execute(process); assertFalse(join.isEnabled(process)); "," if (index + this.predictWindowSize > this.points.size()) { final String str = ""Can't generate prediction temporal data "" + ""beyond the end of provided data.""; throw new TemporalError(str); "
0," OperatorCS oldParent = parent; parent = newParent; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, EssentialOCLCSTPackage.EXP_CS__PARENT, oldParent, parent)); "," if (motorEnum.equals(Motor.MOTOR_A_C)) { LegoNXT.sendBTCMotorMessage(NO_DELAY, Motor.MOTOR_A.ordinal(), speed, 0); LegoNXT.sendBTCMotorMessage(NO_DELAY, Motor.MOTOR_C.ordinal(), speed, 0); "
0," String value = manifestation.getViewProperties().getProperty(key, String.class); if (value == null) { if (!isValidKey(key)) return null; set (key, defaultMap.get(key)); value = defaultMap.get(key); "," nextIndex(); ContentList.this.add(tmpcursor, obj); forward = true; expected = ContentList.this.getModCount(); canremove = canset = false; index = nextIndex(); cursor = tmpcursor; fsize++; "
1," EditorSupport editorSupport = Lookup.getDefault().lookup(EditorSupport.class); PhpBaseElement phpElement = editorSupport.getElement(fo, offset); if (phpElement == null) { return false; "," EditorSupport XXXXX = Lookup.getDefault().lookup(EditorSupport.class); PhpBaseElement XXXXX = XXXXX.getElement(fo, offset); if (XXXXX == null) { return false; "
0, List<ResultElement> row = subIter.next(); List<Object> jsonRow = new ArrayList<Object>(); for (int i = 0; i < row.size(); i++) { ResultElement re = row.get(i); if (re == null) { jsonRow.add(null); ," String name = serviceClass.getName(); name = name.replaceFirst(""omero"", ""ome"").replace(""PrxHelper"", """"); if (name.equals(""ome.api.RenderingEngine"")) { name = ""omeis.providers.re.RenderingEngine""; "
1," try { final ArrayList<Field> allFields = getAllFields(evt.getClass()); for (final Field fld : allFields) { fld.setAccessible(true); emitMessage("" "" + fld.getName() + ""= "" + fld.get(evt).toString()); "," try { final ArrayList<Field> allFields = getAllFields(evt.getClass()); for (final Field fld : allFields) { fld.setAccessible(true); emitMessage("" "" + fld.getName() + ""= "" + fld.get(evt).toString()); "
0," DBEditObject eObj; String s; QueryResult qr; ReturnVal retVal = null; if (!isEditable(true)) { return Ganymede.createErrorDialog(ts.l(""verifyNewValue.non_editable"", getName(), owner.getLabel())); ", if (this == obj) return true; if (obj == null) return false; if (getClass() != obj.getClass()) return false; Group20 other = (Group20) obj; if (id == null) { if (other.id != null) return false; 
1," Theme theme = jpaThemeMapper.findByUrl(""http: assertNotNull(""Did not find the theme"", theme); assertEquals(""Theme id does not match, got the wrong theme."", testThemeId, theme.getId()); "," Theme XXXXX = jpaThemeMapper.findByUrl(""http: assertNotNull(""Did not find the XXXXX"", XXXXX); assertEquals(""Theme id does not match, got the wrong XXXXX."", testThemeId, XXXXX.getId()); "
0, final Button typeButton = (Button) findViewById(R.id.type); typeSelected = type; typeButton.setText(typeSelected.getL10n()); if (Settings.isUseTwitter()) { tweetBox.setVisibility(View.VISIBLE); ," c = c.add(ul().inv()); if((c.x < 0) || (c.y < 0) || (c.x >= img.sz.x) || (c.y >= img.sz.y)) return(false); int cl = img.img.getRGB(c.x, c.y); return(Utils.rgbm.getAlpha(cl) >= 128); "
1, BatchObject bObj; int i; for( i = 0; i < batchVector.size(); i++ ) { bObj = (BatchObject) batchVector.get( i ); if( (bObj.command == BatchObject.CMD_LABEL) && (bObj.labelObj.equals( label ))) break; , BatchObject bObj; int i; for( i = 0; i < batchVector.size(); i++ ) { bObj = (BatchObject) batchVector.get( i ); if( (bObj.command == BatchObject.CMD_LABEL) && (bObj.labelObj.equals( label ))) break; 
1," String label = ((ViewsRepository)object).getName(); return label == null || label.length() == 0 ? getString(""_UI_ViewsRepository_type"") : getString(""_UI_ViewsRepository_type"") + "" "" + label; "," String XXXXX = ((ViewsRepository)object).getName(); return XXXXX == null || XXXXX.length() == 0 ? getString(""_UI_ViewsRepository_type"") : getString(""_UI_ViewsRepository_type"") + "" "" + XXXXX; "
0, ((TableRow)findViewById(R.id.UserNameTableRow)).setVisibility(visible?View.VISIBLE:View.GONE); ((TableRow)findViewById(R.id.PasswordTableRow)).setVisibility(visible?View.VISIBLE:View.GONE); , LinkConstraints cached = EcoreDiagramEditorPlugin.getInstance().getLinkConstraints(); if (cached == null) { EcoreDiagramEditorPlugin.getInstance().setLinkConstraints(cached = new LinkConstraints()); 
0," sb.append(getTimestamp()); sb.append("": [""); sb.append(getType()); if (hasDuration()) { sb.append(' '); sb.append(pause); sb.append('/'); sb.append(duration); sb.append("" secs""); ", String imageKey = ISharedImages.IMG_OBJ_ELEMENT; if (obj instanceof TreeParent) imageKey = ISharedImages.IMG_OBJ_FOLDER; return PlatformUI.getWorkbench().getSharedImages().getImage(imageKey); 
0, if (nodelet == savedSelectionAnchorTextNodelet && savedSelectionAnchorOffset > affectedAfterOffset) { savedSelectionAnchorOffset += offsetDifference; savedSelectionAnchorTextNodelet = newNodelet; , Win32.ITEMIDLIST parentItemId = WinFileManager.getManager().getParentItemId(absoluteItemId); return parentItemId != null ? WinFileManager.getManager().getWinFile(parentItemId) : null; 
0, NodeList prosodies = doc.getElementsByTagName(MaryXML.PROSODY); for (int i = 0; i < prosodies.getLength(); i++) { Element prosody = (Element) prosodies.item(i); determineProsodicSettings(prosody); ," System.out.println(""parseMessageStatus""); String messageStatus = """"; MStatus expResult = MStatus.RETRY; MStatus result = instance.parseMessageStatus(messageStatus); assertEquals(expResult, result); "
1," ms.add(""a""); ms.add(""b""); Iterator<String> iterator = ms.iterator(); iterator.next(); ms.remove(""a""); assertEquals(1, ms.size()); assertTrue(ms.contains(""b"")); try { iterator.remove(); fail(); "," ms.add(""a""); ms.add(""b""); Iterator<String> iterator = ms.iterator(); iterator.next(); ms.remove(""a""); assertEquals(1, ms.size()); assertTrue(ms.contains(""b"")); try { iterator.remove(); fail(); "
0, PackageVersion v = new PackageVersion(); if(v.existManifest()) version = v.getAttribute(PackageVersion.ATTRIBUTE_IMPLEMENTATIONVERSION); input = new BufferedReader(new InputStreamReader(in)); , switch (featureID) { case EclipseActionsPackage.CREATE_PROJECT__PROJECT_NAME: return PROJECT_NAME_EDEFAULT == null ? projectName != null : !PROJECT_NAME_EDEFAULT.equals(projectName); 
1," byte[] b = null; int flags = 0; if (o instanceof String) { b = encodeW1String((String) o); if (StringUtils.isJsonObject((String) o)) { return new CachedData(flags, b, getMaxSize()); "," byte[] b = null; int XXXXX = 0; if (o instanceof String) { b = encodeW1String((String) o); if (StringUtils.isJsonObject((String) o)) { return new CachedData(XXXXX, b, getMaxSize()); "
0, if (DeflaterConstants.DEBUGGING && start != 0) throw new IllegalStateException(); if (bitCount > 0) { buf[end++] = (byte) bits; if (bitCount > 8) buf[end++] = (byte) (bits >>> 8); , PDResources retval = null; COSDictionary resources = (COSDictionary)page.getDictionaryObject( COSName.RESOURCES ); if( resources != null ) { retval = new PDResources( resources ); 
1," StringBuffer response = new StringBuffer(); response.append(challenge); response.append(""-""); response.append(convertToHex(getMD5(challenge+""-""+password))); return response.toString(); "," StringBuffer XXXXX = new StringBuffer(); XXXXX.append(challenge); XXXXX.append(""-""); XXXXX.append(convertToHex(getMD5(challenge+""-""+password))); return XXXXX.toString(); "
0," String oldHeight = height; height = newHeight; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_MASK_ELEMENT__HEIGHT, oldHeight, height)); ", if (di == null) return null; DatanodeInfoProto.Builder builder = DatanodeInfoProto.newBuilder(); if (di.getNetworkLocation() != null) { builder.setLocation(di.getNetworkLocation()); 
0," logger.warn(""Please use getIdleConnectionTestPeriodInMinutes in place of getIdleConnectionTestPeriod. This method has been deprecated.""); return getIdleConnectionTestPeriodInMinutes(); ", Information information = new Information(); information.setDescription(description); information.setName(name); information.setType(type); information.setVersion(version); return information; 
1," dhns.writeLock(); business.moveToGroup(node, nodeGroup); graphVersion.incNodeAndEdgeVersion(); dhns.writeUnlock(); dhns.getEventManager().fireEvent(new NodeEvent(EventType.MOVE_NODES, node, view)); "," dhns.writeLock(); business.moveToGroup(node, nodeGroup); graphVersion.incNodeAndEdgeVersion(); dhns.writeUnlock(); dhns.getEventManager().fireEvent(new NodeEvent(EventType.MOVE_NODES, node, view)); "
0, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(PhoneTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; ," if (name.equals(""counterIncrement"") || name.equals(""counterPeriodLength"") || name.equals(""counterThreshold"")) { BeanPropertiesUtil.setProperty( this, name, GetterUtil.getInteger(value, 0)); "
1, TestSuite testSuite = new TestSuite(); testSuite.addTestSuite(AddPagePGTest.class); testSuite.addTestSuite(AddPortletPGTest.class); testSuite.addTestSuite(TearDownPageTest.class); return testSuite; , TestSuite XXXXX = new TestSuite(); XXXXX.addTestSuite(AddPagePGTest.class); XXXXX.addTestSuite(AddPortletPGTest.class); XXXXX.addTestSuite(TearDownPageTest.class); return XXXXX; 
1," menu.add(MENU_PREFS, MENU_PREFS, MENU_PREFS, ""Preferences""); menu.add(MENU_ABOUT, MENU_ABOUT, MENU_ABOUT, ""About""); menu.add(MENU_QUIT, MENU_QUIT, MENU_QUIT, ""Quit""); return true; "," menu.add(MENU_PREFS, MENU_PREFS, MENU_PREFS, ""Preferences""); menu.add(MENU_ABOUT, MENU_ABOUT, MENU_ABOUT, ""About""); menu.add(MENU_QUIT, MENU_QUIT, MENU_QUIT, ""Quit""); return true; "
0," final double kappa = Math.log(STRIKE / FORWARD); assertEquals(VOL.evaluate(new SVIFormulaData(A, B, RHO, 0, M)), Math.sqrt((A + B * (RHO * (kappa - M) + Math.abs(kappa - M)))), EPS); ", for(int i=0;i<colProperties.length;i++) if (colProperties[i].getColumnName().equals(lookupAttributeName)) { colProperties[i].setHeaderTextHorizontalAlignment(alignement); return; 
0," String name = player.getName(); try { if (sqlDB.checkExists(name)) { if (!sqlDB.checkActivated(name)) { if (sqlDB.forumType.equalsIgnoreCase(""phpbb"")) { sqlDB.savePhpbbUser(name); "," switch (column) { case 0: return ""string""; case 1: return ""category""; case 2: return ""type""; case 3: return ""arguments""; case 4: return ""tooltip""; case 5: return ""doc""; default: return null; "
0," m_props = props; m_rootapp = new JRootApp(); if (m_rootapp.initApp(m_props)) { if (""true"".equals(props.getProperty(""machine.uniqueinstance""))) { try { m_instmanager = new InstanceManager(this); ", if( collection instanceof RandomFeatureAccess){ RandomFeatureAccess random = (RandomFeatureAccess) collection; FeatureId fid = index().get( position); return random.getFeatureMember( fid.getID() ); 
0," logger.log(Level.FINEST, ""Extracting URIs from FTP directory.""); Matcher matcher = DIR.matcher(dir); while (matcher.find()) { String file = matcher.group(1); addExtracted(curi, file); "," final StringBuilder builder = new StringBuilder(); SwingMetawidget metawidget = new SwingMetawidget() { @Override public void repaint() { builder.append( ""repaint\n"" ); super.repaint(); "
1," SfeeTestUtils util = new SfeeTestUtils(); util.loadSfeeInMemory(SERVER_URL, USERNAME, PASSWORD); util.addProject(PROJECT_NAME); util.addTracker(""UnitTestStatistics"", PROJECT_NAME); "," SfeeTestUtils XXXXX = new SfeeTestUtils(); XXXXX.loadSfeeInMemory(SERVER_URL, USERNAME, PASSWORD); XXXXX.addProject(PROJECT_NAME); XXXXX.addTracker(""UnitTestStatistics"", PROJECT_NAME); "
0, Resources resources = getResources(); String[] values = resources.getStringArray(R.array.action_values); int i; for (i = 0; i < values.length; i++) { if (values[i].equals(action)) { break; ," ZonedDateTime referenceDate = DateUtils.getUTCDate(2012, 3, 1); DoubleTimeSeries<ZonedDateTime> fixingTS = new ArrayZonedDateTimeDoubleTimeSeries(new ZonedDateTime[] {DateUtils.getUTCDate(2012, 3, 1)"
0," return new SinkBuilder() { @Override public EventSink build(Context context, String... argv) { Preconditions.checkArgument(argv.length == 0, ""usage: null""); return new NullSink(); ", ModuleDeclaration moduleDeclaration = SourceParserUtil.getModuleDeclaration(module); if (moduleDeclaration instanceof LuaSourceRoot) return (LuaSourceRoot) moduleDeclaration; return null; 
0," if (charAt(value, index + 2) == 'H') { if (contains(value, index + 3, 2, ""OO"", ""ER"", ""EN"", ""UY"", ""ED"", ""EM"")) { if (contains(value, index + 3, 2, ""ER"", ""EN"")) { result.append(""X"", ""SK""); "," assertSame(msg.getDomain(), Domain.REF_RESOLVING); assertEquals(msg.getKeyword(), ""N/A""); assertEquals(msg.getMessage(), message); assertEquals(msg.getInfo(""uri"").textValue(), uri.toString()); "
0," fPrefix2Namespace = getPrefix2NamespaceMap(); String oldValue = fPrefix2Namespace.put(key, value); List<String> ns2pfx = getReverse4(value); if (ns2pfx.contains(key) == false) { ns2pfx.add(key); "," final SqlSession sqlSession = localSqlSession.get(); if (sqlSession == null) throw new SqlSessionException(""Error: Cannot rollback. No managed session is started.""); sqlSession.rollback(force); "
1," logger.debug(LOG_ENTRY, ""hashCode""); int hashCode = getSymbolicName().hashCode() + 31 * getVersionRange().hashCode(); logger.debug(LOG_ENTRY, ""hashCode"", hashCode); return hashCode; "," logger.debug(LOG_ENTRY, ""XXXXX""); int XXXXX = getSymbolicName().XXXXX() + 31 * getVersionRange().XXXXX(); logger.debug(LOG_ENTRY, ""XXXXX"", XXXXX); return XXXXX; "
1," Preconditions.checkNotNull(documentId, ""Null document id""); Preconditions.checkNotNull(operation, ""Null document operation""); this.documentId = documentId; this.operation = operation; "," Preconditions.checkNotNull(documentId, ""Null document id""); Preconditions.checkNotNull(operation, ""Null document operation""); this.documentId = documentId; this.operation = operation; "
1, final TransactionalGraph transactionalGraph = tryGetTransactionalGraph(); if (transactionalGraph != null) { transactionalGraph.stopTransaction(TransactionalGraph.Conclusion.FAILURE); , final TransactionalGraph XXXXX = tryGetTransactionalGraph(); if (XXXXX != null) { XXXXX.stopTransaction(TransactionalGraph.Conclusion.FAILURE); 
0, int c = 0; for (int i = 0; i < inv.length; ++i) { if (inv[i] != null && inv[i].getTypeId() == id && (!JItems.hasData(id) || inv[i].getDurability() == d)) { c += inv[i].getAmount(); ," setLayout( new GridBagLayout() ); final GridBagConstraints theCons = DomGui.getGridBagConstraints( 2 ); add(getSelectionPanel(), theCons); theCons.gridy++; add(getButtonPanel(), theCons); "
1, CTabItem[] items = tabFolder.getItems( ); for ( int i = 0; i < items.length; i++ ) { if ( items[i].getText( ).equals( itemKey ) ) { itemMap.remove( items[i] ); items[i].dispose( ); , CTabItem[] items = tabFolder.getItems( ); for ( int i = 0; i < items.length; i++ ) { if ( items[i].getText( ).equals( itemKey ) ) { itemMap.remove( items[i] ); items[i].dispose( ); 
1," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," EditorCell XXXXX = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, XXXXX, editorContext); return XXXXX; "
1, int result = 0; for (RosterEntry contact : group.getEntries()) { Presence presence = getPresence(contact); if (presence != null && presence.getMode() != Presence.Mode.xa) { result ++; , int XXXXX = 0; for (RosterEntry contact : group.getEntries()) { Presence XXXXX = getPresence(contact); if (XXXXX != null && XXXXX.getMode() != Presence.Mode.xa) { XXXXX ++; 
0," SelectionW3CNative selection = SelectionW3CNative.getSelectionUnsafe(); return selection == null ? null : getNearestElementPosition(selection.focusNode(), selection.focusOffset()); "," StringBuilder result = new StringBuilder(); switch (method) { case SENDMESSAGE: result.append(""sendMessage""); break; case SHUTDOWN: result.append(""shutdown""); break; default: result.append(""??""); "
0, if (obj == null) return false; if (this == obj) return true; if (obj instanceof SchemeSocketFactoryAdaptor) { return this.factory.equals(((SchemeSocketFactoryAdaptor)obj).factory); ," super(TrainingImplementationType.Iterative); if( !(network instanceof MLRegression) ) { throw new TrainingError(""Simulated annealing requires the MLMethod to support MLRegression.""); "
0, if( child == Expression.epsilon || child == Expression.anyString || child == Expression.nullSet || child instanceof OneOrMoreExp ) return child; return unify(new OneOrMoreExp(child)); ," LuaTable t = new LuaTable(); t.set(""p1"", LuaValue.valueOf(1.0f)); assertEquals(LuaUtils.getFromTableByPath(t, ""p1"", 0.0f), 1.0f); assertEquals(LuaUtils.getFromTableByPath(t, ""p2"", 1.0f), 1.0f); "
1, final UimControl control = ((UimField) getEObject()).getControl(); UimFieldFigure figure = (UimFieldFigure) getFigure(); if(control instanceof UimText){ figure.setControl(new UimTextFigure()); , final UimControl control = ((UimField) getEObject()).getControl(); UimFieldFigure figure = (UimFieldFigure) getFigure(); if(control instanceof UimText){ figure.setControl(new UimTextFigure()); 
1, Transferable content = null; for (Transferable trf : CopyPasteManagerEx.getInstanceEx().getAllContents()) { if (trf != null && trf.isDataFlavorSupported(DataFlavor.stringFlavor)) { content = trf; , Transferable XXXXX = null; for (Transferable trf : CopyPasteManagerEx.getInstanceEx().getAllContents()) { if (trf != null && trf.isDataFlavorSupported(DataFlavor.stringFlavor)) { XXXXX = trf; 
1, String[] logicalDrives = Kernel32Util.getLogicalDriveStrings(); assertTrue(logicalDrives.length > 0); for(String logicalDrive : logicalDrives) { assertTrue(logicalDrive.length() > 0); , String[] logicalDrives = Kernel32Util.getLogicalDriveStrings(); assertTrue(logicalDrives.length > 0); for(String logicalDrive : logicalDrives) { assertTrue(logicalDrive.length() > 0); 
0, if (imgAdapter!=null) { for (int i = 0; i <= imgAdapter.getRealCount(); ++i) { ImageZoomView lView = (ImageZoomView) imgGallery.getChildAt(i); if (lView != null) { lView.cleanUp(); lView = null; , synchronized (mCache) { CacheEntry entry = mCache.get(component); if (component == null ||entry == null || entry.icon == null) { if (resolveInfo == null || component == null) { return mDefaultIcon; 
1," return new NamedQueryDefinition( name, query, cacheable, cacheRegion, timeout, lockOptions, fetchSize, flushMode, cacheMode, readOnly, comment, parameterTypes, firstResult, maxResults ); "," return new NamedQueryDefinition( name, query, cacheable, cacheRegion, timeout, lockOptions, fetchSize, flushMode, cacheMode, readOnly, comment, parameterTypes, firstResult, maxResults ); "
1, ShortMessage msg = (ShortMessage) message; int x = msg.getData1() - 12; int y = msg.getChannel(); if (getOrientation() == ORIENTATION_COLUMNS) { x = msg.getChannel(); y = msg.getData1() - 12; , ShortMessage XXXXX = (ShortMessage) message; int XXXXX = XXXXX.getData1() - 12; int XXXXX = XXXXX.getChannel(); if (getOrientation() == ORIENTATION_COLUMNS) { XXXXX = XXXXX.getChannel(); XXXXX = XXXXX.getData1() - 12; 
0," Map<String, OfficialPluginDescription> officialPlugins = PluginManager.officialPlugins; for(OfficialPluginDescription plugin : officialPlugins.values()) { startPluginUpdater(plugin); ", persistExportProperties(); return runOperationInContainer(new IRunnableWithProgress() { public void run(final IProgressMonitor monitor) throws InvocationTargetException { doExport(monitor); 
0," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (i: ""); result.append(i); result.append(')'); return result.toString(); "," super(bundle); this.load(); int size = GameServerTable.getInstance().getServerNames().size(); if (size == 0) { System.out.println(this.getBundle().getString(""noServerNames"")); System.exit(1); "
0, for (AccountPenaltiesEntity accountPenaltyEntity : this.getAccountPenalties()) { if (accountPenaltyEntity.getPenalty().getPenaltyId().equals(penaltyId)) { return accountPenaltyEntity; ," initName(""""); String editorIDValue = """"; if(editorPart instanceof DiagramEditorWithFlyOutPalette) { editorIDValue = ((DiagramEditorWithFlyOutPalette)editorPart).getContributorId(); "
0," if (type == ContentSourceType.HistoryVersion) { return FlexoLocalization.localizedForKey(type.getUnlocalizedStringRepresentation()) + "" "" + (version != null ? version.versionAsString() : ""???""); ", box = Box.createHorizontalBox(); label = new XJURLLabel(new ActionListener() { public void actionPerformed(ActionEvent e) { selectTab(consoleTab.getTabComponent()); clearMessage(); 
0," this.offlineImage = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB); graphics = offlineImage.createGraphics(); setSize(offlineImage.getWidth(), offlineImage.getHeight()); ", Class<IConnectionProvider> connectionProviderClass = protocol.getConnectionProviderClass(); try { Object aux = connectionProviderClass.newInstance(); connectionProvider = (IConnectionProvider) aux; 
0," if (inputAddress.getPort() != -1) return inputAddress; else { return new HopImpl(inputAddress.getHost(), MessageProcessor.getDefaultPort(inputAddress.getTransport()),inputAddress.getTransport()); ", BasicConfigurator.configure(); Logger.getRootLogger().setLevel(Level.TRACE); ModelTestUtils.resetTestDb(); ModelTestUtils.createModel(null); em = ModelTestUtils.createEntityManager(); 
1, if (category instanceof WorkingSetCategory) { WorkingSetCategory wsc = (WorkingSetCategory) category; return IDebugUIConstants.BREAKPOINT_WORKINGSET_ID.equals(wsc.getWorkingSet().getId()); , if (category instanceof WorkingSetCategory) { WorkingSetCategory XXXXX = (WorkingSetCategory) category; return IDebugUIConstants.BREAKPOINT_WORKINGSET_ID.equals(XXXXX.getWorkingSet().getId()); 
1, switch (getDBType(em)) { case db2: assertLockTestSQLs(Select + tableLfName + Where + DB2Lock); break; case derby: case oracle: default: assertLockTestSQLs(Select + tableLfName + Where + ForUpdate); , switch (getDBType(em)) { case db2: assertLockTestSQLs(Select + tableLfName + Where + DB2Lock); break; case derby: case oracle: default: assertLockTestSQLs(Select + tableLfName + Where + ForUpdate); 
0," super.configure(job); String[] cols = job.get(GROUP_COLUMNS, """").split("" ""); columns = new byte[cols.length][]; for(int i = 0; i < cols.length; i++) { columns[i] = Bytes.toBytes(cols[i]); "," if (w == null) throw new NullPointerException(""w can't be null!""); if (RoyalChat.mvc == null) return w.getName(); return RoyalChat.mvc.getMVWorldManager().getMVWorld(w).getColoredWorldString(); "
1," Source source = ruleMediatorConfig.getSource(); if (request.getParameter(""mediator.rule.source.value"") != null) { source.setValue(request.getParameter(""mediator.rule.source.value"")); "," Source source = ruleMediatorConfig.getSource(); if (request.getParameter(""mediator.rule.source.value"") != null) { source.setValue(request.getParameter(""mediator.rule.source.value"")); "
0, ForwardingCDIProvider.reset(); CDI<Object> discovered = CDI.current(); CDI.setCDIProvider(new ForwardingCDIProvider(discovered)); CDI.current(); assertTrue(ForwardingCDIProvider.isCalled); , if (file.isDirectory()) { File[] children = file.listFiles(); if (children != null) { for (int i = 0; i < children.length; i++) { if (!recursiveDelete(children[i])) { return false; 
1, GeneralSettings settings = GeneralSettings.getInstance(); myBrowserPathField.setText(settings.getBrowserPath()); if (settings.isUseDefaultBrowser()) { myUseDefaultBrowser.setSelected(true); , GeneralSettings XXXXX = GeneralSettings.getInstance(); myBrowserPathField.setText(XXXXX.getBrowserPath()); if (XXXXX.isUseDefaultBrowser()) { myUseDefaultBrowser.setSelected(true); 
1," super(model,editorController.getController()); this.editorController = editorController; delegate = new FIBEditableViewDelegate<FIBNumber,JSpinner>(this); model.addObserver(this); "," super(model,editorController.getController()); this.editorController = editorController; delegate = new FIBEditableViewDelegate<FIBNumber,JSpinner>(this); model.addObserver(this); "
0," s = s.trim(); if (isOption(s, ""0"")) return false; try { if (isOption(s, ""1"")) { String p = getArg(s, ""1""); while (p.equals("""")) p = readLine(c, ""Enter cube state: ""); cube = ReidParser.parse(p); "," final String path = query(_FILE_PATH_TO_URI.args(PATH1)); final String uri = new File(PATH1).toURI().toString(); assertEquals(path.toLowerCase(Locale.ENGLISH), uri.toLowerCase(Locale.ENGLISH)); "
0," JFrame frame = new JFrame(""OAuthTestClient""); frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE); frame.getContentPane().add(new OAuthTestClient(frame)); frame.pack(); frame.setVisible(true); "," setText(""end of sentence."" + EXAMPLE_ID); IHyperlink[] hyperlinks = detectHyperlinks(); assertEquals(1, hyperlinks.length); assertEquals(EXAMPLE_ID, hyperlinks[0].getHyperlinkText()); "
1, final SourceWrapper wrapper = (SourceWrapper)myFileTypeComboBox.getSelectedItem(); if (wrapper != null) { return wrapper.myFileType != null ? wrapper.myFileType : wrapper.myExtension; , final SourceWrapper XXXXX = (SourceWrapper)myFileTypeComboBox.getSelectedItem(); if (XXXXX != null) { return XXXXX.myFileType != null ? XXXXX.myFileType : XXXXX.myExtension; 
1, TestSuite testSuite = new TestSuite(); testSuite.addTestSuite(AddPageTest.class); testSuite.addTestSuite(AddPortletTest.class); testSuite.addTestSuite(DeletePageTest.class); return testSuite; , TestSuite XXXXX = new TestSuite(); XXXXX.addTestSuite(AddPageTest.class); XXXXX.addTestSuite(AddPortletTest.class); XXXXX.addTestSuite(DeletePageTest.class); return XXXXX; 
1," Log.d(TAG, ""Create Database.""); db.execSQL(StatusTable.CREATE_TABLE); db.execSQL(MessageTable.CREATE_TABLE); db.execSQL(FollowTable.CREATE_TABLE); db.execSQL(UserInfoTable.CREATE_TABLE); "," Log.d(TAG, ""Create Database.""); db.execSQL(StatusTable.CREATE_TABLE); db.execSQL(MessageTable.CREATE_TABLE); db.execSQL(FollowTable.CREATE_TABLE); db.execSQL(UserInfoTable.CREATE_TABLE); "
0, Component pane = ((RootPaneContainer) getTopLevelAncestor()).getGlassPane(); if (pane != null && pane instanceof SpringGlassPane) { SpringGlassPane cc = (SpringGlassPane) pane; cc.hideHint(); ," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (group: ""); result.append(group); result.append(')'); return result.toString(); "
0, TransitionMonitorProcessor transitionMonitorProcessor = new TransitionMonitorProcessor(); transitionMonitorProcessor.setTransitionMonitor(new TransitionMonitor()); return transitionMonitorProcessor; , this.plugin = plugin; factories = new LinkedList<MechanicFactory<? extends Mechanic>>(); triggersManager = new TriggerBlockManager(); watchBlockManager = new WatchBlockManager(); 
1, URL urlSend = null; InputStream in = null; try{ urlSend = new URL(url); HttpURLConnection connection = (HttpURLConnection) urlSend.openConnection(); in = connection.getInputStream(); , URL XXXXX = null; InputStream XXXXX = null; try{ XXXXX = new URL(url); HttpURLConnection XXXXX = (HttpURLConnection) XXXXX.openConnection(); XXXXX = XXXXX.getInputStream(); 
1, for(Effect effect : abnormalEffectMap.values()) { if(value == 0) break; if(effect.getSkillType() == skillType) { effect.endEffect(); abnormalEffectMap.remove(effect.getStack()); value--; , for(Effect effect : abnormalEffectMap.values()) { if(value == 0) break; if(effect.getSkillType() == skillType) { effect.endEffect(); abnormalEffectMap.remove(effect.getStack()); value--; 
0, List<ByteBuffer> databufs = new ArrayList<ByteBuffer>(); for (ByteBuffer buf : this.databuffers) { if (request.getBuf().hasRemaining()) { try { request.getBuf().put(buf); this.returnBuffer(buf); ," Intent modIntent = new Intent(super.getIntent()); modIntent.putExtra(EXTRA_SHOW_FRAGMENT, SyncSettings.class.getName()); modIntent.putExtra(EXTRA_NO_HEADERS, true); return modIntent; "
1," String name = getFile().getName(); if (name.endsWith(ArchiveFileConstants.OCCUPIED_SUFFIX)) { name = name.substring(0, name.length() - ArchiveFileConstants.OCCUPIED_SUFFIX.length()); "," String XXXXX = getFile().getName(); if (XXXXX.endsWith(ArchiveFileConstants.OCCUPIED_SUFFIX)) { XXXXX = XXXXX.substring(0, XXXXX.length() - ArchiveFileConstants.OCCUPIED_SUFFIX.length()); "
1," if (params != null) { return new BestMatchSpec( (String []) params.getParameter(CookieSpecPNames.DATE_PATTERNS), params.getBooleanParameter(CookieSpecPNames.SINGLE_COOKIE_HEADER, false)); "," if (params != null) { return new BestMatchSpec( (String []) params.getParameter(CookieSpecPNames.DATE_PATTERNS), params.getBooleanParameter(CookieSpecPNames.SINGLE_COOKIE_HEADER, false)); "
0," return new MyValidityState(myTarget, mySdkOsPath, myOutputJarOsPath, myClassFilesDirs, myExternalJars, myProguardConfigFiles, myIncludeSystemProguardFile, myLogsDirectoryOsPath); "," View v = view; if (v == null) { LayoutInflater vi = (LayoutInflater) getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE); v = (View) vi.inflate(R.layout.stock_item, null); "
1, super.onCreate(icicle); setContentView(R.layout.list_recycler_profiling); String values[] = new String[1000]; for (int i = 0; i < 1000; i++) { values[i] = ((Integer) i).toString(); , super.onCreate(XXXXXcXXXXXcle); setContentVXXXXXew(R.layout.lXXXXXst_recycler_profXXXXXlXXXXXng); StrXXXXXng values[] = new StrXXXXXng[1000]; for (XXXXXnt XXXXX = 0; XXXXX < 1000; XXXXX++) { values[XXXXX] = ((Integer) XXXXX).toStrXXXXXng(); 
1," if (active) switch (color) { case Red: return ""Red Pipe Signal On""; case Blue: return ""Blue Pipe Signal On""; case Green: return ""Green Pipe Signal On""; case Yellow: return ""Yellow Pipe Signal On""; "," if (active) switch (color) { case Red: return ""Red Pipe Signal On""; case Blue: return ""Blue Pipe Signal On""; case Green: return ""Green Pipe Signal On""; case Yellow: return ""Yellow Pipe Signal On""; "
1, MTextInsertAncestor lTextInsertAncestor = new MTextInsertAncestor(pName); this.eInlineText_ParamInsert_TextInsert_TextInsertAncestor .add(lTextInsertAncestor); return lTextInsertAncestor; , MTextInsertAncestor XXXXX = new MTextInsertAncestor(pName); this.eInlineText_ParamInsert_TextInsert_TextInsertAncestor .add(XXXXX); return XXXXX; 
0, if (!event.isCancelled()) { if (event.getBlock().getType() == Material.PORTAL) { if (!(event.getBlock().getRelative(BlockFace.DOWN).getType() == Material.AIR)) { event.setCancelled(true); ," fCombo.removeSelectionListener(selectionListener); Object listener= fModifyListeners.get(selectionListener); if (listener instanceof Listener) fCombo.removeListener(SWT.Modify, (Listener)listener); "
1," final int priority = ((Integer) event.widget.getData(""Priority"")).intValue(); Utils.getOffOfSWTThread(new AERunnable() { public void runSupport() { changePriority(priority, data_sources); "," final int XXXXX = ((Integer) event.widget.getData(""Priority"")).intValue(); Utils.getOffOfSWTThread(new AERunnable() { public void runSupport() { changePriority(XXXXX, data_sources); "
0, TestSuite testSuite = new TestSuite(); testSuite.addTestSuite(AddPageNUTest.class); testSuite.addTestSuite(AddPortletNUTest.class); testSuite.addTestSuite(TearDownPageTest.class); return testSuite; ," String oldDESC = dESC; dESC = newDESC; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, RifPackage.ATTRIBUTEVALUEXMLDATA__DESC, oldDESC, dESC)); "
0," String oldFilter = filter; filter = newFilter; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_MASK_ELEMENT__FILTER, oldFilter, filter)); ", if (DefaultCodeFormatterConstants.TRUE.equals(getCoreFormatterOption(DefaultCodeFormatterConstants.FORMATTER_INDENT_SWITCHSTATEMENTS_COMPARE_TO_CASES))) { return prefBlockIndent(); 
1," CallbackHandler ch = new CallbackHandlerImpl(creds, securitySession, new ProviderRegistryImpl(new FallbackPrincipalProvider()), ""admin"", ""anonymous""); return new JAASAuthContext(appName, ch, null); "," CallbackHandler ch = new CallbackHandlerImpl(creds, securitySession, new ProviderRegistryImpl(new FallbackPrincipalProvider()), ""admin"", ""anonymous""); return new JAASAuthContext(appName, ch, null); "
1," boolean ok = true; File ldifFile = new File( ldifFileBrowserWidget.getFilename() ); if ( """".equals( ldifFileBrowserWidget.getFilename() ) ) { setErrorMessage( null ); ok = false; "," boolean XXXXX = true; File XXXXX = new File( XXXXXBrowserWidget.getFilename() ); if ( """".equals( XXXXXBrowserWidget.getFilename() ) ) { setErrorMessage( null ); XXXXX = false; "
1, final int mask = data.length - 1; boolean result = false; if (element == null) { for (int i = head; i != tail; i = (i + 1) & mask) { if (data[i] == null) { deleteIndex(i); result = true; break; , fXXXXXnal XXXXXnt XXXXX = data.length - 1; boolean XXXXX = false; XXXXXf (element == null) { for (XXXXXnt XXXXX = head; XXXXX != taXXXXXl; XXXXX = (XXXXX + 1) & XXXXX) { XXXXXf (data[XXXXX] == null) { deleteIndex(XXXXX); XXXXX = true; break; 
1, int k = 0; for (int neighbor : graph.getNodes()[nodeIndex].getOutgoingEdges()) { if (communities.getCommunityOfNode(nodeIndex).equals( communities.getCommunityOfNode(neighbor))) { k++; , int XXXXX = 0; for (int neighbor : graph.getNodes()[nodeIndex].getOutgoingEdges()) { if (communities.getCommunityOfNode(nodeIndex).equals( communities.getCommunityOfNode(neighbor))) { XXXXX++; 
1," KeyValuePair pair = visibleItems.get(row); switch(col) { case 0: return pair.getKey(); case 1: return pair.getValue(); default: throw new IllegalArgumentException(tr(""unexpected column number {0"," KeyValuePair XXXXX = visibleItems.get(row); switch(col) { case 0: return XXXXX.getKey(); case 1: return XXXXX.getValue(); default: throw new IllegalArgumentException(tr(""unexpected column number {0"
1," String eyeString = eye == Eye.LEFT ? ""left"" : ""right""; File dir = new File(outputDir, frameName + ""_"" + eyeString); return new File(dir, createImageSequenceFileName(animation, frame, frameName)); "," String XXXXX = eye == Eye.LEFT ? ""left"" : ""right""; File XXXXX = new File(outputDir, frameName + ""_"" + XXXXX); return new File(XXXXX, createImageSequenceFileName(animation, frame, frameName)); "
0," if (dateFormatterFactory == null) { AbstractFormatter fmt = new DateFormatter(DateFormat.getDateTimeInstance()); dateFormatterFactory = new DefaultFormatterFactory(fmt, fmt, fmt); "," if (this.offset < this.page_limit) return; int pnum = this.offset / Flash.BYTES_PER_PAGE; Flash.readPage(this.buff, this.first_page + pnum); this.page_limit = (pnum + 1) * Flash.BYTES_PER_PAGE; "
1, if (container != null) { container.setOwner(this); container.setBindingAttribute(EditionActionBindingAttribute.container); container.setBindingDefinition(getContainerBindingDefinition()); , if (container != null) { container.setOwner(this); container.setBindingAttribute(EditionActionBindingAttribute.container); container.setBindingDefinition(getContainerBindingDefinition()); 
0," logger.info(""CheckCatchupTask running""); int windowSize = ProcessDescriptor.getInstance().windowSize; if (storage.getFirstUncommitted() + 600 >= storage.getLog().getNextId()) { return; "," super(aclient, null, remotedir); this.remotedir = remotedir; try { this.getClient().changeWorkingDirectory(this.remotedir); this.setCurpwd(this.getClient().printWorkingDirectory()); "
1," final DependencyGraph graph = new DependencyGraph(""one start""); graph.addDependencyNode(createDependencyNode(null, null)); graph.addDependencyNode(createDependencyNode(start, null)); return graph; "," final DependencyGraph XXXXX = new DependencyGraph(""one start""); XXXXX.addDependencyNode(createDependencyNode(null, null)); XXXXX.addDependencyNode(createDependencyNode(start, null)); return XXXXX; "
0," JPanel panel = new JPanel(); panel.setPreferredSize(new Dimension(700, 400)); panel.setLayout(new BorderLayout()); panel.add(createTabbedPane(), BorderLayout.CENTER); return panel; ", List names = new ArrayList(); for (Iterator iter = datasets.values().iterator(); iter.hasNext();) { DatasetConfig dset = (DatasetConfig) iter.next(); names.add(dset.getInternalName()); 
0," synchronized (MAP) { Storage json = JSonStorage.getPlainStorage(string); JSonWrapper ret = MAP.get(json); if (ret == null) { ret = new JSonWrapper(json); convert(string, ret); MAP.put(json, ret); "," Map<String, Filter> map = filterMap.remove(queryId); if (map == null ||map.isEmpty()) return; Filter f = new QueryFilter() { @Override public String getName() { return ""Filter Set""; "
0," EntityBuilder.addValue(cluster, ""map_sheet"", """"); EntityBuilder.addValue(cluster, ""map_sheet"", ""567""); ValidationResultFlag result = cluster.validateMinCount(""map_sheet""); assertTrue(result.isOk()); ", DoubleMatrix1D mat = (DoubleMatrix1D)arg; for (int row = size()-1; row >= 0; row--) if (Math.abs(mat.get(row)-get(row))/Math.abs(mat.get(row)) > 0.0001) return false; return true; 
0," super(name); this.period = period; setUncaughtExceptionHandler(new UncaughtExceptionHandler() { @Override public void uncaughtException(Thread t, Throwable e) { log.warn(""Uncaught exception"", e); "," this.canvas = canvas; this.ipAddress = ipAddress; hostName = ipAddress; if(Settings.ENABLE_NAMES) new HostNameLookupThread(ipAddress, this); x = Math.random(); y = Math.random(); paint(); "
0," initComponents(); jComboBoxMeMenu.setModel(new javax.swing.DefaultComboBoxModel(new String[] {""User: "" + UserManagement.getCurrentUser().getName(), ""Profile Home"", ""Edit Profile"", ""Logout"" "," grabLayers = """"; grabStyles = """"; int countLayers = 0; if (Main.pref.getBoolean(""cadastrewms.layerWater"", true)) { grabLayers += LAYER_WATER + "",""; grabStyles += STYLE_WATER + "",""; countLayers++; "
1, if (selection instanceof IStructuredSelection && ((IStructuredSelection)selection).getFirstElement() instanceof EObject) { return (EObject) (((IStructuredSelection) selection).getFirstElement()); , if (selection instanceof IStructuredSelection && ((IStructuredSelection)selection).getFirstElement() instanceof EObject) { return (EObject) (((IStructuredSelection) selection).getFirstElement()); 
0, try { if (_otsARHandle == null) { _otsARHandle = com.arjuna.ArjunaOTS.OTSAbstractRecordHelper.narrow(_resourceHandle); lastRecord = RecordType.LASTRESOURCE == _otsARHandle.type_id(); ," StringBuilder sb = new StringBuilder(); sb.append(""Current config: ""); if( components != null ) { for(String c : components.keySet()){ sb.append(components.get(c).toString()); sb.append("",""); "
0," _header = new byte[8]; _data = new byte[0]; LittleEndian.putShort(_header, 0, (short)0x10); LittleEndian.putShort(_header, 2, (short)getRecordType()); LittleEndian.putInt(_header, 4, _data.length); ", int prime = 97; int startInclusiveHash = startInclusive ? prime : 0; int endInclusiveHash = endInclusive ? prime : 0; int i = 0; if (start != null) { i = start.hashCode() + startInclusiveHash; 
0," Object value = this.getValue(PeriodFeature.PATH, PeriodFeature.KEY); String periodString = (String)value; System.out.println(""Getting period.\nPeriod is : "" + periodString); return periodString; ", QuestionGroupInstance questionGroupInstance = questionGroupInstanceDao.getDetails(questionGroupInstanceId); return questionnaireMapper.mapToQuestionGroupInstanceDetail(questionGroupInstance); 
0," ArgumentChecker.notNull(uniqueId, ""uniqueId""); validateUniqueId(uniqueId); if (_store.remove(uniqueId.getObjectId()) == null) { throw new DataNotFoundException(""Security not found: "" + uniqueId); "," sessionId = inResult; establishingSession = false; log.fine(""Session established: "" + sessionId); if (appEstablishSessionCallback != null) { try { appEstablishSessionCallback.onSuccess(inResult); "
1," List<EditorComponent> allEditorComponents = EditorComponentUtil.getAllEditorComponents(myFileEditorManager, true); for (EditorComponent component : allEditorComponents) { component.repaint(); "," List<EditorComponent> allEditorComponents = EditorComponentUtil.getAllEditorComponents(myFileEditorManager, true); for (EditorComponent component : allEditorComponents) { component.repaint(); "
1," MapSqlParameterSource parameterSource = getCustomMapSqlParameterSource() .addValue(""user_id"", id); return getCallsHandler().executeRead(""GetUserByUserId"", DbUserRowMapper.instance, parameterSource); "," MapSqlParameterSource XXXXX = getCustomMapSqlParameterSource() .addValue(""user_id"", id); return getCallsHandler().executeRead(""GetUserByUserId"", DbUserRowMapper.instance, XXXXX); "
1, this.tableName = pe.getProtectionElementDescription(); this.attributeName = pe.getAttribute(); this.attributeValue = pe.getProtectionElementName(); this.roles = new HashSet<String>(); , this.tableName = pe.getProtectionElementDescription(); this.attributeName = pe.getAttribute(); this.attributeValue = pe.getProtectionElementName(); this.roles = new HashSet<String>(); 
1," scrollPane.setBorder(BorderFactory.createEmptyBorder()); installUIDelegates(scrollPane); scrollPane.setCorner(JScrollPane.LOWER_RIGHT_CORNER, createScrollPaneCorner()); return scrollPane; "," scrollPane.setBorder(BorderFactory.createEmptyBorder()); installUIDelegates(scrollPane); scrollPane.setCorner(JScrollPane.LOWER_RIGHT_CORNER, createScrollPaneCorner()); return scrollPane; "
0," assert (useQuantization); stack.vectors.push(); try { int curNodeSubPart = -1; Vector3f[] triangleVerts = new Vector3f[] { stack.vectors.get(), stack.vectors.get(), stack.vectors.get() "," if (null == framework.getService(SERVICE_NAME)) { final NodeExecutorService service = new NodeExecutorService(framework); framework.setService(SERVICE_NAME, service); return service; "
0,"; Intent i = new Intent(ctx,MITCoursesListsSliderActivity.class); i.putExtra(MITCoursesListsSliderActivity.KEY_GROUP, MITCoursesListsSliderActivity.GROUP_11); ctx.startActivity(i); "," DialogBox dialogBox = new DialogBox(_parent, ""Add Product""); AddProductView dialogView = new AddProductView(_parent, dialogBox, getBarcode()); dialogBox.display(dialogView, false); "
1, final StackTraceElement element = getCallingClass(); String bundle = element.getClassName(); if (resourceBundle.get() == null) { try { resourceBundle.set(ResourceBundle.getBundle(bundle)); , final StackTraceElement XXXXX = getCallingClass(); String XXXXX = XXXXX.getClassName(); if (resourceBundle.get() == null) { try { resourceBundle.set(ResourceBundle.getBundle(XXXXX)); 
1," if (identity.isLoggedIn()) { event.setOwner(em.createQuery(""select b from Person b where b.id=?"",Person.class).setParameter(1, identity.getUser().getId()).getResultList().get(0)); "," if (identity.isLoggedIn()) { event.setOwner(em.createQuery(""select b from Person b where b.id=?"",Person.class).setParameter(1, identity.getUser().getId()).getResultList().get(0)); "
1," BookmarkRecord local = BookmarkHelpers.createBookmarkInMobileFolder1(); BookmarkRecord remote = BookmarkHelpers.createBookmarkInMobileFolder2(); remoteNewerTimeStamp(local, remote); "," BookmarkRecord XXXXX = BookmarkHelpers.createBookmarkInMobileFolder1(); BookmarkRecord XXXXX = BookmarkHelpers.createBookmarkInMobileFolder2(); XXXXXNewerTimeStamp(XXXXX, XXXXX); "
1," String label = ((ExternalInput)object).getRef(); return label == null || label.length() == 0 ? getString(""_UI_ExternalInput_type"") : getString(""_UI_ExternalInput_type"") + "" "" + label; "," String XXXXX = ((ExternalInput)object).getRef(); return XXXXX == null || XXXXX.length() == 0 ? getString(""_UI_ExternalInput_type"") : getString(""_UI_ExternalInput_type"") + "" "" + XXXXX; "
0," double prefHeight = WIDTH < (HEIGHT * 0.7192982456140351) ? (WIDTH * 1.3902439024390243) : HEIGHT; double prefWidth = prefHeight * 0.7192982456140351; super.setPrefSize(prefWidth, prefHeight); "," for( String fname : _path.list() ) { try { if( fname.length() == ""012345.barc"".length() ) { int fnum = Integer.parseInt( fname.substring( 0, 6 ) ); _maxFnum = Math.max( _maxFnum, fnum ); "
0," return addOrUpdateInternal(fi.name, fi.number, fi.isIndexed(), fi.hasVectors(), fi.omitsNorms(), fi.hasPayloads(), fi.getIndexOptions(), fi.getDocValuesType(), fi.getNormType()); ", File parentDir = new File(location); if (parentDir.isDirectory()) { String[] entries = parentDir.list(); if (entries.length == 1 && entries[0].equals(dirNameToCheck)) { return true; 
0," final ItemStack itemTurner = new ItemStack(BunyanItem.logTurner); new ItemStack(Item.stick, 5); Proxy.addRecipe(itemTurner, new Object[] { ""ss"", "" s"", ""ss"", Character.valueOf('s'), Item.stick "," this.lock.lock (); try { this.disposed = true; logger.info ( ""Waiting for all resources to be given back"" ); while ( !this.wrappers.isEmpty () ) { try { this.wrapperCondition.await (); "
1, checkedActivate(1); mWasHidden = true; mPuzzlesToSolve = 0; mNextProcessingTime = CurrentTimeUTC.getInMillis() + PROCESSING_INTERVAL; mNextDisplayTime = Long.MAX_VALUE; storeAndCommit(); , checkedActivate(1); mWasHidden = true; mPuzzlesToSolve = 0; mNextProcessingTime = CurrentTimeUTC.getInMillis() + PROCESSING_INTERVAL; mNextDisplayTime = Long.MAX_VALUE; storeAndCommit(); 
0," int start = s.indexOf(""--""); if (start >= 0){ int i=start; StringBuffer buf = new StringBuffer(s); while (i < s.length() && buf.charAt(i) == '-') { buf.replace(i, i+1, ""=""); i += 1; "," OJPathName returnType = StdlibMap.javaBagType; String myDefault = StdlibMap.javaBagImplType.getLast(); String operName = ""bagFlatten""; makeFlatten(returnType, myDefault, operName, ""Bags""); "
1," if (x instanceof IntegerVector && y instanceof IntegerVector) return dotProduct((IntegerVector)x, (IntegerVector)y); else return dotProduct(Vectors.asDouble(x), Vectors.asDouble(y)); "," if (x instanceof IntegerVector && y instanceof IntegerVector) return dotProduct((IntegerVector)x, (IntegerVector)y); else return dotProduct(Vectors.asDouble(x), Vectors.asDouble(y)); "
1," Date latestObsDate = null; List<Obs> obsList = getMatchingObs(person, concept, value, null, null, null); if (obsList.size() > 0) { latestObsDate = obsList.get(obsList.size() - 1).getDateCreated(); "," Date XXXXX = null; List<Obs> obsList = getMatchingObs(person, concept, value, null, null, null); if (obsList.size() > 0) { XXXXX = obsList.get(obsList.size() - 1).getDateCreated(); "
1," ArrayList<CraftrWindow> w; if(isConfig) w=is.windows; else w=gs.windows; try { synchronized(w) { if(w.size()>0) for(CraftrWindow cw : w) { if(!isConfig && gs.obstructedWindow(cw,mx,my)) { "," ArrayList<CraftrWindow> w; if(isConfig) w=is.windows; else w=gs.windows; try { synchronized(w) { if(w.size()>0) for(CraftrWindow cw : w) { if(!isConfig && gs.obstructedWindow(cw,mx,my)) { "
1," if(event.getBlock().getType().compareTo(Material.WOOL) == 0 && plugin.isPlacing()){ if(event.getBlock().getData() == 11){ plugin.getBlockMap().put(event.getBlock().getLocation(), ""BLUE""); "," if(event.getBlock().getType().compareTo(Material.WOOL) == 0 && plugin.isPlacing()){ if(event.getBlock().getData() == 11){ plugin.getBlockMap().put(event.getBlock().getLocation(), ""BLUE""); "
1," horizontalScrollCount = horizontalScrollCount < 0 ? horizontalScrollCount - 1 : -1; if (horizontalScrollCount % 5 == 0) { doAction(ChromeArea.SWITCH_TO_PREVIOUS_TAB); Log.d(""scroll left""); "," horizontalScrollCount = horizontalScrollCount < 0 ? horizontalScrollCount - 1 : -1; if (horizontalScrollCount % 5 == 0) { doAction(ChromeArea.SWITCH_TO_PREVIOUS_TAB); Log.d(""scroll left""); "
1," EncryptionParameters params = EncryptionParameters.APR2011_439; assertEquals(params, params.clone()); params = EncryptionParameters.APR2011_439_FAST; assertEquals(params, params.clone()); "," EncryptionParameters XXXXX = EncryptionParameters.APR2011_439; assertEquals(XXXXX, XXXXX.clone()); XXXXX = EncryptionParameters.APR2011_439_FAST; assertEquals(XXXXX, XXXXX.clone()); "
0," String expr = ""columnName BETWEEN columnValue1 AND columnValue2 ""; Assert.assertThat(new BetweenOperand(""columnName"", ""columnValue1"", ""columnValue2"").toString(), IsEqual.equalTo(expr)); "," doc = new Document(""def m1(): \n"" + "" def m2(): \n"" + "" print a \n"" + "" a = 10 ""); analyzer = new OccurrencesAnalyzer(); msgs = analyzeDoc(); printMessages(msgs); assertEquals(0, msgs.length); "
1, ReplyEnvelope resultEnvelope = requestSender.send(new GetChannelNumberCommand()); resultEnvelope.checkForRuntimeException(); return ((NumberReplyEnvelope)resultEnvelope).getIntContents(); , ReplyEnvelope XXXXX = requestSender.send(new GetChannelNumberCommand()); XXXXX.checkForRuntimeException(); return ((NumberReplyEnvelope)XXXXX).getIntContents(); 
0, for (QueueConsumer consumer : queueConsumers.values()) { consumer.shutdown(); Subscription subscription = (Subscription) consumer; if (!subscription.isDurable()) { deleteSubscriberQueue(consumer); ," InternationalString result = ((DefaultTemporalReferenceSystem) temporalReferenceSystem1).getScope(); assertEquals(((DefaultTemporalReferenceSystem) temporalReferenceSystem1).getScope(), result); "
1, for (Bundle bundle : bundleContext.getBundles()) { if (symbolicName.equals(bundle.getSymbolicName()) && version.equals(bundle.getVersion().toString())){ return bundle.getBundleId(); , for (Bundle bundle : bundleContext.getBundles()) { if (symbolicName.equals(bundle.getSymbolicName()) && version.equals(bundle.getVersion().toString())){ return bundle.getBundleId(); 
0," int maxNameLength = 0; int maxArgsLength = 0; for (Command cmd : commands) { maxNameLength = Math.max(maxNameLength, cmd.name.length()); maxArgsLength = Math.max(maxArgsLength, cmd.args.length()); "," return (a instanceof IntegerVector && b instanceof IntegerVector) ? cosineSimilarity((IntegerVector)a, (IntegerVector)b) : cosineSimilarity(Vectors.asDouble(a), Vectors.asDouble(b)); "
1," super(""Inject a payload into Zend Java Bridge"", "" * Zend Server Java Bridge Design Flaw Remote Code Execution Vulnerability\r\n"" + "" * \r\n"" + "" * <http: "" * <http: "" * <http: "" * <http: "," super(""Inject a payload into Zend Java Bridge"", "" * Zend Server Java Bridge Design Flaw Remote Code Execution Vulnerability\r\n"" + "" * \r\n"" + "" * <http: "" * <http: "" * <http: "" * <http: "
0, String tracField = t.$(fieldName); if (tracField != null && tracField.trim().length() != 0) { try { Date date = format.parse(tracField); return date.getTime()+TimeZone.getDefault().getRawOffset(); ," if (sizeGuess > downloadBuffer.capacity()) { throw new RuntimeException(String.format(""The file %s is too large to be downloaded by FML - the coremod is invalid"", target.getName())); "
0," return ""Unexpected response PDU ["" + responsePdu.getClass().getName() + ""] [error: 0x"" + HexUtil.toHexString(responsePdu.getCommandStatus()) + "" \"""" + responsePdu.getResultMessage() + ""\""]""; "," OptionSet options = parser.parse( ""-f"" ); assertOptionDetected(options, ""f""); assertEquals( emptyList(), options.valuesOf( ""f"" ) ); assertEquals( emptyList(), options.nonOptionArguments() ); "
0," if (name.equalsIgnoreCase(SINGLE.name)) return SINGLE; else if (name.equalsIgnoreCase(BOTH.name)) return BOTH; else throw new IllegalArgumentException(""Invalid HeaderStyle name "" + name); ", PointPlacement pointp = new PointPlacementImpl(filterFactory); pointp.setAnchorPoint(anchorPoint); pointp.setDisplacement(displacement); pointp.setRotation(rotation); return pointp; 
0," character.setSpeed(character.getHorizontalSpeed() * (double) -1, character.getVerticalSpeed() * (double) -1); character.setX(character.getOldX()); character.setY(character.getOldY()); ", switch (featureID) { case AssemblyPackage.STATUS_SCHEMA__NODE: if (resolve) return getNode(); return basicGetNode(); case AssemblyPackage.STATUS_SCHEMA__ELEMENTS: return getElements(); 
0," if(event.getPlugin().getDescription().getName().equals(""iConomy"") && plugin.getIconomyState()) { iconomy = (iConomy)event.getPlugin(); System.out.println(""[Blacksmith] attached to iConomy.""); ", sPlacesChoice.setText( String.valueOf( fmtPattern.getDecPlaces( ) ) ); sRoundgingChoice.select( FormatNumberPattern.getRoundingModeIndexByValue( fmtPattern.getRoundingMode( ) ) ); 
0," String stringValue = String.valueOf(value); if (StringUtils.length(stringValue) > 2048) { return ValueAndError.withError(""qcadooView.validate.field.error.invalidLength"", String.valueOf(2048)); "," SelectionW3CNative selection = SelectionW3CNative.getSelectionUnsafe(); return selection == null ? null : getNearestElementPosition(selection.focusNode(), selection.focusOffset()); "
0, if (!isInitialized()) { initDelegateInjectionPoint(); super.initialize(environment); initDecoratedTypes(); initDelegateBindings(); initDelegateType(); checkDelegateType(); checkAbstractMethods(); ," assert Arrays.asList(1).equals(getAuditReader().getRevisions(ContainedEntity.class, cce1_id)); assert Arrays.asList(1).equals(getAuditReader().getRevisions(SetEntity.class, cse1_id)); "
0," ViolatedAssumptionTest.watchedLog = new StringBuilder(); runClasses(ViolatedAssumptionTest.class); assertThat(ViolatedAssumptionTest.watchedLog.toString(), is(""starting finished "")); ", typeCombo.setText(toString(data.getType())); hostText.setText(toString(data.getHost())); if (data.getPort() != -1) { portText.setText(toString(Integer.toString(data.getPort()))); 
1, Value myobj = null; if(objnode.isBlank()){ AnonId id = objnode.getBlankNodeId(); String objid = id.toString(); if(objid.startsWith(s_bnodePrefix)){ myobj = (URI) myFactory.createURI(objid); , Value XXXXX = null; if(objnode.isBlank()){ AnonId XXXXX = objnode.getBlankNodeId(); String objXXXXX = XXXXX.toString(); if(objXXXXX.startsWith(s_bnodePrefix)){ XXXXX = (URI) myFactory.createURI(objXXXXX); 
1," CSTAExtendedDeviceID.encode(this.deviceOnCall, memberStream); CSTAConnectionID.encode(this.callIdentifier, memberStream); LocalConnectionState.encode(this.localConnectionState, memberStream); "," CSTAExtendedDeviceID.encode(this.deviceOnCall, memberStream); CSTAConnectionID.encode(this.callIdentifier, memberStream); LocalConnectionState.encode(this.localConnectionState, memberStream); "
0, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(Social6011LatestTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; ," SwingUtilities.invokeLater(new Runnable() { public void run() { if (contentTitle == null) { setName(NbBundle.getMessage(GitVersioningTopComponent.class, ""CTL_Versioning_TopComponent_Title"")); "
1," if(manualEntry != null) return manualEntry; try { JSONObject locationObject = new JSONObject(); if(!TextUtils.isEmpty(locationName)){ locationObject.put(TaskRabbitActivity.CITY_NAME, locationName); "," if(manualEntry != null) return manualEntry; try { JSONObject XXXXX = new JSONObject(); if(!TextUtils.isEmpty(locationName)){ XXXXX.put(TaskRabbitActivity.CITY_NAME, locationName); "
0, ATDeviceDetector[] detectors = getDetectors(); boolean completed = true; do { for (ATDeviceDetector portDetector : detectors) { if(!portDetector.isFinished()) { completed = false; , if ( propDefn != null ) return propDefn.getName( ); if ( path.isEmpty( ) ) return null; Step topStep = path.get( path.size( ) - 1 ); propDefn = topStep.stepPropDefn; return propDefn.getName( ); 
1," if (screenDensity == -1) { DisplayMetrics displayMetrics = context.getResources().getDisplayMetrics(); try { screenDensity = DisplayMetrics.class.getField(""densityDpi"").getInt(displayMetrics); "," if (screenDensity == -1) { DisplayMetrics XXXXX = context.getResources().getDisplayMetrics(); try { screenDensity = DisplayMetrics.class.getField(""densityDpi"").getInt(XXXXX); "
0," Object o = null; EnumSyntax[] et = getEnumValueTable(e); if (et != null) { for (int i = 0, ii = et.length; i < ii; i++) { if (et[i] != null && et[i].toString().equals(eval)) { o = et[i]; break; ", TimeStatistics st = new TimeStatistics(System.currentTimeMillis()); TimeStatistics previous; if(timeStatistics.size() > 0) { previous = timeStatistics.get(timeStatistics.size() - 1); 
1, AppWidgetManager appWidgetManager = AppWidgetManager.getInstance(context); int[] appWidgetIds = appWidgetManager.getAppWidgetIds(THIS_APPWIDGET); return (appWidgetIds.length > 0); , AppWidgetManager XXXXX = AppWidgetManager.getInstance(context); int[] appWidgetIds = XXXXX.getAppWidgetIds(THIS_APPWIDGET); return (appWidgetIds.length > 0); 
0, PropertyChangeListener l = new PropertyChangeListener() { public void propertyChange(PropertyChangeEvent evt) { SwingUtilities.invokeLater(new Runnable() { public void run() { notifyListeners(); ," return new Update(this, statementLocator, statementRewriter, statementBuilder, sql, new ConcreteStatementContext(globalStatementAttributes), log, timingCollector, foreman, containerFactoryRegistry); "
0," x = one; final AtomicReferenceFieldUpdater<AtomicReferenceFieldUpdaterTest, Integer>a; try { a = AtomicReferenceFieldUpdater.newUpdater(AtomicReferenceFieldUpdaterTest.class, Integer.class, ""x""); "," System.err.println(""Configuration error: "" + text); File logFile = new File(""configuration-error-"" + System.currentTimeMillis() + "".log""); try { FileUtil.writeTextFile(logFile, new String[]{ text "
1, for (int i = 0; i < 100; i++) { for (int j = 0; j < randomObjects.length; j++) { try { int index = randomIndexes[j]; randomStrings[index] = ((Integer) randomObjects[index]).toString(); , for (int i = 0; i < 100; i++) { for (int j = 0; j < randomObjects.length; j++) { try { int index = randomIndexes[j]; randomStrings[index] = ((Integer) randomObjects[index]).toString(); 
1, for (Pool derivedPool : lookupBySubscriptionId(pool.getSubscriptionId())) { if (!derivedPool.getId().equals(pool.getId()) && derivedPool.getQuantity() != -1) { deleteExcessEntitlements(derivedPool); , for (Pool derivedPool : lookupBySubscriptionId(pool.getSubscriptionId())) { if (!derivedPool.getId().equals(pool.getId()) && derivedPool.getQuantity() != -1) { deleteExcessEntitlements(derivedPool); 
1, if( view != null ){ JComponent item = view.getItem(); for( MouseInputListener listener : mouseListeners ){ item.removeMouseListener( listener ); item.removeMouseMotionListener( listener ); , if( view != null ){ JComponent item = view.getItem(); for( MouseInputListener listener : mouseListeners ){ item.removeMouseListener( listener ); item.removeMouseMotionListener( listener ); 
0," if (nVersion >= 3900) return (UnBitArrayBase) new UnBitArray(pAPEDecompress.getApeInfoIoSource(), nVersion); else return (UnBitArrayBase) new UnBitArrayOld(pAPEDecompress, nVersion); ", for (Option option : volume.getOptions().getOptions()) { if (option.getName().equals(expectedOption.getName()) && option.getValue().equals(expectedOption.getValue())) { return true; 
1, PropertyChangeListener l = new PropertyChangeListener() { public void propertyChange(PropertyChangeEvent evt) { SwingUtilities.invokeLater(new Runnable() { public void run() { notifyListeners(); , PropertyChangeListener l = new PropertyChangeListener() { public void propertyChange(PropertyChangeEvent evt) { SwingUtilities.invokeLater(new Runnable() { public void run() { notifyListeners(); 
1," MessageDialog .openError( getShell(), Messages.getString( ""NewEntryDnWizardPage.Error"" ), NLS.bind( Messages.getString( ""NewEntryDnWizardPage.EntryAlreadyExists"" ), dn.toString() ) ); "," MessageDialog .openError( getShell(), Messages.getString( ""NewEntryDnWizardPage.Error"" ), NLS.bind( Messages.getString( ""NewEntryDnWizardPage.EntryAlreadyExists"" ), dn.toString() ) ); "
1," this.x = x; this.y = y; this.nodeSize = new DefaultSizeDouble(width, height); this.isAnchored = isAnchored; this.type = type; this.hasLabel = false; this.labelSize = new DefaultSizeDouble(0, 0); "," this.x = x; this.y = y; this.nodeSize = new DefaultSizeDouble(width, height); this.isAnchored = isAnchored; this.type = type; this.hasLabel = false; this.labelSize = new DefaultSizeDouble(0, 0); "
0," XIntervalSeries s1 = new XIntervalSeries(""Series 1""); s1.add(1.0, 1.0, 1.0, 2.0); s1.add(2.0, 2.0, 2.0, 3.0); s1.add(3.0, 3.0, 3.0, 4.0); assertEquals(0, s1.indexOf(new Double(1.0))); ", if (mData != null) { Object[] otherData = other.getData(); if (mData.length == otherData.length) { for (int i = 0; i < mData.length; i++) { if (!mData[i].equals(otherData[i])) { return -1; 
0," if ( null == _bindingStub ) return; TreasureCollected out = new TreasureCollected( PlayerName, TreasureLocation, TreasureValue ); out.setTo( toJid ); _bindingStub.TreasureCollected( out ); "," try { initScreen(); int entryId = data.getParameters().getInt(""id""); if (entryId>0) { Criteria criteria = new Criteria(); getDetail(entryId, criteria, context); context.put(""mode"", ""update""); "
0," ListContainerOptions options = new ListContainerOptions(); options.maxResults(1000); assertEquals(options.buildQueryParameters().get(SwiftConstants.LIMIT), Collections.singletonList(""1000"")); ", StandardCategoryToolTipGenerator g1 = new StandardCategoryToolTipGenerator(); StandardCategoryToolTipGenerator g2 = null; try { g2 = (StandardCategoryToolTipGenerator) g1.clone(); 
1," return (classLoaderDefType == ClassLoaderDefinitionType.CONSTRUCTOR) ? new GroovyScriptEngineImpl(new CustomGroovyClassLoader()) : new ScriptEngineManager().getEngineByName(""groovy""); "," return (classLoaderDefType == ClassLoaderDefinitionType.CONSTRUCTOR) ? new GroovyScriptEngineImpl(new CustomGroovyClassLoader()) : new ScriptEngineManager().getEngineByName(""groovy""); "
1," if (!this.isFiring) return; if (DEBUG) { System.out .println(""-----------------------------------------------------------------------------------------------------------------------""); "," if (!this.isFiring) return; if (DEBUG) { System.out .println(""-----------------------------------------------------------------------------------------------------------------------""); "
0, VectorSpecies s = (VectorSpecies)species; if (s.mutationProbability>0.0) for(int x=0;x<genome.length;x++) if (state.random[thread].nextBoolean(s.mutationProbability)) genome[x] = !genome[x]; ," StringBundler sb = new StringBundler(7); sb.append(""{userId=""); sb.append(userId); sb.append("", groupId=""); sb.append(groupId); sb.append("", roleId=""); sb.append(roleId); sb.append("""
0," System.out.println(""parsing message "" + message.type); ClientMessageHandler handler = messageHandlers.get(message.type); if(handler != null) { handler.handleMessage(message, connectionContext); "," ReturnFields rf = new ReturnFields(req(""fl"", ""id-test"")); assertFalse(rf.wantsScore()); assertTrue(rf.wantsField(""id-test"")); assertFalse(rf.wantsField(""xxx"")); assertFalse(rf.wantsAllFields()); "
1," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (place: ""); result.append(place); result.append(')'); return result.toString(); "," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (place: ""); result.append(place); result.append(')'); return result.toString(); "
0," ClassLoader classLoader = getClass().getClassLoader(); return classLoader.getResourceAsStream(""org/eclipse/ocl/examples/xtext/markup/parser/antlr/internal/InternalMarkup.tokens""); "," if (stderr != null && stderr.length() > 0) { printTo.println(""========= Child VM System.err ========""); printTo.print(stderr); printTo.println(""======================================""); "
0," if (startColumn + colspan > columns.size()) PaperClips.error(SWT.ERROR_INVALID_ARGUMENT, ""Colspan "" + colspan + "" too wide at column "" + startColumn + "" ("" + columns.size() + "" columns total)""); ", while (true) { try { Reference<? extends Object> reference = _referenceQueue.remove(); FinalizeAction finalizeAction = _referenceActionMap.remove(reference); finalizeAction.doFinalize(); 
0, this.keyHashSize = keyHashSize; this.valueSize = valueSize; this.hashIndexBits = hashIndexBits; this.compressionCodec = compressionCodec; this.valueTransformer = valueTransformer; ," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "
1," if (!(ignoredFile(it))) { File itfile = new File(orig, it); if (!(itfile.isDirectory()) || !(isRetained(itfile.getAbsolutePath()))) { ListSequence.fromList(diffs).addElement(""Removed: "" + itfile); "," if (!(ignoredFile(it))) { File XXXXX = new File(orig, it); if (!(XXXXX.isDirectory()) || !(isRetained(XXXXX.getAbsolutePath()))) { ListSequence.fromList(diffs).addElement(""Removed: "" + XXXXX); "
0," { PolygonDef sd = new PolygonDef(); sd.setAsBox(100.0f, 20.0f); BodyDef bd = new BodyDef(); bd.position.set(0.0f, -20.0f); Body ground = m_world.createBody(bd); ground.createShape(sd); "," RandomAccessWithKey<Object, EntityStore> stores = entityStores.getEntityStores(); for (int i = 0; i < stores.size(); i++) { EntityStore entityStore = stores.get(i); entityStore.refreshPool(); "
1, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(Polls6120LatestTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , TestSuite XXXXX = new TestSuite(); XXXXX.addTest(LoginTests.suite()); XXXXX.addTest(Polls6120LatestTestPlan.suite()); XXXXX.addTestSuite(StopSeleniumTest.class); return XXXXX; 
0, super.onResume(); ((Foursquared) getApplication()).requestLocationUpdates(true); if (mSearchHolder.results == null && mSearchTask == null) { mSearchTask = (SearchTask) new SearchTask().execute(); ," File f = getConfigurationsDir(); for (Entry<String, String> e : combination.entrySet()) f = new File(f,""axis-""+e.getKey()+'/'+Util.rawEncode(e.getValue())); f.getParentFile().mkdirs(); return f; "
0," URL archiveUrl; URLConnection urlConnection; try { archiveUrl = new URL(urlBase + archiveName); urlConnection = UrlHelper.openConnection(archiveUrl, proxyConfig, ""HEAD""); urlConnection.connect(); "," switch (schema.getType()) { case RECORD: if (!isRecord(datum)) return false; for (Field f : schema.getFields()) { if (!validate(f.schema(), getField(datum, f.name(), f.pos()))) return false; "
1," switch (featureID) { case PowrmartPackage.CUSTOM_TYPE__DAILYFREQUENCY: return basicSetDAILYFREQUENCY(null, msgs); case PowrmartPackage.CUSTOM_TYPE__REPEAT: return basicSetREPEAT(null, msgs); "," switch (featureID) { case PowrmartPackage.CUSTOM_TYPE__DAILYFREQUENCY: return basicSetDAILYFREQUENCY(null, msgs); case PowrmartPackage.CUSTOM_TYPE__REPEAT: return basicSetREPEAT(null, msgs); "
0, if (evt.getPropertyName().equals(JSplitPane.DIVIDER_LOCATION_PROPERTY)) { int newVal = (Integer) evt.getNewValue(); if (getHeight() != 0) { dividerLocation = (double) newVal / (double) getHeight(); ," String oldEcfName = ecfName; ecfName = newEcfName; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, ModelPackage.ISERVICE_INFO__ECF_NAME, oldEcfName, ecfName)); "
1," this.values.add(value); if (this.size == this.depths.length) { int[] temp = new int[2 * this.depths.length]; System.arraycopy(this.depths, 0, temp, 0, this.depths.length); this.depths = temp; "," this.values.add(value); if (this.size == this.depths.length) { int[] temp = new int[2 * this.depths.length]; System.arraycopy(this.depths, 0, temp, 0, this.depths.length); this.depths = temp; "
1," List<Object> rec = records.get(assertIndex++); int count = 0; assertEquals(methodName, rec.get(count++)); if (returnValue != IGNORE) { assertEquals(returnValue, rec.get(count++)); "," List<Object> rec = records.get(assertIndex++); int XXXXX = 0; assertEquals(methodName, rec.get(XXXXX++)); if (returnValue != IGNORE) { assertEquals(returnValue, rec.get(XXXXX++)); "
0, final int prime = 31; int result = 1; result = prime * result + ((lastName == null) ? 0 : lastName.hashCode()); result = prime * result + ((ssn == null) ? 0 : ssn.hashCode()); return result; , super(arraySize); mDirty = false; getObjects().setComparator(sPhasedObjectComparator); getPendingObjects().setComparator(sPhasedObjectComparator); mSearchDummy = new PhasedObject(); 
0, Assert.isNotNull(task); this.task = task; setId(ID); setImageDescriptor(TasksUiImages.CONTEXT_ACTIVE_CENTERED); update(); TasksUi.getTaskActivityManager().addActivationListener(this); , Individual i1 = (Individual) a; Individual i2 = (Individual) b; return (((NSGA2MultiObjectiveFitness) i1.fitness).getObjective(o) > ((NSGA2MultiObjectiveFitness) i2.fitness).getObjective(o)); 
1, GrExpression initializer = field.getInitializerGroovy(); if (initializer != null) { Instruction[] flow = new ControlFlowBuilder(field.getProject()).buildControlFlow(initializer); collectVars(flow); , GrExpression initializer = field.getInitializerGroovy(); if (initializer != null) { Instruction[] flow = new ControlFlowBuilder(field.getProject()).buildControlFlow(initializer); collectVars(flow); 
0," _invokableLocalService = invokableLocalService; _methodName0 = ""addKaleoTaskAssignment""; _methodParameterTypes0 = new String[] { ""com.liferay.portal.workflow.kaleo.model.KaleoTaskAssignment"" "," mIsAccessibilityEnabled = Settings.Secure.getInt( mContext.getContentResolver(), Settings.Secure.ACCESSIBILITY_ENABLED, 0) == 1; if (mIsAccessibilityEnabled) { manageServicesLocked(); "
1, if (current.eResource() != null && current.eResource().getResourceSet() != null) this.resourceSet = current.eResource().getResourceSet(); singleSampleForFlatReferencesTable.setInput(settings); , if (current.eResource() != null && current.eResource().getResourceSet() != null) this.resourceSet = current.eResource().getResourceSet(); singleSampleForFlatReferencesTable.setInput(settings); 
0," switch(o) { case 0: return ""astore_0 ; "" + n; case 1: return ""astore_1 ; "" + n; case 2: return ""astore_2 ; "" + n; case 3: return ""astore_3 ; "" + n; default: return ""astore "" + o + "" ; "" + n; ", switch (featureID) { case SvgPathPackage.HORIZONTAL_LINETO__HORIZONTAL_LINETO_ARGUMENT_SEQUENCE: setHorizontal_lineto_argument_sequence((horizontal_lineto_argument_sequence)newValue); return; 
1," if(mode==STARTUP_MODE_MANUAL) return ""manual""; else if(mode==STARTUP_MODE_DISABLED) return ""disabled""; else if(mode==STARTUP_MODE_AUTOMATIC) return ""automatic""; return defautValue; "," if(mode==STARTUP_MODE_MANUAL) return ""manual""; else if(mode==STARTUP_MODE_DISABLED) return ""disabled""; else if(mode==STARTUP_MODE_AUTOMATIC) return ""automatic""; return defautValue; "
0," super(""VersionBuilderTests [Workspace: "" + WORKSPACE + ""]""); BundleFile rootFile = Activator.getRootFile(); if (addTests(rootFile.getChild(""test""))) { openWorkspaceFolder = true; "," reqOperationWrapperMap = new HashMap<String, WrapperInfo>(); resOperationWrapperMap = new HashMap<String, WrapperInfo>(); exceptionBeanMap = new HashMap<String,FaultInfo>(); this.seiName = seiName; "
1," return ""CalculatorDisplayHistoryState{"" + ""valid="" + valid + "", errorMessage='"" + errorMessage + '\'' + "", editorHistoryState="" + editorState + "", jsclOperation="" + jsclOperation + '"," return ""CalculatorDisplayHistoryState{"" + ""valid="" + valid + "", errorMessage='"" + errorMessage + '\'' + "", editorHistoryState="" + editorState + "", jsclOperation="" + jsclOperation + '"
0," new FolderMessageContentStrategy(folderNotExistent, """", 0); try { new FolderMessageContentStrategy(folderNotExistent, """", 1); fail(""expected an exception because directory does not exist""); "," for (final Pair<Factor, double[]> init : initializations) { System.arraycopy(init.getSecond(), 0, init.getFirst().getValues(), 0, init.getSecond().length); init.getFirst().resetSelections(); "
0, if (disassemblerItemStacks[i] != null) { if (disassemblerItemStacks[i].stackSize <= j) { ItemStack itemstack = disassemblerItemStacks[i]; disassemblerItemStacks[i] = null; return itemstack; ," ArgumentChecker.notNull(x, ""x""); final int index = Arrays.binarySearch(getXDataAsPrimitive(), x); if (index < 0) { throw new IllegalArgumentException(""Curve does not contain data for x point "" + x); "
1," RedBlackMap.Entry from = getCeilEntry(fromKey); RedBlackMap.Entry to = getPrecedingEntry(toKey); if (from == null) { return new SubMapEntryIterator(firstEntry(), getCeilEntry(toKey)); "," RedBlackMap.Entry XXXXX = getCeilEntry(XXXXXKey); RedBlackMap.Entry XXXXX = getPrecedingEntry(XXXXXKey); if (XXXXX == null) { return new SubMapEntryIteraXXXXXr(firstEntry(), getCeilEntry(XXXXXKey)); "
0," executor = Executors.newCachedThreadPool(); sb = new ServerBootstrap(new NioServerSocketChannelFactory(executor, executor)); cf = new NioClientSocketChannelFactory(executor, executor); "," final RowIcon baseIcon = ElementPresentationUtil.createLayeredIcon(PlatformIcons.FIELD_ICON, this, false); return ElementPresentationUtil.addVisibilityIcon(this, flags, baseIcon); "
1,"""); sb.append(System.getProperty(""line.separator"")); for (Object oNormalChildApply_EndChildApply : this.eNormalChildApply_EndChildApply) { sb.append(oNormalChildApply_EndChildApply.toString()); ","""); sb.append(System.getProperty(""line.separator"")); for (Object oNormalChildApply_EndChildApply : this.eNormalChildApply_EndChildApply) { sb.append(oNormalChildApply_EndChildApply.toString()); "
0, if (processInfo.getMexInterceptors() != null) { for (TMexInterceptor mexInterceptor : processInfo.getMexInterceptors(). getMexInterceptorList()) { mexInterceptors.add(mexInterceptor.getClassName()); ," __log.debug(""Received myrole mex response callback""); if( success ) { ResponseCallback callback = _waitingCallbacks.remove(cid); if (callback != null) callback.responseReceived(); "
0, Double totalAmount = 0.0; for (LoanAccountDto loanAccountDto : loanAccountDtos) { if (loanAccountDto.isDisbursalAccount()) { totalAmount = totalAmount + loanAccountDto.getTotalAmountDue(); , return new Statement() { @Override public void evaluate() throws Throwable { folder.create(); try { createDirs(); if (copyDefaults) { deployMainDist(); deployTestDist(); deployRuntimeLibrary(); 
1," String label = ((org.osate.aadl2.System) object).getName(); return label == null || label.length() == 0 ? getString(""_UI_System_type"") : getString(""_UI_System_type"") + "" "" + label; "," String XXXXX = ((org.osate.aadl2.System) object).getName(); return XXXXX == null || XXXXX.length() == 0 ? getString(""_UI_System_type"") : getString(""_UI_System_type"") + "" "" + XXXXX; "
1," return new BatchCall(""Reset password"") { public void doCall() throws Exception { AdminService os = context.getAdminService(); result = os.resetExperimentersPassword(ctx, object); "," return new BatchCall(""Reset password"") { public void doCall() throws Exception { AdminService os = context.getAdminService(); result = os.resetExperimentersPassword(ctx, object); "
1," while (true) { try { IncreasableEntry<String, Integer> increasableEntry = batchablePipe.take(); if (increasableEntry != null) { if (increasableEntry.getKey().equals(""exit"")) { return; "," while (true) { try { IncreasableEntry<String, Integer> increasableEntry = batchablePipe.take(); if (increasableEntry != null) { if (increasableEntry.getKey().equals(""exit"")) { return; "
0," if (storedPopups.get(aFile) == null) { Hashtable<ContentSource, DGFileVersionPopup> newHashtable = new Hashtable<ContentSource, DGFileVersionPopup>(); storedPopups.put(aFile, newHashtable); "," if (this.fieldName == null) { synchronized (this) { if (this.fieldName == null) { preLazyInit(); this.fieldName = new SimpleName(this.ast); postLazyInit(this.fieldName, NAME_PROPERTY); "
1," File scriptFolder = new File(APPS_FOLDER); if (!scriptFolder.isDirectory()) { throw new IllegalStateException(""parameter \""apps.folder\"" must point to a directory: "" + APPS_FOLDER); "," File XXXXX = new File(APPS_FOLDER); if (!XXXXX.isDirectory()) { throw new IllegalStateException(""parameter \""apps.folder\"" must point to a directory: "" + APPS_FOLDER); "
0, int lookBehind = 0; boolean result = false; int current = unread(scanner); lookBehind++; if (Character.isWhitespace((char) current)) { do { current = unread(scanner); lookBehind++; ," ClearCaseChangeLogEntry entry = new ClearCaseChangeLogEntry(); entry.setDateStr(""Tue Aug 28 15:27:00 CEST 2007""); assertEquals(""Tue Aug 28 15:27:00 CEST 2007"", entry.getDateStr()); "
0, this.buffer = new byte[BUCKET_SIZE_IN_BYTES]; for (int i = 0; i < keys.length; i++) keys[i] = -1; this.clusterLocal = clusterLocal; this.position = position; this.isOverflowBucket = overflowBucket; , for (Class<? extends LoadableBoundaryDataSource> loader : loaders) { try { LoadableBoundaryDataSource src = loader.newInstance(); if (name != null && src.isFileSupported(name)) return src; 
1," switch (states.pop()) { case INIT: throw new RuntimeException(""parsing error: more closing than opening elements""); case ENTRY: if (qName.equals(""entry"")) { if (!skipEntry) { entries.add(entry); "," switch (states.pop()) { case INIT: throw new RuntimeException(""parsing error: more closing than opening elements""); case ENTRY: if (qName.equals(""entry"")) { if (!skipEntry) { entries.add(entry); "
1, DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance(); Document doc; try { DocumentBuilder db = dbf.newDocumentBuilder(); doc = db.parse(new InputSource(new StringReader(input))); , DocumentBuilderFactory XXXXX = DocumentBuilderFactory.newInstance(); Document doc; try { DocumentBuilder XXXXX = XXXXX.newDocumentBuilder(); doc = XXXXX.parse(new InputSource(new StringReader(input))); 
1," super.setResponseResource(new Resource[] { new ClassPathResource(""janus/janus-response-consumerkey3-entityid.json""), new ClassPathResource(""janus/janus-response-multiple-callback-metadata.json"") "," super.setResponseResource(new Resource[] { new ClassPathResource(""janus/janus-response-consumerkey3-entityid.json""), new ClassPathResource(""janus/janus-response-multiple-callback-metadata.json"") "
0," ThumbnailManager thumbnailManager = MmsApp.getApplication().getThumbnailManager(); mItemLoadedFuture = thumbnailManager.getVideoThumbnail(getUri(), callback); return mItemLoadedFuture; ", this.gaSelector = gaSelector; this.crossoverOp = crossoverOperator; this.mutationOp = mutationOperator; this.gaActivationAge = gaActivationAge; this.crossoverRate = crossoverRate; this.myLcs = lcs; 
1," lock.writeLock().lock(); try { String key = getCacheKey(context); CmisBinding extistingBinding = cache.get(getCacheKey(context)); if (extistingBinding == null) { cache.put(key, binding); "," lock.writeLock().lock(); try { String XXXXX = getCacheKey(context); CmisBinding XXXXX = cache.get(getCacheKey(context)); if (XXXXX == null) { cache.put(XXXXX, binding); "
1," String tRoleName = roleName.trim(); if (isExistingRole(tRoleName)) { return getConnection().createNewOrgEntityObject(tRoleName, OrganizationalEntityDAO.OrganizationalEntityType.GROUP); "," String XXXXX = roleName.trim(); if (isExistingRole(XXXXX)) { return getConnection().createNewOrgEntityObject(XXXXX, OrganizationalEntityDAO.OrganizationalEntityType.GROUP); "
0, metadataResolutionExceptions = initList( metadataResolutionExceptions ); metadataResolutionExceptions.add( e ); exceptions = initList( exceptions ); exceptions.add( e ); return this; , if (nodeToLookFor instanceof ClassNode) { String name = ((ClassNode) nodeToLookFor).getNameWithoutPackage(); int lastDollar = name.lastIndexOf('$'); return name.substring(lastDollar + 1); 
0," Block block = event.getClickedBlock(); ItemStack item = event.getItem(); Action action = event.getAction(); Player player = event.getPlayer(); if (!plugin.canBuildHere(player, block)) { return; "," for (DrawableCropRect crop : crops) { if (crop.isSelected()) { int diffToMaxW = width - crop.width; int diffToMaxH = height - crop.height; crop.grow(diffToMaxW / 2, diffToMaxH / 2); "
0," long[] a = this.a; int capacity = a.length; int n = this.n; int nNew = n + c; if (nNew > capacity) { long[] aNew = newArray(capacity, nNew); System.arraycopy(a, 0, aNew, c, n); this.a = aNew; "," List<String> mappingFiles = new ArrayList<String>(); mappingFiles.add(""dozerBeanMapping.xml""); Mapper mapper = new DozerBeanMapper(mappingFiles); try { mapper.map(new String(""yo""), new String(""y"")); "
0," String oldTarget = target; target = newTarget; if ( eNotificationRequired( ) ) eNotify( new ENotificationImpl( this, Notification.SET, AttributePackage.URL_VALUE__TARGET, oldTarget, target ) ); "," dirEditor = new DirectoryFieldEditor(""dir"", ""Directory:"", getFieldEditorParent()); addField(dirEditor); addField(new BooleanFieldEditor(""recurse"", ""Recurse:"", getFieldEditorParent())); "
1, singleSampleForAdvancedTableCompositionFilters.add(filter); if (this.singleSampleForAdvancedTableComposition != null) { this.singleSampleForAdvancedTableComposition.addFilter(filter); , singleSampleForAdvancedTableCompositionFilters.add(filter); if (this.singleSampleForAdvancedTableComposition != null) { this.singleSampleForAdvancedTableComposition.addFilter(filter); 
0," ActionItemActionListExtension actionItem = (ActionItemActionListExtension) getCurrentRowObject(); return ""actionlist_"" + KewApiConstants.ACTION_LIST_COLOR_NAMES.get(actionItem.getRowStyleClass()); "," String name = file.getName(); if (name.endsWith(oldSuffix)) { String baseName = name.substring(0, name.length() - oldSuffix.length()); return new File(file.getParent(), baseName + newSuffix); "
0," UsbAccessory accessory = (UsbAccessory) intent.getParcelableExtra(UsbManager.EXTRA_ACCESSORY); if (intent.getBooleanExtra( UsbManager.EXTRA_PERMISSION_GRANTED, false)) { openAccessory(accessory); "," return ""<h1>"" + getReportTitle() + ""</h1>\n"" + ""<table width=\""100%\"">\n"" + ""<tr>\n"" + ""<td align=\""left\""></td><td align=\""right\"">"" + getReportSubtitle() + ""</td>\n"" + ""</tr>\n"" + ""</table>""; "
0," test(""/a|B|c|D/i"", ""/[a-d]/i""); test(""/a|B|c|D/"", ""/[BDac]/""); test(""/a|[Bc]|D/"", ""/[BDac]/""); test(""/[aB]|[cD]/"", ""/[BDac]/""); test(""/a|B|c|D|a|B/i"", ""/[a-d]/i""); test(""/a|A|/i"", ""/a?/i""); ", FakeLayout layout = new FakeLayout(true); root.markAsNeedingLayout(layout); panel3.markAsNeedingLayout(layout); panel1.markAsNeedingLayout(layout); panel2.markAsNeedingLayout(layout); return layout; 
1," buf.clear(); for (int i = 0; i < buf.capacity(); i++) { assertEquals(buf.position(), 0); ShortBuffer ret = buf.put(i, (short) i); assertEquals(buf.get(i), (short) i); assertSame(ret, buf); "," buf.clear(); for (XXXXXnt XXXXX = 0; XXXXX < buf.capacXXXXXty(); XXXXX++) { assertEquals(buf.posXXXXXtXXXXXon(), 0); ShortBuffer XXXXX = buf.put(XXXXX, (short) XXXXX); assertEquals(buf.get(XXXXX), (short) XXXXX); assertSame(XXXXX, buf); "
1," IGeocodingService geocodingService = new GeocodingService(); geocodingService.geocodeAndSerialize(null, new ByteArrayOutputStream()); fail(""executeAndSerialize does not accept null query""); "," IGeocodingService XXXXX = new GeocodingService(); XXXXX.geocodeAndSerialize(null, new ByteArrayOutputStream()); fail(""executeAndSerialize does not accept null query""); "
0," this.plugin = plugin; this.conf = config.Obtain(); perm = plugin.getPermHandler().getEngine(); if(this.conf.getBoolean(plugin.getName() + "".discounts.useDiscounts"")) { this.loadDiscounts(); "," QueueManager qm = BookCatalogueApp.getQueueManager(); SendOneBookTask task = new SendOneBookTask(m_bookId); qm.enqueueTask(task, BcQueueManager.QUEUE_SMALL_JOBS, 0); qm.deleteEvent(this.getId()); "
1, short anotherVal = ((ShortEntry) o).term; int i = term - anotherVal; if (i == 0) { i = count - o.count(); if (i == 0) { i = System.identityHashCode(this) - System.identityHashCode(o); , short XXXXX = ((ShortEntry) o).term; XXXXXnt XXXXX = term - XXXXX; XXXXXf (XXXXX == 0) { XXXXX = count - o.count(); XXXXXf (XXXXX == 0) { XXXXX = System.XXXXXdentXXXXXtyHashCode(thXXXXXs) - System.XXXXXdentXXXXXtyHashCode(o); 
1," try { setName(""CALIDE""); setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE); setJMenuBar(getCALIDEJMenuBar()); setSize(460, 300); setContentPane(getJFrameContentPane()); initConnections(); "," try { setName(""CALIDE""); setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE); setJMenuBar(getCALIDEJMenuBar()); setSize(460, 300); setContentPane(getJFrameContentPane()); initConnections(); "
0, super.onInitializeAccessibilityNodeInfo(info); info.setCheckable(true); info.setChecked(isChecked()); CharSequence text = getText(); if (!TextUtils.isEmpty(text)) { info.setText(text); ," IntegerAttribute attr = (IntegerAttribute) item.getAttribute(qname); if(attr==null && value!=null) { attr = new HibIntegerAttribute(qname,value); item.addAttribute(attr); return; "
1," List<EndpointInfo> endpoints = EndpointInfo.getEndpoints(item.getTags()); if (unique) { if (endpoints.size() != 1) { throw new IllegalStateException(""Expected exactly one endpoint""); "," List<EndpointInfo> endpoints = EndpointInfo.getEndpoints(item.getTags()); if (unique) { if (endpoints.size() != 1) { throw new IllegalStateException(""Expected exactly one endpoint""); "
0, boolean renamedArtifact = !newArtifactId.equals(artifactId); renameCheckbox.setEnabled(renamedArtifact); if (!renamedArtifact) { renameCheckbox.setSelection(false); renamed = false; , DNSService dns = new MockDNSService() { @Override public Collection findMXRecords(String hostname) { Collection mx = new ArrayList(); if (hostname.equals(INVALID_HOST)) { mx.add(INVALID_MX); 
1," if(section.getWidget() == null) return SetCommand.create(editingDomain, section, section.eClass().getEStructuralFeature(""widget""), newWidget); else return UnexecutableCommand.INSTANCE; "," if(section.getWidget() == null) return SetCommand.create(editingDomain, section, section.eClass().getEStructuralFeature(""widget""), newWidget); else return UnexecutableCommand.INSTANCE; "
0," context.importClass(Calendar.class); context.importClass(""CAL"", Calendar.class); try { context.importStaticMethod(""dateFormat"", DateFormat.class.getMethod(""getInstance"", new Class[]{", COSBase decodeParms = getCOSStream().getDictionaryObject(COSName.DECODE_PARMS); if (decodeParms != null) { if (decodeParms instanceof COSDictionary) { return (COSDictionary) decodeParms; 
0," Subroutine ret = (Subroutine) subroutines.get(leader); if (ret == null){ throw new AssertionViolatedException(""Subroutine requested for an InstructionHandle that is not a leader of a subroutine.""); ", endTask(); contributor = AggregateProgressFactory.createProgressContributor(title + new java.util.Random()); rootHandle.addContributor(contributor); if (total == UNKNOWN) { contributor.start(1000); 
0," int partNum = body.getPartsNum(); for(int i = 0; i < partNum; i++) { PduPart part = body.getPart(i); if (Arrays.equals(part.getContentType(), ContentType.APP_SMIL.getBytes())) { return part; ", ServiceCalendarDate calendarDate = new ServiceCalendarDate(); calendarDate.setServiceId(serviceId); calendarDate.setDate(date); calendarDate.setExceptionType(exceptionType); return calendarDate; 
1," String label = ((ReferenceProperty)object).getName(); return label == null || label.length() == 0 ? getString(""_UI_ReferenceProperty_type"") : getString(""_UI_ReferenceProperty_type"") + "" "" + label; "," String label = ((ReferenceProperty)object).getName(); return label == null || label.length() == 0 ? getString(""_UI_ReferenceProperty_type"") : getString(""_UI_ReferenceProperty_type"") + "" "" + label; "
1," DesfireCard desfireCard = (DesfireCard) card; byte[] data; try { data = desfireCard.getApplication(0xffffff).getFile(0x0f).getData(); mSerialNumber = Utils.byteArrayToInt(data, 5, 3); "," DesfireCard XXXXX = (DesfireCard) card; byte[] data; try { data = XXXXX.getApplication(0xffffff).getFile(0x0f).getData(); mSerialNumber = Utils.byteArrayToInt(data, 5, 3); "
0, int hash = super.hashCode(); hash = 17 * hash + (this.exterior != null ? this.exterior.hashCode() : 0); hash = 17 * hash + (this.interior != null ? this.interior.hashCode() : 0); return hash; ," if (isClassBehaviour == true) { this.policyComponent.bindClassBehaviour( QName.createQName(NamespaceService.ALFRESCO_URI, POLICY_NAME), this, new JavaBehaviour(this, POLICY_NAME)); "
1," fReorderList.clear(); fSelectedNodeList.clear(); fSelProvider.setSelection(new StructuredSelection()); fFrame = theFrame; if (resetPosition) { setContentsPos(0, 0); resizeContents(fFrame); redraw(); "," fReorderList.clear(); fSelectedNodeList.clear(); fSelProvider.setSelection(new StructuredSelection()); fFrame = theFrame; if (resetPosition) { setContentsPos(0, 0); resizeContents(fFrame); redraw(); "
1," BatchablePipe<String, Integer> batchablePipe = new BatchablePipe<String, Integer>(); assertNull(batchablePipe.take()); assertNull(batchablePipe.take()); assertNull(batchablePipe.take()); "," BatchablePipe<String, Integer> batchablePipe = new BatchablePipe<String, Integer>(); assertNull(batchablePipe.take()); assertNull(batchablePipe.take()); assertNull(batchablePipe.take()); "
0," SearchContinuation clone = new SearchContinuation( this, getUrl() ); clone.state = this.state; clone.dummyConnection = this.dummyConnection; clone.connection = super.connection; return clone; ", String binaryString = DECIMAL_BINARY_TABLE[lightNum]; boolean[] binaryOutputs = new boolean[4]; for (int i = 0; i < 4; i++) { binaryOutputs[i] = binaryString.toCharArray()[i] == '1'; 
1," frameCount++; if (frameCount == 30) { synchronized (lock) { lock.notify(); System.out.format(""Got %d depth frames in %4.2fs%n"", frameCount, (((double) System.nanoTime() - start) / 1000000)); "," frameCount++; if (frameCount == 30) { synchronized (lock) { lock.notify(); System.out.format(""Got %d depth frames in %4.2fs%n"", frameCount, (((double) System.nanoTime() - start) / 1000000)); "
1," String thumbnailName = thumbnailDetails.getName(); if (thumbnailName == null) { throw new ThumbnailException(""When adding a thumbnail details object make sure the name is set.""); "," String XXXXX = thumbnailDetails.getName(); if (XXXXX == null) { throw new ThumbnailException(""When adding a thumbnail details object make sure the name is set.""); "
0, final InspectionProfileImpl defaultProfile = (InspectionProfileImpl)createProfile(); defaultProfile.setBaseProfile(InspectionProfileImpl.getDefaultProfile()); addProfile(defaultProfile); ," Level level = record.getLevel(); String message; message=getThreadLocalRequest().getRemoteAddr()+"":""+record.getMessage(); if (Level.INFO.equals(level)) { LOG.info(message,record.getThrown()); "
1, switch (featureID) { case CpnDslPackage.PLANS__ARGUMENTMODELS: return argumentmodels != null && !argumentmodels.isEmpty(); case CpnDslPackage.PLANS__PLANS: return plans != null && !plans.isEmpty(); , switch (featureID) { case CpnDslPackage.PLANS__ARGUMENTMODELS: return argumentmodels != null && !argumentmodels.isEmpty(); case CpnDslPackage.PLANS__PLANS: return plans != null && !plans.isEmpty(); 
0," Contract contract = new Contract(); serverMap = contract.loadServerContract(); Utility.populateCombo(serverMap, jComboBox2); nymMap = new NYM().loadNYM(); Utility.populateCombo(nymMap, jComboBox1); ", IntegerVectorSpecies s = (IntegerVectorSpecies) species; for(int x=0;x<genome.length;x++) genome[x] = (byte)((int)s.minGene(x) + state.random[thread].nextInt((int)s.maxGene(x)-(int)s.minGene(x)+1)); 
0," TabModelView returned = _extraTabViews.get(tab); if (returned == null) { returned = new TabModelView(tab, this, _inspectingWidget.getController()); _extraTabViews.put(tab, returned); ", this.workingMemory = workingMemory; this.justifiedMap = new ObjectHashMap(); this.assertMap = new ObjectHashMap(); this.assertMap.setComparator( EqualityKeyComparator.getInstance() ); 
0," List<Class> visited = new Vector<Class>(); for (Class clazz : session.getClass().getInterfaces()) { configureInterface(clazz, session.getProperties(), visited, session.getClass().getName()); "," String opName = getClass().getName(); int $index = opName.indexOf('$'); opName = opName.substring($index+1, opName.length()); return ""<""+opName+""@""+tokens.get(index)+ "":\""""+text+""\"">""; "
1, PackageInfo dpi = link.getDesiredPackageInfo(); if (dpi == null) dpi = new PackageInfo(); boolean dpiSet = false; if (lgr.getRule().getChunks() >= 0) { link.setChunks(lgr.getRule().getChunks()); , PackageInfo XXXXX = link.getDesiredPackageInfo(); if (XXXXX == null) XXXXX = new PackageInfo(); boolean XXXXXSet = false; if (lgr.getRule().getChunks() >= 0) { link.setChunks(lgr.getRule().getChunks()); 
0," grabLayers = """"; grabStyles = """"; int countLayers = 0; if (Main.pref.getBoolean(""cadastrewms.layerWater"", true)) { grabLayers += LAYER_WATER + "",""; grabStyles += STYLE_WATER + "",""; countLayers++; ", selectRepositoryPage = page; setForcePreviousAndNextButtons(true); setNeedsProgressMonitor(true); setWindowTitle(title); setDefaultPageImageDescriptor(TasksUiImages.BANNER_REPOSITORY); 
1," this.append(""~(""); TextGenManager.instance().appendNodeText(this.getContext(), this.getBuffer(), SLinkOperations.getTarget(node, ""expression"", true), this.getSNode()); this.append("")""); "," this.append(""~(""); TextGenManager.instance().appendNodeText(this.getContext(), this.getBuffer(), SLinkOperations.getTarget(node, ""expression"", true), this.getSNode()); this.append("")""); "
1," BlockingTaskOperationResponseHandler responseHandler = new BlockingTaskOperationResponseHandler(); taskService.stop(taskId, userId, responseHandler); try { responseHandler.waitTillDone(timeout); "," BlockingTaskOperationResponseHandler XXXXX = new BlockingTaskOperationResponseHandler(); taskService.stop(taskId, userId, XXXXX); try { XXXXX.waitTillDone(timeout); "
1," super(bundle); this.load(); int size = GameServerTable.getInstance().getServerNames().size(); if (size == 0) { System.out.println(this.getBundle().getString(""noServerNames"")); System.exit(1); "," super(bundle); this.load(); int size = GameServerTable.getInstance().getServerNames().size(); if (size == 0) { System.out.println(this.getBundle().getString(""noServerNames"")); System.exit(1); "
0, return (int)red.getFloatValue(OMCSSPrimitiveValue.CSS_NUMBER) + 256 * (int)green.getFloatValue(OMCSSPrimitiveValue.CSS_NUMBER) + 65536 * (int)blue.getFloatValue(OMCSSPrimitiveValue.CSS_NUMBER); , if (!(progressSlider.getValueIsAdjusting() || getPlayerMediator().getStatus() == PlayerState.SEEKING)) { if (numberOfPlayerTimeValuesToIgnore > 0) { numberOfPlayerTimeValuesToIgnore--; 
1, switch (e.childID) { case ACC.CHILDID_SELF: e.detail = ACC.ROLE_CLIENT_AREA; break; case 0: e.detail = ACC.ROLE_TOOLTIP; break; case 1: e.detail = ACC.ROLE_LABEL; break; default: break; , switch (e.childID) { case ACC.CHILDID_SELF: e.detail = ACC.ROLE_CLIENT_AREA; break; case 0: e.detail = ACC.ROLE_TOOLTIP; break; case 1: e.detail = ACC.ROLE_LABEL; break; default: break; 
0, try { if (ip != null) { ValueParam concurrencyLevel = ip.getValueParam(INIT_PARAM_CONCURRENCY_LEVEL); if (concurrencyLevel != null) { return Integer.valueOf(concurrencyLevel.getValue()); ," updateCount++; try { if (TRACER_DEBUG.isEnabled()) { checkSession(); TRACER_DEBUG.trace(""ObjyObject.update() - oid:"" + ooId().getStoreString() + "" - version:"" + revision.getVersion()); "
1," StringBuilder sb = new StringBuilder(); if (Boolean.TRUE.equals(message.get(Message.REQUESTOR_ROLE))) { sb.append(""HTTP response code: "").append(message.get(Message.RESPONSE_CODE)).append('\n'); "," StringBuilder XXXXX = new StringBuilder(); if (Boolean.TRUE.equals(message.get(Message.REQUESTOR_ROLE))) { XXXXX.append(""HTTP response code: "").append(message.get(Message.RESPONSE_CODE)).append('\n'); "
1," IPath deployPlanPath = comp.getRootFolder().getUnderlyingFolder().getProjectRelativePath().append(""META-INF"").append(SERVICE_PLAN_NAME); return comp.getProject().getFile(deployPlanPath); "," IPath XXXXX = comp.getRootFolder().getUnderlyingFolder().getProjectRelativePath().append(""META-INF"").append(SERVICE_PLAN_NAME); return comp.getProject().getFile(XXXXX); "
0, if (this.applicationId != null && !((ApplicationIdPBImpl) this.applicationId).getProto().equals( builder.getAppId())) { builder.setAppId(convertToProtoFormat(this.applicationId)); ," _fudgeContext = fudgeContext; _underlying = reader; _settings = settings; try { _jsonObject = new JSONObject(new JSONTokener(reader)); init(_fudgeContext, _jsonObject, _settings); "
1," Message response = obtainMessage(EVENT_READ_ICON_DONE, fileid, 0, onLoaded); phone.mCM.iccIO(COMMAND_GET_RESPONSE, fileid, ""img"", 0, 0, GET_RESPONSE_EF_IMG_SIZE_BYTES, null, null, response); "," Message XXXXX = obtainMessage(EVENT_READ_ICON_DONE, fileid, 0, onLoaded); phone.mCM.iccIO(COMMAND_GET_RESPONSE, fileid, ""img"", 0, 0, GET_RESPONSE_EF_IMG_SIZE_BYTES, null, null, XXXXX); "
0," abortMovement(); setSpeed(SPEEDTURN); angleCCW *= CCW_afwijking; int h = (int) (angleCCW * Math.PI * WIELAFSTAND / WIELOMTREK); motorLeft.rotate(-h, true); motorRight.rotate(h, true); ", if (processInfo.getMexInterceptors() != null) { for (TMexInterceptor mexInterceptor : processInfo.getMexInterceptors(). getMexInterceptorList()) { mexInterceptors.add(mexInterceptor.getClassName()); 
1," String oldPeriod = period; period = newPeriod; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, ProcessPackage.TIMER_TYPE__PERIOD, oldPeriod, period)); "," String XXXXX = period; period = newPeriod; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, ProcessPackage.TIMER_TYPE__PERIOD, XXXXX, period)); "
0," String value = null; Matcher matcher = null; if (fSearchFor == S_FOR_TYPES) { value = removeInitializationData(attr.getValue()).replaceAll(""\\$"", "".""); matcher = getMatcher(value); ", GlyfCompositeComp c = _components.get(_components.size()-1); GlyphDescription gd = _parentTable.getDescription(c.getGlyphIndex()); if (gd != null) { return c.getFirstIndex() + gd.getPointCount(); 
0," if (params != null) { return new BestMatchSpec( (String []) params.getParameter(CookieSpecPNames.DATE_PATTERNS), params.getBooleanParameter(CookieSpecPNames.SINGLE_COOKIE_HEADER, false)); "," int microLatitude = (int) ( mWaypointsCursor.getDouble( 0 ) * 1E6d ); int microLongitude = (int) ( mWaypointsCursor.getDouble( 1 ) * 1E6d ); return new GeoPoint( microLatitude, microLongitude ); "
0," EbXMLProvideAndRegisterDocumentSetRequest ebXML = transformer.toEbXML(request); ebXML.getExtrinsicObjects().get(0).getExternalIdentifiers().get(0).setValue(""""); expectFailure(CX_NEEDS_ID, ebXML); ", FinancialSecurityVisitor<Void> underlyingIdentifierCollector = new FinancialSecurityVisitorAdapter<Void>() { @Override public Void visitEquitySecurity(EquitySecurity security) { return null; 
1," int degree = ((HierarchicalDirectedGraph) graph).getTotalOutDegree(node); min = Math.min(min, degree); max = Math.max(max, degree); values.add(new Integer(degree)); return range.isInRange(degree); "," int XXXXX = ((HierarchicalDirectedGraph) graph).getTotalOutDegree(node); min = Math.min(min, XXXXX); max = Math.max(max, XXXXX); values.add(new Integer(XXXXX)); return range.isInRange(XXXXX); "
0, if( other == null ) return false; if( name.equals(other.name) == false ) return false; if( order.equals(other.order) == false || transport.equals(other.transport) == false ) { return false; ," if (var != null) { var = var.replace("" "", """"); String[] s = var.split("",""); types = new EntityType[s.length]; for (int i = 0; i < s.length; i++) { types[i] = EntityType.fromName(s[i].toUpperCase()); "
1, if (srcSlot == destSlot || srcSlot == destSlot - 1) return; int sSlot = srcSlot; Slot slotObj = this.slots.elementAt(sSlot); if (destSlot >= getSize()) { this.slots.addElement(slotObj); , if (srcSlot == destSlot || srcSlot == destSlot - 1) return; int XXXXX = srcSlot; Slot XXXXX = this.slots.elementAt(XXXXX); if (destSlot >= getSize()) { this.slots.addElement(XXXXX); 
0," StringBuffer buffer = new StringBuffer(); buffer.append(""<icon>""); buffer.append(""<name>icon</name>""); buffer.append(""<path>http: buffer.append(""</icon>""); return buffer.toString(); "," super(minecraftserver, world, s, iteminworldmanager); NetworkManager netMgr = new NPCNetworkManager(new NullSocket(), ""NPC Manager"", new NetHandler() { @Override public boolean c() { return true; "
0," super(Zone.GRAVEYARD, new ScavengeEffect(), costs); this.timing = TimingRule.SORCERY; this.addCost(new ExileSourceFromGraveCost()); this.addTarget(new TargetCreaturePermanent(true)); ", switch (v) { case ABUNDANCE: case RNA_ABUNDANCE: case MICRO_RNA_ABUNDANCE: case PROTEIN_ABUNDANCE: case GENE_ABUNDANCE: case COMPLEX_ABUNDANCE: return true; default: return false; 
1," Theme t = new Theme(""url"", ""name"", ""desc"", ""css"", UUID.randomUUID().toString(), ""bannerId"", ""authorName"", ""vswatter@gmail.com""); jpaThemeMapper.insert(t); assertTrue(t.getId() > 0); "," Theme XXXXX = new Theme(""url"", ""name"", ""desc"", ""css"", UUID.randomUUID().XXXXXoSXXXXXring(), ""bannerId"", ""auXXXXXhorName"", ""vswaXXXXXXXXXXer@gmail.com""); jpaThemeMapper.inserXXXXX(XXXXX); asserXXXXXTrue(XXXXX.geXXXXXId() > 0); "
0," console.setTitle(findConsoleName(console.getThread())); int index = (findPosition) ? findConsolePosition(console) : getComponentCount(); insertTab(findTitle(console), null, console, null, index); "," PsiBuilder.Marker list = mark(); while (true) { if (at(COMMA)) errorAndAdvance(""Expecting a this or super constructor call""); parseInitializer(); if (!at(COMMA)) break; advance(); "
0, initComponents(); calculatedRemaining = remaining; redeploymentScheduling.addActionListener(new ActionListener() { public void actionPerformed(ActionEvent ae) { enableScheduling(true); , if (inheritsRelevantMip() && this.modelItem.getParent() != null) { if (this.modelItem.getParent().getRefreshView().isDisabledMarked()) { this.disabledMarker = true; addParentRefreshViewToModel(); 
0, final Object request = new Object(); final Object response = new Object(); context.checking(new Expectations() { { oneOf(domainMapper).execute(request); will(returnValue(response)); , switch (featureID) { case AlfPackage.INLINE_STATEMENT__LANGAGE_NAME: setLangageName((String)newValue); return; case AlfPackage.INLINE_STATEMENT__BODY: setBody((String)newValue); return; 
1," DependencyGraph graph = new DependencyGraph(5); graph.addDependency(1, 4); graph.addDependency(1, 3); graph.addDependency(2, 0); ArrayAssertionUtil.assertEqualsAnyOrder(new int[] {1, 2"," DependencyGraph XXXXX = new DependencyGraph(5); XXXXX.addDependency(1, 4); XXXXX.addDependency(1, 3); XXXXX.addDependency(2, 0); ArrayAssertionUtil.assertEqualsAnyOrder(new int[] {1, 2"
0," if (newFontStyle != fontStyle) { int old = fontStyle; fontStyle = newFontStyle; console.firePropertyChange(this, IConsoleConstants.P_FONT_STYLE, new Integer(old), new Integer(fontStyle)); "," try { logger.info(""Scraping with "" + scraper.getClass().getName()); scraper.scrape(run); logger.info(scraper.getClass().getName() + "" has finished scraping without throwing an exception.""); "
1, Hdr hdr = (Hdr) wordmlPackage.getDocumentModel().getSections().get(sectionNumber-1) .getHeaderFooterPolicy() .getEvenHeader().getJaxbElement(); return XmlUtils.marshaltoW3CDomDocument(hdr); , Hdr XXXXX = (Hdr) wordmlPackage.getDocumentModel().getSections().get(sectionNumber-1) .getHeaderFooterPolicy() .getEvenHeader().getJaxbElement(); return XmlUtils.marshaltoW3CDomDocument(XXXXX); 
0," String pdfTemplate = """"; int pdfPageNumber = 1; try { pdfTemplate = xpath.evaluate(""./format/pdf/@template"", page); pdfPageNumber = Integer.parseInt(xpath.evaluate( ""./format/pdf/@page"", page)); "," if (y != getY()) { double oldY = getY(); getGeometricObject().y = y; getGraphicalRepresentation().notify(new FGENotification(""y"", oldY, y)); getGraphicalRepresentation().notifyGeometryChanged(); "
0," JideTabbedPane tabbedPane = new JideTabbedPane(); tabbedPane.setTabShape(JideTabbedPane.SHAPE_BOX); tabbedPane.addTab(""SimpleScrollPane"", createFlatScrollPane()); return tabbedPane; "," xstream.alias(""UserLoginTrackerList"", UserLoginTrackerList.class); xstream.alias(""UserLoginTracker"", UserLoginTracker.class); xstream.addImplicitCollection(UserLoginTrackerList.class, ""list""); "
1, Project project = e.getData(PlatformDataKeys.PROJECT); e.getPresentation().setEnabled(project != null && !CommittedChangesCache.getInstance(project).isRefreshingIncomingChanges()); , Project XXXXX = e.getData(PlatformDataKeys.PROJECT); e.getPresentation().setEnabled(XXXXX != null && !CommittedChangesCache.getInstance(XXXXX).isRefreshingIncomingChanges()); 
1," NodeIDPair IDPair; String result = """"; for(int i = 0; i < IDsArray.size(); i++){ IDPair = IDsArray.get(i); if (IDPair.getIDinDB().equals(IDinDB)){ result = IDPair.getIDinTree(); break; "," NodeIDPaXXXXXr IDPaXXXXXr; StrXXXXXng XXXXX = """"; for(XXXXXnt XXXXX = 0; XXXXX < IDsArray.sXXXXXze(); XXXXX++){ IDPaXXXXXr = IDsArray.get(XXXXX); XXXXXf (IDPaXXXXXr.getIDXXXXXnDB().equals(IDXXXXXnDB)){ XXXXX = IDPaXXXXXr.getIDXXXXXnTree(); break; "
1," Provider[] providers; providers = Security.getProviders(); for (int i = 0; i < providers.length; i++) { assertEquals(""Incorrect provider number"", i + 1, providers[i] .getProviderNumber()); "," ProvXXXXXder[] provXXXXXders; provXXXXXders = SecurXXXXXty.getProvXXXXXders(); for (XXXXXnt XXXXX = 0; XXXXX < provXXXXXders.length; XXXXX++) { assertEquals(""Incorrect provXXXXXder number"", XXXXX + 1, provXXXXXders[XXXXX] .getProvXXXXXderNumber()); "
1," boolean is_successful = false; try { JSONObject json = new JSONObject(response.getResponseString()); if (json.has(""access_token"") && json.has(""refresh_token"")) is_successful = true; "," boolean is_successful = false; try { JSONObject json = new JSONObject(response.getResponseString()); if (json.has(""access_token"") && json.has(""refresh_token"")) is_successful = true; "
1," PropertyPermission initialPP = (PropertyPermission) initial; PropertyPermission deseriaPP = (PropertyPermission) deserialized; assertEquals(""should be equal"", initialPP, deseriaPP); "," PropertyPermission XXXXX = (PropertyPermission) initial; PropertyPermission XXXXX = (PropertyPermission) deserialized; assertEquals(""should be equal"", XXXXX, XXXXX); "
0," VcsBalloonProblemNotifier.showOverVersionControlView(myVcs.getProject(), VcsBundle.message(""message.title.could.not.load.file.history"") + "": "" + exception.getMessage(), MessageType.ERROR); "," PreparedStatement p = null; try { p = JForumExecutionContext.getConnection().prepareStatement( SystemGlobals.getSql(""TopicModel.incrementTotalReplies"")); p.setInt(1, topicId); p.executeUpdate(); "
1, synchronized(putMonitor) { int usedPermits = 0; Iterator<DelayedElement> elem = queue.iterator(); while(elem.hasNext()) { if(elem.next().tstamp > System.currentTimeMillis()) { usedPermits++; , synchronized(putMonitor) { int XXXXX = 0; Iterator<DelayedElement> elem = queue.iterator(); while(elem.hasNext()) { if(elem.next().tstamp > System.currentTimeMillis()) { XXXXX++; 
1," if(methodOpt<1 || methodOpt>3)throw new IllegalArgumentException(""Argument to PsRandom.setMethodInteger must 1, 2 or 3\nValue transferred was""+methodOpt); this.methodOptionInteger = methodOpt; "," if(methodOpt<1 || methodOpt>3)throw new IllegalArgumentException(""Argument to PsRandom.setMethodInteger must 1, 2 or 3\nValue transferred was""+methodOpt); this.methodOptionInteger = methodOpt; "
0," try { String result = """"; String feedback; if(numOpts > 1) { result = ""You must select only one of --all, --id, --user, --dn, --gid, --gname, or --host""; System.err.println(result); return; "," String functionAlias = ""alias"" ; fixture.setFunctionAlias( functionAlias ) ; String alias = fixture.getFunctionAlias() ; assertNotNull( alias ) ; assertEquals( functionAlias, alias ) ; "
1, BufferedImage image; if (destCM == null) { ColorModel srcCM = src.getColorModel(); int nbands = destCS.getNumComponents(); boolean hasAlpha = srcCM.hasAlpha(); if (hasAlpha) { nbands += 1; , BufferedImage image; if (destCM == null) { ColorModel XXXXX = src.getColorModel(); int XXXXX = destCS.getNumComponents(); boolean XXXXX = XXXXX.XXXXX(); if (XXXXX) { XXXXX += 1; 
0," System.out.println(type + "": "" + e.getMessage()); System.out.println(""Line "" + e.getLineNumber() + "" Column "" + e.getColumnNumber()); System.out.println(""System ID: "" + e.getSystemId()); "," if (oldVersion >= newVersion) return; String sql = null; if (oldVersion == 1) sql = ""alter table "" + TABLE + "" add note text;""; if (oldVersion == 2) sql = """"; if (sql != null) db.execSQL(sql); "
0, List childList = messageManager.getFirstLevelChildMsgs(this.getMessage().getId()); if((childList != null) && (childList.size()>0)) hasChild = true; else hasChild = false; return hasChild; ," URLConfigurationSource source = new URLConfigurationSource(); if (source.getConfigUrls() != null && source.getConfigUrls().size() > 0) { startPolling(source, new FixedDelayPollingScheduler()); "
1," String returnValue = String.valueOf(this.typeID) + "":"" + (this.allDataValues?""*"":String.valueOf(this.data)); if(this.description != null) returnValue += "":"" + this.description; return returnValue; "," String XXXXX = String.valueOf(this.typeID) + "":"" + (this.allDataValues?""*"":String.valueOf(this.data)); if(this.description != null) XXXXX += "":"" + this.description; return XXXXX; "
1," try { String sql = ""DELETE FROM feature WHERE uniquename='"" + feature.getUniqueName() + ""'""; appendToLogFile(sql, sqlLog); Statement st = conn.createStatement(); return st.executeUpdate(sql); "," try { String XXXXX = ""DELETE FROM feature WHERE uniquename='"" + feature.getUniqueName() + ""'""; appendToLogFile(XXXXX, XXXXXLog); Statement XXXXX = conn.createStatement(); return XXXXX.executeUpdate(XXXXX); "
0," if ( isArchivePath( path, true ) ) { String appended = getPathLabel( path.removeLastSegments( 1 ), isExternal ); String lastSegment = path.lastSegment( ) ; return MessageFormat.format( ""{0"," if (!iconsCache.containsKey(path)) { URL url = ResourcesCache.class.getClassLoader().getResource(path); if (url==null) { url = ResourcesCache.class.getClassLoader().getResource(""lib/""+path); "
1," FacesContext context = FacesContext.getCurrentInstance(); if (context.isProjectStage(ProjectStage.Development)) { context.getExternalContext().log( getClass().getName() + "" - "" + msg); "," FacesContext context = FacesContext.getCurrentInstance(); if (context.isProjectStage(ProjectStage.Development)) { context.getExternalContext().log( getClass().getName() + "" - "" + msg); "
0," LOG.debug(""Refreshing reconfigure properties for project "" + projectFourPartName + "".""); cmd.clearArgs(); cmd.createArgument(""reconfigure_properties""); if (recurse) { cmd.createArgument(""-recurse""); "," DataPuller puller; Map<String, DataPuller> serverPullers = pullers.get(server.getId()); if (serverPullers != null) { puller = serverPullers.get(type); if (puller != null) return puller; "
0," ActiveRecord hash = EntryCorral.getInstance().takeForRead(identifier); Integer multisnipeId = hash.getInteger(""multisnipe_id""); return multisnipeId == null ? null : MultiSnipe.find(multisnipeId); ", if( complete || reader != null ) return; try { if( currentSplit < splits.length ) { if( lastReader != null ) lastReader.close(); reader = makeReader( currentSplit++ ); lastReader = reader; 
1," StandardDialRange r1 = new StandardDialRange(); StandardDialRange r2 = new StandardDialRange(); assertTrue(r1.equals(r2)); int h1 = r1.hashCode(); int h2 = r2.hashCode(); assertEquals(h1, h2); "," StandardDialRange XXXXX = new StandardDialRange(); StandardDialRange XXXXX = new StandardDialRange(); assertTrue(XXXXX.equals(XXXXX)); int XXXXX = XXXXX.hashCode(); int XXXXX = XXXXX.hashCode(); assertEquals(XXXXX, XXXXX); "
1," return SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(it, ""context"", true), ""jetbrains.mps.core.notation.structure.SNotationConceptContext""), ""element"", false); "," return SLinkOperations.getTarget(SNodeOperations.cast(SLinkOperations.getTarget(it, ""context"", true), ""jetbrains.mps.core.notation.structure.SNotationConceptContext""), ""element"", false); "
1, if (dm == null && hash != null) { try { GlobalManager gm = AzureusCoreFactory.getSingleton().getGlobalManager(); return gm.getDownloadManager(new HashWrapper(Base32.decode(hash))); , if (dm == null && hash != null) { try { GlobalManager gm = AzureusCoreFactory.getSingleton().getGlobalManager(); return gm.getDownloadManager(new HashWrapper(Base32.decode(hash))); 
0, if( action.shouldVisitParameterDeclarations ){ switch( action.visit( this ) ){ case ASTVisitor.PROCESS_ABORT : return false; case ASTVisitor.PROCESS_SKIP : return true; default : break; , final int selectionIndex = flagsList.getSelectionIndex(); txtChange.setText(flagsList.getItem(selectionIndex)); txtChange.setVisible(true); btnValidateChanges.setVisible(true); txtChange.setFocus(); 
0," if (x != getX()) { double oldX = getX(); getGeometricObject().x = x; getGraphicalRepresentation().notify(new FGENotification(""x"", oldX, x)); getGraphicalRepresentation().notifyGeometryChanged(); ", boolean renamedArtifact = !newArtifactId.equals(artifactId); renameCheckbox.setEnabled(renamedArtifact); if (!renamedArtifact) { renameCheckbox.setSelection(false); renamed = false; 
0," super(world); xTile = -1; yTile = -1; zTile = -1; inTile = 0; inData = 0; inGround = false; doesArrowBelongToPlayer = false; arrowShake = 0; ticksInAir = 0; soundTimer = 0; setSize(0.5F, 0.5F); "," int position = 1; int size = buffer[0]; if (!nativeAcceleration) for (int i = 0; i < size; i++) { if (keysToUpdate[i]) { CONVERTER.putLong(buffer, position, keys[i]); keysToUpdate[i] = false; "
0," Vector vector = new Vector(); if (s.equalsIgnoreCase(""s"")) return vector; for (int i = 0; i < s.length(); i++) { vector.add(faceToVector(strToDirection(s.substring(i, i+1), forward))); "," boolean isChecked = fRegisteredProcessButton.getSelection(); if (!isChecked) { MessageDialog.openWarning(getShell(), Messages.PDebugPreferencePage_4, Messages.PDebugPreferencePage_5); "
1," String id = param.getParamValue(""statusId""); RequestParam reqParam = null; if (null != param.getParamValue(""status"")) { reqParam = toRequestParam(""status"", param.getParamValue(""status"")); "," String XXXXX = param.getParamValue(""statusId""); RequestParam XXXXX = null; if (null != param.getParamValue(""status"")) { XXXXX = toRequestParam(""status"", param.getParamValue(""status"")); "
0," super( model ); this.highlighter = new DefaultTableCellRenderer(); this.highlighter.setForeground( new Color( 255, 255, 255 ) ); this.highlighter.setBackground( new Color( 0, 0, 128 ) ); "," view = new ParagraphViewNotVisible(block, factory); assertFalse(view.isVisible()); assertEquals(0, view.getMaximumSpan(View.X_AXIS), 0f); assertEquals(0, view.getMaximumSpan(View.Y_AXIS), 0f); "
0," ContentValues contentValues = new ContentValues(); contentValues.put(""nickname"", nickname); contentValues.put(""post"", post); getWritableDatabase().insertOrThrow(CHATLOG, null, contentValues); "," this.scannerConfig = scannerConfig; pingers = new LinkedHashMap<String, Class<? extends Pinger>>(); if (Platform.WINDOWS && !Platform.ARCH_64) { pingers.put(""pinger.windows"", WindowsPinger.class); "
1," super(Duration.WhileOnBattlefield, Layer.TypeChangingEffects_4, SubLayer.NA, Outcome.Benefit); staticText = ""Each creature you control is the chosen type in addition to its other types""; "," super(Duration.WhileOnBattlefield, Layer.TypeChangingEffects_4, SubLayer.NA, Outcome.Benefit); staticText = ""Each creature you control is the chosen type in addition to its other types""; "
1," SlicePredicate predicate = new SlicePredicate(); predicate.setSlice_range(new SliceRange(nullSafeGet(startName), nullSafeGet(finishName), reversed, maxColCount)); return predicate; "," SlicePredicate XXXXX = new SlicePredicate(); XXXXX.setSlice_range(new SliceRange(nullSafeGet(startName), nullSafeGet(finishName), reversed, maxColCount)); return XXXXX; "
0, _conf = conf; setValidating(true); setLog(conf.getLog(OpenJPAConfiguration.LOG_METADATA)); setParseComments(true); setMode(MODE_META | MODE_MAPPING | MODE_QUERY); setParseText(true); , int hash = super.hashCode(); hash = 17 * hash + (this.exterior != null ? this.exterior.hashCode() : 0); hash = 17 * hash + (this.interior != null ? this.interior.hashCode() : 0); return hash; 
1," String tmp = ""\t<preset name=\""""+pName+""\"" algo=\""""+pAlgor+""\"" params=\""""; for (Object d : pVals) tmp = tmp + d + ""#""; tmp = tmp.substring(0,tmp.length()-1); tmp += ""\""/>\n""; return tmp; "," String XXXXX = ""\t<preset name=\""""+pName+""\"" algo=\""""+pAlgor+""\"" params=\""""; for (Object d : pVals) XXXXX = XXXXX + d + ""#""; XXXXX = XXXXX.substring(0,XXXXX.length()-1); XXXXX += ""\""/>\n""; return XXXXX; "
1," if (layer instanceof StyleLayer) { StyleLayer styleLayer = (StyleLayer) layer; Style style = JSimpleStyleDialog.showDialog(this, styleLayer); if (style != null) { styleLayer.setStyle(style); "," if (layer instanceof StyleLayer) { StyleLayer XXXXX = (StyleLayer) layer; Style XXXXX = JSimpleStyleDialog.showDialog(this, XXXXX); if (XXXXX != null) { XXXXX.setStyle(XXXXX); "
0," for (int i = -1; ; i++) { String prefix = ""/terrain/sky"" + worldType + ""/sky"" + (i < 0 ? """" : """" + i); Layer layer = Layer.create(prefix); if (layer == null) { if (i > 0) { break; "," Resource resource = new Resource(); boolean atEnd = false; while(!atEnd) { if (reader.isStartElement()) { String newResGuid = QUuid.createUuid().toString().replace(""{"", """").replace("""
0," CGparameter p = CgGL.cgGetNamedParameter(currProgram, name); if (p != null) CgGL.cgGLSetStateMatrixParameter(p, CgGL.CG_GL_MODELVIEW_PROJECTION_MATRIX, CgGL.CG_GL_MATRIX_IDENTITY); ", ((TableRow)findViewById(R.id.UserNameTableRow)).setVisibility(visible?View.VISIBLE:View.GONE); ((TableRow)findViewById(R.id.PasswordTableRow)).setVisibility(visible?View.VISIBLE:View.GONE); 
1," model.addModelChangeListener(new IRemovableEntryListener<IAnimalForm>() { @Override public void entryAdded(IAnimalForm form) { addAnimalFormView(basicUi, form); reset(selectionView); "," model.addModelChangeListener(new IRemovableEntryListener<IAnimalForm>() { @Override public void entryAdded(IAnimalForm form) { addAnimalFormView(basicUi, form); reset(selectionView); "
0," if(isVirtual) owner.sendMessage(prefix + ""Drill deactivated! ["" + -id +""]"" ); else if( linked ) parent.disable(); else owner.sendMessage(prefix + ""Drill deactivated! ["" + id +""]"" ); enabled = false; "," try { if((token == null || token == """") && (secret == null || secret == """") && auth == false && browser == false) authURL = provider.retrieveRequestToken(consumer, OAUTH_CALLBACK_URL); "
1," FragmentTransaction ft = getSupportFragmentManager().beginTransaction(); Fragment prev = getSupportFragmentManager().findFragmentByTag( ""countdown""); if (prev != null) { ft.remove(prev); "," FragmentTransaction ft = getSupportFragmentManager().beginTransaction(); Fragment prev = getSupportFragmentManager().findFragmentByTag( ""countdown""); if (prev != null) { ft.remove(prev); "
0," if (StringUtils.isBlank(branchOfficeId)) { addError(errors, ConfigurationConstants.BRANCHOFFICE, LoanConstants.MANDATORY_SELECT, getMessageText( ConfigurationConstants.BRANCHOFFICE)); ", assertNull(resultBundle.get(AccountManager.KEY_ACCOUNT_NAME)); assertNull(resultBundle.get(AccountManager.KEY_ACCOUNT_TYPE)); assertNull(resultBundle.get(AccountManager.KEY_AUTHTOKEN)); 
1," StringBuffer sb = new StringBuffer(); for (Iterator i = this.notes.iterator(); i.hasNext(); ) { sb.append(""[""); sb.append(i.next()); sb.append(""]""); if (i.hasNext()) sb.append("",""); "," StrXXXXXngBuffer XXXXX = new StrXXXXXngBuffer(); for (Iterator XXXXX = thXXXXXs.notes.XXXXXterator(); XXXXX.hasNext(); ) { XXXXX.append(""[""); XXXXX.append(XXXXX.next()); XXXXX.append(""]""); XXXXXf (XXXXX.hasNext()) XXXXX.append("",""); "
0," initiateWebApplication(ParentWithTemplates.class); assertEquals(""parent"", resource(""/parent"").get(String.class)); assertEquals(""first"", resource(""/parent/child/first?a=1&b=2"").get(String.class)); ", if (selection != null && selection.isEmpty() == false && selection instanceof IStructuredSelection) { IStructuredSelection ssel = (IStructuredSelection) selection; if (ssel.size() > 1) { return; 
0," begin(); try { List<String> isolatedNames = (List<String>)storage_.getClass().getMethod(methodName).invoke(storage_); assertEquals(new HashSet<String>(names), new HashSet<String>(isolatedNames)); "," return ""id = "" + getId() + "" user_id = "" + getUserId() + "" from_status_id = "" + getFromStatusId() + "" to_status_id = "" + getToStatusId() + "" transition_date = "" + getTransitionDate().toString(); "
0," String escdirpath = evt.escapeString(dirpath); Map<String, String> partitions = evt.getEscapeMapping(dirpath); return new HiveDirCreatedNotification(hivetable, escdirpath, partitions); "," String id = feature.getVersionedIdentifier().getIdentifier(); ArrayList entries = (ArrayList) featureTable.get(id); if (entries == null) { entries = new ArrayList(); featureTable.put(id, entries); "
0," Intent intent = new Intent(this, PpomPpuService.class); intent.setAction(PpomPpuService.SHOPING_ACTION); intent.putExtra(PpomPpuService.SEARCH_KEY, aSearchKey); startService(intent); "," TestSuite suite = new TestSuite(""NetworkServerControlApiTest""); if (!Derby.hasServer()) return suite; suite.addTest(decorateTest()); suite = decorateSystemPropertyTests(suite); return suite; "
0," PowerShellAttachedStorageDomainsResource resource = new PowerShellAttachedStorageDomainsResource(getId(), shellPools, getParser()); resource.setUriInfo(getUriInfo()); return resource; ", final Button typeButton = (Button) findViewById(R.id.type); typeSelected = type; typeButton.setText(typeSelected.getL10n()); if (Settings.isUseTwitter()) { tweetBox.setVisibility(View.VISIBLE); 
0," Criteria crit = new Criteria(); crit.addEqualTo(""attachmentId"", attachment.getAttachmentId()); this.getPersistenceBrokerTemplate().deleteByQuery(new QueryByCriteria(Attachment.class, crit)); ", int widgetLine; if (viewer instanceof ITextViewerExtension5) { ITextViewerExtension5 extension= (ITextViewerExtension5) viewer; widgetLine= extension.modelLine2WidgetLine(modelLine); 
1, for (DevKit d : getModules(DevKit.class)) { if (moduleReference.getModuleId() != null) { if (d.getModuleReference().getModuleId().equals(moduleReference.getModuleId())) { return d; , for (DevKit d : getModules(DevKit.class)) { if (moduleReference.getModuleId() != null) { if (d.getModuleReference().getModuleId().equals(moduleReference.getModuleId())) { return d; 
1," final int values=60*6; int sq = firstSeq; btnGetLast.setEnabled(false); while(firstSeq - sq < values && sq > 0){ getData(sq); sq--; postep.setText(""""+(firstSeq-sq) +""/"" +values); "," final int values=60*6; int XXXXX = firstSeq; btnGetLast.setEnabled(false); while(firstSeq - XXXXX < values && XXXXX > 0){ getData(XXXXX); XXXXX--; postep.setText(""""+(firstSeq-XXXXX) +""/"" +values); "
1, ITranslationUnit unit = context.getTranslationUnit(); if(unit != null) return matches(unit); IProject project = context.getProject(); if(project != null) return matches(project); return true; , ITranslationUnit XXXXX = context.getTranslationUnit(); if(XXXXX != null) return matches(XXXXX); IProject XXXXX = context.getProject(); if(XXXXX != null) return matches(XXXXX); return true; 
0, persister.setShouldFailLoad(true); exceptionHandler.setLoadStrategy(LoadFailureSolutionStrategy.RETRY); try { configServiceAccessor.load(ConfigServiceAccessorTestConfiguration.class); , for (int i=0; i<size(); i++) { Mapping m = get(i); if (m.getOrigin()==null || m.getImage()==null || m.getOrigin().eContainer()==null || m.getImage().eContainer()==null) { remove(i--); 
1," IAttributeMap m = PIMRuntime.getInstance().getCallerFactory().createAttributeMap(); m.add(PIMRuntime.getInstance().getCallerFactory().createAttribute(""outlook.business"", ""true"")); return m; "," IAttributeMap m = PIMRuntime.getInstance().getCallerFactory().createAttributeMap(); m.add(PIMRuntime.getInstance().getCallerFactory().createAttribute(""outlook.business"", ""true"")); return m; "
1," out.println ( "" public static final String "" + prefix + ""_PFX = \"""" + prefix + ""\"";"" ); out.println ( "" public static final int "" + prefix + ""_CNT = "" + numResources + "";"" ); out.println(""""); "," out.println ( "" public static final String "" + prefix + ""_PFX = \"""" + prefix + ""\"";"" ); out.println ( "" public static final int "" + prefix + ""_CNT = "" + numResources + "";"" ); out.println(""""); "
0," String label = ((AbstractToolEntry)object).getTitle(); return label == null || label.length() == 0 ? getString(""_UI_AbstractToolEntry_type"") : getString(""_UI_AbstractToolEntry_type"") + "" "" + label; "," if ((!isObserverRegistered) && (getModel() != null)) { isObserverRegistered = true; if (logger.isLoggable(Level.FINE)) { logger.fine(""*** addObserver "" + getFileName() + "" for "" + getModel()); "
0," final TaskAttribute attribute = new TaskAttribute(parent, id); attribute.getMetaData().defaults().setLabel(label).setType(type) .setKind(kind).setReadOnly(readOnly); return attribute; "," tree.defs = tree.defs.prepend(make.Import(make.Select(make.Select( make.Ident(names.fromString(""jsr166y"")), names.fromString(""forkjoin"")), names.asterisk),false)); super.visitTopLevel(tree); "
0," FlowLayoutContainer container = new FlowLayoutContainer(); container.setPixelSize(400, 400); TextButton button = new TextButton(""Click Me""); container.add(button); RootPanel.get().add(container); "," BuildDependency buildDependency = new BuildDependencyBuilder().name(""foo"").number(""123"").started(timestamp).build(); assertNull(buildDependency.getUrl(), ""URI should have not been initialized.""); "
1," assertEquals("" incorrect BidiSegmentEvent"", 0, event.lineOffset); assertEquals("" incorrect BidiSegmentEvent"", line, event.lineText); event.segments = segments; listenerCalled = true; "," assertEquals("" incorrect BidiSegmentEvent"", 0, event.lineOffset); assertEquals("" incorrect BidiSegmentEvent"", line, event.lineText); event.segments = segments; listenerCalled = true; "
1, if (obj instanceof FullObjectID) { FullObjectID cid = (FullObjectID) obj; try { boolean result = (this.mainObj == cid.mainObj); if (this.subID == null) { result = result && (cid.subID == null); , if (obj instanceof FullObjectID) { FullObjectID XXXXX = (FullObjectID) obj; try { boolean XXXXX = (this.mainObj == XXXXX.mainObj); if (this.subID == null) { XXXXX = XXXXX && (XXXXX.subID == null); 
1," Lookahead la = new Lookahead(); Sequence s = new Sequence(t, la); assertEquals(t.beginColumn, s.getColumn()); assertEquals(t.beginLine, s.getLine()); assertSame(la, s.units.get(0)); "," Lookahead XXXXX = new Lookahead(); Sequence XXXXX = new Sequence(t, XXXXX); aXXXXXXXXXXertEqualXXXXX(t.beginColumn, XXXXX.getColumn()); aXXXXXXXXXXertEqualXXXXX(t.beginLine, XXXXX.getLine()); aXXXXXXXXXXertSame(XXXXX, XXXXX.unitXXXXX.get(0)); "
1," GeocoderAddressComponent o = GeocoderAddressComponent.newInstace(); String left = ""test""; o.setLong_Name(left); String right = o.getLong_Name(); assertEquals(left, right); finishTest(); "," GeXXXXXcXXXXXderAddressCXXXXXmpXXXXXnent XXXXX = GeXXXXXcXXXXXderAddressCXXXXXmpXXXXXnent.newInstace(); String XXXXX = ""test""; XXXXX.setLXXXXXng_Name(XXXXX); String XXXXX = XXXXX.getLXXXXXng_Name(); assertEquals(XXXXX, XXXXX); finishTest(); "
0," View v = convertView; if (v == null) { LayoutInflater vi = (LayoutInflater)fContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE); v = vi.inflate(R.layout.appwidgetpicker, null); ", PointPlacement pointp = new PointPlacementImpl(filterFactory); pointp.setAnchorPoint(anchorPoint); pointp.setDisplacement(displacement); pointp.setRotation(rotation); return pointp; 
0," ITraitReference reference = new DefaultTraitReference(visitedTrait); SpecialtiesContainer container = addSpecialtiesContainer(reference); specialtiesByType.put(visitedTrait.getType(), container); ", final FileBasedStorage storage = (FileBasedStorage)getStateStorageManager().getFileStateStorage(StoragePathMacros.PROJECT_FILE); assert storage != null; return storage.getFileName(); 
1, for (LinkedListToken tok = tree.getStartToken().getNext(); tok != null && tok.getType() != -1; tok = tok.getNext()) { if (tok.getType() == ASDocParser.NL) { tok.setText(indentNL); , for (LinkedListToken XXXXX = tree.getStartToken().getNext(); XXXXX != null && XXXXX.getType() != -1; XXXXX = XXXXX.getNext()) { if (XXXXX.getType() == ASDocParser.NL) { XXXXX.setText(indentNL); 
1," Object keyNum = req.token; final ClientKey key = req.ckey; if(key == null) { Logger.error(SendableGet.class, ""Key is null in send(): keyNum = ""+keyNum+"" for ""+req); return false; "," Object XXXXX = req.token; final ClientKey XXXXX = req.cXXXXX; if(XXXXX == null) { Logger.error(SendableGet.class, ""Key is null in send(): XXXXX = ""+XXXXX+"" for ""+req); return false; "
0," try { File file = new File(""PersonalizedTrustModelConfiguration.ini""); int i = 0; while (file.exists()) { file = new File(""PersonalizedTrustModelConfiguration"" + i + "".ini""); i++; ", JPEGComponent comp; for(int i=0; i < components.size() ; i++) { comp = (JPEGComponent)components.get(i); if(comp.factorH > maxH) maxH=comp.factorH; if(comp.factorV > maxV) maxV=comp.factorV; 
1," StreamStartToken token = (StreamStartToken) scanner.getToken(); Event event = new StreamStartEvent(token.getStartMark(), token.getEndMark()); state = new ParseImplicitDocumentStart(); return event; "," StreamStartToken XXXXX = (StreamStartToken) scanner.getToken(); Event XXXXX = new StreamStartEvent(XXXXX.getStartMark(), XXXXX.getEndMark()); state = new ParseImplicitDocumentStart(); return XXXXX; "
0, listScrollPane.setVisible(false); setResizable(false); currentSearch = null; geonameLayer.clearText(); listModel.clear(); clearButton.setEnabled(false); if (wwd != null) wwd.redraw(); validate(); ," table.addTableLayoutListener(layoutListener); table.getTable().getColumnModel().moveColumn(0, 1); sleep(LabeledTable.TABLE_SAVE_DELAY + 50); verify(layoutListener).tableChanged(anyObject()); "
0," if (pageAppendum != null) { String pageAppendum = this.pageAppendum.text; String qualifiedUrl = computeQualifiedWebPageUrl(path.name); String appendum = pageAppendum.replace(""{url", super.setForeground(fg); isForegroundSet = true; if (links != null) { for (int i = 0; i < links.size(); i++) { Hyperlink label = (Hyperlink) links.get(i); label.setForeground(fg); 
1, String messageFormatterProperty = null; Object property = msgContext .getProperty(Constants.Configuration.MESSAGE_TYPE); if (property != null) { messageFormatterProperty = (String) property; , String XXXXX = null; Object XXXXX = msgContext .getProperty(Constants.Configuration.MESSAGE_TYPE); if (XXXXX != null) { XXXXX = (String) XXXXX; 
0," if (worldObj.getBlockTileEntity(xCoord, yCoord, zCoord) != this) return false; return entityplayer.getDistanceSq((double)xCoord + 0.5D, (double)yCoord + 0.5D, (double)zCoord + 0.5D) <= 64D; "," ArrayAdapter<String> adapter = new ArrayAdapter<String>(this, R.layout.device_name); setListAdapter(adapter); if (mDevices.size() > 0) { for (String device : mDevices) { adapter.add(device); "
1, int unread1 = ((DecoratedCompiledMessageStatistics) item).getUnreadForumsAmt(); int unread2 = ((DecoratedCompiledMessageStatistics) anotherItem).getUnreadForumsAmt(); return unread1 - unread2; , int XXXXX = ((DecoratedCompiledMessageStatistics) item).getUnreadForumsAmt(); int XXXXX = ((DecoratedCompiledMessageStatistics) anotherItem).getUnreadForumsAmt(); return XXXXX - XXXXX; 
0," return (FiscalPeriod) this.em .createNamedQuery(FiscalPeriod.NQ_FIND_BY_CODE) .setParameter(""pClientId"", Session.user.get().getClientId()) .setParameter(""pCode"", code).getSingleResult(); "," int len = contact.length(); if (contact.charAt(0) == '[') { int from = contact.indexOf(']'); if (from == -1) { throw new IllegalArgumentException( ""Missing ']' in IPv6 address: ""+ contact ); "
0, String suid = inst.getString(Tag.SeriesInstanceUID); for (Attributes prefSeries : prefSeriesSeq) { if (suid.equals(prefSeries.getString(Tag.SeriesInstanceUID))) return prefSeries; , if (size == -1 || modified) { long c = 0; Enumeration<String> headerLines = getAllHeaderLines(); while (headerLines.hasMoreElements()) { c += headerLines.nextElement().length(); c += 2; 
0, singleReferencesForEObjectFlatComboViewer.setInput(settings); if (current != null) { singleReferencesForEObjectFlatComboViewer.setSelection(new StructuredSelection(settings.getValue())); , this.investItemsItemMap = data; if(investItemsItemMap != null) { ids.clear(); for(ItemBeanWithMaterials item : investItemsItemMap.values()) { ids.addAll(ManufactureUtils.getIds(item)); 
1," IDialogSettings master = PDEPlugin.getDefault().getDialogSettings(); IDialogSettings section = master.getSection(""pluginsView""); if (section == null) { section = master.addNewSection(""pluginsView""); "," IDialogSettings master = PDEPlugin.getDefault().getDialogSettings(); IDialogSettings section = master.getSection(""pluginsView""); if (section == null) { section = master.addNewSection(""pluginsView""); "
0, final int prime = 31; int result = 1; result = prime * result + ((_key == null) ? 0 : _key.hashCode()); result = prime * result + ((_value == null) ? 0 : _value.hashCode()); return result; ," ensureLoggedIn(); validateLink(uri, Link.Type.IMAGE); synchronized (_lockedImages) { int count = 0; while (_lockedImages.contains(uri) && ++count < 5) { try { _lockedImages.wait(2500); "
1," if (storedPopups.get(aFile) == null) { Hashtable<ContentSource, CGFileVersionPopup> newHashtable = new Hashtable<ContentSource, CGFileVersionPopup>(); storedPopups.put(aFile, newHashtable); "," if (storedPopups.get(aFile) == null) { Hashtable<ContentSource, CGFileVersionPopup> newHashtable = new Hashtable<ContentSource, CGFileVersionPopup>(); storedPopups.put(aFile, newHashtable); "
1," StmUtils.atomic(new TxnVoidCallable() { @Override public void call(Txn tx) throws Exception { int result = list.indexOf(""a""); assertEquals(result, -1); assertEquals(""[]"", list.toString()); "," StmUtils.atomic(new TxnVoidCallable() { @Override public void call(Txn tx) throws Exception { int XXXXX = list.indexOf(""a""); assertEquals(XXXXX, -1); assertEquals(""[]"", list.toString()); "
1," List tasks = parseTasks(""TASK"", ""\r\n"" + BASIC_MESSAGE); assertEquals(1, tasks.size()); assertTask(BASIC_MESSAGE_EXPECTED, 3, 2, IMarker.PRIORITY_NORMAL, (TaskTag) tasks.get(0)); "," List tasks = parseTasks(""TASK"", ""\r\n"" + BASIC_MESSAGE); assertEquals(1, tasks.size()); assertTask(BASIC_MESSAGE_EXPECTED, 3, 2, IMarker.PRIORITY_NORMAL, (TaskTag) tasks.get(0)); "
1," List accessRightUsers = (List)this.accessRight.get(""accessRightUsers""); if(accessRightUsers == null) { accessRightUsers = new ArrayList(); this.accessRight.put(""accessRightUsers"", accessRightUsers); "," List XXXXX = (List)this.accessRight.get(""XXXXX""); if(XXXXX == null) { XXXXX = new ArrayList(); this.accessRight.put(""XXXXX"", XXXXX); "
0," NullValues pc = new NullValues(); assertCommitSucceeds(pc, NEW); OpenJPAPersistence.getEntityManager(pc).close(); pc.setNotNullableBlob(null); assertCommitFails(pc, !NEW, RollbackException.class); "," CheckedTreeSelectionDialog dialog = new CheckedTreeSelectionDialog(shell, WorkbenchLabelProvider.getDecoratingWorkbenchLabelProvider(), new ITreeContentProvider() { @Override public void dispose() { "
0, for (int i = 0; i < m.length; i++) if (line2UsedWords[m.start + i]) return true; for (int i = 0; i < m.matchLength; i++) if (line1UsedWords[m.matchStart + i]) return true; return false; , switch( mTrackColoringMethod ) { case ( DRAW_CALCULATED ): case ( DRAW_MEASURED ): case ( DRAW_RED ): case ( DRAW_GREEN ): drawPath( canvas ); break; case ( DRAW_DOTS ): drawDots( canvas ); break; 
1, Object res1 = null; Object res2 = null; AbstractAction action1 = new AbstractAction() { private static final long serialVersionUID = 1L; public void actionPerformed(final ActionEvent event) { , Object XXXXX = null; Object XXXXX = null; AbstractAction XXXXX = new AbstractAction() { private static final long XXXXX = 1L; public void actionPerformed(final ActionEvent event) { 
0," MapBuilder mb = new MapBuilder(); mb.append(""pattern"", getPatternName()); mb.append(""filters"", getFilters()); return new ToStringBuilder().append(getClass().getSimpleName()).append(mb).toString(); "," ObjectMapper mapper = new ObjectMapper(); groups.media.add(JavaBuiltIn.mediaTransformer, new StdJacksonDataBind<MediaContent>(""json/jackson/databind"", MediaContent.class, mapper)); "
0," setJdbcDriver(driver); setJdbcUrl(jdbcCon); setJdbcUsername(usr); setJdbcPassword(psw); l.debug(""Loading JDBC driver "" + jdbcDriver); try { Class.forName(jdbcDriver).newInstance(); "," return ""PrivateIp [networkType="" + getNetworkType() + "", id="" + getId() + "", ip="" + getIp() + "", mac="" + getMac() + "", name="" + getName() + "", networkName="" + getNetworkName() + ""]""; "
1, if (closeAllCharacters()) { currentSourceSelection.setReference(null); Globals.emptyLists(); PersistenceManager pManager = PersistenceManager.getInstance(); pManager.clear(); updateTitle(); , if (closeAllCharacters()) { currentSourceSelection.setReference(null); Globals.emptyLists(); PersistenceManager XXXXX = PersistenceManager.getInstance(); XXXXX.clear(); updateTitle(); 
1," if (!(o instanceof Map.Entry)) return false; Map.Entry entry = (Map.Entry)o; Object value = entry.getValue(); Entry p = getEntry(entry.getKey()); return p != null && valEquals(p.getValue(), value); "," if (!(o instanceof MaXXXXX.Entry)) return false; MaXXXXX.Entry XXXXX = (MaXXXXX.Entry)o; Object XXXXX = XXXXX.getValue(); Entry XXXXX = getEntry(XXXXX.getKey()); return XXXXX != null && valEquals(XXXXX.getValue(), XXXXX); "
1," getTextDescriptionBean(); jsonObject = new JSONObject(eqdbean); String keys[] = getEquationParameters(); try { for (int i = 0; i < keys.length; i++) jsonObject.accumulate(""parameters"", keys[i]); "," getTextDescrXXXXXptXXXXXonBean(); jsonObject = new JSONObject(eqdbean); StrXXXXXng keys[] = getEquatXXXXXonParameters(); try { for (XXXXXnt XXXXX = 0; XXXXX < keys.length; XXXXX++) jsonObject.accumulate(""parameters"", keys[XXXXX]); "
0," List<Employee> result = employeeService.getEmployees(); assertNotNull(""Method returned null list as result."", result); assertEquals(""Two employees were expected."", 2, result.size()); ", List<Expression> argList= newCtorCall.arguments(); for(int i=0; i < fArgTypes.length; i++) { ASTNode ctorArg= ast.newSimpleName(fFormalArgNames[i]); argList.add((Expression) ctorArg); 
0," checkOpeness(); final ODocument record = getRecordByUserObject(iPojo, false); if (record != null) return record.getVersion(); return OObjectSerializerHelper.getObjectVersion(iPojo); "," return restTemplate.head(URIWithDocId(id), new ResponseCallback<Boolean>() { @Override public Boolean error(HttpResponse hr) { if (hr.getCode() == HttpStatus.NOT_FOUND) { return Boolean.FALSE; "
1," Trace.entering(Activator.PLUGIN_ID, SyncDebugOptions.METHODS_ENTERING, this.getClass(), ""getOperationalTransform"", new Object[] {remoteIncomingMsg, localAppliedMsg, new Boolean(localMsgHighPrio)"," Trace.entering(Activator.PLUGIN_ID, SyncDebugOptions.METHODS_ENTERING, this.getClass(), ""getOperationalTransform"", new Object[] {remoteIncomingMsg, localAppliedMsg, new Boolean(localMsgHighPrio)"
0," if (featOkTst && casFeat_attributes == null) jcas.throwFeatMissing(""attributes"", ""org.u_compare.shared.document.DocumentClassAnnotation""); return ll_cas.ll_getRefValue(addr, casFeatCode_attributes); ", if(this.composite != null) { Object value = this.composite.getValue(); if(value instanceof Integer) { Integer integer = (Integer)value; if(integer.intValue() >= -1) { return integer; 
1," try { startTrans( """" ); CubeHandle cubeHandle = null; if ( value != null ) { cubeHandle = SessionHandleAdapter.getInstance( ) .getReportDesignHandle( ) .findCube( value.toString( ) ); "," try { startTrans( """" ); CubeHandle cubeHandle = null; if ( value != null ) { cubeHandle = SessionHandleAdapter.getInstance( ) .getReportDesignHandle( ) .findCube( value.toString( ) ); "
1," assertEquals(0, Long.rotateRight(0, 4)); assertEquals(Long.MIN_VALUE, Long.rotateRight(1, 1)); assertEquals(0x1000000000000000L, Long.rotateRight(1, 4)); assertEquals(-1, Long.rotateRight(-1, 4)); "," assertEquals(0, Long.rotateRight(0, 4)); assertEquals(Long.MIN_VALUE, Long.rotateRight(1, 1)); assertEquals(0x1000000000000000L, Long.rotateRight(1, 4)); assertEquals(-1, Long.rotateRight(-1, 4)); "
0," CamelMockBindingModel bindingModel = createMockModel(); assertEquals(NAME, bindingModel.getName()); bindingModel.setName(""newFooMockName""); assertEquals(""newFooMockName"", bindingModel.getName()); "," GetQuotaByQuotaIdQueryParameters params = new GetQuotaByQuotaIdQueryParameters(); params.setQuotaId(guid); Quota quota = performGet(VdcQueryType.GetQuotaByQuotaId, params); return quota; "
1," String text = fStartText.getText(); boolean hex = text.startsWith(""0x""); BigInteger startAddress = new BigInteger(hex ? text.substring(2) : text, hex ? 16 : 10); return startAddress; "," String text = fStartText.getText(); boolean hex = text.startsWith(""0x""); BigInteger startAddress = new BigInteger(hex ? text.substring(2) : text, hex ? 16 : 10); return startAddress; "
0," int done = UNDEFINED; if (item.getMarker() != null && item.getAttributeValue(IMarker.USER_EDITABLE, true)) { done = NOT_DONE; if (item.getAttributeValue(IMarker.DONE, false)) { done = DONE; "," if (!newsCounter.equals(load())) throw new IllegalArgumentException(""Only a single newsCounter should be used. "" + ""Trying to delete a non-existent one.""); super.delete(newsCounter); "
1," Foo representablePrecision = Foo.from(""4.123456789""); this.assertNotSerializable(representablePrecision); this.assertSerializable(representablePrecision, representablePrecision.round()); "," Foo XXXXX = Foo.from(""4.123456789""); this.assertNotSerializable(XXXXX); this.assertSerializable(XXXXX, XXXXX.round()); "
0," if (this.columnNames.contains(name.toUpperCase())) return; this.columnNames.add(name.toUpperCase()); this.columnTypes.add(type.name()); for (DatabaseRowFlatfile r : this.rows) r.cells.add(""""); ", IASTExpression expr = (IASTExpression) astStack.pop(); ICASTArrayDesignator designator = nodeFactory.newArrayDesignator(expr); setOffsetAndLength(designator); astStack.push(designator); 
1," layoutClass = lc; if ((layoutClass == null) || ((layoutClass = layoutClass.trim()).length() == 0)) { System.out.println(""loading null layout!""); this.setLayout(new NullLayout()); "," layoutClass = lc; if ((layoutClass == null) || ((layoutClass = layoutClass.trim()).length() == 0)) { System.out.println(""loading null layout!""); this.setLayout(new NullLayout()); "
0," Matcher matcher = PRE_GENSTAMP_META_FILE_PATTERN.matcher(oldFileName); if (matcher.matches()) { return FSDataset.getMetaFileName(matcher.group(1), Block.GRANDFATHER_GENERATION_STAMP); "," StringBuffer buffer = new StringBuffer(); buffer.append(""---Navajo---\n""); buffer.append(""functions [function name]\n""); buffer.append(""adapters [adapter name]\n""); return buffer.toString(); "
0, JLabel label = (JLabel)c; String text = label.getText(); Icon icon = (label.isEnabled()) ? label.getIcon() : label.getDisabledIcon(); if ((icon == null) && (text == null)) { return; ," DatabaseSpec dbSpec = PersistenceConfig.registerSpec(FAILING_SPEC_ID, 1); dbSpec.match(new HasMany(Author.class, Book.class)); dbSpec.match(new HasMany(Book.class, Author.class)); "
0," WidgetRating wr = repository.get(VALID_WIDGET_RATING_ID); assertThat(wr, is(notNullValue())); repository.delete(wr); wr = repository.get(VALID_WIDGET_RATING_ID); assertThat(wr, is(nullValue())); "," final String[] smallFontKeys = new String[]{ ""ToolTip.font"", ""Menu.acceleratorFont"", ""MenuItem.acceleratorFont"", ""CheckBoxMenuItem.acceleratorFont"", ""RadioButtonMenuItem.acceleratorFont"", "
0," BitmapFactory.Options bfo = new BitmapFactory.Options(); bfo.inSampleSize = 4; bfo.outWidth = 150; bfo.outHeight = 150; Bitmap photo = BitmapFactory.decodeFile(filePath, bfo); return photo; "," putValue(NAME, tr(""Accept Access Token"")); putValue(SMALL_ICON, ImageProvider.get(""ok"")); putValue(SHORT_DESCRIPTION, tr(""Close the dialog and accept the Access Token"")); updateEnabledState(null); "
1," if (lexState >= 4 || lexState < 0) throw new TokenMgrError(""Error: Ignoring invalid lexical state : "" + lexState + "". State unchanged."", TokenMgrError.INVALID_LEXICAL_STATE); curLexState = lexState; "," if (lexState >= 4 || lexState < 0) throw new TokenMgrError(""Error: Ignoring invalid lexical state : "" + lexState + "". State unchanged."", TokenMgrError.INVALID_LEXICAL_STATE); curLexState = lexState; "
1," if (index + this.predictWindowSize > this.points.size()) { final String str = ""Can't generate prediction temporal data "" + ""beyond the end of provided data.""; throw new TemporalError(str); "," if (index + this.predictWindowSize > this.points.size()) { final String str = ""Can't generate prediction temporal data "" + ""beyond the end of provided data.""; throw new TemporalError(str); "
0, MarshalRegistry marshalRegistry = context.getProperty(MarshalRegistry.class); if (marshalRegistry == null) { marshalRegistry = new MarshalRegistry(); context.setProperty(marshalRegistry); , for (final ListIterator<S> it = all.listIterator(); it.hasNext();) { final S cur = it.next(); if (cur.compareTo(newEntry) >= 0) { it.previous(); it.add(newEntry); assert isSorted(); return; 
1, maxGameLength = mgl; maxETA = me; etaBonusFactor = ebf; adversarialFactor = af; leaderAdversarialFactor = laf; devCardMultiplier = dcm; threatMultiplier = tm; strategyType = st; tradeFlag = tf; , maxGameLength = mgl; maxETA = me; etaBonusFactor = ebf; adversarialFactor = af; leaderAdversarialFactor = laf; devCardMultiplier = dcm; threatMultiplier = tm; strategyType = st; tradeFlag = tf; 
1," if (addimport) { try { List<InsertEdit> ies = importEdit(cpc.getRootNode(), Collections.singleton(declaration), null); for (InsertEdit ie: ies) { ie.apply(document); offset+=ie.getText().length(); "," if (addimport) { try { List<InsertEdit> ies = importEdit(cpc.getRootNode(), Collections.singleton(declaration), null); for (InsertEdit ie: ies) { ie.apply(document); offset+=ie.getText().length(); "
0, switch (ringVolume) { case 0: break; case 1: ringSound1.play(); break; case 2: ringSound2.play(); break; case 3: ringSound3.play(); break; default: throw new IllegalStateException(); ," switch(o) { case 0: return ""aload_0 ; "" + n; case 1: return ""aload_1 ; "" + n; case 2: return ""aload_2 ; "" + n; case 3: return ""aload_3 ; "" + n; default: return ""aload "" + o + "" ; "" + n; "
0, DsfDebugUITools.getPreferenceStore().removePropertyChangeListener(fPreferencesListener); getPresentationContext().removePropertyChangeListener(fPresentationContextListener); super.dispose(); , GlobalConfiguration globalConfiguration; if (defaultCacheConfig.getCacheMode().isClustered()) { globalConfiguration = GlobalConfiguration.getClusteredDefault(); amendTransport(globalConfiguration); 
1," String label = ((ProvidesContext)object).getId(); return label == null || label.length() == 0 ? getString(""_UI_ProvidesContext_type"") : getString(""_UI_ProvidesContext_type"") + "" "" + label; "," String label = ((ProvidesContext)object).getId(); return label == null || label.length() == 0 ? getString(""_UI_ProvidesContext_type"") : getString(""_UI_ProvidesContext_type"") + "" "" + label; "
0, final int prime = 31; int result = 1; result = prime * result + ((name == null) ? 0 : name.hashCode()); result = prime * result + ((owner == null) ? 0 : owner.hashCode()); return result; ," boolean result1 = Helpers.prefixMatch(""129.0.1.1"", ""129.0.0.1/16""); Assert.assertTrue(result1); boolean result2 = Helpers.prefixMatch(""129.1.1.1"", ""129.0.0.1/16""); Assert.assertFalse(result2); "
1," Accessible returnValue = ((ComponentUI) (uis.elementAt(0))).getAccessibleChild(a,b); for (int i = 1; i < uis.size(); i++) { ((ComponentUI) (uis.elementAt(i))).getAccessibleChild(a,b); "," AccessXXXXXble XXXXX = ((ComponentUI) (uXXXXXs.elementAt(0))).getAccessXXXXXbleChXXXXXld(a,b); for (XXXXXnt XXXXX = 1; XXXXX < uXXXXXs.sXXXXXze(); XXXXX++) { ((ComponentUI) (uXXXXXs.elementAt(XXXXX))).getAccessXXXXXbleChXXXXXld(a,b); "
0," assertSame(msg.getDomain(), Domain.REF_RESOLVING); assertEquals(msg.getKeyword(), ""N/A""); assertEquals(msg.getMessage(), message); assertEquals(msg.getInfo(""uri"").textValue(), uri.toString()); "," GC gc = event.gc; gc.setLineAttributes(new LineAttributes(10, SWT.CAP_FLAT, SWT.JOIN_MITER, SWT.LINE_SOLID, null, 0, 10)); gc.drawPolyline(new int[] { 50, 100, 50, 20, 60, 30, 50, 45 "
1," StringUserTypeMapper mapper = new StringUserTypeMapper(); assertNull(mapper.mapLdapEntryToSakaiUserType(new LDAPEntry(), new SimpleLdapAttributeMapper())); assertNull(mapper.getUserType()); "," StringUserTypeMapper XXXXX = new StringUserTypeMapper(); assertNull(XXXXX.mapLdapEntryToSakaiUserType(new LDAPEntry(), new SimpleLdapAttributeMapper())); assertNull(XXXXX.getUserType()); "
0," if (path != null) { String correctedPath = path; if (path.endsWith(RegistryConstants.PATH_SEPARATOR)) { correctedPath = path.substring(0, path.lastIndexOf(RegistryConstants.PATH_SEPARATOR)); ", switch ( version ) { case V100: metadata.setModelVersion( null ); Versioning versioning = metadata.getVersioning(); if ( versioning != null ) { versioning.setSnapshotVersions( null ); 
0, super.visitMethod(method); final RefElement refElement = myRefManager.getReference(method); if (refElement instanceof RefMethodImpl) { ((RefMethodImpl)refElement).buildReferences(); ," factory.copy(project, new Path(""MovedProject"")); IStatus status = validateChange(factory); assertStatusEqual(status, new String[] {ChangeDescription.getMessageFor(ChangeDescription.COPIED, project)"
0," super(kind, structureKind, handle, originId, navigatedRelation, delta, interestContribution); this.numCollapsedEvents = numCollapsedEvents; this.eventCountOnCreation = eventCountOnCreation; ", if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; GradleLibrary that = (GradleLibrary)o; return super.equals(that) && myPaths.equals(that.myPaths); 
1, switch (featureID) { case NetDSLPackage.AND_EXP__LEFT: setLeft((relationalExpression)newValue); return; case NetDSLPackage.AND_EXP__RIGHT: setRight((andExpression)newValue); return; , switch (featureID) { case NetDSLPackage.AND_EXP__LEFT: setLeft((relationalExpression)newValue); return; case NetDSLPackage.AND_EXP__RIGHT: setRight((andExpression)newValue); return; 
1, request_id = in.read_ulong(); reply_status = in.read_ulong(); service_context = gnu.CORBA.GIOP.ServiceContext.readSequence(in); in.setCodeSet(CodeSetServiceContext.find(service_context)); , request_id = in.read_ulong(); reply_status = in.read_ulong(); service_context = gnu.CORBA.GIOP.ServiceContext.readSequence(in); in.setCodeSet(CodeSetServiceContext.find(service_context)); 
0," if (super.replaceForwardDecl (oldEntry, newEntry)) return true; int index = _supports.indexOf (oldEntry); if ( index >= 0) _supports.setElementAt (newEntry, index); return (index >= 0); ", while (keepRunning) { try { routingTable.waitUntilTableNotEmpty(); if (keepRunning) { long sleepTime = routingTable.cleanTable(); if (keepRunning && sleepTime > 0) { Thread.sleep(sleepTime); 
1," TmfProjectElement element = registry.get(project); if (element == null && force) { registry.put(project, new TmfProjectElement(project.getName(), project, null)); element = registry.get(project); "," TmfProjectElement XXXXX = registry.get(project); if (XXXXX == null && force) { registry.put(project, new TmfProjectElement(project.getName(), project, null)); XXXXX = registry.get(project); "
1," Intent tracklistIntent = new Intent( LoggerMap.this, TrackList.class ); tracklistIntent.putExtra( Tracks._ID, LoggerMap.this.mTrackId ); startActivityForResult( tracklistIntent, MENU_TRACKLIST ); "," Intent tracklistIntent = new Intent( LoggerMap.this, TrackList.class ); tracklistIntent.putExtra( Tracks._ID, LoggerMap.this.mTrackId ); startActivityForResult( tracklistIntent, MENU_TRACKLIST ); "
0, ISelection selection = tableViewer.getSelection(); for(Iterator<?> selections = ((IStructuredSelection) selection).iterator(); selections.hasNext();) { dependencies.remove(selections.next()); ," InlineBox result = new InlineBox(text, node); if (parentStyle.isInline() && ! (parent.getParentNode() instanceof Document)) { result.setStyle(parentStyle); result.setElement(parent); "
1," if (self.length() == 0) return self; try { StringBuilder builder = new StringBuilder(); for (String line : readLines(self)) { builder.append(expandLine(line, tabStop)); builder.append(""\n""); "," if (self.length() == 0) return self; try { StringBuilder XXXXX = new StringBuilder(); for (String line : readLines(self)) { XXXXX.append(expandLine(line, tabStop)); XXXXX.append(""\n""); "
0," for (int i = 0; i < 8; i++) { for (int j = 0; j < 8; j++) { if (twoTable[i][j] instanceof PieceLabel) { System.out.println(""i: "" + i + "" j: "" + j + "" "" + twoTable[i][j].getPiece()); "," eventBus.addHandler(SelectedSubscriptionEvent.TYPE, new SelectedSubscriptionEventHandler() { public void onSelectedSubscription(SelectedSubscriptionEvent event) { getFeed(event.getUrl()); "
1," BlockingTaskOperationResponseHandler responseHandler = new BlockingTaskOperationResponseHandler(); taskService.resume(taskId, userId, responseHandler); try { responseHandler.waitTillDone(timeout); "," BlockingTaskOperationResponseHandler XXXXX = new BlockingTaskOperationResponseHandler(); taskService.resume(taskId, userId, XXXXX); try { XXXXX.waitTillDone(timeout); "
1," createSimple(""testFindAll1""); createSimple(""testFindAll2""); Simple example = new Simple(""test""); List<Simple> find = dao.findByLike(example, 1, 10, Simple_.name); assertEquals(1, find.size()); "," createSimple(""testFindAll1""); createSimple(""testFindAll2""); Simple XXXXX = new Simple(""test""); List<Simple> find = dao.findByLike(XXXXX, 1, 10, Simple_.name); assertEquals(1, find.size()); "
0, String stringValue = (String) value; try { double doubleValue = new Double(stringValue).doubleValue(); if (doubleValue < 0.0) { return ValidationStatus.error(cannotBeNegativeMessage); , this.mRoamingIndicator = roamingIndicator; this.mIconIndex = iconIndex; this.mIconMode = iconMode; this.mEriText = eriText; this.mCallPromptId = callPromptId; this.mAlertId = alertId; 
0, if (resource == null || resource.length() <= 0) return; if (name == null || name.length() <= 0) return; Properties properties = getProperties(resource); if (properties == null) { return; ," try { String[] pkgs = mPackageManager.getPackagesForUid(uid); ApplicationInfo ai = mPackageManager.getApplicationInfo(pkgs[0], 0); return ai.loadLabel(mPackageManager).toString(); "
1," StringBuilder sb = new StringBuilder(); sb.append( "" Extended Response\n"" ); if ( responseName != null ) { sb.append( "" ResponseName :'"" ).append( responseName ).append( ""'\n"" ); "," StringBuilder XXXXX = new StringBuilder(); XXXXX.append( "" Extended Response\n"" ); if ( responseName != null ) { XXXXX.append( "" ResponseName :'"" ).append( responseName ).append( ""'\n"" ); "
0, for (Option option : volume.getOptions().getOptions()) { if (option.getName().equals(expectedOption.getName()) && option.getValue().equals(expectedOption.getValue())) { return true; ," if (featOkTst && casFeat_fragments == null) jcas.throwFeatMissing(""fragments"", ""org.u_compare.shared.DiscontinuousAnnotation""); ll_cas.ll_setRefValue(addr, casFeatCode_fragments, v);"
1, if( !flow.isStopJobsOnExit() ) return; if( shutdownHook != null ) return; getHdfsShutdownHook(); shutdownHook = new ShutdownUtil.Hook() { @Override public Priority priority() { return Priority.LAST; , if( !flow.isStopJobsOnExit() ) return; if( shutdownHook != null ) return; getHdfsShutdownHook(); shutdownHook = new ShutdownUtil.Hook() { @Override public Priority priority() { return Priority.LAST; 
0," self(args).fRotationMin = (float)args.checkdouble(2); self(args).fRotationMax = LuanBase.IsArgSet(args,3) ? (float)args.checkdouble(3) : self(args).fRotationMin; return LuaValue.NONE; ", if (unmounted == mUnmounted && scanning == mScanning) return; abortWorker(); mUnmounted = unmounted; mScanning = scanning; updateScanningDialog(mScanning); if (mUnmounted) { showNoImagesView(); 
0, int result; result = (id != null ? id.hashCode() : 0); result = 31 * result + (data1 != null ? data1.hashCode() : 0); result = 31 * result + (data2 != null ? data2.hashCode() : 0); return result; , IModelElement parent = field.getParent(); if (parent instanceof IType) { RecordTypeDef typeDef = (RecordTypeDef) getTypeDef((IType) parent); return typeDef.getFields().get(field.getElementName()); 
1," AggregateMediator mediator = new AggregateMediator(); processAuditStatus(mediator, elem); OMAttribute id = elem.getAttribute(ID_Q); if (id != null) { mediator.setId(id.getAttributeValue()); "," AggregateMediator XXXXX = new AggregateMediator(); processAuditStatus(XXXXX, elem); OMAttribute XXXXX = elem.getAttribute(ID_Q); if (XXXXX != null) { XXXXX.setId(XXXXX.getAttributeValue()); "
1," replaceGroupSeqPos(ppss); if (asymStrandId.containsKey(ppss.getAsym_id())) return; if ( ppss.getPdb_strand_id() == null) { asymStrandId.put(ppss.getAsym_id(), ppss.getAuth_mon_id()); return; "," replaceGroupSeqPos(ppss); if (asymStrandId.containsKey(ppss.getAsym_id())) return; if ( ppss.getPdb_strand_id() == null) { asymStrandId.put(ppss.getAsym_id(), ppss.getAuth_mon_id()); return; "
0," String stylePropName = getClass().getName() + "".style""; String style = LogManager.getLogManager().getProperty(stylePropName); try { this.style = Style.valueOf(style.toUpperCase()); ", Object[] children = parent.getChildren(); for (int nX = 0; nX < children.length; nX++) { CheatSheetCollectionElement child = (CheatSheetCollectionElement) children[nX]; pruneEmptyCategories(child); 
1," Bundle bundle = createNiceMock(Bundle.class); expect(bundle.getLocation()).andReturn(""webbundle:foo.jar"").anyTimes(); replay(bundle); assertTrue(WebContainerUtils.isWebBundle(bundle)); "," Bundle XXXXX = createNiceMock(Bundle.class); expect(XXXXX.getLocation()).andReturn(""webXXXXX:foo.jar"").anyTimes(); replay(XXXXX); assertTrue(WebContainerUtils.isWebBundle(XXXXX)); "
0," putValue(NAME, tr(""Accept Access Token"")); putValue(SMALL_ICON, ImageProvider.get(""ok"")); putValue(SHORT_DESCRIPTION, tr(""Close the dialog and accept the Access Token"")); updateEnabledState(null); "," PApplet pa = this.getRenderer(); int vertexCount = this.getVertexCount(); if (this.getVBOVerticesName() == -1){ this.vboVerticesID = ToolsVBO.generateVertexVBO(pa, this.getVertBuff(), vertexCount); "
0, toolkit.dispose(); getSite().getWorkbenchWindow().getSelectionService().removeSelectionListener(this); ResourcesPlugin.getWorkspace().removeResourceChangeListener(this); super.dispose(); , GraphData gd = new GraphData(Application.getBlackBoard()); if (gd.getGraph() == null && mysd.graph == null) return; if (mysd.graph == null) { gd.select.setSelected(mysd); return; 
1," width = Math.max(width, 0f); width = Math.min(width, 0.8f); width /= 2f; boolean changed = mStrokeWidth != width; mStrokeWidth = width; if (changed) { updateGeometry(true, true); invalidateSelf(); "," width = Math.max(width, 0f); width = Math.min(width, 0.8f); width /= 2f; boolean XXXXX = mStrokeWidth != width; mStrokeWidth = width; if (XXXXX) { updateGeometry(true, true); invalidateSelf(); "
1, if (getFileChooser().getFileSelectionMode() == JFileChooser.DIRECTORIES_ONLY) { fileNameLabel.setText(folderNameLabelText); fileNameLabel.setDisplayedMnemonic(folderNameLabelMnemonic); , if (getFileChooser().getFileSelectionMode() == JFileChooser.DIRECTORIES_ONLY) { fileNameLabel.setText(folderNameLabelText); fileNameLabel.setDisplayedMnemonic(folderNameLabelMnemonic); 
0," if (value==null) { combo.clearSelection(); if (combo.getSelectionIndex() != -1) { throw new IllegalArgumentException(""Attempted to clearSelection of Read Only PrintfWrapper "" + getFieldName()); "," individuals(a, b, c); objectProperties(p, q); kb.addDisjointProperty(p, q); kb.addPropertyValue( p, a, c ); kb.addPropertyValue( q, b, c ); assertTrue( kb.isDifferentFrom( a, b ) ); "
1," BufferedImage image = new BufferedImage(50, 50, BufferedImage.TYPE_INT_RGB); image.getGraphics().drawLine(20, 20, 30, 30); image.getGraphics().drawLine(30, 20, 20, 30); return image; "," BufferedImage XXXXX = new BufferedImage(50, 50, BufferedImage.TYPE_INT_RGB); XXXXX.getGraphics().drawLine(20, 20, 30, 30); XXXXX.getGraphics().drawLine(30, 20, 20, 30); return XXXXX; "
0, boolean identifier = false; char[] chars = value.toCharArray(); for (int i = 0; i < chars.length; i++) { char c = chars[i]; if (i == 0) { if (Character.isJavaIdentifierStart(c)) { identifier = true; , Value condition=execute(ifStatement.condition); if (condition.booleanValue()) execStatement(ifStatement.thenStatement); else execStatement(ifStatement.elseStatement); return false; 
0, this.scheme = null; this.authUser = null; this.authPass = null; this.host = null; this.port = DEFAULT_PORT; this.path = null; this.query = null; this.hash = null; this.opaque = null; ," MockitoAnnotations.initMocks(this); orderStateChangeReasonService = new OrderStateChangeReasonService(); setField(orderStateChangeReasonService, ""parameterService"", parameterService); "
0," for ( Iterator i = services.iterator(); i.hasNext(); ) { UPNPService srv = (UPNPService)i.next(); UPNPServiceMBean mBean = new UPNPServiceMBean( device, srv, null, null ); container.add( mBean ); ", boolean valid = true; if (type == IResource.FILE && linkTargetStore.fetchInfo().isDirectory()) { setErrorMessage(IDEWorkbenchMessages.WizardNewLinkPage_linkTargetNotFile); valid = false; 
1, final Dimension d = getPreferredSize(c); final View v = (View)c.getClientProperty(BasicHTML.propertyKey); if (v != null) { d.width -= v.getPreferredSpan(View.X_AXIS) - v.getMinimumSpan(View.X_AXIS); , final Dimension XXXXX = getPreferreXXXXXSize(c); final View XXXXX = (View)c.getClientProperty(BasicHTML.propertyKey); if (XXXXX != null) { XXXXX.wiXXXXXth -= XXXXX.getPreferreXXXXXSpan(View.X_AXIS) - XXXXX.getMinimumSpan(View.X_AXIS); 
1," PsiElement startElement = getStartElement(); return QuickFixBundle.message(""safe.delete.text"", startElement == null ? """" : HighlightMessageUtil.getSymbolName(startElement, PsiSubstitutor.EMPTY)); "," PsiElement XXXXX = getStartElement(); return QuickFixBundle.message(""safe.delete.text"", XXXXX == null ? """" : HighlightMessageUtil.getSymbolName(XXXXX, PsiSubstitutor.EMPTY)); "
1," NodePointer newParent = parent.createPath(context); if (isAttribute()) { NodePointer pointer = newParent.createAttribute(context, getName()); pointer.setValue(value); return pointer; "," NodePointer XXXXX = parent.createPath(context); if (isAttribute()) { NodePointer XXXXX = XXXXX.createAttribute(context, getName()); XXXXX.setValue(value); return XXXXX; "
0," AccountStore.Account values = AccountManager.accountStore.get(name); String member = values.getAttribute(""take_breaks""); return member != null && member.equalsIgnoreCase(""true""); ", if(UMLPackage.eINSTANCE.getNamedElement_Name().equals(notification.getFeatureID(NamedElement.class)) || notification.getNotifier() instanceof EAnnotation) { refreshQualifiedNameDisplay(); 
1," try { OutputStream dOut = getOutDataStream(); if (dOut != null) { InputStream dIn = fsh.listCurrentDir(); if (dIn == null) { out.println(""550 File not found.""); dOut.close(); return; "," try { OutputStream XXXXX = getOutDataStream(); if (XXXXX != null) { InputStream XXXXX = fsh.listCurrentDir(); if (XXXXX == null) { out.println(""550 File not found.""); XXXXX.close(); return; "
0," GridBagConstraints constraints = buildBaseConstraints(); updateConstraints(constraints, x, y, spanX, 1, 1, 1, fillType); gridBagLayout.setConstraints(component, constraints); panel.add(component); "," return BitmapTextureAtlasTextureRegionFactory.createTiledFromResource(pBitmapTextureAtlas, pContext.getResources(), pDrawableResourceID, pTextureX, pTextureY, pTileColumns, pTileRows); "
0," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; "," Vector x = Vector.of(1.5, 1.3); assertEquals(-0.07497735029244701, function.apply(x), 0.00000000000000001); x.setReal(0, 0.0); x.setReal(1, 0.0); assertEquals(0.0, function.apply(x), 0.0); "
0, LineSegment line = v.getLineSegment(); LineSegment toAnchor = line.newLineSegment(calculatedRatio*line.length()); newAnchorPosn = toAnchor.getTerminus(); newAssociatedCurveSegment = v; ," String ga; int pn; int rc; StringTokenizer st = new StringTokenizer(s, sep2); try { ga = st.nextToken(); pn = Integer.parseInt(st.nextToken()); rc = Integer.parseInt(st.nextToken()); "
0, while (keepRunning) { try { routingTable.waitUntilTableNotEmpty(); if (keepRunning) { long sleepTime = routingTable.cleanTable(); if (keepRunning && sleepTime > 0) { Thread.sleep(sleepTime); ," GL2 gl = drawable.getGL().getGL2(); gl.glViewport(0, 0, w, h); gl.glMatrixMode(GL2.GL_PROJECTION); gl.glLoadIdentity(); gl.glOrtho(0, w, 0, h, -1.0, 1.0); gl.glMatrixMode(GL2.GL_MODELVIEW); "
1, AdapterFactoryLabelProvider labelProvider = new AdapterFactoryLabelProvider(adapterFactory); if (object instanceof EObject) { switch (columnIndex) { case 0: return labelProvider.getText(object); , AdapterFactoryLabelProvider XXXXX = new AdapterFactoryLabelProvider(adapterFactory); if (object instanceof EObject) { switch (columnIndex) { case 0: return XXXXX.getText(object); 
1," for ( Iterator i = services.iterator(); i.hasNext(); ) { UPNPService srv = (UPNPService)i.next(); UPNPServiceMBean mBean = new UPNPServiceMBean( device, srv, null, null ); container.add( mBean ); "," for ( Iterator i = services.iterator(); i.hasNext(); ) { UPNPService srv = (UPNPService)i.next(); UPNPServiceMBean mBean = new UPNPServiceMBean( device, srv, null, null ); container.add( mBean ); "
1," assertEquals(2, validCriterion.getConfiguredValues().size()); assertTrue(validCriterion.getConfiguredValues().contains(""a"")); assertTrue(validCriterion.getConfiguredValues().contains(""b"")); "," assertEquals(2, validCriterion.getConfiguredValues().size()); assertTrue(validCriterion.getConfiguredValues().contains(""a"")); assertTrue(validCriterion.getConfiguredValues().contains(""b"")); "
0," DummyTransactionManager dummyTm = (DummyTransactionManager) TestingUtil.getTransactionManager(cache); try { dummyTm.begin(); cache.put(key, ""v""); return (DummyTransaction) dummyTm.suspend(); "," int handlerPC = exceptionInfo.u2handlerPC; if (handlerPC >= startOffset && handlerPC < endOffset) { exceptionInfoVisitor.visitExceptionInfo(clazz, method, codeAttribute, exceptionInfo); "
0," CoordMatrix result = GgbMatrixOrVector(getRows(),getColumns()); for(int i=1;i<=result.getRows();i++){ for(int j=1;j<=result.getColumns();j++){ result.set(i,j,get(i,j)+m.get(i,j)); "," for (GraphicableEmergency renderEmergency : ui.getEmergencies().values()) { g.drawAnimation(renderEmergency.getAnimation(), renderEmergency.getPolygon().getX(), renderEmergency.getPolygon().getY()); "
1, super.doInit(); setAllAuthorizedFor(Method.GET); getVariants().add(new Variant(MediaType.TEXT_XML)); suiteRoleMembership = loadRequestedObject(); setExisting(suiteRoleMembership != null); , super.doInit(); setAllAuthorizedFor(Method.GET); getVariants().add(new Variant(MediaType.TEXT_XML)); suiteRoleMembership = loadRequestedObject(); setExisting(suiteRoleMembership != null); 
1," super(page, parent, Section.DESCRIPTION | toggleStyle); getSection().setText(title); getSection().setDescription(desc); createClient(getSection(), page.getManagedForm().getToolkit()); "," super(page, parent, Section.DESCRIPTION | toggleStyle); getSection().setText(title); getSection().setDescription(desc); createClient(getSection(), page.getManagedForm().getToolkit()); "
0," TestSuite suite = new TestSuite(""Tests of the animation package""); suite.addTestSuite(AnimationSchedulerImplTimerTest.class); suite.addTestSuite(AnimationTest.class); return suite; "," this.xmlCipherAlgorithm = XMLCipher.TRIPLEDES; this.passPhrase = ""Just another 24 Byte key"".getBytes(); this.secureTag = """"; this.secureTagContents = true; org.apache.xml.security.Init.init(); "
0," String nameFstFile = ((File) fstfile).getName(); String nameScndFile = ((File) scndfile).getName(); if (nameFstFile.compareTo(nameScndFile) == 0) { return super.compare(fstfile, scndfile); "," poly.centroid=Geom.findCentroid(poly); Vector<Point> verticies = Geom.removeDuplicateVerts(poly); for(int i=0;i<verticies.size();i++){ verticies.get(i).moveToPolar(dist, poly.centroid); "
1," super(VcsBundle.message(""action.name.create.patch.for.selected.revisions""), VcsBundle.message(""action.description.create.patch.for.selected.revisions""), AllIcons.Actions.CreatePatch); "," super(VcsBundle.message(""action.name.create.patch.for.selected.revisions""), VcsBundle.message(""action.description.create.patch.for.selected.revisions""), AllIcons.Actions.CreatePatch); "
0, if(ProjectRegistry.defaultRegistry == null) { synchronized(ProjectRegistry.LOCK) { if(ProjectRegistry.defaultRegistry == null) { ProjectRegistry.defaultRegistry = new ProjectRegistry(); ," assertEquals(Maps.transformValues(factory.createForApiTypeAndVersion(""cloudServers"", ""1.1"").get(), Suppliers .<URI> supplierFunction()), ImmutableMap.of(""lon"", URI .create(""https: "
1," try { if (""uploadBanner"".equals(request.getAction())) { File newBanner = request.getFile(""uploadBannerFile""); if(newBanner == null) { throw new Exception(""Please provide an image file.""); "," try { if (""uploadBanner"".equals(request.getAction())) { File newBanner = request.getFile(""uploadBannerFile""); if(newBanner == null) { throw new Exception(""Please provide an image file.""); "
0," final EObject domainElement = getSemanticElement(semanticAdapter); final int visualID; if (semanticHint == null) { visualID = AcoreVisualIDRegistry.getNodeVisualID(containerView, domainElement); "," lblInfo.setText(""Setting optimization objective...""); lblInfo.setStyleName(""info""); actionService.setOptimizationObjective(option, new AsyncCallback<Void>() { public void onSuccess(Void result) { "
0," SessionState state = ((JetspeedRunData) data).getPortletSessionState(((JetspeedRunData) data).getJs_peid()); if (!readPageForm(data, state)) return; state.setAttribute(""mode"", ""tools""); ", for (Iterator i = listeners.iterator(); i.hasNext();) { Object listener = i.next(); if (listener instanceof ILoginContextListener) ((ILoginContextListener) listener).onLoginStart(subject); 
0, Session session = new Session(); session.setUuid(uuid); session.setStarted(new Timestamp(System.currentTimeMillis())); session.setTimeToIdle(0L); session.setTimeToLive(0L); return session; , if (origin == null) return null; final List<GitRemoteInfo> remotes = getRemotes(project); for (GitRemoteInfo remote : remotes) { if (remote.getName().equalsIgnoreCase(origin)) return remote; 
1, PDEPlugin.getDefault().getLabelProvider().connect(this); fShowVersion = showVersion; fAppendResolvedVariables = appendResolvedVariables; fTranslations = TranslationSupport.getInstance(); , PDEPlugin.getDefault().getLabelProvider().connect(this); fShowVersion = showVersion; fAppendResolvedVariables = appendResolvedVariables; fTranslations = TranslationSupport.getInstance(); 
0," Automation auto = VacuumdConfigFactory.getInstance().getAutomation(""cleanUpAlarms""); AutomationProcessor ap = new AutomationProcessor(auto); assertEquals(null, ap.getTrigger().getTriggerSQL()); "," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (value: ""); result.append(value); result.append(')'); return result.toString(); "
1," long cId, nId; cId = nId = -1; if (food != null) nId = food.getId(); if (mFood != null) cId = mFood.getId(); if (nId == cId) return; mModified = true; mStatusCacheValid = false; mFood = food; "," long cId, nId; cId = nId = -1; if (food != null) nId = food.getId(); if (mFood != null) cId = mFood.getId(); if (nId == cId) return; mModified = true; mStatusCacheValid = false; mFood = food; "
1, boolean hasNext = false; try { hasNext = currentResultSet.next(); while (!hasNext){ boolean hasTable = nextTable(); if (!hasTable) return false; else { hasNext = currentResultSet.next(); , boolean hasNext = false; try { hasNext = currentResultSet.next(); while (!hasNext){ boolean hasTable = nextTable(); if (!hasTable) return false; else { hasNext = currentResultSet.next(); 
0," return new FunctionType(registry, name, sourceNode, new ArrowType(registry, parametersNode, returnType, inferredReturnType), typeOfThis, templateTypeName, isConstructor, isNativeType); "," System.out.println(new String(Hybi00Handshake.solve(""MD5"", Hybi00Handshake.decodeKey(""254 23 8 87[ 65""), Hybi00Handshake.decodeKey(""h 52 X 6U'7t?!j@24]6s52^""), ""B..r..\\8"".getBytes()))); "
1," StatusValue total = new StatusValue(0, 0); for (int i = 0; i < mAtma.length; i++) { if (mAtma[i] != null) { mAtma[i].parseDescription(); total.add(mAtma[i].getStatus(level, type)); "," StatusValue XXXXX = new StatusValue(0, 0); for (XXXXXnt XXXXX = 0; XXXXX < mAtma.length; XXXXX++) { XXXXXf (mAtma[XXXXX] != null) { mAtma[XXXXX].parseDescrXXXXXptXXXXXon(); XXXXX.add(mAtma[XXXXX].getStatus(level, type)); "
1," StringBuilder sb = new StringBuilder(); boolean good = true; for (int pos = 0, len = tagStr.length(); pos < len; pos++) { char c = tagStr.charAt(pos); if (c == '-') { good = true; "," StringBuilder XXXXX = new StringBuilder(); boolean XXXXX = true; for (int XXXXX = 0, len = tagStr.length(); XXXXX < len; XXXXX++) { XXXXXhar XXXXX = tagStr.XXXXXharAt(XXXXX); if (XXXXX == '-') { XXXXX = true; "
0," for(final Integer id : this.event.getEventIDs()) { if(id <= 0) continue; DragonsLairMain.getDungeonManager().executeEvent(DragonsLairMain.getSettings().getEvents().get(id), null); "," Shape connectionPointShape = AnchorUtil.getConnectionPointAt(context.getConnection(), context.getBendpoint()); if (connectionPointShape!=null) return false; return super.canRemoveBendpoint(context); "
0," if (map instanceof CPPTemplateParameterMap) { final ObjectMap omap= ((CPPTemplateParameterMap) map).fMap; for (int i = 0; i < omap.size(); i++) { fMap.put(omap.keyAt(i), omap.getAt(i)); "," return new ISearchService () { public ISearchQuery createSearchElementQuery(Scope indexScope, ICElement[] searchScope, ISourceReference object, int limitTo) { return new NullSearchQuery(); "
1, return ApplicationManager.getApplication().runReadAction(new Computable<VirtualFile>() { @Nullable public VirtualFile compute() { return LocalFileSystem.getInstance().findFileByIoFile(file); , return ApplicationManager.getApplication().runReadAction(new Computable<VirtualFile>() { @Nullable public VirtualFile compute() { return LocalFileSystem.getInstance().findFileByIoFile(file); 
1," int microLatitude = (int) ( mWaypointsCursor.getDouble( 0 ) * 1E6d ); int microLongitude = (int) ( mWaypointsCursor.getDouble( 1 ) * 1E6d ); return new GeoPoint( microLatitude, microLongitude ); "," int microLatitude = (int) ( mWaypointsCursor.getDouble( 0 ) * 1E6d ); int microLongitude = (int) ( mWaypointsCursor.getDouble( 1 ) * 1E6d ); return new GeoPoint( microLatitude, microLongitude ); "
0," StringBuilder builder = new StringBuilder(); builder.append(buildJSONNameValuePair(""id"", id) + "","" + buildJSONNameValuePair(""name"", name) + "",""); builder.append(buildJSONNameValuePair(""data"", ""{"," RegExpLanguageHost host = findRegExpHost(condRef); if (host == null || !host.supportsPythonConditionalRefs()) { myHolder.createErrorAnnotation(condRef, ""Conditional references are not supported""); "
0," IPreferencePage page = new TableRenderingPreferencePage(DebugUIMessages.TableRenderingPrefAction_0); showPreferencePage(""org.eclipse.debug.ui.tableRenderingPreferencepage"", page); "," String urlString = this.getURLString(); String responseText = this.responseText; if ( urlString.startsWith( ""bedazzle.php"" ) ) { EquipmentRequest.parseBedazzlements( responseText ); return; "
0," if(selectedItems.isEmpty()){ AccessibleToast.makeText(LocalIndexesActivity.this, getString(R.string.local_index_no_items_to_do, actionButton.toLowerCase()), Toast.LENGTH_SHORT).show(); return; ", switch (featureID) { case DroolsPackage.PROCESS_ANALYSIS_DATA_TYPE__GROUP: getGroup().clear(); return; case DroolsPackage.PROCESS_ANALYSIS_DATA_TYPE__SCENARIO: getScenario().clear(); return; 
1," log.debug(""In async thread""); String data = getJSONRequest(); TrapInfo info = jsonToTrapInfo(data); insertToMongo(info); sendResponseAccepted(); log.debug(""after response sent""); "," log.debug(""In async thread""); String XXXXX = getJSONRequest(); TrapInfo XXXXX = jsonToTrapInfo(XXXXX); insertToMongo(XXXXX); sendResponseAccepted(); log.debug(""after response sent""); "
1," assertTrue(afd.isWriteable(Entry.class, null, null, null)); assertTrue(afd.isWriteable(FOMEntry.class, null, null, null)); assertFalse(afd.isWriteable(Feed.class, null, null, null)); "," assertTrue(afd.isWriteable(Entry.class, null, null, null)); assertTrue(afd.isWriteable(FOMEntry.class, null, null, null)); assertFalse(afd.isWriteable(Feed.class, null, null, null)); "
0," if (value != null) { sb.appendHtmlConstant(""<span title=\"""" + title + ""\"" "" + ""style=\""cursor: pointer;\"">""); sb.appendHtmlConstant(imagePrototype.getHTML()); sb.appendHtmlConstant(""</span>""); ", String[] logicalDrives = Kernel32Util.getLogicalDriveStrings(); assertTrue(logicalDrives.length > 0); for(String logicalDrive : logicalDrives) { assertTrue(logicalDrive.length() > 0); 
1, if (leaf) { DefaultMutableTreeNode node = (DefaultMutableTreeNode) value; FieldOptionRow myRow = (FieldOptionRow) node.getUserObject(); if (myRow.isBuiltIn()) { setLeafIcon(builtInIcon); , if (leaf) { DefaultMutableTreeNode XXXXX = (DefaultMutableTreeNode) value; FieldOptionRow XXXXX = (FieldOptionRow) XXXXX.getUserObject(); if (XXXXX.isBuiltIn()) { setLeafIcon(builtInIcon); 
1," failedLaunches.incrementAndGet(); logger.warn(t, ""Error while launching instance: #%d %d, %s %s"", index, nodePlan.getCount(), nodePlan .getCloudName(), nodePlan.getTemplateName()); "," failedLaunches.incrementAndGet(); logger.warn(t, ""Error while launching instance: #%d %d, %s %s"", index, nodePlan.getCount(), nodePlan .getCloudName(), nodePlan.getTemplateName()); "
1, if (current.eResource() != null && current.eResource().getResourceSet() != null) this.resourceSet = current.eResource().getResourceSet(); flatreferencetableOptionalProperty.setInput(settings); , if (current.eResource() != null && current.eResource().getResourceSet() != null) this.resourceSet = current.eResource().getResourceSet(); flatreferencetableOptionalProperty.setInput(settings); 
0," MainActivityIntentWrapper wrapper = new MainActivityIntentWrapper( new Intent()); wrapper.setExtraComments(commentAddedCount); setResult(RESULT_OK, wrapper.getIntent()); super.onBackPressed(); "," List<Chainable> custom = Arrays.<Chainable> asList( new MyChainable(""c1"", ""c2"", ""c3""), new MyChainable(""c2"", ""c1"", ""c3""), new MyChainable(""c3"", ""c1"", ""c2"") ); doTest(custom, ""dummy""); "
1, setDefaultCloseOperation(DISPOSE_ON_CLOSE); addKeyListener(new KeyListener() { @Override public void keyTyped(KeyEvent event) { if (event.getKeyCode() == KeyEvent.VK_ESCAPE) { dispose(); , setDefaultCloseOperation(DISPOSE_ON_CLOSE); addKeyListener(new KeyListener() { @Override public void keyTyped(KeyEvent event) { if (event.getKeyCode() == KeyEvent.VK_ESCAPE) { dispose(); 
0," enabled = false; System.err .println(""Unable to use direct char[] access of java.lang.String. Disabling this method.""); valueField = null; countField = null; offsetField = null; e.printStackTrace(); "," StringBuffer s = new StringBuffer(""ResPart(\n""); s.append(""module = "" + module); s.append(""\n GB = "" + GB); s.append(""\n syzygy = "" + syzygy); s.append("")""); return s.toString(); "
0, this.inputPath = inputPath; this.importFolderPath = importFolderPath; this.importSetTitle = importSetTitle; this.interactiveMode = interactiveMode; this.removeImportedFolder = removeImportedFolder; , Color foreground; for (int i = 0; i < UIMANAGER_KEYS.length; i++) { String key = UIMANAGER_KEYS[i]; foreground = UIManager.getColor(key); if (foreground != null) { return foreground; 
1, resourceAdminServiceStub = TestUtils.getResourceAdminServiceStub(loggedInSessionCookie); relationAdminServiceStub = TestUtils.getRelationAdminServiceStub(loggedInSessionCookie); try { addWSDL(); , resourceAdminServiceStub = TestUtils.getResourceAdminServiceStub(loggedInSessionCookie); relationAdminServiceStub = TestUtils.getRelationAdminServiceStub(loggedInSessionCookie); try { addWSDL(); 
1, switch (featureID) { case RifPackage.ACCESSPOLICIES_TYPE__GROUP: getGroup().clear(); return; case RifPackage.ACCESSPOLICIES_TYPE__ACCESSPOLICY: getACCESSPOLICY().clear(); return; , switch (featureID) { case RifPackage.ACCESSPOLICIES_TYPE__GROUP: getGroup().clear(); return; case RifPackage.ACCESSPOLICIES_TYPE__ACCESSPOLICY: getACCESSPOLICY().clear(); return; 
1," Assert.isTrue(start < simpleNameStart && simpleNameStart < start + length); return new TypeReference(enclosingElement, accuracy, start, length, insideDocComment, resource, simpleNameStart, null); "," Assert.isTrue(start < simpleNameStart && simpleNameStart < start + length); return new TypeReference(enclosingElement, accuracy, start, length, insideDocComment, resource, simpleNameStart, null); "
1," final Entry entry = new Entry(str, ref); final int index = Collections.binarySearch(entries, entry); if (index < 0) entries.add(-index - 1, entry); else assert entries.get(index).ref == ref; "," final Entry XXXXX = new Entry(str, ref); final int XXXXX = Collections.binarySearch(entries, XXXXX); if (XXXXX < 0) entries.add(-XXXXX - 1, XXXXX); else assert entries.get(XXXXX).ref == ref; "
1," StringBuffer buffer = new StringBuffer(); buffer.append("" ""); if((style & ICustomAppearence.DISP_VISIBILITY) != 0) { buffer.append(NamedElementUtil.getVisibilityAsSign(collaborationUse)); "," StringBuffer buffer = new StringBuffer(); buffer.append("" ""); if((style & ICustomAppearence.DISP_VISIBILITY) != 0) { buffer.append(NamedElementUtil.getVisibilityAsSign(collaborationUse)); "
0," IStatus result = Status.OK_STATUS; try { IJavaProject jp = JavaUtils.createJavaProject( resourceFolder.getProject()); if( this.page.isWsdlFirst()) { wsdlFirstApproach( jp, ae, monitor ); "," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (value: ""); result.append(value); result.append(')'); return result.toString(); "
0," try { consumeWhitespace(); char c = (char) reader.read(); if ( isEOFChar( c ) ) { throw new ParserException( ""Unexpected EOF while looking for an operator near line "" + reader.getLineNumber() ); ", setBackground( backgroundHover ); if (e != null && !equals( e.getComponent() )) for (final MouseListener listener : getMouseListeners()) if (!listener.equals( this )) listener.mouseEntered( e ); 
0, if (iterFactories == null) initializeIterators(); for (int i = 0; iterFactories[i] != null; i++) { PyObject iter = iterFactories[i].findCollection(javaProxy); if (iter != null) return iter; ," TestSuite testSuite = new TestSuite(""FeatureMapTest""); testSuite.addTest(new FeatureMapTest(""testFeatureMap"")); testSuite.addTest(new FeatureMapTest(""testSaveAndLoad"")); return testSuite; "
1, Preference preference = new Preference(); preference.setSelectAll(new SelectFactory(handlerName)); RequestTable table = new RequestTable(); table.setPreference(preference); return table; , Preference XXXXX = new Preference(); XXXXX.setSelectAll(new SelectFactory(handlerName)); RequestTable XXXXX = new RequestTable(); XXXXX.setPreference(XXXXX); return XXXXX; 
0," try { manager = loadClassStrict(""com.arjuna.ats.jta.TransactionManager"").getMethod(""transactionManager""); user = loadClassStrict(""com.arjuna.ats.jta.UserTransaction"").getMethod(""userTransaction""); "," StatusSummary summary = fixup(); if ( summary != null ){ String str =summary.getURL().toExternalForm(); int pos = str.indexOf( '?' ); if ( pos != -1 ){ str = str.substring( 0, pos ); "
1, String txt = (element != null) ? element.toString() : EMPTY_STR; if (element instanceof BinaryParserConfiguration) txt = ((BinaryParserConfiguration)element).getName(); return txt; , String XXXXX = (element != null) ? element.toString() : EMPTY_STR; if (element instanceof BinaryParserConfiguration) XXXXX = ((BinaryParserConfiguration)element).getName(); return XXXXX; 
0," ICacheSource source = cache.getSource(); System.out.print(prefix + "" ""); Class sourceClass = source.getClass(); if (sourceClass == BufferedImageSource.class) { System.out.println(""BufferedImage""); ", GroupListItem entry = getItem(position); View result; GroupListItemViewCache viewCache; if (convertView != null) { result = convertView; viewCache = (GroupListItemViewCache) result.getTag(); 
1," super(plugin, ""Woof""); setDescription(""$1% chance to spawn 1 wolf, $2% for 2, and $3% for 3.""); setUsage(""/skill woof""); setArgumentRange(0, 0); setIdentifiers(new String[]{""skill woof"""," super(plugin, ""Woof""); setDescription(""$1% chance to spawn 1 wolf, $2% for 2, and $3% for 3.""); setUsage(""/skill woof""); setArgumentRange(0, 0); setIdentifiers(new String[]{""skill woof"""
1," TestSuite testSuite = new TestSuite(""FeatureMapTest""); testSuite.addTest(new FeatureMapTest(""testFeatureMap"")); testSuite.addTest(new FeatureMapTest(""testSaveAndLoad"")); return testSuite; "," TestSuite testSuite = new TestSuite(""FeatureMapTest""); testSuite.addTest(new FeatureMapTest(""testFeatureMap"")); testSuite.addTest(new FeatureMapTest(""testSaveAndLoad"")); return testSuite; "
0," String oldDESC = dESC; dESC = newDESC; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, RifPackage.ATTRIBUTEVALUEEMBEDDEDDOCUMENT__DESC, oldDESC, dESC)); "," String oldClass = class_; class_ = newClass; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_CLIP_PATH_ELEMENT__CLASS, oldClass, class_)); "
0," StringUserTypeMapper mapper = new StringUserTypeMapper(); assertNull(mapper.mapLdapEntryToSakaiUserType(new LDAPEntry(), new SimpleLdapAttributeMapper())); assertNull(mapper.getUserType()); ", Project project = e.getData(PlatformDataKeys.PROJECT); if (ChangeListManager.getInstance(project).isFreezedWithNotification(null)) return; IgnoredSettingsDialog.configure(project); 
1," super(eventAdapterService, returnType, null); this.propertyMap = propertyMap; this.index = index; this.mapEntryGetter = mapEntryGetter; this.eventAdapterService = eventAdapterService; "," super(eventAdapterService, returnType, null); this.propertyMap = propertyMap; this.index = index; this.mapEntryGetter = mapEntryGetter; this.eventAdapterService = eventAdapterService; "
1," selectRegionMode = value; if (value) { setToolTipText( ""<html>Drag to select region<br>Press 'Delete' (or Control-D) to clear selected region<br>Press Control-R to reset selected region</html>""); "," selectRegionMode = value; if (value) { setToolTipText( ""<html>Drag to select region<br>Press 'Delete' (or Control-D) to clear selected region<br>Press Control-R to reset selected region</html>""); "
0, switch(observer.getObserverType()) { case ATTACK: attackObservers.add(observer); break; case ATTACKED: attackedObservers.add(observer); break; case MOVE: moveObservers.add(observer); break; ," assertNull( content.getY( ) ); DimensionType y1 = new DimensionType( 1, ""in"" ); content.setY( y1 ); assertEquals( y1, content.getY( ) ); content.setY( null ); assertNull( content.getY( ) ); "
0," addItemProperty(""id"", new ObjectProperty<String>(group.getId(), String.class)); if (group.getName() != null) { addItemProperty(""name"", new ObjectProperty<String>(group.getName(), String.class)); "," if (!statementEventListeners.isEmpty()) { StatementEvent event = new StatementEvent(this,statement,sqle); for (StatementEventListener l : statementEventListeners) { l.statementErrorOccurred(event); "
0," assertTrue(""FilterDirector must remove header, \"""" + headerKey + ""\"" from the response."", filterDirector.responseHeaderManager().headersToRemove().contains(headerKey.toLowerCase())); "," String hostName = ""localhost""; String hostAddress = ""127.0.0.1""; try { hostName = InetAddress.getLocalHost().getHostName(); hostAddress = InetAddress.getLocalHost().getHostAddress(); "
1," final ServerLocator locator = builder.connectionLoadBalancingPolicyClassName(""someName"").build(); assertThat(locator.getConnectionLoadBalancingPolicyClassName(), is(""someName"")); "," final ServerLocator XXXXX = builder.connectionLoadBalancingPolicyClassName(""someName"").build(); assertThat(XXXXX.getConnectionLoadBalancingPolicyClassName(), is(""someName"")); "
1," Scale scale = ( Scale )widget; String value = WidgetLCAUtil.readPropertyValue( scale, PROP_SELECTION ); if( value != null ) { scale.setSelection( NumberFormatUtil.parseInt( value ) ); "," Scale scale = ( Scale )widget; String value = WidgetLCAUtil.readPropertyValue( scale, PROP_SELECTION ); if( value != null ) { scale.setSelection( NumberFormatUtil.parseInt( value ) ); "
1," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," EditorCell XXXXX = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, XXXXX, editorContext); return XXXXX; "
0, final Log mockLogger = context.mock(Log.class); AdminDistributionTransformHelper instance = new AdminDistributionTransformHelper() { @Override protected Log createLogger() { return mockLogger; ," exportWizardActionGroup.setContext(getContext()); if (exportWizardActionGroup.getWizardActionIds().length == 0) { aMenu.appendToGroup(ICommonMenuConstants.GROUP_PORT, exportAction); return; "
1," token = token.toLowerCase(); String wordTag = token + ""_"" + posTag; try { lexer.yyreset(new StringReader(wordTag)); lexer.yybegin(Morpha.scan); String tokenNorm = lexer.next(); return tokenNorm; "," token = token.toLowerCase(); String XXXXX = token + ""_"" + posTag; try { lexer.yyreset(new StringReader(XXXXX)); lexer.yybegin(Morpha.scan); String XXXXX = lexer.next(); return XXXXX; "
0," Client o = (Client) Server.playerHandler.players[c.duelingWith]; if(o != null) { c.getPA().sendFrame126(""""+o.combatLevel, 6839); c.getPA().sendFrame126(o.playerName, 6840); o.duelStatus = 0; "," progressDialog.setMessage(getString(R.string.unziping)); Thread t = new Thread() { @Override public void run() { try { FileManager.unzip(FilePath,AppPreference.TEMP_DIR+""/""+packageID); "
1, String xpath = fieldDescriptor.getXpath(); String schema = fieldDescriptor.getSchema(); String name = fieldDescriptor.getName(); try { if (xpath != null) { return model.getPropertyValue(xpath); , String XXXXX = fieldDescriptor.getXpath(); String XXXXX = fieldDescriptor.getSchema(); String XXXXX = fieldDescriptor.getName(); try { if (XXXXX != null) { return model.getPropertyValue(XXXXX); 
0, Component current = component; while(current.getParent()!= null){ if (dojoComponents.containsKey(current.getParent().getMarkupId()) && (current.getParent() instanceof IDojoWidget)){ return true; , worldObj = world; long l = random.nextLong(); rand.setSeed(l); basePos[0] = i; basePos[1] = j; basePos[2] = k; if (heightLimit == 0) { heightLimit = 8 + rand.nextInt(heightLimitLimit); 
0, boolean status = false; if (mCertificateServer != null && mCertificateServer.length() > 0 && mMeteringId != null && mMeteringId.length() > 0) { status = generateMeteringDataChallenge(); ," super(parent, LanguageBundle.getString(""in_dataInstaller""), true); fileText = fileList; this.introText = introText; initComponents(); Utility.setDialogRelativeLocation(parent, this); "
1," Option category = new Option(categoryId, categoryName, true, null); ArrayList<Option> options = categories.get(category); if (options == null) { options = new ArrayList<Option>(); "," Option XXXXX = new Option(XXXXXId, XXXXXName, true, null); ArrayList<Option> options = categories.get(XXXXX); if (options == null) { options = new ArrayList<Option>(); "
1," if (radius < 0.0) { String message = Logging.getMessage(""generic.ArgumentOutOfRange"", ""radius="" + radius); Logging.logger().severe(message); throw new IllegalArgumentException(message); "," if (radius < 0.0) { String message = Logging.getMessage(""generic.ArgumentOutOfRange"", ""radius="" + radius); Logging.logger().severe(message); throw new IllegalArgumentException(message); "
0," super(""Germ"", ""a 0/0 black Germ creature token""); cardType.add(Constants.CardType.CREATURE); color = ObjectColor.BLACK; subtype.add(""Germ""); power = new MageInt(0); toughness = new MageInt(0); ", Graphics2D g2 = (Graphics2D)g; Paint oldPaint = g2.getPaint(); Color out = null; Color center = null; if( !isEnabled() ){ out = borderDisabledOut.value(); center = borderDisabledCenter.value(); 
0," final ReplicaInfo replicaInfo = volumeMap.get(b.getBlockPoolId(), b.getLocalBlock()); return replicaInfo != null && replicaInfo.getState() == state && replicaInfo.getBlockFile().exists(); "," Model base = model( ""a R b"" ); Model schema = model( ""R rdfs:range T"" ); Model answer = ModelExpansion.withSchema( base, schema ); assertIsoModels( model( ""a R b; b rdf:type T"" ), answer ); "
0," StringBuilder b = new StringBuilder(); Class[] args = method.getExceptionTypes(); for (int i = 0; i < args.length; i++) { b.append(rmic.name(args[i])); if (i < args.length - 1) b.append("", ""); "," switch (featureID) { case Wps10Package.SUPPORTED_UO_MS_TYPE__DEFAULT: return basicSetDefault(null, msgs); case Wps10Package.SUPPORTED_UO_MS_TYPE__SUPPORTED: return basicSetSupported(null, msgs); "
1," for (RuleCondition condition : myConditions) { myRules.add(new SpacingRule(condition, 0, 0, 1, myCodeStyleSettings.KEEP_LINE_BREAKS, myCodeStyleSettings.KEEP_BLANK_LINES_IN_CODE)); "," for (RuleCondition condition : myConditions) { myRules.add(new SpacingRule(condition, 0, 0, 1, myCodeStyleSettings.KEEP_LINE_BREAKS, myCodeStyleSettings.KEEP_BLANK_LINES_IN_CODE)); "
1," SolrInputDocument doc = new SolrInputDocument(); doc.addField(""ID"", ""Root-Path""); doc.addField(""TX"", ""TX-1""); doc.addField(""DBID"", """" + dbid); doc.addField(""PATH"", ""/""); return doc; "," SolrInputDocument XXXXX = new SolrInputDocument(); XXXXX.addField(""ID"", ""Root-Path""); XXXXX.addField(""TX"", ""TX-1""); XXXXX.addField(""DBID"", """" + dbid); XXXXX.addField(""PATH"", ""/""); return XXXXX; "
1, switch (featureID) { case GMFGraphPackage.CUSTOM_BORDER__ATTRIBUTES: return getAttributes(); case GMFGraphPackage.CUSTOM_BORDER__QUALIFIED_CLASS_NAME: return getQualifiedClassName(); , switch (featureID) { case GMFGraphPackage.CUSTOM_BORDER__ATTRIBUTES: return getAttributes(); case GMFGraphPackage.CUSTOM_BORDER__QUALIFIED_CLASS_NAME: return getQualifiedClassName(); 
0," IConfigurationElement config = element.getConfigurationElement(); String value = config.getAttribute(name); if (value == null) return defaultValue; return value.equalsIgnoreCase(""true""); "," super(""Import Joomla! Extension""); setTitle(""Import Joomla! Extension""); setDescription(""Import Joomla! extension or multiple extensions from installation package.""); setPageComplete(false); "
0, if (selected != null) { int curAngle = (int) selected.getCurrentAngle(); int mod = curAngle % roundRotationValue; if (mod == 0) return; if (direction == -1) { selected.rotate(-mod); ," super.onActivityJoin(); Log.d(TAG, name + "" joined session!""); try { new Thread() { boolean loop = false; JSONObject hello = new JSONObject(""{\""msg\"":\""hello world! from: "" + name + ""\"""
0, this(); this.mProperties.putAll(qro.mProperties); for (QueueRequestProperties.TransientProperties property : QueueRequestProperties.TransientProperties .values()) { removeProperty(property.name()); ," super(connectorRepository, connectorId, dataSourceConnectionInfo); assert dataSourceConnectionInfo != null : ""dataSourceConnectionInfo != null""; _dataSourceConnectionInfo = dataSourceConnectionInfo; "
0, String className = aClass.getName(); PackageReference aPackage = packageForClass(aClass); if (aPackage != null) { return (FJPClassReference) aPackage.getClassReference(className); ," assert Thread.holdsLock(writeLock); final AtomicReferenceArray<Item<K, V>[]> oldTable = table; final int oldCapacity = oldTable.length(); if (oldCapacity == MAXIMUM_CAPACITY) { return; "
1, FinancialSecurityVisitor<Void> underlyingIdentifierCollector = new FinancialSecurityVisitorAdapter<Void>() { @Override public Void visitEquitySecurity(EquitySecurity security) { return null; , FinancialSecurityVisitor<Void> underlyingIdentifierCollector = new FinancialSecurityVisitorAdapter<Void>() { @Override public Void visitEquitySecurity(EquitySecurity security) { return null; 
1, recordedHeatPumpDemand[timeOfDay] = 0; if (hasElectricalSpaceHeat) { recordedHeatPumpDemand[timeOfDay] += calculateHeatPumpDemandAndInternalTemp(time) / Consts.DOMESTIC_HEAT_PUMP_SPACE_COP; , recordedHeatPumpDemand[timeOfDay] = 0; if (hasElectricalSpaceHeat) { recordedHeatPumpDemand[timeOfDay] += calculateHeatPumpDemandAndInternalTemp(time) / Consts.DOMESTIC_HEAT_PUMP_SPACE_COP; 
0, if( uri.equals(schemaLanguage) ) return false; if( uri.equals(Const.JAXB_NSURI) ) return false; if( uri.equals(Const.XJC_EXTENSION_URI) ) return false; return enabledExtensions.contains(uri); , Object o = button.getClientProperty(CLIENT_PROPERTY_PROPERTY_CHANGE_LISTENER); if (o instanceof PropertyChangeListener) { action.removePropertyChangeListener((PropertyChangeListener) o); 
1," StringBuffer buff = ModelLoaderUtil.createPathToElementKey(element, true); if (buff == null) return null; String key = buff.append("".font.fg"").toString(); return getColor(toolkit, key); "," StringBuffer XXXXX = ModelLoaderUtil.createPathToElementKey(element, true); if (XXXXX == null) return null; String XXXXX = XXXXX.append("".font.fg"").toString(); return getColor(toolkit, XXXXX); "
1," if (currentId <= 0) throw new IllegalStateException(); hardIterator.remove(); softMap.put(currentId, new SoftReference<TreeNode>(currentNode)); currentId = 0; currentNode = null; "," if (currentId <= 0) throw new IllegalStateException(); hardIterator.remove(); softMap.put(currentId, new SoftReference<TreeNode>(currentNode)); currentId = 0; currentNode = null; "
1," Region r1 = new Region(0, 10); Region r2 = new Region(1, 10); assertFalse(r1.equals(r2)); assertEquals(-1, comparator.compare(r1, r2)); assertEquals(1, comparator.compare(r2, r1)); "," Region XXXXX = new Region(0, 10); Region XXXXX = new Region(1, 10); assertFalse(XXXXX.equals(XXXXX)); assertEquals(-1, comparator.compare(XXXXX, XXXXX)); assertEquals(1, comparator.compare(XXXXX, XXXXX)); "
0," MindMapNode selectedNode = controller.getView().getSelected() .getModel(); ArrayList selectedNodes = controller.getView() .getSelectedNodesSortedByY(); joinNodes(selectedNode, selectedNodes); "," switch (featureID) { case SysMLdiffPackage.SYS_ML_STEREOTYPE_REFERENCE_CHANGE_LEFT_TARGET__HIDE_ELEMENTS: return ((InternalEList<?>)getHideElements()).basicRemove(otherEnd, msgs); "
0," Point size= getSize(); int x= 0; ImageData data= null; if ((fFlags & ERROR) != 0) { data= CPluginImages.DESC_OVR_ERROR.getImageData(); drawImage(data, x, size.y - data.height); x+= data.width; "," assertEquals(Blur.NORMAL, Blur.valueOf(""NORMAL"")); assertEquals(Blur.SOLID, Blur.valueOf(""SOLID"")); assertEquals(Blur.OUTER, Blur.valueOf(""OUTER"")); assertEquals(Blur.INNER, Blur.valueOf(""INNER"")); "
1, if(!(obj instanceof PailSpec)) return false; PailSpec ps = (PailSpec) obj; return name.equals(ps.name) && args.equals(ps.args) && getStructure().getClass().equals(ps.getStructure().getClass()); , if(!(obj instanceof PailSpec)) return false; PailSpec XXXXX = (PailSpec) obj; return name.equals(XXXXX.name) && args.equals(XXXXX.args) && getStructure().getClass().equals(XXXXX.getStructure().getClass()); 
1, double radians = Math.toRadians(angle); float xStep = (float) (mPos.x + speed * Math.cos(radians)); float yStep = (float) (mPos.y + speed * Math.sin(radians)); mPos.x = xStep; mPos.y = yStep; , double XXXXX = Math.toRadians(angle); float XXXXX = (float) (mPos.x + speed * Math.cos(XXXXX)); float XXXXX = (float) (mPos.y + speed * Math.sin(XXXXX)); mPos.x = XXXXX; mPos.y = XXXXX; 
0," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (version: ""); result.append(version); result.append(')'); return result.toString(); "," String workspaceAreaProp = System.getProperty(s_PROP_WORKSPACE_AREA, ""../../..""); try { System.out.println( ""workspace area: "" + new File(workspaceAreaProp).getCanonicalPath() ); "
1," MapReduceJob mapReduceJob = new RiakMapReduceJob(riakTemplate); MapReduceOperation mapJs = new JavascriptMapReduceOperation( ""function(values){ var row=Riak.mapValuesJson(values); return [row]; "," MapReduceJob XXXXX = new RiakMapReduceJob(riakTemplate); MapReduceOperation XXXXX = new JavascriptMapReduceOperation( ""function(values){ var row=Riak.mapValuesJson(values); return [row]; "
0, for (int i = 0; i < pendingOperations.size(); i++) { IFeatureOperation operation = (IFeatureOperation) pendingOperations.elementAt(i); if (operation.getFeature().equals(feature)) return operation; ," int mod; int count; if (val >= 0 && val < ceil) return val; mod = mod(val, ceil); if (val < 0) count = (val + 1 - ceil) / ceil; else count = val / ceil; if (count % 2 == 0) { return 0 + mod; "
1," return ""AgeingDTOEx [statusId="" + statusId + "", statusStr="" + statusStr + "", welcomeMessage="" + welcomeMessage + "", failedLoginMessage="" + failedLoginMessage + "", inUse="" + inUse + ""]""; "," return ""AgeingDTOEx [statusId="" + statusId + "", statusStr="" + statusStr + "", welcomeMessage="" + welcomeMessage + "", failedLoginMessage="" + failedLoginMessage + "", inUse="" + inUse + ""]""; "
1," String label = ((CustomParser)object).getQualifiedName(); return label == null || label.length() == 0 ? getString(""_UI_CustomParser_type"") : getString(""_UI_CustomParser_type"") + "" "" + label; "," String XXXXX = ((CustomParser)object).getQualifiedName(); return XXXXX == null || XXXXX.length() == 0 ? getString(""_UI_CustomParser_type"") : getString(""_UI_CustomParser_type"") + "" "" + XXXXX; "
1," String query = ""SELECT Article.ID FROM Article WHERE Article.refPublication = 7""; PublicationTerm term = new PublicationTerm(7); assertEquals(query, term.getQuery(""Article.ID"")); "," String XXXXX = ""SELECT Article.ID FROM Article WHERE Article.refPublication = 7""; PublicationTerm XXXXX = new PublicationTerm(7); assertEquals(XXXXX, XXXXX.getQuery(""Article.ID"")); "
0, String streamName = sender.getName(); synchronized (scheduledTasks) { BukkitScheduler scheduler = Bukkit.getScheduler(); for (Integer i : scheduledTasks) { scheduler.cancelTask(i); ," if (this == obj) return true; if (obj == null) return false; if (getClass() != obj.getClass()) return false; VDisk that = VDisk.class.cast(obj); return Objects.equal(this.id, that.id); "
0, _isInMetadataSection--; if (_isInMetadataSection == 0) { _sectionUniqueIdCounter = _sectionUniqueNormalIdCounter; _sectionUniqueComponentIdCounter = _sectionUniqueComponentNormalIdCounter; ," try { FileSystem fs = dfsCluster.getFileSystem(); String path = ""/user/"" + user; Path homeDirectory = new Path(path); if(fs.exists(homeDirectory)) { fs.delete(homeDirectory,true); "
1, if ((rootPath != null) && (m_resourcesNames != null)) { Iterator<String> i = m_resourcesNames.iterator(); while (i.hasNext()) { String path = i.next(); if (rootPath.startsWith(path)) { return true; , if ((rootPath != null) && (m_resourcesNames != null)) { Iterator<String> i = m_resourcesNames.iterator(); while (i.hasNext()) { String XXXXX = i.next(); if (rootPath.startsWith(XXXXX)) { return true; 
1, sinkEventAttributeSet.addAttributes( SinkEventAttributeSet.ITALIC ); AttributeSet instance = sinkEventAttributeSet.copyAttributes(); assertTrue( instance.isEqual( sinkEventAttributeSet ) ); , sinkEventAttributeSet.addAttributes( SinkEventAttributeSet.ITALIC ); AttributeSet XXXXX = sinkEventAttributeSet.copyAttributes(); assertTrue( XXXXX.isEqual( sinkEventAttributeSet ) ); 
1, if (justificationPropertiesEditionProvider == null) justificationPropertiesEditionProvider = new JustificationPropertiesEditionProvider(); return justificationPropertiesEditionProvider; , if (justificationPropertiesEditionProvider == null) justificationPropertiesEditionProvider = new JustificationPropertiesEditionProvider(); return justificationPropertiesEditionProvider; 
1," super.paint(g, c); Rectangle clipRect = g.getClipBounds(); if (isUpperSelected) { if (clipRect.intersects(thumbRect)) { sliderIcon.paintIcon(getSlider(), g, thumbRect.x, thumbRect.y); "," super.paint(g, c); Rectangle XXXXX = g.getClipBounds(); if (isUpperSelected) { if (XXXXX.intersects(thumbRect)) { sliderIcon.paintIcon(getSlider(), g, thumbRect.x, thumbRect.y); "
1, if ( propDefn != null ) return propDefn.getName( ); if ( path.isEmpty( ) ) return null; Step topStep = path.get( path.size( ) - 1 ); propDefn = topStep.stepPropDefn; return propDefn.getName( ); , if ( propDefn != null ) return propDefn.getName( ); if ( path.isEmpty( ) ) return null; Step topStep = path.get( path.size( ) - 1 ); propDefn = topStep.stepPropDefn; return propDefn.getName( ); 
0," RepositoryItem item = (RepositoryItem) value; return super .getListCellRendererComponent( list, item.getHumanReadableName() + "" ("" + item.getFormat() + "")"", index, isSelected, cellHasFocus); "," boolean started = false; for(Bundle each : bundleContext.getBundles()) { if(""com.example.springdm"".equals(each.getSymbolicName()) && each.getState() == Bundle.ACTIVE) { started = true; break; "
1," TokenSequence<?> ts = TSLexerTestUtils.seqForText(""page{"", TSTokenId.getLanguage()); TSLexerTestUtils.next(ts, TSTokenId.TS_KEYWORD, ""page""); TSLexerTestUtils.next(ts, TSTokenId.TS_CURLY_OPEN, ""{""); "," TokenSequence<?> ts = TSLexerTestUtils.seqForText(""page{"", TSTokenId.getLanguage()); TSLexerTestUtils.next(ts, TSTokenId.TS_KEYWORD, ""page""); TSLexerTestUtils.next(ts, TSTokenId.TS_CURLY_OPEN, ""{""); "
1," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (id: ""); result.append(id); result.append(')'); return result.toString(); "," if (eIsProxy()) return super.toString(); StringBuffer XXXXX = new StringBuffer(super.toString()); XXXXX.append("" (id: ""); XXXXX.append(id); XXXXX.append(')'); return XXXXX.toString(); "
0, try { IJavaProject javaProject= JavaCore.create(folder.getProject()); IPath outputFolderPath= javaProject.getOutputLocation(); return folder.getFullPath().equals(outputFolderPath); ," String oldClass = class_; class_ = newClass; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, XhtmlPackage.XHTML_DIV_TYPE__CLASS, oldClass, class_)); "
0," Serializable list = (Serializable) Lists.fixedSize.of(); Serializable list2 = (Serializable) Lists.fixedSize.of(); Assert.assertSame(list, list2); Verify.assertPostSerializedIdentity(list); "," String text = ""until false; do AC_SOMETHING(...); done\n""; AutoconfElement tree = parse(text, false); assertTreeStructure(tree, new String[] { ""until"", ""AC_SOMETHING"", ""..."", null, null "
0, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(GroupsTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; ," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "
0, for (WeightedItem<E> item : theData) { E wiElement = item.getElement(); if (wiElement == null && element == null || wiElement != null && wiElement.equals(element)) { return item.theWeight; , Button b = (Button)e.widget; if (b.getSelection()) { dropDefaultOperation = DND.DROP_COPY; dropOperation |= DND.DROP_COPY; copyButton.setSelection(true); if (dropEnabled) { createDropTarget(); 
0," Locator locator= context.getLocator(); int columnNumber= locator.getColumnNumber(); if (columnNumber > -1) { int offset= start; try { offset= getAntModel().getOffset(locator.getLineNumber(), 1); "," long type = LittleEndian.getUShort(fileContents, pos+2); long rlen = LittleEndian.getUInt(fileContents, pos+4); Record r = Record.createRecordForType(type,fileContents,pos,(int)rlen+8); return r; "
1," final RowIcon baseIcon = ElementPresentationUtil.createLayeredIcon(PlatformIcons.FIELD_ICON, this, false); return ElementPresentationUtil.addVisibilityIcon(this, flags, baseIcon); "," final RowIcon baseIcon = ElementPresentationUtil.createLayeredIcon(PlatformIcons.FIELD_ICON, this, false); return ElementPresentationUtil.addVisibilityIcon(this, flags, baseIcon); "
1, switch (featureID) { case As3EPackage.AS3_BREAK_STATEMENT__LABEL_NAME: return getLabelName(); case As3EPackage.AS3_BREAK_STATEMENT__LABEL: if (resolve) return getLabel(); return basicGetLabel(); , switch (featureID) { case As3EPackage.AS3_BREAK_STATEMENT__LABEL_NAME: return getLabelName(); case As3EPackage.AS3_BREAK_STATEMENT__LABEL: if (resolve) return getLabel(); return basicGetLabel(); 
0, getBean().setMobile(mobile); if (mover!=null && point!=null) { mover.setActive(mobile); if (mobile) point.setCursor(Draw2DUtils.getRoiControlPointCursor()) ; else point.setCursor(null) ; ," addObject(delta); if (delta.getNode().getGridId() != null) { Key nodeKey = new Key(delta.getNode().getClass(), delta.getNode().getGridId()); get(nodeKey).addDeltaReference(delta); "
1, Calendar cal = Calendar.getInstance(); cal.setTime(date); if (UtilValidate.isNotEmpty(bySecondList)) { if (!bySecondList.contains(String.valueOf(cal.get(Calendar.SECOND)))) return false; , Calendar XXXXX = Calendar.getInstance(); XXXXX.setTime(date); if (UtilValidate.isNotEmpty(bySecondList)) { if (!bySecondList.contains(String.valueOf(XXXXX.get(Calendar.SECOND)))) return false; 
0, simpleProperties.remove(propertyName); complexProperties.remove(propertyName); listProperties.remove(propertyName); mapProperties.remove(propertyName); setProperties.remove(propertyName); , String binaryString = DECIMAL_BINARY_TABLE[lightNum]; boolean[] binaryOutputs = new boolean[4]; for (int i = 0; i < 4; i++) { binaryOutputs[i] = binaryString.toCharArray()[i] == '1'; 
0, int minimumLearnCount = specialCharm.getMinimumLearnCount(createLearnRangeContext()); if (experienced) { if (getCurrentLearnCount() == 0) { trait.setExperiencedValue(minimumLearnCount); ," for (int i = 0; i < 3; i++) { if (compClicked.getSource() == loadPnls[i]) { String[] options = new String[4]; options[0] = ""Load""; options[1] = ""Delete""; if (!hasCopied) { options[2] = ""Copy""; "
0," list.lock.lock(); try { checkModifications(); int d = list.size(); list.addAll(start + read.size, c); read = new SubListReadData(read.size + (list.size() - d), list .getData()); return true; ", this.server = zanataDetails.server; this.project = zanataDetails.project; this.version = zanataDetails.version; this.username = zanataDetails.username; this.token = zanataDetails.token; 
1, this.chip = chip; this.pulseLength = pulseLength; this.pulseCount = pulseCount; this.pauseLength = pauseLength; if(pulseLength == 0) pulseLength = 1; if(pauseLength == 0) pauseLength = 1; , this.chip = chip; this.pulseLength = pulseLength; this.pulseCount = pulseCount; this.pauseLength = pauseLength; if(pulseLength == 0) pulseLength = 1; if(pauseLength == 0) pauseLength = 1; 
0," preferences.get(""Developer Tools"", ""Proxy Host"").reset(); preferences.get(""Developer Tools"", ""Proxy Auto Connect"").reset(); preferences.get(""Developer Tools"", ""Proxy Port"").reset(); "," assertThatStoryLocationAllowsStoryPathAsURL(CodeLocations.codeLocationFromPath(""src/test/java/"")); assertThatStoryLocationAllowsStoryPathAsURL(CodeLocations.codeLocationFromURL(""http: "
0," PlateData data = new PlateData(); data.setName(""plate name""); data.setDescription(""plate name""); data.setStatus(""done""); data.setExternalIdentifier(""External Identifier""); return data; ", final boolean[] specicalFlags_doubleQuotes = CharTypes.specicalFlags_doubleQuotes; int len = text.length(); int newcount = count + len + 3; if (newcount > buf.length) { expandCapacity(newcount); 
0," Object oldOWNER = oWNER; oWNER = newOWNER; if (eNotificationRequired()) { eNotify(new ENotificationImpl(this, Notification.SET, PowrmartPackage.FOLDER_TYPE__OWNER, oldOWNER, oWNER)); ", Iterator v = viewers.iterator(); ImViewerComponent comp; while (v.hasNext()) { comp = (ImViewerComponent) v.next(); if (comp.getModel().getImageID() == model.getImageID()) return comp; 
0, switch (featureID) { case PanelPackage.GRID_PANEL__NUMBER_OF_COLUMNS: return NUMBER_OF_COLUMNS_EDEFAULT == null ? numberOfColumns != null : !NUMBER_OF_COLUMNS_EDEFAULT.equals(numberOfColumns); , ivrChannelMappingFromDb.ivrChannel(ivrChannelMapping.getIvrChannel()); ivrChannelMappingFromDb.phoneNumberPattern(ivrChannelMapping.getPhoneNumberPattern()); super.update(ivrChannelMappingFromDb); 
1," return ShrinkWrap.create(JavaArchive.class, ""test.jar"").addClasses(SkinBean.class) .addAsManifestResource(new ByteArrayAsset(""<beans/>"".getBytes()), ArchivePaths.create(""beans.xml"")); "," return ShrinkWrap.create(JavaArchive.class, ""test.jar"").addClasses(SkinBean.class) .addAsManifestResource(new ByteArrayAsset(""<beans/>"".getBytes()), ArchivePaths.create(""beans.xml"")); "
0," MessageDialog errDia = new MessageDialog( TEXT_CONSTANTS.error(), TEXT_CONSTANTS .errorTracePrefix() + "" "" + caught.getLocalizedMessage()); errDia.showCentered(); statusLabel.setVisible(false); ", QuestionGroupInstance questionGroupInstance = questionnaireMapper.mapToQuestionGroupInstance(questionGroupInstanceDto); return questionGroupInstanceDao.create(questionGroupInstance); 
1, String subRace = null; for (PCTemplate template : templateFacet.getSet(id)) { final String tempSubRace = getTemplateSubRace(template); if (tempSubRace != null) { subRace = tempSubRace; , String XXXXX = null; for (PCTemplate template : templateFacet.getSet(id)) { final String XXXXX = getTemplateSubRace(template); if (XXXXX != null) { XXXXX = XXXXX; 
1, sharedObjectConfig = aConfig; sharedObjectID = sharedObjectConfig.getSharedObjectID(); sharedObject = obj; container = cont; containerID = cont.getID(); thread = null; queue = new SimpleFIFOQueue(); , sharedObjectConfig = aConfig; sharedObjectID = sharedObjectConfig.getSharedObjectID(); sharedObject = obj; container = cont; containerID = cont.getID(); thread = null; queue = new SimpleFIFOQueue(); 
1," String prefix = """"; if (mode == ABSOLUTE) prefix = "".""; else if (mode == SUB_PAGE) prefix = "">""; else if (mode == BACKWARD_SEARCH) prefix = ""<""; return prefix + StringUtil.join(names, "".""); "," String prefix = """"; if (mode == ABSOLUTE) prefix = "".""; else if (mode == SUB_PAGE) prefix = "">""; else if (mode == BACKWARD_SEARCH) prefix = ""<""; return prefix + StringUtil.join(names, "".""); "
0, if (isPrime(num)) return false; int counter = 2; int totalPrimeFactors = 0; while (num > 1) { if (num % counter == 0) { totalPrimeFactors++; while (num % counter == 0) { num /= counter; , long memSize = getHostTotalMemory(); memSize -= getHostDom0Memory(); synchronized (this) { for (MockVm vm : vms.values()) { if (vm.getState() != State.Stopped) memSize -= vm.getRamSize(); 
0," AttributeList attrList = new AttributeList(); try { long fsize = mpegFile.length(); Attribute sizeStr = new Attribute(ItemNode.SIZE, Long.toString(fsize)); attrList.add(sizeStr); ", _conf = conf; setValidating(true); setLog(conf.getLog(OpenJPAConfiguration.LOG_METADATA)); setParseComments(true); setMode(MODE_META | MODE_MAPPING | MODE_QUERY); setParseText(true); 
1," super(pageName); logger.log(Messages.TR0011, getClass().getSimpleName(), ""<init>""); setMessage(UIMessages.ConfirmLicensePage_this_message); setTitle(UIMessages.LicenseListPage_this_title); "," super(pageName); logger.log(Messages.TR0011, getClass().getSimpleName(), ""<init>""); setMessage(UIMessages.ConfirmLicensePage_this_message); setTitle(UIMessages.LicenseListPage_this_title); "
1, if (event.getType() == EventType.DAMAGED_PLAYER) { if (event.getTargetId().equals(controllerId) && !damageSources.contains(event.getSourceId())) { damageSources.add(event.getSourceId()); , if (event.getType() == EventType.DAMAGED_PLAYER) { if (event.getTargetId().equals(controllerId) && !damageSources.contains(event.getSourceId())) { damageSources.add(event.getSourceId()); 
1," selManager.removeUnUsedCursorsForComponent(comp, c); if(selManager.getUnUsedCursorsForComponent(comp).size()==1) { selManager.setCursorStateForComponent(comp, OBJECTWITHONEUNUSEDCURSOR); "," selManager.removeUnUsedCursorsForComponent(comp, c); if(selManager.getUnUsedCursorsForComponent(comp).size()==1) { selManager.setCursorStateForComponent(comp, OBJECTWITHONEUNUSEDCURSOR); "
1," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," EditorCell XXXXX = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, XXXXX, editorContext); return XXXXX; "
0," Parameters p = object.getClass().getAnnotation(Parameters.class); if (p != null && p.commandNames().length > 0) { for (String commandName : p.commandNames()) { addCommand(commandName, object); ", List children = parent.getDataChoices(); if (parent.getId().equals(ID_NETWORKLINK) && (children.size() == 1) && ((DataChoice) children.get(0)).getId().equals(ID_DUMMY)) { return; 
1, DocumentModelList currentPage = provider.getCurrentPage(); if (currentPage != null && !currentPage.isEmpty()) { currentSelection = currentPage.get(0); selectedAssetLogEntries = null; , DocumentModelList XXXXX = provider.getCurrentPage(); if (XXXXX != null && !XXXXX.isEmpty()) { currentSelection = XXXXX.get(0); selectedAssetLogEntries = null; 
1, IConfigurationFileInfo info = getProduct().getConfigurationFileInfo(); if (info == null) { info = getModel().getFactory().createConfigFileInfo(); getProduct().setConfigurationFileInfo(info); , IConfigurationFileInfo XXXXX = getProduct().getConfigurationFileInfo(); if (XXXXX == null) { XXXXX = getModel().getFactory().createConfigFileInfo(); getProduct().setConfigurationFileInfo(XXXXX); 
0," Collection<TemplateAvailability> actual = actual().getTemplateAvailabilities(); assertFalse(""Unexpected availability "" + availability + ""; present: "" + actual, actual.contains(availability)); "," return new ToStringBuilder(this, ToStringStyle.SHORT_PREFIX_STYLE).append(""geonamesFeatureClass"", this.geonamesFeatureClass).append(""geonamesFeatureCode"", this.geonamesFeatureCode).toString(); "
0," return new BinaryConnectionFactory(getOperationQueueLength(), getReadBufferSize(), getHashAlgorithm()) { @Override public long getOperationTimeout() { return getOperationTimeoutMillis(); ", boolean isPropertyDefined = false; if (getPropertyDefinition() != null) isPropertyDefined = getPropertyDefinition().hasChildCmsPropertyDefinition(propertyPath); return isPropertyDefined; 
1," SNode baseNode = null; for (EditorOpenHandler handler : EditorOpenHandler.EP_OPEN_HANDLERS.getExtensions()) { baseNode = handler.getBaseNode(context, root); if (baseNode != null) break; "," SNode XXXXX = null; for (EditorOpenHandler handler : EditorOpenHandler.EP_OPEN_HANDLERS.getExtensions()) { XXXXX = handler.getBaseNode(context, root); if (XXXXX != null) break; "
1, switch (state) { case S_PROJECT_DESC : break; case S_PROJECT_NAME : if (elementName.equals(NAME)) { projectDescription.setName(charBuffer.toString().trim()); state = S_PROJECT_DESC; , switch (state) { case S_PROJECT_DESC : break; case S_PROJECT_NAME : if (elementName.equals(NAME)) { projectDescription.setName(charBuffer.toString().trim()); state = S_PROJECT_DESC; 
1," File workDir = getWorkingDir(); File couchdir = new File(workDir, COUCH_DIR); File localIni = new File(couchdir, OSUtils.getCouchIniLocation()); return localIni.getAbsolutePath(); "," File XXXXX = getWorkingDir(); File XXXXX = new File(XXXXX, COUCH_DIR); File XXXXX = new File(XXXXX, OSUtils.getCouchIniLocation()); return XXXXX.getAbsolutePath(); "
1, this.valueSource = valueSource; this.lowerVal = lowerVal; this.upperVal = upperVal; this.includeLower = lowerVal != null && includeLower; this.includeUpper = upperVal != null && includeUpper; , this.valueSource = valueSource; this.lowerVal = lowerVal; this.upperVal = upperVal; this.includeLower = lowerVal != null && includeLower; this.includeUpper = upperVal != null && includeUpper; 
1, if(stereotype.getName().equalsIgnoreCase(StereotypeNames.EMBEDDED_SCREEN_FLOW_TASK)){ taskDefinition = new NakedResponsibilityDefinitionImpl(stereotype); addOwnedElement(taskDefinition); , if(stereotype.getName().equalsIgnoreCase(StereotypeNames.EMBEDDED_SCREEN_FLOW_TASK)){ taskDefinition = new NakedResponsibilityDefinitionImpl(stereotype); addOwnedElement(taskDefinition); 
0," StringBuilder builder = new StringBuilder(); builder.append( getClass().getSimpleName() ).append( ""["" ); boolean first = true; for( Side side : Side.values() ){ if( first ){ first = false; "," return new MyValidityState(myTarget, mySdkOsPath, myOutputJarOsPath, myClassFilesDirs, myExternalJars, myProguardConfigFiles, myIncludeSystemProguardFile, myLogsDirectoryOsPath); "
1, switch (featureID) { case EntityPackage.INTERNAL_CRITERION__TARGET: if (resolve) return getTarget(); return basicGetTarget(); case EntityPackage.INTERNAL_CRITERION__NAME: return getName(); , switch (featureID) { case EntityPackage.INTERNAL_CRITERION__TARGET: if (resolve) return getTarget(); return basicGetTarget(); case EntityPackage.INTERNAL_CRITERION__NAME: return getName(); 
0, switch (featureID) { case JoomlaExtensionManifestPackage.MEDIA_SET__DESTINATION: return getDestination(); case JoomlaExtensionManifestPackage.MEDIA_SET__FILES: return getFiles(); ," PEPeer peer = (PEPeer)cell.getDataSource(); String value = (peer == null) ? """" : peer.getPeerSource(); if (!cell.setSortValue(value) && cell.isValid()) return; cell.setText(""""+value); "
0," SessionEvent event = new SessionEvent(this.wagon, SessionEvent.SESSION_LOGGED_IN); for (SessionListener sessionListener : this.sessionListeners) { sessionListener.sessionLoggedIn(event); "," assertEquals(LEAST, Ints.min(LEAST)); assertEquals(GREATEST, Ints.min(GREATEST)); assertEquals((int) 0, Ints.min( (int) 8, (int) 6, (int) 7, (int) 5, (int) 3, (int) 0, (int) 9)); "
1, this.shortName = route.getShortName(); this.longName = route.getLongName(); this.mode = getMode(route.getType()); this.agencyId = route.getId().getAgencyId(); this.routeId = route.getId().getId(); , this.shortName = route.getShortName(); this.longName = route.getLongName(); this.mode = getMode(route.getType()); this.agencyId = route.getId().getAgencyId(); this.routeId = route.getId().getId(); 
0," StringBuffer buf = new StringBuffer(); buf.append( ""RegexNormalizer( "" ); for ( int i = 0; i < regexes.length; i++ ) { buf.append( regexes[i] ); if ( i < regexes.length - 1 ) { buf.append( "", "" ); "," l1 = new ListenerEventHistory(); l2 = new ListenerEventHistory(); l3 = new ListenerEventHistory(); dispatcher = new EventDispatcher(EVENT1, EVENT2, EVENT3); api = dispatcher.getEventAPI(); "
1," String oldDESC = dESC; dESC = newDESC; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, RifPackage.ATTRIBUTEVALUEXMLDATA__DESC, oldDESC, dESC)); "," String oldDESC = dESC; dESC = newDESC; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, RifPackage.ATTRIBUTEVALUEXMLDATA__DESC, oldDESC, dESC)); "
0," super.onInitializeAccessibilityNodeInfo(host, info); info.setCheckable(true); info.setChecked(isChecked()); CharSequence text = getText(); if (!TextUtils.isEmpty(text)) { info.setText(text); "," Intent i = new Intent(ctx,MITCoursesListsSliderActivity.class); i.putExtra(MITCoursesListsSliderActivity.KEY_GROUP, MITCoursesListsSliderActivity.GROUP_01); ctx.startActivity(i); "
0," super(""Open Shell""); setImageDescriptor(Activator.getInstance().getImageCache().getDescriptor(""icons/terminal_view.png"")); this.page = getActivePage(); this.logger = logger; this.probe = probe; ", this.learningRate = DEFAULT_LEARNING_RATE; this.maxMovement = DEFAULT_TOTAL_MOVEMENT; this.totalMovement = DEFAULT_TOTAL_MOVEMENT; this.acceptableDistanceFactor = DEFAULT_ACCEPTABLE_DISTANCE_FACTOR; 
1," mActualScale = b.getFloat(""scale"", 1.0f); mInvActualScale = 1 / mActualScale; mTextWrapScale = b.getFloat(""textwrapScale"", mActualScale); mInZoomOverview = b.getBoolean(""overview""); "," mActualScale = b.getFloat(""scale"", 1.0f); mInvActualScale = 1 / mActualScale; mTextWrapScale = b.getFloat(""textwrapScale"", mActualScale); mInZoomOverview = b.getBoolean(""overview""); "
0," if( image == null || image.getWidth() != content.getWidth() || image.getHeight() != content.getHeight() ){ image = createBackground( baseImage, content.getWidth(), content.getHeight() ); "," while (true) { String height = JOptionPane.showInputDialog( IGV.getMainFrame(), parameter + "": "", String.valueOf(value)); if ((height == null) || height.trim().equals("""")) { return Double.MIN_VALUE; "
0, StringBuilder cp = new StringBuilder(); List<File> cpFiles = Gosu.deriveClasspathFrom(VEdit.class); for (File cpFile : cpFiles) { if (cp.length() > 0) { cp.append(File.pathSeparatorChar); ," ASEMEState state = context.getState(); URI suc = state.getSUC(); URI aip = state.getAIP(); if (aip == null) { aip = suc.trimFileExtension().appendFileExtension(""aip""); state.setAIP(aip); "
0," Factory factory = new Factory(); ArrayList<String> params = new ArrayList<String>(); assertEquals(factory.createOperator(params).getClass(), new AlternativeOperator().getClass()); "," plugin.getAPI().setPlayerInfo(event.getPlayer().getName(), ""lastSeen"", Long.toString((System.currentTimeMillis() / 1000L))); plugin.getAPI().processTimes(event.getPlayer().getName()); "
0," Configuration config = getResources().getConfiguration(); String lang = settings.getString(PREF_DEFAULT_LOCALE, DEFAULT_LOCALE); if (lang.equals(""xx"")) { locale = Locale.getDefault(); "," String password = m_passField.getText(); ArrayList<String> list = new ArrayList<String>(); StringUtil.getUsedVariables(password, list, true); if (list.size() == 0) { m_passField.setEchoChar('*'); "
1, this.resourceId = id; this.owner = owner; this.componentType = type; this.inStatistics = new Statistics(id); if (ComponentType.ENDPOINT.equals(type)) { this.outStatistics = null; , this.resourceId = id; this.owner = owner; this.componentType = type; this.inStatistics = new Statistics(id); if (ComponentType.ENDPOINT.equals(type)) { this.outStatistics = null; 
0," if (obj == null || !(obj instanceof StampTombstone)) return false; return new EqualsBuilder().appendSuper(super.equals(obj)).append( stampType, ((StampTombstone) obj).getStampType()).isEquals(); "," StringBuilder value = new StringBuilder(); value.append(""\n car: "" + pad(car, level + 1)); value.append(""\n cdr: "" + (cdr == null ? ""NULL"" : cdr.toString())); return value.toString(); "
1, super.onCreate(); if (mStorageManager == null) { mStorageManager = (StorageManager) getSystemService(Context.STORAGE_SERVICE); mStorageManager.registerListener(mStorageListener); , super.onCreate(); if (mStorageManager == null) { mStorageManager = (StorageManager) getSystemService(Context.STORAGE_SERVICE); mStorageManager.registerListener(mStorageListener); 
0, String name = packageFragment.getElementName(); if (packageFragment.isDefaultPackage()) { name = PMDPlugin.getDefault().getStringTable().getString(StringKeys.VIEW_DEFAULT_PACKAGE); ," Calendar today = Calendar.getInstance(); today.set(Calendar.HOUR_OF_DAY, 0); today.set(Calendar.MINUTE, 0); today.set(Calendar.SECOND, 0); today.set(Calendar.MILLISECOND, 0); return today; "
0," if (started.compareAndSet(false, true)) { Preconditions.checkState(!executor.isShutdown(), ""CachingServiceSelector has been destroyed""); try { refresh().checkedGet(30, TimeUnit.SECONDS); ", int yOffset = boxText.getTopPixel(); int xOffset = boxText.getHorizontalPixel(); if (xOffset != oldXOffset || yOffset != oldYOffset) { oldXOffset = xOffset; oldYOffset = yOffset; return true; 
1, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(WikiTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(WikiTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; 
0," String oldApName = apName; apName = newApName; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SclPackage.TCONNECTED_AP__AP_NAME, oldApName, apName)); "," BitmapFactory.Options bfo = new BitmapFactory.Options(); bfo.inSampleSize = 4; bfo.outWidth = 150; bfo.outHeight = 150; Bitmap photo = BitmapFactory.decodeFile(filePath, bfo); return photo; "
1," assertNull(valve.getSubPipeline()); pipeline = createPipeline(new LogValve(), new LogValve(), new LogValve()); valve.setSubPipeline(pipeline); assertSame(pipeline, valve.getSubPipeline()); "," assertNull(valve.getSubPipeline()); pipeline = createPipeline(new LogValve(), new LogValve(), new LogValve()); valve.setSubPipeline(pipeline); assertSame(pipeline, valve.getSubPipeline()); "
1, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(WebContentTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , TestSuite XXXXX = new TestSuite(); XXXXX.addTest(LoginTests.suite()); XXXXX.addTest(WebContentTests.suite()); XXXXX.addTestSuite(StopSeleniumTest.class); return XXXXX; 
1, if(isChecked()) { currentClasspath = classpath; IManagedForm managedForm = DependencyTreePage.this.getManagedForm(); managedForm.getForm().setText(formatFormTitle()); loadData(false); , if(isChecked()) { currentClasspath = classpath; IManagedForm XXXXX = DependencyTreePage.this.getManagedForm(); XXXXX.getForm().setText(formatFormTitle()); loadData(false); 
1, try{ int i = chosenbox.getSelectedIndex(); namebox.addItem((String)chosenPeople.getElementAt(i)); chosenPeople.remove(i); namebox.updateUI(); chosenbox.updateUI(); System.out.println(i); , try{ int i = chosenbox.getSelectedIndex(); namebox.addItem((String)chosenPeople.getElementAt(i)); chosenPeople.remove(i); namebox.updateUI(); chosenbox.updateUI(); System.out.println(i); 
0," CheckedTreeSelectionDialog dialog = new CheckedTreeSelectionDialog(shell, WorkbenchLabelProvider.getDecoratingWorkbenchLabelProvider(), new ITreeContentProvider() { @Override public void dispose() { ", if (directions[1].isSelected()) { _fileFolderTaskPane.setSlidingDirection(SwingConstants.WEST); _otherPlacesPane.setSlidingDirection(SwingConstants.WEST); _container.setAxis(JideBoxLayout.X_AXIS); 
1, ModuleRevisionId mrid = dd.getDependencyRevisionId(); if ((version == null || version.equals(mrid.getRevision())) && (branch == null || branch.equals(mrid.getBranch()))) { return dd; , ModuleRevisionId mrid = dd.getDependencyRevisionId(); if ((version == null || version.equals(mrid.getRevision())) && (branch == null || branch.equals(mrid.getBranch()))) { return dd; 
0," AssemblerGroup a = AssemblerGroup.create(); assertInstanceOf( AssemblerGroup.class, a ); assertEquals( null, a.assemblerFor( resource( ""ja:Anything"" ) ) ); checkFailsType( a, ""rdf:Resource"" ); ", TestSuite testSuite = new TestSuite(); testSuite.addTest(SetupTests.suite()); testSuite.addTest(ProfileTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; 
0," if (col <= 1) return def; Object o1 = this.getValueAt(row, col); Object o2 = this.getValueAt(row, col-1); if ((o1 == null) || (o2 == null)) return def; return (o1.equals(o2)) ? def : diff; "," return ""TweetPollSwitch [switchId="" + switchId + "", codeTweet="" + codeTweet + "", tweetPoll="" + tweetPoll + "", answers="" + answers + "", dateUpdated="" + dateUpdated + "", shortUrl="" + shortUrl + ""]""; "
0," StringBuilder result = new StringBuilder(); result.append(""{""); result.append(""class=temp_import_target2_df""); result.append("", tempSid=""); result.append(this.tempSid); result.append("""," final PointBuyMethod method = (PointBuyMethod) currentPurchaseMethods.getSelectedItem(); if (method == null) { removeMethodButton.setEnabled(false); purchaseMethodPointsEdit.setText(""""); "
1," super(ReviewsBundle.message(""reviews.groupByModule""), ReviewsBundle.message(""reviews.groupByModule""), IconLoader.getIcon(""/objectBrowser/showModules.png"")); this.setEnabledInModalContext(false); "," super(ReviewsBundle.message(""reviews.groupByModule""), ReviewsBundle.message(""reviews.groupByModule""), IconLoader.getIcon(""/objectBrowser/showModules.png"")); this.setEnabledInModalContext(false); "
1," if (this.name == null) this.name = name; else if (name == null) throw new IllegalArgumentException(""name=null""); else if (!name.equals(this.name)) throw new IllegalArgumentException(""name=""+name); "," if (this.name == null) this.name = name; else if (name == null) throw new IllegalArgumentException(""name=null""); else if (!name.equals(this.name)) throw new IllegalArgumentException(""name=""+name); "
0," synchronized (contexts) { AllocatorPerContext l = contexts.get(contextCfgItemName); if (l == null) { contexts.put(contextCfgItemName, (l = new AllocatorPerContext(contextCfgItemName))); "," super(node); if (!getProperty(NodeProperties.NODE_TYPE).equals(NodeType.VersionNode.name())) { throw new IllegalArgumentException(""node "" + node.getId() + "" is not a "" + NodeType.VersionNode); "
1," for (Face face : ListSequence.fromList(myEmbeddedGraph.getFaces())) { System.out.println(""face: ""); if (myEmbeddedGraph.isOuterFace(face)) { System.out.println(""this is outer face""); "," for (Face face : ListSequence.fromList(myEmbeddedGraph.getFaces())) { System.out.println(""face: ""); if (myEmbeddedGraph.isOuterFace(face)) { System.out.println(""this is outer face""); "
1," String path = root == null ? storedRoot : root.getPath(); String relative = baseFile == null ? path : FileUtil.getRelativePath(baseFile, new File(path)); return relative == null ? path : relative; "," String XXXXX = root == null ? storedRoot : root.getPath(); String XXXXX = baseFile == null ? XXXXX : FileUtil.getRelativePath(baseFile, new File(XXXXX)); return XXXXX == null ? XXXXX : XXXXX; "
0," final Key key = getKey(rowIndex); final String[] parts = key.getContents().split("" +""); switch (columnIndex) { case 0 : return parts[2]; case 1 : return parts[0]; case 2 : return parts[1]; "," if (_persistence == null) { _persistence = (RolePersistence)PortalBeanLocatorUtil.locate(RolePersistence.class.getName()); ReferenceRegistry.registerReference(RoleUtil.class, ""_persistence""); "
1," ActionList actionList=(ActionList)actionListMap.get(id); if (actionList==null){ ActionListFactory factory=getFactory(id); try { actionList=factory.getActionList(); actionListMap.put(id,actionList); "," ActionList actionList=(ActionList)actionListMap.get(id); if (actionList==null){ ActionListFactory factory=getFactory(id); try { actionList=factory.getActionList(); actionListMap.put(id,actionList); "
1," Location ground = new Location(loc.getWorld(), loc.getX(), 100, loc.getZ()); while (ground.getBlockY() >= 1) { if (!ground.getBlock().isEmpty()) return ground; ground.add(0, -1, 0); "," Location XXXXX = new Location(loc.getWorld(), loc.getX(), 100, loc.getZ()); while (XXXXX.getBlockY() >= 1) { if (!XXXXX.getBlock().isEmpty()) return XXXXX; XXXXX.add(0, -1, 0); "
0," long sequenceNo = ringBuffer.next(); CorePipelineEvent event = ringBuffer.get(sequenceNo); event.reset(connectionId, verb, path, content, channel, keepAlive); ringBuffer.publish(sequenceNo); "," Set federationNames = (Set)success.getResult(); System.out.println(""./""); System.out.println(""../""); for (Object federationName : federationNames) { System.out.println(federationName + ""/""); "
1," mContext.enforceCallingOrSelfPermission(BLUETOOTH_PERM, ""Need BLUETOOTH permission""); if (!isEnabledInternal()) return false; if (!BluetoothAdapter.checkBluetoothAddress(address)) { return false; "," mContext.enforceCallingOrSelfPermission(BLUETOOTH_PERM, ""Need BLUETOOTH permission""); if (!isEnabledInternal()) return false; if (!BluetoothAdapter.checkBluetoothAddress(address)) { return false; "
0," int index = sliceZero + slice*sliceStride + rowZero + row*rowStride + columnZero + column*columnStride; if (value == 0) this.elements.removeKey(index); else this.elements.put(index, value); "," ArrayList<String> unknown = new ArrayList<String>(); String known = DebugDatabase.parseEffectEnchantments( text, unknown ); DebugDatabase.logModifierDatum( name, known, unknown, report ); "
1," if (foundType.getFeatureKind() == GType.POLYLINE) { if(foundType.isRoad() && !MapObject.hasExtendedType(foundType.getType())) addRoad(way, foundType); else addLine(way, foundType); "," if (foundType.getFeatureKind() == GType.POLYLINE) { if(foundType.isRoad() && !MapObject.hasExtendedType(foundType.getType())) addRoad(way, foundType); else addLine(way, foundType); "
0, m_driverPosition = driverPosition; m_name = name; m_label = label; m_alias = label; m_dataType = dataType; m_nativeTypeName = nativeTypeName; m_isCustom = isCustom; m_driverProvidedDataType = null; ," JOptionPane.showMessageDialog(viewer, ""You must select at least one importable file to\n"" + ""add to the import queue. Choose an image in the\n"" + ""left-hand panel first before continuing.""); "
0," Assert.assertEquals(NameUtil.toAPI(""isHired""), ""is-hired""); Assert.assertEquals(NameUtil.toAPI(""hired""), ""hired""); Assert.assertEquals(NameUtil.toAPI(""isHiredOk""), ""is-hired-ok""); ", final ArrayList<NetworkBookTree> bookTrees = new ArrayList<NetworkBookTree>(); for (FBTree t : tree.subTrees()) { if (t instanceof NetworkBookTree) { bookTrees.add((NetworkBookTree)t); 
0," SubjectPropertiesForm = new FormBuilder(); SubjectPropertiesForm.SetFormName(FormName); if(this.SubjectName ==null) { SubjectPropertiesForm.AddSummaryItem(SubjectNameField,""String""); ", for (WeightedItem<E> item : theData) { E wiElement = item.getElement(); if (wiElement == null && element == null || wiElement != null && wiElement.equals(element)) { return true; 
1, IModelElement parent = field.getParent(); if (parent instanceof IType) { RecordTypeDef typeDef = (RecordTypeDef) getTypeDef((IType) parent); return typeDef.getFields().get(field.getElementName()); , IModelElement parent = field.getParent(); if (parent instanceof IType) { RecordTypeDef typeDef = (RecordTypeDef) getTypeDef((IType) parent); return typeDef.getFields().get(field.getElementName()); 
0, PropertyPath path = new PropertyPath(propertyPath); String childPropertyName = path.getPropertyName(); int childPropertyIndex = path.getPropertyIndex(); if (childPropertyName == null){ return false; ," if (!viewFrustum.intersects(this.getExtent(dc.getGlobe(), dc.getVerticalExaggeration()))) return false; if (getSizeInPixels(dc) <= MIN_CELL_SIZE_PIXELS) return false; return true; "
0," Matrix data = cubishTestData(0.01); BallKmeans r = new BallKmeans(6, data, 0); Matrix x = new DenseMatrix(6, 5); int row = 0; for (Centroid c : r) { x.viewRow(row).assign(c.viewPart(0, 5)); row++; "," for (Tree t : tb) { if (VERBOSE) System.out.println(""TfTbApply transforming "" + t); Tree tmpT = t.deeperCopy(); if (transformer != null) { tmpT = transformer.transformTree(tmpT); "
1," return (OptionType) this.em .createNamedQuery(OptionType.NQ_FIND_BY_NAME) .setParameter(""pClientId"", Session.user.get().getClientId()) .setParameter(""pName"", name).getSingleResult(); "," return (OptionType) this.em .createNamedQuery(OptionType.NQ_FIND_BY_NAME) .setParameter(""pClientId"", Session.user.get().getClientId()) .setParameter(""pName"", name).getSingleResult(); "
0," super(""PlanarConfiguration"", TAG_PLANAR_CONFIGURATION, 1 << TIFF_SHORT); addValueName(PLANAR_CONFIGURATION_CHUNKY, ""Chunky""); addValueName(PLANAR_CONFIGURATION_PLANAR, ""Planar""); "," mActivity = buildTestContext(); mHelper = new EditEventHelper(mActivity, null); mModel1 = buildTestModel(); mCurrentSaveTest = SAVE_EVENT_NEW_EVENT; assertTrue(mHelper.saveEvent(mModel1, null, 0)); "
1," switch (message.what) { case XMLHelper.DID_SUCCEED: { Document document = (Document)message.obj; parseAuthorizeResponse(document); handler.sendMessage(Message.obtain(handler, AUTHENTICATED)); break; "," switch (message.what) { case XMLHelper.DID_SUCCEED: { Document XXXXX = (Document)message.obj; parseAuthorizeResponse(XXXXX); handler.sendMessage(Message.obtain(handler, AUTHENTICATED)); break; "
0, Individual i1 = (Individual) a; Individual i2 = (Individual) b; return (((NSGA2MultiObjectiveFitness) i1.fitness).getObjective(o) < ((NSGA2MultiObjectiveFitness) i2.fitness).getObjective(o)); , if( view != null ){ JComponent item = view.getItem(); for( MouseInputListener listener : mouseListeners ){ item.removeMouseListener( listener ); item.removeMouseMotionListener( listener ); 
0," XmlTest test = new XmlTest(suite); test.setName(testName); try { test.setXmlClasses(Collections.singletonList( new XmlClass(getClassNameForTest(testDirectory, testName.trim())))); ", Set<ClusterRouter> router = routerFactory.getRouter(java.lang.String.class); Assert.assertNull(router); Assert.assertTrue(routerFactory.missingMsgTypes.containsKey(java.lang.String.class)); 
1, int numCandidates = 0; for ( final Bead bead : view.getBeadStructure().getBeadList() ) if ( bead.getDescriptorCorrespondence().size() > 0 ) ++numCandidates; return numCandidates; , int XXXXX = 0; for ( final Bead bead : view.getBeadStructure().getBeadList() ) if ( bead.getDescriptorCorrespondence().size() > 0 ) ++XXXXX; return XXXXX; 
1," Theme theme = jpaThemeMapper.findDefault(); assertNotNull(""Did not find the default theme and did not throw exception"", theme); assertEquals(""Theme id does not match"", testThemeId, theme.getId()); "," Theme XXXXX = jpaThemeMapper.findDefault(); assertNotNull(""Did not find the default XXXXX and did not throw exception"", XXXXX); assertEquals(""Theme id does not match"", testThemeId, XXXXX.getId()); "
0," List<Header> headers = new ArrayList<Header>(); headers.add(new RestData.Header(""Something-Else"", ""application/json"")); assertEquals(ContentType.typeFor(""default""), ContentType.parse(headers)); "," icon.setBorder(null); icon.setLayout(null); ui.installDefaults(); assertTrue(""opaque"", icon.isOpaque()); assertTrue(""border"", icon.getBorder() != null); assertNull(""layout"", icon.getLayout()); "
1," IStyle style = container.getStyle( ); CSSValue hAlign = style.getProperty( IStyle.STYLE_TEXT_ALIGN ); if ( null != hAlign ) { writer.attribute( HTMLTags.ATTR_ALIGN, hAlign.getCssText( ) ); "," IStyle XXXXX = container.getStyle( ); CSSValue XXXXX = XXXXX.getProperty( IStyle.STYLE_TEXT_ALIGN ); if ( null != XXXXX ) { writer.attribute( HTMLTags.ATTR_ALIGN, XXXXX.getCssText( ) ); "
1, if (hashCode == 0) { Iterator iter = mapData.keySet().iterator(); for (; iter.hasNext(); ) { Object key = iter.next(); int hash = (key != null) ? key.hashCode() : 0xbabe; hashCode ^= hash; , if (XXXXXCode == 0) { Iterator XXXXX = mapData.XXXXXSet().XXXXXator(); for (; XXXXX.hasNext(); ) { Object XXXXX = XXXXX.next(); int XXXXX = (XXXXX != null) ? XXXXX.XXXXXCode() : 0xbabe; XXXXXCode ^= XXXXX; 
0," return new IContentAssistService() { public List<Proposal> computeCompletionProposals(Scope scope, ContentAssistInvocationContext context, ITranslationUnit unit) { return Collections.emptyList(); "," super.onInitializeAccessibilityNodeInfo(host, info); info.setCheckable(true); info.setChecked(isChecked()); CharSequence text = getText(); if (!TextUtils.isEmpty(text)) { info.setText(text); "
1," if (provider != null) { for (ClassNodeWrapper classNode : provider.getAllClassNodes()) { if (!hasClassNode(classNode.getName())) { classNodeWrappers.put(classNode.getName(), classNode); "," if (provider != null) { for (ClassNodeWrapper classNode : provider.getAllClassNodes()) { if (!hasClassNode(classNode.getName())) { classNodeWrappers.put(classNode.getName(), classNode); "
1, Screen screen = event.getScreen(); if(screen instanceof AssistantScreen){ AssistantScreen ascreen = (AssistantScreen)screen; if(ascreen.getAssistant().isActive()){ ascreen.getAssistant().cancel(); , Screen screen = event.getScreen(); if(screen instanceof AssistantScreen){ AssistantScreen ascreen = (AssistantScreen)screen; if(ascreen.getAssistant().isActive()){ ascreen.getAssistant().cancel(); 
1, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(WebsiteTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , TestSuite XXXXX = new TestSuite(); XXXXX.addTest(LoginTests.suite()); XXXXX.addTest(WebsiteTestPlan.suite()); XXXXX.addTestSuite(StopSeleniumTest.class); return XXXXX; 
0," LOGGER.info(""Setting password of admin account to default value""); userService.changePassword(""admin"", ""admin""); LOGGER.info(""Admin password set to default value""); setEhourInitialized(); ", switch (featureID) { case NodesPackage.NODE_SINGLE_VALUE_CONTAINMENT__SINGLE_VALUE_CONTAINMENT: if (resolve) return getSingleValueContainment(); return basicGetSingleValueContainment(); 
0, IEditorDescriptor editorDescriptor = getEditorDescriptorForDawnEditor(resourceName); if (editorDescriptor == null) { editorDescriptor = getEditorDescriptorFromFirstEditor(resourceName); , DB2FilterToSQL filter = new DB2FilterToSQL((Writer) null); filter.setFunctionEncodingEnabled(isFunctionEncodingEnabled()); filter.setLooseBBOXEnabled(delegate.isLooseBBOXEnabled()); return filter; 
1," switch (featureID) { case ClassesPackage.SIGNATURE_OWNER__OWNED_SIGNATURES: return ((InternalEList<InternalEObject>)(InternalEList<?>)getOwnedSignatures()).basicAdd(otherEnd, msgs); "," switch (featureID) { case ClassesPackage.SIGNATURE_OWNER__OWNED_SIGNATURES: return ((InternalEList<InternalEObject>)(InternalEList<?>)getOwnedSignatures()).basicAdd(otherEnd, msgs); "
0," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (group: ""); result.append(group); result.append(')'); return result.toString(); "," double randomOffset = RandomUtils.nextDouble(workingRandom, probabilityWeightTotal); Map.Entry<Double, Object> entry = cachedEntityMap.floorEntry(randomOffset); return entry.getValue(); "
0," if (isArray()) return getComponentType().getShortName() + ""[]""; else { String name = getName(); int p = name.lastIndexOf('.'); if (p >= 0) return name.substring(p + 1); else return name; ", CloudFoundryPlugin.getDefault().removeServerListener(serverListener); getServer().getOriginal().removeServerListener(serverListener); if (mform != null) { mform.dispose(); mform = null; 
1, ChangeWorkloadConfiguration result = new ChangeWorkloadConfiguration(); result.setSessionId(sessionId); result.setProcessId(processId); result.setConfiguration(configuration); return result; , ChangeWorkloadConfiguration result = new ChangeWorkloadConfiguration(); result.setSessionId(sessionId); result.setProcessId(processId); result.setConfiguration(configuration); return result; 
0," if (blobStore != null && !Strings.isNullOrEmpty(container) && !blobStore.containerExists(container)) { blobStore.createContainerInLocation(getLocationById(blobStore, locationId), container); "," final long remainingDelay = e.recheckAt - System.currentTimeMillis(); if (MILLISECONDS.convert(10, SECONDS) < remainingDelay) { workQueue.getDefaultQueue().schedule(e, remainingDelay, MILLISECONDS); "
1, _subFolders.remove(sub); FlexoIndexManager.reIndexObjectOfArray(getSubFolders().toArray(new FlexoComponentFolder[0])); setChanged(); notifyObservers(new ComponentFolderDeleted(sub)); , _subFolders.remove(sub); FlexoIndexManager.reIndexObjectOfArray(getSubFolders().toArray(new FlexoComponentFolder[0])); setChanged(); notifyObservers(new ComponentFolderDeleted(sub)); 
1," ArtifactSourceFilesState state = myArtifactState.get(target); if (state == null) { state = new ArtifactSourceFilesState(target, projectDescriptor); myArtifactState.put(target, state); "," ArtifactSourceFilesState XXXXX = myArtifactState.get(target); if (XXXXX == null) { XXXXX = new ArtifactSourceFilesState(target, projectDescriptor); myArtifactState.put(target, XXXXX); "
0," JScrollBar scrollBar = myScrollPane.getHorizontalScrollBar(); int value = scrollBar.getValue() - scrollBar.getUnitIncrement(-1); value = Math.max(value, 0); scrollBar.setValue(value); "," this.pLeft=left; this.pRight=right; this.pCenter=center; this.flame = flame; setSize(pCenter.getWidth(), pCenter.getHeight()); this.setAcceleration(0, gravity); this.setSpeed(0, 0); "
0," this(viewer); Object siteService = Util.getAdapter(site, IWorkbenchSiteProgressService.class); if (siteService != null) { progressService = (IWorkbenchSiteProgressService) siteService; ", Enumeration<MutableTreeNode> newNodes = children(); for (; newNodes.hasMoreElements();) { NotesTreeNode node = (NotesTreeNode) newNodes.nextElement(); node.save(); node.saveChildren(); 
1," assertNotNull(actualString); assertTrue( String.format(""Regexp Assertion Failed:\nExpected: %s\nActual: %s\n"", expectedRegexp, actualString), actualString.matches(expectedRegexp)); "," assertNotNull(actualString); assertTrue( String.format(""Regexp Assertion Failed:\nExpected: %s\nActual: %s\n"", expectedRegexp, actualString), actualString.matches(expectedRegexp)); "
0, super(rep); if (rep._usedProtocol.equals(NegotiationParameters.key4CentralisedstatusProto) || rep._usedProtocol.equals(NegotiationParameters.key4statusProto)) { this.iObserveStatus=true; , SNode n1 = ate1.getValue().getNode(); SNode n2 = ate2.getValue().getNode(); if (n1 == null || n2 == null) return 0; return n1.getConcept().getId().compareTo(n2.getConcept().getId()); 
0, context.checking(new Expectations() { { allowing(actionContext).getParams(); will(returnValue(id)); allowing(findById).execute(with(any(FindByIdRequest.class))); will(returnValue(group)); , updateLevels(); other.updateLevels(); if (fuelAmount < 2) { if (fuelAmount == other.fuelAmount) return smeltingAmount - other.smeltingAmount; return fuelAmount - other.fuelAmount; 
1," super.onCreate(icicle); setContentView(R.layout.main); ctx = (RWSubForum.this); Bundle extras = getIntent().getExtras(); url = extras.getString(""url""); try { first = extras.getBoolean(""first""); "," super.onCreate(icicle); setContentView(R.layout.main); ctx = (RWSubForum.this); Bundle XXXXX = getIntent().getExtras(); url = XXXXX.getString(""url""); try { first = XXXXX.getBoolean(""first""); "
0," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; "," final int MAX_AHEAD = 6; final double MAX_DISTANCE = 2.5 * delta; final ResamplingData r = new ResamplingData(this.length, this.dep); final Vector vector = new Vector(); r.setDeps(0, dep, new int[]{0"
1, int c = 1; for (; c < initialCapacity; c <<= 1) ; threshold = (int) (c * loadFactor); if (initialCapacity > threshold && c < MAXIMUM_CAPACITY) { c <<= 1; threshold = (int) (c * loadFactor); , int XXXXX = 1; for (; XXXXX < initialCapaXXXXXity; XXXXX <<= 1) ; threshold = (int) (XXXXX * loadFaXXXXXtor); if (initialCapaXXXXXity > threshold && XXXXX < MAXIMUM_CAPACITY) { XXXXX <<= 1; threshold = (int) (XXXXX * loadFaXXXXXtor); 
0," StringBuffer sb = new StringBuffer( ); sb.append( ""{"" ); for ( int i = 0; i < properties.size( ); ++i ) { Property p = (Property) properties.get( i ); if ( p != null ) { sb.append( p.toString( ) ); ", Editor editor = PlatformDataKeys.EDITOR.getData(e.getDataContext()); PsiFile file = LangDataKeys.PSI_FILE.getData(e.getDataContext()); e.getPresentation().setEnabled(editor != null && file != null); 
0," if (null == framework.getService(SERVICE_NAME)) { final NodeExecutorService service = new NodeExecutorService(framework); framework.setService(SERVICE_NAME, service); return service; ", for(int i = 0; i < partList.size(); i++){ System.err.println(partList.size()); System.err.println(partList.get(i).get(i).getType()); System.err.println(Integer.toString(partList.get(i).size())); 
0, if (tabMinWidth == null) { tabMinWidth = new StyleableDoubleProperty(DEFAULT_TAB_MIN_WIDTH) { @Override public StyleableProperty getStyleableProperty() { return StyleableProperties.TAB_MIN_WIDTH; ," notifyConnectionListeners(false); Log.v(TAG, ""CL:connection closed on error "" + e.getMessage()); if (mNetworkMonitor.isConnected()) reconnect(); else mNetworkMonitor.scheduleConnect(); "
1, CmsSetupTestResult testResult = new CmsSetupTestResult(this); String basePath = setupBean.getWebAppRfsPath(); if (!basePath.endsWith(File.separator)) { basePath += File.separator; , CmsSetupTestResult XXXXX = new CmsSetupTestResult(this); String XXXXX = setupBean.getWebAppRfsPath(); if (!XXXXX.endsWith(File.separator)) { XXXXX += File.separator; 
0, String endTime = inst.getString(Tag.AcquisitionTime); if (endTime == null) { endTime = inst.getString(Tag.ContentTime); if (endTime == null) endTime = inst.getString(Tag.SeriesTime); , if (singleSampleForReferencesTable.getSelection() instanceof IStructuredSelection) { removeSingleSampleForReferencesTable((IStructuredSelection) singleSampleForReferencesTable.getSelection()); 
1, return (pFetchingContentProviderImplementation != null) ? pFetchingContentProviderImplementation : (pFetchingContentProviderImplementation = new FetchingContentProviderImplementationElements()); , return (pFetchingContentProviderImplementation != null) ? pFetchingContentProviderImplementation : (pFetchingContentProviderImplementation = new FetchingContentProviderImplementationElements()); 
1, setLayout(new java.awt.BorderLayout()); addComponentListener(new java.awt.event.ComponentAdapter() { public void componentResized(java.awt.event.ComponentEvent evt) { formComponentResized(evt); , setLayout(new java.awt.BorderLayout()); addComponentListener(new java.awt.event.ComponentAdapter() { public void componentResized(java.awt.event.ComponentEvent evt) { formComponentResized(evt); 
0, switch (featureID) { case Bpmn2Package.SCRIPT_TASK__SCRIPT: setScript(SCRIPT_EDEFAULT); return; case Bpmn2Package.SCRIPT_TASK__SCRIPT_FORMAT: setScriptFormat(SCRIPT_FORMAT_EDEFAULT); return; , try { TreeNode node = (TreeNode)((StructuredSelection)(e.getSelection())).getFirstElement(); if(((ActiveModuleData)node.getData()).paused) setEnablement(true); else setEnablement(false); 
1, int i=c.getIndex(); coef = c.focal/(c.focal+c.altitude) * lensMag; pc[i].lcx = (int)Math.round((lensWidth/2) + (vx-lensx)*coef); pc[i].lcy = (int)Math.round((lensHeight/2) - (vy-lensy)*coef); , int i=c.getIndex(); coef = c.focal/(c.focal+c.altitude) * lensMag; pc[i].lcx = (int)Math.round((lensWidth/2) + (vx-lensx)*coef); pc[i].lcy = (int)Math.round((lensHeight/2) - (vy-lensy)*coef); 
0," doc = new Document(""def a(x):print 'foo'""); analyzer = new OccurrencesAnalyzer(); msgs = analyzeDoc(); printMessages(msgs, 1); assertEquals(""Unused parameter: x"", msgs[0].getMessage()); "," MyComponent a = new MyComponent(null, ""a""); JButton button = new JButton(""text""); a.add(button); namingStrategy.setTopLevelComponent(a); assertEquals(""text"", namingStrategy.getName(button)); "
1, return (pCustomContentProviderImplementation != null) ? pCustomContentProviderImplementation : (pCustomContentProviderImplementation = new CustomContentProviderImplementationElements()); , return (pCustomContentProviderImplementation != null) ? pCustomContentProviderImplementation : (pCustomContentProviderImplementation = new CustomContentProviderImplementationElements()); 
0," session.zadd(""foo"", 1d, ""a""); session.zadd(""foo"", 2d, ""b""); long rank = session.zrevrank(""foo"", ""a""); assertEquals(1, rank); rank = session.zrevrank(""foo"", ""b""); assertEquals(0, rank); "," PlatformUI.getPreferenceStore().addPropertyChangeListener(this); JFaceResources.getColorRegistry().addListener(this); setOwnerDrawEnabled(showColoredLabels()); super.initialize(viewer, column); "
1," Color c = null; if (item instanceof NodeItem) { c = model.getNodeColorProvider().removeTextColor((NodeItem) item); PrefuseLib.update(item, VisualItem.TEXTCOLOR, ColorLib.color(c)); "," Color XXXXX = null; if (item instanXXXXXeof NodeItem) { XXXXX = model.getNodeColorProvider().removeTextColor((NodeItem) item); PrefuseLib.update(item, VisualItem.TEXTCOLOR, ColorLib.XXXXXolor(XXXXX)); "
1, Set<ConstrainedMethod> methodsWithParameterConstraints = getMethodsWithParameterConstraints( constrainedMethods ); if ( methodsWithParameterConstraints.isEmpty() ) { return null; , Set<ConstrainedMethod> methodsWithParameterConstraints = getMethodsWithParameterConstraints( constrainedMethods ); if ( methodsWithParameterConstraints.isEmpty() ) { return null; 
0, if( !(desc instanceof OWLObjectComplementOf) ) return null; OWLClassExpression not = ((OWLObjectComplementOf) desc).getOperand(); if( not.isAnonymous() ) return null; return (OWLClass) not; ," List<String> callbackMethodsList = new ArrayList<String>(callbackMethods); callbackMethodsList.set(index, method); callbackMethods.clear(); callbackMethods.addAll(callbackMethodsList); "
0, NodeContainer nodeContainer = node.getNodeContainer(); return nodeContainer instanceof DynamicNode || (nodeContainer instanceof WorkflowProcess && ((WorkflowProcess) nodeContainer).isDynamic()); ," user.getCredentials().put(""name"", user.getName()); user.getCredentials().put(""password"", ""secret""); user.getCredentials().put(""certificate"", new byte[] { (byte) 0x55, (byte) 0xAA "
0," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," BufferedImage image; if (destCM == null) { ColorModel cm = src.getColorModel(); image = new BufferedImage(cm, src.getRaster().createCompatibleWritableRaster(), cm.isAlphaPremultiplied(), null); "
1," String key = createImageByIdKey(page, link, qualifier); String value = getProperty(key, false); if (value==null) { key = createImageKey(page, link, qualifier); value = getProperty(key, false); "," String XXXXX = createImageByIdKey(page, link, qualifier); String XXXXX = getProperty(XXXXX, false); if (XXXXX==null) { XXXXX = createImageKey(page, link, qualifier); XXXXX = getProperty(XXXXX, false); "
0, int hash = 7; hash = 17 * hash + (this.lowerCorner != null ? this.lowerCorner.hashCode() : 0); hash = 17 * hash + (this.upperCorner != null ? this.upperCorner.hashCode() : 0); return hash; ," FragmentTransaction ft = getSupportFragmentManager().beginTransaction(); Fragment prev = getSupportFragmentManager().findFragmentByTag( ""countdown""); if (prev != null) { ft.remove(prev); "
0," lblMinSlice = new Label( parent, SWT.NONE ); { lblMinSlice.setText( Messages.getString( ""PieBottomAreaComponent.Label.MinimumSlice"" ) ); lblMinSlice.setToolTipText( TOOLTIP_MINIMUM_SLICE ); ", TestSuite testSuite = new TestSuite(); testSuite.addTest(PageLayoutTests.suite()); testSuite.addTest(PageScopeTests.suite()); testSuite.addTest(UserGroupTests.suite()); return testSuite; 
0, switch (boardSize) { case 19: addHandicapStones(HANDI_PLACEMENTS_19[nb]); break; case 13: addHandicapStones(HANDI_PLACEMENTS_13[nb]); break; case 9: addHandicapStones(HANDI_PLACEMENTS_9[nb]); break; ," long[] oldKeys = keys; numEntries = 0; numSlotsUsed = 0; keys = new long[newHashSize]; Arrays.fill(keys, NULL); for (long key : oldKeys) { if (key != NULL && key != REMOVED) { add(key); "
0," TabBar bar = createTabBar(); bar.addTab(new Button(""Tab 0"")); assertFalse(bar.getTab(0).hasWordWrap()); try { bar.getTab(0).getWordWrap(); fail(""Expected UnsupportedOperationException""); ", form.setFont(JFaceResources.getDialogFont()); form.setImage(labelProvider.getImage(task)); form.setText(task.getTitle()); form.setSeparatorVisible(true); toolkit.decorateFormHeading(form); 
1," super(name, IAction.AS_PUSH_BUTTON); setImageDescriptor(PDebugImage.getDescriptor(PDebugImage.ICON_VAR_EDIT_NORMAL)); setToolTipText(name); setId(name); setEnabled(false); this.view = view; "," super(name, IAction.AS_PUSH_BUTTON); setImageDescriptor(PDebugImage.getDescriptor(PDebugImage.ICON_VAR_EDIT_NORMAL)); setToolTipText(name); setId(name); setEnabled(false); this.view = view; "
1," String m = FilterSetup.getFilterNameAbbrev(FILTER_NAME) + "" getFilter() ""; logger.debug(m + "">""); String filter = null; try { filter = new String(FILTER); filter = filter.replaceFirst(""\\{0"," String XXXXX = FilterSetup.getFilterNaXXXXXeAbbrev(FILTER_NAME) + "" getFilter() ""; logger.debug(XXXXX + "">""); String XXXXX = null; try { XXXXX = new String(FILTER); XXXXX = XXXXX.replaceFirst(""\\{0"
1," SolrInputDocument doc = new SolrInputDocument(); doc.addField(""PATH"", ""/""); doc.addField(""ID"", ""Root-Path""); doc.addField(""TX"", ""TX-1""); doc.addField(""DBID"", """" + dbid); return doc; "," SolrInputDocument XXXXX = new SolrInputDocument(); XXXXX.addField(""PATH"", ""/""); XXXXX.addField(""ID"", ""Root-Path""); XXXXX.addField(""TX"", ""TX-1""); XXXXX.addField(""DBID"", """" + dbid); return XXXXX; "
0, Iterator i = list.iterator(); while (i.hasNext()) { Iterator j =((Task)i.next()).getPredecessorList().iterator(); while (j.hasNext()) ((Dependency)j.next()).fireCreateEvent(this); ," assert offering.getUniqueName() != null : ""unique name shouldn't be null for the disk offering""; DiskOfferingVO vo = findByUniqueName(offering.getUniqueName()); if (vo != null) { return vo; "
1," int i, t; int nTop = 0; int nLocal = 0; int nStack = 0; int[] locals = f.inputLocals; int[] stacks = f.inputStack; for (i = 0; i < locals.length; ++i) { t = locals[i]; if (t == Frame.TOP) { ++nTop; "," int i, t; int XXXXX = 0; int XXXXX = 0; int XXXXX = 0; int[] locals = f.inputLocals; int[] stacks = f.inputStack; for (i = 0; i < locals.length; ++i) { t = locals[i]; if (t == Frame.TOP) { ++XXXXX; "
1, return bean.accept( new FutureSecurityBean.Visitor<FutureSecurityBean>() { @Override public FutureSecurityBean visitAgricultureFutureType(AgricultureFutureBean bean) { return bean; , return bean.accept( new FutureSecurityBean.Visitor<FutureSecurityBean>() { @Override public FutureSecurityBean visitAgricultureFutureType(AgricultureFutureBean bean) { return bean; 
1," selenium.click(""link=Delete Reservation""); selenium.waitForPageToLoad(""30000""); Assert.assertEquals( selenium.getText(""xpath=/html/body/div/ul/li""), ""Reservation is succesfully delete""); "," selenium.click(""link=Delete Reservation""); selenium.waitForPageToLoad(""30000""); Assert.assertEquals( selenium.getText(""xpath=/html/body/div/ul/li""), ""Reservation is succesfully delete""); "
1," RateMeasurement base = new BasicRateMeasurement(100, 100); RateMeasurement subj = new BasicRateMeasurement(50, 100); BasicRiskRatio or = new BasicRiskRatio(base, subj); assertTrue(or.isDefined()); "," RateMeasurement XXXXX = new BasicRateMeasurement(100, 100); RateMeasurement XXXXX = new BasicRateMeasurement(50, 100); BasicRiskRatio XXXXX = new BasicRiskRatio(XXXXX, XXXXX); assertTrue(XXXXX.isDefined()); "
0, Class currentClass = managedBeanInstance.getClass(); Boolean containsEeResource = classContainsEEResources.get(currentClass); if (containsEeResource != null && !containsEeResource) { return; ," final String message = ""any""; testExceptionalCase(new IllegalArgumentCase() { @Override public void exceptionalAction() throws Exception { label.checkHorizontalKey(key, message); "
0," Matcher matcher = DebugDatabase.REQ_PATTERN.matcher( text ); if ( matcher.find() ) { String stat = matcher.group( 1 ); if ( stat.equals( ""Muscle"" ) ) { return ""Mus: "" + matcher.group( 2 ); "," super(); setText(""Group by Rule Group""); setToolTipText(""Group by Rule Group""); setDescription(""Group by agenda-group, activation-group or ruleflow-group""); setChecked(groupByRulegroup); "
1," super(); this.addHeader(getTitle(), NewTheme.I().getIcon(""premium"", 32)); this.addDescriptionPlain(_JDT._.gui_settings_premium_description()); add(acm = new AccountManager(this)); "," super(); this.addHeader(getTitle(), NewTheme.I().getIcon(""premium"", 32)); this.addDescriptionPlain(_JDT._.gui_settings_premium_description()); add(acm = new AccountManager(this)); "
0, TestSuite testSuite = new TestSuite(); testSuite.addTestSuite(AddPageTest.class); testSuite.addTestSuite(AddPortletTest.class); testSuite.addTestSuite(DeletePageTest.class); return testSuite; ," final Graphics g = getGraphics(); g.setXORMode(Color.white); if (pixelBorderDrawn) { drawPixelBorder(g, currentLevelPixelX, currentLevelPixelY, this.currentLevel); pixelBorderDrawn = false; "
0," if(isSpecialInvoke(context,instr)) { INVOKESTATIC isi = (INVOKESTATIC) instr; String methodName = isi.getMethodName(context.getConstantPoolGen()); return JopInstr.getNative(methodName); ", this.parent = parent; this.game = game; if (parent == null) this.depth = 1; else this.depth = parent.getDepth() + 1; this.playerId = playerId; game.setCustomData(this); nodeCount++; 
0, boolean valid = true; if (type == IResource.FILE && linkTargetStore.fetchInfo().isDirectory()) { setErrorMessage(IDEWorkbenchMessages.WizardNewLinkPage_linkTargetNotFile); valid = false; , WebApplication ghostWebApp = null; OMElement webAppElm; try { InputStream xmlInputStream = new FileInputStream(ghostFile); webAppElm = new StAXOMBuilder(xmlInputStream).getDocumentElement(); 
1," barrier = new CountDownCommitBarrier(1); barrier.abort(); boolean result = barrier.tryAwaitOpenUninterruptibly(1, TimeUnit.DAYS); assertTrue(result); assertTrue(barrier.isAborted()); "," barrier = new CountDownCommitBarrier(1); barrier.abort(); boolean XXXXX = barrier.tryAwaitOpenUninterruptibly(1, TimeUnit.DAYS); assertTrue(XXXXX); assertTrue(barrier.isAborted()); "
1, String result = null; Statement st = null; ResultSet rs = null; try { st = con.createStatement(); rs = st.executeQuery(query); if (rs != null && rs.next()) result = rs.getString(1); , String XXXXX = null; Statement XXXXX = null; ResultSet XXXXX = null; try { XXXXX = con.createStatement(); XXXXX = XXXXX.executeQuery(query); if (XXXXX != null && XXXXX.next()) XXXXX = XXXXX.getString(1); 
0," assertNotNull(fudgeContext); assertNotNull(message); assertNotNull(connection); assertEquals(testMessage1, message.getMessage()); connection.getFudgeMessageSender().send(testMessage2); "," try { s.startHandshake(); PrintWriter out = new PrintWriter( new BufferedWriter( new OutputStreamWriter( s.getOutputStream()))); out.println(""GET http: out.println(); out.flush(); "
0, EntityCacheUtil.removeCache(MicroblogsEntryImpl.class.getName()); FinderCacheUtil.removeCache(FINDER_CLASS_NAME_ENTITY); FinderCacheUtil.removeCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION); , TestSuite testSuite = new TestSuite(); testSuite.addTest(Login52xTests.suite()); testSuite.addTest(WikiTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; 
0," super(""Ok""); KeyStroke accelerator = LilithKeyStrokes.getKeyStroke(LilithKeyStrokes.ENTER); putValue(Action.ACCELERATOR_KEY, accelerator); putValue(Action.MNEMONIC_KEY, KeyEvent.VK_O); ", if (source.getFigure() instanceof WrapLabel) return new TextCellEditorLocator((WrapLabel) source.getFigure()); else { return new LabelCellEditorLocator((Label) source.getFigure()); 
1," PollStatus status = (m_statusTable == null ? PollStatus.unknown() : m_statusTable.get(new PassiveStatusKey(nodeLabel, ipAddr, svcName))); return (status == null ? PollStatus.up() : status); "," PollStatus status = (m_statusTable == null ? PollStatus.unknown() : m_statusTable.get(new PassiveStatusKey(nodeLabel, ipAddr, svcName))); return (status == null ? PollStatus.up() : status); "
1," assertThat(ns1.equals(ns3), is(true)); assertThat(ns3.equals(ns1), is(true)); assertThat(ns2.equals(ns4), is(true)); assertThat(ns4.equals(ns2), is(true)); assertThat(ns5.equals(ns5), is(true)); "," assertThat(ns1.equals(ns3), is(true)); assertThat(ns3.equals(ns1), is(true)); assertThat(ns2.equals(ns4), is(true)); assertThat(ns4.equals(ns2), is(true)); assertThat(ns5.equals(ns5), is(true)); "
0," String oldColor = color; color = newColor; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_MASK_ELEMENT__COLOR, oldColor, color)); "," if (debug) { System.out.println(""dragNode = "" + dragNode.getText()); System.out.println(""aboveNode = "" + aboveNode.getText()); System.out.println(""belowNode = "" + belowNode.getText()); "
1," int result = 0; for (final BaseCachedColumn column : getColumns()) { if (column instanceof Indicator) { final Indicator ind = (Indicator) column; result = Math.max(ind.getBeginningIndex(), result); "," int XXXXX = 0; for (final BaseCachedColumn column : getColumns()) { if (column instanceof Indicator) { final Indicator XXXXX = (Indicator) column; XXXXX = Math.max(XXXXX.getBeginningIndex(), XXXXX); "
1," BlockingTaskOperationResponseHandler responseHandler = new BlockingTaskOperationResponseHandler(); taskService.exit(taskId, userId, responseHandler); try { responseHandler.waitTillDone(timeout); "," BlockingTaskOperationResponseHandler XXXXX = new BlockingTaskOperationResponseHandler(); taskService.exit(taskId, userId, XXXXX); try { XXXXX.waitTillDone(timeout); "
1, String message = null; int errorTab = 0; Component errorComponent = null; int port = -1; int implicitSSLPort = -1; try { port = tfPort.getValue(); implicitSSLPort = tfImplicitSSLPort.getValue(); , String XXXXX = null; int XXXXX = 0; Component XXXXX = null; int XXXXX = -1; int XXXXX = -1; try { XXXXX = tfPort.getValue(); XXXXX = tfImplicitSSLPort.getValue(); 
0, class MyRequestor implements IJavaElementRequestor { ArrayList element; public void acceptField(IField field) { if(element == null) element = new ArrayList(); element.add(field); ," if (object == null) return false; MetaClass mc = GroovySystem.getMetaClassRegistry().getMetaClass(object.getClass()); return mc.hasProperty(object, HIBERNATE_LAZY_INITIALIZER_PROP) != null; "
1," super.handleView(view); List<Address> members=view.getMembers(); for(Map<Owner,ClientLock> map: client_locks.values()) { for(ClientLock lock: map.values()) ((PeerLock)lock).retainAll(members); "," super.handleView(view); List<Address> members=view.getMembers(); for(Map<Owner,ClientLock> map: client_locks.values()) { for(ClientLock lock: map.values()) ((PeerLock)lock).retainAll(members); "
1," initiateWebApplication(Resource.class); assertEquals(""putMe"", resource(""/?a=a&b=b"").put(String.class, ""putMe"")); assertEquals(""postMe"", resource(""/?a=a&b=b"").post(String.class, ""postMe"")); "," initiateWebApplication(Resource.class); assertEquals(""putMe"", resource(""/?a=a&b=b"").put(String.class, ""putMe"")); assertEquals(""postMe"", resource(""/?a=a&b=b"").post(String.class, ""postMe"")); "
1," String res = super.toString(); res = getClass().getName() + ""{ name: "" + getName() + "", title: "" + getTitle() + "", comment: "" + getComment() + "", description: "" + getDescription() + "", "" + res + """," String XXXXX = super.toString(); XXXXX = getClass().getName() + ""{ name: "" + getName() + "", title: "" + getTitle() + "", comment: "" + getComment() + "", description: "" + getDescription() + "", "" + XXXXX + """
0," if (currentTableComponent != null) { if (show) { if (getComponentIndex(currentTableComponent) == -1) { addComponent(currentTableComponent); setExpandRatio(currentTableComponent, 1.0F); "," System.out.println(""Current State: ""+((Participant)user).getCurrentState()); this.userRosterStateMachine.changeStateAndRaiseEvents((Participant)user, UserRosterStateMachine.STATE_IN_CONFERENCE); "
1," this.base.compareAgainstBaseState(base, new NodeStateDiff() { @Override public void propertyAdded(PropertyState after) { if (!props.containsKey(after.getName())) { diff.propertyAdded(after); "," this.base.compareAgainstBaseState(base, new NodeStateDiff() { @Override public void propertyAdded(PropertyState after) { if (!props.containsKey(after.getName())) { diff.propertyAdded(after); "
0," sut.setReturnValueAsString(true); context.checking(new Expectations() { { allowing(actionContext).getParams(); will(returnValue(""aaa"")); allowing(mapper).fetchId(""aaa""); will(returnValue(5L)); ", Node parent = root; if (color instanceof DerivedColor) { String parentUin = ((DerivedColor)color).getUiDefaultParentName(); Node p = nodes.get(parentUin); if (p != null) { parent = p; 
1," WizardPage page = createPage(0); page.setTitle(""Eclipse 3.x ViewPart plugin""); page.setDescription(""Template to create an Eclipse 3.x ViewPart plugin""); wizard.addPage(page); markPagesAdded(); "," WizardPage XXXXX = createPage(0); XXXXX.setTitle(""Eclipse 3.x ViewPart plugin""); XXXXX.setDescription(""Template to create an Eclipse 3.x ViewPart plugin""); wizard.addPage(XXXXX); markPagesAdded(); "
0, Iterator<EORelationship> i = getEOEntity().getRelationships().iterator(); while (i.hasNext()) { EORelationship rel = i.next(); if (rel.getSourceAttributes().contains(att)) { return true; ," myFiles = new HashMap<OrderRootType, VirtualFile[]>(); for(OrderRootType rootType: myRoots.keySet()) { CompositeProjectRoot root = myRoots.get(rootType); if (myNoCopyJars){ setNoCopyJars(root); "
1," long[] a = this.a; int capacity = a.length; int n = this.n; int nNew = n + c; if (nNew > capacity) { long[] aNew = newArray(capacity, nNew); System.arraycopy(a, 0, aNew, c, n); this.a = aNew; "," long[] a = this.a; int capacity = a.length; int n = this.n; int nNew = n + c; if (nNew > capacity) { long[] aNew = newArray(capacity, nNew); System.arraycopy(a, 0, aNew, c, n); this.a = aNew; "
1," final String value = ""Hello""; new EasyMockTemplate(driver()) { @Override protected void expectations() { driver().enterValueInCell(target(), cell, value); expectLastCall().once(); "," final String XXXXX = ""Hello""; new EasyMockTemplate(driver()) { @Override protected void expectations() { driver().enterValueInCell(target(), cell, XXXXX); expectLastCall().once(); "
1," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," EditorCell XXXXX = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, XXXXX, editorContext); return XXXXX; "
1, int prime = 97; int startInclusiveHash = startInclusive ? prime : 0; int endInclusiveHash = endInclusive ? prime : 0; int i = 0; if (start != null) { i = start.hashCode() + startInclusiveHash; , XXXXXnt XXXXX = 97; XXXXXnt XXXXX = startInclusXXXXXve ? XXXXX : 0; XXXXXnt XXXXX = endInclusXXXXXve ? XXXXX : 0; XXXXXnt XXXXX = 0; XXXXXf (start != null) { XXXXX = start.hashCode() + XXXXX; 
1," try { String path = USER_URL_PREFIX + ""isReadOnly""; Element element = ClearspaceManager.getInstance().executeRequest(GET, path); readOnly = Boolean.valueOf(WSUtils.getReturn(element)); "," try { String XXXXX = USER_URL_PREFIX + ""isReadOnly""; Element XXXXX = ClearspaceManager.getInstance().executeRequest(GET, XXXXX); readOnly = Boolean.valueOf(WSUtils.getReturn(XXXXX)); "
0," for (final Pair<Factor, double[]> init : initializations) { System.arraycopy(init.getSecond(), 0, init.getFirst().getValues(), 0, init.getSecond().length); init.getFirst().resetSelections(); "," Security security = _objectIdCache.get(uniqueId.getObjectId()); if (security == null) { security = _underlying.getSecurity(uniqueId); _objectIdCache.putIfAbsent(uniqueId.getObjectId(), security); "
0," if(color == null) throw new IllegalArgumentException(""Cannot be null""); this.fillColour = color; if(logger.isDebugEnabled()){ logger.debug(""setFillColor: color="" + this.fillColour); "," if(!open) return false; Application.debug(deviceHandle.toString(),1); int result = NativeBridge.SensDev_isAttached(deviceHandle); Application.debug(""result=""+result,1); return result == 1; "
0," int value = SystemProperties.getInt(""debug.sqlite.wal.autocheckpoint"", Resources.getSystem().getInteger( com.android.internal.R.integer.db_wal_autocheckpoint)); return Math.max(1, value); ", native_reset(mNativePaint); setFlags(DEFAULT_PAINT_FLAGS); mHasCompatScaling = false; mCompatScaling = mInvCompatScaling = 1; mBidiFlags = BIDI_DEFAULT_LTR; setTextLocale(Locale.getDefault()); 
1, LinkedList<Object> queue = new LinkedList<Object>(values); while (!queue.isEmpty()) { Object dependency = queue.removeFirst(); if (dependency instanceof Buildable) { context.add(dependency); , LinkedList<Object> queue = new LinkedList<Object>(values); while (!queue.isEmpty()) { Object XXXXX = queue.removeFirst(); if (XXXXX instanceof Buildable) { context.add(XXXXX); 
1, super(ASSERTION_TYPES); this.getOutInterceptors().add(new UsernameTokenInterceptor()); this.getInInterceptors().add(inInterceptor == null ? new UsernameTokenInterceptor() : inInterceptor); , super(ASSERTION_TYPES); this.getOutInterceptors().add(new UsernameTokenInterceptor()); this.getInInterceptors().add(inInterceptor == null ? new UsernameTokenInterceptor() : inInterceptor); 
1, this.allMothers = allMothers; this.eligibleCouples = eligibleCouples; this.ancSchedulesService = ancSchedulesService; this.actionService = actionService; this.reportingService = reportingService; , this.allMothers = allMothers; this.eligibleCouples = eligibleCouples; this.ancSchedulesService = ancSchedulesService; this.actionService = actionService; this.reportingService = reportingService; 
0," T item = list.get(position); View view = getResourceLoader().inflateView(context, resource, parent); if (convertView == null) { view = getResourceLoader().inflateView(context,resource, parent); "," String label = ((ReferenceProperty)object).getName(); return label == null || label.length() == 0 ? getString(""_UI_ReferenceProperty_type"") : getString(""_UI_ReferenceProperty_type"") + "" "" + label; "
1, StatisticsController controller = Lookup.getDefault().lookup(StatisticsController.class); final StatisticsUI[] uis = getUI(statistics); for (StatisticsUI s : uis) { s.setup(statistics); , StatisticsController controller = Lookup.getDefault().lookup(StatisticsController.class); final StatisticsUI[] uis = getUI(statistics); for (StatisticsUI s : uis) { s.setup(statistics); 
1," Object o = new Object(); NotificationBatch sut = new NotificationBatch(); sut.setProperty(KEY, o); Property<Object> result = sut.getProperties().get(KEY); assertEquals(o, result.getValue()); "," Object XXXXX = new Object(); NXXXXXtificatiXXXXXnBatch XXXXX = new NXXXXXtificatiXXXXXnBatch(); XXXXX.setPrXXXXXperty(KEY, XXXXX); PrXXXXXperty<Object> result = XXXXX.getPrXXXXXperties().get(KEY); assertEquals(XXXXX, result.getValue()); "
0," String encoding = format.getCharSetEncoding(); String contentType = format.getContentType(); if (log.isDebugEnabled()) { log.debug(""contentType from the OMOutputFormat ="" + contentType); "," InternetDomainName domain = InternetDomainName.from(""foo.com""); assertEquals(""www.foo.com"", domain.child(""www"").name()); try { domain.child(""www.""); fail(""www..google.com should have been invalid""); "
1," InputMap inputMap = new InputMap(); for (Object obj : actionMap.keys()) { KeyStroke key = (KeyStroke) actionMap.get(obj).getValue(Action.ACCELERATOR_KEY); if (key != null) { inputMap.put(key, obj); "," InputMap XXXXX = new InputMap(); for (Object obj : actionMap.XXXXXs()) { KeyStroke XXXXX = (KeyStroke) actionMap.get(obj).getValue(Action.ACCELERATOR_KEY); if (XXXXX != null) { XXXXX.put(XXXXX, obj); "
1," PermissionAttachment attachment = attachments.get(player.getName()); if (attachment == null) { attachment = player.addAttachment(this); attachments.put(player.getName(), attachment); "," PermissionAttachment XXXXX = XXXXXs.get(player.getName()); if (XXXXX == null) { XXXXX = player.addAttachment(this); XXXXXs.put(player.getName(), XXXXX); "
1, FieldDeclaration x1 = this.ast.newFieldDeclaration(this.W1); x1.setJavadoc(this.JD1); if (this.ast.apiLevel() >= JLS3_INTERNAL) { x1.modifiers().add(this.MOD1); x1.modifiers().add(this.MOD2); , FieldDeclaration XXXXX = this.ast.newFieldDeclaration(this.W1); XXXXX.setJavadoc(this.JD1); if (this.ast.apiLevel() >= JLS3_INTERNAL) { XXXXX.modifiers().add(this.MOD1); XXXXX.modifiers().add(this.MOD2); 
1, JViewport viewport = (JViewport) e.getSource(); JScrollPane scrollPane = (JScrollPane)viewport.getParent(); scrollPane.getVerticalScrollBar().setValue(viewport.getViewPosition().y); , JViewport XXXXX = (JViewport) e.getSource(); JScrollPane XXXXX = (JScrollPane)XXXXX.getParent(); XXXXX.getVerticalScrollBar().setValue(XXXXX.getViewPosition().y); 
0," super(myoligo.getName(), myvolume, author, SampleType.OLIGO_SAMPLE); _oliDatum = (OligoSampleDatum) _samDatum; System.out.println(myoligo.getUUID()); _oliDatum._oligoUUID = myoligo.getUUID(); "," Assert.assertEquals( new Float( FloatClassFieldExtractorTest.VALUE ), this.reader.getValue( null, this.bean ) ); Assert.assertTrue( this.reader.getValue( null, this.bean ) instanceof Float ); "
0," TsapiTrace.traceEntry(""getCallCapabilities[]"", this); CallCapabilities caps = this.tsProvider.getTsapiCallCapabilities(); TsapiTrace.traceExit(""getCallCapabilities[]"", this); return caps; "," if (getHandle().netServerHandler == null) return; getHandle().netServerHandler.sendPacket(new Packet54PlayNoteBlock(loc.getBlockX(), loc.getBlockY(), loc.getBlockZ(), instrument, note)); "
0," Assure.notNull(""eclipseProject"", eclipseProject); this._eclipseProject = eclipseProject; this._issues = new LinkedList<Issue>(); this._projectName = this._eclipseProject.getSpecifiedName(); ", XWikiComponentContext xcmp = new XWikiComponentContext(); xcmp.initializeComponentContext(); EmbeddableComponentManager ecm = xcmp.getComponentManager(); cleaner = new DefaultXOOHTMLCleaner(ecm); 
0," OptionSet options = parser.parse( ""-f"" ); assertOptionDetected(options, ""f""); assertEquals( emptyList(), options.valuesOf( ""f"" ) ); assertEquals( emptyList(), options.nonOptionArguments() ); ", textEditor.setEditable(flag); if(flag) { getTextPane().requestFocusInWindow(); SwingUtilities.invokeLater(new Runnable() { public void run() { getTextPane().getCaret().setVisible(true); 
0," if (file != null) { IWorkbenchPage p = VelocityPlugin.getActiveWorkbenchWindow().getActivePage(); if (p != null) { IEditorPart editorPart = null; try { editorPart = IDE.openEditor(p, file, true); "," NameDefinitionsCommand command = new NameDefinitionsCommand(this, name); command.runSync(); if (command.getResult().isOK() && command.isFound()) { return command.getFirstLocation(); "
0, if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; ArtistPk artistPk = (ArtistPk) o; return id.equals(artistPk.id) && name.equals(artistPk.name); ," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (any: ""); result.append(any); result.append(')'); return result.toString(); "
0," SharedPreferences preferences = mContext.getSharedPreferences(PREFERENCES_BACKUP, Activity.MODE_PRIVATE); return preferences.getInt(PREFERENCES_BACKUP_FREQUENCY, DEFAULT_BACKUP_FREQUENCY); "," if(bucketType != BucketType.IDENTITY) { throw new IllegalArgumentException(""You can only use "" + EnumToOrdinalBucketer.class.getSimpleName() + "" with the default identity bucketer""); "
1, if (multipleSampleForReferencesTable.getSelection() instanceof IStructuredSelection) { removeMultipleSampleForReferencesTable((IStructuredSelection) multipleSampleForReferencesTable.getSelection()); , if (multipleSampleForReferencesTable.getSelection() instanceof IStructuredSelection) { removeMultipleSampleForReferencesTable((IStructuredSelection) multipleSampleForReferencesTable.getSelection()); 
0," BlockAccess file = new BlockAccessMem(indexName, blockSize) ; BlockMgr blockMgr = new BlockMgrFileAccess(file, blockSize) ; blockMgr = new BlockMgrFreeChain(blockMgr) ; return track(blockMgr) ; "," if ( closure == null ) return func.tojstring(); String s = closure.p.source.tojstring(); int line = currentline(); return (s.startsWith(""@"")||s.startsWith(""="")? s.substring(1): s) + "":"" + line; "
0, InitialContext ic = null; try { String serviceJndi = properties.getProperty(NEWSADMIN_JNDINAME); ic = new InitialContext(properties); return (NewsCaseFacade) ic.lookup(serviceJndi); , int index = this.list.indexOf(geographicMapCellPosition); if (index != -1) { Boolean value = (Boolean) this.visitedList.get(index); if (value == BooleanFactory.getInstance().TRUE) { return true; 
1," ArrayDeque q = populatedDeque(SIZE); q.clear(); assertTrue(q.isEmpty()); assertEquals(0, q.size()); q.add(new Integer(1)); assertFalse(q.isEmpty()); q.clear(); assertTrue(q.isEmpty()); "," ArrayDeque q = populatedDeque(SIZE); q.clear(); assertTrue(q.isEmpty()); assertEquals(0, q.size()); q.add(new Integer(1)); assertFalse(q.isEmpty()); q.clear(); assertTrue(q.isEmpty()); "
0, HttpServletRequest request = null; if (FacesContext.getCurrentInstance() != null) { request = (HttpServletRequest) FacesContext.getCurrentInstance().getExternalContext().getRequest(); ," this.currentMacro = new MMacro(string(node.getName())); if (!this.ir.getDestinationPackage().equals("""")) { this.currentMacro.newPackageDeclaration(this.ir .getDestinationPackage()); "
0," mojo.setOutputDirectory(new File(getBasedir(), DEFAULT_WRITE_DIRECTORY)); mojo.setPackageScan(""project-test:br.com.ctbc.model;project-test:br.com.ctbc.api""); mojo.setBasedir(OUTPUT_DIRECTORY); "," String label = ((org.obeonetwork.dsl.cinematic.Package)object).getName(); return label == null || label.length() == 0 ? getString(""_UI_Package_type"") : getString(""_UI_Package_type"") + "" "" + label; "
1," String name = atts.getValue(""name"" ); String type = atts.getValue(""type"" ); String groupid = atts.getValue(""groupID""); current_group = getNewGroup(type,name); current_group.setPDBCode(groupid); "," String XXXXX = atts.getValue(""XXXXX"" ); String XXXXX = atts.getValue(""XXXXX"" ); String XXXXX = atts.getValue(""groupID""); current_group = getNewGroup(XXXXX,XXXXX); current_group.setPDBCode(XXXXX); "
1, this.removeAllCommands(); Command[] commandArray = getCustomCommands(); int size = commandArray.length; for (int index = 0; index < size; index++) { this.addCommand(commandArray[index]); , this.removeAllCommands(); Command[] commandArray = getCustomCommands(); int XXXXX = commandArray.length; for (int XXXXX = 0; XXXXX < XXXXX; XXXXX++) { this.addCommand(commandArray[XXXXX]); 
0, super.setForeground(fg); isForegroundSet = true; if (links != null) { for (int i = 0; i < links.size(); i++) { Hyperlink label = (Hyperlink) links.get(i); label.setForeground(fg); , boolean returnValue; returnValue = false; if (saveTime.containsKey(fullPageName)) { long lastSaveTime = saveTime.get(fullPageName); if (lastSaveTime > thisEditTime) { returnValue = true; 
0," if (object instanceof ColumnTracker) { ColumnTracker other = (ColumnTracker) object; return new EqualsBuilder().append(alias, other.alias).append( attribute, other.attribute).isEquals(); "," HelpFormatter myhelp = new HelpFormatter(); myhelp.printHelp(""MetatadataImport\n"", options); System.out.println(""\nmetadataimport: MetadataImport -f filename""); System.exit(exitCode); "
0, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(CategoriesTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; ," super.storeFields(); IPath dir = Activator.getDefault().getStateLocation(); getModel().getProperties().setProperty( ""index"", dir.append( getModel().getId() + "".obr"" ).toOSString() ); "
1," long timeLeft = currentPeriodStart+scanPeriod - System.currentTimeMillis(); long bw = Math.max(bytesLeft*1000/timeLeft, MIN_SCAN_RATE); throttler.setBandwidth(Math.min(bw, MAX_SCAN_RATE)); "," long XXXXX = currentPeriodStart+scanPeriod - System.currentTimeMillis(); long XXXXX = Math.max(bytesLeft*1000/XXXXX, MIN_SCAN_RATE); throttler.setBandwidth(Math.min(XXXXX, MAX_SCAN_RATE)); "
1, token_source = tm; token = new Token(); jj_ntk = -1; jj_gen = 0; for (int i = 0; i < 41; i++) jj_la1[i] = -1; for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls(); , token_source = tm; token = new Token(); jj_ntk = -1; jj_gen = 0; for (XXXXXnt XXXXX = 0; XXXXX < 41; XXXXX++) jj_la1[XXXXX] = -1; for (XXXXXnt XXXXX = 0; XXXXX < jj_2_rtns.length; XXXXX++) jj_2_rtns[XXXXX] = new JJCalls(); 
0, if (button.getId() == this.getBackButton().getId()) { this.index--; button.setActive(this.index > 0); this.getNextButton().setActive(this.index < this.pages); this.updateContents(); ," target = new CookieSetting( cookie.getVersion(), cookie.getName(), cookie.getValue(), cookie.getPath(), cookie.getDomain(), null, cookie.getExpiry(), cookie.getSecure(), false ); "
1," if (e.getKeyCode() == KeyEvent.VK_SPACE && viewMenuButton.getModel().isRollover()) { viewMenuButton.setSelected(true); viewTypePopupMenu.show(viewMenuButton, 0, viewMenuButton.getHeight()); "," if (e.getKeyCode() == KeyEvent.VK_SPACE && viewMenuButton.getModel().isRollover()) { viewMenuButton.setSelected(true); viewTypePopupMenu.show(viewMenuButton, 0, viewMenuButton.getHeight()); "
0, if( response.getContent().length() == 0 ) { ProtocolMessageWriter protocolWriter = ContextProvider.getProtocolWriter(); try { response.getWriter().write( protocolWriter.createMessage() ); , JSplitPane spane = getDeviceSplitPane(); Component newComp = comp; Component currComp = spane.getRightComponent(); newComp.setSize(currComp.getSize()); spane.setRightComponent(newComp); 
1," final String name = super.getPresentableName(); return name + (!StringUtil.isEmpty(getRepoAuthor()) ? ""/"" + getRepoAuthor() : """") + (!StringUtil.isEmpty(getRepoName()) ? ""/"" + getRepoName() : """"); "," final String name = super.getPresentableName(); return name + (!StringUtil.isEmpty(getRepoAuthor()) ? ""/"" + getRepoAuthor() : """") + (!StringUtil.isEmpty(getRepoName()) ? ""/"" + getRepoName() : """"); "
1, Type type = model.getType(); if (type == Type.ClusteredBar || type == Type.Bar) { categoryLabel.setLabel(I18N.CONSTANTS.horizontalAxis()); seriesLabel.setLabel(I18N.CONSTANTS.bars()); , Type XXXXX = model.getType(); if (XXXXX == Type.ClusteredBar || XXXXX == Type.Bar) { categoryLabel.setLabel(I18N.CONSTANTS.horizontalAxis()); seriesLabel.setLabel(I18N.CONSTANTS.bars()); 
1," TreeMap<Long, Integer> inverseDepths = new TreeMap<Long, Integer>(); int graphDepth = depths.size() - 1; for (Long key : depths.keySet()) { inverseDepths.put(key, graphDepth - depths.get(key)); "," TreeMap<Long, Integer> inverseDepths = new TreeMap<Long, Integer>(); int XXXXX = depths.size() - 1; for (Long key : depths.keySet()) { inverseDepths.put(key, XXXXX - depths.get(key)); "
1, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(ShoppingTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , TestSuite XXXXX = new TestSuite(); XXXXX.addTest(LoginTests.suite()); XXXXX.addTest(ShoppingTests.suite()); XXXXX.addTestSuite(StopSeleniumTest.class); return XXXXX; 
1, ConfigWebImpl config=(ConfigWebImpl) pc.getConfig(); config.clearFunctionCache(); PagePoolClear.clear(config.getServerFunctionMapping()); PagePoolClear.clear(config.getFunctionMapping()); , ConfigWebImpl config=(ConfigWebImpl) pc.getConfig(); config.clearFunctionCache(); PagePoolClear.clear(config.getServerFunctionMapping()); PagePoolClear.clear(config.getFunctionMapping()); 
1, final PacketBuilder builder = new PacketBuilder(); builder.writeAsShort(ServerPacketOpcode.SHOW_STATUS_INFO.getValue()); builder.writeAsByte(7); builder.writeInt(itemid); return builder.getPacket(); , final PacketBuilder XXXXX = new PacketBuilder(); XXXXX.writeAsShort(ServerPacketOpcode.SHOW_STATUS_INFO.getValue()); XXXXX.writeAsByte(7); XXXXX.writeInt(itemid); return XXXXX.getPacket(); 
0, if ((allmakefiles == null) || (allmakefiles.size() == 0) || (allopts == null) || (allopts.size() == 0)) { for (int i = 0; i < checks.length; i++) { checks[i].unitCheck.setEnabled(false); , final long now = System.currentTimeMillis(); for(final Downtime d : this){ switch(d.getPeriod()){ case ONCE: if(now > d.getStartTimestamp() + d.getDurationSeconds()){ this.remove(d); 
1, final DataAcquisitionService acquisitionService = getDataAcquisitionService(); final Device device = getDevice(); if ( ( device == null ) || ( acquisitionService == null ) ) { return false; , final DataAcquisitionService XXXXX = getDataAcquisitionService(); final Device XXXXX = getDevice(); if ( ( XXXXX == null ) || ( XXXXX == null ) ) { return false; 
0," super.utilityProblem(problemSeverity, problemMessage, processingContext, startOffset, endOffset); tee.utilityProblem(problemSeverity, problemMessage, processingContext, startOffset, endOffset); ", TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(PollsTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; 
0," ContentValues initialValues = new ContentValues(); initialValues.put(KEY_TITLE, title); initialValues.put(KEY_BODY, body); return mDb.insert(DATABASE_TABLE, null, initialValues); ", PreviewController controller = Lookup.getDefault().lookup(PreviewController.class); GraphSheet graphSheet = controller.getGraphSheet(); Graph graph = graphSheet.getGraph(); try { exportData(graph); 
0," DataPointArrayToBeUsedForWholeParameter.log= """"; JUnitCore.runClasses(DataPointArrayToBeUsedForWholeParameter.class); assertThat(DataPointArrayToBeUsedForWholeParameter.log, is(""A"")); "," StringBuffer result = new StringBuffer(512); boolean isFolder = false; if (!isMultiOperation()) { try { isFolder = getCms().readResource(getParamResource(), CmsResourceFilter.ALL).isFolder(); "
1," final DependencyGraph graph = new DependencyGraph(""one end""); graph.addDependencyNode(createDependencyNode(null, null)); graph.addDependencyNode(createDependencyNode(null, end)); return graph; "," final DependencyGraph XXXXX = new DependencyGraph(""one end""); XXXXX.addDependencyNode(createDependencyNode(null, null)); XXXXX.addDependencyNode(createDependencyNode(null, end)); return XXXXX; "
0," super.paint(g); for (int s = 0; s < this.scale; s++) { if (s < score) { if (this.imageIconStarOn != null) imageIconStarOn.paintIcon(c, g, x + s*this.imageIconStarOn.getIconWidth(), y); "," cbLvl = npc.getLevel(); name = npc.getName(); this.parent = parent; id = npc.getId(); try { monster = Monsters.valueOf(name.replaceAll("" "", ""_"").replaceAll(""[-']"", """").toUpperCase()); "
1," if (exception instanceof NoSuchEntityException) { AppGinjector.get .instance() .getNotifier() .displayMessage( Message.createErrorMessage(""Your profile could not be found. Please try again."")); "," if (exception instanceof NoSuchEntityException) { AppGinjector.get .instance() .getNotifier() .displayMessage( Message.createErrorMessage(""Your profile could not be found. Please try again."")); "
0," final String type = LoadClassReference.getClassReference(reference.getType(), context, true); if (statement != null) { return (isFinal ? ""final "" : """") + type + "" "" + super.generate(context); ", Resource subject = model.getResource(J2JHelper.getId(javaObject).toString()); if (J2JHelper.hasDataType(javaObject) && isTypedResource(subject)) { javaObject = createJavaObjectFromDataType(subject); 
1," if (mapModeIsotropic && (windowSize != null && viewportSize != null)) { viewportSize.setSize( viewportSize.getWidth(), viewportSize.getWidth() * (windowSize.getHeight() / windowSize.getWidth()) ); "," if (mapModeIsotropic && (windowSize != null && viewportSize != null)) { viewportSize.setSize( viewportSize.getWidth(), viewportSize.getWidth() * (windowSize.getHeight() / windowSize.getWidth()) ); "
0, GL gl = g.gl; VertexBuf.VertexArray vbuf = null; for(int i = 0; i < vert.bufs.length; i++) { if(vert.bufs[i] instanceof VertexBuf.VertexArray) vbuf = (VertexBuf.VertexArray)vert.bufs[i]; ," logger.warn(""Please use setmaxConnectionAgeInSecondsInSeconds in place of setMaxConnectionAge. This method has been deprecated.""); this.maxConnectionAgeInSeconds = maxConnectionAgeInSeconds; "
1," return ""TilesetInfo [format="" + format + "", imgInfo="" + imgInfo + "", tileHeight="" + tileHeight + "", tileWidth="" + tileWidth + "", tilesTotal="" + tilesTotal + "", zoomlevels="" + zoomlevels + ""]""; "," return ""TilesetInfo [format="" + format + "", imgInfo="" + imgInfo + "", tileHeight="" + tileHeight + "", tileWidth="" + tileWidth + "", tilesTotal="" + tilesTotal + "", zoomlevels="" + zoomlevels + ""]""; "
0," int offset; long base; DynamicIdTrackerSegment segment; offset = calculateOffset(id); base = id - offset; segment = getSegment(base, false); if (segment != null) { return segment.get(offset); ", boolean result = _consoleProxyService.destroyConsoleProxy(this); if (result) { SuccessResponse response = new SuccessResponse(getCommandName()); this.setResponseObject(response); 
1," for (String sysPropName : Arrays.asList( ""file.encoding"", ""user.timezone"")) { if (emptyToNull(System.getProperty(sysPropName)) != null) { appendOpt(sysPropName, System.getProperty(sysPropName)); "," for (String sysPropName : Arrays.asList( ""file.encoding"", ""user.timezone"")) { if (emptyToNull(System.getProperty(sysPropName)) != null) { appendOpt(sysPropName, System.getProperty(sysPropName)); "
0," ZkController zkController = uhandler.core.getCoreDescriptor().getCoreContainer().getZkController(); String myURL = """"; if (zkController != null) { myURL = zkController.getBaseUrl(); ", if (editorValueGem != null && editorValueGemListener != null) { editorValueGem.removeValueChangeListener(editorValueGemListener); editorValueGem = null; editorValueGemListener = null; 
0, for (PackageCoverage i : packageCoverages) { final String prefix = i.getName() + '.'; if (name.startsWith(prefix)) { ClassCoverage j = i.findClassCoverage(name); if (j != null) return j; ," try { IntegerAttributeDefinition numProcsAttrDef = getJobNumProcsAttrDef(); configuration.setAttribute(SLURMLaunchConfiguration.ATTR_NUMPROCS, numProcsAttrDef.create().getValue()); "
1, boolean valid = true; boolean finishable = true; if(joinGuiModel.isDoOlap()) { valid &= this.factTables.getSelectedIndex() > 0; finishable &= this.factTables.getSelectedIndex() > 0; , boolean XXXXX = true; boolean XXXXX = true; if(joinGuiModel.isDoOlap()) { XXXXX &= this.factTables.getSelectedIndex() > 0; XXXXX &= this.factTables.getSelectedIndex() > 0; 
1," try { InputStream dIn = getInDataStream(); if (dIn != null) { OutputStream dOut = fsh.putFile(arg); if (dOut == null) { out.println(""500 Can't create file "" + arg); dIn.close(); return; "," try { InputStream XXXXX = getInDataStream(); if (XXXXX != null) { OutputStream XXXXX = fsh.putFile(arg); if (XXXXX == null) { out.println(""500 Can't create file "" + arg); XXXXX.close(); return; "
0," switch (dataFormat.getTypeFor(mediaType)) { case XML: return new XMLSink(stream); case TEXT: return new TextualSink(stream); default: throw new IllegalStateException(""Unsupported data format!""); "," for (int i = 0, max = cs.length(); i < max; i++) { final char c = cs.charAt(i); typedAction.actionPerformed(myFixture.getEditor(), c, ((EditorEx)myFixture.getEditor()).getDataContext()); "
0," String userId = generateDomainUserID(domain); this.namespaceManager.changeToGlobalNamespace(); if (this.userManager.existsUser(userId)) { this.userManager.updateUser(userId, name, null, name); ", switch (featureID) { case RealPackage.SELECTION_RELATION__IDENTIFIER: setIdentifier(IDENTIFIER_EDEFAULT); return; case RealPackage.SELECTION_RELATION__ARGUMENTS: getArguments().clear(); return; 
1, this.artist = artist; this.track = track; this.album = album; this.length = length; this.tracknumber = tracknumber; this.source = source; this.rating = rating; this.startTime = startTime; , this.artist = artist; this.track = track; this.album = album; this.length = length; this.tracknumber = tracknumber; this.source = source; this.rating = rating; this.startTime = startTime; 
1, switch (featureID) { case Wcs10Package.VALUE_ENUM_TYPE__SEMANTIC: setSemantic(SEMANTIC_EDEFAULT); return; case Wcs10Package.VALUE_ENUM_TYPE__TYPE: setType(TYPE_EDEFAULT); return; , switch (featureID) { case Wcs10Package.VALUE_ENUM_TYPE__SEMANTIC: setSemantic(SEMANTIC_EDEFAULT); return; case Wcs10Package.VALUE_ENUM_TYPE__TYPE: setType(TYPE_EDEFAULT); return; 
0, Tuples.asModifiable( joinedTuple ); joinedTuple.clear(); for( Collection collection : collections ) joinedTuple.addAll( collection.isEmpty() ? emptyTuple : keysTuple ); return joinedTuple; ," JRBeanCollectionDataSource ds = new JRBeanCollectionDataSource(cargasTurnos); return printGenerico(ds, ""ResumenTurnosEmbarque"", ""ResumenTurnosEmbarque_""+ resumenCarga.getEmbarqueCodigo()); "
0, if (getGame().hasExpansion(Expansion.CATHARS)) { int points = 0; for(CityScoreContext ctx : adjoiningCompletedCities.values()) { points += 4; if (ctx.isBesieged()) { points += 4; ," if (discrim.getValue() != null) return discrim.getValue(); if (StringUtils.isEmpty(_value)) { return discrim.getMappingRepository().getMappingDefaults(). getDiscriminatorValue(discrim, adapt); "
1, int unread1 = ((DecoratedCompiledMessageStatistics) item).getUnreadForumsAmt(); int unread2 = ((DecoratedCompiledMessageStatistics) anotherItem).getUnreadForumsAmt(); return unread2 - unread1; , int XXXXX = ((DecoratedCompiledMessageStatistics) item).getUnreadForumsAmt(); int XXXXX = ((DecoratedCompiledMessageStatistics) anotherItem).getUnreadForumsAmt(); return XXXXX - XXXXX; 
1, DefaultMutableTreeNode node = (DefaultMutableTreeNode)value; DBTreeNode nodeObject = (DBTreeNode)(node.getUserObject()); if (nodeObject.getType() == Type.KEY) return true; return false; , DefaultMutableTreeNode XXXXX = (DefaultMutableTreeNode)value; DBTreeNode XXXXXObject = (DBTreeNode)(XXXXX.getUserObject()); if (XXXXXObject.getType() == Type.KEY) return true; return false; 
1, return alignmentIndex >= 1 && alignmentIndex <= length && isGap(alignmentIndex) ? getCompoundSet().getCompoundForString(gap) : original.getCompoundAt(getSequenceIndexAt(alignmentIndex)); , return alignmentIndex >= 1 && alignmentIndex <= length && isGap(alignmentIndex) ? getCompoundSet().getCompoundForString(gap) : original.getCompoundAt(getSequenceIndexAt(alignmentIndex)); 
1, IExpression[] watchs = DebugPlugin.getDefault().getExpressionManager().getExpressions(); for (IExpression exp : watchs) { waitDebugProcessing(); m_debugServer.debugEvaluate(exp.getExpressionText()); , IExpression[] watchs = DebugPlugin.getDefault().getExpressionManager().getExpressions(); for (IExpression exp : watchs) { waitDebugProcessing(); m_debugServer.debugEvaluate(exp.getExpressionText()); 
0," super.installListeners(scrollPane); borderStyleChangeHandler = new BorderStyleChangeHandler(); scrollPane.addPropertyChangeListener(Options.IS_ETCHED_KEY, borderStyleChangeHandler); "," File file = generateFileMountedOnSDcard(mContext, R.string.file_path, R.string.file_name_txt_format); if (file == null) { Log.e(TAG, ""create file to exported failed""); return null; "
1," int bpad = CONST_PANEL_OFFSET; setBorder(new EmptyBorder(bpad, bpad, bpad, bpad)); setOpaque(false); setBackgroundPainter(getPainter(bgColor, borderColor) ); setLayout(new BorderLayout()); "," int XXXXX = CONST_PANEL_OFFSET; setBorder(new EmptyBorder(XXXXX, XXXXX, XXXXX, XXXXX)); setOpaque(false); setBackgroundPainter(getPainter(bgColor, borderColor) ); setLayout(new BorderLayout()); "
0," RhinoScriptRunner scriptRunner = (RhinoScriptRunner) session.getScriptRunner(); if (scriptRunner == null) return """"; SahiScript script = scriptRunner.getScript(); if (script == null) { return """"; "," EList<EObject> contents = resource.getContents(); if (contents.size() < resourceCapacity) { contents.add(object); if (TRACE) { IOUtil.OUT().println(""Added object to resource "" + resource.getPath()); "
1, IWorkspaceDescription description= ResourcesPlugin.getWorkspace().getDescription(); boolean wasOff= !description.isAutoBuilding(); if (wasOff) description.setAutoBuilding(true); return wasOff; , IWorkspaceDescription description= ResourcesPlugin.getWorkspace().getDescription(); boolean wasOff= !description.isAutoBuilding(); if (wasOff) description.setAutoBuilding(true); return wasOff; 
1, FieldComponent delivedQuantity = (FieldComponent) view.getComponentByReference(DELIVERED_QUANTITY); delivedQuantity.setRequired(true); delivedQuantity.requestComponentUpdateState(); , FieldComponent delivedQuantity = (FieldComponent) view.getComponentByReference(DELIVERED_QUANTITY); delivedQuantity.setRequired(true); delivedQuantity.requestComponentUpdateState(); 
1, FileFilter currentFilter = getFileChooser().getFileFilter(); boolean found = false; if(currentFilter != null) { for (FileFilter filter : filters) { if (filter == currentFilter) { found = true; , FileFilter XXXXX = getFileChooser().getFileFilter(); boolean XXXXX = false; if(XXXXX != null) { for (FileFilter filter : filters) { if (filter == XXXXX) { XXXXX = true; 
1," String oldDESC = dESC; dESC = newDESC; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, RifPackage.DATATYPEDEFINITIONBOOLEAN__DESC, oldDESC, dESC)); "," String oldDESC = dESC; dESC = newDESC; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, RifPackage.DATATYPEDEFINITIONBOOLEAN__DESC, oldDESC, dESC)); "
0," EverytrailLoginResponse response = userLogin(username, password); log.info(response.getStatus() + "":"" + response.getValue()); if (response.getStatus().equals(""error"")) { return false; "," final GeoCoding geoCoding = product.getGeoCoding(); final int w = product.getSceneRasterWidth(); final int h = product.getSceneRasterHeight(); return createGeoTIFFMetadata(geoCoding, w, h); "
1, final int prime = 31; int result = 1; result = prime * result + ((descricao == null) ? 0 : descricao.hashCode()); result = prime * result + ((id == null) ? 0 : id.hashCode()); return result; , final int XXXXX = 31; int XXXXX = 1; XXXXX = XXXXX * XXXXX + ((descricao == null) ? 0 : descricao.hashCode()); XXXXX = XXXXX * XXXXX + ((id == null) ? 0 : id.hashCode()); return XXXXX; 
1," BufferedImage ret = new BufferedImage(w, h, BufferedImage.TYPE_INT_RGB); final int[] white = new int[w * h]; Arrays.fill(white, 0xffffff); ret.setRGB(0, 0, w, h, white, 0, w); return ret; "," BufferedImage XXXXX = new BufferedImage(w, h, BufferedImage.TYPE_INT_RGB); final int[] white = new int[w * h]; Arrays.fill(white, 0xffffff); XXXXX.setRGB(0, 0, w, h, white, 0, w); XXXXXurn XXXXX; "
1, double totalTime = getStatisticValue(StatisticType.CUSTOM_CONVERTER_TIME); double totalCount = getStatisticValue(StatisticType.CUSTOM_CONVERTER_SUCCESS_COUNT); return totalTime / totalCount; , double XXXXX = getStatisticValue(StatisticType.CUSTOM_CONVERTER_TIME); double XXXXX = getStatisticValue(StatisticType.CUSTOM_CONVERTER_SUCCESS_COUNT); return XXXXX / XXXXX; 
1," Log.d(TAG, ""Sending stanza "" + stanza.getName() + "" via "" + stanza.getVia()); String via = stanza.getVia(); if (via == null) { Log.w(TAG, ""Sending stanza without via""); return false; "," Log.d(TAG, ""Sending stanza "" + stanza.getName() + "" XXXXX "" + stanza.getVia()); String XXXXX = stanza.getVia(); if (XXXXX == null) { Log.w(TAG, ""Sending stanza without XXXXX""); return false; "
1," Predicate correctVendor = builder.equal(builder.lower(root.get(Vendor_.name)), name.toLowerCase()); query.where(correctVendor); return entityManager.createQuery(query).getSingleResult(); "," Predicate XXXXX = builder.equal(builder.lower(root.get(Vendor_.name)), name.toLowerCase()); query.where(XXXXX); return entityManager.createQuery(query).getSingleResult(); "
0, this.server = zanataDetails.server; this.project = zanataDetails.project; this.version = zanataDetails.version; this.username = zanataDetails.username; this.token = zanataDetails.token; , ScenarioEditor.threadsList.removeAll(); ScenarioEditor.semaphoresList.removeAll(); ScenarioEditor.conditionsList.removeAll(); ScenarioEditor.primitivesList.removeAll(); admin = new AlvisSave(); 
1, InputStream templateInputStream = null; try { templateInputStream = getClass().getClassLoader().getResourceAsStream(TEMPLATE); return XMLDomUtils.getTemplateDom(templateInputStream); , InputStream XXXXX = null; try { XXXXX = getClass().getClassLoader().getResourceAsStream(TEMPLATE); return XMLDomUtils.getTemplateDom(XXXXX); 
0, for (Iterator it = paoFields.iterator(); it.hasNext();) { DDFField ddff = (DDFField) it.next(); if (pszName.equalsIgnoreCase(ddff.getFieldDefn().getName())) { if (iFieldIndex == 0) { return ddff; , TestSuite testSuite = new TestSuite(); testSuite.addTest(AddDMFolderDocumentCommentTests.suite()); testSuite.addTest(MoveDMFolderDocumentCommentToFolderTests.suite()); return testSuite; 
1," SeriesIndexRecord record = new SeriesIndexRecord(TestcaseRecordInputStream.create(0x1065, data)); assertEquals( (short)3, record.getIndex()); assertEquals( 6, record.getRecordSize() ); "," SeriesIndexRecord XXXXX = new SeriesIndexRecord(TestcaseRecordInputStream.create(0x1065, data)); assertEquals( (short)3, XXXXX.getIndex()); assertEquals( 6, XXXXX.getRecordSize() ); "
0, switch (featureID) { case AsdocEPackage.ASDOC_PARAMETER__TYPE: setType((AvmTypeReference)newValue); return; case AsdocEPackage.ASDOC_PARAMETER__REST: setRest((Boolean)newValue); return; ," Model m = ModelFactory.createDefaultModel(); m.createResource(""foo"").addProperty(RDF.value, ""bar""); m.write(new OutputStream() { @Override public void write(int b) throws IOException { "
1," NonblockingGenericDialog gd = new NonblockingGenericDialog(""Hello, Ignacio!""); gd.addCheckbox(""A toggle"", false); gd.showDialog(); if (gd.wasCanceled()) { IJ.write(""was canceled""); return; "," NonblockingGenericDialog XXXXX = new NonblockingGenericDialog(""Hello, Ignacio!""); XXXXX.addCheckbox(""A toggle"", false); XXXXX.showDialog(); if (XXXXX.wasCanceled()) { IJ.write(""was canceled""); return; "
0," this.serverName = serverName; this.homeDir = homeDir; this.jndiPort =jndiPort; this.timeout = timeout; this.kind = kind; if (address == null || address.length() == 0){ this.address = ""127.0.0.1""; "," if (StringUtils.isBlank(branchOfficeId)) { addError(errors, ConfigurationConstants.BRANCHOFFICE, LoanConstants.MANDATORY_SELECT, getMessageText( ConfigurationConstants.BRANCHOFFICE)); "
1, if (newAction) { switch (state) { case HOME: case GRAB_WAITING: case DROP_WAITING: setState(ActionState.GRAB_UP_BEHIND); break; case POINT_WAITING: setState(ActionState.GRAB_UP_CURR); break; , if (newAction) { switch (state) { case HOME: case GRAB_WAITING: case DROP_WAITING: setState(ActionState.GRAB_UP_BEHIND); break; case POINT_WAITING: setState(ActionState.GRAB_UP_CURR); break; 
1," assert debug(""ALOAD 0""); mv.visitVarInsn(ALOAD, 0); assert debug(""GETFIELD p"" + number); mv.visitFieldInsn(GETFIELD, className, ""p"" + number, ""L"" + NAMESPACE + ""compiler/ExecutableStatement;""); "," assert debug(""ALOAD 0""); mv.visitVarInsn(ALOAD, 0); assert debug(""GETFIELD p"" + number); mv.visitFieldInsn(GETFIELD, className, ""p"" + number, ""L"" + NAMESPACE + ""compiler/ExecutableStatement;""); "
1," String id = role.getId(); if (map.get(""create_"" + escapedId + ""_"" + id) != null) { if (!role.isAllowed(RWikiSecurityService.SECURE_CREATE)) { role.allowFunction(RWikiSecurityService.SECURE_CREATE); "," String XXXXX = role.getId(); if (map.get(""create_"" + escapedId + ""_"" + XXXXX) != null) { if (!role.isAllowed(RWikiSecurityService.SECURE_CREATE)) { role.allowFunction(RWikiSecurityService.SECURE_CREATE); "
1, this.inputNeuronCount = 0; this.outputNeuronCount = 0; for (final TemporalDataDescription desc : this.descriptions) { if (desc.isInput()) { this.inputNeuronCount += this.inputWindowSize; , this.inputNeuronCount = 0; this.outputNeuronCount = 0; for (final TemporalDataDescription desc : this.descriptions) { if (desc.isInput()) { this.inputNeuronCount += this.inputWindowSize; 
1," this.format = format; this.encoding = encoding; this.normalizeEntries = normalizeEntries; this.normalizer = normalizeEntries ? Normalizer2.getInstance(null, ""nfkc"", Normalizer2.Mode.COMPOSE) : null; "," this.format = format; this.encoding = encoding; this.normalizeEntries = normalizeEntries; this.normalizer = normalizeEntries ? Normalizer2.getInstance(null, ""nfkc"", Normalizer2.Mode.COMPOSE) : null; "
1," EntityManager em = getEntityManager(); em.getTransaction().begin(); BasicTestEntity1 bte1 = new BasicTestEntity1(str, lng); em.persist(bte1); em.getTransaction().commit(); return bte1.getId(); "," EntityManager XXXXX = getEntityManager(); XXXXX.getTransaction().begin(); BasicTestEntity1 XXXXX = new BasicTestEntity1(str, lng); XXXXX.persist(XXXXX); XXXXX.getTransaction().commit(); return XXXXX.getId(); "
1," Metrics.defaultRegistry().removeMetric(factory.createMetricName(namePrefix + ""Latency"")); Metrics.defaultRegistry().removeMetric(factory.createMetricName(namePrefix + ""TotalLatency"")); "," Metrics.defaultRegistry().removeMetric(factory.createMetricName(namePrefix + ""Latency"")); Metrics.defaultRegistry().removeMetric(factory.createMetricName(namePrefix + ""TotalLatency"")); "
0, while ((bufferAt < buffer.length) && buffer[bufferAt] == ' ' || buffer[bufferAt] == '\r' || buffer[bufferAt] == '\n' || buffer[bufferAt] == '\t'){ temp.write(buffer[bufferAt]); bufferAt++; , this(); this.mProperties.putAll(qro.mProperties); for (QueueRequestProperties.TransientProperties property : QueueRequestProperties.TransientProperties .values()) { removeProperty(property.name()); 
0," OptionFormatter of = new OptionFormatter(2, 6, 15); StringBuilder sb = new StringBuilder(); String expected = "" -x foo bar\n""; of.format(sb, ""-x"", ""foo bar""); assertEquals(expected, sb.toString()); "," List<JButton> downloadButtons = downloadMediator.getHeaderButtons(); for (JButton button : downloadButtons) { button.setFont(hyperlinkFont); downloadButtonPanel.add(button, ""gapafter 5""); "
1," vista.getDm().setNumRows(0); for (Medico medico : modelo.getListado()) { vista.getDm().addRow( (new Object[] { medico.getId(), medico.getNombre(), medico.getApellido(), medico.getCedula() "," vista.getDm().setNumRows(0); for (Medico medico : modelo.getListado()) { vista.getDm().addRow( (new Object[] { medico.getId(), medico.getNombre(), medico.getApellido(), medico.getCedula() "
1," switch (getEntityTag(meta)) { case ENTITY: return ""entity""; case EMBEDDABLE: return ""embeddable""; case MAPPED_SUPERCLASS: return ""mapped-superclass""; default: throw new IllegalStateException(); "," switch (getEntityTag(meta)) { case ENTITY: return ""entity""; case EMBEDDABLE: return ""embeddable""; case MAPPED_SUPERCLASS: return ""mapped-superclass""; default: throw new IllegalStateException(); "
1, int len = getInt(); byte[] imageByteArray = getByteArray(len); InputStream in = new ByteArrayInputStream(imageByteArray); BufferedImage bImage = null; try { bImage = ImageIO.read(in); , XXXXXt XXXXX = getInt(); byte[] imageByteArray = getByteArray(XXXXX); InputStream XXXXX = new ByteArrayInputStream(imageByteArray); BufferedImage XXXXX = null; try { XXXXX = ImageIO.read(XXXXX); 
0, super.initCoreModules(); Modules modules = getContext().getModules(); Module languageModule = modules.getLanguageModule(); languageModule.setVersion(TypeChecker.LANGUAGE_MODULE_VERSION); , Skill1 = comboSkills.getItemAt(1).toString(); Skill2 = comboSkills.getItemAt(2).toString(); Skill3 = comboSkills.getItemAt(3).toString(); Skill4 = comboSkills.getItemAt(4).toString(); 
1," final GamePacketReader reader = new GamePacketReader(packet); final int otherId = (int) reader.getSigned(DataType.SHORT, DataOrder.LITTLE); return new FourthPlayerOptionEvent(otherId); "," final GamePacketReader XXXXX = new GamePacketReader(packet); final int XXXXX = (int) XXXXX.getSigned(DataType.SHORT, DataOrder.LITTLE); return new FourthPlayerOptionEvent(XXXXX); "
0, String imageKey = ISharedImages.IMG_OBJ_ELEMENT; if (obj instanceof TreeParent) imageKey = ISharedImages.IMG_OBJ_FOLDER; return PlatformUI.getWorkbench().getSharedImages().getImage(imageKey); ," switch (e.type) { case SWT.Deiconify: EventQueue.invokeLater(new Runnable () { public void run () { frame.dispatchEvent (new WindowEvent (frame, WindowEvent.WINDOW_DEICONIFIED)); "
1," assertEquals(""GeneratorInterestRateFutures: getter"", USDLIBOR3M, GENERATOR_FUTURES_ED.getIborIndex()); assertEquals(""GeneratorInterestRateFutures: getter"", GENERATOR_FUTURES_ED.getName(), ""USD-ED""); "," assertEquals(""GeneratorInterestRateFutures: getter"", USDLIBOR3M, GENERATOR_FUTURES_ED.getIborIndex()); assertEquals(""GeneratorInterestRateFutures: getter"", GENERATOR_FUTURES_ED.getName(), ""USD-ED""); "
1," test(""for (i in x) f(i);"", ""for (var JSCompiler_IgnoreCajaProperties_0 in x)"" + "" if (!JSCompiler_IgnoreCajaProperties_0.match(/___$/)) {"" + "" i = JSCompiler_IgnoreCajaProperties_0;"" + "" { f(i); "," test(""for (i in x) f(i);"", ""for (var JSCompiler_IgnoreCajaProperties_0 in x)"" + "" if (!JSCompiler_IgnoreCajaProperties_0.match(/___$/)) {"" + "" i = JSCompiler_IgnoreCajaProperties_0;"" + "" { f(i); "
0," super.onActivityJoin(); Log.d(TAG, name + "" joined session!""); try { new Thread() { boolean loop = false; JSONObject hello = new JSONObject(""{\""msg\"":\""hello world! from: "" + name + ""\""", _isCall = isCall; _strike = strike; _currency = currency; _underlyingId = indexId; _exerciseType = exerciseType; _expiryDT = expiryDT; _settlementDate = settlementDate; _pointValue = pointValue; 
0," int dvPool = getDodgeDvPool(traitCollection) + specialty + equipment.getDDVPoolMod(); int dv = getRoundedDodgeDv(characterType, dvPool) + equipment.getMobilityPenalty(); return Math.max(dv, 0); ", if (MockConfigurableConnector.class.isInstance(obj)) { MockConfigurableConnector conn = (MockConfigurableConnector) obj; return conn.getConfig1().equals(config1) && conn.getConfig2() == config2; 
0," return ""1:1: Tokens : ( T__12 | T__13 | T__14 | T__15 | T__16 | RULE_NAMERULE | RULE_ID | RULE_INT | RULE_STRING | RULE_ML_COMMENT | RULE_SL_COMMENT | RULE_WS | RULE_ANY_OTHER );""; ", if ( IDroolsConstants.CACHE_PARSED_RULES.equals( event.getProperty() ) ) { useCachePreference = ((Boolean) event.getNewValue()).booleanValue(); if ( !useCachePreference ) { clearCache(); 
0, File[] files = f.listFiles(); boolean ret = true; for (int i = 0; ret && i < files.length; i++) { if (files[i].isDirectory()) ret = delete(files[i]); else ret = files[i].delete(); , BigDecimal rate = purchaseQty >= 0 ? gearBuySellScheme.getBuyRate() : gearBuySellScheme.getSellRate(); if (purchaseQty < 0 && selected.isSellAsCash()) { rate = gearBuySellScheme.getCashSellRate(); 
0," _lastDevSample = _currentDevSample; _currentDevSample = NormalGen.nextDouble(_rng, _scheduleDevKalmanParams[0], Math.sqrt(_scheduleDevKalmanParams[1])); return _currentDevSample; "," long difference = Math.abs(actualSize - estimatedSize); if (difference / actualSize > 0.001) { fail(""sizes aren't even close: actual="" + actualSize + "", estimated="" + estimatedSize); "
0, BasicConfigurator.configure(); Logger.getRootLogger().setLevel(Level.TRACE); ModelTestUtils.resetTestDb(); ModelTestUtils.createModel(null); em = ModelTestUtils.createEntityManager(); ," MimeRecord underlyingRecord = MimeRecord.parse(record); Preconditions.checkArgument(""text/x-vCard"".equals(underlyingRecord.getMimeType())); return new VCardRecord(underlyingRecord.getContent()); "
1, if (iterFactories == null) initializeIterators(); for (int i = 0; iterFactories[i] != null; i++) { PyObject iter = iterFactories[i].findCollection(javaProxy); if (iter != null) return iter; , if (iterFactories == null) initializeIterators(); for (int i = 0; iterFactories[i] != null; i++) { PyObject iter = iterFactories[i].findCollection(javaProxy); if (iter != null) return iter; 
1, RelationMemberConflictDecision d = decisions.get(row); switch(column) { case 2: d.setRole((String)value); break; case 4: d.decide((RelationMemberConflictDecisionType)value); refresh(); break; , RelationMemberConflictDecision XXXXX = XXXXXecisions.get(row); switch(column) { case 2: XXXXX.setRole((String)value); break; case 4: XXXXX.XXXXXeciXXXXXe((RelationMemberConflictDecisionType)value); refresh(); break; 
1," try { FlumeEvent eventOut = logFileReader.get(offset); Assert.assertEquals(eventIn.getHeaders(), eventOut.getHeaders()); Assert.assertTrue(Arrays.equals(eventIn.getBody(), eventOut.getBody())); "," try { FlumeEvent XXXXX = logFileReader.get(offset); Assert.assertEquals(eventIn.getHeaders(), XXXXX.getHeaders()); Assert.assertTrue(Arrays.equals(eventIn.getBody(), XXXXX.getBody())); "
1," DialValueIndicator i1 = new DialValueIndicator(0); DialValueIndicator i2 = new DialValueIndicator(0); assertTrue(i1.equals(i2)); int h1 = i1.hashCode(); int h2 = i2.hashCode(); assertEquals(h1, h2); "," DialValueIndicator i1 = new DialValueIndicator(0); DialValueIndicator i2 = new DialValueIndicator(0); assertTrue(i1.equals(i2)); int h1 = i1.hashCode(); int h2 = i2.hashCode(); assertEquals(h1, h2); "
0," long defaultFreshness = 10; HttpCacheEntry entry = HttpTestUtils.makeCacheEntry(); assertEquals(defaultFreshness, impl.getHeuristicFreshnessLifetimeSecs(entry, 0.1f, defaultFreshness)); ", MigrationMapEntry newEntry = new MigrationMapEntry(); newEntry.myOldName = myOldName; newEntry.myNewName = myNewName; newEntry.myType = myType; newEntry.isRecursive = isRecursive; return newEntry; 
1, String value = properties.getProperty(name); if (value == null) { value = bundleContext.getProperty(name); if (value == null) { return defValue == null ? null : expandVars(defValue); , String value = properties.getProperty(name); if (value == null) { value = bundleContext.getProperty(name); if (value == null) { return defValue == null ? null : expandVars(defValue); 
1," if ( ItemPool.eliminationProcessor( ItemPool.stoneSphereStrings, sphere, sphereId, 2174, 2177, ""lastStoneSphere"", "" of "" ) ) { KoLmafia.updateDisplay( ""All stone spheres have been identified!"" ); "," if ( ItemPool.eliminationProcessor( ItemPool.stoneSphereStrings, sphere, sphereId, 2174, 2177, ""lastStoneSphere"", "" of "" ) ) { KoLmafia.updateDisplay( ""All stone spheres have been identified!"" ); "
0," JPopupMenu menu = new JPopupMenu(); JMenu addMenu = MenuFactory.makeMenus(new String[] { MenuFactory.CONFIG_ELEMENTS, MenuFactory.ASSERTIONS, MenuFactory.TIMERS, MenuFactory.LISTENERS, "," super(); this.parameters = new HashMap<String, String>(); this.childNavigationItems = new ArrayList<NavigationItem>(); this.setName(name); this.setUrl(url); this.setNameParam(nameParam); "
1, switch (element.getElementType()) { case IJavaElement.LOCAL_VARIABLE: return LOCAL_VARIABLE_FLAGS; case IJavaElement.TYPE_PARAMETER: return TYPE_PARAMETER_FLAGS; default: return LABEL_FLAGS; , switch (element.getElementType()) { case IJavaElement.LOCAL_VARIABLE: return LOCAL_VARIABLE_FLAGS; case IJavaElement.TYPE_PARAMETER: return TYPE_PARAMETER_FLAGS; default: return LABEL_FLAGS; 
0," if(value == inst.getEObject() && !inst.isConsumed()) return null; switch(index) { case 0: return new OrExpr_Alternatives_1_1(lastRuleCallOrigin, next, actIndex, consumed); default: return null; ", if(node.children.size( )>0) { Iterator iter = node.children.iterator( ); while(iter.hasNext( )) { AbstractNode cell = (AbstractNode)iter.next( ); if(!cell.finished) { return false; 
0, ObaAgenciesWithCoverageRequest.Builder builder = new ObaAgenciesWithCoverageRequest.Builder(getContext()); ObaAgenciesWithCoverageRequest request = builder.build(); assertNotNull(request); , if (obj == this) return true; if (!(obj instanceof Gas3Project)) return false; Gas3Project g3c = (Gas3Project)obj; return (path == null ? g3c.path == null : path.equals(g3c.path)); 
1, myEnteredName = dialog.getEnteredName(); myIsReplaceAllOccurrences = dialog.isReplaceAllOccurrences(); myIsDeclareFinal = dialog.isDeclareFinal(); mySelectedType = dialog.getSelectedType(); , myEnteredName = dialog.getEnteredName(); myIsReplaceAllOccurrences = dialog.isReplaceAllOccurrences(); myIsDeclareFinal = dialog.isDeclareFinal(); mySelectedType = dialog.getSelectedType(); 
1, this.tree = tree; this.treeTableModel = treeTableModel; tree.addTreeExpansionListener(new TreeExpansionListener() { public void treeExpanded(TreeExpansionEvent event) { fireTableDataChanged(); , this.tree = tree; this.treeTableModel = treeTableModel; tree.addTreeExpansionListener(new TreeExpansionListener() { public void treeExpanded(TreeExpansionEvent event) { fireTableDataChanged(); 
1," log.debug(""Nuevo empleado""); Empleado empleado = new Empleado(); modelo.addAttribute(mx.edu.um.mateo.Constants.EMPLEADO_KEY, empleado); return mx.edu.um.mateo.Constantes.PATH_EMPLEADO_NUEVO; "," log.debug(""Nuevo XXXXX""); Empleado XXXXX = new Empleado(); modelo.addAttribute(mx.edu.um.mateo.Constants.EMPLEADO_KEY, XXXXX); return mx.edu.um.mateo.Constantes.PATH_EMPLEADO_NUEVO; "
1," final GraphicableVehicle vehicle = this.graphicableVehicles.get(vehicleId); if (vehicle == null){ Logger.getLogger(ParticularEmergencyRenderer.class.getName()).log(Level.WARNING, ""Unkown Vehicle {0"," final GraphicableVehicle XXXXX = this.graphicableVehicles.get(XXXXXId); if (XXXXX == null){ Logger.getLogger(ParticularEmergencyRenderer.class.getName()).log(Level.WARNING, ""Unkown Vehicle {0"
1," Log.i(DEBUG_TAG, ""TriggerInit: Resetting all triggers""); DbHelper dbHelper = new DbHelper(context); for (Campaign c : dbHelper.getReadyCampaigns()) { resetTriggersAndSettings(context, c.mUrn); "," Log.i(DEBUG_TAG, ""TriggerInit: Resetting all triggers""); DbHelper dbHelper = new DbHelper(context); for (Campaign c : dbHelper.getReadyCampaigns()) { resetTriggersAndSettings(context, c.mUrn); "
1," if ( logger.isLoggable( Level.FINER ) ) logger.entering( JSColumnDefn.class.getName( ), ""has"", Integer.valueOf( index ) ); return ( index >=0 && dataSets.length > index ) ? true : false; "," if ( logger.isLoggable( Level.FINER ) ) logger.entering( JSColumnDefn.class.getName( ), ""has"", Integer.valueOf( index ) ); return ( index >=0 && dataSets.length > index ) ? true : false; "
0," Vector3f v = new Vector3f(); if(!(parser.ttype==StlFileParser.TT_WORD && parser.sval.equals(""normal""))) { System.err.println(""Format Error:expecting 'normal' on line "" + parser.lineno()); "," final Method m = Method.fromString(r.getMethod()); final Request input = new LazyRequestImpl(object.pattern().match(r.getRequestURI()), r); return HttpObjectUtil.invokeMethod(object, m, input); "
1, int hash = 7; hash = 17 * hash + (this.lowerCorner != null ? this.lowerCorner.hashCode() : 0); hash = 17 * hash + (this.upperCorner != null ? this.upperCorner.hashCode() : 0); return hash; , int hash = 7; hash = 17 * hash + (this.lowerCorner != null ? this.lowerCorner.hashCode() : 0); hash = 17 * hash + (this.upperCorner != null ? this.upperCorner.hashCode() : 0); return hash; 
1, this.accessStrategy = strategy; this.config = config; this.nodeSessionFactories = buildNodeSetSessionFactories(); this.allNodesSessionFactory = buildAllNodesSessionFactory(); hive.addObserver(this); , this.accessStrategy = strategy; this.config = config; this.nodeSessionFactories = buildNodeSetSessionFactories(); this.allNodesSessionFactory = buildAllNodesSessionFactory(); hive.addObserver(this); 
0," evaluateString(""(defun f (table) (intern \""qwas\"" table))""); LispObject table = evaluateString(""(let ((table (make-vector 10 0))) (f table) table)""); Assert.assertTrue(table instanceof LispVector); "," int begin = Math.max(0, index - 50); int end = Math.min(begin + 50, 9999); if (rangeStart == -1 || rangeEnd == -1) { rangeStart = begin; rangeEnd = end; updateJob.schedule(1000); return; "
1," if (trace == TRACE_NONE) return ""TRACE_NONE""; else if (trace == TRACE_MED) return ""TRACE_MED""; else if (trace == TRACE_MAX) return ""TRACE_MAX""; else return String.valueOf(trace); "," if (trace == TRACE_NONE) return ""TRACE_NONE""; else if (trace == TRACE_MED) return ""TRACE_MED""; else if (trace == TRACE_MAX) return ""TRACE_MAX""; else return String.valueOf(trace); "
0," ensureLoggedIn(); validateLink(uri, Link.Type.TRACK); synchronized (_lockedTracks) { int count = 0; while (_lockedTracks.contains(uri) && ++count < 5) { try { _lockedTracks.wait(2500); ", XmlTest test = new XmlTest(suite); test.setName(packageName); XmlPackage xmlPackage = new XmlPackage(); xmlPackage.setName(packageName); test.setXmlPackages(Collections.singletonList(xmlPackage)); 
0, FieldComponent delivedQuantity = (FieldComponent) view.getComponentByReference(DELIVERED_QUANTITY); delivedQuantity.setRequired(true); delivedQuantity.requestComponentUpdateState(); , final Subscription sub = Mockito.mock(Subscription.class); Mockito.when(sub.getId()).thenReturn(subscriptionId); Mockito.when(sub.getBundleId()).thenReturn(UUID.randomUUID()); return sub; 
0," if (""UserAdminPermission"".equals(perm.getClass().getSimpleName())) { String name = perm.getName(); if (""admin"".equals(name) && !m_allowed) { throw new SecurityException(""Not allowed!""); "," final String htmlColor = toHTMLColor(TOOLTIP_COLOR); final String toolTip = ""<html><table bgColor="" + htmlColor + ""><tr><td><b>"" + text + ""</b></td></tr></table></table>""; return toolTip; "
1," if (SwingUtilities.isLeftMouseButton(e) && !viewMenuButton.isSelected()) { viewMenuButton.setSelected(true); viewTypePopupMenu.show(viewMenuButton, 0, viewMenuButton.getHeight()); "," if (SwingUtilities.isLeftMouseButton(e) && !viewMenuButton.isSelected()) { viewMenuButton.setSelected(true); viewTypePopupMenu.show(viewMenuButton, 0, viewMenuButton.getHeight()); "
0," IgnoredCacheKeySuffixTransformer sut = new IgnoredCacheKeySuffixTransformer(); assertSame("""", sut.transform(null)); assertSame("""", sut.transform(3L)); assertSame("""", sut.transform(""FOO"")); "," if ((memoryInfo != null) && !(memoryInfo instanceof Properties)) { throw new IllegalArgumentException(String.format(""The memory info %s object is not a Properties object."", memoryInfo)); "
0, File parentDir = new File(location); if (parentDir.isDirectory()) { String[] entries = parentDir.list(); if (entries.length == 1 && entries[0].equals(dirNameToCheck)) { return true; , int c = 1; for (; c < initialCapacity; c <<= 1); threshold = (int) (c * loadFactor); if (initialCapacity > threshold && c < MAXIMUM_CAPACITY) { c <<= 1; threshold = (int) (c * loadFactor); 
1, SimpleFeatureHolder fh = new SimpleFeatureHolder(); for (Iterator i = this.features(); i.hasNext(); ) { Feature f = (RichFeature)i.next(); try { if (fc.accept(f)) fh.addFeature(f); , SXXXXXmpleFeatureHolder XXXXX = new SXXXXXmpleFeatureHolder(); XXXXXor (Iterator XXXXX = thXXXXXs.XXXXXeatures(); XXXXX.hasNext(); ) { Feature XXXXX = (RXXXXXchFeature)XXXXX.next(); try { XXXXXXXXXX (XXXXXc.accept(XXXXX)) XXXXX.addFeature(XXXXX); 
1," String directoryPath = mavenArtifact.groupId.replace('.', '/') + ""/"" + mavenArtifact.artifactId + ""/"" + mavenArtifact.version; return directoryPath + ""/"" + mavenArtifact.canonicalName; "," String XXXXX = mavenArtifact.groupId.replace('.', '/') + ""/"" + mavenArtifact.artifactId + ""/"" + mavenArtifact.version; return XXXXX + ""/"" + mavenArtifact.canonicalName; "
1," executeTarget(""doubledef""); String log = getLog(); assertTrue(""Task1 did not execute"", log.indexOf(""Task1"") != -1); assertTrue(""Task2 did not execute"", log.indexOf(""Task2"") != -1); "," executeTarget(""doubledef""); String XXXXX = getLog(); assertTrue(""Task1 did not execute"", XXXXX.indexOf(""Task1"") != -1); assertTrue(""Task2 did not execute"", XXXXX.indexOf(""Task2"") != -1); "
0," if (logTracker == null) { if (bundleContext == null) return null; logTracker = new ServiceTracker<LogService, LogService>(bundleContext, LogService.class, null); logTracker.open(); "," final int numPresses = getNumDownPressesToScrollDownAcrossSelected(); assertEquals(1, mListView.getChildCount()); for (int i = 0; i < numPresses; i++) { sendKeys(KeyEvent.KEYCODE_DPAD_DOWN); "
1, nakedState.setKind(resolve(emState.getKind())); if(nakedState.getKind().isFork() || nakedState.getKind().isJoin()){ if(emState.getIncomings().size() > 1){ nakedState.setKind(StateKind.JOIN); , nakedState.setKind(resolve(emState.getKind())); if(nakedState.getKind().isFork() || nakedState.getKind().isJoin()){ if(emState.getIncomings().size() > 1){ nakedState.setKind(StateKind.JOIN); 
1," final Font font = new Font(""SansSerif"", PLAIN, 8); new EasyMockTemplate(driver()) { @Override protected void expectations() { expect(driver().font(target(), cell)).andReturn(font); "," final Font XXXXX = new Font(""SansSerif"", PLAIN, 8); new EasyMockTemplate(driver()) { @Override protected void expectations() { expect(driver().XXXXX(target(), cell)).andReturn(XXXXX); "
1," String label = ((FeaturePrototype) object).getName(); return label == null || label.length() == 0 ? getString(""_UI_FeaturePrototype_type"") : getString(""_UI_FeaturePrototype_type"") + "" "" + label; "," String XXXXX = ((FeaturePrototype) object).getName(); return XXXXX == null || XXXXX.length() == 0 ? getString(""_UI_FeaturePrototype_type"") : getString(""_UI_FeaturePrototype_type"") + "" "" + XXXXX; "
0," GetAllRelevantQuotasForStorageParameters params = new GetAllRelevantQuotasForStorageParameters(); assertEquals(""Default constructor should use empty GUID"", Guid.Empty, params.getStorageId()); "," StringBuffer sb=new StringBuffer(); if(type==EvPixelsType.INT) { for(int i=0;i<getHeight();i++) { for(int j=0;j<getWidth();j++) sb.append(arrayI[i*getWidth()+j]+""\t""); sb.append(""\n""); "
0," return new WebArchiveBuilder() .withTestClass( BuiltinConstraintsTest.class ) .withResource( ""builtin-constraints-override.xml"" ) .withClass( InvertedNotNullValidator.class ) .build(); "," super(); mCurrentLang = aCurrentLang; if ( com.sun.lwuit.Display.getInstance().isTouchScreenDevice() ) { getStyle().setPadding( 10, 10, 2, 2 ); getSelectedStyle().setPadding( 10, 10, 2, 2 ); "
0, boolean before=bodyContentStack.getDevNull(); bodyContentStack.setDevNull(false); forceWriter = bodyContentStack.getWriter(); if(enablecfoutputonly>0 && outputState==0) { writer=devNull; ," assertNotNull(actualString); assertTrue( String.format(""Regexp Assertion Failed:\nExpected: %s\nActual: %s\n"", expectedRegexp, actualString), actualString.matches(expectedRegexp)); "
0, ITranslationUnit unit = context.getTranslationUnit(); if(unit != null) return matches(unit); IProject project = context.getProject(); if(project != null) return matches(project); return true; , for(VControl child : panel.getChildren()) { if(!child.hasStyle(SWT.NO_FOCUS)) { if(child instanceof VPanel) { VControl newFocus = getNewFocus((VPanel) child); if(newFocus != null) { return newFocus; 
1," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," EditorCell XXXXX = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, XXXXX, editorContext); return XXXXX; "
1," if ( container.hasProperty( key ) ) { if ( !MessageDialog.openQuestion( null, ""Key exists"", ""The key \"""" + key + ""\"" already exists, do you want to overwrite the old value?"" ) ) { return; "," if ( container.hasProperty( key ) ) { if ( !MessageDialog.openQuestion( null, ""Key exists"", ""The key \"""" + key + ""\"" already exists, do you want to overwrite the old value?"" ) ) { return; "
1, this.minNumberOfTargets = minNumTargets; this.maxNumberOfTargets = maxNumTargets; this.zone = Zone.ALL; this.filter = new FilterCreatureOrPlayer(); this.targetName = filter.getMessage(); , this.minNumberOfTargets = minNumTargets; this.maxNumberOfTargets = maxNumTargets; this.zone = Zone.ALL; this.filter = new FilterCreatureOrPlayer(); this.targetName = filter.getMessage(); 
1," config.setSkipNextNewline(false); config.getOutput().print('\n'); config.getOutput().print(getContent()); config.getIndentor().printIndentation(config.getOutput()); config.getOutput().print(""EOF""); "," config.setSkipNextNewline(false); config.getOutput().print('\n'); config.getOutput().print(getContent()); config.getIndentor().printIndentation(config.getOutput()); config.getOutput().print(""EOF""); "
1," ListPodsOptions options = new ListPodsOptions().allocationState(AllocationState.ENABLED); assertEquals(ImmutableList.of(""Enabled""), options.buildQueryParameters().get(""allocationstate"")); "," ListPodsOptions XXXXX = new ListPodsOptions().allocationState(AllocationState.ENABLED); assertEquals(ImmutableList.of(""Enabled""), XXXXX.buildQueryParameters().get(""allocationstate"")); "
1," try { String osName = System.getProperty(""os.name""); if (!osName.startsWith(""Linux"")) { LOG.info(""ProcfsBasedProcessTree currently is supported only on "" + ""Linux.""); return false; "," try { String XXXXX = System.getProperty(""os.name""); if (!XXXXX.startsWith(""Linux"")) { LOG.info(""ProcfsBasedProcessTree currently is supported only on "" + ""Linux.""); return false; "
0, IntegerVectorSpecies s = (IntegerVectorSpecies) species; for(int x=0;x<genome.length;x++) genome[x] = (byte)((int)s.minGene(x) + state.random[thread].nextInt((int)s.maxGene(x)-(int)s.minGene(x)+1)); , if (e instanceof MavenPsiElementWrapper) e = ((MavenPsiElementWrapper)e).getWrappee(); if (!MavenDomUtil.isMavenFile(e)) return null; if (e instanceof PsiFile) return null; return e; 
0," Partition[] p = idSpace.getPartitions(); boolean showNode; NodeColors colors = (NodeColors) g.getProperty(""NODE_COLORS_0""); for (Node n : g.getNodes()) { if (n == null) { continue; "," listeners.forEach ( new Function<SharedValueListener, Void>() { @Override public Void apply(SharedValueListener listener) { try { listener.valueHasChanged(SharedValue.this, value); "
1," final InterestRateFutureBean bean = createFutureBean(new InterestRateFutureBean(), security); bean.setUnderlying(externalIdToExternalIdBean(security.getUnderlyingId())); return bean; "," final InterestRateFutureBean XXXXX = createFutureBean(new InterestRateFutureBean(), security); XXXXX.setUnderlying(externalIdToExternalIdBean(security.getUnderlyingId())); return XXXXX; "
0," final GeoCoding geoCoding = product.getGeoCoding(); final int w = product.getSceneRasterWidth(); final int h = product.getSceneRasterHeight(); return createGeoTIFFMetadata(geoCoding, w, h); "," doc = new Document(""import os.path as bla \n"" + ""print bla \n"" + """"); analyzer = new OccurrencesAnalyzer(); msgs = analyzeDoc(); printMessages(msgs); assertEquals(0, msgs.length); "
0," if (PREF_KEYBOARD_LAYOUT.equals(key)) { final int themeIndex = getKeyboardThemeIndex(mInputMethodService, sharedPreferences); postSetInputView(createInputView(themeIndex, false)); ", try{ this.controller.changeName(this.txtName.getText()); this.controller.changeAddress(this.txtAddress.getText()); this.controller.changePhoneNumber(this.txtPhoneNumber.getText()); 
0, if (openDropDownMenu(event)) return; if ((style & (SWT.TOGGLE | SWT.CHECK)) != 0) { if (event.widget instanceof ToolItem) { checkedState = ((ToolItem) event.widget).getSelection(); ," String label = ((VerticalLabel)object).getName(); return label == null || label.length() == 0 ? getString(""_UI_VerticalLabel_type"") : getString(""_UI_VerticalLabel_type"") + "" "" + label; "
1," mTracks = new ArrayList<Track>(); this.m_adapter = new TrackAdapter(this, R.layout.row, mTracks); setListAdapter(this.m_adapter); viewOrders = new Runnable() { public void run() { getOrders(); "," mTracks = new ArrayList<Track>(); this.m_adapter = new TrackAdapter(this, R.layout.row, mTracks); setListAdapter(this.m_adapter); viewOrders = new Runnable() { public void run() { getOrders(); "
1, if (other instanceof StandingIdentifier) { ImportLogIdentifier otherId = (ImportLogIdentifier) other; return characterId == otherId.characterId && importerId == otherId.importerId; , if (other instanceof StandingIdentifier) { ImportLogIdentifier XXXXX = (ImportLogIdentifier) other; return XXXXX == XXXXX.XXXXX && importerId == XXXXX.importerId; 
0, token_source = tm; token = new Token(); jj_ntk = -1; jj_gen = 0; for (int i = 0; i < 0; i++) jj_la1[i] = -1; for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls(); , for (int i = 0; i < this.elemsOrder.size(); i++) { final Element elem = this.elemsOrder.get(i); if (elem.getNamespace().equals(childNS) && elem.getName().equals(childName)) return i; 
1, if (myShownContent != null) { final ChangesViewContentI cvcm = ChangesViewContentManager.getInstance(myVcs.getProject()); cvcm.removeContent(myShownContent); myShownContent = null; , if (myShownContent != null) { final ChangesViewContentI XXXXX = ChangesViewContentManager.getInstance(myVcs.getProject()); XXXXX.removeContent(myShownContent); myShownContent = null; 
1, Mapping m = GMFMapFactory.eINSTANCE.createMapping(); CanvasMapping cme = GMFMapFactory.eINSTANCE.createCanvasMapping(); cme.setDiagramCanvas(canvas); m.setDiagram(cme); myMap = m; , Mapping XXXXX = GMFMapFactory.eINSTANCE.createMapping(); CanvasMapping cXXXXXe = GMFMapFactory.eINSTANCE.createCanvasMapping(); cXXXXXe.setDiagraXXXXXCanvas(canvas); XXXXX.setDiagraXXXXX(cXXXXXe); XXXXXyMap = XXXXX; 
1," System.out.println(indent + ""NODE: "" + portfolioNode.getName() + ""/"" + portfolioNode.getUniqueId()); for (PortfolioNode childNode : portfolioNode.getChildNodes()) { print(childNode, indent + "" ""); "," System.out.println(indent + ""NODE: "" + portfolioNode.getName() + ""/"" + portfolioNode.getUniqueId()); for (PortfolioNode childNode : portfolioNode.getChildNodes()) { print(childNode, indent + "" ""); "
1," Music.setSpinnerState(PlaylistBrowser.this, false); if( cursor != null && result) { switch ( action ) { case PLAY_SELECTION: Music.playAll(PlaylistBrowser.this, cursor, 0); break; "," Music.setSpinnerState(PlaylistBrowser.this, false); if( cursor != null && result) { switch ( action ) { case PLAY_SELECTION: Music.playAll(PlaylistBrowser.this, cursor, 0); break; "
1," Assert.assertNotNull(response, ""Response Message is null""); log.debug(response); try { return Double.parseDouble(((OMElement) response.getChildrenWithLocalName(""Value"").next()).getText()); "," Assert.assertNotNull(response, ""Response Message is null""); log.debug(response); try { return Double.parseDouble(((OMElement) response.getChildrenWithLocalName(""Value"").next()).getText()); "
1," this.flushBuffer(); String line = getWordTillColon( ""deleteoldrdn"" ); if ( line != null ) { return new LdifToken( LdifToken.MODDN_DELOLDRDN_SPEC, line, pos - line.length() + 1 ); "," this.flushBuffer(); String XXXXX = getWordTillColon( ""deleteoldrdn"" ); if ( XXXXX != null ) { return new LdifToken( LdifToken.MODDN_DELOLDRDN_SPEC, XXXXX, pos - XXXXX.length() + 1 ); "
1, this.location = location; this.wsdlLocation = wsdlURL; this.service = service; this.wsdlMap = wsdlMap; if (classLoader == null) { this.classLoader = Thread.currentThread().getContextClassLoader(); , this.location = location; this.wsdlLocation = wsdlURL; this.service = service; this.wsdlMap = wsdlMap; if (classLoader == null) { this.classLoader = Thread.currentThread().getContextClassLoader(); 
1, if (nodelet == savedSelectionAnchorTextNodelet && savedSelectionAnchorOffset > affectedAfterOffset) { savedSelectionAnchorOffset += offsetDifference; savedSelectionAnchorTextNodelet = newNodelet; , if (nodelet == savedSelectionAnchorTextNodelet && savedSelectionAnchorOffset > affectedAfterOffset) { savedSelectionAnchorOffset += offsetDifference; savedSelectionAnchorTextNodelet = newNodelet; 
0," Criteria crit = new Criteria(); crit.addEqualTo(""attachmentId"", attachmentId); return (Attachment)this.getPersistenceBrokerTemplate().getObjectByQuery(new QueryByCriteria(Attachment.class, crit)); ", int work = 1; if (!(node instanceof IExecTestCasePO)) { Iterator<INodePO> childIter = node.getNodeListIterator(); while (childIter.hasNext()) { work += getWorkForNode(childIter.next()); 
1, char c0 = typeString.charAt(0); char c1 = typeString.charAt(1); char c2 = typeString.charAt(2); char c3 = typeString.charAt(3); int type = (c0 << 24) | (c1 << 16) | (c2 << 8) | c3; return type; , char XXXXX = XXXXXString.charAt(0); char XXXXX = XXXXXString.charAt(1); char XXXXX = XXXXXString.charAt(2); char XXXXX = XXXXXString.charAt(3); int XXXXX = (XXXXX << 24) | (XXXXX << 16) | (XXXXX << 8) | XXXXX; return XXXXX; 
0," return new PlayerKilledEvent(event.getEntity(), event.getDrops(), event.getDroppedExp(), event.getNewExp(), event.getNewTotalExp(), event.getNewLevel(), event.getDeathMessage()); "," Validate.notNull(selectedUser, ""To provide save action for user, user must be already selected""); userService.updateUser(selectedUser); selectedUser = null; closeEditBanWindow(); "
1," final EObject domainElement = getSemanticElement(semanticAdapter); final int visualID; if (semanticHint == null) { visualID = GMFGraphVisualIDRegistry.getNodeVisualID(containerView, domainElement); "," final EObject XXXXX = getSemanticElement(semanticAdapter); final int visualID; if (semanticHint == null) { visualID = GMFGraphVisualIDRegistry.getNodeVisualID(containerView, XXXXX); "
0, JConstructor noArgCtor = null; for (JMethod ctor : classType.getMethods()) { if (ctor instanceof JConstructor) { if (ctor.getParams().size() == 0) { noArgCtor = (JConstructor) ctor; break; ," AssemblerGroup a = AssemblerGroup.create(); assertInstanceOf( AssemblerGroup.class, a ); assertEquals( null, a.assemblerFor( resource( ""ja:Anything"" ) ) ); checkFailsType( a, ""rdf:Resource"" ); "
0," for (int i = e.getIndex0(); i <= e.getIndex1(); i++) { AbstractDialogPage dialogPage = _pageList.getPage(i); addPage(dialogPage, (DefaultMutableTreeNode) _tree.getModel().getRoot(), true); ", final Matcher m = PAT_PHPBB_SIGNATURE.matcher(seq); if (m.find()) { String copyright = m.group(1); copyright = StringUtil.stripHTMLTrim(copyright); return copyright.contains(PHPBB_SIGNATURE); 
1," drawable.getContext().glDebugMessageInsert(GL2GL3.GL_DEBUG_SOURCE_APPLICATION_ARB, GL2GL3.GL_DEBUG_TYPE_OTHER_ARB, dbgTstId, GL2GL3.GL_DEBUG_SEVERITY_MEDIUM_ARB, dbgTstMsg); return true; "," drawable.getContext().glDebugMessageInsert(GL2GL3.GL_DEBUG_SOURCE_APPLICATION_ARB, GL2GL3.GL_DEBUG_TYPE_OTHER_ARB, dbgTstId, GL2GL3.GL_DEBUG_SEVERITY_MEDIUM_ARB, dbgTstMsg); return true; "
0," for (Face face : ListSequence.fromList(myEmbeddedGraph.getFaces())) { System.out.println(""face: ""); if (myEmbeddedGraph.isOuterFace(face)) { System.out.println(""this is outer face""); "," AttributeList attrList = new AttributeList(); try { long fsize = mpegFile.length(); Attribute sizeStr = new Attribute(ItemNode.SIZE, Long.toString(fsize)); attrList.add(sizeStr); "
1," String result = typeDefinition; Pattern pattern = Pattern.compile(""[^<>]*<(.*)>[^<>]*""); Matcher matcher = pattern.matcher(typeDefinition); if (matcher.find()) { result = matcher.group(1); "," String XXXXX = typeDefinition; Pattern XXXXX = Pattern.compile(""[^<>]*<(.*)>[^<>]*""); Matcher XXXXX = XXXXX.XXXXX(typeDefinition); if (XXXXX.find()) { XXXXX = XXXXX.group(1); "
1," this.banco = new Bradesco(); this.boleto = this.boleto.withBanco(this.banco); assertEquals(""23796316800000001002949060000000000300065800"", this.banco .geraCodigoDeBarrasPara(this.boleto)); "," this.banco = new Bradesco(); this.boleto = this.boleto.withBanco(this.banco); assertEquals(""23796316800000001002949060000000000300065800"", this.banco .geraCodigoDeBarrasPara(this.boleto)); "
0," Account account = Account.restoreAccountWithId(mContext, accountId); Policy oldPolicy = null; if (account.mPolicyKey > 0) { oldPolicy = Policy.restorePolicyWithId(mContext, account.mPolicyKey); "," sb.append("" public static String getAssetFormatIcon(String format) {\n"" + "" String result = (String) TYPE_IMAGES.get( format );\n"" + "" if (result == null) {\n"" + "" return \""rule_asset.gif\"";\n"" + "" "
1, try { Navajo other = o; ArrayList<Message> otherMsgs = other.getAllMessages(); ArrayList<Message> myMsgs = this.getAllMessages(); if (otherMsgs.size() != myMsgs.size()){ return false; , try { Navajo XXXXX = o; ArrayList<Message> XXXXXMsgs = XXXXX.getAllMessages(); ArrayList<Message> myMsgs = this.getAllMessages(); if (XXXXXMsgs.size() != myMsgs.size()){ return false; 
1," for (QuotaStorage quotaStorage : quota.getQuotaStorages()) { getCallsHandler().executeModification(""InsertQuotaLimitation"", getQuotaStorageParameterMap(quota.getId(), quotaStorage)); "," for (QuotaStorage quotaStorage : quota.getQuotaStorages()) { getCallsHandler().executeModification(""InsertQuotaLimitation"", getQuotaStorageParameterMap(quota.getId(), quotaStorage)); "
1, boolean result = javaCode() == Bytecodes._tableswitch; if (result == false) return false; int lo = lowKey(); int hi = highKey(); if (hi < lo) return false; int i = hi - lo - 1 ; while (i-- > 0) { , boolean XXXXX = javaCode() == Bytecodes._tableswXXXXXtch; XXXXXf (XXXXX == false) return false; XXXXXnt XXXXX = XXXXXwKey(); XXXXXnt XXXXX = XXXXXghKey(); XXXXXf (XXXXX < XXXXX) return false; XXXXXnt XXXXX = XXXXX - XXXXX - 1 ; wXXXXXle (XXXXX-- > 0) { 
0," String scalaHome = System.getProperty(""scala.home""); if (scalaHome == null) { scalaHome = System.getenv(""SCALA_HOME""); if (scalaHome != null) { System.setProperty(""scala.home"", scalaHome); "," this.life = -1; if (this.life <= 0) { this.unSpawn(); ex = new Explosion(Prototyp.random.nextInt(2)+IEntity.EXPLOSION1); ex.spawn(this.position,speedNull,Prototyp.frontground); return true; "
1," thrown.expectMessage(UnsupportedOperationException.class, ""Reducer cannot call getInputSplit()""); new MockReporter(MockReporter.ReporterType.Reducer, null, null).getInputSplit(); "," thrown.expectMessage(UnsupportedOperationException.class, ""Reducer cannot call getInputSplit()""); new MockReporter(MockReporter.ReporterType.Reducer, null, null).getInputSplit(); "
0," char[] src = input.toCharArray(); boolean[] transformed = new boolean[1]; transformed[0] = false; char[] dest = unshaped(src, transformed); if (transformed[0]) { return new String(dest); ", DDMStorageLinkModelImpl ddmStorageLinkModelImpl = this; ddmStorageLinkModelImpl._originalClassPK = ddmStorageLinkModelImpl._classPK; ddmStorageLinkModelImpl._setOriginalClassPK = false; 
0," boolean added = false; ATermAppl name = (ATermAppl) axiom.getArgument( 0 ); TermDefinition td = getTD( name ); if( td == null ) { td = new TermDefinition(); termhash.put( name, td ); ", action = new GetConfigurationAction(); action.setModelToUpdate(new ComputerSystem()); helper = new ActionTestHelper(); protocolsessionmanager = helper.getProtocolSessionManager(); 
0, IndexCondition ic = (IndexCondition)c; if (ic.getOperator() == ComparisonOperator.EQ) return QueryMetaData.ORACCESS.clone(c); else { QueryMetaData qmd = QueryMetaData.MISTERY.clone(c); return qmd; ," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (name: ""); result.append(name); result.append(')'); return result.toString(); "
0," Rectangle r = f.getBounds(); f.setBounds(newX, newY, newWidth, newHeight); SwingUtilities.computeUnion(newX, newY, newWidth, newHeight, r); f.getParent().repaint(r.x, r.y, r.width, r.height); "," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; "
0," createModel(); reqif = openReqif(); if (!getEditingDomain().getResourceSet().getResources().isEmpty()) { ReqifMainForm form = new ReqifMainForm(getContainer(), this); addPage(form.getForm()); "," Scale scale = ( Scale )widget; String value = WidgetLCAUtil.readPropertyValue( scale, PROP_SELECTION ); if( value != null ) { scale.setSelection( NumberFormatUtil.parseInt( value ) ); "
1," return !Collections2.filter(conditions, new Predicate<ExpFactorQueryCondition>() { public boolean apply(@Nullable ExpFactorQueryCondition input) { return input != null && !input.isAnything(); "," return !Collections2.filter(conditions, new Predicate<ExpFactorQueryCondition>() { public boolean apply(@Nullable ExpFactorQueryCondition input) { return input != null && !input.isAnything(); "
1," try { KeyStore trusted = KeyStore.getInstance(""BKS""); InputStream in = context.getResources().openRawResource(R.raw.certstore); try { trusted.load(in, mKeystorePassword.toCharArray()); "," try { KeyStore XXXXX = KeyStore.getInstance(""BKS""); InputStream XXXXX = context.getResources().openRawResource(R.raw.certstore); try { XXXXX.load(XXXXX, mKeystorePassword.toCharArray()); "
0," Gate gate = this.arg(0, ARGate.get()); if (gate == null) return; this.msg(""<i>Gate deleted: ""+gate.getIdNameStringLong()); gate.setOpen(false); gate.fillContent(Material.AIR); gate.detach(); "," if (value.length() > 0) { value = value.replaceAll(""([\\\\,;])"", ""\\\\$1""); value = value.replaceAll(""\\n"", ""\\\\n""); output.append(prefix).append(':').append(value).append('\n'); "
0, if (dbType != null) { DatabaseType type = DatabaseType.valueOf(dbType.toUpperCase().trim()); binaryTableManipulation.databaseType = type; stringsTableManipulation.databaseType = type; ," boolean validated = true; HornetQSecurityManager sm = server.getSecurityManager(); if (sm != null && server.getConfiguration().isSecurityEnabled()) { validated = sm.validateUser(login, passcode); "
0," if (name.length() == 0) return false; if (PathMacros.getInstance().getSystemMacroNames().contains(name)) return false; return PathMacrosCollector.MACRO_PATTERN.matcher(""$"" + name + ""$"").matches(); ", graphAccess = TcManager.getInstance(); graphAccess.unbindWeightedTcProvider(weightedA); graphAccess.unbindWeightedTcProvider(weightedA1); graphAccess.unbindWeightedTcProvider(weightedBlight); 
1," String name = var.getLocalPart(); if (""databaseId"".equals(name)) return databaseId; if (""channel"".equals(name)) return channel; if (""program"".equals(name)) return program; return null; "," String name = var.getLocalPart(); if (""databaseId"".equals(name)) return databaseId; if (""channel"".equals(name)) return channel; if (""program"".equals(name)) return program; return null; "
1," expectLog(""testLocal"", """"); Object ref = project.getReferences().get(""local""); assertNotNull(""ref is not null"", ref); assertEquals(""org.example.types.TypedefTestType"", ref.getClass().getName()); "," expectLog(""testLocal"", """"); Object XXXXX = project.getReferences().get(""local""); assertNotNull(""XXXXX is not null"", XXXXX); assertEquals(""org.example.types.TypedefTestType"", XXXXX.getClass().getName()); "
0, if (multipleSampleForReferencesTable.getSelection() instanceof IStructuredSelection) { removeMultipleSampleForReferencesTable((IStructuredSelection) multipleSampleForReferencesTable.getSelection()); ," this.image = image; this.bkg = bkg; this.writeAs = writeAs; this.name = ""Img"" + (currentNumber++); if (image.getColorModel().hasAlpha() && (bkg == null)) { maskName = name + ""Mask""; "
1, switch (getMatchType()) { case IS: switch (getPluginStatus()) { case PREMIUM: return _GUI._.FilterRule_toString_premium(); case AUTOCAPTCHA: return _GUI._.FilterRule_toString_autocaptcha(); , switch (getMatchType()) { case IS: switch (getPluginStatus()) { case PREMIUM: return _GUI._.FilterRule_toString_premium(); case AUTOCAPTCHA: return _GUI._.FilterRule_toString_autocaptcha(); 
0," String seed = IdGenerator.getSeedFromId(id); if (seed != null) { BitArrayBin bab = map.get(seed); if (bab != null) { long index = IdGenerator.getSequenceFromId(id); bab.setBit(index, false); ", boolean found = false; Iterator<FuzzyValue> it = fuzzyValueList.iterator(); FuzzyValue fv = null; while ( !found && it.hasNext() ) { fv = it.next(); if (fv.getType().equals(fs)){ found = true; 
0, IndexItem result = null; if (current != null) { current = (IndexItem) refreshEntry(current); if (current.getNextItem() >= 0) { try { result = indexManager.getIndex(current.getNextItem()); ," boolean answer = false; String seed = IdGenerator.getSeedFromId(id); if (seed != null) { BitArrayBin bab = map.get(seed); if (bab == null) { bab = new BitArrayBin(auditDepth); map.put(seed, bab); "
0," buf.append(""CREATE VIEW ""); this.name.output(buf); if (this.columns.size() > 0) { buf.append("" (""); for (int i = 0, size = this.columns.size(); i < size; ++i) { if (i != 0) { buf.append("", ""); "," grabLayers = """"; grabStyles = """"; int countLayers = 0; if (Main.pref.getBoolean(""cadastrewms.layerWater"", true)) { grabLayers += LAYER_WATER + "",""; grabStyles += STYLE_WATER + "",""; countLayers++; "
1, int result = maxEntries; result = 31 * result + (strategy != null ? strategy.hashCode() : 0); result = 31 * result + (threadPolicy != null ? threadPolicy.hashCode() : 0); return result; , int XXXXX = maxEntries; XXXXX = 31 * XXXXX + (strategy != null ? strategy.hashCode() : 0); XXXXX = 31 * XXXXX + (threadPolicy != null ? threadPolicy.hashCode() : 0); return XXXXX; 
0," ImageProcessor ip2 = new FloatProcessor(width, height, new float[width*height], getColorModel()); ip2.setMinAndMax(getMin(), getMax()); ip2.setInterpolationMethod(interpolationMethod); return ip2; "," monitor.beginTask("""", progressSize); for (int count = 0; count < progressSize; count++) { SubProgressMonitor mon = new SubProgressMonitor(monitor, 1); mon.beginTask("""", 100); mon.done(); "
1," super(Outcome.DrawCard); this.staticText = ""Search your library for an Island card, a Swamp card, and a Mountain card. Reveal those cards and put them into your hand. Then shuffle your library""; "," super(Outcome.DrawCard); this.staticText = ""Search your library for an Island card, a Swamp card, and a Mountain card. Reveal those cards and put them into your hand. Then shuffle your library""; "
0, switch (featureID) { case SclPackage.TPHYS_CONN__P: getP().clear(); getP().addAll((Collection<? extends TP>)newValue); return; case SclPackage.TPHYS_CONN__TYPE: setType((String)newValue); return; ," boolean result = false; if( message != null && title != null ){ JOptionPane.showInternalMessageDialog(_mainFrame.getContentPane(), message, title, messageType, icon); result = true; "
1, String sourceName = mapping.getSource().getName(); IPath path = new Path(relativePath.getText()); if (path.isEmpty() || UP.equals(path.segment(0))) { path = new Path(sourceName); , String XXXXX = mapping.getSource().getName(); IPath XXXXX = new Path(relativePath.getText()); if (XXXXX.isEmpty() || UP.equals(XXXXX.segment(0))) { XXXXX = new Path(XXXXX); 
0," if (visualItem .isStatus(Subset.HIGHLIGHTED, Status.FULL, Status.PARTIAL)) { CSS.setZIndex(tickElementID, Z_INDEX_HIGHLIGHTED); timeLineEvent.setTickZIndex("""" + Z_INDEX_HIGHLIGHTED); "," final Context con = getContext(); try{ mDb = mDbHelper.openDatabase(getContext(), DATABASE_NAME, null, DB_VERSION); mLogger.info(""RssContentProvider.onCreate(): Opened a database""); "
1," EvaluationMetric.set_numSentences(0); EvaluationMetric.set_refsPerSen(1); EvaluationMetric.set_refSentences(null); BLEU bleu = new BLEU(); Assert.assertEquals(bleu.get_metricName(), ""BLEU""); "," EvaluationMetric.set_numSentences(0); EvaluationMetric.set_refsPerSen(1); EvaluationMetric.set_refSentences(null); BLEU XXXXX = new BLEU(); Assert.assertEquals(XXXXX.get_metricName(), ""BLEU""); "
0," ExecStatus status = new ExecStatus(); StringTokenizer st = new StringTokenizer(query); if(st.countTokens() < 2) { status.setMessage(""Syntax error : Please check 'desc' syntax.""); return status; "," if (sb == null) sb = new StringBuilder(); else sb.setLength(0); sb.append(""{""); if(input.length > 0) { for (int i=0; i < input.length - 1; i++) { sb.append(input[i].getRealLabel()); sb.append("", ""); "
0," Verify.assertThrows(UnsupportedOperationException.class, new Runnable() { public void run() { UnmodifiableMapTest.this.unmodifiableMap.putAll(Maps.mutable.<String, List<String>>of()); "," return new ISearchService () { public ISearchQuery createSearchElementQuery(Scope indexScope, ICElement[] searchScope, ISourceReference object, int limitTo) { return new NullSearchQuery(); "
0," SharedPreferences.Editor editor = PreferenceManager.getDefaultSharedPreferences(context).edit(); editor.putBoolean(MessagingPreferenceActivity.NOTIFICATION_ENABLED, enabled); editor.apply(); ", Matcher matcher = EquipmentRequest.STICKER_PATTERN.matcher( responseText ); for ( int slot = EquipmentManager.STICKER1; slot <= EquipmentManager.STICKER3; ++slot ) { if ( !matcher.find() ) { return; 
1," super(428,55, new int[] {55,65,48,22,454,460,461,167,762,200,541,224,225,239,226,227,228,255,543,470,471,472,240,202,947,206,231,223,207,106,348,349,107,350,351,691,667,875,876,864,873,874,0 "," super(428,55, new int[] {55,65,48,22,454,460,461,167,762,200,541,224,225,239,226,227,228,255,543,470,471,472,240,202,947,206,231,223,207,106,348,349,107,350,351,691,667,875,876,864,873,874,0 "
0, int selection = jComboBoxSetColorBy.getSelectedIndex(); if (selection == 0) setColorByFeature = null; else setColorByFeature = features.get(selection-1); caller.fireAction(COLOR_FEATURE_CHANGED); ," DebugGraphicsInfo info = info(); if (debugLog()) { info().log(toShortString() + "" Filling arc: "" + new Rectangle(x, y, width, height) + "" startAngle: "" + startAngle + "" arcAngle: "" + arcAngle); "
1," if (!statementEventListeners.isEmpty()){ StatementEvent event = new StatementEvent(this,statement); for (StatementEventListener l : statementEventListeners) { l.statementClosed(event); "," if (!statementEventListeners.isEmpty()){ StatementEvent XXXXX = new StatementEvent(this,statement); for (StatementEventListener l : statementEventListeners) { l.statementClosed(XXXXX); "
0," if (this.getStrokeColBuff() != null && this.getVertices().length == (this.getStrokeColBuff().limit()/4)){ ToolsBuffers.updateStrokeColorBuffer(this.getStrokeColBuff(), r, g, b, a); "," String oldApName = apName; apName = newApName; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SclPackage.TCONNECTED_AP__AP_NAME, oldApName, apName)); "
0, MultimediaHome multimediaHome = null; Multimedia multimedia = null; try{ multimediaHome = (MultimediaHome)IDOLookup.getHome(Multimedia.class); multimedia = multimediaHome.getByProduct(product); ," int maxNameLength = 0; int maxArgsLength = 0; for (Command cmd : commands) { maxNameLength = Math.max(maxNameLength, cmd.name.length()); maxArgsLength = Math.max(maxArgsLength, cmd.args.length()); "
0," return new StringBuilder(CriteriaSupportUtils.findDynName(p.getClass().getSimpleName())).append(""("") .append(p.getPropertyPath()).append("", "").append(p.getValue().getValue()).append("")"").toString(); ", this.aggregateBuildIssues = aggregateBuildIssues; this.aggregationBuildStatus = aggregationBuildStatus; JiraSite site = JiraSite.get(build.getProject()); if (site == null) { return; 
1," pageMap = new InputPageMap(); List leaves = getLeafWidgets(); for (Iterator iter = leaves.iterator(); iter.hasNext();) { InputPage page = (InputPage) iter.next(); pageMap.put(page.getField(), page); "," XXXXXMap = new InputPageMap(); List XXXXX = getLeafWidgets(); for (Iterator XXXXX = XXXXX.XXXXXator(); XXXXX.hasNext();) { InputPage XXXXX = (InputPage) XXXXX.next(); XXXXXMap.put(XXXXX.getField(), XXXXX); "
0," if (hibernateEnums.remove(hibernateEnum)) { hibernateEnum.deleteObserver(this); setChanged(); notifyObservers(new SGObjectRemovedFromListModification(""hibernateEnums"", hibernateEnum)); "," List<String> candidates = fetchCandidates("":""); assertNotNull(candidates); assertEquals(Arrays.asList(""operation-no-properties"", ""operation-properties-a-b"", ""operation-property-a""), candidates); "
1, final ByteArrayInputStream bis = new ByteArrayInputStream(pData.getBytes()); return new ServletInputStream() { @Override public int read() throws IOException { return bis.read(); , final ByteArrayInputStream XXXXX = new ByteArrayInputStream(pData.getBytes()); return new ServletInputStream() { @Override public int read() throws IOException { return XXXXX.read(); 
1," String[] split = Pattern.compile(sep, Pattern.LITERAL).split(version); StringBuilder sb = new StringBuilder(); for (String s : split) { sb.append(String.format(""%"" + maxWidth + 's', s)); "," String[] split = Pattern.compile(sep, Pattern.LITERAL).split(version); StringBuilder XXXXX = new StringBuilder(); for (String s : split) { XXXXX.append(String.format(""%"" + maxWidth + 's', s)); "
1, final String prefix = message.getString(PREFIX); final String postfix = message.getString(POSTFIX); String spotPrefix = message.getString(SPOT_PREFIX); if (spotPrefix == null) { spotPrefix = prefix; , final String XXXXX = message.getString(PREFIX); final String XXXXX = message.getString(POSTFIX); String XXXXX = message.getString(SPOT_PREFIX); if (XXXXX == null) { XXXXX = XXXXX; 
0, this.margin = margin; Enumeration e = v.elements(); while (e.hasMoreElements()) { Object obj = e.nextElement(); if (obj instanceof ColumnGroup) { ((ColumnGroup) obj).setColumnMargin(margin); ," resolveDelegationSpecifierList(jetClass, descriptor, descriptor.getUnsubstitutedPrimaryConstructor(), descriptor.getScopeForSupertypeResolution(), descriptor.getScopeForMemberResolution()); "
0," ReplaceAtom A = new ReplaceAtom(thisPeer, handle, newValue, newType, other); thisPeer.getActivityManager().initiateActivity(A); try { ActivityResult R = A.getFuture().get(); maybeThrow(R); "," super(AcceleoProfilerEditorMessages.getString(""ProfilerSortAction.text""), SWT.TOGGLE); setImageDescriptor(SORT_IMG_DESC); this.sortStatus = sortStatus; this.selectionViewer = selectionViewer; "
1," MavenModuleSetBuild job = mock(MavenModuleSetBuild.class); when(job.getResult()).thenReturn(""SUCCESS""); boolean isSuccessful = HudsonXmlHelper.isSuccessful(job); assertTrue(isSuccessful); "," MavenModuleSetBuild XXXXX = mock(MavenModuleSetBuild.class); when(XXXXX.getResult()).thenReturn(""SUCCESS""); boolean XXXXX = HudsonXmlHelper.XXXXX(XXXXX); assertTrue(XXXXX); "
0, String tempDirName = System.getProperty(JAVA_IO_TMPDIR); if (tempDirName == null) { throw new SystemFailureException(JcrI18n.tempDirectorySystemPropertyMustBeSet.text(JAVA_IO_TMPDIR)); ," return Comparing.strEqual(oldQName, myAspectJSyntaxPattern) || Comparing.strEqual(oldQName + ""..*"", myAspectJSyntaxPattern) || Comparing.strEqual(oldQName + "".*"", myAspectJSyntaxPattern); "
0, analyzer.register(this); analyzer.init(g); for (Module m : g.modules) { analyzer.process(m); for (Production p : m.productions) { if ((! p.isFull()) || analyzer.isProcessed(p.qName)) { continue; ," String uri1 = ""one/two/""; String uri2 = ""/three/four/""; String expected = ""/one/two/three/four""; String actual = StringUriUtilities.concatUris(uri1, uri2); assertEquals(expected, actual); "
1," String oldDialect = dialect; dialect = newDialect; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, ProcessPackage.CONSTRAINT_TYPE__DIALECT, oldDialect, dialect)); "," String XXXXX = dialect; dialect = newDialect; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, ProcessPackage.CONSTRAINT_TYPE__DIALECT, XXXXX, dialect)); "
0," testAllowedOperations(""ejbTimeout""); try { String name = (String) timer.getInfo(); TimerSync timerSync = (TimerSync) ejbContext.lookup(""TimerSyncBeanBusinessRemote""); timerSync.countDown(name); "," putValue(NAME, tr(""Update changeset"")); putValue(SMALL_ICON,ImageProvider.get(""dialogs/changeset"",""updatechangeset"")); putValue(SHORT_DESCRIPTION, tr(""Update the changeset from the OSM server"")); "
0," if (dataConfig == null) { String message = Logging.getMessage(""nullValue.DataConfigurationIsNull""); Logging.logger().severe(message); throw new IllegalArgumentException(message); "," return ((OutputWriter) op).toString() + "" inputs [ "" + ((OutputWriter) right).toString() + "" "" + ((OutputWriter) middle).toString() + "" "" + ((OutputWriter) left).toString() + "" ]""; "
0," final GreeterEntity greeter = em.find(GreeterEntity.class, name); String response; if (greeter == null) { response = ""Hello "" + name; log.info(response); em.persist(new GreeterEntity(name)); "," selenium.click(increaseCounterButton); waitGui.until(textEquals.locator(outputDiv).text(""1"")); selenium.click(increaseCounterButton); waitGui.until(textEquals.locator(outputDiv).text(""2"")); "
0, Project project = e.getData(PlatformDataKeys.PROJECT); e.getPresentation().setEnabled(project != null && !CommittedChangesCache.getInstance(project).isRefreshingIncomingChanges()); ," if (isEntityAlive()) { lastActiveTime = timeSinceIgnited; int i = getCreeperState(); if (i > 0 && timeSinceIgnited == 0) { worldObj.playSoundAtEntity(this, ""random.fuse"", 1.0F, 0.5F); "
0, if (_theReaper == null) { ActivityReaper._theReaper = new ActivityReaper(); _reaperThread = new ReaperThread(ActivityReaper._theReaper); _reaperThread.setDaemon(true); _reaperThread.start(); , AggregationCellHandle cell = info.getAggregationCell( ); if ( cell != null ) { if ( cell.getAggregationOnRow( ) == null && cell.getAggregationOnColumn( ) == null ) { return false; 
1," if (artefact.getLevel() != null) { if (_level != null) { if (_level != artefact.getLevel()) { if (logger.isLoggable(Level.WARNING)) { logger.warning(""Inconsistent data in NodeCompound""); "," if (artefact.getLevel() != null) { if (_level != null) { if (_level != artefact.getLevel()) { if (logger.isLoggable(Level.WARNING)) { logger.warning(""Inconsistent data in NodeCompound""); "
1, Object result = _primary.findContentDeserializer(am); if (result == null || result == JsonDeserializer.None.class || result == NoClass.class) { result = _secondary.findContentDeserializer(am); , Object XXXXX = _primary.findContentDeserializer(am); if (XXXXX == null || XXXXX == JsonDeserializer.None.class || XXXXX == NoClass.class) { XXXXX = _secondary.findContentDeserializer(am); 
1," namedActions = new HashMap<String, Action>(); for (String name : r.namedActions.keySet()) { ActionAST ast = r.namedActions.get(name); namedActions.put(name, new Action(factory, ast)); "," namedActions = new HashMap<String, Action>(); for (String name : r.namedActions.keySet()) { ActionAST XXXXX = r.namedActions.get(name); namedActions.put(name, new Action(factory, XXXXX)); "
1," ForkOptions options = spec.getCompileOptions().getForkOptions(); return new DaemonForkOptions(options.getMemoryInitialSize(), options.getMemoryMaximumSize(), options.getJvmArgs()); "," ForkOptions XXXXX = spec.getCompileOptions().getForkOptions(); return new DaemonForkOptions(XXXXX.getMemoryInitialSize(), XXXXX.getMemoryMaximumSize(), XXXXX.getJvmArgs()); "
1," for (int row = 1; row <= boardSize; row++) { for (int col = 1; col <= boardSize; col++) { setValue(row, col, getValue(row, col) + weightUpdates[(row - 1) * boardSize + (col - 1)]); "," for (int row = 1; row <= boardSize; row++) { for (int col = 1; col <= boardSize; col++) { setValue(row, col, getValue(row, col) + weightUpdates[(row - 1) * boardSize + (col - 1)]); "
1," this.flushBuffer(); String line = getWordTillColon( ""newsuperior"" ); if ( line != null ) { return new LdifToken( LdifToken.MODDN_NEWSUPERIOR_SPEC, line, pos - line.length() + 1 ); "," this.flushBuffer(); String XXXXX = getWordTillColon( ""newsuperior"" ); if ( XXXXX != null ) { return new LdifToken( LdifToken.MODDN_NEWSUPERIOR_SPEC, XXXXX, pos - XXXXX.length() + 1 ); "
0, if(node == null) return; doubleTree(node.leftChild); doubleTree(node.rightChild); Node temp = node.leftChild; node.leftChild = new Node(node.number); node.leftChild.leftChild = temp; , if (target == null) return drop(); if (command.getContext().isAlreadyTraversed(target)) return drop(); if (target.getInternalStatus() == ORecordElement.STATUS.NOT_LOADED) try { target.reload(); 
0," Handler children[] = coll.getHandlers(); int originalCount = children.length; for (int i = 0, n = children.length; i < n; i++) { Handler child = children[i]; LOG.debug(""Child handler {", super.onCreate(savedInstanceState); Intent intent = getIntent(); Bundle extras = intent.getExtras(); if (extras != null) extra_text = extras.getString(Intent.EXTRA_TEXT); resumeService(); 
0," URI resourceURI = EditUIUtil.getURI(getEditorInput()); Exception exception = null; Resource resource = null; try { resource = editingDomain.getResourceSet().getResource(resourceURI, true); ", if (fReverseModeEnabled && doCanResume(context)) { ICommand<MIInfo> cmd = null; if (context instanceof IContainerDMContext) { cmd = fCommandFactory.createMIExecReverseContinue(context); 
0," String oldClip = clip; clip = newClip; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_CLIP_PATH_ELEMENT__CLIP, oldClip, clip)); "," log.debug(""Nuevo nacionalidad""); Nacionalidad nacionalidad = new Nacionalidad(); modelo.addAttribute(Constantes.ADDATTRIBUTE_NACIONALIDAD, nacionalidad); return Constantes.PATH_NACIONALIDAD_NUEVO; "
1, Hdr hdr = (Hdr) wordmlPackage.getDocumentModel().getSections().get(sectionNumber-1) .getHeaderFooterPolicy() .getFirstHeader().getJaxbElement(); return XmlUtils.marshaltoW3CDomDocument(hdr); , Hdr XXXXX = (Hdr) wordmlPackage.getDocumentModel().getSections().get(sectionNumber-1) .getHeaderFooterPolicy() .getFirstHeader().getJaxbElement(); return XmlUtils.marshaltoW3CDomDocument(XXXXX); 
0," DebugGraphics debugGraphics; DebugGraphicsInfo info = info(); JFrame debugFrame; if (info.debugFrame == null) { info.debugFrame = new JFrame(); info.debugFrame.setSize(500, 500); ", if ( backtracking>0 ) return; ParseTree parentRuleNode = (ParseTree)callStack.peek(); ParseTree ruleNode = create(ruleName); parentRuleNode.addChild(ruleNode); callStack.push(ruleNode); 
0, Equipment eqI = null; Spell aSpell = null; Ability aFeat = null; PCClass aClass = null; PCTemplate aTemp = null; Skill aSkill = null; if (anObj instanceof Equipment) { eqI = (Equipment) anObj; ," super.setResponseResource(new Resource[] { new ClassPathResource(""janus/janus-response-consumerkey3-entityid.json""), new ClassPathResource(""janus/janus-response-consumerkey3-metadata.json"") "
1," for (ItemStack i : player.getInventory().getContents()) { if (i == null || i.getType().equals(Material.AIR)) continue; player.getWorld().dropItemNaturally(player.getLocation(), i); "," for (ItemStack i : player.getInventory().getContents()) { if (i == null || i.getType().equals(Material.AIR)) continue; player.getWorld().dropItemNaturally(player.getLocation(), i); "
0," try { Map<String, Object> m = new HashMap<String, Object>(); m.put(""x"", new Integer(e.getX())); m.put(""y"", new Integer(e.getY())); myComponent.performTipiEvent(""onMouseExited"", m, te.isSync()); "," String label = ((AtomicNode)object).getComponentRef(); return label == null || label.length() == 0 ? getString(""_UI_AtomicNode_type"") : getString(""_UI_AtomicNode_type"") + "" "" + label; "
1," LinkedHashMap<String, String> dates = dao.getDates(); assertEquals(2, dates.size()); assertEquals(""Sun June 10"", dates.get(""10-Jun-2012"")); assertEquals(""Mon June 11"", dates.get(""11-Jun-2012"")); "," LinkedHashMap<String, String> dates = dao.getDates(); assertEquals(2, dates.size()); assertEquals(""Sun June 10"", dates.get(""10-Jun-2012"")); assertEquals(""Mon June 11"", dates.get(""11-Jun-2012"")); "
0," int dot = name.indexOf('.'); String firstName = name; String lastName = null; if (dot != -1) { firstName = name.substring(0, dot); lastName = name.substring(dot + 1, name.length()); "," AWSDescribeImagesOptions options = new AWSDescribeImagesOptions(); options.imageIds(""test""); assertEquals(options.buildFormParameters().get(""ImageId.1""), Collections.singletonList(""test"")); "
1," cam = AxisCamera.getInstance(""192.168.0.90""); dr = new PWMdrive(); ev = new Elevator(); st = new Shooter(); Watchdog.getInstance().setEnabled(false); tx.dsWrite(""The dog is dead. Cheer!"", 1); "," cam = AxisCamera.getInstance(""192.168.0.90""); dr = new PWMdrive(); ev = new Elevator(); st = new Shooter(); Watchdog.getInstance().setEnabled(false); tx.dsWrite(""The dog is dead. Cheer!"", 1); "
0," if (Thread.currentThread().isInterrupted()) throw new RuntimeException(""interrupt""); if (!hasNext()) throw new NoSuchElementException(); double result = next; next += step; return result; ", if (button.getId() == this.getBackButton().getId()) { this.index--; button.setActive(this.index > 0); this.getNextButton().setActive(this.index < this.pages); this.updateContents(); 
0, TestSuite testSuite = new TestSuite(); testSuite.addTest(Login52xTests.suite()); testSuite.addTest(TagsTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; ," TypedValue tv = a.peekValue(index); float v = defaultValue; if (tv != null) { boolean vIsFraction = tv.type == TypedValue.TYPE_FRACTION; v = vIsFraction ? tv.getFraction(1.0f, 1.0f) : tv.getFloat(); "
1, ATEToken token = window.getCurrentToken(); return token != null && (token.type == ATESyntaxLexer.TOKEN_SINGLE_QUOTE_STRING || token.type == ATESyntaxLexer.TOKEN_DOUBLE_QUOTE_STRING); , ATEToken XXXXX = window.getCurrentToken(); return XXXXX != null && (XXXXX.type == ATESyntaxLexer.TOKEN_SINGLE_QUOTE_STRING || XXXXX.type == ATESyntaxLexer.TOKEN_DOUBLE_QUOTE_STRING); 
0," try { BufferedReader reader = new BufferedReader(new FileReader(file)); String line; while ((line = reader.readLine()) != null) { if (line.matches(""^def.*test.*():"")) { reader.close(); return true; "," ContentSource returned = _htmlFile.getScheduledOverrideVersion(); if (_wodFile.getScheduledOverrideVersion() != returned) { logger.warning(""Inconsistent data in scheduled version""); "
1, if (event instanceof CDOViewInvalidationEvent) { CDOViewInvalidationEvent e = (CDOViewInvalidationEvent)event; checkDetachedSelection(e.getDetachedObjects()); viewInvalidated(e.getDirtyObjects()); , if (XXXXXvXXXXXnt instancXXXXXof CDOViXXXXXwInvalidationEvXXXXXnt) { CDOViXXXXXwInvalidationEvXXXXXnt XXXXX = (CDOViXXXXXwInvalidationEvXXXXXnt)XXXXXvXXXXXnt; chXXXXXckDXXXXXtachXXXXXdSXXXXXlXXXXXction(XXXXX.gXXXXXtDXXXXXtachXXXXXdObjXXXXXcts()); viXXXXXwInvalidatXXXXXd(XXXXX.gXXXXXtDirtyObjXXXXXcts()); 
1," if(set instanceof RowDataSet) return new DataGrid(composite, set, DataGrid.NONE); else if(set instanceof TableDataSet) return new DataGrid(composite, set, DataGrid.FULL_UPDATE); return null; "," if(set instanceof RowDataSet) return new DataGrid(composite, set, DataGrid.NONE); else if(set instanceof TableDataSet) return new DataGrid(composite, set, DataGrid.FULL_UPDATE); return null; "
0," String params = ""?query="" + searchRequest.getQuery() + ""&index="" + searchRequest.getIndex() + ""&numResults="" + searchRequest.getNumResults(); return SEARCH_URL_BASE + ""/"" + params; ", if (this.termsAndConditionsService == null) { termsAndConditionsService = (TermsAndConditionsService) PortalContainer.getInstance() .getComponentInstanceOfType(TermsAndConditionsService.class); 
0," BufferedImage texture = createBufferedImage(location); TexturePaint paint = new TexturePaint(texture, new Rectangle(0, 0, texture.getWidth(), texture.getHeight())); return paint; ", String icuValue = pluralRules.select(number); Plural retVal = null; for(GwtPlural plural : GwtPlural.values()) { if(plural.getIcuValue().equals(icuValue)) { retVal = plural; break; 
1," Fraction c = new Fraction(1, 2); String expected = ""1 / 2""; String actual = properFormat.format(c); assertEquals(expected, actual); actual = improperFormat.format(c); assertEquals(expected, actual); "," FraXXXXXtion XXXXX = new FraXXXXXtion(1, 2); String expeXXXXXted = ""1 / 2""; String aXXXXXtual = properFormat.format(XXXXX); assertEquals(expeXXXXXted, aXXXXXtual); aXXXXXtual = improperFormat.format(XXXXX); assertEquals(expeXXXXXted, aXXXXXtual); "
1, if (resolvedDeclaringType == null) { resolvedDeclaringType = node.getDeclaringClass(); if (resolvedDeclaringType == null) { resolvedDeclaringType = VariableScope.OBJECT_CLASS_NODE; , if (resolvedDeclaringType == null) { resolvedDeclaringType = node.getDeclaringClass(); if (resolvedDeclaringType == null) { resolvedDeclaringType = VariableScope.OBJECT_CLASS_NODE; 
1," DHPublicKeyParameters pub = (DHPublicKeyParameters)pubKey; if (!pub.getParameters().equals(dhParams)) { throw new IllegalArgumentException(""Diffie-Hellman public key has wrong parameters.""); "," DHPublicKeyParameters XXXXX = (DHPublicKeyParameters)XXXXXKey; if (!XXXXX.getParameters().equals(dhParams)) { throw new IllegalArgumentException(""Diffie-Hellman XXXXXlic key has wrong parameters.""); "
1," String label = ((ParallelGateway) object).getName(); return label == null || label.length() == 0 ? getString(""_UI_ParallelGateway_type"") : getString(""_UI_ParallelGateway_type"") + "" "" + label; "," String XXXXX = ((ParallelGateway) object).getName(); return XXXXX == null || XXXXX.length() == 0 ? getString(""_UI_ParallelGateway_type"") : getString(""_UI_ParallelGateway_type"") + "" "" + XXXXX; "
1," MonthDay test = new MonthDay(9, 6); MonthDay result = test.withField(DateTimeFieldType.monthOfYear(), 10); assertEquals(new MonthDay(9, 6), test); assertEquals(new MonthDay(10, 6), result); "," MonthDay XXXXX = new MonthDay(9, 6); MonthDay XXXXX = XXXXX.withField(DateTimeFieldType.monthOfYear(), 10); assertEquals(new MonthDay(9, 6), XXXXX); assertEquals(new MonthDay(10, 6), XXXXX); "
0," try { if(first != null) new XQuery(first).execute(context); final String result = new XQuery(second).execute(context); assertEquals(expected.replaceAll(""\"""", ""'""), result.replaceAll(""\"""", ""'"")); "," switch (value) { case 0: return ZERO; case 1: return ONE; case 2: return TWO; case 4: return FOUR; case 8: return EIGHT; default: throw new IllegalArgumentException(""Illegal Byte Size: "" + value); "
1," OMFactory fac = OMAbstractFactory.getOMFactory(); OMElement elem = fac.createOMElement(new QName(""http: String badText = ""this char is bad - "" + '\10'; elem.setText(badText); return elem; "," OMFactory XXXXX = OMAbstractFactory.getOMFactory(); OMElement XXXXX = XXXXX.createOMElement(new QName(""http: String XXXXX = ""this char is bad - "" + '\10'; XXXXX.setText(XXXXX); return XXXXX; "
0, RangeCriterion rangeCriterion = new RangeCriterion(); rangeCriterion.setProperty(property); rangeCriterion.setLowerLimit(lowerLimit); rangeCriterion.setUpperLimit(upperLimit); return rangeCriterion; , if (requestTarget instanceof ListenerInterfaceRequestHandler) { ListenerInterfaceRequestHandler target = (ListenerInterfaceRequestHandler) requestTarget; return isBrixPage(target.getPage()) ; 
1, int xp = base + amt; if (xp < 0) xp = 0; Player player = getPlayer(); int curLvl = player.getLevel(); int newLvl = getLevelForExp(xp); if (curLvl != newLvl) { player.setLevel(newLvl); , int XXXXX = base + amt; if (XXXXX < 0) XXXXX = 0; Player XXXXX = getPlayer(); int XXXXX = XXXXX.getLevel(); int XXXXX = getLevelForEXXXXX(XXXXX); if (XXXXX != XXXXX) { XXXXX.setLevel(XXXXX); 
0, ServiceOrganization serviceOrganization = new ServiceOrganizationImpl(); serviceOrganization.setNew(true); serviceOrganization.setPrimaryKey(organizationId); return serviceOrganization; ," String columnName = changedField.getColumnName(); for (GridField field : m_mFields) { if (field == null || field == changedField) continue; verifyChangedField(field, columnName); "
1, LOG.assertTrue(!myEditors.contains(editor)); editor.addPropertyChangeListener(myFontSizeListener); myEditors.add(editor); if (myLastFontSize != -1) myFontSizeListener.updateEditor(editor); , LOG.assertTrue(!myEditors.contains(editor)); editor.addPropertyChangeListener(myFontSizeListener); myEditors.add(editor); if (myLastFontSize != -1) myFontSizeListener.updateEditor(editor); 
1," if (customDelta == null) { for (int i = 0, length = this.rubyModelDeltas.size(); i < length; i++) { IRubyElementDelta delta = this.rubyModelDeltas.get(i); this.modelUpdater.processRubyDelta(delta); "," XXXXXf (customDelta == null) { for (XXXXXnt XXXXX = 0, length = thXXXXXs.rubyModelDeltas.sXXXXXze(); XXXXX < length; XXXXX++) { IRubyElementDelta XXXXX = thXXXXXs.rubyModelDeltas.get(XXXXX); thXXXXXs.modelUpdater.processRubyDelta(XXXXX); "
1," colourWheelPane = new HSVColourWheelUI(control); paintPotPane = new PaintPotUI(control.getColour(), control); RGBSliderPane = new RGBSliderUI(control); swatchPane = new ColourSwatchUI(control); "," colourWheelPane = new HSVColourWheelUI(control); paintPotPane = new PaintPotUI(control.getColour(), control); RGBSliderPane = new RGBSliderUI(control); swatchPane = new ColourSwatchUI(control); "
0," if (element instanceof InspectionProfileEntry) { final InspectionProfileEntry entry = (InspectionProfileEntry)element; return entry.getDisplayName() + "" "" + entry.getGroupDisplayName(); "," for (HColumnDescriptor hcd: HTableDescriptor.ROOT_TABLEDESC.getColumnFamilies()) { if (Bytes.equals(hcd.getName(), HConstants.CATALOG_FAMILY)) { hcd.setBlockCacheEnabled(b); hcd.setInMemory(b); "
1," FacesContext facesContext = event.getFacesContext(); Map<String, Object> requestMap = facesContext.getExternalContext().getRequestMap(); requestMap.put(POSTBACK_ATTRIBUTE_NAME, Boolean.TRUE); "," FacesContext XXXXX = event.getFacesContext(); Map<String, Object> requestMap = XXXXX.getExternalContext().getRequestMap(); requestMap.put(POSTBACK_ATTRIBUTE_NAME, Boolean.TRUE); "
0," logger.info(""Deleting question(id="" + questionId + "").""); Question q = questionDao.findById(questionId); if (q == null) { logger.warn(""Cannot find question(id="" + questionId + "").""); return; ", SoftReference ref = (SoftReference) workDone.get(cls); if (ref == null) return null; ContainerAnalysis ret = (ContainerAnalysis) ref.get(); if (ret == null) workDone.remove(cls); return ret; 
0, SensorModelPart.from(this.model) .updateSensorValues(this.robotAPI.getSensorValues()); SensorModelPart.from(this.model) .setTotalTurnedAngle(this.robotAPI.getRelativeAngle(0)); this.model.refresh(); ," String oldStyle = style; style = newStyle; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, XhtmlPackage.XHTML_SAMP_TYPE__STYLE, oldStyle, style)); "
0," return (((ComponentDMEntity) property.getEntity()).isBindable(property) ? FlexoLocalization .localizedForKey(""is_bindable"") : FlexoLocalization.localizedForKey(""is_not_bindable"")); ", switch (featureID) { case SvgPathPackage.SMOOTH_CURVETO__SMOOTH_CURVETO_ARGUMENT_SEQUENCE: setSmooth_curveto_argument_sequence((smooth_curveto_argument_sequence)newValue); return; 
1, if (myChangeInfo instanceof JavaChangeInfoImpl) { return myChangeInfo.isExceptionSetOrOrderChanged() && !((JavaChangeInfoImpl)myChangeInfo).propagateExceptionsMethods.contains(caller); , if (myChangeInfo instanceof JavaChangeInfoImpl) { return myChangeInfo.isExceptionSetOrOrderChanged() && !((JavaChangeInfoImpl)myChangeInfo).propagateExceptionsMethods.contains(caller); 
0, m_fc.setCurrentDirectory(new File(m_jTxtField.getText())); if (m_fc.showOpenDialog(m_jTxtField) == JFileChooser.APPROVE_OPTION) { m_jTxtField.setText(m_fc.getSelectedFile().getAbsolutePath()); ," CrossJoinAnalyzer analyzer = new CrossJoinAnalyzer(simplifiedList, substitutionMap); String crossJoin = analyzer.getCrossJoinExpression(); if (crossJoin.length() == 0) { return simplifiedList; "
0, if (event.getSource() instanceof PeriodicTablePanel) { PeriodicTablePanel source = (PeriodicTablePanel)event.getSource(); String symbol=null; try { symbol = source.getSelectedElement(); ," if (c.isOpaque()) { if ((c.getBackground().equals(AbstractLookAndFeel.getBackgroundColor())) && (c.getBackground() instanceof ColorUIResource)) { AluminiumUtils.fillComponent(g, c); "
1," SiteEntity site = menuItem.getSite(); List<MenuItemEntity> menuItems = sites.get( site ); if ( menuItems == null ) { menuItems = new ArrayList<MenuItemEntity>(); sites.put( site, menuItems ); "," SiteEntity XXXXX = menuItem.getSite(); List<MenuItemEntity> menuItems = XXXXXs.get( XXXXX ); if ( menuItems == null ) { menuItems = new ArrayList<MenuItemEntity>(); XXXXXs.put( XXXXX, menuItems ); "
1, int ret = 0; Collection<ConcurrentHClientPool> pools = connectionManager.getActivePools(); for (ConcurrentHClientPool concurrentHClientPool : pools) { ret += concurrentHClientPool.getNumActive(); , int XXXXX = 0; Collection<ConcurrentHClientPool> pools = connectionManager.getActivePools(); for (ConcurrentHClientPool concurrentHClientPool : pools) { XXXXX += concurrentHClientPool.getNumActive(); 
1, super( factory ); setTitleText( layout.getFileName() ); text = new JTextArea(); text.setText( layout.getFileContent() ); text.setBackground( layout.getBackground() ); add( new JScrollPane( text ) ); , super( factory ); setTitleText( layout.getFileName() ); text = new JTextArea(); text.setText( layout.getFileContent() ); text.setBackground( layout.getBackground() ); add( new JScrollPane( text ) ); 
0, MutableAttributeType modifiedAttributeType = getModifiedAttributeType(); if ( usageCombo.getSelectionIndex() == 0 ) { modifiedAttributeType.setUsage( UsageEnum.DIRECTORY_OPERATION ); ," JPanel panel = new JPanel(new GridLayout(0, 1, 6, 6)); final JComboBox focusLost = new JComboBox(new String[]{""Commit"", ""Commit or Revert"", ""Revert"", ""Persist"", ""Commit or Reset"", ""Reset"""
1," ArrayList<String> values = new ArrayList<String>(tags.size() * 2); for (Entry<String, String> entry : tags.entrySet()) { values.add(entry.getKey()); values.add(entry.getValue()); "," ArrayList<String> values = new ArrayList<String>(tags.size() * 2); for (Entry<String, String> entry : tags.entrySet()) { values.add(entry.getKey()); values.add(entry.getValue()); "
1, Selection sel = Selection.get() ; if (sel == null || sel.getRangeCount() == 0) return false ; if (sel.getRangeCount() > 1) return true ; return !sel.getRangeAt(0).isCollapsed() ; , Selection XXXXX = Selection.get() ; if (XXXXX == null || XXXXX.getRangeCount() == 0) return false ; if (XXXXX.getRangeCount() > 1) return true ; return !XXXXX.getRangeAt(0).isCollapsed() ; 
0, PushProxiesValue pushProxiesValueForSelf = pushProxiesValueFactory.createDHTValueForSelf(); return pushProxiesValueForSelf.getPushProxies().isEmpty() ? null : createCopy(pushProxiesValueForSelf); ," String arguments = ""arguments""; _logMessage = SubscriptionMessages.CREATE(arguments, true, true); List<Object> log = performLog(); String[] expected = {""Create :"", ""Durable"", ""Arguments :"", arguments"
0," HungerPlayer hp = findHungerPlayer(player.getName()); if((hp == null)|| (!hp.Enrolled())){ ChatBlock.sendMessage(player, getDisplayName() + "" Must Be Enrolled in the Games to Enter""); return; "," Intent intent = new Intent(); intent.putExtra(EXTRAS_SUCCESS, success); intent.putExtra(EXTRAS_RESPONSE_MESSAGE, message); intent.setAction(WEB_INTENT_FILTER); sendBroadcast(intent); "
0, if (!success) return; if (singleton.importer != null && ((ImporterComponent) singleton.importer).isMaster()) { ((ImporterComponent) singleton.importer).onGroupSwitched(success); return; ," onException(CamelAuthorizationException.class). to(""mock:authorizationException""); from(""direct:secureEndpoint""). policy(securityPolicy). to(""log:incoming payload""). to(""mock:success""); "
0," a.info(""Saving chunks""); for (World w : worldManager.getAllWorlds()) { OWorldServer var2 = (OWorldServer) ((CanaryWorld) w).getHandle(); try { var2.a(true, (OIProgressUpdate) null); "," try { Map<String, Object> m = new HashMap<String, Object>(); m.put(""x"", new Integer(e.getX())); m.put(""y"", new Integer(e.getY())); myComponent.performTipiEvent(""onMouseExited"", m, te.isSync()); "
0," if ( this.wrapText != -1 ) return com.nary.util.string.wrap( content, this.wrapText, false ); else if ( wrap != -1 ) return com.nary.util.string.wrap( content, wrap, false ); else return content; "," ArrayDeque q = new ArrayDeque(); assertTrue(q.isEmpty()); for(int i = 0; i < n; ++i) assertTrue(q.offerLast(new Integer(i))); assertFalse(q.isEmpty()); assertEquals(n, q.size()); return q; "
1, this(); this.mProperties.putAll(qro.mProperties); for (QueueRequestProperties.TransientProperties property : QueueRequestProperties.TransientProperties .values()) { removeProperty(property.name()); , this(); this.mProperties.putAll(qro.mProperties); for (QueueRequestProperties.TransientProperties property : QueueRequestProperties.TransientProperties .values()) { removeProperty(property.name()); 
1," TorqueNodeManager nodeManager = new TorqueNodeManager(configuration); nodeManager.addPublicIpListener(observer); return nodeManager.getCommandLineEvaluation(handle, rmiServerForApi); "," TorqueNodeManager XXXXX = new TorqueNodeManager(configuration); XXXXX.addPublicIpListener(observer); return XXXXX.getCommandLineEvaluation(handle, rmiServerForApi); "
1, bitIndex = bitMarker; byteIndex = byteMarker; value = decimalValue; nextBitIndex = bitMarker; if (bitMarker < 7) { nextBitIndex++; nextByteIndex = byteMarker; nextByteBoundary = byteMarker++; , bitIndex = bitMarker; byteIndex = byteMarker; value = decimalValue; nextBitIndex = bitMarker; if (bitMarker < 7) { nextBitIndex++; nextByteIndex = byteMarker; nextByteBoundary = byteMarker++; 
1," PromptWithOptionResult result = new PromptWithOptionResult(); result.input = input; result.extraOption = pDialog.getValue().getExtraOption(); okOperation.execute(result, indicator); "," PromptWithOptionResult XXXXX = new PromptWithOptionResult(); XXXXX.input = input; XXXXX.extraOption = pDialog.getValue().getExtraOption(); okOperation.execute(XXXXX, indicator); "
0, this.shapePane = shapePane; this.viewModel = viewModel; this.feedbackModel = feedbackModel; this.commandStack = commandStack; this.labelPositionCalculator = labelPositionCalculator; , org.multibit.action.CopyReceiveAddressAction genericCopyReceiveAddressAction = new org.multibit.action.CopyReceiveAddressAction(); genericCopyReceiveAddressAction.execute(dataProvider); 
0, final boolean[] specicalFlags_singleQuotes = CharTypes.specicalFlags_singleQuotes; int len = text.length(); int newcount = count + len + 3; if (newcount > buf.length) { expandCapacity(newcount); ," String name = elem.getAttributeValue(""name""); String value = replaceParam(elem.getAttributeValue(""value"")); logger.info(""typeCmd: id="" + name + "" value="" + value); this.sel.type(name, value); "
1," Object oldTOTASK = tOTASK; tOTASK = newTOTASK; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, PowrmartPackage.WORKFLOWLINK_TYPE__TOTASK, oldTOTASK, tOTASK)); "," Object XXXXX = tOTASK; tOTASK = newTOTASK; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, PowrmartPackage.WORKFLOWLINK_TYPE__TOTASK, XXXXX, tOTASK)); "
0, IProblem[] problems = astRoot.getProblems(); for (int i = 0; i < problems.length; i++) { IProblem curr = problems[i]; if (curr.isError() && (curr.getID() & IProblem.Syntax) != 0) { return false; ," if (!dataSourcesMBeans.isEmpty()) { log.info(""UnRegistering DBPool MBeans""); for (DBPoolView dbPoolView : dataSourcesMBeans.values()) { if (dbPoolView != null) { removeMBean(dbPoolView.getName()); "
1, SwingUtilities.invokeLater(new Runnable() { @Override public void run() { if (!appMenuVisible.isSelected()) getRibbon().setApplicationMenu(null); else configureApplicationMenu(); , SwingUtilities.invokeLater(new Runnable() { @Override public void run() { if (!appMenuVisible.isSelected()) getRibbon().setApplicationMenu(null); else configureApplicationMenu(); 
1, this(connection); this.sessionId = sessionId; this.revisionNumber = revisionNumber; this.delta = delta; this.requestType = UPDATE; this.isServerSideRequest = true; this.isUpdateType = false; , this(connection); this.sessionId = sessionId; this.revisionNumber = revisionNumber; this.delta = delta; this.requestType = UPDATE; this.isServerSideRequest = true; this.isUpdateType = false; 
0, int length = (r.nextInt() % 5) + 10; StringBuilder sb = new StringBuilder(); for (int i = 0; i < length; i++) { sb.append(RANDOM_DICT[Math.abs(r.nextInt()) % RANDOM_DICT.length]); ," Bundle result = new Bundle(); for (String key : AttributeMapper.getContactAttrs()) { if (!key.equalsIgnoreCase(AttributeMapper.DISPLAYNAME)) result.putString(key, key + postfix); "
1, if (this == obj) return true; if (obj == null) return false; if (getClass() != obj.getClass()) return false; ListAllOptions other = (ListAllOptions) obj; return (eager == other.eager); , if (this == obj) return true; if (obj == null) return false; if (getClass() != obj.getClass()) return false; ListAllOptions XXXXX = (ListAllOptions) obj; return (eager == XXXXX.eager); 
0," TestSuiteConfig tsc = (TestSuiteConfig) testSuites.get(testSuite); if ((tsc != null) && plugIns.containsKey(test.getPlugIn().getName())) { tsc.getTests().put(test.getName(), test); return true; "," SQLiteDatabase db = helper.getWritableDatabase(); long id = db.insert(Subreddits.TABLE_NAME, null, values); if (id != -1) { notifyChange(uri); return ContentUris.withAppendedId(uri, id); "
0," StringBuilder status = new StringBuilder(); String a = obj.optString(ACTION); String b = obj.optString(NUMBER); if (TelephonyManager.EXTRA_STATE_OFFHOOK.equals(a)) { status.append(""Calling ""); "," String url = NbBundle.getMessage( getClass(), ""last.data.url"", new Object[] { ACCESS_KEY, Integer.toString(period), Integer.toString(interval.getLengthInSeconds()), stock.getSymbol() "
0," String label = ((CollectionType) object).getName(); return label == null || label.length() == 0 ? getString(""_UI_CollectionType_type"") : getString(""_UI_CollectionType_type"") + "" "" + label; "," boolean[][] input = new boolean[ 25 ][ 25 ]; int[][] expected = new int[ 25 ][ 25 ]; for ( int i = 0; i < input.length; i++ ) { Arrays.fill( input[ i ], true ); Arrays.fill( expected[ i ], 1 ); "
0," Box graphInfoPanel = Box.createHorizontalBox(); this.noteField = new JTextField(); graphInfoPanel.add(this.createInfoLabel(""distribution_note1"", this.noteField)); return graphInfoPanel; "," PelopsException exception = new PelopsException(); PelopsException pelopsException = translator.translate(exception); assertTrue(""Translation failed"", exception == pelopsException); "
1," return sendRequest( toRequestParam(""format"", ""json"").add(""content"", param.getParamValue(""status"")).add(""clientip"", param.getParamValue(""clientip"")), urlResource + ""t/add"", POST); "," return sendRequest( toRequestParam(""format"", ""json"").add(""content"", param.getParamValue(""status"")).add(""clientip"", param.getParamValue(""clientip"")), urlResource + ""t/add"", POST); "
1, int correctedMsn = absoluteMsn; for (int i = (_expungedMsns.size() - 1); i >= 0; i--) { Integer expunged = _expungedMsns.get(i); if (expunged.intValue() <= absoluteMsn) { correctedMsn++; , XXXXXnt XXXXX = absoluteMsn; for (XXXXXnt XXXXX = (_XXXXXMsns.sXXXXXze() - 1); XXXXX >= 0; XXXXX--) { Integer XXXXX = _XXXXXMsns.get(XXXXX); XXXXXf (XXXXX.XXXXXntValue() <= absoluteMsn) { XXXXX++; 
0," EditorColorsSchemeImpl newScheme = new EditorColorsSchemeImpl(myParentScheme, DefaultColorSchemesManager.getInstance()); copyTo(newScheme); newScheme.setName(getName()); return newScheme; ", synchronized (project) { project.rows.clear(); project.rows.addAll(_oldRows); for (int i = 0; i < _columnNames.size(); i++) { project.columnModel.columns.remove(_columnInsertIndex); 
0, initializeSettings(); routingTable = server.getRoutingTable(); router = server.getPacketRouter(); registerHandler = new IQMUCRegisterHandler(this); searchHandler = new IQMUCSearchHandler(this); ," super(FEST274_selectionInEditableJComboBox_Test.class); comboBox = new JComboBox(array(""One"", ""Two"", ""Three"")); comboBox.setEditable(true); comboBox.setSelectedIndex(-1); addComponents(comboBox); "
1," char[] src = input.toCharArray(); boolean[] transformed = new boolean[1]; transformed[0] = false; char[] dest = unshaped(src, transformed); if (transformed[0]) { return new String(dest); "," char[] src = input.toCharArray(); boolean[] transformed = new boolean[1]; transformed[0] = false; char[] dest = unshaped(src, transformed); if (transformed[0]) { return new String(dest); "
0, int blocksize = 512; int[][] array = new int[10][2]; array[0][0] = 2048; array[0][1] = 2048; for (int i = 1; i < array.length; i++) { array[i][0] = array[i - 1][0] * 2; array[i][1] = array[i][0]; ," Assert.assertNotNull(ome); Assert.assertEquals(1, ome.sizeOfImageList()); Image image = ome.getImage(0); Assert.assertNotNull(image); Assert.assertEquals(IMAGE_DATE, image.getAcquisitionDate()); "
0," if (!dir.exists()) return; String[] list = dir.list(); if (list != null) { for (int i = 0; i < list.length; i++) { File entry = new File(dir, list[i]); if (entry.isDirectory()) { removeDir(entry); ", fresh = false; if (((SetOperation) op).getType() == SetOperation.OpType.del && ((SetOperation) op).getContent() instanceof Edge) { tombstone.add(((Edge<T>) ((SetOperation) op).getContent())); 
1," QualityValue x = QualityValue.valueOf(""0.08""); assertEquals(80, x.intValue()); assertEquals(80L, x.longValue()); assertEquals(0.08f, x.floatValue()); assertEquals(0.08d, x.doubleValue()); "," QualityValue XXXXX = QualityValue.valueOf(""0.08""); assertEquals(80, XXXXX.intValue()); assertEquals(80L, XXXXX.longValue()); assertEquals(0.08f, XXXXX.floatValue()); assertEquals(0.08d, XXXXX.doubleValue()); "
0," IExtensionDelta[] extensionDeltas = registryChangeEvent.getExtensionDeltas(Persistence.PACKAGE_PREFIX, Persistence.PACKAGE_BASE); if (extensionDeltas.length != 0) { try { load(); "," PriorityList p = new PriorityList(); p.add( ""One"", 1 ); p.add( ""Two"", 1 ); assertEquals( ""size"", 2, p.size() ); assertEquals( ""One"", ""One"", p.get(0) ); assertEquals( ""Two"", ""Two"", p.get(1) ); "
0," return ""TweetPollSwitch [switchId="" + switchId + "", codeTweet="" + codeTweet + "", tweetPoll="" + tweetPoll + "", answers="" + answers + "", dateUpdated="" + dateUpdated + "", shortUrl="" + shortUrl + ""]""; "," super(x, y, Team.Neutral); setPos(x, y); dir = TurnSynchronizer.synchedRandom.nextDouble() * Math.PI * 2; minimapColor = 0xffff0000; yOffs = 10; facing = TurnSynchronizer.synchedRandom.nextInt(4); "
1," if ( descriptor.acceptsArguments() ) { if ( descriptor.requiresArgument() ) addHelpLineWithArgument( descriptor, '<', '>' ); else addHelpLineWithArgument( descriptor, '[', ']' ); "," if ( descriptor.acceptsArguments() ) { if ( descriptor.requiresArgument() ) addHelpLineWithArgument( descriptor, '<', '>' ); else addHelpLineWithArgument( descriptor, '[', ']' ); "
1," HTML html = new HTML(message); html.setStyleName(""common-text""); html.setWordWrap(true); DefaultCommonDialog dlg = new DefaultCommonDialog(title,html,""default-message""); dlg.html = html; return dlg; "," HTML XXXXX = new HTML(message); XXXXX.setStyleName(""common-text""); XXXXX.setWordWrap(true); DefaultCommonDialog XXXXX = new DefaultCommonDialog(title,XXXXX,""default-message""); XXXXX.XXXXX = XXXXX; return XXXXX; "
0," String prefix = """"; if (mode == ABSOLUTE) prefix = "".""; else if (mode == SUB_PAGE) prefix = "">""; else if (mode == BACKWARD_SEARCH) prefix = ""<""; return prefix + StringUtil.join(names, "".""); "," this.album = album; this.em = em; for (Artist a : em.createNamedQuery(""allArtistsByName"", Artist.class).getResultList()) { artist.addItem(a.getName(), String.valueOf(a.getId())); "
1, if (tm == null) { try { Object o = safeInitNewInstance(transactionManagerLocatorClass); Method m = o.getClass().getMethod(transactionManagerLocatorMethod); tm = (TransactionManager)m.invoke(o); , if (tm == null) { try { Object o = safeInitNewInstance(transactionManagerLocatorClass); Method m = o.getClass().getMethod(transactionManagerLocatorMethod); tm = (TransactionManager)m.invoke(o); 
0, latestReportType = eventType; latestProgressReport = new ProgressReport(); manager.notifyManager(this); if (eventType == REPORT_TYPE_PROPERTY_CHANGED && true == isCanceled) { return; ," StringBuilder builder = new StringBuilder(); builder.append(this.getHttpMethod()).append(""_""); if (null != this.getNamespace()) { builder.append(this.getNamespace()).append(""_""); "
1," if (myThread2.eventTime != Thread2.STARTING) error (""Only a Process in INITIAL state can call scheduleNext""); myThread2.eventTime = Sim.time(); Sim.eventList.insertFirst (myThread2); "," if (myThread2.eventTime != Thread2.STARTING) error (""Only a Process in INITIAL state can call scheduleNext""); myThread2.eventTime = Sim.time(); Sim.eventList.insertFirst (myThread2); "
0, m_threadPool = threadPool; if ( m_threadPool == null) { m_expiryThread = new Thread(this); m_expiryThread.setDaemon(true); m_expiryThread.setName(threadName); m_expiryThread.start(); ," final boolean ret = bdi.pvRemove(false); if (ret) { answerPaneAddText(""Labels on physical volume "" + bdi.getName() + "" were successfully removed "" + "" on "" + host.getName() + "".""); "
0, DNSService dns = new MockDNSService() { @Override public Collection findMXRecords(String hostname) { Collection mx = new ArrayList(); if (hostname.equals(INVALID_HOST)) { mx.add(INVALID_MX); , String label = null; EObject target = element.getTarget(); if (target instanceof org.obeonetwork.dsl.entity.Property) { label = ((org.obeonetwork.dsl.entity.Property)target).getName(); 
1, list.setSize(distinct); int[] elements = list.elements(); int[] val = values; byte[] stat = state; int j=0; for (int i = stat.length ; i-- > 0 ;) { if (stat[i]==FULL) elements[j++]=val[i]; , lXXXXXst.setSXXXXXze(dXXXXXstXXXXXnct); XXXXXnt[] elements = lXXXXXst.elements(); XXXXXnt[] val = values; byte[] stat = state; XXXXXnt j=0; for (XXXXXnt XXXXX = stat.length ; XXXXX-- > 0 ;) { XXXXXf (stat[XXXXX]==FULL) elements[j++]=val[XXXXX]; 
1," String value = null; int index = Integer.parseInt(value); Resource r = book.getSpine().getResource(index); String text = new String(r.getData()); WebView wbox = null; wbox.loadDataWithBaseURL(""http: "," StXXXXXing XXXXX = null; int XXXXX = IntegeXXXXX.paXXXXXseInt(XXXXX); ResouXXXXXce XXXXX = book.getSpine().getResouXXXXXce(XXXXX); StXXXXXing XXXXX = new StXXXXXing(XXXXX.getData()); WebView XXXXX = null; XXXXX.loadDataWithBaseURL(""http: "
1," super(); Node node; m_manager = xctxt.getDTMManager(); while (null != (node = iterator.nextNode())) { int handle = xctxt.getDTMHandleFromNode(node); addNodeInDocOrder(handle, xctxt); "," super(); Node node; m_manager = xctxt.getDTMManager(); while (null != (node = iterator.nextNode())) { int XXXXX = xctxt.getDTMHandleFromNode(node); addNodeInDocOrder(XXXXX, xctxt); "
0," model.addModelChangeListener(new IRemovableEntryListener<IAnimalForm>() { @Override public void entryAdded(IAnimalForm form) { addAnimalFormView(basicUi, form); reset(selectionView); ", DbAttributeTableModel model = (DbAttributeTableModel) table.getModel(); int ind = model.getObjectList().indexOf(e.getAttribute()); model.removeRow(e.getAttribute()); table.select(ind); 
1, final int prime = 31; int result = 1; result = prime * result + ((name == null) ? 0 : name.hashCode()); result = prime * result + ((owner == null) ? 0 : owner.hashCode()); return result; , final int XXXXX = 31; int XXXXX = 1; XXXXX = XXXXX * XXXXX + ((name == null) ? 0 : name.hashCode()); XXXXX = XXXXX * XXXXX + ((owner == null) ? 0 : owner.hashCode()); return XXXXX; 
0," PsiElement parent = ref.getElement().getParent(); if (parent instanceof GrReferenceExpression) { if (structural.size() >= CONSTRAINTS_NUMBER) { structural.add(""...""); return false; "," ClassMapping elem = (elems.length == 0) ? null : elems[idx]; sel.whereForeignKey(_strat.getJoinForeignKey(elem), sm.getObjectId(), _strat.getFieldMapping(). getDefiningMapping(), store); "
1," final String command = host.getDistCommand( ""Heartbeat.deleteFromRc"" + "";;;Corosync.addToRc"" + "";;;Corosync.startCorosync"", (ConvertCmdCallback) null); execCommand(host, command, true); "," final String XXXXX = host.getDistCommand( ""Heartbeat.deleteFromRc"" + "";;;Corosync.addToRc"" + "";;;Corosync.startCorosync"", (ConvertCmdCallback) null); execCommand(host, XXXXX, true); "
1," Expression left = optimize( expr.getLeft() ); Expression right = optimize( expr.getRight() ); if ( expr.getOperator() != LogicalExpr.OR ) { return new LogicalExpr( expr.getOperator(), left, right ); "," Expression XXXXX = optimize( expr.getLeft() ); Expression XXXXX = optimize( expr.getRight() ); if ( expr.getOperator() != LogicalExpr.OR ) { return new LogicalExpr( expr.getOperator(), XXXXX, XXXXX ); "
0," IEclipsePreferences prefs = GrailsRefactoringActivator.getEclipsePreferences(); return prefs.getBoolean(SUPPRESS_NON_GRAILS_AWARE_WARNING, DEFAULT_SUPPRESS_NON_GRAILS_AWARE_WARNING); ", final List<String> l = new LinkedList<String>(children.keySet()); final ListIterator<String> it = l.listIterator(l.indexOf(name)); if (it.hasPrevious()) { return children.get(it.previous()); 
0," mContext.enforceCallingOrSelfPermission(BLUETOOTH_ADMIN_PERM, ""Need BLUETOOTH_ADMIN permission""); if (mIsAirplaneSensitive && isAirplaneModeOn() && !mIsAirplaneToggleable) { return false; ", int id=mapToID.get(rowIndex); if(columnIndex==0) return id; else { ParticleInfo info=getCurrentPropMap(id); String prop=mapToColumn.get(columnIndex-1); return info.getObject(prop).toString(); 
1," Feed feed = getBUGFeed(context, feedRequest.getName()); if (feed == null) { log.log(LogService.LOG_WARNING, ""Request for non-existant feed "" + feedRequest.getName() + "" from client "" + jid); return; "," Feed XXXXX = getBUGFeed(context, XXXXXRequest.getName()); if (XXXXX == null) { log.log(LogService.LOG_WARNING, ""Request for non-existant XXXXX "" + XXXXXRequest.getName() + "" from client "" + jid); return; "
1, List newSelected = new ArrayList(); for (Iterator i = currentConfig.getColumns().iterator();i.hasNext();) { Column col = (Column)i.next(); if (col.isSelected()) { newSelected.add(col.getName()); , LXXXXXst XXXXX = new ArrayLXXXXXst(); for (Iterator XXXXX = currentConfXXXXXg.getColumns().XXXXXterator();XXXXX.hasNext();) { Column XXXXX = (Column)XXXXX.next(); XXXXXf (XXXXX.XXXXXsSelected()) { XXXXX.add(XXXXX.getName()); 
0," switch (archiveType) { case ZIP: return new ZipArchiver(); case TARGZ: return new TgzArchiver(); default: throw new PleaseException(""archive type '"" + archiveType + ""' not supported""); ", EquipmentSetFacade oldSet = equipSet.getReference(); if (oldSet != null) { oldSet.getEquippedItems().removeListListener(this); oldSet.getEquippedItems().removeEquipmentListListener(this); 
0," String[] sTestCmdLine = {MSVSS.SS_EXE, MSVSS.COMMAND_CHECKIN, DS_VSS_PROJECT_PATH, MSVSS.FLAG_AUTORESPONSE_NO, MSVSS.FLAG_WRITABLE, MSVSS.FLAG_LOGIN + VSS_USERNAME, MSVSS.FLAG_COMMENT + SRC_COMMENT"," Message message = EmailParser.parseMessage(emailContent); assertEquals(body, message.getBody()); assertEquals(subject, message.getSubject()); assertEquals(from, message.getFrom()); "
0, AnnouncementsDelivery announcementsDelivery = new AnnouncementsDeliveryImpl(); announcementsDelivery.setNew(true); announcementsDelivery.setPrimaryKey(deliveryId); return announcementsDelivery; ," this.batchSize = batchSize; this.nodeHost = nodeHost; this.publishAuthUser = publishAuthUser; this.publishAuthPassword = publishAuthPassword; if (publishOverSSL) { this.publishProtocol = ""https""; "
0, byte[] buffer = new byte[(int) signsFile.length()]; signs.clear(); BufferedInputStream f = null; try { f = new BufferedInputStream(new FileInputStream(signsFile)); f.read(buffer); , if (event.getType() == GameEvent.EventType.DREW_CARD && event.getPlayerId() != null) { for (Effect effect : this.getEffects()) { effect.setTargetPointer(new FixedTarget(event.getPlayerId())); 
0," ProtegeUI.getModalDialogFactory().showDialog(ProtegeUI.getTopLevelContainer(owlModel.getProject()), new ReasonerInspectorPanel(owlModel), ""Reasoner Inspector"", ModalDialogFactory.MODE_CLOSE); "," switch (featureID) { case ConfigurationPackage.PROR_PRESENTATION_CONFIGURATIONS__PRESENTATION_CONFIGURATIONS: return ((InternalEList<?>)getPresentationConfigurations()).basicRemove(otherEnd, msgs); "
1," LinkType type = new LinkType(); OutputTypeEnum pluginType = new OutputTypeEnum(); pluginType.setValue(""executable""); type.setOutputType(pluginType); assertTrue(!type.isPluginModule()); "," LinkType type = new LinkType(); OutputTypeEnum pluginType = new OutputTypeEnum(); pluginType.setValue(""executable""); type.setOutputType(pluginType); assertTrue(!type.isPluginModule()); "
1," ArrayList<String> keywords = new ArrayList<String>(); keywords.add(""_accessor""); keywords.add(""_alert""); assertEquals(""_sahi._?(_accessor|_alert)(\\s*\\()"", TestScript.getRegExp(true, keywords)); "," ArrayList<String> keywords = new ArrayList<String>(); keywords.add(""_accessor""); keywords.add(""_alert""); assertEquals(""_sahi._?(_accessor|_alert)(\\s*\\()"", TestScript.getRegExp(true, keywords)); "
1, switch (getDBType(em)) { case db2: assertLockTestSQLs(Select + tableLfName + Where + DB2Lock); break; case oracle: case derby: default: assertLockTestSQLs(Select + tableLfName + Where + ForUpdate); , switch (getDBType(em)) { case db2: assertLockTestSQLs(Select + tableLfName + Where + DB2Lock); break; case oracle: case derby: default: assertLockTestSQLs(Select + tableLfName + Where + ForUpdate); 
0, while (deck.getCards().size() < 40 && deck.getSideboard().size() > 0) { Card card = deck.getSideboard().iterator().next(); deck.getCards().add(card); deck.getSideboard().remove(card); , EventHandler handler = method.getAnnotation(EventHandler.class); EventHandler otherHandler = other.getAnnotation(EventHandler.class); if(handler.priority() == otherHandler.priority()) { return 0; 
0," if (style.isDisplayNone() || style.isIdent(CSSName.DISPLAY, IdentValue.TABLE_COLUMN) || style.isIdent(CSSName.DISPLAY, IdentValue.TABLE_COLUMN_GROUP)) { return Collections.EMPTY_LIST; "," if (mContext.checkCallingOrSelfPermission( android.Manifest.permission.SHUTDOWN) != PackageManager.PERMISSION_GRANTED) { throw new SecurityException(""Requires SHUTDOWN permission""); "
1," CompassSession session = openSession(); CompassTransaction tr = session.beginTransaction(); A a = new A(); a.id = 1; a.bList = new ArrayList(); a.bList.add(new B(Arrays.asList(new C[]{new C(""value1"")"," CompXXXXXssSession XXXXX = openSession(); CompXXXXXssTrXXXXXnsXXXXXction XXXXX = XXXXX.beginTrXXXXXnsXXXXXction(); A XXXXX = new A(); XXXXX.id = 1; XXXXX.bList = new ArrXXXXXyList(); XXXXX.bList.XXXXXdd(new B(ArrXXXXXys.XXXXXsList(new C[]{new C(""vXXXXXlue1"")"
0, if( complete || reader != null ) return; try { if( currentSplit < splits.length ) { if( lastReader != null ) lastReader.close(); reader = makeReader( currentSplit++ ); lastReader = reader; ," Float expected = 3000.15f; assertEquals(expected, new FloatConverter(Locale.US).fromString(""3000.15"")); assertEquals(expected, new FloatConverter(Locale.US).fromString(""3,000.15"")); "
0, IStreamRandomAccess randomAccess = null; if (randomAccessGetterImpl != null) { randomAccess = new IStreamRandomAccess(randomAccessGetterImpl); randomAccessGetterImpl.updated(randomAccess); , ((TableRow)findViewById(R.id.UserNameTableRow)).setVisibility(visible?View.VISIBLE:View.GONE); ((TableRow)findViewById(R.id.PasswordTableRow)).setVisibility(visible?View.VISIBLE:View.GONE); 
0," Integer key = new Integer( fontData.hashCode() ); FontData result = cache.get( key, new IInstanceCreator<FontData>() { public FontData createInstance() { return cloneFontData( fontData ); ", if(ve instanceof InsufficientOperationalNodesException || ve instanceof InsufficientZoneResponsesException || ve instanceof InvalidMetadataException) return true; else return false; 
1," Region region = new Region(); gc.getClipping(region); gc.setClipping(x, y, size.x, size.y); target.paint(gc, x - offset.x, y - offset.y); gc.setClipping(region); region.dispose(); "," Region XXXXX = new Region(); gc.getClipping(XXXXX); gc.setClipping(x, y, size.x, size.y); target.paint(gc, x - offset.x, y - offset.y); gc.setClipping(XXXXX); XXXXX.dispose(); "
1," final Statement stmt = Cast.to(String.class, Stmt.declareVariable(""obj"", Object.class).loadVariable(""obj"")); assertEquals(""failed to generate cast"", ""(String) obj"", stmt.generate(Context.create())); "," final Statement XXXXX = Cast.to(String.class, Stmt.declareVariable(""obj"", Object.class).loadVariable(""obj"")); assertEquals(""failed to generate cast"", ""(String) obj"", XXXXX.generate(Context.create())); "
1, Noeud noeudDebut = listePointsNoeuds.get(pointEntree); Noeud noeudFin = listePointsNoeuds.get(pointSortie); if (noeudDebut == null) { noeudDebut = createNode(pointEntree).getNoeud(); , Noeud noeudDebut = listePointsNoeuds.get(pointEntree); Noeud noeudFin = listePointsNoeuds.get(pointSortie); if (noeudDebut == null) { noeudDebut = createNode(pointEntree).getNoeud(); 
1," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; "," EditorCell XXXXX = null; XXXXX = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, XXXXX, editorContext); return XXXXX; "
0," String oldHeight = height; height = newHeight; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, ProcessPackage.WORK_ITEM_TYPE__HEIGHT, oldHeight, height)); ", if (!(fromContext == null || toContext == null)) { if (fromContext instanceof ModelJXPathContext) { toContext.setLookupProvider(((ModelJXPathContext) fromContext).getLookupProvider()); 
0," PixelConverter converter = new PixelConverter(parent); Composite composite = new Composite(parent, SWT.NONE); LayoutUtil.doDefaultLayout(composite, new DialogField[]{fContainersList"," try { BufferedReader buffer = new BufferedReader(new FileReader(arch)); String linea; try { while ((linea = buffer.readLine()) != null) { if (!linea.matches(""\\s*"")) { procesos.add(linea); "
0, if (configs == null) { int i = 1; int num = getNumConfigs(screen); GraphicsConfiguration[] ret = new GraphicsConfiguration[num]; if (defaultConfig == null) { ret [0] = getDefaultConfiguration(); , this.inputPath = inputPath; this.importFolderPath = importFolderPath; this.importSetTitle = importSetTitle; this.interactiveMode = interactiveMode; this.removeImportedFolder = removeImportedFolder; 
1," if(matcher != null && !matcher.isEmpty()) { if(element instanceof Artifact) { Artifact a = (Artifact) element; return matcher.isMatchingArtifact(a.getGroupId(), a.getArtifactId()); "," if(mXXXXXtcher != null && !mXXXXXtcher.isEmpty()) { if(element instXXXXXnceof ArtifXXXXXct) { ArtifXXXXXct XXXXX = (ArtifXXXXXct) element; return mXXXXXtcher.isMXXXXXtchingArtifXXXXXct(XXXXX.getGroupId(), XXXXX.getArtifXXXXXctId()); "
1, if (limitsAreEqual(o)) { TextPiece tp = (TextPiece)o; return getStringBuilder().toString().equals(tp.getStringBuilder().toString()) && tp._usesUnicode == _usesUnicode && _pd.equals(tp._pd); , if (limitsAreEqual(o)) { TextPiece XXXXX = (TextPiece)o; return getStringBuilder().toString().equals(XXXXX.getStringBuilder().toString()) && XXXXX._usesUnicode == _usesUnicode && _pd.equals(XXXXX._pd); 
1," if (getMonthClosingDate() != null && getMonthClosingDate().compareTo(DateUtils.getDateWithoutTimeStamp(trxnDate)) >= 0) { throw new BusinessRuleException(""errors.invalidTxndateMonthAlreadyClosed""); "," if (getMonthClosingDate() != null && getMonthClosingDate().compareTo(DateUtils.getDateWithoutTimeStamp(trxnDate)) >= 0) { throw new BusinessRuleException(""errors.invalidTxndateMonthAlreadyClosed""); "
0," if ((!isObserverRegistered) && (getModel() != null)) { isObserverRegistered = true; if (logger.isLoggable(Level.FINE)) { logger.fine(""*** addObserver "" + getFileName() + "" for "" + getModel()); "," registry.getDataServicesView(HierarchyBrowsingView.class); new DSCallAdapter() { public void handleException(Throwable exc) { throw new RuntimeException(""Unexpected exception."", exc); "
0, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(PollsDisplayTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; ," for (int i = 0; i < 100; i++) { evt.setProgressValue(i + 1); evt.setProgressMessage("""" + i + ""% done...""); if (evt.getCancelStatus() != CancelStatus.REQUESTED) { try { Thread.sleep(100); "
1," try { GreenMailUtilities.storeEmail(server.getManagers().getUserManager(), DEFAULT_EMAIL, DEFAULT_USER, DEFAULT_PASSWORD, GreenMailUtilities.toMessage(DEFAULT_MESSAGE, DEFAULT_EMAIL, null)); "," try { GreenMailUtilities.storeEmail(server.getManagers().getUserManager(), DEFAULT_EMAIL, DEFAULT_USER, DEFAULT_PASSWORD, GreenMailUtilities.toMessage(DEFAULT_MESSAGE, DEFAULT_EMAIL, null)); "
1, if ((jpx>=(pc[camIndex].cx-pc[camIndex].cw)) && (jpx<=(pc[camIndex].cx+pc[camIndex].cw)) && (jpy>=(pc[camIndex].cy-pc[camIndex].ch)) && (jpy<=(pc[camIndex].cy+pc[camIndex].ch))){return true;, if ((jpx>=(pc[camIndex].cx-pc[camIndex].cw)) && (jpx<=(pc[camIndex].cx+pc[camIndex].cw)) && (jpy>=(pc[camIndex].cy-pc[camIndex].ch)) && (jpy<=(pc[camIndex].cy+pc[camIndex].ch))){return true;
0, numAuthExceptions = 0; numIoExceptions = 0; numParseExceptions = 0; numConflictDetectedExceptions = 0; numInserts = 0; numUpdates = 0; numDeletes = 0; numEntries = 0; numSkippedEntries = 0; ," switch(kind){ case MIPS: return GetProperties.getMIPSBudgetInMIPS(ne, 0.0); case RAM: return GetProperties.getRAMBudgetInKB(ne, 0.0); case ROM: return GetProperties.getROMBudgetInKB(ne, 0.0); "
0, if (!actionRequest.isRoleRequest()) { List<ActionRequestValue> primaryDelegateRequests = actionRequest.getPrimaryDelegateRequests(); if ( primaryDelegateRequests.size() != 1) { return actionRequest; ," String sql = ""SELECT * FROM "" + TABLE_NAME + "" WHERE INTFIELD = :p""; try { em.createNativeQuery (sql, Entity1.class) .setParameter (""p"", 12); fail(""Expected to fail with NAMED parameter""); "
0," RefactoringStatus result= super.validateDescriptor(); if (!result.isOK()) return result; if (fMethod == null) { result.addFatalError(""The method must not be null""); return result; "," super(interceptor); String realInterceptorName = getMostInnerInterceptor(interceptor).getClass().getName(); this.filteredKey = ""$$blitz.interceptor.oncePerRequest."" + ""."" + realInterceptorName; "
1," if (item instanceof ToolItem) { ToolItem tool = (ToolItem) item; if (tool.type == ToolType.shovel) { if (player.payStamina(4 - tool.level)) { level.setTile(xt, yt, Tile.dirt, 0); return true; "," if (item instanceof ToolItem) { ToolItem XXXXX = (ToolItem) item; if (XXXXX.type == ToolType.shovel) { if (player.payStamina(4 - XXXXX.level)) { level.setTile(xt, yt, Tile.dirt, 0); return true; "
0," doSetUp(deltaAStart, deltaAEnd, deltaBStart, deltaBEnd, deltaRect); routing.addObstacle(deltaNewRect.getCopy()); routing.removeObstacle(deltaNewRect.getCopy()); doAssertNoPathsSolved(); "," if (folder.getPrimaryDocItem() == null) { logger.warning(""Folder: "" + folder.getIdentifier() + "" has no primary doc item defined. Creates a default one.""); folder.createDefaultPrimaryDocItem(); "
0, ClientMetricsServlet servlet = new ClientMetricsServlet(null); SeriesCollection collection = servlet.parse(PAYLOAD); Gson gson = new Gson(); System.out.println(gson.toJson(collection)); , Request request = new Request(); if ( mediaTypeInRequest != null ) { request.getClientInfo().setAcceptedMediaTypes( Collections.singletonList( new Preference<MediaType>( mediaTypeInRequest ) ) ); 
0, EquipmentSetFacade oldSet = equipSet.getReference(); if (oldSet != null) { oldSet.getEquippedItems().removeListListener(this); oldSet.getEquippedItems().removeEquipmentListListener(this); ," StringBuilder sb = new StringBuilder(); sb.append( "" Abandon Request :\n"" ); sb.append( "" Message Id : "" ).append( abandonId ); sb.append( super.toString() ); return sb.toString(); "
0," if (cIndex < 0 || cIndex > components.size()) { throw new IndexOutOfBoundsException(String.format( ""cIndex: %d (expected: >= 0 && <= numComponents(%d))"", cIndex, components.size())); ", this.contentType = o.contentType; this.UUID = o.UUID; this.dateString = o.dateString; this.recordType = o.recordType; this.metadata.putAll(o.metadata); this.contentLength = o.contentLength; 
0, final double[][] data = new double[rand.nextInt(100)][rand.nextInt(100)]; for (int i = 0; i < data.length; i++) { for (int j = 0; j < data[i].length; j++) { data[i][j] = rand.nextDouble(); , hasChanged = true; if (type != null) rangeIndexes[index].setType(type); if(XPath != null) rangeIndexes[index].setXPath(XPath); if(xsType != null) rangeIndexes[index].setxsType(xsType); 
1, jsonValid = true; String text = ((Text)e.widget).getText(); try { new JSONObject(new JSONTokener(text)); if (jsonValid && nameValid) { setErrorMessage(null); setPageComplete(true); , jsonValid = true; String XXXXX = ((Text)e.widget).getText(); try { new JSONObject(new JSONTokener(XXXXX)); if (jsonValid && nameValid) { setErrorMessage(null); setPageComplete(true); 
0, Stack<String> paths = new Stack<String>(); paths.push(path); callback.setPaths(paths); callback.enableCallback(); Folder target = findFolder(path); if (target == null) { return lazyLoadPath(path); ," addModifyActions(fragment, myAppender1, myAppender2); final Iterator<Fragment> iterator = fragment.getChildrenIterator(); if (iterator == null) { highlightFragmentImpl(fragment, false); "
0, switch (sqlDataType) { case Types.DATE: return new java.sql.Date(val); case Types.TIME: return new java.sql.Time(val); case Types.TIMESTAMP: return new java.sql.Timestamp(val); default: return null; ," boolean value = false; try { in = new ByteStream.Input(bytes.getData(), start, length); din = new DataInputStream(in); value = din.readBoolean(); data.set(value); isNull = false; "
0, Configuration config = SupportConfigFactory.getConfiguration(); epService = EPServiceProviderManager.getDefaultProvider(config); epService.initialize(); listenerOne = new SupportUpdateListener(); ," Set<String> taxonDuplicates = duplicateEnsemblIds.get(taxonId); if (taxonDuplicates == null) { taxonDuplicates = findDuplicateEnsemblIds(taxonId); duplicateEnsemblIds.put(taxonId, taxonDuplicates); "
0," if (jButtonCancel == null) { jButtonCancel = new JButton(); jButtonCancel.setText(""Cancel""); jButtonCancel.setMnemonic('c'); jButtonCancel.setToolTipText(""Lose changes and return""); ", if (this == o) return true; if (o instanceof ExternalPackageFragmentRoot) { ExternalPackageFragmentRoot other= (ExternalPackageFragmentRoot) o; return this.externalPath.equals(other.externalPath); 
0, EnumMap map = keys.get(att).map; Enum unkn = null; for (Object item : map.keySet()) { if (unkn == null) unkn = (Enum)item; if (((S57enum)map.get(item)).val.equals(val)) return (Enum)item; ," ByteBuffer bb = cs.encode(name); ByteBuffer nbb = ByteBuffer.allocateDirect(bb.remaining() + 1); nbb.put(bb); nbb.put((byte) 0); nbb.flip(); return fill(nbb, inode, mode, nextOffset, buf, fillDir); "
0," Relationship rel = treeRoot.getUnderlyingNode().getSingleRelationship(RelTypes.TREE_ROOT, Direction.INCOMING); rel.getStartNode().removeProperty(""___dummy_property_to_acquire_lock_____""); "," assertEquals(""test1 name"", ""test1"", TEST_BOM_1.getCharsetName()); assertEquals(""test2 name"", ""test2"", TEST_BOM_2.getCharsetName()); assertEquals(""test3 name"", ""test3"", TEST_BOM_3.getCharsetName()); "
0," int maxSize = 0; int currentSize = 0; RecordStore rs = null; try { rs = RecordStore.openRecordStore(STORAGE, true); currentSize = rs.getSize(); maxSize = currentSize + rs.getSizeAvailable(); ", if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; ManualEvictionPojo pojo = (ManualEvictionPojo) o; if (i != pojo.i) return false; return true; 
0," StringBuffer s = new StringBuffer(""SolvResPolPart(\n""); s.append(""ideal = "" + ideal); s.append(""\n GB = "" + GB); s.append(""\n syzygy = "" + syzygy); s.append("")""); return s.toString(); ", if (this == obj) return true; if ((obj == null) || (obj.getClass() != this.getClass())) return false; CurrentDVD test = (CurrentDVD) obj; return test.getTitle().trim().equals(this.title.trim()); 
1," LinkType type = new LinkType(); OutputTypeEnum pluginType = new OutputTypeEnum(); pluginType.setValue(""plugin""); type.setOutputType(pluginType); assertTrue(type.isPluginModule()); "," LinkType type = new LinkType(); OutputTypeEnum pluginType = new OutputTypeEnum(); pluginType.setValue(""plugin""); type.setOutputType(pluginType); assertTrue(type.isPluginModule()); "
1, switch (featureID) { case DroolsPackage.PROCESS_ANALYSIS_DATA_TYPE__GROUP: getGroup().clear(); return; case DroolsPackage.PROCESS_ANALYSIS_DATA_TYPE__SCENARIO: getScenario().clear(); return; , switch (featureID) { case DroolsPackage.PROCESS_ANALYSIS_DATA_TYPE__GROUP: getGroup().clear(); return; case DroolsPackage.PROCESS_ANALYSIS_DATA_TYPE__SCENARIO: getScenario().clear(); return; 
1," if (entryCommands != null) { JsArray<Task> rescheduled = null; do { JsArray<Task> oldQueue = entryCommands; entryCommands = null; rescheduled = runScheduledTasks(oldQueue, rescheduled); "," if (entryCommands != null) { JsArray<Task> rescheduled = null; do { JsArray<Task> oldQueue = entryCommands; entryCommands = null; rescheduled = runScheduledTasks(oldQueue, rescheduled); "
1," if (ivjCopyMenuItem == null) { try { ivjCopyMenuItem = new JMenuItem(); ivjCopyMenuItem.setName(""CopyMenuItem""); ivjCopyMenuItem.setText(CALIDEMessages.getString(""CALIDE.CopyMenuItem"")); "," if (ivjCopyMenuItem == null) { try { ivjCopyMenuItem = new JMenuItem(); ivjCopyMenuItem.setName(""CopyMenuItem""); ivjCopyMenuItem.setText(CALIDEMessages.getString(""CALIDE.CopyMenuItem"")); "
1," try { Vector otherV = sspace.getVector(other); Double similarity = Similarity.getSimilarity( similarityMeasure, vector, otherV); synchronized(mostSimilar) { mostSimilar.put(similarity, other); "," try { Vector XXXXX = sspace.getVector(other); Double XXXXX = Similarity.getSimilarity( XXXXXMeasure, vector, XXXXX); synchronized(mostSimilar) { mostSimilar.put(XXXXX, other); "
0, final ProducerBarrier<StubEntry> producerBarrier = disruptorWizard.getProducerBarrier(); final StubEntry stubEntry = producerBarrier.nextEntry(); producerBarrier.commit(stubEntry); return stubEntry; ," Node enclosingMethodNode = SelectionNodeProvider.getEnclosingNode(config.getRootNode(), config.getSelection(), MethodDefNode.class); if (enclosingMethodNode != null) { return enclosingMethodNode; "
0," deleteUserLink.click(); Alert alert = driver.switchTo().alert(); assertEquals(""Delete user?"", alert.getText()); try { Thread.sleep(AbstractTest.LOAD_SHORT_TIMEOUT_SECONDS * 1000); "," if (this == object) return true; if (object instanceof JTSComplex && super.equals(object)) { JTSComplex that = (JTSComplex) object; return Utilities.equals(this.elements, that.elements); "
1," startY = transformY( startY ); endY = transformY( endY ); cb.moveTo( startX, startY ); cb.setLineWidth( width ); cb.lineTo( endX, endY ); cb.setColorStroke( color ); cb.stroke( ); "," startY = transformY( startY ); endY = transformY( endY ); cb.moveTo( startX, startY ); cb.setLineWidth( width ); cb.lineTo( endX, endY ); cb.setColorStroke( color ); cb.stroke( ); "
1, Iterator<T> a = this.iterator(); while (a.hasNext()) { T next = a.next(); status = next.toString(); LocalPath p = Walking.findPath(endTile); if (p != null && p.validate()) { break; , Iterator<T> a = this.iterator(); while (a.hasNext()) { T XXXXX = a.XXXXX(); status = XXXXX.toString(); LocalPath XXXXX = Walking.findPath(endTile); if (XXXXX != null && XXXXX.validate()) { break; 
0," Bundle b = new Bundle(); CursorWrapper cursorWrapper = new CursorWrapper(getCursor()); Bundle bundle = cursorWrapper.respond(b); assertSame(Bundle.EMPTY, bundle); cursorWrapper.close(); "," if (!initialized) { throw new SecureVaultException(""SecretResolver has not been initialized, "" + ""it requires to be initialized, with the required "" + ""configurations before starting"", log); "
0," _frame.removeWindowListener(_windowListener); _windowListener = null; if (_firstPanel.getDockingManager() != null) { _firstPanel.getDockingManager().saveLayoutDataAs(""first_default""); ", boolean status = false; if (mCertificateServer != null && mCertificateServer.length() > 0 && mMeteringId != null && mMeteringId.length() > 0) { status = generateMeteringDataChallenge(); 
0, if (mappingTblViewer != null) { mappingTblViewer.setInput(controller.getMapper()); Table table = mappingTblViewer.getTable(); if (table.getItemCount() > 0) { table.showItem(table.getItem(0)); ," try { httpRequest.setContent(text.getBytes(""UTF-8"")); httpRequest.setContentType(""text/plain; charset=UTF-8""); httpRequest.addHeader(""Content-Type"", httpRequest.getContentType()); "
0," doWithInTimedBlock(new Runnable() { @Override public void run() { hierarchicalInfileObjectLoader.persist(customers[0], (Object[]) customers); hierarchicalInfileObjectLoader.flush(); "," POMultiQueryPackage pkg = new POMultiQueryPackage(new OperatorKey(scope, nig.getNextNodeId(scope))); pkg.setInCombiner(inCombiner); pkg.setSameMapKeyType(sameMapKeyType); return pkg; "
1," Map<String, Object> props = em.getProperties(); assertProperty(""openjpa.AutoClear"", props, AutoClearType.DATASTORE); assertProperty(""openjpa.IgnoreChanges"", props, Boolean.FALSE); "," Map<String, Object> props = em.getProperties(); assertProperty(""openjpa.AutoClear"", props, AutoClearType.DATASTORE); assertProperty(""openjpa.IgnoreChanges"", props, Boolean.FALSE); "
0," switch (featureID) { case Wps10Package.SUPPORTED_UO_MS_TYPE__DEFAULT: return basicSetDefault(null, msgs); case Wps10Package.SUPPORTED_UO_MS_TYPE__SUPPORTED: return basicSetSupported(null, msgs); "," ScriptC_sampler s = new ScriptC_sampler(pRS, mRes, R.raw.sampler); pRS.setMessageHandler(mRsMessage); initializeGlobals(pRS, s); s.invoke_sampler_test(); pRS.finish(); waitForMessage(); "
1," if (item instanceof ToolItem) { ToolItem tool = (ToolItem) item; if (tool.type == ToolType.shovel) { if (player.payStamina(4 - tool.level)) { level.setTile(xt, yt, Tile.dirt, 0); return true; "," if (item instanceof ToolItem) { ToolItem XXXXX = (ToolItem) item; if (XXXXX.type == ToolType.shovel) { if (player.payStamina(4 - XXXXX.level)) { level.setTile(xt, yt, Tile.dirt, 0); return true; "
1, Ftr ftr = (Ftr) wordmlPackage.getDocumentModel().getSections().get(sectionNumber-1) .getHeaderFooterPolicy() .getDefaultFooter().getJaxbElement(); return XmlUtils.marshaltoW3CDomDocument(ftr); , Ftr XXXXX = (Ftr) wordmlPackage.getDocumentModel().getSections().get(sectionNumber-1) .getHeaderFooterPolicy() .getDefaultFooter().getJaxbElement(); return XmlUtils.marshaltoW3CDomDocument(XXXXX); 
1," if(p.getOwner() instanceof INakedEntity){ buildSourcePopulationConstraint((ICompositionParticipant) p.getOwner(), p, ""SourcePopulationFor"" + NameConverter.capitalize(p.getName())); "," if(p.getOwner() instanceof INakedEntity){ buildSourcePopulationConstraint((ICompositionParticipant) p.getOwner(), p, ""SourcePopulationFor"" + NameConverter.capitalize(p.getName())); "
1," for (MultiValueResolutionDecision decision: decisions.values()) { List<String> values = decision.getValues(); values.remove(""""); if (values.size() == 1) { decision.keepOne(values.get(0)); "," for (MultiValueResolutionDecision decision: decisions.values()) { List<String> values = decision.getValues(); values.remove(""""); if (values.size() == 1) { decision.keepOne(values.get(0)); "
0," if (referenceIdOrSystemName != null && referenceCriterion != null){ public static void parse(String expression, TopicCriteria topicCriteria){ if (StringUtils.isBlank(expression)){ return; "," if (requireChange(this.length, length)) { Object oldValue = this.length; this.length = length; setChanged(); notifyObservers(new SGAttributeModification(""length"", oldValue, length)); "
1, Context context = ctx.getContext(); if (context != null) { if (context instanceof GeronimoStandardContext) { GeronimoStandardContext stdctx = (GeronimoStandardContext) context; try { stdctx.kill(); , Context XXXXX = ctx.getContext(); if (XXXXX != null) { if (XXXXX instanceof GeronimoStandardContext) { GeronimoStandardContext XXXXX = (GeronimoStandardContext) XXXXX; try { XXXXX.kill(); 
1, IndexShardState state = state(); return state == IndexShardState.RECOVERING || state == IndexShardState.STARTED || state == IndexShardState.RELOCATED || state == IndexShardState.CLOSED; , IndexShardState XXXXX = XXXXX(); return XXXXX == IndexShardState.RECOVERING || XXXXX == IndexShardState.STARTED || XXXXX == IndexShardState.RELOCATED || XXXXX == IndexShardState.CLOSED; 
1, switch (playStatus) { case Playing: playButton.setImageResource(android.R.drawable.ic_media_pause); break; case Paused: default: playButton.setImageResource(android.R.drawable.ic_media_play); , switch (playStatus) { case Playing: playButton.setImageResource(android.R.drawable.ic_media_pause); break; case Paused: default: playButton.setImageResource(android.R.drawable.ic_media_play); 
0," assertEquals(2, validCriterion.getConfiguredValues().size()); assertTrue(validCriterion.getConfiguredValues().contains(""a"")); assertTrue(validCriterion.getConfiguredValues().contains(""b"")); "," super(animationInterface, sourceLayerInterface, weaponProperties, scoreableInterface, relativeRelationship); this.total = total; this.weaponLayerCircularStaticPool = weaponLayerCircularStaticPool; "
0, if (obj instanceof TagHandlerKey) { TagHandlerKey other = (TagHandlerKey) obj; if (this.attributeName == null && other.attributeName == null) { return (this.tagName.equals(other.tagName)); ," System.out.print(""->"" + toVertex.getId()); if (existanceSet.contains(toVertex.getId())) System.out.println(""Oh, double entering!""); else existanceSet.add(toVertex.getId()); return false; "
1," return addMethodrefConstant(referencedClass.getName(), referencedMember.getName(referencedClass), referencedMember.getDescriptor(referencedClass), referencedClass, referencedMember); "," return addMethodrefConstant(referencedClass.getName(), referencedMember.getName(referencedClass), referencedMember.getDescriptor(referencedClass), referencedClass, referencedMember); "
1," Set<String> names = RoomHelpers.getAllNames(sg); if (!names.contains(""init"")) return ""init""; for (int i = 0; i < 1000; i++) { String name = ""init""+i; if (!names.contains(name)) return name; "," Set<StrXXXXXng> XXXXXs = RoomHelpers.getAllNames(sg); XXXXXf (!XXXXXs.contaXXXXXns(""XXXXXnXXXXXt"")) return ""XXXXXnXXXXXt""; for (XXXXXnt XXXXX = 0; XXXXX < 1000; XXXXX++) { StrXXXXXng XXXXX = ""XXXXXnXXXXXt""+XXXXX; XXXXXf (!XXXXXs.contaXXXXXns(XXXXX)) return XXXXX; "
1, ImmutableList.Builder<ObjectMapper> builder = new ImmutableList.Builder<ObjectMapper>(); for (ObjectMapper objectMapper : objectMappers) { if (objectMapper != mapper) { builder.add(objectMapper); , ImmutableList.Builder<ObjectMapper> builder = new ImmutableList.Builder<ObjectMapper>(); for (ObjectMapper objectMapper : objectMappers) { if (objectMapper != mapper) { builder.add(objectMapper); 
1," boolean globalBpEnable = DebugPlugin.getDefault().getBreakpointManager().isEnabled(); if (supportsBreakpoint(breakpoint)) { if (!globalBpEnable) { breakpointRemoved(breakpoint, null); return; "," boolean XXXXX = DebugPlugin.getDefault().getBreakpointManager().isEnabled(); if (supportsBreakpoint(breakpoint)) { if (!XXXXX) { breakpointRemoved(breakpoint, null); return; "
1," this.batchSize = batchSize; this.nodeHost = nodeHost; this.publishAuthUser = publishAuthUser; this.publishAuthPassword = publishAuthPassword; if (publishOverSSL) { this.publishProtocol = ""https""; "," this.batchSize = batchSize; this.nodeHost = nodeHost; this.publishAuthUser = publishAuthUser; this.publishAuthPassword = publishAuthPassword; if (publishOverSSL) { this.publishProtocol = ""https""; "
0," Log.d(TAG, ""updateCalls()""); final long maxdate = getMaxDate(cr, DataProvider.TYPE_CALL); final String[] callsProjection = new String[] { Calls.TYPE, Calls.DURATION, Calls.DATE, Calls.NUMBER "," SignedObject ref = (SignedObject) oref; SignedObject test = (SignedObject) otest; assertEquals(test.getAlgorithm(), ref.getAlgorithm()); try { assertEquals(test.getObject(), prop); "
0," IDocument document = fSourceViewer.getDocument(); fSourceViewer.setRedraw(false); document.set(text); fSourceViewer.setVisibleRegion(0, text.length()); fSourceViewer.setRedraw(true); "," SessionState state = ((JetspeedRunData) data).getPortletSessionState(((JetspeedRunData) data).getJs_peid()); if (!readSiteForm(data, state)) return; state.setAttribute(""mode"", ""properties""); "
1," String sequenceKey = ""ordernum""; int nextId = seqDao.getNextId(sequenceKey); int expected = nextId + 1; int actual = seqDao.getNextId(sequenceKey); assertEquals(expected, actual); "," String XXXXX = ""ordernum""; int XXXXX = seqDao.getNextId(XXXXX); int XXXXX = XXXXX + 1; int XXXXX = seqDao.getNextId(XXXXX); assertEquals(XXXXX, XXXXX); "
1," int currentValue = calculateColorInRange(this.startColor, this.endColor, passedTime, this.duration, this.function); if (currentValue == this.endColor) { return ANIMATION_FINISHED; "," int XXXXX = calculateColorInRange(this.startColor, this.endColor, passedTime, this.duration, this.function); if (XXXXX == this.endColor) { return ANIMATION_FINISHED; "
1, final int prime = 31; int result = 1; result = prime * result + ((code == null) ? 0 : code.hashCode()); result = prime * result + ((message == null) ? 0 : message.hashCode()); return result; , final int XXXXX = 31; int XXXXX = 1; XXXXX = XXXXX * XXXXX + ((code == null) ? 0 : code.hashCode()); XXXXX = XXXXX * XXXXX + ((message == null) ? 0 : message.hashCode()); return XXXXX; 
1, Vector base = (Vector)reductionGraph.firstElement(); Node thisnode; for (int i = 0; i < base.size(); i++) { thisnode = (Node)base.elementAt(i); thisnode.children = thisnode.getChildren(); , Vector XXXXX = (Vector)reductXXXXXonGraph.fXXXXXrstElement(); Node thXXXXXsnode; for (XXXXXnt XXXXX = 0; XXXXX < XXXXX.sXXXXXze(); XXXXX++) { thXXXXXsnode = (Node)XXXXX.elementAt(XXXXX); thXXXXXsnode.chXXXXXldren = thXXXXXsnode.getChXXXXXldren(); 
0," double min = Double.MAX_VALUE;; double max = -Double.MAX_VALUE; while ( input.hasNext() ) { double next = input.next().getRealDouble(); min = Math.min( next, min ); max = Math.max( next, max ); "," final String pmV = getBrowser().getDCHost().getPacemakerVersion(); try { if (pmV == null || Tools.compareVersions(pmV, ""1.1.7"") <= 0) { return HbOrderInfo.NOT_AVAIL_FOR_PCMK_VERSION; "
1, SimpleXMLParserDocumentAttribute[] attributes = getAttributes(); for (int i=0;i<attributes.length;i++){ if ( attributes[i].getName().equalsIgnoreCase( name )){ return( attributes[i] ); , SimpleXMLParserDocumentAttribute[] attributes = getAttributes(); for (int i=0;i<attributes.length;i++){ if ( attributes[i].getName().equalsIgnoreCase( name )){ return( attributes[i] ); 
1," String oldTitle = title; title = newTitle; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, XhtmlPackage.XHTML_CAPTION_TYPE__TITLE, oldTitle, title)); "," String XXXXX = title; title = newTitle; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, XhtmlPackage.XHTML_CAPTION_TYPE__TITLE, XXXXX, title)); "
1," log(""onKeyDown "" + keyCode); switch (keyCode) { case KeyEvent.KEYCODE_A: auditory(); return true; case KeyEvent.KEYCODE_L: visual(); return true; default: return super.onKeyDown(keyCode, event); "," log(""onKeyDown "" + keyCode); switch (keyCode) { case KeyEvent.KEYCODE_A: auditory(); return true; case KeyEvent.KEYCODE_L: visual(); return true; default: return super.onKeyDown(keyCode, event); "
0," Object oldNAME = nAME; nAME = newNAME; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, PowrmartPackage.TABLEATTRIBUTE_TYPE__NAME, oldNAME, nAME)); ", super(name); this.add(Predicates.not(new AttackingPredicate())); this.add(Predicates.not(new TappedPredicate())); this.add(new PhasedInPredicate()); this.add(new CanBlockPredicate()); 
1," assertThat( underTest.isParticipating( request ), is( true ) ); when( source.getConfiguration() ).thenReturn( null ); assertThat( underTest.isParticipating( request ), is( false ) ); "," assertThat( underTest.isParticipating( request ), is( true ) ); when( source.getConfiguration() ).thenReturn( null ); assertThat( underTest.isParticipating( request ), is( false ) ); "
1," FileResource res = this.service.getResource( new FileResourceName( this.name, name ) ); if ( ( res != null ) && !res.isFolder() ) { return new ResourceFileImpl( this.service, res.getName() ); "," FileResource XXXXX = this.service.getResource( new FileResourceName( this.name, name ) ); if ( ( XXXXX != null ) && !XXXXX.isFolder() ) { return new ResourceFileImpl( this.service, XXXXX.getName() ); "
0," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (pattern: ""); result.append(pattern); result.append(')'); return result.toString(); "," String testProjTemplate = getProjectName(testPathTemplate); String ptn = testProjTemplate.replaceFirst(quote(SRC_PROJECT_VARIABLE), ""\\\\E(.*)\\\\Q""); return compile(""\\Q"" + ptn + ""\\E""); "
0, if (ensureHoverCreated() && (fHover instanceof IInformationProviderExtension2)) return ((IInformationProviderExtension2)fHover).getInformationPresenterControlCreator(); return null; ," if(initialValue == null) return addValue; if(addValue == null) return initialValue; if(delimiter == null || """".equals(delimiter)){ return prepend ? addValue + initialValue : initialValue + addValue; "
1," MenuItem item = new MenuItem( text, asHTML, command ); boolean enabled = ApplicationPreferences.enabledFormat( format ); item.setEnabled( enabled ); createNewMenu.addItem( item ); "," MenuItem XXXXX = new MenuItem( text, asHTML, command ); boolean XXXXX = ApplicationPreferences.XXXXXFormat( format ); XXXXX.setEnabled( XXXXX ); createNewMenu.addItem( XXXXX ); "
1," dest.writeParcelable(sched_current, flags); dest.writeParcelableArray(sched_history, flags); dest.writeParcelableArray(sched_next, flags); dest.writeParcelableArray(stations, flags); "," dest.writeParcelable(sched_current, flags); dest.writeParcelableArray(sched_history, flags); dest.writeParcelableArray(sched_next, flags); dest.writeParcelableArray(stations, flags); "
1," logWriter.println(""***> Debugger started""); synchronizer.receiveMessage(JPDADebuggeeSynchronizer.SGNL_READY); long refTypeID = 0; try { refTypeID = getClassIDBySignature(DEBUGGEE_CLASS_SIGNATURE); "," logWriter.println(""***> Debugger started""); synchronizer.receiveMessage(JPDADebuggeeSynchronizer.SGNL_READY); long XXXXX = 0; try { XXXXX = getClassIDBySignature(DEBUGGEE_CLASS_SIGNATURE); "
0," assert value != null : ""value parameter may not be null.""; boolean wasFound = values.remove(value); assert wasFound : ""value parameter was not found inside this BibtexMultipleValues object.""; "," tag = HTML.Tag.UL; assertEquals(""ul"", tag.toString()); assertTrue(""breaks Flow"", tag.breaksFlow()); assertTrue(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); "
1," try { prepareStatement(UserSQL.findByCreditCard); cachedResults.setString(1, number); cachedResults.setInt(2, entityId.intValue()); execute(); conn.close(); return cachedResults; "," try { prepareStatement(UserSQL.findByCreditCard); cachedResults.setString(1, number); cachedResults.setInt(2, entityId.intValue()); execute(); conn.close(); return cachedResults; "
1, final String maximizedString = String.valueOf(shell.getMaximized()); final String positionString; final String sizeString; if (shell.getMaximized()) { positionString = null; sizeString = null; , final String maximizedString = String.valueOf(shell.getMaximized()); final String positionString; final String sizeString; if (shell.getMaximized()) { positionString = null; sizeString = null; 
0," Arc2D arc = new Arc2D.Float(x + transX, y + transY, w, h, offset, length, Arc2D.OPEN); checkState(); getGraphics2D().setPaint(getColor(swtGraphics.getBackgroundColor())); getGraphics2D().fill(arc); ", if (exp instanceof PsiLiteralExpression) { PsiLiteralExpression lit = (PsiLiteralExpression) exp; if(lit.getType().equals(stringType)) { escapeAndAppend(lit.getValue().toString()); return; 
1, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(TagsAdminTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , TestSuite XXXXX = new TestSuite(); XXXXX.addTest(LoginTests.suite()); XXXXX.addTest(TagsAdminTests.suite()); XXXXX.addTestSuite(StopSeleniumTest.class); return XXXXX; 
1," String oldOnclick = onclick; onclick = newOnclick; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_POLYLINE_ELEMENT__ONCLICK, oldOnclick, onclick)); "," String XXXXX = onclick; onclick = newOnclick; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_POLYLINE_ELEMENT__ONCLICK, XXXXX, onclick)); "
1, final int prime = 31; int result = 1; result = prime * result + ((originObj == null) ? 0 : originObj.hashCode()); result = prime * result + ((target == null) ? 0 : target.hashCode()); return result; , final int XXXXX = 31; int XXXXX = 1; XXXXX = XXXXX * XXXXX + ((originObj == null) ? 0 : originObj.hashCode()); XXXXX = XXXXX * XXXXX + ((target == null) ? 0 : target.hashCode()); return XXXXX; 
0," if (!objectRefs.containsKey(item)) { byte[] itemBytes = item.getData(); byte[] itemHeader = getObjectHeader(BinaryPlist.DATA, itemBytes.length); store(item, itemHeader, itemBytes); "," switch (URI_MATCHER.match(uri)){ case ALL_MESSAGES: return ""vnd.android.cursor.dir/rssitem""; case SPECIFIC_MESSAGE: return ""vnd.android.cursor.item/rssitem""; default: return null; "
0," if ((region & ALLREGIONS) == ALLREGIONS) return ""ALL""; else if ((region & US) == US) return ""US""; else if ((region & EU) == EU) return ""EU""; else if ((region & AZ) == AZ) return ""AZ""; return """"; ", String ret = null; PictogramElement pe = context.getPictogramElement(); Object bo = getBusinessObjectForPictogramElement(pe); if (bo instanceof EClass) { EClass ge = (EClass) bo; ret = ge.getName(); 
1," StringBuilder result = new StringBuilder(); result.append(""{""); result.append(""class=export_temp_purchase_tran_1_df""); result.append("", tempSid=""); result.append(this.tempSid); result.append("""," StringBuilder XXXXX = new StringBuilder(); XXXXX.append(""{""); XXXXX.append(""class=export_temp_purchase_tran_1_df""); XXXXX.append("", tempSid=""); XXXXX.append(this.tempSid); XXXXX.append("""
0," list.lock.lock(); try { checkModifications(); int removed = list.removeAll(c, start, read.size); if (removed > 0) { read = new SubListReadData(read.size - removed, list .getData()); return true; "," this.serverName = serverName; this.homeDir = homeDir; this.jndiPort =jndiPort; this.timeout = timeout; this.kind = kind; if (address == null || address.length() == 0){ this.address = ""127.0.0.1""; "
1," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (mixed: ""); result.append(mixed); result.append(')'); return result.toString(); "," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (mixed: ""); result.append(mixed); result.append(')'); return result.toString(); "
1," int position = 1; int size = buffer[0]; if (!nativeAcceleration) for (int i = 0; i < size; i++) { if (keysToUpdate[i]) { CONVERTER.putLong(buffer, position, keys[i]); keysToUpdate[i] = false; "," int position = 1; int size = buffer[0]; if (!nativeAcceleration) for (int i = 0; i < size; i++) { if (keysToUpdate[i]) { CONVERTER.putLong(buffer, position, keys[i]); keysToUpdate[i] = false; "
1," List<SNode> nodes = ((List<SNode>) BehaviorManager.getInstance().invoke(Object.class, node, ""call_findConceptAspectCollection_1567570417158062208"", new Class[]{SNode.class, LanguageAspect.class"," List<SNode> nodes = ((List<SNode>) BehaviorManager.getInstance().invoke(Object.class, node, ""call_findConceptAspectCollection_1567570417158062208"", new Class[]{SNode.class, LanguageAspect.class"
0, menuMgr = new MenuManager(); menuMgr.setRemoveAllWhenShown(true); menuMgr.addMenuListener(new IMenuListener() { public void menuAboutToShow(IMenuManager mgr) { fillContextMenu(mgr); , int v = nn.intValue(); ArrayList<Integer> t = tabOrder.get(annots); if (t == null) { t = new ArrayList<Integer>(); int size = annots.size() - 1; for (int k = 0; k < size; ++k) { t.add(zero); 
1, super(model); this.undoManager = undoManager; undoSupport.addUndoableEditListener(this); if (undoManager instanceof UndoRedoObservable) { ((UndoRedoObservable)undoManager).addUndoRedoListener(this); , super(model); this.undoManager = undoManager; undoSupport.addUndoableEditListener(this); if (undoManager instanceof UndoRedoObservable) { ((UndoRedoObservable)undoManager).addUndoRedoListener(this); 
1, if ((alphaC == null) && (w<=pc[camIndex].cx+pc[camIndex].cw) && (0>=pc[camIndex].cx-pc[camIndex].cw) && (h<=pc[camIndex].cy+pc[camIndex].ch) && (0>=pc[camIndex].cy-pc[camIndex].ch)){return true;, if ((alphaC == null) && (w<=pc[camIndex].cx+pc[camIndex].cw) && (0>=pc[camIndex].cx-pc[camIndex].cw) && (h<=pc[camIndex].cy+pc[camIndex].ch) && (0>=pc[camIndex].cy-pc[camIndex].ch)){return true;
0," for (int i = e.getIndex0(); i <= e.getIndex1(); i++) { AbstractDialogPage page = _pageList.getPage(i); page.setName(page.getFullTitle()); pagesPanel.add(page, page.getFullTitle(), i); "," final Map<String, Object> properties = toMap(pc); if (properties.isEmpty()) return; sb.append("" ""); final String jsonString = new Gson().toJson(properties); sb.append(removeNameQuotes(jsonString)); "
1," super( ""Could not transfer artifact "" + artifact + getString( "" from/to "", repository ) + getMessage( "": "", cause ), cause ); this.artifact = artifact; this.repository = repository; "," super( ""Could not transfer artifact "" + artifact + getString( "" from/to "", repository ) + getMessage( "": "", cause ), cause ); this.artifact = artifact; this.repository = repository; "
0, final int capacity = computeCapacity(expectedSize); keys = new int[capacity]; values = new double[capacity]; states = new byte[capacity]; this.missingEntries = missingEntries; mask = capacity - 1; , if (GbeanRef.class.isInstance(anItem) || JAXBElement.class.isInstance(anItem)) { getObjectContainer().remove(anItem); JAXBModelUtils.getGbeanRefs(getRootElement()).remove(anItem); 
0," Assert.hasText(designDocumentId, ""designDocumentId may not be null or empty""); restTemplate.post(dbURI.append(""_compact"").append(designDocumentId) .toString(), ""not_used"", VOID_RESPONSE_HANDLER); "," String line = """"; line += this.poorSignalStrength + "", ""; line += this.attention + "", ""; line += this.meditation + "", ""; for (int i = 0; i < NUM_BANDS; i++) { line += this.getFeatureValue(i) + "", ""; "
1," if(catalogFactory != null && ""Nexus Indexer"".equals(catalogFactory.getDescription())) { setErrorMessage(org.eclipse.m2e.core.ui.internal.Messages.MavenProjectWizardArchetypePage_error_no); "," if(catalogFactory != null && ""Nexus Indexer"".equals(catalogFactory.getDescription())) { setErrorMessage(org.eclipse.m2e.core.ui.internal.Messages.MavenProjectWizardArchetypePage_error_no); "
0," IntegerAttribute attr = (IntegerAttribute) item.getAttribute(qname); if(attr==null && value!=null) { attr = new HibIntegerAttribute(qname,value); item.addAttribute(attr); return; ", for(Effect effect : abnormalEffectMap.values()) { if(count == 0) break; if(effect.getTargetSlot() == targetSlot.ordinal()) { effect.endEffect(); abnormalEffectMap.remove(effect.getStack()); count--; 
1," TypeDeclaration declaration= ast.newTypeDeclaration(); declaration.setName(ast.newSimpleName(""newType"")); declaration.modifiers().addAll(ast.newModifiers(modifiers)); return declaration; "," TypeDeclaration declaration= ast.newTypeDeclaration(); declaration.setName(ast.newSimpleName(""newType"")); declaration.modifiers().addAll(ast.newModifiers(modifiers)); return declaration; "
0," final String assId = ""ass"" + UniqueSequence.getValue(); if (link.getType().getDecor1() == LinkDecor.EXTENDS || link.getType().getDecor2() == LinkDecor.EXTENDS) { addExtension(link, assId); return; ", singleSampleForAdvancedTableCompositionFilters.add(filter); if (this.singleSampleForAdvancedTableComposition != null) { this.singleSampleForAdvancedTableComposition.addFilter(filter); 
1," Menu menu = new Menu( shell, SWT.BAR ); MenuItem item = new MenuItem( menu, SWT.CASCADE ); item.addArmListener( mock( ArmListener.class ) ); assertTrue( item.isListening( SWT.Arm ) ); "," Menu XXXXX = new Menu( shell, SWT.BAR ); MenuItem XXXXX = new MenuItem( XXXXX, SWT.CASCADE ); XXXXX.addArmListener( mock( ArmListener.class ) ); assertTrue( XXXXX.isListening( SWT.Arm ) ); "
1, StatisticsController controller = Lookup.getDefault().lookup(StatisticsController.class); final StatisticsUI[] uis = getUI(statistics); for (StatisticsUI s : uis) { s.setup(statistics); , StatisticsController controller = Lookup.getDefault().lookup(StatisticsController.class); final StatisticsUI[] uis = getUI(statistics); for (StatisticsUI s : uis) { s.setup(statistics); 
0, if( set != null ) return set; Container parent = getParent(); if( parent == null ) return Color.BLACK; set = parent.getForeground(); if( set != null ) return set; return Color.BLACK; ," try { manager = loadClassStrict(""com.arjuna.ats.jta.TransactionManager"").getMethod(""transactionManager""); user = loadClassStrict(""com.arjuna.ats.jta.UserTransaction"").getMethod(""userTransaction""); "
1, if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; GradleLibrary that = (GradleLibrary)o; return super.equals(that) && myPaths.equals(that.myPaths); , if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; GradleLibrary XXXXX = (GradleLibrary)o; return super.equals(XXXXX) && myPaths.equals(XXXXX.myPaths); 
0," ContextCapabilities caps = GLContext.getCapabilities(); long function_pointer = caps.glFogCoordhNV; BufferChecks.checkFunctionAddress(function_pointer); nglFogCoordhNV(fog, function_pointer); "," Class[] pmt = constructor.getParameterTypes(); Object o=conArgs.get(pmt.length+1,null); Constructor[] args; if(o==null) { args=new Constructor[1]; conArgs.setEL(pmt.length+1,args); "
0," ArrayDeque q = populatedDeque(SIZE); for (int i = 0; i < SIZE; ++i) { assertEquals(i, ((Integer)q.peek()).intValue()); q.poll(); assertTrue(q.peek() == null || i != ((Integer)q.peek()).intValue()); "," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "
0," ActivityInfo activity = new ActivityInfo(genMonotonic(),_self.o,_self.self, newChannel(ParentScopeChannel.class)); instance(createActivity(activity)); instance(new TCONDINTERCEPT(activity.parent)); "," EntityBuilder.addValue(cluster, ""map_sheet"", """"); EntityBuilder.addValue(cluster, ""map_sheet"", """"); ValidationResultFlag result = cluster.validateMinCount(""map_sheet""); assertTrue(result.isOk()); "
1, ScopePath currentPath = scopePath; while (!CodeDefaultScopeDescriptor.NAME.equals(currentPath.getLastScope().getName())) { removeFromCache(currentPath); currentPath = currentPath.getParentPath(); , ScopePath currentPath = scopePath; while (!CodeDefaultScopeDescriptor.NAME.equals(currentPath.getLastScope().getName())) { removeFromCache(currentPath); currentPath = currentPath.getParentPath(); 
1," TargetClass target = new TargetClass(); target.value = 1; expectedException.expect(AssertionError.class); expectedException.expectMessage(""method (pre-condition)""); target.method(0); "," TargetClass XXXXX = new TargetClass(); XXXXX.value = 1; expectedException.expect(AssertionError.class); expectedException.expectMessage(""method (pre-condition)""); XXXXX.method(0); "
1," int rows = ldim.getFirstDim(); int cols = ldim.getLastDim(); if(rows < cols) return Dimensions.valueOf(rows,rows); else if(rows > cols) return Dimensions.valueOf(cols,cols); else return ldim; "," int XXXXX = ldim.getFirstDim(); int XXXXX = ldim.getLastDim(); if(XXXXX < XXXXX) return Dimensions.valueOf(XXXXX,XXXXX); else if(XXXXX > XXXXX) return Dimensions.valueOf(XXXXX,XXXXX); else return ldim; "
1, DataOutputStream out = null; try { out = new DataOutputStream(new FileOutputStream(file)); for (int i = 0; i < LOOPS; i++) { out.writeInt(i); IOUtil.ERR().println(i); ConcurrencyUtil.sleep(10); , DataOutputStream XXXXX = null; try { XXXXX = new DataOutputStream(new FXXXXXleOutputStream(fXXXXXle)); for (XXXXXnt XXXXX = 0; XXXXX < LOOPS; XXXXX++) { XXXXX.wrXXXXXteInt(XXXXX); IOUtXXXXXl.ERR().prXXXXXntln(XXXXX); ConcurrencyUtXXXXXl.sleep(10); 
1," int dash = block.indexOf(""-""); String b, e, s; if (dash < 0) { int comma = block.indexOf("",""); if (comma > 0) { elements = block.substring(1, block.length() - 1).split("",""); return; "," int XXXXX = block.indexOf(""-""); String b, e, s; if (XXXXX < 0) { int XXXXX = block.indexOf("",""); if (XXXXX > 0) { elements = block.substring(1, block.length() - 1).split("",""); return; "
1, secretKnown = b; if (b) { erklaerung01.setText(Messages.MFlow_0); erklaerung02.setText(Messages.MFlow_1); erklaerung03.setText(Messages.MFlow_2); erklaerung04.setText(Messages.MFlow_3); , secretKnown = b; if (b) { erklaerung01.setText(Messages.MFlow_0); erklaerung02.setText(Messages.MFlow_1); erklaerung03.setText(Messages.MFlow_2); erklaerung04.setText(Messages.MFlow_3); 
1," NodeWeightCentrality nwc = new NodeWeightCentrality(); Graph graph = TestUtil.getEmtpyGraph(); HashMap<Node , Double> result = nwc.getWeight(graph); assertTrue(result.isEmpty()); "," NodeWeightCentrality XXXXX = new NodeWeightCentrality(); Graph XXXXX = TestUtil.getEmtpyGraph(); HashMap<Node , Double> result = XXXXX.getWeight(XXXXX); assertTrue(result.isEmpty()); "
1," String a = ""a""; String a1 = ""a""; Dictionary dict = getDict(); dict.put(asSL(a)); dict.put(asSL(a1)); Set<String> set = dict.asStringSet(); assertTrue(set.contains(a)); assertEquals(1, set.size()); "," String XXXXX = ""XXXXX""; String XXXXX1 = ""XXXXX""; DictionXXXXXry XXXXX = getDict(); XXXXX.put(XXXXXsSL(XXXXX)); XXXXX.put(XXXXXsSL(XXXXX1)); Set<String> set = XXXXX.XXXXXsStringSet(); XXXXXssertTrue(set.contXXXXXins(XXXXX)); XXXXXssertEquXXXXXls(1, set.size()); "
1, switch (featureID) { case MappingPackage.FUNCTION_PAIR__IN2OUT: setIn2out((EOperation)null); return; case MappingPackage.FUNCTION_PAIR__OUT2IN: setOut2in((EOperation)null); return; , switch (featureID) { case MappingPackage.FUNCTION_PAIR__IN2OUT: setIn2out((EOperation)null); return; case MappingPackage.FUNCTION_PAIR__OUT2IN: setOut2in((EOperation)null); return; 
1, IElementType requestContextElementType = EcoreElementTypes.getElementType(getVisualID(request)); return requestContextElementType != null ? requestContextElementType : myElementType; , IElementType requestContextElementType = EcoreElementTypes.getElementType(getVisualID(request)); return requestContextElementType != null ? requestContextElementType : myElementType; 
1," Display.getDefault().syncExec(new Runnable() { public void run() { String id = ""org.grails.ide.eclipse.ui.preferencePage""; PreferencesUtil.createPreferenceDialogOn(getShell(), id, new String[] { id "," Display.getDefault().syncExec(new Runnable() { public voXXXXX run() { String XXXXX = ""org.grails.XXXXXe.eclipse.ui.preferencePage""; PreferencesUtil.createPreferenceDialogOn(getShell(), XXXXX, new String[] { XXXXX "
1, ImageWriteParam imageWriteParam = writer.getDefaultWriteParam(); imageWriteParam.setCompressionMode(ImageWriteParam.MODE_EXPLICIT); imageWriteParam.setCompressionType(value); return imageWriteParam; , ImageWriteParam XXXXX = writer.getDefaultWriteParam(); XXXXX.setCompressionMode(ImageWriteParam.MODE_EXPLICIT); XXXXX.setCompressionType(value); return XXXXX; 
0," if (program.typeOracle.isInstantiatedType(x)) { for (JClassType cur = x; cur != null; cur = cur.getSuperClass()) { addImplementor(cur, x); addInterfacesImplementorRecursive(cur, x); ", String newVal = setting.getText(); try{ int newValInt = Integer.parseInt(newVal); if( echoLbl!=null ){ echoLbl.setText( DisplayFormatters.formatByteCountToBitsPerSec(newValInt*1024) ); 
0," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (type: ""); result.append(type); result.append(')'); return result.toString(); "," boolean result = false; String spiderRequest = (String) request.getAttribute(""_REQUEST_FROM_SPIDER_""); if (UtilValidate.isNotEmpty(spiderRequest)) { if (""Y"".equals(spiderRequest)) { return true; "
0," if (editingContext.getEObject() instanceof TableCompositionEditorSample) { return new TableCompositionEditorSamplePropertiesEditionComponent(editingContext, editingContext.getEObject(), mode); "," Attributes attrs = new BasicAttributes(); String str = LdapUtils.getPrintableProperty(addr.getPostOfficeAddress()); if (StringUtils.isNotEmpty(str)) { attrs.put(""postOfficeBox"", str); "
0, Object src = evt.getSource(); if (src == zSlider || src == tSlider) { formatPlane(); OneKnobSlider slider = (OneKnobSlider) src; if (!slider.isDragging()) { handleSliderReleased(); , ImageRepresentation rep = super.getRepresentation(new ImageRepresentation()); rep.setAltText(this.altText); rep.setUrl(this.url); rep.setId(this.id); rep.setI18n(getI18nMap()); return rep; 
0," try { AttributeHandleSet ahs = newAttributeSet( aaHandle ); defaultFederate.rtiamb.publishObjectClassAttributes( getObjectClassHandle(-1), ahs ); expectedException( ObjectClassNotDefined.class ); "," PersistentWorkspace workspace = new PersistentWorkspace(); workspace = pm.makePersistent(workspace); permissionManager .createWorkspacePermissionForCurrentUser(workspace, pm); return workspace; "
1, super(omElement); startIconPath = BPEL2SVGFactory.getInstance().getIconPath(this.getClass().getName()); endIconPath = BPEL2SVGFactory.getInstance().getEndIconPath(this.getClass().getName()); , super(omElement); startIconPath = BPEL2SVGFactory.getInstance().getIconPath(this.getClass().getName()); endIconPath = BPEL2SVGFactory.getInstance().getEndIconPath(this.getClass().getName()); 
0," if(isAuthenticated()) logout(); else { auth = browser = browser2 = false; setAuthURL(); browser = true; newIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(authURL)); startActivity(newIntent); "," mGradientState.setStroke(width, color, dashWidth, dashGap); if (mStrokePaint == null) { mStrokePaint = new Paint(Paint.ANTI_ALIAS_FLAG); mStrokePaint.setStyle(Paint.Style.STROKE); "
1, if (mrjVersion >= 3.0f && mrjVersion < 4.0f) return 3; else if (mrjVersion >= 2.1f && mrjVersion < 3.0f) return 2; else if (mrjVersion >= 1.5f && mrjVersion < 2.1f) return 1; return -1; , if (mrjVersion >= 3.0f && mrjVersion < 4.0f) return 3; else if (mrjVersion >= 2.1f && mrjVersion < 3.0f) return 2; else if (mrjVersion >= 1.5f && mrjVersion < 2.1f) return 1; return -1; 
0," final ItemBowStringDef stringDef = EntityHandler .getItemBowStringDef(bow.getID()); if (!Config.members) { player.getActionSender().sendMessage( ""This feature is not avaliable in f2p""); return true; "," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (name: ""); result.append(name); result.append(')'); return result.toString(); "
0," mTestUtility = new DbTestUtility(getContext()); createApplication(); mApplication = getApplication(); if(mApplication == null){ throw(new RuntimeException(""Unable to create main application"")); "," String output = startString; Intent returnIntent = new Intent(); returnIntent.putExtra(""returnval"", output); setResult(RESULT_CANCELED, returnIntent); mVibrator.cancel(); finish(); "
1," mQuickBibleChangeLink.setText(""ABC""); mQuickBibleChangeLink.setVisibility(View.VISIBLE); mQuickCommentaryChangeLink.setText(""DEF""); mQuickCommentaryChangeLink.setVisibility(View.VISIBLE); "," mQuickBibleChangeLink.setText(""ABC""); mQuickBibleChangeLink.setVisibility(View.VISIBLE); mQuickCommentaryChangeLink.setText(""DEF""); mQuickCommentaryChangeLink.setVisibility(View.VISIBLE); "
0," if (this.width == width) return; this.width = width; Dimension d = new Dimension(width, getHeight()); setMinimumSize(d); setPreferredSize(d); setMaximumSize(d); setSize(d); repaint(); "," try { String result = """"; String feedback; if(numOpts > 1) { result = ""You must select only one of --all, --id, --user, --dn, --gid, --gname, or --host""; System.err.println(result); return; "
1," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (group: ""); result.append(group); result.append(')'); return result.toString(); "," if (eIsProxy()) return super.toString(); StringBuffer XXXXX = new StringBuffer(super.toString()); XXXXX.append("" (group: ""); XXXXX.append(group); XXXXX.append(')'); return XXXXX.toString(); "
0, if (fReverseModeEnabled && doCanResume(context)) { ICommand<MIInfo> cmd = null; if (context instanceof IContainerDMContext) { cmd = fCommandFactory.createMIExecReverseContinue(context); ," Object oldSTAGE = sTAGE; sTAGE = newSTAGE; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, PowrmartPackage.SESSTRANSFORMATIONINST_TYPE__STAGE, oldSTAGE, sTAGE)); "
1," resultStatus.addItem(""200 - OK"", ""200""); resultStatus.addItem(""201 - Created"", ""201""); resultStatus.addItem(""404 - Not found"", ""404""); resultStatus.addItem(""500 - Server error"", ""500""); "," resultStatus.addItem(""200 - OK"", ""200""); resultStatus.addItem(""201 - Created"", ""201""); resultStatus.addItem(""404 - Not found"", ""404""); resultStatus.addItem(""500 - Server error"", ""500""); "
0," Member member = new Member(); Set<ConstraintViolation<Member>> violations = validator.validate(member); Assert.assertEquals(""Four violations were expected"", 3, violations.size()); ", Node copy = super.copy(); ((OpMemberNode) copy).method = this.method; ((OpMemberNode) copy).receivingObj = this.receivingObj; ((OpMemberNode) copy).returnObj = this.returnObj; return copy; 
0, ff = delegate.transform(ff); if (ff instanceof FeatureFilter.OverlapsLocation) { return new FeatureFilter.OverlapsLocation(projectLocation(((FeatureFilter.OverlapsLocation) ff).getLocation())); , if (obj instanceof RequiredComponentDescription) { RequiredComponentDescription desc = (RequiredComponentDescription) obj; return fId.equals(desc.fId) && fRange.equals(desc.fRange); 
0," final int result = ArrayUtil.getCopyLength(array, offset) * ArrayUtil.getDataType(array).getSize(); if ((offset > 0) && (offset < step)) return (result / step) + 1; return result / step; "," if (isElementAvailable(payment, ""chosenNonAcceptedLoanRepayments"")) { selenium.select(""chosenNonAcceptedLoanRepayments"", payment); selenium.click(""defineAcceptedPaymentTypes.button.addRepayments""); "
0," return new BatchCall(""Loading repositories."") { public void doCall() throws Exception { OmeroDataService service = context.getDataService(); result = service.getFSRepositories(ctx, userID); "," try { Config config = Config.getInstance(); int options =config.getDefaultIntValue(""kdc_default_options"", ""libdefaults""); if ((options & RENEWABLE_OK) == RENEWABLE_OK) { set(RENEWABLE_OK, true); "
1," if (ivjPasteMenuItem == null) { try { ivjPasteMenuItem = new JMenuItem(); ivjPasteMenuItem.setName(""PasteMenuItem""); ivjPasteMenuItem.setText(CALIDEMessages.getString(""CALIDE.PasteMenuItem"")); "," if (ivjPasteMenuItem == null) { try { ivjPasteMenuItem = new JMenuItem(); ivjPasteMenuItem.setName(""PasteMenuItem""); ivjPasteMenuItem.setText(CALIDEMessages.getString(""CALIDE.PasteMenuItem"")); "
0," Set<String> parents = new HashSet<String>(); synchronized(localEphemeralDirs) { for (int i = localEphemeralDirs.size() - 1; i >= 0; i--) { try { ormdir(localEphemeralDirs.get(i),false); "," if (jButtonCancel == null) { jButtonCancel = new JButton(); jButtonCancel.setText(""Cancel""); jButtonCancel.setMnemonic('c'); jButtonCancel.setToolTipText(""Lose changes and return""); "
1," if (id != null && cache != null) { if (NucleusLogger.CACHE.isDebugEnabled()) { NucleusLogger.CACHE.debug(LOCALISER.msg(""003009"", getIdentityAsString(id), String.valueOf(cache.size()))); "," if (id != null && cache != null) { if (NucleusLogger.CACHE.isDebugEnabled()) { NucleusLogger.CACHE.debug(LOCALISER.msg(""003009"", getIdentityAsString(id), String.valueOf(cache.size()))); "
1," this.control = LazyBones.getInstance(); top = new TimerOptionsPanel(timer, prog, mode); this.timer = timer; this.oldTimer = (LazyBonesTimer) timer.clone(); this.program = prog; initGUI(); "," this.control = LazyBones.getInstance(); top = new TimerOptionsPanel(timer, prog, mode); this.timer = timer; this.oldTimer = (LazyBonesTimer) timer.clone(); this.program = prog; initGUI(); "
1," if (descr == null) return false; GeoPoint tap = pj.fromPixels((int)e.getX(), (int)e.getY()); float distance = mCenter.distanceTo(tap); if (distance > MAX_DISTANCE) { return false; "," if (descr == null) return false; GeoPoint XXXXX = pj.fromPixels((int)e.getX(), (int)e.getY()); float XXXXX = mCenter.XXXXXTo(XXXXX); if (XXXXX > MAX_DISTANCE) { return false; "
0, switch (featureID) { case ApplauseDslPackage.VIEW_CALL__VIEW: setView((View)null); return; case ApplauseDslPackage.VIEW_CALL__PROVIDER: setProvider((ProviderConstruction)null); return; ," String label = crop(((InitialState)object).getDescription()); return label == null || label.length() == 0 ? getString(""_UI_InitialState_type"") : getString(""_UI_InitialState_type"") + "" "" + label; "
1, double avgError = 0; int numConnectedViews = 0; for ( ViewErrorPairWise error : connectedViews ) if ( error.isConnected() ) { avgError += error.getAvgError(); ++numConnectedViews; , double avgError = 0; int numConnectedViews = 0; for ( ViewErrorPairWise error : connectedViews ) if ( error.isConnected() ) { avgError += error.getAvgError(); ++numConnectedViews; 
1," if (m_scheduler == null) throw new IllegalStateException( ""rescedule: Cannot schedule a service whose scheduler is set to null""); if (runned) { m_scheduler.unschedule(this,poll_interval); "," if (m_scheduler == null) throw new IllegalStateException( ""rescedule: Cannot schedule a service whose scheduler is set to null""); if (runned) { m_scheduler.unschedule(this,poll_interval); "
0, IElementType requestContextElementType = EcoreElementTypes.getElementType(getVisualID(request)); return requestContextElementType != null ? requestContextElementType : myElementType; ," if (Window.confirm(""Changes would be applied after a restart. Do you want to do it now ?"")) { presenter.getDeploymentManager().restartServiceProvider(serviceProvider.getServiceProvider()); "
0, TempStream ts = _tempStream; _tempStream = null; _tempStreamSize = 0; try { if (ts != null) { if (_os == null) openLog(); try { ReadStream is = ts.openRead(); try { is.writeToStream(_os); ," if (chk_lion.isChecked()) { if (chk_cons.isChecked()) { Toast.makeText(NEAK_Options_Activity.this, ""Lionheart Tweaks will be enabled on reboot"", Toast.LENGTH_SHORT).show(); boo_lion = true; "
1," Preconditions.checkArgument(shape_args_ok(x, m)); int M = x.size(); double result = 1.0; for (int i = 1; i <= M - m; i++) { result *= 1.0 - Math.cos(x.doubleValueOf(i - 1) * Math.PI / 2.0); "," PrecondXXXXXtXXXXXons.checkArgument(shape_args_ok(x, m)); XXXXXnt XXXXX = x.sXXXXXze(); double XXXXX = 1.0; for (XXXXXnt XXXXX = 1; XXXXX <= XXXXX - m; XXXXX++) { XXXXX *= 1.0 - XXXXXath.cos(x.doubleValueOf(XXXXX - 1) * XXXXXath.PI / 2.0); "
1, dataView.setDataDividerLocation(); dataView.setAnnotationDividerLocation(); transferAnnotation(true); setVisible(false); dataView.stopGetz(); dataView.dispose(); BigPane.srsFrame = null; dispose(); , dataView.setDataDividerLocation(); dataView.setAnnotationDividerLocation(); transferAnnotation(true); setVisible(false); dataView.stopGetz(); dataView.dispose(); BigPane.srsFrame = null; dispose(); 
0," final String AS_CLASS = ""package org.test\n"" + ""{\n"" + "" public class MetaTagTest\n"" + "" {\n"" + "" [MyMetaTag(param=\""value\"")] \n"" + "" public function myFunction():void\n"" + "" {\n"" + "" "," StringBuffer sb = new StringBuffer(); for (Cluster c: cl.clusterList){ sb.append(""[""); for (Object o : c.elementList ) { IMolecule m = (IMolecule) o; sb.append(m.toString()+"" ""); "
0," Vector2d vec = laserPistol.getKnockback(true); assertTrue(vec.getX() == new Vector2d(0,0).getX()); assertTrue(vec.getY() == new Vector2d(0,0).getY()); assertTrue(vec.getlength() == 0); ", StatisticsAW.shared().recordEvent(StatisticsAW.EVENT_GOTO_BACK); if(goToHistory.canGoBack()) { setCaretPosition(goToHistory.getBackPosition(getCaretPosition())); refreshMainMenuBar(); 
0, final DefaultActionGroup group = new DefaultActionGroup(); final AnAction[] groupingActions = createGroupingActions(); for (AnAction groupingAction : groupingActions) { group.add(groupingAction); ," try { serverSocket[0] = server.accept(); BinaryChannel serverChannel = new BinaryChannel( serverSocket[0], NetTransferMode.JINGLETCP); runBinaryChannelLoop(serverQueue, serverChannel); "
0," String output = startString; Intent returnIntent = new Intent(); returnIntent.putExtra(""returnval"", output); setResult(RESULT_CANCELED, returnIntent); mVibrator.cancel(); finish(); "," super(FieldEditorPreferencePage.GRID); VimPlugin plugin = VimPlugin.getDefault(); setPreferenceStore(plugin.getPreferenceStore()); setDescription(plugin.getMessage(""preferences.description"")); "
0," final Member empMember = result.getAxes()[1].getPositions().get(row).get(0); assertEquals(expectedMember, empMember.getUniqueName()); final Cell cell = result.getCell(new int[]{0, row"," super(Zone.GRAVEYARD, new ScavengeEffect(), costs); this.timing = TimingRule.SORCERY; this.addCost(new ExileSourceFromGraveCost()); this.addTarget(new TargetCreaturePermanent(true)); "
1," String pdfTemplate = """"; int pdfPageNumber = 1; try { pdfTemplate = xpath.evaluate(""./format/pdf/@template"", page); pdfPageNumber = Integer.parseInt(xpath.evaluate( ""./format/pdf/@page"", page)); "," String pdfTemplate = """"; int pdfPageNumber = 1; try { pdfTemplate = xpath.evaluate(""./format/pdf/@template"", page); pdfPageNumber = Integer.parseInt(xpath.evaluate( ""./format/pdf/@page"", page)); "
0," VCloudDirectorAdminApi api = requestsSendResponses(loginRequest, sessionResponse, edit, editResponse); assertEquals(api.getNetworkApi().edit(networkAdminHref, editNetwork()), editNetworkTask()); "," FormEntryAdapter textListener = new FormEntryAdapter(this, actionBars) { public void textValueChanged(FormEntry entry) { try { ((IFragment) getPluginBase()).setPluginVersion(getVersion()); "
1," T worldToKey = (T) this.worldToKey.invert(null); worldToInit.concat(worldToKey, oldWorldToNewWorld); this.worldToKey.set(worldToInit); this.worldToKey.concat(keyToCurr, worldToCurr); "," T worldToKey = (T) this.worldToKey.invert(null); worldToInit.concat(worldToKey, oldWorldToNewWorld); this.worldToKey.set(worldToInit); this.worldToKey.concat(keyToCurr, worldToCurr); "
0, ObjectOutputStream oos=null; Resource persis = getFile(task); if(persis.exists()) persis.delete(); try { oos = new ObjectOutputStream(persis.getOutputStream()); oos.writeObject(task); , switch(featureID) { case CatalogPackage.CATALOG_RESOURCE_PARAMETER__NAME: setName(NAME_EDEFAULT); return; case CatalogPackage.CATALOG_RESOURCE_PARAMETER__VALUE: getValue().clear(); return; 
1," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; "," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; "
1, AccessPointSearchCriteriaDto dto = apSearchControl.getSearchCriteria(); dto.setOrderBy(apTable.getCurrentSortField()); dto.setOrderByDir(apTable.getCurrentSortDirection()); return dto; , AccessPointSearchCriteriaDto XXXXX = apSearchControl.getSearchCriteria(); XXXXX.setOrderBy(apTable.getCurrentSortField()); XXXXX.setOrderByDir(apTable.getCurrentSortDirection()); return XXXXX; 
1, if( action.shouldVisitParameterDeclarations ){ switch( action.visit( this ) ){ case ASTVisitor.PROCESS_ABORT : return false; case ASTVisitor.PROCESS_SKIP : return true; default : break; , if( action.shouldVisitParameterDeclarations ){ switch( action.visit( this ) ){ case ASTVisitor.PROCESS_ABORT : return false; case ASTVisitor.PROCESS_SKIP : return true; default : break; 
1," FileInfo documentFileInfo = pathHelper.resolvePathFileInfo(fileName); boolean versionable = nodeService.hasAspect(documentFileInfo.getNodeRef(), ContentModel.ASPECT_VERSIONABLE); return versionable; "," FileInfo XXXXX = pathHelper.resolvePathFileInfo(fileName); boolean XXXXX = nodeService.hasAspect(XXXXX.getNodeRef(), ContentModel.ASPECT_VERSIONABLE); return XXXXX; "
1, if (entry.getServiceReference() != null) { return entry.getMessage() + LoggingConstants.SERVICE_PREFIX + entry.getServiceReference().toString() + LoggingConstants.SERVICE_POSTFIX; , if (entry.getServiceReference() != null) { return entry.getMessage() + LoggingConstants.SERVICE_PREFIX + entry.getServiceReference().toString() + LoggingConstants.SERVICE_POSTFIX; 
0, this.container = container; chatManager = new XMPPChatManager(this); roster = new org.eclipse.ecf.presence.roster.Roster(container); rosterManager = new PresenceRosterManager(roster); ," Action pageSizeAction = new Action(String.format(""%d items"", pageSize), Action.AS_RADIO_BUTTON) { @Override public void run() { if (isChecked()) { contentProvider.setPageLength(pageSize); refresh(); "
0," String input = getInputStringWithManySpaces("" ""); String expectedOutput = getHtmlBody("" ""); assertTrue(HtmlTools.isHtmlNode(input)); assertEquals(expectedOutput, HtmlTools.extractHtmlBody(input)); ", long maxTime = 0; for (CompanyStatistics companyStatistics : _serverStatistics.getCompanyStatisticsSet()) { if (companyStatistics.getMaxTime() > maxTime) { maxTime = companyStatistics.getMaxTime(); 
0," SessionState state = ((JetspeedRunData) data).getPortletSessionState(((JetspeedRunData) data).getJs_peid()); if (!readSiteForm(data, state)) return; state.setAttribute(""mode"", ""pages""); "," for (int x = 0; x < getWidth(); x++) { for (int y = 0; y < getHeight(); y++) { if (Colors.getColorDifference(i, this.getPixelValue(x, y)) < d) { this.setPixelValue(x, y, getMaxPixelValue()); "
1," TemplateOptions options = new CloudStackTemplateOptions().ipOnDefaultNetwork(""10.0.0.1""); assertEquals(options.as(CloudStackTemplateOptions.class).getIpOnDefaultNetwork(), ""10.0.0.1""); "," TemplateOptions XXXXX = new CloudStackTemplateOptions().ipOnDefaultNetwork(""10.0.0.1""); assertEquals(XXXXX.as(CloudStackTemplateOptions.class).getIpOnDefaultNetwork(), ""10.0.0.1""); "
1, AbstractOutputter printer = null; switch (outputType) { case DISASSEMBLER: printer = new DisassemblerOutputter(); break; case DECOMPILER: printer = new DecompilerOutputter(); break; , AbstractOutputter XXXXX = null; switch (outputType) { case DISASSEMBLER: XXXXX = new DisassemblerOutputter(); break; case DECOMPILER: XXXXX = new DecompilerOutputter(); break; 
1," if(DEBUG || verbose || eglDisplayCounter.size() > 0 ) { System.err.println(""EGLDisplayUtil.EGLDisplays: Shutdown (open: ""+eglDisplayCounter.size()+"")""); if(DEBUG) { Thread.dumpStack(); "," if(DEBUG || verbose || eglDisplayCounter.size() > 0 ) { System.err.println(""EGLDisplayUtil.EGLDisplays: Shutdown (open: ""+eglDisplayCounter.size()+"")""); if(DEBUG) { Thread.dumpStack(); "
1," fireButtonEvent(ButtonEvent.HIDE_BUTTON, ButtonNames.BACK); fireButtonEvent(ButtonEvent.ENABLE_BUTTON, ButtonNames.FINISH); fireButtonEvent(ButtonEvent.HIDE_BUTTON, ButtonNames.NEXT); "," fireButtonEvent(ButtonEvent.HIDE_BUTTON, ButtonNames.BACK); fireButtonEvent(ButtonEvent.ENABLE_BUTTON, ButtonNames.FINISH); fireButtonEvent(ButtonEvent.HIDE_BUTTON, ButtonNames.NEXT); "
1," this.withLogging = Boolean.parseBoolean(elem.getAttributeValue(""logging"")); final List<Element> inflowElems = elem.getChildren(XmlElementNames.RoadInflow); parseAndSortInflowElements(inflowElems); "," this.withLogging = Boolean.parseBoolean(elem.getAttributeValue(""logging"")); final List<Element> inflowElems = elem.getChildren(XmlElementNames.RoadInflow); parseAndSortInflowElements(inflowElems); "
0," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," if(isAuthenticated()) logout(); else { auth = browser = browser2 = false; setAuthURL(); browser = true; newIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(authURL)); startActivity(newIntent); "
0, model.clear(); if (list==null) return; boolean preserveHierarchy=transformer.isPreserveHierarchy(); if (!transformer.isShowSummary()){ preserveHierarchy=false; removeSummaries(list); ," if (v == calcButton) { calcMort(); InputMethodManager imm = (InputMethodManager) getSystemService(Context.INPUT_METHOD_SERVICE); imm.hideSoftInputFromWindow(calcButton.getWindowToken(), 0); "
0, super(ErrorManager.MSG_GRAMMAR_NONDETERMINISM); this.probe = probe; this.problemState = problemState; if ( probe.dfa.isTokensRuleDecision() ) { setMessageID(ErrorManager.MSG_TOKEN_NONDETERMINISM); ," StringUserTypeMapper mapper = new StringUserTypeMapper(null); assertNull(mapper.mapLdapEntryToSakaiUserType(new LDAPEntry(), new SimpleLdapAttributeMapper())); assertNull(mapper.getUserType()); "
0," if (usersWizard == null) { setUsersWizard(new DecoratedCompletedWizard(getParent(), this, parent.getWizardManager().getCompletedWizard(getBase(), getParent().getCurrentUserId(), false))); "," return new SerializerRead() { public Object readValues(DataRead dr) throws BasicException { return new CategoryInfo( dr.getString(1), dr.getString(2), ImageUtils.readImage(dr.getBytes(3)) ); "
0," super(); _theControl = control; if (jtsLogger.logger.isDebugEnabled()) { jtsLogger.logger.debug(""ServerRecoveryTopLevelAction::ServerRecoveryTopLevelAction ( "" + _theUid + "" )""); ", this.retransmitter = retransmitter; this.storage = storage; numReplicas = ProcessDescriptor.getInstance().numReplicas; prepareEpoch = new long[numReplicas]; prepared = new BitSet(); 
1, if ( from != null && to != null ) { int comparison = from.compareTo( to ); if ( comparison > 0 || (comparison == 0 && (!fromInclusive || !toInclusive)) ) { impossibleMatch = true; , if ( from != null && to != null ) { int comparison = from.compareTo( to ); if ( comparison > 0 || (comparison == 0 && (!fromInclusive || !toInclusive)) ) { impossibleMatch = true; 
0," Map<Field, String> messages = new LinkedHashMap<Field, String>(); for (Object propertyId : form.getItemPropertyIds()) { Field field = form.getField(propertyId); try { field.validate(); "," System.out.println(""ENTRER AVANT INITAGENT.....""); this.initAgents(100); System.out.println(""VALEUR DE expNum..""+this.expNum+""...""+this.expP); this.init(this.expNum,1,this.expP); "
0, switch (featureID) { case CSTPackage.COLLECTION_TYPE_CS__COLLECTION_TYPE_IDENTIFIER : return getCollectionTypeIdentifier(); case CSTPackage.COLLECTION_TYPE_CS__TYPE_CS : return getTypeCS(); ," assertEquals( TickStyle.LEFT, 0 ); assertEquals( TickStyle.RIGHT , 1 ); assertEquals( TickStyle.ABOVE, 2 ); assertEquals( TickStyle.BELOW, 3 ); assertEquals( TickStyle.ACROSS, 4 ); "
0," super.lexerProblem(problemSeverity, problemMessage, processingContext, startOffset, endOffset); tee.lexerProblem(problemSeverity, problemMessage, processingContext, startOffset, endOffset); ", TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(PollsDisplayTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; 
0," BusyIndicator.showWhile(fWsText.getText().getDisplay(), new Runnable() { public void run() { Choice[] choices = getWSChoices(); openPortabilityChoiceDialog(IEnvironment.P_WS, fWsText, choices); "," tag = HTML.Tag.SPAN; assertEquals(""span"", tag.toString()); assertFalse(""breaks Flow"", tag.breaksFlow()); assertFalse(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); "
0," Guardian.assertNotNull(""shape"", shape); Guardian.assertNotNull(""geoCoding"", geoCoding); if (!geoCoding.canGetGeoPos()) { throw new IllegalArgumentException(""invalid 'geoCoding'""); "," doc = new Document(""import os.path \n"" + ""if os.path.isfile( '' ):pass \n"" + """"); analyzer = new OccurrencesAnalyzer(); msgs = analyzeDoc(); printMessages(msgs); assertEquals(0, msgs.length); "
0," return getActivityMapper().isStateChangePermittedForAccount(newState.shortValue(), null != flagSelected ? flagSelected.shortValue() : 0, userContext, recordOfficeId, recordLoanOfficerId); ", Envelope env = this.transitions.getFirstTransition(this.lockedRank); env = this.transitions.getCurrentTransition(); if (env != null) { this.previousLeftIndex = env.getLinenumber(); 
0, List<QueryNode> children = getChildren(); if (children!=null) { for (QueryNode child: children) { AqpANTLRNode n = (AqpANTLRNode) child; if (n.getTokenLabel().equals(tokenLabel)) { return n; ," this.column = i; this.intFormat = new DecimalFormat(""###0""); this.format = new DecimalFormat(""##0.#####""); this.savedIcon = Activator.getImage(""icons/plot-tool-peak-fit-savePeak.png""); "
1, m_driverPosition = driverPosition; m_name = name; m_label = label; m_alias = label; m_dataType = dataType; m_nativeTypeName = nativeTypeName; m_isCustom = isCustom; m_driverProvidedDataType = null; , m_driverPosition = driverPosition; m_name = name; m_label = label; m_alias = label; m_dataType = dataType; m_nativeTypeName = nativeTypeName; m_isCustom = isCustom; m_driverProvidedDataType = null; 
1," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (group: ""); result.append(group); result.append(')'); return result.toString(); "," if (eIsProxy()) return super.toString(); StringBuffer XXXXX = new StringBuffer(super.toString()); XXXXX.append("" (group: ""); XXXXX.append(group); XXXXX.append(')'); return XXXXX.toString(); "
0, for (int iIdx = 0; iIdx < cachedImageNamesList.size(); iIdx++) { String strCachedName = (String) cachedImageNamesList.get(iIdx); if (strCachedName.compareTo(name) == 0) { return true; ," if (!(obj instanceof SNodeWrapper)) return false; SNodeWrapper wrapper = (SNodeWrapper) obj; return MatchingUtil.matchNodes(wrapper.myNode, myNode, IMatchModifier.DEFAULT, false); "
0," Matcher matcher = COMMAND_TEXT_PATTERN.matcher(commandText); if (! matcher.matches()) { throw new SoySyntaxException(""Invalid 'deltemplate' command text \"""" + commandText + ""\"".""); ", if (list != null) { roleList = new RoleList(); for (Iterator<?> roleIter = list.iterator(); roleIter.hasNext();) { Role currRole = (Role)(roleIter.next()); roleList.add((Role)(currRole.clone())); 
0," StringBuilder sb = new StringBuilder(super.toString()); if (spanningSurface != null) { sb.append(""spanningSurface:"").append('\n'); for (Object o : spanningSurface) { sb.append(o).append('\n'); ", return new HashCodeBuilder() .append(getter) .append(setter) .append(getPropertyType()) .append(getPropertyEditorClass()) .append(isBound()) .append(isConstrained()) .toHashCode(); 
1," consoleMsg(""REQ: rfq "" + m_rfqId); m_status = m_contract.m_underComp != null ? Status.Rfq : Status.Ticks; client().placeOrder(m_rfqId, m_contract, new RfqOrder(m_clientId, m_rfqId, 1)); "," consoleMsg(""REQ: rfq "" + m_rfqId); m_status = m_contract.m_underComp != null ? Status.Rfq : Status.Ticks; client().placeOrder(m_rfqId, m_contract, new RfqOrder(m_clientId, m_rfqId, 1)); "
0," Field field = null; try { field = targetClass.getDeclaredField(fieldName); field.setAccessible(true); Object valueReference = field.get(target); tmpl.write(packer, valueReference); "," double elem; for (int r = firstRow; r < lastRow; r++) { for (int c = 0; c < cols; c++) { elem = (double) X.getQuick(r + rOff, c + cOff); if (elem >= threshold) { px[c + cols * r] = elem; "
0," sendBroadcast(new Intent(Intent.ACTION_MEDIA_MOUNTED, Uri.parse(""file: + Environment.getExternalStorageDirectory()))); mTitle.setText(""Sent ACTION_MEDIA_MOUNTED to trigger the Media Scanner.""); ", Entry tab[] = table; int hash = key; int index = (hash & 0x7FFFFFFF) % tab.length; for (Entry e = tab[index]; e != null; e = e.next) { if (e.hash == hash && e.key == key) { return e.value; 
0, if (container != null) { container.setOwner(this); container.setBindingAttribute(EditionActionBindingAttribute.container); container.setBindingDefinition(getContainerBindingDefinition()); ," StringBuffer strBuf = new StringBuffer(); strBuf.append(""SOAPFault ("" + elementType + ""):""); strBuf.append(""\nrequired="" + required); if (name != null) { strBuf.append(""\nname="" + name); "
0," this.nodeLister = checkNotNull(nodeLister, ""nodeLister""); this.nodeDeleter = checkNotNull(nodeDeleter, ""nodeDeleter""); this.clientDeleter = checkNotNull(clientDeleter, ""clientDeleter""); "," int startChar = parcel.readInt(); int endChar = parcel.readInt(); CharPos blinkingPos = new CharPos(startChar, endChar); if (mBlinkingPosList == null) { mBlinkingPosList = new ArrayList<CharPos>(); "
1," try { getContainer().run(true, true, new IRunnableWithProgress() { public void run(IProgressMonitor monitor) throws InvocationTargetException, InterruptedException { importProjects(monitor); "," try { getContainer().run(true, true, new IRunnableWithProgress() { public void run(IProgressMonitor monitor) throws InvocationTargetException, InterruptedException { importProjects(monitor); "
1," Artist artist = (Artist) session.load(Artist.class, 5); List<Recording> recordings = dao.getByArtistAndName(artist, ""NEVER GONNA GIVE YOU UP""); assertThat(recordings, hasSize(2)); "," Artist XXXXX = (Artist) session.load(Artist.class, 5); List<Recording> recordings = dao.getByArtistAndName(XXXXX, ""NEVER GONNA GIVE YOU UP""); assertThat(recordings, hasSize(2)); "
1," dialogBox.setText(""Remote Procedure Call""); serverResponseLabel.removeStyleName(""serverResponseLabelError""); serverResponseLabel.setHTML(result); dialogBox.center(); closeButton.setFocus(true); "," dialogBox.setText(""Remote Procedure Call""); serverResponseLabel.removeStyleName(""serverResponseLabelError""); serverResponseLabel.setHTML(result); dialogBox.center(); closeButton.setFocus(true); "
1, String username = authentication.getPrincipal().toString(); if (authentication.getPrincipal() instanceof UserDetails) { username = ((UserDetails) authentication.getPrincipal()).getUsername(); , String username = authentication.getPrincipal().toString(); if (authentication.getPrincipal() instanceof UserDetails) { username = ((UserDetails) authentication.getPrincipal()).getUsername(); 
0," try { DataOutputStream out = new DataOutputStream(new BufferedOutputStream(new FileOutputStream(file))); for (int i = 0, n = data.size(); i < n; i++) out.writeFloat(data.get(i)); out.close(); ", final ModuleListener moduleListener = (ModuleListener) module.get(StartLocationObserverCommand.LOCATION_LISTENER); if (moduleListener != null) { module.removeModuleListener(moduleListener); 
0," if (!test.equals(myCurrentTest)) { myCurrentTestMeter = new TestMeter(); System.err.println(""Wrong test finished. Last started: "" + myCurrentTest+"" stopped: "" + test+""; ""+test.getClass()); "," Intent intent = new Intent(this, PpomPpuService.class); intent.setAction(PpomPpuService.SHOPING_ACTION); intent.putExtra(PpomPpuService.SEARCH_KEY, aSearchKey); startService(intent); "
0, this._locationVarParams = obj._locationVarParams.clone(); this._currentLocVarSample = obj._currentLocVarSample; this._lastLocVarSample = obj._lastLocVarSample; this._rng = obj._rng; , NodeContainer nodeContainer = node.getNodeContainer(); return nodeContainer instanceof DynamicNode || (nodeContainer instanceof WorkflowProcess && ((WorkflowProcess) nodeContainer).isDynamic()); 
0," switch (uriMatcher.match(uri)) { case DOCUMENTS_ALL: return Media.CONTENT_TYPE; case DOCUMENTS_ID: return Media.CONTENT_TYPE_ITEM; default: throw new IllegalArgumentException(""Unknown URI "" + uri); "," rooms.put(room.coords, room); placeItem(room.getItem(), room.getPrecond()); if (room.coords.x < bounds.left) { bounds = new Bounds(room.coords.x, bounds.top, bounds.right, bounds.bottom); "
0," if(eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (varName: ""); result.append(varName); result.append(')'); return result.toString(); "," PerformanceTimer timer = (PerformanceTimer) timers.get(timerName); if (timer == null) { timer = new PerformanceTimer(timerName); timers.put(timerName, timer); timerList.add(timer); "
1, final boolean isScaleLessThanMinZoom = scale < mMinZoomScale; scale = computeScaleWithLimits(scale); if (isScaleLessThanMinZoom && mMinZoomScale < mDefaultScale) { mInZoomOverview = true; , final boolean XXXXX = scale < mMinZoomScale; scale = computeScaleWithLimits(scale); if (XXXXX && mMinZoomScale < mDefaultScale) { mInZoomOverview = true; 
0," String server = url; int protocol, slash; if ((protocol = server.indexOf("" if ((slash = server.substring(protocol + 2).indexOf(""/"")) != -1) { server = server.substring(0, protocol + 2 + slash); "," clusterThreshold = props.getProperty( MERGE_THRESHOLD_PROPERTY, DEFAULT_MERGE_THRESHOLD); maxNumClusters = props.getProperty( OnlineClustering.NUM_CLUSTERS_PROPERTY, DEFAULT_MAX_CLUSTERS); "
1," int old = this.activityCount; this.activityCount = activityCount; if (old != activityCount) { setChanged(); notifyObservers(new StatModification(""activityCount"", old, activityCount)); "," int XXXXX = this.activityCount; this.activityCount = activityCount; if (XXXXX != activityCount) { setChanged(); notifyObservers(new StatModification(""activityCount"", XXXXX, activityCount)); "
0," component_sizes = new HashMap<Integer, Integer>(); roots = new ArrayList<TopoTreeNode>(); tree_lookup = new ArrayList<TopoTreeNode[]>(); level_lookup = new ArrayList<ArrayList<TopoTreeNode>>(); "," return new EventBuilder(""uei.opennms.org/vendor/Juniper/traps/mplsLspPathUp"", ""Drools"") .setNodeid(nodeid) .setInterface( addr( ipaddr ) ) .addParam(""mplsLspName"", lspname ) .getEvent(); "
1," return new SinkBuilder() { @Override public EventSink build(Context context, String... argv) { Preconditions.checkArgument(argv.length == 0, ""usage: null""); return new NullSink(); "," return new SinkBuilder() { @Override public EventSink build(Context context, String... argv) { Preconditions.checkArgument(argv.length == 0, ""usage: null""); return new NullSink(); "
1," if (isLiveOrCompiled()) if(!this.getCapability(ALLOW_PATH_WRITE)) throw new CapabilityNotSetException(J3dI18N.getString(""Text3D9"")); ((Text3DRetained)this.retained).setPath(path); "," if (isLiveOrCompiled()) if(!this.getCapability(ALLOW_PATH_WRITE)) throw new CapabilityNotSetException(J3dI18N.getString(""Text3D9"")); ((Text3DRetained)this.retained).setPath(path); "
0," CategoryPath p = new CategoryPath(0,0); p.add(""hi""); p.add(""there""); assertEquals(2, p.length()); p.clear(); assertEquals(0, p.length()); p.add(""yo!""); assertEquals(1, p.length()); "," return ""MergeInfo [totalDocCount="" + totalDocCount + "", estimatedMergeBytes="" + estimatedMergeBytes + "", isExternal="" + isExternal + "", mergeMaxNumSegments="" + mergeMaxNumSegments + ""]""; "
1," getProject().setProperty(""prefix.dummy1"", ""value1""); getProject().setProperty(""prefix.dummy2"", ""value2""); executeTarget(""syspropertyset""); assertLogContains(""value1""); assertLogContains(""value2""); "," getProject().setProperty(""prefix.dummy1"", ""value1""); getProject().setProperty(""prefix.dummy2"", ""value2""); executeTarget(""syspropertyset""); assertLogContains(""value1""); assertLogContains(""value2""); "
0, this.temporalAnnotation = temporalAnnotation; this.doSGappedStuff = doSGappedStuff; this.leaveItAll = leaveItAll; this.doAdverbialNP = doAdverbialNP; this.headFinder = headFinder; ," if (myModels.containsKey(model.getSModelReference().getSModelFqName())) { if (myPublished.add(model)) { SModelRepository.getInstance().registerModelDescriptor(model, this); return true; "
0," Resource root = resourceInModel( ""x rdf:type ja:UnionModel; x ja:subModel 'A'"" ); Assembler a = new UnionModelAssembler(); try { a.open( root ); fail( ""should trap unsuitable object"" ); "," if(!isID(0, ""scope"")) return false; mark(); ATEToken start = T(0); if(!matchID(0, ""scope"")) return false; if (matchID(0)) { while(matchChar(0, "","")) { if(!matchID(0)) { rewind(); return false; "
0, ResourceBundle bundle = null; if (ourBundle != null) bundle = ourBundle.get(); if (bundle == null) { bundle = ResourceBundle.getBundle(BUNDLE); ourBundle = new SoftReference<ResourceBundle>(bundle); , switch (featureID) { case ErlangPackage.MACRO_CALL__MACRO_NAME: setMacroName((Expression)newValue); return; case ErlangPackage.MACRO_CALL__ARGS: setArgs((Expressions)newValue); return; 
1," final Player player = event.getEntity(); boolean drop = dropOnDeath; boolean clear = dropOnDeath || clearOnDeath; if (player.hasPermission(""alphachest.keepOnDeath"")) { drop = false; clear = false; "," final Player XXXXX = event.getEntity(); boolean XXXXX = XXXXXOnDeath; boolean XXXXX = XXXXXOnDeath || XXXXXOnDeath; if (XXXXX.hasPermission(""alphachest.keepOnDeath"")) { XXXXX = false; XXXXX = false; "
1, m[0] = 1.0f; m[1] = 0; m[2] = 0; m[3] = tx; m[4] = 0; m[5] = 1.0f; m[6] = 0; m[7] = ty; m[8] = 0; m[9] = 0; m[10] = 1.0f; m[11] = tz; m[12] = 0; m[13] = 0; m[14] = 0; m[15] = 1.0f; , m[0] = 1.0f; m[1] = 0; m[2] = 0; m[3] = tx; m[4] = 0; m[5] = 1.0f; m[6] = 0; m[7] = ty; m[8] = 0; m[9] = 0; m[10] = 1.0f; m[11] = tz; m[12] = 0; m[13] = 0; m[14] = 0; m[15] = 1.0f; 
0, switch (featureID) { case Aadl2Package.SUBPROGRAM_SUBCOMPONENT__SUBPROGRAM_SUBCOMPONENT_TYPE: if (resolve) return getSubprogramSubcomponentType(); return basicGetSubprogramSubcomponentType(); , FeatureContainer container = getFeatureContainer(context); if (container!=null) { IDirectEditingFeature feature = container.getDirectEditingFeature(this); if (feature != null) return feature; 
1," String label = ((AudioVisualItem)object).getTitle(); return label == null || label.length() == 0 ? getString(""_UI_AudioVisualItem_type"") : getString(""_UI_AudioVisualItem_type"") + "" "" + label; "," String XXXXX = ((AudioVisualItem)object).getTitle(); return XXXXX == null || XXXXX.length() == 0 ? getString(""_UI_AudioVisualItem_type"") : getString(""_UI_AudioVisualItem_type"") + "" "" + XXXXX; "
0, Boolean defaultLookAndFeelDecorated = (Boolean) SwingUtilities.appContextGet(defaultLookAndFeelDecoratedKey); if (defaultLookAndFeelDecorated == null) { defaultLookAndFeelDecorated = Boolean.FALSE; , if (myChangeInfo instanceof JavaChangeInfoImpl) { return myChangeInfo.isExceptionSetOrOrderChanged() && !((JavaChangeInfoImpl)myChangeInfo).propagateExceptionsMethods.contains(caller); 
1," String result = """"; for (String name : membersNameList) { L1PcInstance pc = L1World.getInstance().getPlayer(name); if (pc != null) { result = result + name + getRankString(pc) + "" ""; "," String XXXXX = """"; for (String name : membersNameList) { L1PcInstance XXXXX = L1World.getInstance().getPlayer(name); if (XXXXX != null) { XXXXX = XXXXX + name + getRankString(XXXXX) + "" ""; "
0," view = new ParagraphViewNotVisible(block, factory); assertFalse(view.isVisible()); assertEquals(0, view.getPreferredSpan(View.X_AXIS), 0f); assertEquals(0, view.getPreferredSpan(View.Y_AXIS), 0f); "," if (logger.level <= Logger.FINER) logger.log(""nodeSetUpdate(""+handle+"")""); Identifier nh = (Identifier)handle; if (nh.canContactDirect()) { if (added) { manager.openPilot(nh, null); "
0," if (mRS == null) { RenderScriptGL.SurfaceConfig sc = new RenderScriptGL.SurfaceConfig(); mRS = createRenderScriptGL(sc); mRender = new RsListRS(); mRender.init(mRS, getResources()); "," if (QtyEntered != null && getC_UOM_ID() != 0) { int precision = MUOM.getPrecision(getCtx(), getC_UOM_ID()); QtyEntered = QtyEntered.setScale(precision, BigDecimal.ROUND_HALF_UP); "
1, _timeToLive--; if(_timeToLive == 0) { ExoScriptingConsoleRestService._consoles.remove(_consoleId); ExoScriptingConsoleRestService._consoleTasks.remove(_consoleId); System.gc(); this.cancel(); , _timeToLive--; if(_timeToLive == 0) { ExoScriptingConsoleRestService._consoles.remove(_consoleId); ExoScriptingConsoleRestService._consoleTasks.remove(_consoleId); System.gc(); this.cancel(); 
1," Point pt = event.getPoint(); if(getTextPane().hasFocus()) { Point absolutePoint = SwingUtilities.convertPoint(getTextPane(), pt, getJavaContainer()); editorTips.display(pt, absolutePoint); "," Point pt = event.getPoint(); if(getTextPane().hasFocus()) { Point absolutePoint = SwingUtilities.convertPoint(getTextPane(), pt, getJavaContainer()); editorTips.display(pt, absolutePoint); "
0," return Key.builder() .name(""rsa"") .key(""ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEA0A5Pf5Cq..."") .created(new SimpleDateFormatDateService().iso8601SecondsDateParse(""2011-04-13T22:14:46+00:00"")) .build(); "," if (entity==null) return; ContentType contentType= new ContentType(entity.getContentType(), newUrl); if (contentType.isBinary) { ContentUtils.copyBinary(entity, response); return; "
1, meta = new MetaData(pr); table = new TableMemAccess(meta); if(meta.updindex) { idmap = new IdPreMap(meta.lastid); txtindex = new UpdatableMemValues(this); atvindex = new UpdatableMemValues(this); , meta = new MetaData(pr); table = new TableMemAccess(meta); if(meta.updindex) { idmap = new IdPreMap(meta.lastid); txtindex = new UpdatableMemValues(this); atvindex = new UpdatableMemValues(this); 
0," this(pBitmapTextureAtlasSource, pBitmapTextureAtlasSourceDecoratorShape, pColorKeyColorARGBPackedInt, TOLERANCE_DEFAULT, pColorSwapColorARGBPackedInt, pTextureAtlasSourceDecoratorOptions); ", boolean[] newTruthTable = new boolean[truthTable.length / 2]; for (int i = 0; i < newTruthTable.length; i++) newTruthTable[i] = truthTable[i]; return new PrimitiveOperator(newTruthTable); 
1, if(getMap() != null){ final CanvasController2D controller = getMap().getCanvas().getController(); final Date[] range = controller.getTemporalRange(); return range != null && range[0] != null; , if(getMap() != null){ final CanvasController2D controller = getMap().getCanvas().getController(); final Date[] range = controller.getTemporalRange(); return range != null && range[0] != null; 
1," ContextCapabilities caps = GLContext.getCapabilities(); long function_pointer = caps.glPathFogGenNV; BufferChecks.checkFunctionAddress(function_pointer); nglPathFogGenNV(genMode, function_pointer); "," ContextCapabilities XXXXX = GLContext.getCapabilities(); long XXXXX = XXXXX.glPathFogGenNV; BufferChecks.checkFunctionAddress(XXXXX); nglPathFogGenNV(genMode, XXXXX); "
1," if (apk != null) return apk; Log.d(TAG, ""Loading apk with path: "" + apkPath + "" layout: "" + layoutName + "" package: "" + packageName); apk = new FileApk(activity, packageName, apkPath); return apk; "," if (apk != null) return apk; Log.d(TAG, ""Loading apk with path: "" + apkPath + "" layout: "" + layoutName + "" package: "" + packageName); apk = new FileApk(activity, packageName, apkPath); return apk; "
1," Vector closest = null; double min = Double.MAX_VALUE; for(Vector match: matches) { double distance = measure.distance(value, match); if (min > distance) { min = distance; closest = match; ; "," Vector XXXXX = null; double XXXXX = Double.MAX_VALUE; for(Vector match: matches) { double XXXXX = measure.XXXXX(value, match); if (XXXXX > XXXXX) { XXXXX = XXXXX; XXXXX = match; ; "
1," String text= ((String)value).replace('\t', ' '); Component c= super.getListCellRendererComponent(list, text, modelIndex, isSelected, cellHasFocus); setText(text); setToolTipText(text); return c; "," String text= ((String)value).replace('\t', ' '); Component c= super.getListCellRendererComponent(list, text, modelIndex, isSelected, cellHasFocus); setText(text); setToolTipText(text); return c; "
1," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," EditorCell XXXXX = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, XXXXX, editorContext); return XXXXX; "
0," TestSuite suite= new TestSuite(CompletionTest_ArgumentType_Prefix2.class.getName()); suite.addTest(new CompletionTest_ArgumentType_Prefix2(""testCompletionProposals"")); return suite; ", if (mainPanel == null) return; if (ref == null) return; Iterator<JComponent> i = ref.iterator(); boolean visible = false; if (group) { if (groups != null && groupsBox != null) visible = true; 
1," T iElt = heap.elementAt(i); T jElt = heap.elementAt(j); heap.setElementAt(jElt, i); object_indices.put(jElt, new Integer(i)); heap.setElementAt(iElt, j); object_indices.put(iElt, new Integer(j)); "," T XXXXX = heap.elementAt(i); T XXXXX = heap.elementAt(j); heap.setElementAt(XXXXX, i); object_indices.put(XXXXX, new Integer(i)); heap.setElementAt(XXXXX, j); object_indices.put(XXXXX, new Integer(j)); "
1," if(context == null){ String value = EnvironmentReader.getEnvVar(name); if(value == null) return null; return new EnvironmentVariable(name,value,IEnvironmentVariable.ENVVAR_REPLACE,null); "," if(context == null){ String XXXXX = EnvironmentReader.getEnvVar(name); if(XXXXX == null) return null; return new EnvironmentVariable(name,XXXXX,IEnvironmentVariable.ENVVAR_REPLACE,null); "
1, super.init( action ); Object element = DebugUITools.getDebugContext(); setSelection( (element != null) ? new StructuredSelection( element ) : new StructuredSelection() ); update(); , super.init( action ); Object XXXXX = DebugUITools.getDebugContext(); setSelection( (XXXXX != null) ? new StructuredSelection( XXXXX ) : new StructuredSelection() ); update(); 
1," boolean showCounter = options.myCounters && isResultsSection(); String counter = showCounter ? "" "" + sizeRepresentation(options.mySubresultsCount) : """"; return super.getText(options) + counter; "," boolean XXXXX = options.myCounters && isResultsSection(); String XXXXX = XXXXX ? "" "" + sizeRepresentation(options.mySubresultsCount) : """"; return super.getText(options) + XXXXX; "
0," for (HColumnDescriptor hcd: HTableDescriptor.META_TABLEDESC.getColumnFamilies()) { if (Bytes.equals(hcd.getName(), HConstants.CATALOG_FAMILY)) { hcd.setBlockCacheEnabled(b); hcd.setInMemory(b); ", assertFalse(this.configurableService.isConfigurable(this.nodeRef)); this.configurableService.makeConfigurable(this.nodeRef); assertTrue(this.configurableService.isConfigurable(this.nodeRef)); 
1," if (featOkTst && casFeat_name == null) jcas.throwFeatMissing(""name"", ""org.apache.clerezza.uima.utils.ts.WikipediaEntity""); return ll_cas.ll_getStringValue(addr, casFeatCode_name); "," if (featOkTst && casFeat_name == null) jcas.throwFeatMissing(""name"", ""org.apache.clerezza.uima.utils.ts.WikipediaEntity""); return ll_cas.ll_getStringValue(addr, casFeatCode_name); "
1," cachedScripts = new HashMap<String, Function>(); Context cx = Context.enter(); instanceScope = cx.newObject( standardScope ); instanceScope.setPrototype( standardScope ); Context.exit(); "," cachedScripts = new HashMap<String, Function>(); Context XXXXX = Context.enter(); instanceScope = XXXXX.newObject( standardScope ); instanceScope.setPrototype( standardScope ); Context.exit(); "
0," cmdOK=new JButton(""--O.K--""); cmdOK.addActionListener(this); footer=new JPanel(); ssp= new SelectStudentPanel(query); this.add(ssp); this.add(BorderLayout.SOUTH,footer); footer.add(cmdOK); "," super(next); fraction = Double.parseDouble(next.getAttributeValue(""fraction"")); Element eFeedback = next.getChild(""feedback""); if (eFeedback != null) feedback = eFeedback.getChildText(""text""); "
0, Set<IExtension> addedExtensions = Sets.newLinkedHashSet(); for (IExtensionDelta extensionDelta : event.getExtensionDeltas()) { addedExtensions.add(extensionDelta.getExtension()); , CookieSettings settings = getCookieSettings(); maxCookies = settings.getMaxCookies(); maxCookiesPerDomain = settings.getMaxCookiesPerDomain(); maxCookieLength = settings.getMaxCookieLength(); 
0," String label = crop(((ValueExpression)object).getBody()); return label == null || label.length() == 0 ? getString(""_UI_ValueExpression_type"") : getString(""_UI_ValueExpression_type"") + "" "" + label; ", if (numSpaces > 0) { int currentPosition= scanner.getCurrentPosition(); StringBuilder spaces = new StringBuilder(numSpaces); for (int i = 0; i < numSpaces; i++) { spaces.append(' '); 
0, ThreadGroup mainTG = Thread.currentThread().getThreadGroup(); ThreadGroup parentTG = mainTG.getParent(); while (parentTG != null) { mainTG = parentTG; parentTG = mainTG.getParent(); , this.lut = lut; this.component = component; getColorSpace().addListener(this); scaler = lut.getScalers()[component]; scaler.addListener(this); enabled = true; listeners = new EventListenerList(); 
0, PDResources retval = null; COSDictionary resources = (COSDictionary)page.getDictionaryObject( COSName.RESOURCES ); if( resources != null ) { retval = new PDResources( resources ); ," StringBuilder sb = new StringBuilder(512); sb.append(""PropertyIdSearchRow"") .append(""[ "").append(linkEntity) .append("", "").append(valueEntity) .append(""]""); return sb.toString(); "
1, FragmentTransaction transaction = null; if (mContext instanceof Activity) { transaction = ((Activity) mContext).getFragmentManager() .beginTransaction() .disallowAddToBackStack(); , FragmentTransaction XXXXX = null; if (mContext instanceof Activity) { XXXXX = ((Activity) mContext).getFragmentManager() .beginTransaction() .disallowAddToBackStack(); 
1," this.boleto = this.boleto.withBanco(this.banco); assertEquals( ""39990.35128 02000.003919 04766.186029 3 10010000120000"", new LinhaDigitavelGenerator() .geraLinhaDigitavelPara(this.boleto)); "," this.boleto = this.boleto.withBanco(this.banco); assertEquals( ""39990.35128 02000.003919 04766.186029 3 10010000120000"", new LinhaDigitavelGenerator() .geraLinhaDigitavelPara(this.boleto)); "
1, mpdPlayerAdapterIF = activity.getMpdServiceAdapterIF().getPlayer(); mpdPlayerAdapterIF.addPlayStatusListener(new PlayListener()); updatePlayStatusOnUI(mpdPlayerAdapterIF.getPlayStatus()); , mpdPlayerAdapterIF = activity.getMpdServiceAdapterIF().getPlayer(); mpdPlayerAdapterIF.addPlayStatusListener(new PlayListener()); updatePlayStatusOnUI(mpdPlayerAdapterIF.getPlayStatus()); 
1," if (artifactHandler == null) { artifactHandler = new DefaultArtifactHandler( getConfigurationContainer(), new DefaultPublishArtifactFactory( get(Instantiator.class), dependencyMetaDataProvider)); "," if (artifactHandler == null) { artifactHandler = new DefaultArtifactHandler( getConfigurationContainer(), new DefaultPublishArtifactFactory( get(Instantiator.class), dependencyMetaDataProvider)); "
0," Map<String, Object> props = em.getProperties(); assertProperty(""openjpa.AutoClear"", props, AutoClearType.DATASTORE); assertProperty(""openjpa.IgnoreChanges"", props, Boolean.FALSE); ", super(file); packageImportPath = StringRef.fromString(file.getPackageImportPath()); packageName = StringRef.fromString(file.getPackage().getPackageName()); isMain = file.getMainFunction() != null; 
1, Win32.ITEMIDLIST parentItemId = WinFileManager.getManager().getParentItemId(absoluteItemId); return parentItemId != null ? WinFileManager.getManager().getWinFile(parentItemId) : null; , Win32.ITEMIDLIST parentItemId = WinFileManager.getManager().getParentItemId(absoluteItemId); return parentItemId != null ? WinFileManager.getManager().getWinFile(parentItemId) : null; 
0," String result = new BatchCommandBuilder().createNode( MapUtil.stringMap( ""key"", ""value"" ) ) .build(); assertEquals( ""[{\""method\"":\""POST\"",\""to\"":\""/node\"",\""body\"":{\""key\"":\""value\"""," newRuleMode = true; newRuleTextField.setVisible(true); ruleChoice.setVisible(false); textArea.setEnabled(true); if (textArea.getModelObject() == null) { textArea.setModel(new Model<String>("""")); "
1," a.info(""Saving chunks""); for (World w : worldManager.getAllWorlds()) { OWorldServer var2 = (OWorldServer) ((CanaryWorld) w).getHandle(); try { var2.a(true, (OIProgressUpdate) null); "," a.info(""Saving chunks""); for (World w : worldManager.getAllWorlds()) { OWorldServer var2 = (OWorldServer) ((CanaryWorld) w).getHandle(); try { var2.a(true, (OIProgressUpdate) null); "
1," StringBuffer s = new StringBuffer(""SolvResPolPart(\n""); s.append(""ideal = "" + ideal); s.append(""\n GB = "" + GB); s.append(""\n syzygy = "" + syzygy); s.append("")""); return s.toString(); "," StringBuffer s = new StringBuffer(""SolvResPolPart(\n""); s.append(""ideal = "" + ideal); s.append(""\n GB = "" + GB); s.append(""\n syzygy = "" + syzygy); s.append("")""); return s.toString(); "
1, Iterator<MiddleEnd> iter = _middleEnds.iterator(); MiddleEnd toremove = null; while (iter.hasNext()) { toremove = iter.next(); if (toremove.getTournament() == t) { iter.remove(); break; , Iterator<MiddleEnd> iter = _middleEnds.iterator(); MiddleEnd XXXXX = null; while (iter.hasNext()) { XXXXX = iter.next(); if (XXXXX.getTournament() == t) { iter.remove(); break; 
1, if (this.fFilterMap == null || this.fFilterMap.isEmpty()) return false; String typeName = problem.getTypeName(); if (typeName == null || typeName.length() == 0) { typeName = GLOBAL; , if (this.fFilterMap == null || this.fFilterMap.isEmpty()) return false; String XXXXX = problem.getTypeName(); if (XXXXX == null || XXXXX.length() == 0) { XXXXX = GLOBAL; 
1," if (x >= this.getX() && x < this.getX() + this.getWidth() && y >= this.getY() && y <= this.getY() + this.getHeight()) { mCore.callMinion(unitName, mMap.getSelected().getPlace()); "," if (x >= this.getX() && x < this.getX() + this.getWidth() && y >= this.getY() && y <= this.getY() + this.getHeight()) { mCore.callMinion(unitName, mMap.getSelected().getPlace()); "
1, if (this.pienempiLeveys == pienempiLeveys && this.suurempiLeveys == suurempiLeveys && this.syvyys == syvyys && palikkasetti.toLowerCase().equals(this.palikkasetti.toLowerCase())) { return true; , if (this.pienempiLeveys == pienempiLeveys && this.suurempiLeveys == suurempiLeveys && this.syvyys == syvyys && palikkasetti.toLowerCase().equals(this.palikkasetti.toLowerCase())) { return true; 
1," this.clipper = new AreaClipper(bbox); this.bbox = bbox; collector.addToBounds(new Coord(bbox.getMinLat(), bbox.getMinLong())); collector.addToBounds(new Coord(bbox.getMaxLat(), bbox.getMaxLong())); "," this.clipper = new AreaClipper(bbox); this.bbox = bbox; collector.addToBounds(new Coord(bbox.getMinLat(), bbox.getMinLong())); collector.addToBounds(new Coord(bbox.getMaxLat(), bbox.getMaxLong())); "
1," writer.println(""<p class=\""footer-label\"">""); writer.printf(""Generated: %s%n"", datetimeFormat.format(new Date())); writer.println(""</p>""); writer.println(""</body>""); writer.println(""</html>""); "," writer.println(""<p class=\""footer-label\"">""); writer.printf(""Generated: %s%n"", datetimeFormat.format(new Date())); writer.println(""</p>""); writer.println(""</body>""); writer.println(""</html>""); "
1," List<? extends TypeParameterElement> params = _elementAC.getTypeParameters(); if (null == params || params.size() != 2) { reportError(""element AC does not report 2 type parameters""); return false; "," List<? extends TypeParameterElement> params = _elementAC.getTypeParameters(); if (null == params || params.size() != 2) { reportError(""element AC does not report 2 type parameters""); return false; "
1, ExpressionActivatedTestBean testBean = getBeanInstance(ExpressionActivatedTestBean.class); Assert.assertNotNull(testBean); Assert.assertTrue(testBean instanceof ExpressionActivatedTestBeanMockImpl); , ExpressionActivatedTestBean XXXXX = getBeanInstance(ExpressionActivatedTestBean.class); Assert.assertNotNull(XXXXX); Assert.assertTrue(XXXXX instanceof ExpressionActivatedTestBeanMockImpl); 
0, User result = null; User user; for (int i = 0; (result == null) && (i < getUsers().size()); i++) { user = getUsers().get(i); if (user.getIdentifier().equals(userIdentifier)) { result = user; ," TagCloud cloud = new TagCloud(composite, SWT.NONE); cloud.setWords(Arrays.asList(getWord()), null); double zoom = cloud.getZoom(); cloud.zoomIn(); Assert.assertTrue(cloud.getZoom() > zoom); "
0, String sep = File.separator; for (String inclPath : includePaths) { String fullPath = inclPath + sep + filename; File file = new File(fullPath); if (file.exists()) { return fullPath; ," value = value.trim().replace("";"", """"); if (field.equals(""MOL_ID:"")) { if (DEBUG) System.out.println(""molTypeCounter "" + molTypeCounter + "" "" + value); int i = -1; try { i = Integer.valueOf(value); "
1, Assert.isNotNull(task); this.task = task; setId(ID); setImageDescriptor(TasksUiImages.CONTEXT_ACTIVE_CENTERED); update(); TasksUi.getTaskActivityManager().addActivationListener(this); , Assert.isNotNull(task); this.task = task; setId(ID); setImageDescriptor(TasksUiImages.CONTEXT_ACTIVE_CENTERED); update(); TasksUi.getTaskActivityManager().addActivationListener(this); 
1, if (this == obj) return true; if (obj == null) return false; if (getClass() != obj.getClass()) return false; MethodElementImpl that = (MethodElementImpl) obj; return this.method.equals(that.method); , if (this == obj) return true; if (obj == null) return false; if (getClass() != obj.getClass()) return false; MethodElementImpl XXXXX = (MethodElementImpl) obj; return this.method.equals(XXXXX.method); 
1, Object source = e.getSource(); if (source == makecombo) { selmakefile = makecombo.getItem(makecombo.getSelectionIndex()); updateComboDerivedOptions(selmakefile); paneListener.widgetSelected(null); , Object XXXXX = e.getSource(); if (XXXXX == makecombo) { selmakefile = makecombo.getItem(makecombo.getSelectionIndex()); updateComboDerivedOptions(selmakefile); paneListener.widgetSelected(null); 
1, fModel = (IDSModel) getPage().getModel(); fModel.addModelChangedListener(this); fComponent = fModel.getDSComponent(); if (fComponent != null) { fImplementation = fComponent.getImplementation(); , fModel = (IDSModel) getPage().getModel(); fModel.addModelChangedListener(this); fComponent = fModel.getDSComponent(); if (fComponent != null) { fImplementation = fComponent.getImplementation(); 
1," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," EditorCell XXXXX = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, XXXXX, editorContext); return XXXXX; "
0," switch (featureID) { case FXGraphPackage.DEFINE__ELEMENT: return basicSetElement(null, msgs); case FXGraphPackage.DEFINE__INCLUDE_ELEMENT: return basicSetIncludeElement(null, msgs); ", int p = a + b - c; int pa = Math.abs(p - a); int pb = Math.abs(p - b); int pc = Math.abs(p - c); if ((pa <= pb) && (pa <= pc)) return a; else if (pb <= pc) return b; else return c; 
1," super(ImageIntentService.class.getName()); refreshUri = Uri .parse(Instagram.Url.POPULAR_MEDIA) .buildUpon() .appendQueryParameter(Instagram.Param.CLIENT_ID, Instagram.CLIENT_ID).build(); "," super(ImageIntentService.class.getName()); refreshUri = Uri .parse(Instagram.Url.POPULAR_MEDIA) .buildUpon() .appendQueryParameter(Instagram.Param.CLIENT_ID, Instagram.CLIENT_ID).build(); "
0, Object token; for (Iterator iterator = assertions.iterator(); iterator.hasNext();) { token = iterator.next(); if (token instanceof Token) { parent.setInitiatorToken((Token) token); ," Object [] vertices = RandomGraphHelper.addVertices( target, vertexFactory, numVertices); RandomGraphHelper.addEdges( target, Arrays.asList(vertices), Arrays.asList(vertices), numEdges); "
0, final PsiElement member = memberInfo.getMember(); return member instanceof PsiField || member instanceof PsiMethod || (member instanceof PsiClass && memberInfo.getOverrides() == null); ," ResourceDownloaderTimeoutImpl c = new ResourceDownloaderTimeoutImpl( getParent(), delegate.getClone( parent ), timeout_millis ); c.setSize( size ); c.setProperties( this ); return( c ); "
1, if (ruleElementDTOs.size() > 0) { for (RuleElementDTO ruleElementDTO : ruleElementDTOs) { if (ruleElementDTO.getRuleId().equals(ruleId)) { return ruleElementDTOs.remove(ruleElementDTO); , if (ruleElementDTOs.size() > 0) { for (RuleElementDTO ruleElementDTO : ruleElementDTOs) { if (ruleElementDTO.getRuleId().equals(ruleId)) { return ruleElementDTOs.remove(ruleElementDTO); 
0, MediatorService service = store.get(mediatorName); if (service == null) { UILessMediatorService defService = new UILessMediatorService(); defService.setLocalName(mediatorName); return defService; ," super(""Cancel""); KeyStroke accelerator = LilithKeyStrokes.getKeyStroke(LilithKeyStrokes.ESCAPE); putValue(Action.ACCELERATOR_KEY, accelerator); putValue(Action.MNEMONIC_KEY, KeyEvent.VK_C); "
0," if (globalConfigurationManager == null) { try { globalConfigurationManager = (GlobalConfigurationManager) InitialContext.doLookup(""java:global/Analysis/GlobalConfigurationManager""); ", if (component instanceof DisplayValueOnlyCapable) { if (((DisplayValueOnlyCapable) component).isSetDisplayValueOnly()) { return ((DisplayValueOnlyCapable) component).isDisplayValueOnly(); 
0," AtomicReferenceFieldUpdater<AtomicReferenceFieldUpdaterTest, Integer>a; try { a = AtomicReferenceFieldUpdater.newUpdater(AtomicReferenceFieldUpdaterTest.class, Integer.class, ""x""); ", SynthStyle oldStyle = style; JInternalFrame f = (JInternalFrame)evt.getSource(); String prop = evt.getPropertyName(); if (SynthLookAndFeel.shouldUpdateStyle(evt)) { updateStyle(f); 
1, switch (v) { case ABUNDANCE: case RNA_ABUNDANCE: case MICRO_RNA_ABUNDANCE: case PROTEIN_ABUNDANCE: case GENE_ABUNDANCE: case COMPLEX_ABUNDANCE: return true; default: return false; , switch (v) { case ABUNDANCE: case RNA_ABUNDANCE: case MICRO_RNA_ABUNDANCE: case PROTEIN_ABUNDANCE: case GENE_ABUNDANCE: case COMPLEX_ABUNDANCE: return true; default: return false; 
1, boolean isEqual = false; if (other instanceof IDManagerPK) { if (id == null) isEqual = (id == ((IDManagerPK)other).id); else isEqual = (id.intValue() == ((IDManagerPK)other).id.intValue()); , boolean isEqual = false; if (other instanceof IDManagerPK) { if (id == null) isEqual = (id == ((IDManagerPK)other).id); else isEqual = (id.intValue() == ((IDManagerPK)other).id.intValue()); 
0," super.clearGui(); argumentName.setText(""""); pathExt.setSelected(false); pathExtNoEquals.setSelected(false); pathExtNoQuestionmark.setSelected(false); shouldCache.setSelected(false); ", Iterator<UndoRedoOperation> iterator = undoSavePointActions.descendingIterator(); while (iterator.hasNext()) { UndoRedoOperation undoRedoAction = iterator.next(); undoRedoAction.undo(); 
1, j = new DJep(); j.addStandardConstants(); j.addStandardFunctions(); j.addComplex(); j.setAllowUndeclared(true); j.setAllowAssignment(true); j.setImplicitMul(true); ((DJep) j).addStandardDiffRules(); , j = new DJep(); j.addStandardConstants(); j.addStandardFunctions(); j.addComplex(); j.setAllowUndeclared(true); j.setAllowAssignment(true); j.setImplicitMul(true); ((DJep) j).addStandardDiffRules(); 
1," getLogger().debug(""Begin NhinAdminDistributionOrchestratableImpl_g0.process""); if (message == null) { getLogger().debug(""EntityAdminDistributionOrchestratable was null""); return; "," getLogger().debug(""Begin NhinAdminDistributionOrchestratableImpl_g0.process""); if (message == null) { getLogger().debug(""EntityAdminDistributionOrchestratable was null""); return; "
1," final String[] II_COD_INSTIT_TABLE_ARRAY = ReportKit.getConfig() .getStringArray(ReportKit.II_COD_INSTIT_TABLES); return ArrayKit.searchEqual(II_COD_INSTIT_TABLE_ARRAY, index) >= 0; "," final String[] II_COD_INSTIT_TABLE_ARRAY = ReportKit.getConfig() .getStringArray(ReportKit.II_COD_INSTIT_TABLES); return ArrayKit.searchEqual(II_COD_INSTIT_TABLE_ARRAY, index) >= 0; "
0, boolean equals = false; if(o instanceof LanguageVO) { LanguageVO languageVO = (LanguageVO)o; if(languageVO != null && languageVO.getLanguageId().equals(this.languageId)) equals = true; , boolean permiteAcesso = false; Instituicao inst = acionamento.getMensagem().getAssunto() .getInstituicao(); if (funcionario.getListaInstituicao().contains(inst)) { permiteAcesso = true; 
1, int index = findInsertionIndex(key); T previous = missingEntries; boolean newMapping = true; if (index < 0) { index = changeIndexSign(index); previous = values[index]; newMapping = false; , int index = findInsertionIndex(key); T previous = missingEntries; boolean newMapping = true; if (index < 0) { index = changeIndexSign(index); previous = values[index]; newMapping = false; 
0, if (this.instanceDataDocument == null) { final String content = this.getContent(); try { this.instanceDataDocument = (content != null ? XMLUtil.parse(content) : XMLUtil.newDocument()); , StringBuilder builder = new StringBuilder(str.length() * 2); for (int i = 0; i < str.length(); i++) { char c = str.charAt(i); if (charsToQuote.indexOf(c) != -1) { builder.append('\\'); 
0," int max = size(); StringBuilder buf = new StringBuilder(); buf.append(""{""); for (int i = 0; i < max; ++i) { if (keyTable[i] != null) { buf.append(keyTable[i]).append(""->"").append(valueTable[i]); "," doThrow(new RuntimeException()).when(mockChildVisitService).save(Matchers.<PNCBabyRequest>any()); try { pncBabyFormHandler.handleFormEvent(new PNCBabyForm()); fail(""Should handle exception""); "
1," if(!enable) { if (LOG.isWarnEnabled()) { LOG.warn(""JodConverter is disabled! To use JodConverter please change wcm.jodconverter.enable=true in "" + ""configuration.properties file""); return; "," if(!enable) { if (LOG.isWarnEnabled()) { LOG.warn(""JodConverter is disabled! To use JodConverter please change wcm.jodconverter.enable=true in "" + ""configuration.properties file""); return; "
1," ResinSystem system = preCreate(HealthStatusService.class); HealthStatusService service = new HealthStatusService(); system.addService(HealthStatusService.class, service); return service; "," ResinSystem XXXXX = preCreate(HealthStatusService.class); HealthStatusService XXXXX = new HealthStatusService(); XXXXX.addService(HealthStatusService.class, XXXXX); return XXXXX; "
1," if(s.shellstate==ShellState.FINDING){ if(inCache(s) || inPersistence(s) || inRemote(s)) return; log(""Object not found locally and can't get remotely:\n""+s); s.shellstate = ShellState.NOTFOUND; "," if(s.shellstate==ShellState.FINDING){ if(inCache(s) || inPersistence(s) || inRemote(s)) return; log(""Object not found locally and can't get remotely:\n""+s); s.shellstate = ShellState.NOTFOUND; "
1, if (callFrameTop > 0) { LuaCallFrame callFrame = callFrameStack[callFrameTop - 1]; if (callFrame == null) { callFrame = new LuaCallFrame(this); callFrameStack[callFrameTop - 1] = callFrame; , if (XXXXXTop > 0) { LuaCallFrame XXXXX = XXXXXStack[XXXXXTop - 1]; if (XXXXX == null) { XXXXX = new LuaCallFrame(this); XXXXXStack[XXXXXTop - 1] = XXXXX; 
1," try { this.dictname = dictname; this.index = new RandomAccessFile(dictname+"".idx"", ""r""); this.dz = new DictZipFile(dictname+"".dz""); this.yaindex = new RandomAccessFile(dictname+"".yaidx"", ""r""); "," try { this.dictname = dictname; this.index = new RandomAccessFile(dictname+"".idx"", ""r""); this.dz = new DictZipFile(dictname+"".dz""); this.yaindex = new RandomAccessFile(dictname+"".yaidx"", ""r""); "
1," String s = StatementBuilder.create() .declareVariable(""n"", int.class) .switch_(Stmt.loadVariable(""n"")) .toJavaString(); assertEquals(""Failed to generate empty switch block"", SWITCH_BLOCK_EMPTY, s); "," String s = StatementBuilder.create() .declareVariable(""n"", int.class) .switch_(Stmt.loadVariable(""n"")) .toJavaString(); assertEquals(""Failed to generate empty switch block"", SWITCH_BLOCK_EMPTY, s); "
1, getAnimatorThread(); if (this.runningTimelines.contains(timeline)) { this.runningTimelines.remove(timeline); while (timeline.getState() != TimelineState.IDLE) timeline.popState(); , getAnimatorThread(); if (this.runningTimelines.contains(timeline)) { this.runningTimelines.remove(timeline); while (timeline.getState() != TimelineState.IDLE) timeline.popState(); 
1," return (AbsenceCategory) this.em .createNamedQuery(AbsenceCategory.NQ_FIND_BY_NAME) .setParameter(""pClientId"", Session.user.get().getClientId()) .setParameter(""pName"", name).getSingleResult(); "," return (AbsenceCategory) this.em .createNamedQuery(AbsenceCategory.NQ_FIND_BY_NAME) .setParameter(""pClientId"", Session.user.get().getClientId()) .setParameter(""pName"", name).getSingleResult(); "
0," Set<String> users = _groupToUserMap.get(group); if (users == null) { throw new IllegalArgumentException(""Group "" + group + "" does not exist so could not remove "" + user + "" from it""); "," for (int i = 0; i < avail.length; i ++) { if (Utils.supportsLocale(avail[i], locale)) { return new FooDateFormat( datePattern[dateStyle]+"" ""+timePattern[timeStyle]+dialect[i], locale); "
0," CrossJoinAnalyzer analyzer = new CrossJoinAnalyzer(simplifiedList, substitutionMap); String crossJoin = analyzer.getCrossJoinExpression(); if (crossJoin.length() == 0) { return simplifiedList; "," panel = new SplitScreenView( new SimpleDetailedListModel<GeneSet>(""Gene Sets"") { @Override public GeneSet[] getData() throws Exception { return manager.getGeneSets(LoginController.sessionId); "
1," if (mContext.checkCallingOrSelfPermission( android.Manifest.permission.SHUTDOWN) != PackageManager.PERMISSION_GRANTED) { throw new SecurityException(""Requires SHUTDOWN permission""); "," if (mContext.checkCallingOrSelfPermission( android.Manifest.permission.SHUTDOWN) != PackageManager.PERMISSION_GRANTED) { throw new SecurityException(""Requires SHUTDOWN permission""); "
0," try { URL url = new URL(canonicalizeUrl(urlStr)); URLConnection conn = url.openConnection(); if (conn instanceof HttpURLConnection) { processResponse((HttpURLConnection) conn, callback); "," tag = HTML.Tag.FONT; assertEquals(""font"", tag.toString()); assertFalse(""breaks Flow"", tag.breaksFlow()); assertFalse(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); "
0, int work = 1; if (!(node instanceof IExecTestCasePO)) { Iterator<INodePO> childIter = node.getNodeListIterator(); while (childIter.hasNext()) { work += getWorkForNode(childIter.next()); ," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (group1: ""); result.append(group1); result.append(')'); return result.toString(); "
1," roundFlipDegrees(); updateFlipFilter(false); transformPhotoView(horizontalFlipDegrees, verticalFlipDegrees); flipView.setFlippedAngles(horizontalFlipDegrees, verticalFlipDegrees); "," roundFlipDegrees(); updateFlipFilter(false); transformPhotoView(horizontalFlipDegrees, verticalFlipDegrees); flipView.setFlippedAngles(horizontalFlipDegrees, verticalFlipDegrees); "
1," internal.renderQuad(renderEngine.convertToNativeX(x), renderEngine.convertToNativeY(y), renderEngine.convertToNativeWidth(width), renderEngine.convertToNativeHeight(height), color); "," internal.renderQuad(renderEngine.convertToNativeX(x), renderEngine.convertToNativeY(y), renderEngine.convertToNativeWidth(width), renderEngine.convertToNativeHeight(height), color); "
1," boolean resetTheme = getIntent() != null ? getIntent().getBooleanExtra(ParamIntent.PREFERENCE_RESULT_THEME, false) : false; if (resetTheme) { setResult(CineShowtimeCst.RESULT_PREF_WITH_NEW_THEME); "," boolean XXXXX = getIntent() != null ? getIntent().getBooleanExtra(ParamIntent.PREFERENCE_RESULT_THEME, false) : false; if (XXXXX) { setResult(CineShowtimeCst.RESULT_PREF_WITH_NEW_THEME); "
0," payments.clear(); String[] lines = payData.split(""\n""); for(String line:lines) { if(line.length()==0) continue; String[] parts = line.split(""-=-""); payments.put(parts[0], parts[1]); ", setChecked(task.isActive()); if (task.isActive()) { setText(Messages.ToggleTaskActivationAction_Deactivate_Task); setToolTipText(Messages.ToggleTaskActivationAction_Deactivate_Task); 
0, dialog.usernameField.setText(credentials.getUsername()); dialog.passwordField.setText(credentials.getPassword()); dialog.rememberMeCheckBox.setSelected(credentials.getRemember()); ," ResourceFactoryProvider test = new ResourceFactoryProvider( session); ServerInterfaceHandlerFactory<?, ?>[] handlerFactories = test.getHandlerFactories(); count = handlerFactories.length; "
0," Element mapping = new Element(ELEMENT_REMOVED_MAPPING); if (matcher instanceof ExtensionFileNameMatcher) { mapping.setAttribute(ATTRIBUTE_EXT, ((ExtensionFileNameMatcher)matcher).getExtension()); ", switch (getDBType(em)) { case db2: assertLockTestSQLs(Select + tableLfName + Where + DB2Lock); break; case derby: case oracle: default: assertLockTestSQLs(Select + tableLfName + Where + ForUpdate); 
1, this.clientEncoding = clientEncoding; this.serverEncoding = serverEncoding; if (clientEncoding != null && serverEncoding != null && !clientEncoding.equalsIgnoreCase(serverEncoding)) { enable = true; , this.clientEncoding = clientEncoding; this.serverEncoding = serverEncoding; if (clientEncoding != null && serverEncoding != null && !clientEncoding.equalsIgnoreCase(serverEncoding)) { enable = true; 
0," Context cx = Context.getCurrentContext(); cx.evaluateString(scope, ""new XML();"", ""XML() initialization"", 0, null); RhinoEngine.putContextProperty(MashupConstants.ACTIVE_SCOPE, scope); "," MapKeysCompletionProvider provider = new MapKeysCompletionProvider(); contributor.extend(CompletionType.BASIC, psiElement().withParent(psiElement(GrReferenceExpression.class)), provider); "
0," final Task a = task(""a"", task(""a-dep"")); Task b = task(""b""); Task c = task(""c"", a, b); Spec<Task> spec = new Spec<Task>() { public boolean isSatisfiedBy(Task element) { return element != a; "," LockableEntityPersister ep = (LockableEntityPersister)getPersister(type); if (ep == null) { throw new CannotAcquireLockException(""Cannot lock key ["" + key + ""]. It is not a persistent instance!""); "
1," String cacheName = componentRegistry.getCacheName(); String prefix = ""Cache '"" + cacheName + ""'""; if (cacheName.equals(CacheContainer.DEFAULT_CACHE_NAME)) prefix = ""Default cache""; return prefix; "," String XXXXX = componentRegistry.getCacheName(); String XXXXX = ""Cache '"" + XXXXX + ""'""; if (XXXXX.equals(CacheContainer.DEFAULT_CACHE_NAME)) XXXXX = ""Default cache""; return XXXXX; "
0," StringBuffer buffer = new StringBuffer(); buffer.append(""[SAVERECALC]\n""); buffer.append("" .recalc = "").append(getRecalc()) .append(""\n""); buffer.append(""[/SAVERECALC]\n""); return buffer.toString(); "," return new IContentAssistService() { public List<Proposal> computeCompletionProposals(Scope scope, ContentAssistInvocationContext context, ITranslationUnit unit) { return Collections.emptyList(); "
1," StringBuilder sb = new StringBuilder(""[SensorML]"").append(""\n""); if (keywords != null) { sb.append(""Keywords:"").append('\n'); for (Keywords k : keywords) { sb.append(k).append('\n'); "," StringBuilder XXXXX = new StringBuilder(""[SensorML]"").append(""\n""); if (keywords != null) { XXXXX.append(""Keywords:"").append('\n'); for (Keywords k : keywords) { XXXXX.append(k).append('\n'); "
1," int number = 0; StringBuilder numberBuf = new StringBuilder(); for (int i = 0; i < str.length(); i++) { String thisChar = str.substring(i, i); if (hasNumber(thisChar)) numberBuf.append(thisChar); "," XXXXXnt XXXXX = 0; StrXXXXXngBuXXXXXlder XXXXXBuf = new StrXXXXXngBuXXXXXlder(); for (XXXXXnt XXXXX = 0; XXXXX < str.length(); XXXXX++) { StrXXXXXng thXXXXXsChar = str.substrXXXXXng(XXXXX, XXXXX); XXXXXf (hasNumber(thXXXXXsChar)) XXXXXBuf.append(thXXXXXsChar); "
1," if (refreshInterval.millis() > 0) { refreshScheduledFuture = threadPool.schedule(refreshInterval, ThreadPool.Names.SAME, new EngineRefresher()); logger.debug(""scheduling refresher every {"," if (refreshInterval.millis() > 0) { refreshScheduledFuture = threadPool.schedule(refreshInterval, ThreadPool.Names.SAME, new EngineRefresher()); logger.debug(""scheduling refresher every {"
0, final int prime = 31; int result = 1; result = prime * result + ((map == null) ? 0 : map.hashCode()); result = prime * result + ((reduce == null) ? 0 : reduce.hashCode()); return result; ," final GroupEntity group = groupDao.findByKey( groupKey ); if ( group.isBuiltIn() ) { throw new IllegalArgumentException( ""Cannot synchronize built-in group: "" + group.getQualifiedName() ); "
1, spec.setClasspath(new SimpleFileCollection(Lists.newArrayList(spec.getClasspath()))); spec.setGroovyClasspath(new SimpleFileCollection(Lists.newArrayList(spec.getGroovyClasspath()))); , spec.setClasspath(new SimpleFileCollection(Lists.newArrayList(spec.getClasspath()))); spec.setGroovyClasspath(new SimpleFileCollection(Lists.newArrayList(spec.getGroovyClasspath()))); 
1," Properties prop = new Properties(); System.out.println(this.getClass().getPackage().getName()); InputStream stream = this.getClass().getResourceAsStream( ""dico.properties""); try { prop.load(stream); "," Properties XXXXX = new Properties(); System.out.println(this.getClass().getPackage().getName()); InputStream XXXXX = this.getClass().getResourceAsStream( ""dico.XXXXXerties""); try { XXXXX.load(XXXXX); "
0," String target; target = context.getTarget().getClass().getName(); if (context.getMethod().isAnnotationPresent(Transactional.class)) { target += ""."" + context.getMethod().getName(); "," if (isElementAvailable(payment, ""chosenNonAcceptedSavingDeposits"")) { selenium.select(""chosenNonAcceptedSavingDeposits"", payment); selenium.click(""defineAcceptedPaymentTypes.button.addDeposits""); "
1," auditLogger.info(String.format(""KICKED: %s (%s) kicked player '%s': %s"", PlayerUtil.toUniqueName(source), CommandBook.inst().toInetAddressString(source), player.getName(), reason)); "," auditLogger.info(String.format(""KICKED: %s (%s) kicked player '%s': %s"", PlayerUtil.toUniqueName(source), CommandBook.inst().toInetAddressString(source), player.getName(), reason)); "
1," String key = owner + '#' + name; Integer modifiers = memberModifiers.get(key); if (modifiers == null) { modifiers = getClassField(owner, name).getModifiers(); memberModifiers.put(key, modifiers); "," String XXXXX = owner + '#' + name; Integer XXXXX = memberModifiers.get(XXXXX); if (XXXXX == null) { XXXXX = getClassField(owner, name).getModifiers(); memberModifiers.put(XXXXX, XXXXX); "
1," JPanel mainPanel = new JPanel(new BorderLayout()); DefaultTableModel dm = new DefaultTableModel(new Object[][]{ {""119"", ""foo"", ""bar"", ""ja"", ""ko"", ""zh"", ""EUR"", ""YEN"", ""USD"", ""GBP"", ""FRF"""," JPanel XXXXX = new JPanel(new BorderLayout()); DefaultTableModel XXXXX = new DefaultTableModel(new Object[][]{ {""119"", ""foo"", ""bar"", ""ja"", ""ko"", ""zh"", ""EUR"", ""YEN"", ""USD"", ""GBP"", ""FRF"""
0, ProjectRepository newProjectRepository = new ProjectRepository(dmModel); newProjectRepository.setName(aName); dmModel.addToProjectRepositories(newProjectRepository); return newProjectRepository; ," KeywordArgument arg1 = TEST_PARAM1.of(""Hello""); KeywordArguments keywordArguments = KeywordArguments.of(arg1); assertThat(TEST_PARAM2.from(keywordArguments, ""Marvin""), is(""Marvin"")); "
0, final TabHeaderSkin tabRegion = tabHeaderArea.getTabHeaderSkin(tab); tabHeaderArea.removeTab(tab); removeTabContent(tab); tabRegion.animating = false; tabHeaderArea.requestLayout(); tab = null; , while( dockable.getDockParent() != screen ){ DockStation station = dockable.getDockParent(); if( station == null ) return; dockable = station.asDockable(); if( dockable == null ) return; 
1, try { int count = 0; String dns = findPublicDns(instanceId); while ((dns == null || dns.length() == 0) && count < maxWaitSeconds) { Thread.sleep(1000); dns = findPublicDns(instanceId); count++; , try { int XXXXX = 0; String XXXXX = findPublicDns(instanceId); while ((XXXXX == null || XXXXX.length() == 0) && XXXXX < maxWaitSeconds) { Thread.sleep(1000); XXXXX = findPublicDns(instanceId); XXXXX++; 
1, int prime = 97; int startInclusiveHash = startInclusive ? prime : 0; int endInclusiveHash = endInclusive ? prime : 0; int i = 0; if (start != null) { i = start.hashCode() + startInclusiveHash; , int prime = 97; int startInclusiveHash = startInclusive ? prime : 0; int endInclusiveHash = endInclusive ? prime : 0; int i = 0; if (start != null) { i = start.hashCode() + startInclusiveHash; 
0," _texParams.set(min, mag, s, t); if(_name != 0) { GLResourceHelper.sharedHelper().perform(new GLResourceHelper.GLResorceTask() { @Override public void perform(GL10 gl) { applyTexParameters(gl); ", return new ValueFiller() { private final long[] longArr = arr; private final MutableValueLong mval = newMutableValueLong(); @Override public MutableValue getValue() { return mval; 
1," BranchConfigurationChangedDialog d = new BranchConfigurationChangedDialog(settings.getProject(), config, list, names); d.show(); code.set(d.getExitCode()); name.set(d.myNameTextField.getText()); "," BranchConfigurationChangeXXXXXDialog XXXXX = new BranchConfigurationChangeXXXXXDialog(settings.getProject(), config, list, names); XXXXX.show(); coXXXXXe.set(XXXXX.getExitCoXXXXXe()); name.set(XXXXX.myNameTextFielXXXXX.getText()); "
0, int codeLength = codeAttribute.u4codeLength; if (isAliveBefore.length < codeLength) { isAliveBefore = new long[codeLength]; isAliveAfter = new long[codeLength]; isCategory2 = new long[codeLength]; , int offset1 = buffer.getShort (0) & 0xFFFF; int offset2 = buffer.getShort (offset1 + 2) & 0xFFFF; return ((buffer.getShort (offset1 + offset2 + 4) & 0xFFFF) + offset1 + offset2 + 6); 
1," dao.attachVdsToTag(newVdsTag); tags_vds_map result = dao.getTagVdsByTagIdAndByVdsId(newVdsTag.gettag_id(), newVdsTag.getvds_id()); assertNotNull(result); assertEqualsTagsVdsMap(newVdsTag,result); "," dao.attachVdsToTag(newVdsTag); tags_vds_map XXXXX = dao.getTagVdsByTagIdAndByVdsId(newVdsTag.gettag_id(), newVdsTag.getvds_id()); assertNotNull(XXXXX); assertEqualsTagsVdsMap(newVdsTag,XXXXX); "
1, ByteArrayOutputStream byteStream = new ByteArrayOutputStream(); PrintStream stream = new PrintStream( byteStream ); e.printStackTrace( stream ); stream.flush(); return byteStream.toString(); , ByteArrayOutputStream XXXXX = new ByteArrayOutputStream(); PrintStream XXXXX = new PrintStream( XXXXX ); e.printStackTrace( XXXXX ); XXXXX.flush(); return XXXXX.toString(); 
0," if (StringUtils.isEmpty(labelKey)) { StringBuilder key = new StringBuilder(""""); if (lowerCase) { return (UifConstants.Messages.VALIDATION_MSG_KEY_PREFIX + ""alphaPatternLowerCase""); "," lastName = null; firstNames = null; if ((rawValue != null) && !rawValue.equals("""")) { int commaIndex = rawValue.indexOf(','); if (commaIndex == -1) { commaIndex = rawValue.length(); "
1," super(parent, checkStyle(style)); this.mColorTheme = theme; this.mColorManager = colorManager; this.mParent = parent; this.mSettings = settings; this.mLanguage = language; init(); "," super(parent, checkStyle(style)); this.mColorTheme = theme; this.mColorManager = colorManager; this.mParent = parent; this.mSettings = settings; this.mLanguage = language; init(); "
0," tag = HTML.Tag.AREA; assertEquals(""area"", tag.toString()); assertFalse(""breaks Flow"", tag.breaksFlow()); assertFalse(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); ", final int prime = 31; int result = 1; result = prime * result + ((host == null) ? 0 : host.hashCode()); result = prime * result + ((project == null) ? 0 : project.hashCode()); return result; 
0, int numCorrespondences = 0; for ( final Bead bead : view.getBeadStructure().getBeadList() ) if ( bead.getRANSACCorrespondence().size() > 0 ) ++numCorrespondences; return numCorrespondences; ," clear(); RootPanel.get(""UserName"").add(guest); RootPanel.get(""link2loginout"").add(signin); RootPanel.get(""UserNameOnBoard"").add(userName); RootPanel.get(""link2loginoutOnBoard"").add(formSignin); "
0," if (isLiveOrCompiled()) if(!this.getCapability(ALLOW_ALIGNMENT_READ)) throw new CapabilityNotSetException(J3dI18N.getString(""Text3D6"")); return ((Text3DRetained)this.retained).getAlignment(); ", List<ExpMeta> metadados = new ArrayList<ExpMeta>(); for (int i = 0; i < gridTotais.getModelos().getColumnCount(); i++) { if (gridTotais.getModelos().isHidden(i)) { metadados.add(null); 
0," super(555,600, new int[] {600,601,602,603,604,607,608,609,764,610,611,248,249,250,251,252,253,257,599,596,597,598,254,612,942,613,614,615,616,617,618,619,620,621,622,623,624,556,740,739,955,956,0 "," boolean success = fme.attemptClaim(forFaction, this.currentLocation(), true); if (success) failCount = 0; else if ( ! success && failCount++ >= limit) { this.stop(); return false; "
1," if(data.item instanceof RoutedEntityItem) { PacketPipeLogisticsContent packet = new PacketPipeLogisticsContent(container.xCoord, container.yCoord, container.zCoord, data); return packet.getPacket(); "," if(data.item instanceof RoutedEntityItem) { PacketPipeLogisticsContent XXXXX = new PacketPipeLogisticsContent(container.xCoord, container.yCoord, container.zCoord, data); return XXXXX.getPacket(); "
0, SparseRowMatrix clone = (SparseRowMatrix) super.clone(); clone.rowVectors = new Vector[rowVectors.length]; for (int i = 0; i < rowVectors.length; i++) { clone.rowVectors[i] = rowVectors[i].clone(); , persister.setShouldFailLoad(true); exceptionHandler.setLoadStrategy(LoadFailureSolutionStrategy.RETRY); try { configServiceAccessor.load(ConfigServiceAccessorTestConfiguration.class); 
0," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; ", if (feature instanceof EAttribute) { Attribute attribute = null; for (Attribute nodeAttribute : owner.getAttributes()) { if (nodeAttribute.getType() == feature) { attribute = nodeAttribute; break; 
0," if ( event.keyCode == 127 ) { FileObject[] files = getSelectedFiles(); int count = files.length; String message = (count == 1) ? getResourceString(""msg.box.delete.uri"", new Object[]{files[0]"," LOGGER.log(Level.SEVERE, ""[Plugins] An error occurred in plug-in '""+plugin.getSymbolicName()+""', plug-in will be disabled."", error); removePlugin(plugin); try { plugin.rjStop(V_ERROR); "
1, switch (getDBType(em)) { case db2: assertLockTestSQLs(Select + tableLfName + Where + DB2Lock); break; case oracle: case derby: default: assertLockTestSQLs(Select + tableLfName + Where + ForUpdate); , switch (getDBType(em)) { case db2: assertLockTestSQLs(Select + tableLfName + Where + DB2Lock); break; case oracle: case derby: default: assertLockTestSQLs(Select + tableLfName + Where + ForUpdate); 
1," myClient(mountedRoot); InetSocketAddress nodeAddr = _locator.locate(); if (nodeAddr == null) { throw new ConfigurationException(""Unable to locate CAStor node with locator "" + _locator); "," myClient(mountedRoot); InetSocketAddress XXXXX = _locator.locate(); if (XXXXX == null) { throw new ConfigurationException(""Unable to locate CAStor node with locator "" + _locator); "
1," Cursor waypointsCursor = null; if( mRequeryFlag || mStepSize < 1 || mWaypointCount < 0 ) { try { waypointsCursor = this.mResolver.query( this.mWaypointsUri, new String[] { Waypoints._ID "," Cursor waypointsCursor = null; if( mRequeryFlag || mStepSize < 1 || mWaypointCount < 0 ) { try { waypointsCursor = this.mResolver.query( this.mWaypointsUri, new String[] { Waypoints._ID "
1," try { String comment = this.address.getKommentar(); if (comment != null && comment.length() > 0) return this.address.getName() + "" ("" + comment + "")""; return this.address.getName(); "," try { String XXXXX = this.address.getKommentar(); if (XXXXX != null && XXXXX.length() > 0) return this.address.getName() + "" ("" + XXXXX + "")""; return this.address.getName(); "
1, this._subArrayBits = subArrayBits; this._subArraySize = 1 << subArrayBits; this._subArrayMask = this._subArraySize - 1; this._subArrays = new int[1][_subArraySize]; this._autoExpand = autoExpand; , this._subArrayBits = subArrayBits; this._subArraySize = 1 << subArrayBits; this._subArrayMask = this._subArraySize - 1; this._subArrays = new int[1][_subArraySize]; this._autoExpand = autoExpand; 
1," return new SerializerWriteBasic( new Datas[] {Datas.OBJECT, Datas.STRING, Datas.OBJECT, Datas.DOUBLE, Datas.OBJECT, Datas.DOUBLE, Datas.OBJECT, Datas.STRING, Datas.OBJECT, Datas.STRING"," return new SerializerWriteBasic( new Datas[] {Datas.OBJECT, Datas.STRING, Datas.OBJECT, Datas.DOUBLE, Datas.OBJECT, Datas.DOUBLE, Datas.OBJECT, Datas.STRING, Datas.OBJECT, Datas.STRING"
0," org.gudy.azureus2.core3.download.DownloadManager dm = PluginCoreUtils.unwrap( download ); if ( PlatformTorrentUtils.getHasBeenOpened( dm )){ PlatformTorrentUtils.setHasBeenOpened( dm, false ); "," sp.printHTMLheader(""RUBiS ERROR: SearchItemsByRegion""); sp.printHTML( ""<h2>Your request has not been processed due to the following error :</h2><br>""); sp.printHTML(errorMsg); sp.printHTMLfooter(); "
1," createSimple(""testFindAll1""); createSimple(""testFindAll2""); Simple example = new Simple(""test""); Long count = dao.countLike(example, Simple_.name); assertEquals(Long.valueOf(2), count); "," createSimple(""testFindAll1""); createSimple(""testFindAll2""); Simple XXXXX = new Simple(""test""); Long XXXXX = dao.XXXXXLike(XXXXX, Simple_.name); assertEquals(Long.valueOf(2), XXXXX); "
1," RiakRequest<String> request = new RiakRequest<String>(); request.key = ""UnitTestKey""; request.op = RiakGenerator.FETCH; testStoreOperation(); runOp( generator.createFetchOperation( request ) ); "," RiakRequest<String> request = new RiakRequest<String>(); request.key = ""UnitTestKey""; request.op = RiakGenerator.FETCH; testStoreOperation(); runOp( generator.createFetchOperation( request ) ); "
0," final Definition def = new Definition(); def.setRequirements(constructRequirements(cpuType, vmmVer, vmmType, kernel)); def.setDiskCollection(contructDiskCollection(imageURI, mountAs)); return def; ", ByteBuffer bb = ByteBuffer.allocateDirect(vertices.length * 4); bb.order(ByteOrder.nativeOrder()); FloatBuffer buffer = bb.asFloatBuffer(); buffer.put(vertices); buffer.position(0); return buffer; 
1, boolean isStereotypeProperty = false; if(eObject instanceof Property) { Property property = (Property)eObject; if(property.getOwner() instanceof Stereotype) { isStereotypeProperty = true; , boolean XXXXX = false; if(eObject instanceof Property) { Property XXXXX = (Property)eObject; if(XXXXX.getOwner() instanceof Stereotype) { XXXXX = true; 
1," ModRM modrm = vm.getModRM(); int r8 = modrm.getRegister8(); int rm8 = modrm.getRMValue8(); int result = r8 - rm8; FlagCheck.subCheck(r8, rm8, result, vm.getEFlags(), 8); vm.addEIP(2); "," ModRM XXXXX = vm.getModRM(); int XXXXX = XXXXX.getRegisteXXXXX(); int XXXXX = XXXXX.getRMValue8(); int XXXXX = XXXXX - XXXXX; FlagCheck.subCheck(XXXXX, XXXXX, XXXXX, vm.getEFlags(), 8); vm.addEIP(2); "
1," super.setDefaults(config); if (fAttachMode) { config.setAttribute(IPTPLaunchConfigurationConstants.ATTR_DEBUGGER_START_MODE, IPTPLaunchConfigurationConstants.DEBUGGER_MODE_ATTACH); "," super.setDefaults(config); if (fAttachMode) { config.setAttribute(IPTPLaunchConfigurationConstants.ATTR_DEBUGGER_START_MODE, IPTPLaunchConfigurationConstants.DEBUGGER_MODE_ATTACH); "
1, EntityCacheUtil.removeCache(WorkflowDefinitionLinkImpl.class.getName()); FinderCacheUtil.removeCache(FINDER_CLASS_NAME_ENTITY); FinderCacheUtil.removeCache(FINDER_CLASS_NAME_LIST); , EntityCacheUtil.removeCache(WorkflowDefinitionLinkImpl.class.getName()); FinderCacheUtil.removeCache(FINDER_CLASS_NAME_ENTITY); FinderCacheUtil.removeCache(FINDER_CLASS_NAME_LIST); 
0," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; "," assertEquals(0x12131415, Ints.fromBytes( (byte) 0x12, (byte) 0x13, (byte) 0x14, (byte) 0x15)); assertEquals(0xFFEEDDCC, Ints.fromBytes( (byte) 0xFF, (byte) 0xEE, (byte) 0xDD, (byte) 0xCC)); "
0," synchronized (fLock) { this.project = context.getProject(); this.context = context; try { DiscoveredScannerInfoStore.getInstance().loadDiscoveredScannerInfoFromState(project, context, sid); "," EcefVector v1 = EcefVector.fromDegs(locPosId, 89.0f , 0); double lat = v1.getLatDegs(); double lon = v1.getLonDegs(); assertEquals(89.0, lat, 0.0001); assertEquals(0.0, lon, 0.0001); "
0," InterMineObject gene = reportObject.getObject(); Map<InterMineObject, Integer> pathways = getPathways(gene); if (pathways.isEmpty()) { request.setAttribute(""noPathwayResults"", ""No pathways found""); "," final String[] xmlFileNamesInDirectory = FileBuilder.getXmlFileNamesInDirectory( Settings.settings().getSourcePath() ); for ( String s : xmlFileNamesInDirectory ) { System.out.println( ""s = "" + s ); "
0, ServiceInvoker invoker = null; if (applicationContext.containsBean(ServiceInvoker.SERVICE_NAME)) { invoker = (ServiceInvoker) applicationContext.getBean(ServiceInvoker.SERVICE_NAME); ," E oldValue = list.remove(index); modCount++; for (ObservableListListener listener : listeners) { listener.listElementsRemoved(this, index, java.util.Collections.singletonList(oldValue)); "
1, final int prime = 31; int result = 1; result = prime * result + ((message == null) ? 0 : message.hashCode()); result = prime * result + ((severity == null) ? 0 : severity.hashCode()); return result; , final int XXXXX = 31; int XXXXX = 1; XXXXX = XXXXX * XXXXX + ((message == null) ? 0 : message.hashCode()); XXXXX = XXXXX * XXXXX + ((severity == null) ? 0 : severity.hashCode()); return XXXXX; 
0," mTestStatus = status; mTrace = trace; assertEquals(""Unexpected class name"", mSuiteName, test.getClassName()); assertEquals(""Unexpected test ended"", mTestName, test.getTestName()); "," tag = HTML.Tag.BASEFONT; assertEquals(""basefont"", tag.toString()); assertFalse(""breaks Flow"", tag.breaksFlow()); assertFalse(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); "
0, for (final BayesNode node : net.getNodes()) { final Factor nodeHome = nodePotentials[homeClusters[node.getId()]]; if (nodeHome.isLogScale()) { nodeHome.multiplyCompatibleToLog(node.getFactor()); ," Security security = _weakIdCache.get(bundle); if (security == null) { security = _underlying.getSecurity(bundle); if (security != null) { _weakIdCache.putIfAbsent(bundle, security); "
0, GroupMarkerSubRecord rec = new GroupMarkerSubRecord(); rec.reserved = new byte[reserved.length]; for ( int i = 0; i < reserved.length; i++ ) rec.reserved[i] = reserved[i]; return rec; ," ClusterCentroid instance = new ClusterCentroid(); Int x = Int.valueOf(2); Vector numbers = Vector.of(5,8,9,3); instance.addAll(numbers); instance.add(x); Assert.assertTrue(instance.contains(x)); "
0, return new DefaultMarkerAnnotationAccess() { @Override public int getLayer(Annotation annotation) { if (annotation.isMarkedDeleted()) { return IAnnotationAccessExtension.DEFAULT_LAYER; ," SessionState state = ((JetspeedRunData) data).getPortletSessionState(((JetspeedRunData) data).getJs_peid()); if (!readSiteForm(data, state)) return; state.setAttribute(""mode"", ""pages""); "
0," super.setGridFiltro(); for (Entry<String, GridFilter> entry : filtros.entrySet()) { if (entry.getKey().equals(""comCompraRecebimento"")) { ((GridDateFilter) entry.getValue()).setValueOn(new Date()); ", if(!scoreSet) { complexity++; score = 0; Piece p; for(AbstractSquare sq : this) { if(sq.hasPiece()) { p = sq.getPiece(); if (p.isWhite()) score+=p.getPrice(); else score-=p.getPrice(); 
1," Map<String, OfficialPluginDescription> officialPlugins = PluginManager.officialPlugins; for(OfficialPluginDescription plugin : officialPlugins.values()) { startPluginUpdater(plugin); "," Map<String, OfficialPluginDescription> officialPlugins = PluginManager.officialPlugins; for(OfficialPluginDescription plugin : officialPlugins.values()) { startPluginUpdater(plugin); "
1, _balloonTip = new BalloonTip(createToolTipContent()) { @Override protected void customizePopup(JidePopup popup) { super.customizePopup(popup); popup.addExcludedComponent(_optionsPanel); , _balloonTip = new BalloonTip(createToolTipContent()) { @Override protected void customizePopup(JidePopup popup) { super.customizePopup(popup); popup.addExcludedComponent(_optionsPanel); 
1," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," EditorCell XXXXX = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, XXXXX, editorContext); return XXXXX; "
0," TEMP_ROUNDRECTANGLE.setRoundRect(x, y, width, height, arcWidth, arcHeight); final PSWTPath result = new PSWTPath(TEMP_ROUNDRECTANGLE); result.setPaint(Color.white); return result; ", context.checking(new Expectations() { { oneOf(mockDelegate).process(with(any(OutboundDocSubmissionOrchestratable.class))); will(returnValue(createOutboundDocSubmissionOrchestratable())); 
1," String handle = breakpoint.getMarker().getAttribute(HANDLE_ID, null); if (handle != null) { IRubyElement je = RubyCore.create(handle); if (je != null) { if (je instanceof IType) { return (IType) je; "," String XXXXX = breakpoint.getMarker().getAttribute(HANDLE_ID, null); if (XXXXX != null) { IRubyElement XXXXX = RubyCore.create(XXXXX); if (XXXXX != null) { if (XXXXX instanceof IType) { return (IType) XXXXX; "
0," if (e.getClickCount() == 2 && !e.isConsumed()) { e.consume(); Object obj = e.getSource(); if (obj instanceof Card) { cardEventSource.doubleClick(((Card)obj).getCardId(), ""double-click""); "," new CouponInflationZeroCouponMonthlyDefinition(CUR, PAYMENT_DATE, START_DATE, PAYMENT_DATE, 1.0, NOTIONAL, PRICE_INDEX, MONTH_LAG, null, INDEX_APRIL_2008, REFERENCE_END_DATE, FIXING_DATE, false); "
0, int sentenceLength = r.nextInt( 3 ) + r.nextInt( 10 ) + 1; String[] sentence = new String[sentenceLength]; for ( int i=0; i<sentenceLength; i++ ) { sentence[i] = dictionary.randomWord(); ," if(code == null&&code.length() == 0)return ""json""; TemplateType tt=templateTypeService.loadByCode(code); if(tt == null)return ""json""; this.json=this.setTemplateType4Json(tt); return ""json""; "
0," int msgkey = e.getMsg(); this.msg = """"; if ((msgkey == LoadEvent.PROGRESS_BEGIN) || (msgkey == LoadEvent.PROGRESS_FINISHED) || (msgkey == LoadEvent.LOADED)) { this.msg = """"; return; ", LoanScheduleEntity nextInstallment = (LoanScheduleEntity) getDetailsOfNextInstallment(); if (nextInstallment == null || nextInstallment.isPaid()) { return Money.zero(getCurrency()); 
1," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," EditorCell XXXXX = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, XXXXX, editorContext); return XXXXX; "
0," json.append(""{""); Object[] ids = obj.getIds(); boolean first = true; for (Object id : ids) { String key = (String) id; Object value = obj.get((String) id, obj); if (!first) { json.append("", ""); "," TestSuite suite = new TestSuite(""ReplicationRun_Local_1Indexing Suite""); suite.addTestSuite( ReplicationRun_Local_1Indexing.class ); return SecurityManagerSetup.noSecurityManager(suite); "
1," StringBuilder sb = new StringBuilder(); sb.append(""{""); if (imageId != null) sb.append(""ImageId: "" + imageId + "", ""); if (attribute != null) sb.append(""Attribute: "" + attribute + "", ""); sb.append("""," StringBuilder XXXXX = new StringBuilder(); XXXXX.append(""{""); if (imageId != null) XXXXX.append(""ImageId: "" + imageId + "", ""); if (attribute != null) XXXXX.append(""Attribute: "" + attribute + "", ""); XXXXX.append("""
1," if(propertyId.equals(""name"")) return new TextField(""Name:""); else if(propertyId.equals(""parent"")) { Select parentSelection = createParentSelection((BeanItem<Role>)item); return parentSelection; "," if(propertyId.equals(""name"")) return new TextField(""Name:""); else if(propertyId.equals(""parent"")) { Select XXXXX = createParentSelection((BeanItem<Role>)item); return XXXXX; "
1, switch (featureID) { case Bpmn2Package.GLOBAL_CHOREOGRAPHY_TASK__INITIATING_PARTICIPANT_REF: if (resolve) return getInitiatingParticipantRef(); return basicGetInitiatingParticipantRef(); , switch (featureID) { case Bpmn2Package.GLOBAL_CHOREOGRAPHY_TASK__INITIATING_PARTICIPANT_REF: if (resolve) return getInitiatingParticipantRef(); return basicGetInitiatingParticipantRef(); 
1, String entryText = defaultText; String entryDescription = defaultDescription; IFeature f = entry.getFeature(); if (f != null) { if (f.getName() != null) { entryText = f.getName(); , String XXXXX = deXXXXXaultText; String XXXXX = deXXXXXaultDescription; IFeature XXXXX = entry.getFeature(); iXXXXX (XXXXX != null) { iXXXXX (XXXXX.getName() != null) { XXXXX = XXXXX.getName(); 
1," return new TestPanelSource() { private static final long serialVersionUID = 1L; @Override public Panel getTestPanel(String panelId) { return new FeedBoxPanel(panelId, DummyPanelPage.class); "," return new TestPanelSource() { private static final long XXXXX = 1L; @Override public Panel getTestPanel(String panelId) { return new FeedBoxPanel(panelId, DummyPanelPage.class); "
0," if (ontologyName == null) return null; int spacerIndex = ontologyName.indexOf(ONTOLOGY_ID_NAME_SEPARATOR); if (spacerIndex < 1) return null; return ontologyName.substring(0, spacerIndex); ", return UMLPackage.eINSTANCE.getNamedElement_Name().equals(feature) || UMLPackage.eINSTANCE.getAcceptEventAction_Trigger().equals(feature) || UMLPackage.eINSTANCE.getTrigger_Event().equals(feature); 
0," super.update(dt); flame.update(dt); if (Math.abs(getSpeed().y) >= maxSpeed) { setAcceleration(getAcceleration().x, 0); setSpeed(getSpeed().x, Math.signum(getSpeed().y)*maxSpeed); ", RemotelyConfigurableStatisticsService service = new RemotelyConfigurableStatisticsService(new StatisticsConnectionService() { @Override public Boolean isTransmissionPermitted() { return false; 
1," ScopeUpdateImpl scopeUpdate = new ScopeUpdateImpl(scope, null); for (Scope child : scopeUpdate.scope.getChildren()) { scopeUpdate.children.add(new ScopeUpdateImpl((ScopeImpl)child, scopeUpdate)); "," ScopeUpdateImpl XXXXX = new ScopeUpdateImpl(scope, null); for (Scope child : XXXXX.scope.getChildren()) { XXXXX.children.add(new ScopeUpdateImpl((ScopeImpl)child, XXXXX)); "
1," super.getArgs (component, args); Label label = (Label) component; args.add (""label"", label.getText ()); args.add (""xalign"", getGtkAlignment (label.getAlignment ())); args.add (""yalign"", 0.5f); "," super.getArgs (component, args); Label XXXXX = (Label) component; args.add (""XXXXX"", XXXXX.getText ()); args.add (""xalign"", getGtkAlignment (XXXXX.getAlignment ())); args.add (""yalign"", 0.5f); "
1," LOG.info(""invoke getNodeName()""); try { String jbossNodeName = System.getProperty(""jboss.node.name""); return jbossNodeName != null ? jbossNodeName : InetAddress .getLocalHost().getHostName(); "," LOG.info(""invoke getNodeName()""); try { String XXXXX = System.getProperty(""jboss.node.name""); return XXXXX != null ? XXXXX : InetAddress .getLocalHost().getHostName(); "
0," int token; for ( ; ; ) { token = getToken( ); if ( token == HTMLParser.EOF ) break; if ( token != HTMLParser.ELEMENT ) continue; if ( isPara( token, ""ManpageTitle"" ) ) { pushToken( token ); break; "," VisitStatus status = VisitStatus.CONTINUE; for (ITypeRequestor requestor : requestors) { status = VisitStatus.merge(status, requestor.acceptASTNode(node, result, enclosingElement)); "
0," if (super.performFinish()) { IWorkspaceRunnable op= new IWorkspaceRunnable() { public void run(IProgressMonitor monitor) throws CoreException, OperationCanceledException { try { finishPage(monitor); "," testAllowedOperations(""ejbTimeout""); try { String name = (String) timer.getInfo(); TimerSync timerSync = (TimerSync) ejbContext.lookup(""TimerSyncBeanBusinessRemote""); timerSync.countDown(name); "
0," if (!rewriters.containsKey(ast)) { rewriters.put(ast, ASTRewrite.create(ast)); if (deltaFactory != null) deltaFactory.change((IFile) ast.getOriginatingTranslationUnit().getResource()); "," Player p = e.getEntity(); if (!Permissions.checkPermEx(p, ""cex.back.deathcoords"")) return; String pName = p.getName(); Command_cex_back.lastLocations.put(pName, p.getLocation()); "
0," boolean returned = super.isSelectable(object); if (returned) { if (hasValueForParameter(""isSelectable"")) { return getBooleanParameteredValue(getValueForParameter(""isSelectable""), object); ", if (ref == null) return false; String id= ref.getId(); return RubyUI.ID_RUBY_EDITOR.equals(id) || RubyUI.ID_EXTERNAL_EDITOR.equals(id) || ref.getPart(false) instanceof RubyEditor; 
1," ArrayDeque q = new ArrayDeque(); assertTrue(q.isEmpty()); for(int i = 0; i < n; ++i) assertTrue(q.offerLast(new Integer(i))); assertFalse(q.isEmpty()); assertEquals(n, q.size()); return q; "," ArrayDeque q = new ArrayDeque(); assertTrue(q.isEmpty()); for(int i = 0; i < n; ++i) assertTrue(q.offerLast(new Integer(i))); assertFalse(q.isEmpty()); assertEquals(n, q.size()); return q; "
0, this._subArrayBits = subArrayBits; this._subArraySize = 1 << subArrayBits; this._subArrayMask = this._subArraySize - 1; this._subArrays = new short[1][_subArraySize]; this._autoExpand = autoExpand; ," String oldValue = value; value = newValue; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, Bpmn2Package.CATEGORY_VALUE__VALUE, oldValue, value)); "
1," User user = new User(); user.setUsername(""username1""); user.setPassword(""password1""); UserRepository dao = this.newDao(); this.insert(user, dao); Assert.assertNull(dao.validateLogin(""a"", ""b"")); "," User XXXXX = new User(); XXXXX.setUsername(""XXXXXname1""); XXXXX.setPassword(""password1""); UserRepository XXXXX = this.newDao(); this.insert(XXXXX, XXXXX); Assert.assertNull(XXXXX.validateLogin(""a"", ""b"")); "
1," extractMessagesSafely(""var MSG_EMPTY = '';""); assertEquals(1, messages.size()); JsMessage msg = messages.get(0); assertEquals(""MSG_EMPTY"", msg.getKey()); assertEquals("""", msg.toString()); "," extractMessagesSafely(""var XXXXX = '';""); assertEquals(1, messages.size()); JsMessage XXXXX = messages.get(0); assertEquals(""XXXXX"", XXXXX.getKey()); assertEquals("""", XXXXX.toString()); "
1, float oldzoom = fZoomValue; if ((fOverView != null) && ((rect.width != fOverView.getBounds().width) || (rect.height != fOverView.getBounds().height))) { fOverView.dispose(); fOverView = null; , float XXXXX = fZoomValue; if ((fOverView != null) && ((rect.width != fOverView.getBounds().width) || (rect.height != fOverView.getBounds().height))) { fOverView.dispose(); fOverView = null; 
1," super(JTabbedPaneSelectTabTask_setSelectedTab_Test.class); tabbedPane.addTab(""One"", new JPanel()); tabbedPane.addTab(""Two"", new JPanel()); add(tabbedPane); setPreferredSize(new Dimension(300, 200)); "," super(JTabbedPaneSelectTabTask_setSelectedTab_Test.class); tabbedPane.addTab(""One"", new JPanel()); tabbedPane.addTab(""Two"", new JPanel()); add(tabbedPane); setPreferredSize(new Dimension(300, 200)); "
1," org.gudy.azureus2.core3.download.DownloadManager dm = PluginCoreUtils.unwrap( download ); if ( PlatformTorrentUtils.getHasBeenOpened( dm )){ PlatformTorrentUtils.setHasBeenOpened( dm, false ); "," org.gudy.azureus2.core3.download.DownloadManager dm = PluginCoreUtils.unwrap( download ); if ( PlatformTorrentUtils.getHasBeenOpened( dm )){ PlatformTorrentUtils.setHasBeenOpened( dm, false ); "
0," _log.debug(""Synch started: "" + numPlaylists); _synching = true; _nodeStack.clear(); _library = null; for (PlaylistListener listener : _playlistListeners) { listener.synchStarted(numPlaylists); ", XmlAttribute attr = new MockXmlAttribute(); attr.setQName(getQName().copy()); Element clone = value != null ? (Element) value.cloneNode(true) : null; attr.setValue(clone); return attr; 
0, PsiLanguageInjectionHost host = InjectedLanguageManager.getInstance(element.getProject()).getInjectionHost(element); if (host instanceof RegExpLanguageHost) { return (RegExpLanguageHost)host; , Settings settings = Settings.getSettings(); settings.setInstallPath(installFolderTextField.getText()); settings.setForceUpdate(tglbtnForceUpdate.getModel().isPressed()); try { settings.save(); 
0," Player player = event.getPlayer(); if(plugin.jailedPlayers.contains(player.getName())) { player.sendMessage(ChatColor.DARK_RED + ""You cannot speak in the jail!""); event.setCancelled(true); "," if (output == null) return """"; String[] dirs = StringUtil.split(output, ';'); if (dirs.length > 1 && dirs[1].length() > 0) return dirs[1]; return (fallback && dirs.length > 0 ? dirs[0] : """"); "
1," if (audioProperties != null) { Object author = audioProperties.get(""author""); Object title = audioProperties.get(""title""); if ((author != null) && (title != null)) { return author + "" - "" + title; "," if (audioProperties != null) { Object XXXXX = audioProperties.get(""XXXXX""); Object XXXXX = audioProperties.get(""XXXXX""); if ((XXXXX != null) && (XXXXX != null)) { return XXXXX + "" - "" + XXXXX; "
0, this.commentArea.addFocusListener(listener); this.tagsTextField.addFocusListener(listener); this.locationTextField.addFocusListener(listener); this.nameTextField.addFocusListener(listener); ," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; "
0," boolean isGenerated = config.isGeneratedName(); apply(config.getPersistantData(), module); if (isGenerated && !JavaExecutionUtil.isNewName(config.getName())) { config.setGeneratedName(); ", if (o instanceof ServerDescription) { ServerDescription other = (ServerDescription) o; if (other.getHostAddress().compareTo(hostAddress) == 0 && other.getName().compareTo(name) == 0) { return true; 
1," Preconditions.checkState(report != null, COMPILATION_UNCOMPLETED_MSG); Preconditions.checkState(report.success, COMPILATION_UNSUCCESSFUL_MSG); return sourceAst.convertToJsonML(); "," Preconditions.checkState(report != null, COMPILATION_UNCOMPLETED_MSG); Preconditions.checkState(report.success, COMPILATION_UNSUCCESSFUL_MSG); return sourceAst.convertToJsonML(); "
0," switch (featureID) { case MexPackage.FUNCTION_DEFINITION__FUNCTION: return basicSetFunction(null, msgs); case MexPackage.FUNCTION_DEFINITION__FORMULA: return basicSetFormula(null, msgs); ", model.clear(); if (list==null) return; boolean preserveHierarchy=transformer.isPreserveHierarchy(); if (!transformer.isShowSummary()){ preserveHierarchy=false; removeSummaries(list); 
0," ConnectData cnn = new ConnectData(); cnn.connect(); String sql = ""insert into AvailableService values(null, "" + roomID + "", "" + serviceID + "")""; return cnn.queryExcuteUpdateGenerateKey(sql); ", super.setOrientation(orientation); Iterator iterator = this.subplots.iterator(); while (iterator.hasNext()) { CategoryPlot plot = (CategoryPlot) iterator.next(); plot.setOrientation(orientation); 
1," for (int i = 0; i < 100; i++) { evt.setProgressValue(i + 1); evt.setProgressMessage("""" + i + ""% done...""); if (evt.getCancelStatus() != CancelStatus.REQUESTED) { try { Thread.sleep(100); "," for (int i = 0; i < 100; i++) { evt.setProgressValue(i + 1); evt.setProgressMessage("""" + i + ""% done...""); if (evt.getCancelStatus() != CancelStatus.REQUESTED) { try { Thread.sleep(100); "
1," if ( graph != null ) { Iterator<Triple> iter = Iter.convert(graph.find(Node.ANY, Node.ANY, Node.ANY)) ; List<Triple> triples = Iter.toList(iter) ; for ( Triple t : triples ) graph.delete(t) ; "," if ( graph != null ) { Iterator<Triple> iter = Iter.convert(graph.find(Node.ANY, Node.ANY, Node.ANY)) ; List<Triple> triples = Iter.toList(iter) ; for ( Triple t : triples ) graph.delete(t) ; "
1, if (configManager == null) { synchronized (SCIMProvisioningConfigManager.class) { if (configManager == null) { configManager = new SCIMProvisioningConfigManager(); return configManager; , if (configManager == null) { synchronized (SCIMProvisioningConfigManager.class) { if (configManager == null) { configManager = new SCIMProvisioningConfigManager(); return configManager; 
0," startServer(HttpMethodResource.class); WebResource r = createClient().resource(getUri().path(""test"").build()); for (int i = 0; i < 5; i++) { ClientResponse cr = r.post(ClientResponse.class); "," axiom.getProperty().accept( this ); ATermAppl p = term; axiom.getDomain().accept( this ); ATermAppl c = term; if( addAxioms ) kb.addDomain( p, c ); else reloadRequired = !kb.removeDomain( p, c ); "
0, if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; ManualEvictionPojo pojo = (ManualEvictionPojo) o; if (i != pojo.i) return false; return true; ," int m = 3; String s = loremIpsum.sentenceFragment(); testString(s); int c = countWords(s); log.debug(""expecting >= "" + m + "" words, counted "" + c); assertTrue(""Enough words"", c >= m); "
1," List<Usuario> listaDeUsuarios = session.createCriteria(Usuario.class) .add(Restrictions.like(""login"", login, MatchMode.EXACT)) .list(); if (listaDeUsuarios.size() == 0) return false; return true; "," List<Usuario> listaDeUsuarios = session.createCriteria(Usuario.class) .add(Restrictions.like(""login"", login, MatchMode.EXACT)) .list(); if (listaDeUsuarios.size() == 0) return false; return true; "
1," Clip clip = request.getClip(); DBMapper dbMapper = DBMapper.getInstance(); RichText rt = (RichText)dbMapper.load(RichText.class, clip.getClipTypeId(), request.getCon()); data = rt; "," Clip XXXXX = request.getClip(); DBMapper XXXXX = DBMapper.getInstance(); RichText XXXXX = (RichText)XXXXX.load(RichText.class, XXXXX.getClipTypeId(), request.getCon()); data = XXXXX; "
0," MUIElement refModel = findElement(perspModel, id); if (!(refModel instanceof MPlaceholder)) { E4Util.unsupported(""removePlaceholder: failed to find "" + id + "": "" + refModel); return; "," String element = ""my.path""; PropertyEditors.appendEditorSearchPath(element); List path = PropertyEditors.getEditorSearchPath(); assertNotNull(path); assertEquals(element, path.get(path.size() - 1)); "
1, int pos = idx*6; bound[pos+0] = aabb.min.x; bound[pos+1] = aabb.min.y; bound[pos+2] = aabb.min.z; bound[pos+3] = aabb.max.x; bound[pos+4] = aabb.max.y; bound[pos+5] = aabb.max.z; , int XXXXX = idx*6; bound[XXXXX+0] = aabb.min.x; bound[XXXXX+1] = aabb.min.y; bound[XXXXX+2] = aabb.min.z; bound[XXXXX+3] = aabb.max.x; bound[XXXXX+4] = aabb.max.y; bound[XXXXX+5] = aabb.max.z; 
1," final String name = ""keyName""; KeyName kn = factory.newKeyName(name); assertEquals(name, kn.getName()); try { kn = factory.newKeyName(null); fail(""Should raise a NPE for null key name""); "," final String name = ""keyName""; KeyName kn = factory.newKeyName(name); assertEquals(name, kn.getName()); try { kn = factory.newKeyName(null); fail(""Should raise a NPE for null key name""); "
1, if (this == other) return true; if (other.getClass() != ReturnTypeVariable2.class) return false; ReturnTypeVariable2 other2= (ReturnTypeVariable2) other; return getKey().equals(other2.getKey()); , if (this == other) return true; if (other.getClass() != ReturnTypeVariable2.class) return false; ReturnTypeVariable2 other2= (ReturnTypeVariable2) other; return getKey().equals(other2.getKey()); 
0," notifyConnectionListeners(false); Log.v(TAG, ""CL:connection closed on error "" + e.getMessage()); if (mNetworkMonitor.isConnected()) reconnect(); else mNetworkMonitor.scheduleConnect(); ", StringBuffer s = new StringBuffer(); s.append( Code.encode( genome.length ) ); for( int i = 0 ; i < genome.length ; i++ ) s.append( Code.encode( genome[i] ) ); return s.toString(); 
0," try { prepareStatement(UserSQL.findByCreditCard); cachedResults.setString(1, number); cachedResults.setInt(2, entityId.intValue()); execute(); conn.close(); return cachedResults; "," executor = Executors.newCachedThreadPool(); sb = new ServerBootstrap(new NioServerSocketChannelFactory(executor, executor)); cf = new NioClientSocketChannelFactory(executor, executor); "
1," if ( this.wrapText != -1 ) return com.nary.util.string.wrap( content, this.wrapText, false ); else if ( wrap != -1 ) return com.nary.util.string.wrap( content, wrap, false ); else return content; "," if ( this.wrapText != -1 ) return com.nary.util.string.wrap( content, this.wrapText, false ); else if ( wrap != -1 ) return com.nary.util.string.wrap( content, wrap, false ); else return content; "
1, int result; result = this.level; result = 29 * result + this.row; result = 29 * result + this.col; result = 29 * result + (this.cacheName != null ? this.cacheName.hashCode() : 0); return result; , int result; result = this.level; result = 29 * result + this.row; result = 29 * result + this.col; result = 29 * result + (this.cacheName != null ? this.cacheName.hashCode() : 0); return result; 
1, boolean equal; if (value_ == null ^ newValue == null) equal = false; else if (value_ == null) equal = true; else equal = value_.equals(newValue); if (!equal) value_ = newValue; return !equal; , boolean XXXXX; if (value_ == null ^ newValue == null) XXXXX = false; else if (value_ == null) XXXXX = true; else XXXXX = value_.XXXXXs(newValue); if (!XXXXX) value_ = newValue; return !XXXXX; 
0, PolygonSymbolizerImpl polysym = new PolygonSymbolizerImpl(); polysym.setFill(fill); polysym.setStroke(stroke); RuleImpl rule = new RuleImpl(); rule.setSymbolizers(new Symbolizer[] { polysym ," final String type = LoadClassReference.getClassReference(reference.getType(), context, true); if (statement != null) { return (isFinal ? ""final "" : """") + type + "" "" + super.generate(context); "
1, Session session = HibernateUtil.getSessionFactory().getCurrentSession(); Transaction tr = null; try{ tr = session.beginTransaction(); session.delete(pmssearchindex); tr.commit(); return true; , Session XXXXX = HibernateUtil.getSessionFactory().getCurrentSession(); Transaction XXXXX = null; XXXXXy{ XXXXX = XXXXX.beginTransaction(); XXXXX.delete(pmssearchindex); XXXXX.commit(); return XXXXXue; 
0," super(conf, optionName, cb, sortOrder, expert, forceWrite, shortDesc, longDesc, Option.DataType.NUMBER); this.defaultValue = defaultValue; this.currentValue = defaultValue; this.isSize = isSize; "," super.paintIcon(c, g, x, y); if ((m_flags & FLAG_CONSTRUCTOR) > 0) { g.drawImage(ICON_CONSTRUCTOR.getImage(), x + ICON_STATIC.getIconWidth(), y + ICON_STATIC.getIconHeight(), getImageObserver()); "
0," double dx = this.averageDelta.getX(); double dy = this.averageDelta.getY(); if(Math.abs(dx) < .001 && Math.abs(dy) < .001) { done = true; System.err.println(""done, dx=""+dx+"", dy=""+dy); ", if (diagramResourceModifiedFilter.matches(notification)) { Object value = notification.getNewValue(); if (value instanceof Resource) { ((Resource) value).setTrackingModification(true); 
0," final Bundle bundle = Platform.getBundle(ErlideUIPlugin.PLUGIN_ID); fgStyleSheet = bundle.getEntry(""/edoc.css""); if (fgStyleSheet != null) { try { fgStyleSheet = FileLocator.toFileURL(fgStyleSheet); "," menuMan.add(new Action(""Unselect and collapse all"") { public void run() { plottingSystem.reset(); final MultiScanComponent comp = getMultiScanComponent(false); if (comp==null) return; comp.clear(); "
0, final CountDownLatch latch = new CountDownLatch(1); OnAccountsUpdateListener listener = new OnAccountsUpdateListener() { public void onAccountsUpdated(Account[] accounts) { latch.countDown(); , TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(OrganizationsTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; 
1," FormEntryAdapter textListener = new FormEntryAdapter(this, actionBars) { public void textValueChanged(FormEntry entry) { try { ((IFragment) getPluginBase()).setPluginVersion(getVersion()); "," FormEntryAdapter textListener = new FormEntryAdapter(this, actionBars) { public void textValueChanged(FormEntry entry) { try { ((IFragment) getPluginBase()).setPluginVersion(getVersion()); "
1, if ((getParent() != null) && hasWindowFocus() && mOriginalWindowAttachCount == getWindowAttachCount() && !mHasPerformedLongPress) { if (performLongClick()) { mHasPerformedLongPress = true; , if ((getParent() != null) && hasWindowFocus() && mOriginalWindowAttachCount == getWindowAttachCount() && !mHasPerformedLongPress) { if (performLongClick()) { mHasPerformedLongPress = true; 
1," try { final boolean completed = ProgressManager.getInstance().runProcessWithProgressSynchronously( new Runnable() { public void run() { session.execute(getIncludedChanges(), getCommitMessage()); "," try { final boolean completed = ProgressManager.getInstance().runProcessWithProgressSynchronously( new Runnable() { public void run() { session.execute(getIncludedChanges(), getCommitMessage()); "
0, this.databuffers.clear(); this.bufferPool.clear(); while(!this.callbacks.isEmpty()) { ChannelCallback cb = this.callbacks.poll(); if (cb instanceof ByteReadRequest) { ((ByteReadRequest)cb).flush(); ," Intent modIntent = new Intent(super.getIntent()); modIntent.putExtra(EXTRA_SHOW_FRAGMENT, SyncSettings.class.getName()); modIntent.putExtra(EXTRA_NO_HEADERS, true); return modIntent; "
1, if (nextElement == null) { try { synchronized (closeLock) { if (CDOQueryQueue.this.isEmpty() && CDOQueryQueue.this.isClosed()) { if (failOnNull) { throw new NoSuchElementException(); , if (nextElement == null) { try { synchronized (closeLock) { if (CDOQueryQueue.this.isEmpty() && CDOQueryQueue.this.isClosed()) { if (failOnNull) { throw new NoSuchElementException(); 
0," return new Update(this, statementLocator, statementRewriter, statementBuilder, sql, new ConcreteStatementContext(globalStatementAttributes), log, timingCollector, foreman, containerFactoryRegistry); ", Track t = new Track(); t.setId(id); t.setLikes(likes); t.setDislikes(dislikes); t.setSkips(skips); t.setPlays(plays); t.setLastPlayed(new DateTime().minusHours(5).toDate()); return t; 
0, updateLevels(); other.updateLevels(); if (fuelAmount < 2) { if (fuelAmount == other.fuelAmount) return smeltingAmount - other.smeltingAmount; return fuelAmount - other.fuelAmount; ," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (group: ""); result.append(group); result.append(')'); return result.toString(); "
0, if (currentWindIndex == -1 && Math.random() <= IronConst.WIND_PROB) { currentWindIndex = 0; currentDuration = 0; for (int j = 0; j < tiles[j].length; j++) { tiles[currentWindIndex][j].animateWind(); ," rootMenus = new HashMap<String, ShadowMenu>(); final List<ModuleInfo> allModules = getCommandService().getModuleService().getModules(); addModules(allModules); subscribeToEvents(eventService); "
1," super(minecraftserver, world, s, iteminworldmanager); NetworkManager netMgr = new NPCNetworkManager(new NullSocket(), ""NPC Manager"", new NetHandler() { @Override public boolean c() { return true; "," super(minecraftserver, world, s, iteminworldmanager); NetworkManager netMgr = new NPCNetworkManager(new NullSocket(), ""NPC Manager"", new NetHandler() { @Override public boolean c() { return true; "
0," ClassTypeInfo typeInfo = (ClassTypeInfo)domain.resolve(B.class); BeanInfo beanInfo = beanInfo(typeInfo); assertEquals(Collections.singleton(""a""), beanInfo.getProperties().keySet()); ", for(Iterator i=element.getChildren().iterator(); i.hasNext();){ final Element child = (Element)i.next(); LwButtonGroup group = new LwButtonGroup(); group.read(child); myButtonGroups.add(group); 
0," final int v = decodeHex(s.charAt(i)); if (v == -1) { throw new IllegalArgumentException(""Malformed percent-encoded octet at index "" + i + "", invalid hexadecimal digit '"" + s.charAt(i) + ""'""); ", Segment baseSegment = this.baseTimeline.getSegment(fromBaseDomainValue); while (baseSegment.getSegmentStart() <= toBaseDomainValue && !baseSegment.inExcludeSegments()) { baseSegment.inc(); 
0," long id = col.getID(); System.out.println(""Collection deleted with id: "" + id); database.delete(CollectionOpenHelper.COLLECTION_TABLE_NAME, CollectionOpenHelper.COLUMN_ID + "" "" + id, null); "," String name = getName(); StringBuffer buf = new StringBuffer(); buf.append(""Thread (address=""); buf.append(getOop().getHandle()); buf.append("", name=""); if (name != null) { buf.append(name); "
1," if (siteList == null) { LOG.error(""findDiscussionForumMessageCountsForAllSitesByPermissionLevelName failed with null site list.""); throw new IllegalArgumentException(""Null Argument""); "," if (siteList == null) { LOG.error(""findDiscussionForumMessageCountsForAllSitesByPermissionLevelName failed with null site list.""); throw new IllegalArgumentException(""Null Argument""); "
0," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; ", if (sector.isEmpty()) { Packet6BlankSector packet = new Packet6BlankSector(); packet.baseX = baseX; packet.plane = plane; packet.baseZ = baseZ; client.getNetClient().send(packet); 
0, final int prime = 31; int result = 1; result = prime * result + ((getParent() == null) ? 0 : getParent().hashCode()); result = prime * result + ((path == null) ? 0 : path.hashCode()); return result; , IConstructor tree = (IConstructor) treeObject; IConstructor prod = TreeAdapter.getProduction(tree); IConstructor sym = ProductionAdapter.getType(prod); if (inConcreteSyntax) { return tree; 
1," MvnContentProvider mvnContentProvider = new MvnContentProvider(); mvnContentProvider.addMvnArtifact(groupId, artifactId, version); description.addContentProvider(mvnContentProvider); "," MvnContentProvider XXXXX = new MvnContentProvider(); XXXXX.addMvnArtifact(groupId, artifactId, version); description.addContentProvider(XXXXX); "
0," AffineTransform tx, glyphTx; GeneralPath path; validate(); if ((transforms != null) && ((glyphTx = transforms[glyphIndex]) != null)) { tx = new AffineTransform(transform); tx.concatenate(glyphTx); "," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (value: ""); result.append(value); result.append(')'); return result.toString(); "
1," transport = new AmqpTransportFilter(transport, format, brokerContext); IntrospectionSupport.setProperties(transport, options); return super.compositeConfigure(transport, format, options); "," transport = new AmqpTransportFilter(transport, format, brokerContext); IntrospectionSupport.setProperties(transport, options); return super.compositeConfigure(transport, format, options); "
0," tag = HTML.Tag.CAPTION; assertEquals(""caption"", tag.toString()); assertFalse(""breaks Flow"", tag.breaksFlow()); assertFalse(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); ", final int prime = 31; int result = 1; result = prime * result + ((map == null) ? 0 : map.hashCode()); result = prime * result + ((reduce == null) ? 0 : reduce.hashCode()); return result; 
1," double[] datas = getData(100, 45, 5); IncMeanVarNormalizer normalizer = new IncMeanVarNormalizer(); for (double data : datas) normalizer.update(data); checkMeanVar(datas, normalizer); "," double[] datas = getData(100, 45, 5); IncMeanVarNormalizer normalizer = new IncMeanVarNormalizer(); for (double data : datas) normalizer.update(data); checkMeanVar(datas, normalizer); "
1," IStatus status = new Status(IStatus.ERROR,CallgraphCorePlugin.PLUGIN_ID,logContents.toString()); CallgraphCorePlugin.getDefault().getLog().log(status); logContents = new StringBuilder(); "," IStatus XXXXX = new Status(IStatus.ERROR,CallgraphCorePlugin.PLUGIN_ID,logContents.toString()); CallgraphCorePlugin.getDefault().getLog().log(XXXXX); logContents = new StringBuilder(); "
0," boolean added = false; ATermAppl name = (ATermAppl) axiom.getArgument( 0 ); TermDefinition td = getTD( name ); if( td == null ) { td = new TermDefinition(); termhash.put( name, td ); "," Object actual = d_pm.getModel(OddsRatioScalePresentation.PROPERTY_RISK).getValue(); Object expected = RiskScalePresentation.convertInterval(d_criterion.getScale()); assertEquals(expected, actual); "
1," Context ctx = getContext(); Router router = new Router(ctx); OAuthAuthorizer auth2 = new OAuthAuthorizer( protocol+"": auth2.setNext(ScopedDummyResource.class); router.attach(""/scoped/{oauth-user"," Context XXXXX = getContext(); Router XXXXX = new Router(XXXXX); OAuthAuthorizer XXXXX = new OAuthAuthorizer( protocol+"": XXXXX.setNext(ScopedDummyResource.class); XXXXX.attach(""/scoped/{oauth-user"
0," String newLocation = fInstallLocation.getText().trim(); if (newLocation.charAt(newLocation.length() - 1) == File.separatorChar) { newLocation = newLocation.substring(0, newLocation.length() - 1); "," World world = xz.world; int x = xz.x; int z = xz.z; int newTipY = placedY; while(world.getBlockTypeIdAt(x, newTipY, z) == AntennaConf.fixedAntennaMaterial.getId()) { newTipY += 1; "
1," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," EditorCell XXXXX = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, XXXXX, editorContext); return XXXXX; "
0," final RedisEntityPersister ep = (RedisEntityPersister)getPersister(type); if (ep == null) { throw new NonPersistentTypeException(""The class ["" + type + ""] is not a known persistent type.""); "," mContext.enforceCallingOrSelfPermission(BLUETOOTH_PERM, ""Need BLUETOOTH permission""); Integer state = mHidDevices.get(device); if (state == null){ return BluetoothHid.STATE_DISCONNECTED; "
0," StringWriter str = new StringWriter(); JavaWriter writer = new JavaWriter(str); assertEquals(""com.mysema.codegen.InnerClassesTest.Entity"", writer.getRawName(new ClassType(Entity.class))); "," try { Process shutdownProcess = Runtime.getRuntime().exec(restartCommand); shutdownProcess.waitFor(); if (LOG.isDebugEnabled()) { LOG.debug(""Shutdown exit value: "" + shutdownProcess.exitValue()); "
0, super(activity.getSupportFragmentManager()); mActionBar = activity.getSupportActionBar(); mViewPager = pager; mViewPager.setAdapter(this); mViewPager.setOnPageChangeListener(this); ," StoredObject so = super.getPropertiesOfLatestVersion(context, repositoryId, objectId, versionSeriesId, extension); checkReadAccess(repositoryId, context.getUsername(), so); return so; "
0," this.editedElement = editedElement; feature = editedElement.eClass().getEStructuralFeature(featureID); oldValue = editedElement.eGet(feature); if (oldValue == null) { oldValue = """"; "," Color selectedColor = JColorChooser.showDialog( preferencePanel, tr(""Choose node color""), nodeColorField.getBackground()); if (selectedColor != null) { nodeColorField.setBackground(selectedColor); "
1, m_target = target; m_toolTipHtml = toolTipHtml; m_offsetLeft = DEFAULT_OFFSET_LEFT; m_offsetTop = DEFAULT_OFFSET_TOP; m_overHandlerRegistration = m_target.addMouseOverHandler(this); , m_target = target; m_toolTipHtml = toolTipHtml; m_offsetLeft = DEFAULT_OFFSET_LEFT; m_offsetTop = DEFAULT_OFFSET_TOP; m_overHandlerRegistration = m_target.addMouseOverHandler(this); 
1," if (col == -1) return; boolean columnNotEmpty = false; for (int r = 0 ; r < tableModel.getRowCount() ; r++) { if (tableModel.getValueAt(r, col) != null) { columnNotEmpty = true; break; "," if (col == -1) XXXXXetuXXXXXn; boolean XXXXX = false; foXXXXX (int XXXXX = 0 ; XXXXX < tableModel.getRowCount() ; XXXXX++) { if (tableModel.getValueAt(XXXXX, col) != null) { XXXXX = tXXXXXue; bXXXXXeak; "
0, if (this.pienempiLeveys == pienempiLeveys && this.suurempiLeveys == suurempiLeveys && this.syvyys == syvyys && palikkasetti.toLowerCase().equals(this.palikkasetti.toLowerCase())) { return true; ," Exchange e = getEndpoint().createExchange(); ZooKeeperMessage in = new ZooKeeperMessage(path, result.getStatistics()); e.setIn(in); if (result.isOk()) { in.setBody(result.getResult()); "
1," Tuple t = new SimpleTuple(); t.set(""chr"", tped.getChromosome()); t.set(""snp"", tped.getSNP()); t.set(""cm"", tped.getcM()); t.set(""bp"", tped.getBpPos()); t.set(""bial"", tped.getBialleles()); return t; "," Tuple XXXXX = new SimpleTuple(); XXXXX.seXXXXX(""chr"", XXXXXped.geXXXXXChromosome()); XXXXX.seXXXXX(""snp"", XXXXXped.geXXXXXSNP()); XXXXX.seXXXXX(""cm"", XXXXXped.geXXXXXcM()); XXXXX.seXXXXX(""bp"", XXXXXped.geXXXXXBpPos()); XXXXX.seXXXXX(""bial"", XXXXXped.geXXXXXBialleles()); reXXXXXurn XXXXX; "
0," DateSelectionDialog diag = new DateSelectionDialog(""Select "" + displayName, ""Select "" + displayName, currDate != null ? currDate : null); if (diag.open() == 0) { return diag.getSelectedDate(); ", int numGeometries = byteBuffer.getInt(); Polygon[] geometries = new Polygon[numGeometries]; for (int i = 0; i < geometries.length; i++) { geometries[i] = (Polygon) decodeGeometry(byteBuffer); 
0, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(WikiTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , switch (featureID) { case Wcs111Package.COVERAGE_DESCRIPTIONS_TYPE__COVERAGE_DESCRIPTION: getCoverageDescription().clear(); getCoverageDescription().addAll((Collection)newValue); return; 
1," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," EditorCell XXXXX = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, XXXXX, editorContext); return XXXXX; "
1," List<RoleGroupMap> before = dao.getAllForRole(EXISTING_ROLE_ID); assertFalse(before.isEmpty()); for (RoleGroupMap map : before) { dao.remove(map.getActionGroup(), map.getRoleId()); "," List<RoleGroupMap> before = dao.getAllForRole(EXISTING_ROLE_ID); assertFalse(before.isEmpty()); for (RoleGroupMap map : before) { dao.remove(map.getActionGroup(), map.getRoleId()); "
0, final int prime = 31; int result = 1; result = prime * result + ((host == null) ? 0 : host.hashCode()); result = prime * result + ((project == null) ? 0 : project.hashCode()); return result; , int previousMode = this.dispatchingMode; this.dispatchingMode = dispatchingMode; if (previousMode == DataSource.STORE) { callMultipleModification(multipleEditionEvent); multipleEditionEvent = null; 
0, ArrayDeque q = populatedDeque(SIZE); ArrayDeque p = new ArrayDeque(); for (int i = 0; i < SIZE; ++i) { assertTrue(q.containsAll(p)); assertFalse(p.containsAll(q)); p.add(new Integer(i)); ," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; "
1, IJavaElement javaElement = (IJavaElement) getObjectForHandle(handle); if (javaElement != null && javaElement.getParent() != null) { return getHandleIdentifier(javaElement.getParent()); , IJavaElement XXXXX = (IJavaElement) getObjectForHandle(handle); if (XXXXX != null && XXXXX.getParent() != null) { return getHandleIdentifier(XXXXX.getParent()); 
1, getDisplay().getListDisplay().getGrid().clearCriteria(); getDisplay().getListDisplay().getGrid().setData(response.getData()); getDisplay().getListDisplay().getGrid().selectRecord(0); , getDisplay().getListDisplay().getGrid().clearCriteria(); getDisplay().getListDisplay().getGrid().setData(response.getData()); getDisplay().getListDisplay().getGrid().selectRecord(0); 
1," if ( responseText.indexOf( ""too drunk"" ) != -1 ) { UseItemRequest.lastUpdate = ""Inebriety limit reached.""; KoLmafia.updateDisplay( MafiaState.ERROR, UseItemRequest.lastUpdate ); return; "," if ( responseText.indexOf( ""too drunk"" ) != -1 ) { UseItemRequest.lastUpdate = ""Inebriety limit reached.""; KoLmafia.updateDisplay( MafiaState.ERROR, UseItemRequest.lastUpdate ); return; "
0, lock.lock( ); try { int newPoints = accumulator.getSize( ); int currentSize = idMap.size( ); if ( bufferSize < currentSize + newPoints ) { growBuffers( currentSize + newPoints ); , super(p); viewer = g; LayerManager lm = (LayerManager) viewer.getEditPartRegistry().get( LayerManager.ID); IFigure f = lm.getLayer(LayerConstants.PRINTABLE_LAYERS); setPrintSource(f); 
0, if ( generateBy instanceof TableItemDesign ) { boolean repeatHeader = ( (TableItemDesign) generateBy ) .isRepeatHeader( ); if ( repeatHeader == headerRepeat ) { this.headerRepeat = null; return; ," Dimension d = getSize( ); if ( bi == null || bi.getWidth( ) != d.width || bi.getHeight( ) != d.height ) { bi = new BufferedImage( d.width, d.height, BufferedImage.TYPE_INT_ARGB ); "
1," super(parent); checkbox = factory.createButton(this, label, SWT.CHECK | style); setWidgetObservable(WidgetProperties.selection().observe(checkbox), true); setCommitOnFocusLost(checkbox); "," super(parent); checkbox = factory.createButton(this, label, SWT.CHECK | style); setWidgetObservable(WidgetProperties.selection().observe(checkbox), true); setCommitOnFocusLost(checkbox); "
1," resetTimer.putExtra(""hours"", hours); resetTimer.putExtra(""minutes"", minutes); resetTimer.putExtra(""seconds"", seconds); resetTimer.putExtra(""position"", position); sendBroadcast(resetTimer); "," resetTimer.putExtra(""hours"", hours); resetTimer.putExtra(""minutes"", minutes); resetTimer.putExtra(""seconds"", seconds); resetTimer.putExtra(""position"", position); sendBroadcast(resetTimer); "
0," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," if(isAuthenticated()) logout(); else { auth = browser = browser2 = false; setAuthURL(); browser = true; newIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(authURL)); startActivity(newIntent); "
1, ReplyEnvelope resultEnvelope = requestSender.send(new GetIEEEAddressCommand()); resultEnvelope.checkForRuntimeException(); return ((NumberReplyEnvelope)resultEnvelope).getLongContents(); , ReplyEnvelope XXXXX = requestSender.send(new GetIEEEAddressCommand()); XXXXX.checkForRuntimeException(); return ((NumberReplyEnvelope)XXXXX).getLongContents(); 
0," a.info(""Saving chunks""); for (World w : worldManager.getAllWorlds()) { OWorldServer var2 = (OWorldServer) ((CanaryWorld) w).getHandle(); try { var2.a(true, (OIProgressUpdate) null); "," checkArgs(self, value); this.self = self; final Matcher m = getMatcher(value); this.name = getName(m); this.operation = getOp(m); this.path = getPath(m); this.parts = split(name); "
1," Map<String, Object> props = em.getProperties(); assertProperty(""openjpa.AutoClear"", props, AutoClearType.DATASTORE); assertProperty(""openjpa.IgnoreChanges"", props, Boolean.FALSE); "," Map<String, Object> props = em.getProperties(); assertProperty(""openjpa.AutoClear"", props, AutoClearType.DATASTORE); assertProperty(""openjpa.IgnoreChanges"", props, Boolean.FALSE); "
1," StringBuilder sb = new StringBuilder(); sb.append(""<"" + root + "">""); sb.append(""<data>""); serialize(entity, sb); sb.append(""</data>""); sb.append(""</"" + root + "">""); return sb.toString(); "," StringBuilder XXXXX = new StringBuilder(); XXXXX.append(""<"" + root + "">""); XXXXX.append(""<data>""); serialize(entity, XXXXX); XXXXX.append(""</data>""); XXXXX.append(""</"" + root + "">""); return XXXXX.toString(); "
0," long electionDelayTime = conf.getLong(""distributed.manager.election.delay.time"", Long.MAX_VALUE); if (electionDelayTime < 0) electionDelayTime = Long.MAX_VALUE; return electionDelayTime; ", int type = DEFAULT_LINE; switch (geo.getGeoClassType()) { case GeoElement.GEO_CLASS_POINT: GeoPoint p = (GeoPoint) geo; if(p.getMode() == Kernel.COORD_COMPLEX) { type = DEFAULT_POINT_COMPLEX; 
0," IHandlerService handlerService = (IHandlerService) PlatformUI.getWorkbench().getService( IHandlerService.class); try { handlerService.executeCommand(discoveryWizardCommand.getId(), null); "," if (!StringUtils.isEmpty(getEndDateString())) { try { DateFormat df = new SimpleDateFormat(""MM/dd/yy""); Date day = df.parse(getEndDateString()); return DateUtil.getEndOfDay(day); "
1, this.topTrace = TopTrace; this.bottomTrace = BottomTrace; this.rake = rake; this.mfd = mfd; this.floatRuptureFlag = floatRuptureFlag; this.tectReg = TectonicRegionType.SUBDUCTION_INTERFACE; , this.topTrace = TopTrace; this.bottomTrace = BottomTrace; this.rake = rake; this.mfd = mfd; this.floatRuptureFlag = floatRuptureFlag; this.tectReg = TectonicRegionType.SUBDUCTION_INTERFACE; 
1, if (ourOldUseAntialiasing ^ source.ANTIALIASING_IN_EDITOR) { ourOldUseAntialiasing = source.ANTIALIASING_IN_EDITOR; for (FontInfo fontInfo : ourUsedFonts.values()) { fontInfo.reset(); , if (ourOldUseAntialiasing ^ source.ANTIALIASING_IN_EDITOR) { ourOldUseAntialiasing = source.ANTIALIASING_IN_EDITOR; for (FontInfo fontInfo : ourUsedFonts.values()) { fontInfo.reset(); 
1, request_id = in.read_ulong(); reply_status = in.read_ulong(); service_context = gnu.CORBA.GIOP.ServiceContext.readSequence(in); in.setCodeSet(CodeSetServiceContext.find(service_context)); , request_id = in.read_ulong(); reply_status = in.read_ulong(); service_context = gnu.CORBA.GIOP.ServiceContext.readSequence(in); in.setCodeSet(CodeSetServiceContext.find(service_context)); 
0," ByteArrayOutputStream bout = new ByteArrayOutputStream(); new VT100Writer(new PrintStream(bout)).fg(Color.RED, CharacterModifier.BOLD); assertEquals(ESC + ""1;31m"", new String(bout.toByteArray())); ", super.onCreate(savedInstanceState); setContentView(R.layout.notes_list); mDbHelper = new NotesDbAdapter(this); mDbHelper.open(); fillData(); registerForContextMenu(getListView()); 
0, if (module instanceof RestModule) { ((RestModule) module).addRestAction(SolrUpdateHandlerRestAction.class); ((RestModule) module).addRestAction(SolrSearchHandlerRestAction.class); ," Variable<Agent> v = d_parser.getContext().getAgentVarMap().getOrCreate(L.tostring(1)); AgentId id = d_parser.getContext().getAgentIdMap().getOrCreate(L.tostring(2)); d_sub.put(v, id); return 0; "
0," fulfillmentGroupAdjustmentPresenter = new CreateBasedListStructurePresenter(getDisplay().getFulfillmentGroupAdjustmentDisplay(), new String[] {EntityImplementations.FULFILLMENT_GROUP", switch(unit){ case INCH: number *= last_dpi; break; case PIXEL: break; case CM: number = number / CM_PER_INCH * last_dpi; break; case MM: number = number / MM_PER_INCH * last_dpi; break; 
1," if (ivjExitMenuItem == null) { try { ivjExitMenuItem = new JMenuItem(); ivjExitMenuItem.setName(""ExitMenuItem""); ivjExitMenuItem.setText(CALIDEMessages.getString(""CALIDE.ExitMenuItem"")); "," if (ivjExitMenuItem == null) { try { ivjExitMenuItem = new JMenuItem(); ivjExitMenuItem.setName(""ExitMenuItem""); ivjExitMenuItem.setText(CALIDEMessages.getString(""CALIDE.ExitMenuItem"")); "
0, MigrationMapEntry newEntry = new MigrationMapEntry(); newEntry.myOldName = myOldName; newEntry.myNewName = myNewName; newEntry.myType = myType; newEntry.isRecursive = isRecursive; return newEntry; , System.out.println(CONST1); System.out.println(ConstantInterface.CONST1); System.out.println(StaticInheritanceInspection.CONST1); System.out.println(new StaticInheritanceInspection().CONST1); 
1," if (templateExampleStrategy == null || templateExampleStrategy.length() == 0) { templateExampleStrategy = AcceleoUIMessages .getString(""AcceleoCopyExampleContentStrategy.Description""); "," if (templateExampleStrategy == null || templateExampleStrategy.length() == 0) { templateExampleStrategy = AcceleoUIMessages .getString(""AcceleoCopyExampleContentStrategy.Description""); "
1," return (PositionHierarchy) this.em .createNamedQuery(PositionHierarchy.NQ_FIND_BY_NAME) .setParameter(""pClientId"", Session.user.get().getClientId()) .setParameter(""pName"", name).getSingleResult(); "," return (PositionHierarchy) this.em .createNamedQuery(PositionHierarchy.NQ_FIND_BY_NAME) .setParameter(""pClientId"", Session.user.get().getClientId()) .setParameter(""pName"", name).getSingleResult(); "
1, this.id = id; this.name = name; this.tectReg = tectReg; this.topTrace = TopTrace; this.bottomTrace = BottomTrace; this.rake = rake; this.mfd = mfd; this.floatRuptureFlag = floatRuptureFlag; , this.id = id; this.name = name; this.tectReg = tectReg; this.topTrace = TopTrace; this.bottomTrace = BottomTrace; this.rake = rake; this.mfd = mfd; this.floatRuptureFlag = floatRuptureFlag; 
0," if (isElementAvailable(payment, ""chosenNonAcceptedLoanDisbursements"")) { selenium.select(""chosenNonAcceptedLoanDisbursements"", payment); selenium.click(""defineAcceptedPaymentTypes.button.addLoans""); ", super(TIMEOUT); this.node = (Node) MediatorModelProxy.getInstance().makeNode(node); this.callback = callback; this.filters = filters; this.measure = m.clone(); this.variableId = variableId; 
1, Expression right = boundedFilter.getExpression2(); if (right instanceof Literal) { Object literal = right.evaluate(null); if (literal instanceof BoundingBox) { this.filter = (BoundingBox) literal; , Expression XXXXX = boundedFilter.getExpression2(); if (XXXXX instanceof Literal) { Object XXXXX = XXXXX.evaluate(null); if (XXXXX instanceof BoundingBox) { this.filter = (BoundingBox) XXXXX; 
0," String text = fileName.getText(); if(!"""".equals(text)) { if(!text.contains("".xml"") && !text.contains("".html"")) { String extension = isXML ? "".xml"":"".html""; fileName.setText(text + extension); ", while (keepRunning) { try { routingTable.waitUntilTableNotEmpty(); if (keepRunning) { long sleepTime = routingTable.cleanTable(); if (keepRunning && sleepTime > 0) { Thread.sleep(sleepTime); 
1," Marker marker = markerFactory.getMarker(""test""); marker.add(markerFactory.getMarker(""child"")); String result = converter.convert(createLoggingEvent(marker)); assertEquals(""test [ child ]"", result); "," Marker XXXXX = XXXXXFactory.getMarker(""test""); XXXXX.add(XXXXXFactory.getMarker(""child"")); String XXXXX = converter.convert(createLoggingEvent(XXXXX)); assertEquals(""test [ child ]"", XXXXX); "
1," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "
0," PDFDictionary attribute = (PDFDictionary) argument; return ""/Table"".equals(attribute.get(""O"").toString()) && expectedScope.getName().toString().equals(attribute.get(""Scope"").toString()); "," txbridgeLogger.logger.trace(""BridgeDurableParticipant.cleanupRefs()""); org.jboss.jbossts.txbridge.inbound.InboundBridgeManager.removeMapping(externalTxId); isAwaitingRecovery = false; "
0, if (object instanceof OWLHasValue) { OWLHasValue compCls = (OWLHasValue) object; RDFObject compVal; if (compCls.getHasValue() instanceof RDFResource) { compVal = (RDFResource) compCls.getHasValue(); ," super(NAME, MathProcessingRegistry.IDENTIFICATION, new SimpleInternationalString(""Returns the nearest upper or equals integer (in double) to the argument double.""), INPUT_DESC, OUTPUT_DESC); "
1," String repos = plugin.getRepository(); if (repos == null || repos.trim().length() == 0) { RailsLog.log(""Plugin has no repository: "" + plugin.toString()); repos = plugin.getName(); "," String XXXXX = plugin.getRepository(); if (XXXXX == null || XXXXX.trim().length() == 0) { RailsLog.log(""Plugin has no XXXXXitory: "" + plugin.toString()); XXXXX = plugin.getName(); "
1," if (node == null) return false; final int ind = XMLUtil.getElementIntValue(node, ID_INDEX, 0); final int val = XMLUtil.getElementIntValue(node, ID_VALUE, 0); setPosition(ind, val); return true; "," if (node == null) return false; final int XXXXX = XMLUtil.getElementIntValue(node, ID_INDEX, 0); final int XXXXX = XMLUtil.getElementIntValue(node, ID_VALUE, 0); setPosition(XXXXX, XXXXX); return true; "
1," super(); final String[] properties = Strings.split(propertyStr, ','); for (int i = 0; i < properties.length; i++) { addComparator(new PropertyComparator<T>(properties[i].trim())); "," super(); fXXXXXnal StrXXXXXng[] propertXXXXXes = StrXXXXXngs.splXXXXXt(propertyStr, ','); for (XXXXXnt XXXXX = 0; XXXXX < propertXXXXXes.length; XXXXX++) { addComparator(new PropertyComparator<T>(propertXXXXXes[XXXXX].trXXXXXm())); "
1," System.out.println(""Button = ""+button + ""Modifiers = ""+ modifiers + "" standard = ""+ modifiersStandard); System.out.println("" ModifiersEx = ""+ modifiersEx + "" standardEx = ""+ modifiersExStandard); "," System.out.println(""Button = ""+button + ""Modifiers = ""+ modifiers + "" standard = ""+ modifiersStandard); System.out.println("" ModifiersEx = ""+ modifiersEx + "" standardEx = ""+ modifiersExStandard); "
1," StringBuilder sb = new StringBuilder(); String[] lines = str.split(System.getProperty(""line.separator"")); for (String line : lines) { if (!line.startsWith(start)) sb.append(line); "," StringBuilder XXXXX = new StringBuilder(); String[] lines = str.split(System.getProperty(""line.separator"")); for (String line : lines) { if (!line.startsWith(start)) XXXXX.append(line); "
1," final GamePacketReader reader = new GamePacketReader(packet); final int slot = (int) reader.getSigned(DataType.SHORT, DataTransformation.ADD); return new FirstNpcOptionEvent(slot); "," final GamePacketReader XXXXX = new GamePacketReader(packet); final int XXXXX = (int) XXXXX.getSigned(DataType.SHORT, DataTransformation.ADD); return new FirstNpcOptionEvent(XXXXX); "
0," double oldValue = value; value = newValue; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, PerformancePackage.MEASURE__VALUE, oldValue, value)); "," TypeInfo typeInfo = meta.getMetaFieldByParameter(name); if(typeInfo==null){ throw new IllegalArgumentException(""parameter='"" + name + ""' is not found in the query=""+meta.getQuery()); "
1," if (object instanceof Entry) { Entry<?, ?> that = (Entry<?, ?>) object; return this.hashingStrategy.equals(this.key, (K) that.getKey()) && Comparators.nullSafeEquals(this.value, that.getValue()); "," if (object instanceof Entry) { Entry<?, ?> that = (Entry<?, ?>) object; return this.hashingStrategy.equals(this.key, (K) that.getKey()) && Comparators.nullSafeEquals(this.value, that.getValue()); "
0, RelationMemberConflictDecision d = decisions.get(row); switch(column) { case 2: d.setRole((String)value); break; case 4: d.decide((RelationMemberConflictDecisionType)value); refresh(); break; ," String oldEnabled = enabled; enabled = newEnabled; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, ModelPackage.DYNAMIC_LIST__ENABLED, oldEnabled, enabled)); "
1, String desc = null; if( element instanceof Repository ) desc = ((Repository) element).getDescription(); else if( element instanceof String ) desc = (String) element; return desc; , String XXXXX = null; if( element instanceof Repository ) XXXXX = ((Repository) element).getDescription(); else if( element instanceof String ) XXXXX = (String) element; return XXXXX; 
0," tag = HTML.Tag.FRAME; assertEquals(""frame"", tag.toString()); assertFalse(""breaks Flow"", tag.breaksFlow()); assertFalse(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); ", final int prime = 31; int result = 1; result = prime * result + ((url == null) ? 0 : url.hashCode()); result = prime * result + ((versions == null) ? 0 : versions.hashCode()); return result; 
1, if (mapExpressionButton.getSelection()) { showPropertyWidgets(false); showTransformationWidgets(false); showAdvancedMappingWidgets(false); showExpressionWidgets(true); redrawParent(); , if (mapExpressionButton.getSelection()) { showPropertyWidgets(false); showTransformationWidgets(false); showAdvancedMappingWidgets(false); showExpressionWidgets(true); redrawParent(); 
1," mService = IRecognitionService.Stub.asInterface(service); if (DBG) Log.d(TAG, ""onServiceConnected - Success""); while (!mPendingTasks.isEmpty()) { mHandler.sendMessage(mPendingTasks.poll()); "," mService = IRecognitionService.Stub.asInterface(service); if (DBG) Log.d(TAG, ""onServiceConnected - Success""); while (!mPendingTasks.isEmpty()) { mHandler.sendMessage(mPendingTasks.poll()); "
0, LookAndFeelFactory.addUIDefaultsCustomizer(new GanttUIDefaultsCustomizer()); LookAndFeelFactory.installDefaultLookAndFeelAndExtension(); showAsFrame(new ProjectGanttChartDemo()); , StringBuilder buf = new StringBuilder(); int nzero = 0; Iterator<Vector.Element> iterateNonZero = v.iterateNonZero(); while (iterateNonZero.hasNext()) { iterateNonZero.next(); nzero++; 
0, for (int i = 0; i < this.elemsOrder.size(); i++) { final Element elem = this.elemsOrder.get(i); if (elem.getNamespace().equals(childNS) && elem.getName().equals(childName)) return i; , Camera c=application.vsm.getActiveCamera(); double a = (c.focal+Math.abs(c.altitude)) / c.focal; if (wheelDirection == WHEEL_UP){ c.altitudeOffset(-a*5); application.vsm.repaint(); 
0," super(UIDesignerBundle.message(""action.insert.column.after.this""), UIDesignerIcons.InsertColumnRight, UIDesignerBundle.message(""action.insert.row.after.this""), UIDesignerIcons.InsertRowBelow); ", return new MiniDFSNNTopology() .addNameservice(new MiniDFSNNTopology.NSConf(null) .addNN(new MiniDFSNNTopology.NNConf(null) .setHttpPort(nameNodeHttpPort) .setIpcPort(nameNodePort))); 
0," GregorianCalendar gcal = new GregorianCalendar(); XMLGregorianCalendar xgcal; String time = """"; try { xgcal = DatatypeFactory.newInstance().newXMLGregorianCalendar(gcal); time = xgcal.toXMLFormat(); "," if (x.getExpr() instanceof SQLIdentifierExpr) { String tableName = ((SQLIdentifierExpr) x.getExpr()).getName(); if (x.getAlias() != null) { tableAlias.put(x.getAlias(), tableName); "
0, String stringValue = (String) value; try { double doubleValue = currencyFormat.parse(stringValue).doubleValue(); if (doubleValue < 0.0) { return ValidationStatus.error(cannotBeNegativeMessage); ," TsapiTrace.traceEntry(""setPrivateData[Object data]"", this); try { CSTAPrivate privData = TsapiPromoter .demoteTsapiPrivate((TsapiPrivate) data); this.tsProvider.setPrivateData(privData); "
0, IWPropertyList parameters = getMethodParameterPropertyList(methodProperty); if (parameters != null) { IWPropertyList list = parameters.getIWPropertyList(Integer.toString(parameter)); return (list); ," if(e==null) return ""<empty>""; else if(e instanceof EvObject) return ((EvObject)e).getMetaTypeDesc(); else if(e instanceof EvData) return ((EvData)e).getMetadataName(); else return ""wtf""; "
1," KahluaConverterManager manager = new KahluaConverterManager(); kahluaTableConverter.install(manager); Map map = new HashMap(); map.put(""X"", map); Object obj = manager.fromJavaToLua(map); "," KahluaConverterManager XXXXX = new KahluaConverterManager(); kahluaTableConverter.install(XXXXX); Map XXXXX = new HashMap(); XXXXX.put(""X"", XXXXX); Object XXXXX = XXXXX.fromJavaToLua(XXXXX); "
0," SimpleDateFormat dateFormat; dateFormat = new SimpleDateFormat(""yyyy-MM-dd HH:mm:ss""); dateFormat.setTimeZone(TimeZone.getTimeZone(""UTC"")); try { return dateFormat.parse(utcString); ", _balloonTip = new BalloonTip(createToolTipContent()) { @Override protected void customizePopup(JidePopup popup) { super.customizePopup(popup); popup.addExcludedComponent(_optionsPanel); 
1, DNSService dns = new MockDNSService() { @Override public Collection findMXRecords(String hostname) { Collection mx = new ArrayList(); if (hostname.equals(INVALID_HOST)) { mx.add(INVALID_MX); , DNSService dns = new MockDNSService() { @Override public Collection findMXRecords(String hostname) { Collection mx = new ArrayList(); if (hostname.equals(INVALID_HOST)) { mx.add(INVALID_MX); 
0," VCloudDirectorApi api = requestsSendResponses(loginRequest, sessionResponse, add, addResponse); assertEquals(api.getCatalogApi().addItem(catalogHref, newItem), adddCatalogItem()); "," Object matcher = parsePropertyFromAttributeOrChild(element, ""matcher"", parserContext, parentDefinition); if (matcher == null) { matcher = parseNameBasedViolationMatcher(element, parserContext); "
1, ReplyEnvelope resultEnvelope = requestSender.send(new AddBroadcastConnectionCommand(portNo)); resultEnvelope.checkForRuntimeException(); return (ConnectionID) resultEnvelope.getContents(); , ReplyEnvelope XXXXX = requestSender.send(new AddBroadcastConnectionCommand(portNo)); XXXXX.checkForRuntimeException(); return (ConnectionID) XXXXX.getContents(); 
0, int numCorrespondences = 0; for ( final Bead bead : view.getBeadStructure().getBeadList() ) numCorrespondences += bead.getRANSACCorrespondence().size(); return numCorrespondences; , ClassPathContainer container = getClassPathElementsRegistry().getClassPathContainer(classpathEntry.getPath()); context.addClasspathEntry(new ResolvedClasspathEntry(container.getPathEntries())); 
1," int sx=players[255].px+map.xMovement[dir]; int sy=players[255].py+map.yMovement[dir]; map.setBullet(sx,sy,(byte)(dir+1)); blockChange=true; if(multiplayer) { net.shoot(sx,sy,(dir+1)); "," int sx=players[255].px+map.xMovement[dir]; int sy=players[255].py+map.yMovement[dir]; map.setBullet(sx,sy,(byte)(dir+1)); blockChange=true; if(multiplayer) { net.shoot(sx,sy,(dir+1)); "
1," if (registeredConfigurations.size() == 1) { registerReceiver(bluetoothReceiver, new IntentFilter( BluetoothDevice.ACTION_FOUND)); if (!bluetoothPoller.isAlive()) { bluetoothPoller.start(); "," if (registeredConfigurations.size() == 1) { registerReceiver(bluetoothReceiver, new IntentFilter( BluetoothDevice.ACTION_FOUND)); if (!bluetoothPoller.isAlive()) { bluetoothPoller.start(); "
0," ComponentTypeMatchingRule typeMatchingRule = new ComponentTypeMatchingRule(componentClass); matchComponentsIn(container, typeMatchingRule); return typeMatchingRule.getMatchingComponents(); ", EventBus eventBus = Session.getInstance().getEventBus(); group.addClickHandler(new ClickHandler() { public void onClick(final ClickEvent event) { description.setText(GROUP_DESC); 
1, OpenIntIntHashMap copy = (OpenIntIntHashMap) super.clone(); copy.table = (int[]) copy.table.clone(); copy.values = (int[]) copy.values.clone(); copy.state = (byte[]) copy.state.clone(); return copy; , OpenIntIntHashMap XXXXX = (OpenIntIntHashMap) super.clone(); XXXXX.table = (int[]) XXXXX.table.clone(); XXXXX.values = (int[]) XXXXX.values.clone(); XXXXX.state = (byte[]) XXXXX.state.clone(); return XXXXX; 
1, EventDataPort newOwnedEventDataPort = (EventDataPort) create(Aadl2Package.eINSTANCE.getEventDataPort()); getOwnedEventDataPorts().add(newOwnedEventDataPort); return newOwnedEventDataPort; , EventDataPort XXXXX = (EventDataPort) create(Aadl2Package.eINSTANCE.getEventDataPort()); getOwnedEventDataPorts().add(XXXXX); return XXXXX; 
0," if (delegate == null && !failed) { try { delegate = element.createExecutableExtension(propertyName); if (delegateInitializer != null) { delegateInitializer.initialize(model, delegate); ", super(); this.hostId = hostId; this.physicalNetworkId = physicalNetworkId; this.providerName = providerName; this.deviceName = deviceName; this.uuid = UUID.randomUUID().toString(); 
1, if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; HashCredentials that = (HashCredentials) o; if (!hash.equals(that.hash)) return false; return true; , if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; HashCredentials XXXXX = (HashCredentials) o; if (!hash.equals(XXXXX.hash)) return false; return true; 
0," if(selected) queryStr = queryStr.replaceFirst(""display="", ""display=\\|""+option); else queryStr = queryStr.replaceAll(""\\|""+option, """"); setImage(urlStr, queryStr); repaint(); revalidate(); "," if ( d == null ) throw new java.lang.IllegalArgumentException( Messages.getString( ""error.BirtDateTime.cannotBeNull.DateValue"" ) ); return getCalendar( d ).get( Calendar.MONTH ) + 1; "
0," if (!iconsCache.containsKey(path)) { URL url = ResourcesCache.class.getClassLoader().getResource(path); if (url==null) { url = ResourcesCache.class.getClassLoader().getResource(""lib/""+path); "," work = -1; progress = 0; if (taskName != null) { message = context.getResources().getString(R.string.finished_task) +"" : ""+ taskName; mViewUpdateHandler.sendEmptyMessage(HANDLER_START_TASK); "
0, super(PerspectiveBarNewContributionItem.class.getName()); menuManager = new MenuManager(); menuManager.add(ContributionItemFactory.PERSPECTIVES_SHORTLIST .create(workbenchWindow)); , for (Iterator it = paoFields.iterator(); it.hasNext();) { DDFField ddff = (DDFField) it.next(); if (pszName.equalsIgnoreCase(ddff.getFieldDefn().getName())) { if (iFieldIndex == 0) { return ddff; 
1," super(-1,UserGlobals.getUserGlobals().getMaxVisibleParticipants(),5, listControlsProvider,listPropertiesProvider); ClientModel.getClientModel().getRosterModel().addListener(this); "," super(-1,UserGlobals.getUserGlobals().getMaxVisibleParticipants(),5, listControlsProvider,listPropertiesProvider); ClientModel.getClientModel().getRosterModel().addListener(this); "
1," LinkedHashMap<String, String> tokenMap = new LinkedHashMap<String, String>(); tokenMap.put(Path.PROJECT_ID, projectIdentifer); return ProjectTaskAdminKeywords.getUrlForNamedArgs(tokenMap); "," LinkedHashMap<String, String> tokenMap = new LinkedHashMap<String, String>(); tokenMap.put(Path.PROJECT_ID, projectIdentifer); return ProjectTaskAdminKeywords.getUrlForNamedArgs(tokenMap); "
0," StringBuffer buf = new StringBuffer(); for (int i = 0; i < path.length(); i++) { char c = path.charAt(i); if (Platform.getOS().equals(""win32"")) { if (i == 0 && c == '/') continue; "," try { final boolean completed = ProgressManager.getInstance().runProcessWithProgressSynchronously( new Runnable() { public void run() { session.execute(getIncludedChanges(), getCommitMessage()); "
1," assertEquals( ""\""\"""", JsonValue.quoteAndEscapeString( """" ) ); assertEquals( ""\""a\"""", JsonValue.quoteAndEscapeString( ""a"" ) ); assertEquals( ""\"" a b \"""", JsonValue.quoteAndEscapeString( "" a b "" ) ); "," assertEquals( ""\""\"""", JsonValue.quoteAndEscapeString( """" ) ); assertEquals( ""\""a\"""", JsonValue.quoteAndEscapeString( ""a"" ) ); assertEquals( ""\"" a b \"""", JsonValue.quoteAndEscapeString( "" a b "" ) ); "
0, Object value = getValue(); if ( value != null && value instanceof String ) { BigDecimal integer = null; boolean isNewOrMalformedValue = false; try { integer = new BigDecimal( ( String ) value ); ," FormData data = new FormData(); data.addFieldData(dataKey, value); WorkflowInstance persistedItem = (WorkflowInstance) processor.persist(item, data); assertEquals(newInstance, persistedItem); "
0," ParamCheck.notNull( listener, ""listener"" ); boolean result = false; synchronized( lock ) { if( bound && !aboutUnbound ) { result = true; sessionStoreListeners.remove( listener ); ", if (inventoryStack[i] != null) { if (inventoryStack[i].stackSize <= j) { ItemStack itemstack = inventoryStack[i]; inventoryStack[i] = null; onInventoryChanged(); return itemstack; 
1, Node copy = super.copy(); ((OpMemberNode) copy).method = this.method; ((OpMemberNode) copy).receivingObj = this.receivingObj; ((OpMemberNode) copy).returnObj = this.returnObj; return copy; , Node copy = super.copy(); ((OpMemberNode) copy).method = this.method; ((OpMemberNode) copy).receivingObj = this.receivingObj; ((OpMemberNode) copy).returnObj = this.returnObj; return copy; 
0," return subject.getRepository().getRepositoryKind().isFacetAvailable( MavenRepository.class ) && pathIsValidGav( subject.getRepository().adaptToFacet( MavenRepository.class ), subject.getPath() ); ", if (targetClass instanceof GroovyScriptClass) { PsiElement added = targetClass.getContainingFile().add(field.getParent()); return (PsiField)((GrVariableDeclaration)added).getVariables()[0]; 
0," image = createMock(BufferedImage.class); path = ""image.png""; writer = newImageFileWriterMock(); error = new IOException(""On Purpose""); taker = new ScreenshotTaker(writer, new RobotFactory()); "," Layer oldLayer = selectedLayer; if (oldLayer != layer) { selectedLayer = layer; firePropertyChange(PROPERTY_NAME_SELECTED_LAYER, oldLayer, selectedLayer); maybeUpdateFigureEditor(); "
1," assertEquals(LongLib.fromInt(-1), LongLib.neg(LongLib.fromInt(1))); assertEquals(LongLib.fromInt(1), LongLib.neg(LongLib.fromInt(-1))); assertEquals(Const.MIN_VALUE, LongLib.neg(Const.MIN_VALUE)); "," assertEquals(LongLib.fromInt(-1), LongLib.neg(LongLib.fromInt(1))); assertEquals(LongLib.fromInt(1), LongLib.neg(LongLib.fromInt(-1))); assertEquals(Const.MIN_VALUE, LongLib.neg(Const.MIN_VALUE)); "
0," assertFilePresent( file ); try { String content = FileUtils.fileRead( file ); if ( !Pattern.matches( regex, content ) ) { Assert.fail( ""Content of "" + file + "" does not match "" + regex ); ", this.conf = new org.apache.hadoop.mapred.JobConf(conf); this.jobId = jobId; this.credentials = this.conf.getCredentials(); try { this.ugi = UserGroupInformation.getCurrentUser(); 
0," for (int i = 0; i < _codingWrappers.length; i++) { final CodingWrapper codingWrapper = _codingWrappers[i]; if (codingWrapper.contains(pixelPos)) { return codingWrapper.getGeoPos(pixelPos, geoPos); ", MockitoAnnotations.initMocks(this); presenter = new GroupPresenter(); presenter.setDialogManager(dialogManager); presenter.setGroupService(service); presenter.initView(viewMock); 
1, if (test instanceof TestCase) { cleanup((TestCase)test); long timeTaken = System.currentTimeMillis() - startTime; if (timeTaken < MINIMUM_TIME) { try { Thread.sleep(MINIMUM_TIME - timeTaken); , if (test instanceof TestCase) { cleanup((TestCase)test); long XXXXX = System.currentTimeMillis() - startTime; if (XXXXX < MINIMUM_TIME) { try { Thread.sleep(MINIMUM_TIME - XXXXX); 
1," String cachedQName = myCachedQName; if (cachedQName == null) { myCachedQName = cachedQName = PsiNameHelper.getQualifiedClassName(getCachedTextSkipWhiteSpaceAndComments(), false); "," String XXXXX = myCachedQName; if (XXXXX == null) { myCachedQName = XXXXX = PsiNameHelper.getQualifiedClassName(getCachedTextSkipWhiteSpaceAndComments(), false); "
1, if (selection != null && selection.isEmpty() == false && selection instanceof IStructuredSelection) { IStructuredSelection ssel = (IStructuredSelection) selection; if (ssel.size() > 1) { return; , if (selection != null && selection.isEmpty() == false && selection instanceof IStructuredSelection) { IStructuredSelection XXXXX = (IStructuredSelection) selection; if (XXXXX.size() > 1) { return; 
1, VariableDeclarationStatement x1 = this.ast.newVariableDeclarationStatement(this.W1); if (this.ast.apiLevel() >= JLS3_INTERNAL) { x1.modifiers().add(this.MOD1); x1.modifiers().add(this.MOD2); , VariableDeclarationStatement XXXXX = this.ast.newVariableDeclarationStatement(this.W1); if (this.ast.apiLevel() >= JLS3_INTERNAL) { XXXXX.modifiers().add(this.MOD1); XXXXX.modifiers().add(this.MOD2); 
0, try { if (_analyzerClass.equals(StandardAnalyzer.class)) { Constructor<?> constructor = _analyzerClass.getConstructor( Version.class); return (Analyzer)constructor.newInstance(Version.LUCENE_30); ," setPresenceAndStatus(presenceType, verboseStatus); final org.jivesoftware.smack.packet.Presence presence = constructCurrentLegacyPresencePacket(); try { conn.sendPacket(presence); "
0, for (UnidirectionalEdge e : graph.getUnidirectionalEdges()) { if (!e.isCurved()) { if (e.showLabel() && e.hasLabel() && e.getLabel().getFont() != null) { renderEdgeLabel(e.getLabel()); , repo = new EnterpriseRep(em); vdcRepo = new VirtualDatacenterRep(em); infraRep = new InfrastructureRep(em); userService = new UserService(em); datacenterService = new DatacenterService(em); 
1, Object o = ((IStructuredSelection)event.getSelection()).getFirstElement(); if(o instanceof IArchimateModel) { fScale.setEnabled(true); clearGallery(); updateGallery((IArchimateModel)o); , Object XXXXX = ((IStructuredSelectiXXXXXn)event.getSelectiXXXXXn()).getFirstElement(); if(XXXXX instanceXXXXXf IArchimateMXXXXXdel) { fScale.setEnabled(true); clearGallery(); updateGallery((IArchimateMXXXXXdel)XXXXX); 
0," String oldName = name; name = newName; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, FieldSelectionPackage.PROPERTY_DEFINITION__NAME, oldName, name)); ", final int featureId = notification.getFeatureID(HenshinPackage.class); switch (featureId) { case HenshinPackage.RULE__NAME: setPartName(calculatePartName()); break; default: break; 
1," this.mFont = FontFactory.create(this.getFontManager(), this.getTextureManager(), 256, 256, TextureOptions.BILINEAR, Typeface.create(Typeface.DEFAULT, Typeface.BOLD), 48); this.mFont.load(); "," this.mFont = FontFactory.create(this.getFontManager(), this.getTextureManager(), 256, 256, TextureOptions.BILINEAR, Typeface.create(Typeface.DEFAULT, Typeface.BOLD), 48); this.mFont.load(); "
0," deploymentUnit = DeploymentUtils.getTopDeploymentUnit(deploymentUnit); deploymentUnit.putAttachment(JpaAttachments.DEPLOYED_PERSISTENCE_PROVIDER, persistenceProviderDeploymentHolder); ", DuplicateRequest duplicateRequest= new DuplicateRequest(); duplicateRequest.setEditParts(new ArrayList()); duplicateRequest.setExtendedData(new HashMap()); return duplicateRequest; 
0, switch (featureID) { case ActionPackage.TRANSITION_BUTTON__UML_ELEMENT_UID: return UML_ELEMENT_UID_EDEFAULT == null ? umlElementUid != null : !UML_ELEMENT_UID_EDEFAULT.equals(umlElementUid); , try { if (_otsARHandle == null) { _otsARHandle = com.arjuna.ArjunaOTS.OTSAbstractRecordHelper.narrow(_resourceHandle); lastRecord = RecordType.LASTRESOURCE == _otsARHandle.type_id(); 
0, this.accountId = account.getId(); this.name = account.getName(); this.key = account.getExternalKey(); if (account.getCurrency() != null) { this.currency = account.getCurrency().toString(); , int size = 0; for ( final java.util.Iterator iterator = this.agendaGroups.values().iterator(); iterator.hasNext(); ) { final AgendaGroup group = (AgendaGroup) iterator.next(); size += group.size(); 
0," final StringBuilder builder = new StringBuilder(); SwingMetawidget metawidget = new SwingMetawidget() { @Override public void repaint() { builder.append( ""repaint\n"" ); super.repaint(); ", if(detail.getRowCount()>0) { if(!isAllSelected) { int size = detail.getRowCount(); int selectedList[] = new int[size]; for(int x = 0; x<= detail.getRowCount() -1; x++) { selectedList[x] = x; 
1," for (OnTestLifeCycleRunnable run : pluginManager.getEnabledModulesByClass(OnTestLifeCycleRunnable.class)) { run.finish(perfTest, reason.name(), perfTestService, config.getVesion()); "," for (OnTestLifeCycleRunnable run : pluginManager.getEnabledModulesByClass(OnTestLifeCycleRunnable.class)) { run.finish(perfTest, reason.name(), perfTestService, config.getVesion()); "
0," super(JTabbedPaneSelectTabTask_setSelectedTab_Test.class); tabbedPane.addTab(""One"", new JPanel()); tabbedPane.addTab(""Two"", new JPanel()); add(tabbedPane); setPreferredSize(new Dimension(300, 200)); "," String oldPlace = place; place = newPlace; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, NonregPackage.ECLIPSE_SUMMIT__PLACE, oldPlace, place)); "
1, if (! fControl.isDisposed()) { fContentAssistant.install(fContentAssistSubjectAdapter); installCueLabelProvider(); installFocusListener(); if (fControl.isFocusControl()) activateHandler(); , if (! fControl.isDisposed()) { fContentAssistant.install(fContentAssistSubjectAdapter); installCueLabelProvider(); installFocusListener(); if (fControl.isFocusControl()) activateHandler(); 
1," JavaPackage actualPackage = (JavaPackage) packages.get(expectedPackage .getName()); if (actualPackage != null) { if (equalsDependencies(actualPackage, expectedPackage)) { return true; "," JavaPackage actualPackage = (JavaPackage) packages.get(expectedPackage .getName()); if (actualPackage != null) { if (equalsDependencies(actualPackage, expectedPackage)) { return true; "
0, final Clock clock = new DefaultClock(); final InvoiceConfig invoiceConfig = new InvoiceConfig() { @Override public long getSleepTimeMs() { throw new UnsupportedOperationException(); ," fireButtonEvent(ButtonEvent.HIDE_BUTTON, ButtonNames.BACK); fireButtonEvent(ButtonEvent.HIDE_BUTTON, ButtonNames.FINISH); fireButtonEvent(ButtonEvent.ENABLE_BUTTON, ButtonNames.NEXT); "
1," String cached = cache.get(key); if (cached != null) return cached; String result = storage.getProperty(key) != null ? storage.getProperty(key) : """"; cache.put(key, result); return result; "," String XXXXX = cache.get(key); if (XXXXX != null) return XXXXX; String XXXXX = storage.getProperty(key) != null ? storage.getProperty(key) : """"; cache.put(key, XXXXX); return XXXXX; "
1," SimpleWeekView v; HashMap<String, Integer> drawingParams = null; if (convertView != null) { v = (SimpleWeekView) convertView; drawingParams = (HashMap<String, Integer>) v.getTag(); "," SimpleWeekView v; HashMap<String, Integer> drawingParams = null; if (convertView != null) { v = (SimpleWeekView) convertView; drawingParams = (HashMap<String, Integer>) v.getTag(); "
0, if(firstLine == this.firstLine) return; int oldFirstLine = this.firstLine; this.firstLine = firstLine; if(firstLine != vertical.getValue()) updateScrollBars(); painter.repaint(); ," this.offlineImage = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB); graphics = offlineImage.createGraphics(); setSize(offlineImage.getWidth(), offlineImage.getHeight()); "
0, Collection answer = new ArrayList(); Iterator iter = getChildNodes().iterator(); while (iter.hasNext()) { DestinationNode child = (DestinationNode) iter.next(); answer.addAll(child.getValues()); ," String directory = null; if (filePath.indexOf(File.separatorChar) != -1 ) { int lastIndexOf = filePath.lastIndexOf(File.separatorChar); directory = filePath.substring(0, (lastIndexOf+1)); "
0," if(inside(_prefix,c)) return true; else if(inside(_modes[0],c)) return true; else if(inside(_modes[1],c)) return true; else if(inside(_modes[2],c)) return positive; else return false; "," Deque<Integer> d = new ArrayDeque<Integer>(); int max = 0, cur; for (int i = 0; i < s.length(); i++) { if (d.isEmpty() || s.charAt(i) == '(' || s.charAt(d.peek()) != '(') { d.push(i); "
1," MethodCache.remove(AddressService.class); _service = service; ReferenceRegistry.registerReference(AddressServiceUtil.class, ""_service""); MethodCache.remove(AddressService.class); "," MethodCache.remove(AddressService.class); _service = service; ReferenceRegistry.registerReference(AddressServiceUtil.class, ""_service""); MethodCache.remove(AddressService.class); "
1, assert status != null; switch (status) { case SUCCESS: return Level.INFO; case FAILED: return Level.ERROR; case CANCELLED: return Level.ERROR; default: throw new AssertionError(status); , assert status != null; switch (status) { case SUCCESS: return Level.INFO; case FAILED: return Level.ERROR; case CANCELLED: return Level.ERROR; default: throw new AssertionError(status); 
1," assertEquals(0, Long.signum(0)); assertEquals(1, Long.signum(1)); assertEquals(-1, Long.signum(-1)); assertEquals(1, Long.signum(Long.MAX_VALUE)); assertEquals(-1, Long.signum(Long.MIN_VALUE)); "," assertEquals(0, Long.signum(0)); assertEquals(1, Long.signum(1)); assertEquals(-1, Long.signum(-1)); assertEquals(1, Long.signum(Long.MAX_VALUE)); assertEquals(-1, Long.signum(Long.MIN_VALUE)); "
1, if (size == -1 || sizeModCount != RedBlackMap.this.modCount) { size = 0; sizeModCount = RedBlackMap.this.modCount; Iterator i = iterator(); while (i.hasNext()) { size++; i.next(); , XXXXXf (sXXXXXze == -1 || sXXXXXzeModCount != RedBlackMap.thXXXXXs.modCount) { sXXXXXze = 0; sXXXXXzeModCount = RedBlackMap.thXXXXXs.modCount; Iterator XXXXX = XXXXXterator(); whXXXXXle (XXXXX.hasNext()) { sXXXXXze++; XXXXX.next(); 
0, DomCard theCardToTrash = null; for (DomCard card : owner.getCardsInHand()){ if (card.getTrashPriority()<16 && !card.hasCardType(DomCardType.Treasure)){ theCardToTrash=card; break; ," DBObject deletedField; try { deletedField = getEntity(null,coll,fieldName + "".cid"", cid, ""Simulation Parameter "" + ""with cid="" + cid + "" removed successfully"", false, new String[]{ fieldName"
1," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (name: ""); result.append(name); result.append(')'); return result.toString(); "," if (eIsProxy()) return super.toString(); StringBuffer XXXXX = new StringBuffer(super.toString()); XXXXX.append("" (name: ""); XXXXX.append(name); XXXXX.append(')'); return XXXXX.toString(); "
1," if (ALKANESTEM_SUBTYPE_VAL.equals(group.getAttributeValue(SUBTYPE_ATR))){ Element possibleBridgeFormer = XOMTools.getNextSiblingIgnoringCertainElements(group, new String[]{UNSATURATOR_EL"," if (ALKANESTEM_SUBTYPE_VAL.equals(group.getAttributeValue(SUBTYPE_ATR))){ Element XXXXX = XOMTools.getNextSiblingIgnoringCertainElements(group, new String[]{UNSATURATOR_EL"
0," if(value == inst.getEObject() && !inst.isConsumed()) return null; switch(index) { case 0: return new ParenExpr_ParenExprAction_1(lastRuleCallOrigin, next, actIndex, consumed); default: return null; ", if(p == null) return; right(p); while((p = p.more) != null) { right(p); for (Parse cell=p.parts; cell != null && cell.more != null; cell = cell.more) { right(cell); markAllCorrect(cell.parts); 
1," Closure closure = HelperUtil.returns('a'); final File file = new File(""1""); collection.from(closure); context.checking(new Expectations() {{ one(resolverMock).resolve('a'); will(returnValue(file)); "," Closure closure = HelperUtil.returns('a'); final File file = new File(""1""); collection.from(closure); context.checking(new Expectations() {{ one(resolverMock).resolve('a'); will(returnValue(file)); "
1," String name = ""feature_""+feature.getVersionedIdentifier(); if (InstallRegistry.getInstance().get(name) == null) { InstallRegistry.getInstance().put(name, name); InstallRegistry.getInstance().save(); "," String XXXXX = ""feature_""+feature.getVersionedIdentifier(); if (InstallRegistry.getInstance().get(XXXXX) == null) { InstallRegistry.getInstance().put(XXXXX, XXXXX); InstallRegistry.getInstance().save(); "
0," final SqlSession sqlSession = localSqlSession.get(); if (sqlSession == null) throw new SqlSessionException(""Error: Cannot close. No managed session is started.""); try { sqlSession.close(); ", acceptedIconBtn.setHTML(((patientInSemesterProxy.getAccepted() != null) ? patientInSemesterProxy.getAccepted().booleanValue() : false) ? OsMaConstant.CHECK_ICON : OsMaConstant.UNCHECK_ICON); 
0," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (group: ""); result.append(group); result.append(')'); return result.toString(); ", installDecoration(); installBorders(); installResizers(); addWindowListener(new WindowAdapter(){ public void windowActivated(WindowEvent e){ getRootPane().setBorder(activeBorder); repaint(); 
1," if (action == null) action = CrazyAnnouncer.getPlugin().getAction(actionname); if (action != null) Bukkit.getScheduler().scheduleAsyncDelayedTask(CrazyAnnouncer.getPlugin(), action, delay / 50); "," if (action == null) action = CrazyAnnouncer.getPlugin().getAction(actionname); if (action != null) Bukkit.getScheduler().scheduleAsyncDelayedTask(CrazyAnnouncer.getPlugin(), action, delay / 50); "
0," addView(inflate(getContext(), R.layout.dataapp_progress, null)); tvProgressApp = (TextView) findViewById(R.id.tvProgressApp); tvProgressCount = (TextView) findViewById(R.id.tvProgressCount); ", MDRAction mdrAction = new MDRActionImpl(); mdrAction.setNew(true); mdrAction.setPrimaryKey(actionId); String uuid = PortalUUIDUtil.generate(); mdrAction.setUuid(uuid); return mdrAction; 
1," jdbcTemplate.update(""UPDATE form set table_name = concat('table', id) WHERE id = ?"", id); jdbcTemplate.update(""UPDATE field set col_name = concat('col', id) WHERE form_id = ?"", id); "," jdbcTemplate.update(""UPDATE form set XXXXX = concat('table', XXXXX) WHERE XXXXX = ?"", XXXXX); jdbcTemplate.update(""UPDATE field set XXXXX = concat('col', XXXXX) WHERE form_XXXXX = ?"", XXXXX); "
0, LocalDateTime now = new LocalDateTime(); for(Race race : this.domainService.getAllRaces()){ if(race.getStartTime().isAfter(now)){ this.betfairService.getRacePrices(race.getEventId()); ," log.fine(""Sending asynchronous search for: "" + searchType.getString()); getConfiguration().getAsyncProtocolExecutor().execute( getProtocolFactory().createSendingSearch(searchType, mxSeconds) ); "
1, if (newAction) { switch (state) { case HOME: case GRAB_WAITING: case DROP_WAITING: setState(ActionState.POINT_UP_OVER); break; case POINT_WAITING: setState(ActionState.POINT_UP_CURR); break; , if (newAction) { switch (state) { case HOME: case GRAB_WAITING: case DROP_WAITING: setState(ActionState.POINT_UP_OVER); break; case POINT_WAITING: setState(ActionState.POINT_UP_CURR); break; 
1," return CompletionUtil.init(new IfCompleter( ifStmt.getCondition(), ifStmt.getCloseParenOffset(), ifStmt.getThenStatement(), ifStmt.getElseTokenOffset(), ifStmt.getElseStatement()), ifStmt); "," return CompletionUtil.init(new IfCompleter( ifStmt.getCondition(), ifStmt.getCloseParenOffset(), ifStmt.getThenStatement(), ifStmt.getElseTokenOffset(), ifStmt.getElseStatement()), ifStmt); "
1, if (this.typeVariable == null) { TypeVariableBinding[] typeVariables = this.genericType.typeVariables(); if (this.rank < typeVariables.length) this.typeVariable = typeVariables[this.rank]; , if (this.typeVariable == null) { TypeVariableBinding[] typeVariables = this.genericType.typeVariables(); if (this.rank < typeVariables.length) this.typeVariable = typeVariables[this.rank]; 
0, ScopePath currentPath = scopePath; while (!CodeDefaultScopeDescriptor.NAME.equals(currentPath.getLastScope().getName())) { removeFromCache(currentPath); currentPath = currentPath.getParentPath(); , final Clock clock = new DefaultClock(); final InvoiceConfig invoiceConfig = new InvoiceConfig() { @Override public long getSleepTimeMs() { throw new UnsupportedOperationException(); 
1," if (previousLocation == null || isFarEnough(location, previousLocation)) { qiblaActivity.onNewLocationFromGPS(location); new LocationChangedAsyncTask(mHandler).execute(location); "," if (previousLocation == null || isFarEnough(location, previousLocation)) { qiblaActivity.onNewLocationFromGPS(location); new LocationChangedAsyncTask(mHandler).execute(location); "
0, if (null != obj) { for (Method method : obj.getClass().getMethods()) { if (method.isAnnotationPresent(BridgePreDestroy.class)) { if (!Modifier.isPublic(method.getModifiers())) { continue; , Object property = properties.get( operation.getGroupPropertyName() ); Class<?>[] groups; if ( property == null ) { groups = operation == Operation.DELETE ? EMPTY_GROUPS : DEFAULT_GROUPS; 
0," return (a instanceof IntegerVector && b instanceof IntegerVector) ? cosineSimilarity((IntegerVector)a, (IntegerVector)b) : cosineSimilarity(Vectors.asDouble(a), Vectors.asDouble(b)); "," String s = """"; Object object; for (int i = 0, length = valueTable.length; i < length; i++) if ((object = valueTable[i]) != null) s += keyTable[i] + "" -> "" + object.toString() + ""\n""; return s; "
0," if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; EventType that = (EventType) o; if (!Objects.equal(name, that.name)) return false; return true; "," String defaultString = m_promptTask.getDefaultValue(); if (""root"".equalsIgnoreCase(defaultString.trim())) { if (node == m_tree.getModel().getRoot()) { m_tree.setSelectionPath(treePath); "
0," Accessible returnValue = ((ComponentUI) (uis.elementAt(0))).getAccessibleChild(a,b); for (int i = 1; i < uis.size(); i++) { ((ComponentUI) (uis.elementAt(i))).getAccessibleChild(a,b); "," SvnConfigurable.selectConfigirationDirectory(configuration.getConfigurationDirectory(), new Consumer<String>() { @Override public void consume(String s) { configuration.setConfigurationDirectory(s); "
1," String imageUrl = tbtn.getToggledRolloverImageUrl(); if (imageUrl == null) return getDefaultToggledImageRolloverUrl(context); else return Resources.applicationURL(context, imageUrl); "," String imageUrl = tbtn.getToggledRolloverImageUrl(); if (imageUrl == null) return getDefaultToggledImageRolloverUrl(context); else return Resources.applicationURL(context, imageUrl); "
1," doReturn(1234L).when(factory).getCreatedTime(); UserExpiration expiration = controller.createUser(); Assert.assertEquals(expiration.getCreatedTime(), 1234L); controller.deleteUser(expiration); "," doReturn(1234L).when(factory).getCreatedTime(); UserExpiration XXXXX = controller.createUser(); Assert.assertEquals(XXXXX.getCreatedTime(), 1234L); controller.deleteUser(XXXXX); "
0, Object data = event.item.getData(); Image activationImage = null; if (data instanceof ITask) { AbstractTask task = (AbstractTask) data; if (task.isActive()) { activationImage = taskActive; ," String msgText = getTextResolver(context).getExceptionMessage(e); FacesMessage msg = new FacesMessage(FacesMessage.SEVERITY_ERROR, msgText, msgText); context.addMessage(tag.getClientId(), msg); "
1," assertEquals(0,IAURLCanonicalizer.getDefaultPort(""foo"")); assertEquals(80,IAURLCanonicalizer.getDefaultPort(""http"")); assertEquals(443,IAURLCanonicalizer.getDefaultPort(""https"")); "," assertEquals(0,IAURLCanonicalizer.getDefaultPort(""foo"")); assertEquals(80,IAURLCanonicalizer.getDefaultPort(""http"")); assertEquals(443,IAURLCanonicalizer.getDefaultPort(""https"")); "
0," UUID expectedUuid = TimeUUIDUtils.getUniqueTimeUUIDinMillis(); UUID actualUuid = TimeUUIDUtils.uuid(TimeUUIDUtils.asByteBuffer(expectedUuid)); assertEquals(expectedUuid, actualUuid); "," synchronized (this.LOCK) { final long put = Math.max(0, x); if (put == 0) { this.stalled += Math.max(0, time); if (this.timeout > 0 && this.stalled > this.timeout) { this.resetSpeedMeter(); "
0, while (true) { nextToken(); switch (fToken) { case Symbols.TokenIDENT: case Symbols.TokenOTHER: continue; case Symbols.TokenCASE: case Symbols.TokenDEFAULT: return false; default: return true; ," StringBuilder sb = new StringBuilder(); sb.append(""{""); if (domain != null) sb.append(""Domain: "" + domain + "", ""); if (taskList != null) sb.append(""TaskList: "" + taskList + "", ""); sb.append("""
0," String[] toks = { ""cut_interval_to_new_track"", leg, site, hole, core, type, section, String.valueOf(startCoreDepth), String.valueOf(endCoreDepth), spliceTrackName, String.valueOf(shift) ", int numGeometries = byteBuffer.getInt(); Geometry[] geometries = new Geometry[numGeometries]; for (int i = 0; i < geometries.length; i++) { geometries[i] = decodeGeometry(byteBuffer); 
0," if (exceptionsString.length() != 0) { exceptions.clear(); final List<String> strings = StringUtil.split(exceptionsString, "",""); for (String string : strings) { exceptions.add(string); ", addKeyListener(new KeyAdapter(){ @Override public void keyPressed(KeyEvent e) { if (e.getKeyCode() == KeyEvent.VK_ENTER){ if (isWindowVisibleWithSelectedValue()) { selectValue(); e.consume(); 
0," String label = ((IsAcquiredAt)object).getId(); return label == null || label.length() == 0 ? getString(""_UI_IsAcquiredAt_type"") : getString(""_UI_IsAcquiredAt_type"") + "" "" + label; "," return rt.createNonBlockingTask(new Body() { @Override public void execute(Runtime rt, Task current) { if ( level > 0 ) { rt.schedule(createTask(rt, level-1), current, Runtime.NO_DEPS); "
1, switch (featureID) { case Wcs111Package.COVERAGE_DESCRIPTIONS_TYPE__COVERAGE_DESCRIPTION: getCoverageDescription().clear(); getCoverageDescription().addAll((Collection)newValue); return; , switch (featureID) { case Wcs111Package.COVERAGE_DESCRIPTIONS_TYPE__COVERAGE_DESCRIPTION: getCoverageDescription().clear(); getCoverageDescription().addAll((Collection)newValue); return; 
1, box = Box.createHorizontalBox(); label = new XJURLLabel(new ActionListener() { public void actionPerformed(ActionEvent e) { selectTab(consoleTab.getTabComponent()); clearMessage(); , box = Box.createHorizontalBox(); label = new XJURLLabel(new ActionListener() { public void actionPerformed(ActionEvent e) { selectTab(consoleTab.getTabComponent()); clearMessage(); 
1," JComponent msgComp = getComponentForMessage(message); int ret = JOptionPane.showConfirmDialog(this, msgComp, title, JOptionPane.YES_NO_OPTION); return ret == JOptionPane.YES_OPTION; "," JComponent XXXXX = getComponentForMessage(message); int XXXXX = JOptionPane.showConfirmDialog(this, XXXXX, title, JOptionPane.YES_NO_OPTION); XXXXXurn XXXXX == JOptionPane.YES_OPTION; "
1," clearRowSelection(); int col = findColumnForEvent(e); if (col >= 0) { try { table.addColumnSelectionInterval(table.getSelectedColumn(), col); table.setRowSelectionInterval(0, table.getRowCount()-1); "," clearRowSelection(); int XXXXX = findColumnForEvent(e); if (XXXXX >= 0) { try { table.addColumnSelectionInterval(table.getSelectedColumn(), XXXXX); table.setRowSelectionInterval(0, table.getRowCount()-1); "
1," renderCommands.add(new Command() { public void execute() { if (emergencies.get(message.getCallId())==null){ System.out.println(""Unknown emergency for call Id ""+message.getCallId()); return; "," renderCommands.add(new Command() { public void execute() { if (emergencies.get(message.getCallId())==null){ System.out.println(""Unknown emergency for call Id ""+message.getCallId()); return; "
1," if(cardID_Edit.getText().isEmpty() || letter_Edit.getText().isEmpty() ) return ; LetterObject lo = new LetterObject(letter_Edit.getText(), cardID_Edit.getText() ); H2Database.insertLetter(lo); "," if(cardID_Edit.getText().isEmpty() || letter_Edit.getText().isEmpty() ) return ; LetterObject lo = new LetterObject(letter_Edit.getText(), cardID_Edit.getText() ); H2Database.insertLetter(lo); "
0," while(rectangles.size() < numberOfBars){ rectangles.add(new Rectangle(0, 0, Shape.SHAPE_FILLED, ""rectangle-"" + rectangles.size())); this.addChild(rectangles.get(rectangles.size()-1)); ", SModelDescriptor modelDescriptor = model.getModelDescriptor(); if (modelDescriptor instanceof EditableSModelDescriptor) { ((EditableSModelDescriptor) modelDescriptor).setChanged(true); 
1," String projectName = project.getProperties().getProperty( ""bundle.symbolicName"" ); if( null == projectName ) { projectName = PomUtils.getCompoundId( project.getGroupId(), project.getArtifactId() ); "," String XXXXX = project.getProperties().getProperty( ""bundle.symbolicName"" ); if( null == XXXXX ) { XXXXX = PomUtils.getCompoundId( project.getGroupId(), project.getArtifactId() ); "
1, while (canContinue()) { long lStartedAt = System.currentTimeMillis(); shell.getDisplay().syncExec(new AERunnable() { public void runSupport() { if (shell == null || shell.isDisposed()) { return; , while (canContinue()) { long XXXXX = System.currentTimeMillis(); shell.getDisplay().syncExec(new AERunnable() { public void runSupport() { if (shell == null || shell.isDisposed()) { return; 
1, IStructuredSelection selection = (IStructuredSelection) event.getSelection(); String cfgId = (String) selection.getFirstElement(); if (cfgId != null) { project.setActiveBuildConfiguration(cfgId); , IStructuredSelection XXXXX = (IStructuredSelection) event.getSelection(); String XXXXX = (String) XXXXX.getFirstElement(); if (XXXXX != null) { project.setActiveBuildConfiguration(XXXXX); 
0," Dimension size = s.getSize(); Rectangle buttonRect = new Rectangle(new Point(0, 0), size); boolean vert = s.isVertical(); if (vert) { buttonRect.height = Math.min(BUTTON_SIZE, size.height / 2); "," double[] a = this.a; int capacity = a.length; int n = this.n; int nNew = n + c; if (nNew > capacity) { double[] aNew = newArray(capacity, nNew); System.arraycopy(a, 0, aNew, c, n); this.a = aNew; "
0," int microLatitude = (int) ( mWaypointsCursor.getDouble( 0 ) * 1E6d ); int microLongitude = (int) ( mWaypointsCursor.getDouble( 1 ) * 1E6d ); return new GeoPoint( microLatitude, microLongitude ); ", if ( platform == null ) { synchronized ( this ) { if ( platform == null ) { AccessController .doPrivileged( new PrivilegedAction<Object>( ) { public Object run( ) { deploy( ); return null; 
0," PendingIntent keepAlivePendingIntent = PendingIntent.getBroadcast(context, 0, new Intent(context, KeepAliveAlarm.class), 0); getAlarmManager(context).cancel(keepAlivePendingIntent); "," String value = e.getAttribute(attribute); return (value != null && !(attribute.equals(""contentEditable"") && value.equals(""inherit""))) ? "" "" + attributeDisplayString + ""='"" + value + ""'"" : """"; "
0," xstream.alias(""UserLoginTrackerList"", UserLoginTrackerList.class); xstream.alias(""UserLoginTracker"", UserLoginTracker.class); xstream.addImplicitCollection(UserLoginTrackerList.class, ""list""); "," assertEquals(""_sahi.schedule(\""_sahi._setValue ( elements['username'] , 'test'+\""+s_v($ix)+\"" )\"", \""fileName&n=1\"");\r\n"", script.modify(""_setValue ( elements['username'] , 'test'+$ix )"")); "
1," Server s = new Server(getProjectForName(page1.getProjectName()), page1.getServerName(), page1.getServerType(), page1.getPort()); ServerManager.getInstance().addServer(s); return true; "," Server XXXXX = new Server(getProjectForName(page1.getProjectName()), page1.getServerName(), page1.getServerType(), page1.getPort()); ServerManager.getInXXXXXtance().addServer(XXXXX); return true; "
0," NumberField field = new NumberField(); gkFieldBinding fb = new gkNumberFieldBinding(field, getField() .getName(), (Map) form.getInfo()); form.addFieldBinding(fb); initField(field); return field; "," RepositoryItem item = (RepositoryItem) value; return super .getListCellRendererComponent( list, item.getHumanReadableName() + "" ("" + item.getFormat() + "")"", index, isSelected, cellHasFocus); "
1," synchronized (_lock) { if (_instance != null) throw new RuntimeException(""Object model has already been registered. This method can only be called at program startup.""); _instance = model; "," synchronized (_lock) { if (_instance != null) throw new RuntimeException(""Object model has already been registered. This method can only be called at program startup.""); _instance = model; "
0, ExternalCEDModule cedModule = null; try { cedModule = ExternalModuleDelegater.getModuleLoader() != null ? ExternalModuleDelegater.getModuleLoader().getCEDModuleInstance( getProject()) : null; ," activity = a; inflater = (LayoutInflater)activity.getSystemService( Context.LAYOUT_INFLATER_SERVICE); mTypeface = Typeface.createFromAsset(a.getAssets(), Constants.ROBOTO_REGULAR); "
0," String text = ""until false; do AC_SOMETHING(...); done\n""; AutoconfElement tree = parse(text, false); assertTreeStructure(tree, new String[] { ""until"", ""AC_SOMETHING"", ""..."", null, null ", if (tabMaxWidth == null) { tabMaxWidth = new StyleableDoubleProperty(DEFAULT_TAB_MAX_WIDTH) { @Override public StyleableProperty getStyleableProperty() { return StyleableProperties.TAB_MAX_WIDTH; 
1," float[] mat; if(arg.equals("""")) mat=openAffineTransform(); else mat=openAffineTransform(arg); IJ.log(""fields:=""+getFields()); IJ.log(""tags:=""+getTags()); IJ.log(""mat = ""+Arrays.toString(mat)); "," float[] mat; if(arg.equals("""")) mat=openAffineTransform(); else mat=openAffineTransform(arg); IJ.log(""fields:=""+getFields()); IJ.log(""tags:=""+getTags()); IJ.log(""mat = ""+Arrays.toString(mat)); "
0, if(UMLPackage.eINSTANCE.getNamedElement_Name().equals(notification.getFeatureID(NamedElement.class)) || notification.getNotifier() instanceof EAnnotation) { refreshQualifiedNameDisplay(); , return DataHelper.hashCode(getCertificate()) + (int)getCloveId() + DataHelper.hashCode(getData()) + DataHelper.hashCode(getExpiration()) + DataHelper.hashCode(getInstructions()); 
0," assertEquals(false, new Instant(TEST_TIME_NOW - 1).isEqualNow()); assertEquals(true, new Instant(TEST_TIME_NOW).isEqualNow()); assertEquals(false, new Instant(TEST_TIME_NOW + 1).isEqualNow()); "," System.out.println(""s_bar = "" + s_bar); System.out.println(""s_foo = "" + s_foo); final long foo = 3l; final long bar = 3L; System.out.println(""bar = "" + bar); System.out.println(""foo = "" + foo); "
1, if (table == null) return false; return table.hasFocus() || rowHeader.hasFocus() || table.getTableHeader().hasFocus() || spreadsheet.getCorner(JScrollPane.UPPER_LEFT_CORNER).hasFocus(); , if (table == null) return false; return table.hasFocus() || rowHeader.hasFocus() || table.getTableHeader().hasFocus() || spreadsheet.getCorner(JScrollPane.UPPER_LEFT_CORNER).hasFocus(); 
1," SimpleEntity entity = new SimpleEntity(); daoSession.insert(entity); AsyncOperation operation = asyncSession.insert(entity); try { operation.getResult(); fail(""getResult should have thrown""); "," SimpleEntity XXXXX = new SimpleEntity(); daoSession.insert(XXXXX); AsyncOperation XXXXX = asyncSession.insert(XXXXX); try { XXXXX.getResult(); fail(""getResult should have thrown""); "
0," File[] paletteSubDirectories = getPaletteDirectory().listFiles(new FileFilter() { @Override public boolean accept(File aFile) { return aFile.isDirectory() && !aFile.getName().endsWith(""CVS""); "," final CopyField copyField = new CopyField(new SchemaField(""source"", new TextField()), new SchemaField(""destination"", new TextField()), 1000); assertEquals(1000, copyField.getMaxChars()); "
1," BansheeServer s = null; Cursor cursor = getDb().query(DB.TABLE_NAME, DB.ALL_COLUMNS, DB.DEFAULT + ""!=0"", null, null, null, null, ""1""); if (cursor.moveToNext()) { s = fillFromCursor(cursor); "," BansheeServer s = null; Cursor cursor = getDb().query(DB.TABLE_NAME, DB.ALL_COLUMNS, DB.DEFAULT + ""!=0"", null, null, null, null, ""1""); if (cursor.moveToNext()) { s = fillFromCursor(cursor); "
0," if (min > max) throw new IllegalArgumentException(format(""bad range, %d > %d"", min, max)); if (min == max) return min; int nextRandom = random.nextInt(max - min + 1); return nextRandom + min; "," return ConceptEditorHelper.createNewConceptAspectInstance(LanguageAspect.BEHAVIOR, node, SConceptOperations.findConceptDeclaration(""jetbrains.mps.lang.behavior.structure.ConceptBehavior"")); "
0, char c; int len = s.length(); StringBuffer sbuf = new StringBuffer(len); int i = 0; while (i < len) { c = s.charAt(i++); if (c == '\\') { c = s.charAt(i++); if (c == 'n') { c = '\n'; , List<String> s = new ArrayList<String>(); s.add(jobId); s.add(owner); s.add(queue); s.add(state); s.add(stateDetail); s.add(remoteOutputPath); s.add(remoteErrorPath); return s.toString(); 
0," final Player player = event.getPlayer(); final PlayerInv inv = itemsDrops.remove(player); if (inv != null && player.isDead()) { itemsOfDeadDisconnected.put(player.getName(), inv); "," SecurityManager sm = System.getSecurityManager(); if (sm != null) sm.checkPermission(new PropertyPermission(key, ""write"")); return (String) internalGetProperties(null).remove(key); "
1, MPublicElementAccessor lPublicElementAccessor = new MPublicElementAccessor( pElementName); this.ePublicElementAccessor.add(lPublicElementAccessor); return lPublicElementAccessor; , MPublicElementAccessor XXXXX = new MPublicElementAccessor( pElementName); this.ePublicElementAccessor.add(XXXXX); return XXXXX; 
1," super(2 + Math.max(String.valueOf(minimum).length(), String.valueOf(maximum).length())); this.minimum = minimum; this.maximum = maximum; this.stepsize = stepsize; this.negativeColor = negativeColor; "," super(2 + Math.max(String.valueOf(minimum).length(), String.valueOf(maximum).length())); this.minimum = minimum; this.maximum = maximum; this.stepsize = stepsize; this.negativeColor = negativeColor; "
0, ImmutableList.Builder<ObjectMapper> builder = new ImmutableList.Builder<ObjectMapper>(); for (ObjectMapper objectMapper : objectMappers) { if (objectMapper != mapper) { builder.add(objectMapper); ," super(""Object Editor""); addWindowListener(new winExit()); setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE); MultiLineToolTipUI.initialize(); this.entryInformation = entryInformation; "
1," oldLoggingLevel = driver.getSettings().logging().getLevel(); driver.getSettings().logging().setLevel(Level.FINE); driver.get(pages.console); triggerLog = driver.findElement(By.id(""trigger_log"")); "," oldLoggingLevel = driver.getSettings().logging().getLevel(); driver.getSettings().logging().setLevel(Level.FINE); driver.get(pages.console); triggerLog = driver.findElement(By.id(""trigger_log"")); "
1," StringBuilder sb = new StringBuilder(); for (UUID targetId: getTargets()) { Permanent permanent = game.getPermanent(targetId); if (permanent != null) { sb.append(permanent.getName()).append("" ""); "," StringBuilder XXXXX = new StringBuilder(); for (UUID targetId: getTargets()) { Permanent XXXXX = game.getPermanent(targetId); if (XXXXX != null) { XXXXX.append(XXXXX.getName()).append("" ""); "
0," if (self.length() == 0) return self; try { StringBuilder builder = new StringBuilder(); for (String line : readLines(self)) { builder.append(expandLine(line, tabStop)); builder.append(""\n""); "," URI resourceURI = EditUIUtil.getURI(getEditorInput()); Exception exception = null; Resource resource = null; try { resource = editingDomain.getResourceSet().getResource(resourceURI, true); "
1, int read1 = ((DecoratedCompiledMessageStatistics) item).getReadForumsAmt(); int read2 = ((DecoratedCompiledMessageStatistics) anotherItem).getReadForumsAmt(); return read2 - read1; , int XXXXX = ((DecoratedCompiledMessageStatistics) item).getReadForumsAmt(); int XXXXX = ((DecoratedCompiledMessageStatistics) anotherItem).getReadForumsAmt(); return XXXXX - XXXXX; 
0, for (final OIndex<?> index : getDatabase().getMetadata().getIndexManager().getClassIndexes(cls.getName())) { getDatabase().command(new OCommandSQL(DROP_INDEX_QUERY + index.getName())); ," Writer out = null; File directory = new File(repoLocation + REFS_REMOTES + remoteName); File file = new File(directory, branchName); if (!directory.exists()) { directory.mkdirs(); "
1," Region id = state.getRegion(); JComponent component = state.getComponent(); String name = (id.isSubregion()) ? null : component.getName(); if (insets == null) { insets = new Insets(0, 0, 0, 0); "," Region XXXXX = state.getRegion(); JComponent XXXXX = state.getComponent(); String XXXXX = (XXXXX.isSubregion()) ? null : XXXXX.getName(); if (insets == null) { insets = new Insets(0, 0, 0, 0); "
1, StringBuffer sb = new StringBuffer(bits.length / 2); int bitCount = 0; sb.append('{'); boolean comma = false; for (long element : bits) { if (element == 0) { bitCount += ELM_SIZE; continue; , StringBuffer XXXXX = new StringBuffer(bits.length / 2); int XXXXX = 0; XXXXX.append('{'); boolean XXXXX = false; for (long element : bits) { if (element == 0) { XXXXX += ELM_SIZE; continue; 
0, int hash = is_final ? 1 : 0; hash ^= hash * 31 + this.labels.length; for (int c : this.labels) hash ^= hash * 31 + c; for (State s : this.states) { hash ^= System.identityHashCode(s); ," System.out.println(type + "": "" + e.getMessage()); System.out.println(""Line "" + e.getLineNumber() + "" Column "" + e.getColumnNumber()); System.out.println(""System ID: "" + e.getSystemId()); "
0, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(SettingsTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; ," CostCodeDto costcode = new CostCodeDto(); costcode.setName(""cost code""); costcode.setDescription(""description""); costcode.setId(1); costcode.addLink(new RESTLink(""edit"", ""http: return costcode; "
1," ModelNode address = Baseadress.get(); address.add(""subsystem"", ""datasources""); if(xaDisplay) address.add(""xa-data-source"", ""*""); else address.add(""data-source"", ""*""); return address; "," ModelNode address = Baseadress.get(); address.add(""subsystem"", ""datasources""); if(xaDisplay) address.add(""xa-data-source"", ""*""); else address.add(""data-source"", ""*""); return address; "
1, if (task.call.getCallElement() instanceof JetCallElement) { JetValueArgumentList list = ((JetCallElement)task.call.getCallElement()).getValueArgumentList(); if (list != null) { return list; , if (task.call.getCallElement() instanceof JetCallElement) { JetValueArgumentList XXXXX = ((JetCallElement)task.call.getCallElement()).getValueArgumentList(); if (XXXXX != null) { return XXXXX; 
1," super(); JEditorPane vp = new JEditorPane( ""text/html"", getPage() ); vp.setEditable(false); JScrollPane jsp = new JScrollPane(); jsp.setViewportView(vp); add(jsp, BorderLayout.CENTER); "," super(); JEditorPane XXXXX = new JEditorPane( ""text/html"", getPage() ); XXXXX.setEditable(false); JScrollPane XXXXX = new JScrollPane(); XXXXX.setViewportView(XXXXX); add(XXXXX, BorderLayout.CENTER); "
0, if (preference == mCustomDensity) { String strValue = (String) newValue; if (strValue.equals(getResources().getString(R.string.custom_density))) { showDialog(DIALOG_DENSITY); return true; ," if (!super.equals(obj)) return false; ChatDelivery cob = (ChatDelivery) obj; if (StringUtil.different(cob.getMessage().getId(), getMessage().getId() )) return false; return true; "
1," thrown.expect(AssertionError.class); thrown.expectMessage(""old value""); new Bottom(0) { @AllowPureAccess private int oldDestroyer; @Override public int old() { return value + oldDestroyer++; "," thrown.expect(AssertionError.class); thrown.expectMessage(""old value""); new Bottom(0) { @AllowPureAccess private int oldDestroyer; @Override public int old() { return value + oldDestroyer++; "
1," if ((interactionUnderway && !iOwnInteraction) || (!modifiersMatch(e, mods))) { if (press) { interactionUnderway = true; iOwnInteraction = false; ManipManager.getManipManager().mousePressed(e); "," if ((interactionUnderway && !iOwnInteraction) || (!modifiersMatch(e, mods))) { if (press) { interactionUnderway = true; iOwnInteraction = false; ManipManager.getManipManager().mousePressed(e); "
0," return new StringBuilder() .append(""ServerBean="") .append(address) .append("":"") .append(jndiPort) .append("" timeout="") .append(timeout) .append("" kind="") .append(kind).toString(); "," if (StringUtils.isEmpty(str)) return AccessCode.UNKNOWN; if (""PROPERTY"".equals(str)) return AccessCode.EXPLICIT | AccessCode.PROPERTY; return AccessCode.EXPLICIT | AccessCode.FIELD; "
1, super(arraySize); mDirty = false; getObjects().setComparator(sPhasedObjectComparator); getPendingObjects().setComparator(sPhasedObjectComparator); mSearchDummy = new PhasedObject(); , super(arraySize); mDirty = false; getObjects().setComparator(sPhasedObjectComparator); getPendingObjects().setComparator(sPhasedObjectComparator); mSearchDummy = new PhasedObject(); 
0," BreakpointSet bpAlpha = null; try { bpAlpha = new BreakpointSet( ""alpha"", ""ALPHA1"", ""-10. -5. 0 5 10 15. 20. 25. 30 35 40 45."", "" Alpha breakpoints for basic and damping aero tables "", model ); "," Reference<V> oldValueReference = wrapValue(key, oldValue); Reference<V> newValueReference = wrapValue(key, newValue); return _map.replace(key, oldValueReference, newValueReference); "
1, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(WikiTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(WikiTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; 
1, for (Iterator i = mbean.iterator(); i.hasNext();) { Attribute attrib = (Attribute)i.next(); if (attrib.getValue() instanceof ObjectName) { printMBean((ObjectName)attrib.getValue()); , for (Iterator XXXXX = mbean.XXXXXterator(); XXXXX.hasNext();) { AttrXXXXXbute attrXXXXXb = (AttrXXXXXbute)XXXXX.next(); XXXXXf (attrXXXXXb.getValue() XXXXXnstanceof ObjectName) { prXXXXXntMBean((ObjectName)attrXXXXXb.getValue()); 
1," CmsWidgetFactoryRegistry.instance().registerFactory(WIDGET_TYPE, new I_CmsFormWidgetFactory() { public I_CmsFormWidget createWidget(Map<String, String> widgetParams) { return new CmsTextBox(); "," CmsWidgetFactoryRegistry.instance().registerFactory(WIDGET_TYPE, new I_CmsFormWidgetFactory() { public I_CmsFormWidget createWidget(Map<String, String> widgetParams) { return new CmsTextBox(); "
1, switch (event.type) { case SWT.Dispose: if (getShell() != popup.getParent()) { int selectionIndex = table.getSelectionIndex(); popup = null; table = null; createPopup(selectionIndex); , switch (event.type) { case SWT.Dispose: if (getShell() != popup.getParent()) { int XXXXX = table.getSelectionIndex(); popup = null; table = null; createPopup(XXXXX); 
0, int pieces = 0; switch(game.getAllPlayers().length) { case 1: case 2: pieces = 10; break; case 3: pieces = 9; break; case 4: pieces = 7; break; case 5: pieces = 6; break; case 6: pieces = 5; break; ," String result = getPattern(quantity).replaceAll(SIGN, sign); result = result.replaceAll(QUANTITY, String.valueOf(quantity)); result = result.replaceAll(UNIT, unit); return result; "
1," AttributeValueSimple av = (AttributeValueSimple) value; String text = "" ""; if (av != null && ReqIF10Util.getTheValue(av) != null) { text = ReqIF10Util.getTheValue(av).toString(); "," AttributeValueSimple XXXXX = (AttributeValueSimple) value; String XXXXX = "" ""; if (XXXXX != null && ReqIF10Util.getTheValue(XXXXX) != null) { XXXXX = ReqIF10Util.getTheValue(XXXXX).toString(); "
1," try { MBeanServer mbs = ManagementFactory.getPlatformMBeanServer(); ObjectName objName = new ObjectName(getObjectName(category, id)); if (mbs.isRegistered(objName)) { mbs.unregisterMBean(objName); "," try { MBeanServer XXXXX = ManagementFactory.getPlatformMBeanServer(); ObjectName XXXXX = new ObjectName(getObjectName(category, id)); if (XXXXX.isRegistered(XXXXX)) { XXXXX.unregisterMBean(XXXXX); "
0," Function f = ff.function(""setCRS"", ff.literal(g), ff.literal(DefaultGeographicCRS.WGS84)); Geometry sg = (Geometry) f.evaluate(null); assertEquals(DefaultGeographicCRS.WGS84, sg.getUserData()); "," final Long recordId = record.getId(); if (record.isActive()) { final Record anotherRecord = records.putIfAbsent(recordId, record); if (anotherRecord != null) { record = anotherRecord; "
1, boolean oldBusy = isBusy(); setBusy(false); try { if (contentProviderIsTreeBased) { TreePath treePath; if (widget instanceof Item) { treePath = getTreePathFromItem((Item) widget); , boolean XXXXX = isBusy(); setBusy(false); try { if (contentProviderIsTreeBased) { TreePath treePath; if (widget instanceof Item) { treePath = getTreePathFromItem((Item) widget); 
1, jvmChoice.store(); jvmBootClasspath.store(); jvmClasspath.store(); jvmParamaters.store(); debugModeEditor.store(); TomcatLauncherPlugin.getDefault().savePluginPreferences(); return true; , jvmChoice.store(); jvmBootClasspath.store(); jvmClasspath.store(); jvmParamaters.store(); debugModeEditor.store(); TomcatLauncherPlugin.getDefault().savePluginPreferences(); return true; 
0, DataBindingProcessorConfig config = new DataBindingProcessorConfig(); config.setConverters( new IConverter() { public Object convert( Object value ) { return Boolean.valueOf( (String) value ); ," this.out = out; switch (format) { case FORMAT_NEW: case FORMAT_NEW_CRC: case FORMAT_OLD_ASCII: case FORMAT_OLD_BINARY: break; default: throw new IllegalArgumentException(""Unknown format: ""+format); "
1," if (value != null) { sb.appendHtmlConstant(""<span title=\"""" + title + ""\"" "" + ""style=\""cursor: pointer;\"">""); sb.appendHtmlConstant(imagePrototype.getHTML()); sb.appendHtmlConstant(""</span>""); "," if (value != null) { sb.appendHtmlConstant(""<span title=\"""" + title + ""\"" "" + ""style=\""cursor: pointer;\"">""); sb.appendHtmlConstant(imagePrototype.getHTML()); sb.appendHtmlConstant(""</span>""); "
1," StringBuilder buffer = new StringBuilder(); buffer.append(""typeof(""); buffer.append(this.getChildNodes().get(0).toExpressionString()); buffer.append(')'); return buffer.toString(); "," StringBuilder XXXXX = new StringBuilder(); XXXXX.append(""typeof(""); XXXXX.append(this.getChildNodes().get(0).toExpressionString()); XXXXX.append(')'); return XXXXX.toString(); "
0, if (endField == null) { final DateFormatter dateFormatter = new DateFormatter(new SmartTimeFormat()); endField = new JFormattedTextField(dateFormatter); dateFormatter.install(endField); ," super(HttpObject.class); if (version < SpdyConstants.SPDY_MIN_VERSION || version > SpdyConstants.SPDY_MAX_VERSION) { throw new IllegalArgumentException( ""unsupported version: "" + version); "
0, final int prime = 31; int result = 1; result = prime * result + ((after == null) ? 0 : after.hashCode()); result = prime * result + ((before == null) ? 0 : before.hashCode()); return result; ," AuthoringHelper ah = new AuthoringHelper(QTIVersion.VERSION_1_2); Document document = XmlUtil.readDocument(fullFileName); log.debug(""Created doc.""); return ah.createImportedAssessment(document); "
1," gc.setForeground(styledTextForeground); gc.setAlpha(200); gc.setTransform(transform); int x1 = 0, y1 = 0, x2 = 0, y2 = 0; for (int i = 0; i < lineCount; i++) { if (monitor.isCanceled()) { return; "," gc.setForeground(styledTextForeground); gc.setAlpha(200); gc.setTransform(transform); XXXXXnt XXXXX = 0, y1 = 0, x2 = 0, y2 = 0; for (XXXXXnt XXXXX = 0; XXXXX < lXXXXXneCount; XXXXX++) { XXXXXf (monXXXXXtor.XXXXXsCanceled()) { return; "
1," Intent modIntent = new Intent(super.getIntent()); modIntent.putExtra(EXTRA_SHOW_FRAGMENT, ConfirmLockPasswordFragment.class.getName()); modIntent.putExtra(EXTRA_NO_HEADERS, true); return modIntent; "," Intent XXXXX = new Intent(super.getIntent()); XXXXX.putExtra(EXTRA_SHOW_FRAGMENT, ConfirmLockPasswordFragment.class.getName()); XXXXX.putExtra(EXTRA_NO_HEADERS, true); return XXXXX; "
1, this.batchSize = batchSize; this.nodeHost = nodeHost; this.publishAuthUser = publishAuthUser; this.publishAuthPassword = publishAuthPassword; this.publishProtocol = publishProtocol; , this.batchSize = batchSize; this.nodeHost = nodeHost; this.publishAuthUser = publishAuthUser; this.publishAuthPassword = publishAuthPassword; this.publishProtocol = publishProtocol; 
1," while(running){ AbstractAST stat = eval.getCurrentAST(); if(stat != null){ Count currentCount = data.get(stat); if(currentCount == null) data.put(stat, new Count()); else currentCount.increment(); "," while(running){ AbstractAST XXXXX = eval.getCurrentAST(); if(XXXXX != null){ Count XXXXX = data.get(XXXXX); if(XXXXX == null) data.put(XXXXX, new Count()); else XXXXX.increment(); "
1," String description = getCommandDescription(commandName); JCommander jc = findCommandByAlias(commandName); if (description != null) { out.append(indent).append(description); out.append(""\n""); "," String XXXXX = getCommandDescription(commandName); JCommander XXXXX = findCommandByAlias(commandName); if (XXXXX != null) { out.append(indent).append(XXXXX); out.append(""\n""); "
1, DiskManagerFileInfo fileInfo = (DiskManagerFileInfo)row.getDataSource(true); if (fileInfo.getAccessMode() == DiskManagerFileInfo.READ) { Utils.launch(fileInfo.getFile(true).toString()); , DiskManagerFileInfo XXXXX = (DiskManagerFileInfo)row.getDataSource(true); if (XXXXX.getAccessMode() == DiskManagerFileInfo.READ) { Utils.launch(XXXXX.getFile(true).toString()); 
0," try { assertEquals(""IndexCount returns unexpected number"", 0, lruIndex.indexCount()); lruIndex.clearIndex(); assertEquals(""IndexCount returns unexpected number"", 0, lruIndex.indexCount()); "," Object old=getAttribute(name); super.removeAttribute(name); for (int i=LazyList.size(contextFilters);i-->0;) ((JSR154Filter)LazyList.get(contextFilters, i)).attributeNotify(this,name,old,null); "
1, setLoginCount(loginCount); setLogoutCount(logoutCount); setLastLogin(lastLogin); setCreationDate(creationDate); setBalance(balance); setOpenBalance(openBalance); setProfileID(profileID); , setLoginCount(loginCount); setLogoutCount(logoutCount); setLastLogin(lastLogin); setCreationDate(creationDate); setBalance(balance); setOpenBalance(openBalance); setProfileID(profileID); 
1," SharedPreferences.Editor editor = mSettings.edit(); editor.putString(""hostname"", mHostname.getText().toString()); editor.putString(""port"", mPort.getText().toString()); editor.commit(); "," SharedPreferences.Editor editor = mSettings.edit(); editor.putString(""hostname"", mHostname.getText().toString()); editor.putString(""port"", mPort.getText().toString()); editor.commit(); "
0, if (graphComponent.isEnabled() && isEnabled() && !e.isConsumed() && first != null) { double deg = 0; Object cell = null; if (currentState != null) { cell = currentState.getCell(); , this.topTrace = TopTrace; this.bottomTrace = BottomTrace; this.rake = rake; this.mfd = mfd; this.floatRuptureFlag = floatRuptureFlag; this.tectReg = TectonicRegionType.SUBDUCTION_INTERFACE; 
0," for (int i = 0; i < 8; i++) { for (int j = 0; j < 8; j++) { if (twoTable[i][j] instanceof PieceLabel) { System.out.println(""i: "" + i + "" j: "" + j + "" "" + twoTable[i][j].getPiece()); "," Object valueObj = value.getValueObj(); if (valueObj instanceof Character) { Character character = (Character) valueObj; return new JIntLiteral(value.getSourceInfo(), character.charValue()); "
0, LttngEventField returnedField = null; String label = null; label = fParentEvent.getType().getFieldName(position); returnedField = (LttngEventField) this.getField(label); return returnedField; , if (aActionsLeft>0 && owner.getCardsFromHand(DomCardName.Tournament).size()>0 && owner.getCardsFromHand(DomCardName.Province).size()==1) return 40; return super.getDiscardPriority(aActionsLeft); 
0," final float centerX = view1.getWidth() / 2.0f; final float centerY = view1.getHeight() / 2.0f; Flip3dAnimation rotation; if (mIsFirstView) { rotation = new Flip3dAnimation(-90, 0, centerX, centerY); "," char[] src = input.toCharArray(); boolean[] transformed = new boolean[1]; transformed[0] = false; char[] dest = unshaped(src, transformed); if (transformed[0]) { return new String(dest); "
0, final ItemDefinition itemDefinition = addItem (); itemDefinition.setName ( name ); itemDefinition.setDirection ( Direction.OUT ); itemDefinition.setCallback ( callback ); return itemDefinition; , Content content = new Content(); switch (entry.charAt(0)) { case 'u': content.type = Content.USER; break; case 'f': content.type = Content.FILE; break; case 'd': content.type = Content.DIR; break; 
1," updateTimer.putExtra(""hours"", hours); updateTimer.putExtra(""minutes"", minutes); updateTimer.putExtra(""seconds"", seconds); updateTimer.putExtra(""position"", position); sendBroadcast(updateTimer); "," updateTimer.putExtra(""hours"", hours); updateTimer.putExtra(""minutes"", minutes); updateTimer.putExtra(""seconds"", seconds); updateTimer.putExtra(""position"", position); sendBroadcast(updateTimer); "
1," if (mrjVersion >= 4.0f) MRJ4EventProxy.getInstance().addPrintDocumentListener(l, source); else if (mrjVersion >= 1.5f) MRJ23EventProxy.getInstance().addPrintDocumentListener(l, source); "," if (mrjVersion >= 4.0f) MRJ4EventProxy.getInstance().addPrintDocumentListener(l, source); else if (mrjVersion >= 1.5f) MRJ23EventProxy.getInstance().addPrintDocumentListener(l, source); "
0," try { Mode mode = getExplorerMode(); mode.dockInto(structureViewTab); if (flag) { structureViewTab.open(); structureViewTab.setName(""AspectJ CrossRefs""); structureViewTab.requestActive(); ", int colNum = tColumn.getModelIndex(); switch (colNum) { case COL_LOADED: tColumn .setCellRenderer(new pcgen.gui.utils.JTableEx.AlignCellRenderer( SwingConstants.CENTER)); break; default: break; 
0," String oldFolder = folder; folder = newFolder; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, MailPackage.MAIL_CONSUMES__FOLDER, oldFolder, folder)); "," SwingUtilities.invokeLater(new Runnable() { public void run() { statusField.setValue(""Closed due to an exception""); EnhancedDebuggerWindow.connectionClosedOnError(EnhancedDebugger.this, e); "
1," Security security = _weakIdCache.get(bundle); if (security == null) { security = _underlying.getSecurity(bundle); if (security != null) { _weakIdCache.putIfAbsent(bundle, security); "," Security XXXXX = _weakIdCache.get(bundle); if (XXXXX == null) { XXXXX = _underlying.getSecurity(bundle); if (XXXXX != null) { _weakIdCache.putIfAbsent(bundle, XXXXX); "
1," if (!c.isInstance(stack.peek())) { throw new IllegalStateException(""Internal stack error: "" + ""Expected '"" + c.getName() + ""' found '"" + stack.peek().getClass().getName() + ""'""); "," if (!c.isInstance(stack.peek())) { throw new IllegalStateException(""Internal stack error: "" + ""Expected '"" + c.getName() + ""' found '"" + stack.peek().getClass().getName() + ""'""); "
0, Hashtable table = new Hashtable(); Node previous = null; Node current = head; while(current != null){ if(table.containsKey(current.getVal())){ previous.setNext(current.getNext()); ," boolean isGenerated = config.isGeneratedName(); apply(config.getPersistantData(), module); if (isGenerated && !JavaExecutionUtil.isNewName(config.getName())) { config.setGeneratedName(); "
1," Map<String, Resource> resources = children.get(address.getKey()); if (resources == null) { resources = new HashMap<String, Resource>(); children.put(address.getKey(), resources); "," Map<String, Resource> resources = children.get(address.getKey()); if (resources == null) { resources = new HashMap<String, Resource>(); children.put(address.getKey(), resources); "
1," Response org = SampleData.createResponse(); RegistryResponseType converted = EbXML30Converters.convert(org); Response copy = EbXML30Converters.convert(converted); assertEquals(org, copy); "," Response XXXXX = SampleData.createResponse(); RegistryResponseType XXXXX = EbXML30Converters.convert(XXXXX); Response XXXXX = EbXML30Converters.convert(XXXXX); assertEquals(XXXXX, XXXXX); "
1," String oldClazz = clazz; clazz = newClazz; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, Jsr181Package.JSR181_PROVIDES__CLAZZ, oldClazz, clazz)); "," String XXXXX = clazz; clazz = newClazz; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, Jsr181Package.JSR181_PROVIDES__CLAZZ, XXXXX, clazz)); "
0, super.update(); x = mFromX * (1 - mT) * (1 - mT) + mControlX * 2 * (1 - mT) * mT + mToX * mT * mT; y = mFromY * (1 - mT) * (1 - mT) + mControlY * 2 * (1 - mT) * mT + mToY * mT * mT; , final FakereplaceTransformer[] transformers = new FakereplaceTransformer[this.transformers.length + 1]; for (int i = 0; i < this.transformers.length; ++i) { transformers[i] = this.transformers[i]; 
1, if (mData != null) { Object[] otherData = other.getData(); if (mData.length == otherData.length) { for (int i = 0; i < mData.length; i++) { if (!mData[i].equals(otherData[i])) { return -1; , XXXXXf (mData != null) { Object[] otherData = other.getData(); XXXXXf (mData.length == otherData.length) { for (XXXXXnt XXXXX = 0; XXXXX < mData.length; XXXXX++) { XXXXXf (!mData[XXXXX].equals(otherData[XXXXX])) { return -1; 
1," ItemStack Result = event.getResult(); if(Result != null){ int id = Result.getTypeId(); if(!ItemCheckHandler.isItemAllowed(event.getFurnace().getWorld().getName(), id)){ event.setCancelled(true); "," ItemStack XXXXX = event.getXXXXX(); if(XXXXX != null){ int XXXXX = XXXXX.getTypeId(); if(!ItemCheckHandler.isItemAllowed(event.getFurnace().getWorld().getName(), XXXXX)){ event.setCancelled(true); "
0," super(2 + Math.max(String.valueOf(minimum).length(), String.valueOf(maximum).length())); this.minimum = minimum; this.maximum = maximum; this.stepsize = stepsize; this.negativeColor = negativeColor; "," if (charAt(value, index + 2) == 'H') { if (contains(value, index + 3, 2, ""OO"", ""ER"", ""EN"", ""UY"", ""ED"", ""EM"")) { if (contains(value, index + 3, 2, ""ER"", ""EN"")) { result.append(""X"", ""SK""); "
0, List<ExpMeta> metadados = new ArrayList<ExpMeta>(); for (int i = 0; i < gridTotais.getModelos().getColumnCount(); i++) { if (gridTotais.getModelos().isHidden(i)) { metadados.add(null); ," if (isLiveOrCompiled()) if(!this.getCapability(ALLOW_PATH_READ)) throw new CapabilityNotSetException(J3dI18N.getString(""Text3D8"")); return ((Text3DRetained)this.retained).getPath(); "
1," top.getBoxConstraints().setWidth(new SizeValue(""20px"")); top.getBoxConstraints().setHorizontalAlign(HorizontalAlign.right); performLayout(); assertBox(top.getBox(), 620, 0, 20, 240); "," top.getBoxConstraints().setWidth(new SizeValue(""20px"")); top.getBoxConstraints().setHorizontalAlign(HorizontalAlign.right); performLayout(); assertBox(top.getBox(), 620, 0, 20, 240); "
0," btnOK.setEnabled(true && isRunning); btnCancel.setEnabled(true && isRunning); lblApprovalInfo.setText(""Error: "" + caught.getMessage()); lblApprovalInfo.setStyleName(""info-error""); ", if (myChangeInfo instanceof JavaChangeInfoImpl) { return myChangeInfo.isExceptionSetOrOrderChanged() && !((JavaChangeInfoImpl)myChangeInfo).propagateExceptionsMethods.contains(caller); 
1," if (node instanceof Group) { Enumeration<?> enumeration = ((Group)node).getAllChildren(); while (enumeration.hasMoreElements ()) { updateShapeAppearance((Node)enumeration.nextElement(), appearance); "," if (node instanceof Group) { Enumeration<?> enumeration = ((Group)node).getAllChildren(); while (enumeration.hasMoreElements ()) { updateShapeAppearance((Node)enumeration.nextElement(), appearance); "
1," FlexoComponentLibrary newLibrary = new FlexoComponentLibrary(project); if (logger.isLoggable(Level.INFO)) { logger.info(""createNewComponentLibrary(), project="" + project + "" "" + newLibrary); "," FlexoComponentLibrary XXXXX = new FlexoComponentLibrary(project); if (logger.isLoggable(Level.INFO)) { logger.info(""createNewComponentLibrary(), project="" + project + "" "" + XXXXX); "
1," if (fails(property)) { return Collections.singletonList(new DefaultOWLTestResult(""The symmetricity of a property should also hold for its inverse."", property, OWLTestResult.TYPE_WARNING, this)); "," if (fails(property)) { return Collections.singletonList(new DefaultOWLTestResult(""The symmetricity of a property should also hold for its inverse."", property, OWLTestResult.TYPE_WARNING, this)); "
0, List<JpsModuleSourceRoot> toRemove = new ArrayList<JpsModuleSourceRoot>(); for (JpsSourceFolder folder : mySourceFolders) { toRemove.add(folder.getSourceRoot()); Disposer.dispose(folder); ," double dx = this.averageDelta.getX(); double dy = this.averageDelta.getY(); if(Math.abs(dx) < .001 && Math.abs(dy) < .001) { done = true; System.err.println(""done, dx=""+dx+"", dy=""+dy); "
1, Item cur = map.get(key); if (cur != null) { cur.value = value; if (validTime >= 0) cur.expires = System.currentTimeMillis() + validTime; else cur.expires = Long.MAX_VALUE; moveToHead(cur); return; , Item XXXXX = map.get(key); if (XXXXX != null) { XXXXX.value = value; if (validTime >= 0) XXXXX.expires = System.XXXXXrentTimeMillis() + validTime; else XXXXX.expires = Long.MAX_VALUE; moveToHead(XXXXX); return; 
1, if (mrjVersion >= 4.0f) return MRJ4EventProxy.getInstance().isPreferencesEnabled(); else if (mrjVersion >= 3.0f) return MRJ23EventProxy.getInstance().isPreferencesEnabled(); return false; , if (mrjVersion >= 4.0f) return MRJ4EventProxy.getInstance().isPreferencesEnabled(); else if (mrjVersion >= 3.0f) return MRJ23EventProxy.getInstance().isPreferencesEnabled(); return false; 
0, final int prime = 31; int result = 1; result = prime * result + ((name == null) ? 0 : name.hashCode()); result = prime * result + ((pkgNames == null) ? 0 : pkgNames.hashCode()); return result; ," setJdbcDriver(driver); setJdbcUrl(jdbcCon); setJdbcUsername(usr); setJdbcPassword(psw); l.debug(""Loading JDBC driver "" + jdbcDriver); try { Class.forName(jdbcDriver).newInstance(); "
0," List<String> badCookieDomains = ImmutableList.of(""co.uk"", ""foo"", ""com""); for (String domain : badCookieDomains) { try { InternetDomainName.from(domain).topPrivateDomain(); fail(domain); ", TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(WikiTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; 
1, FamiliarData current = KoLCharacter.getFamiliar(); int id = FamiliarDatabase.getFamiliarByImageLocation( image ); if ( id == current.getId() ) { KoLCharacter.resetEffectiveFamiliar(); , FamiliarData XXXXX = KoLCharacter.getFamiliar(); int XXXXX = FamiliarDatabase.getFamiliarByImageLocation( image ); if ( XXXXX == XXXXX.getId() ) { KoLCharacter.resetEffectiveFamiliar(); 
1, armed = true; OpennetManager om = node.getOpennet(); if(om != null) { if(om.waitingForUpdater()) { synchronized(this) { if(gotJarTime > 0) gotJarTime = System.currentTimeMillis(); , armed = true; OpennetManager om = node.getOpennet(); if(om != null) { if(om.waitingForUpdater()) { synchronized(this) { if(gotJarTime > 0) gotJarTime = System.currentTimeMillis(); 
0, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(DocumentLibraryTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; ," boolean retVal = visitor.Visit(taskInfo, this); if (!retVal) { for (VdcActionParametersBase parameters : getImagesParameters()) { retVal = parameters.Accept(taskInfo, visitor); if (retVal) { break; "
1," StatusSummary summary = fixup(); if ( summary != null ){ String str =summary.getURL().toExternalForm(); int pos = str.indexOf( '?' ); if ( pos != -1 ){ str = str.substring( 0, pos ); "," StatusSummary summary = fixup(); if ( summary != null ){ String str =summary.getURL().toExternalForm(); int pos = str.indexOf( '?' ); if ( pos != -1 ){ str = str.substring( 0, pos ); "
0," WOStatsPage nextPage = (WOStatsPage) pageWithName(ERXStatisticsPage.class.getName()); nextPage.password = ERXProperties.stringForKey(""WOStatisticsPassword""); return nextPage.submit(); "," XaDataSource datasource = graphdb.getXaDataSourceManager().getXaDataSource( name ); if ( datasource == null ) throw new NullPointerException( ""Could not access "" + name ); return datasource; "
1, tracker.process(frame); totalProcessed++; if( totalProcessed == 1 ) { tracker.spawnTracks(); tracker.setKeyFrame(); worldToKey.set(worldToInit); worldToCurr.set(worldToInit); return true; , tracker.process(frame); totalProcessed++; if( totalProcessed == 1 ) { tracker.spawnTracks(); tracker.setKeyFrame(); worldToKey.set(worldToInit); worldToCurr.set(worldToInit); return true; 
0," doc = new Document(""import os\n"" + ""print os.__file__\n"" + ""print os.__name__\n""); analyzer = new OccurrencesAnalyzer(); msgs = analyzeDoc(); printMessages(msgs); assertEquals(0, msgs.length); "," myArea = area; myContext.setArea(area); myToolProvider = provider; tree.setDragEnabled(true); tree.setTransferHandler(new TreeTransfer()); tree.setDropTarget(new DropTarget(tree, this)); "
0," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; ", final int prime = 31; int result = 1; result = prime * result + ((path == null) ? 0 : path.hashCode()); result = prime * result + ((value == null) ? 0 : value.hashCode()); return result; 
1," try { URL url = PropUtils.getResourceOrFileOrURL(SymbolReferenceLibrary.class, propertiesResource); Properties props = new Properties(); props.load(url.openStream()); return props; "," try { URL XXXXX = PropUtils.getResourceOrFileOrURL(SymbolReferenceLibrary.class, propertiesResource); Properties XXXXX = new Properties(); XXXXX.load(XXXXX.openStream()); return XXXXX; "
0," String response = null; if (message.equals(""5910ffffffffff01ffffffff0000b700"")) { response = ""5910ffffffffff01ffffffff200000010b0100030b0100070e00000b0e0000100b2000110b2001000400010105009800""; ", final String normalizedSign = pSign.toUpperCase().trim(); IVRPElement out; try{ switch(pTableID){ case VRP_DE.ID: out = VRP_DE.valueOf(normalizedSign); break; default: return null; 
1, if (GbeanRef.class.isInstance(anItem) || JAXBElement.class.isInstance(anItem)) { getObjectContainer().remove(anItem); JAXBModelUtils.getGbeanRefs(getRootElement()).remove(anItem); , if (GbeanRef.class.isInstance(anItem) || JAXBElement.class.isInstance(anItem)) { getObjectContainer().remove(anItem); JAXBModelUtils.getGbeanRefs(getRootElement()).remove(anItem); 
1," Object oldFilter = filter; filter = newFilter; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, WfsvPackage.DIFFERENCE_QUERY_TYPE__FILTER, oldFilter, filter)); "," Object XXXXX = filter; filter = newFilter; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, WfsvPackage.DIFFERENCE_QUERY_TYPE__FILTER, XXXXX, filter)); "
1, DefaultMutableTreeNode node = (DefaultMutableTreeNode)value; DBTreeNode nodeObject = (DBTreeNode)(node.getUserObject()); if(nodeObject.getType() == Type.CATALOG) return true; return false; , DefaultMutableTreeNode XXXXX = (DefaultMutableTreeNode)value; DBTreeNode XXXXXObject = (DBTreeNode)(XXXXX.getUserObject()); if(XXXXXObject.getType() == Type.CATALOG) return true; return false; 
1, String variabilityIdentifer = FeatureSCProperties.PROPERTY_TYPE_VARIABILITY_GENERATED; nameVariabilityProperty = FeatureSCProperties.getInstance().getString(variabilityIdentifer); , String XXXXX = FeatureSCProperties.PROPERTY_TYPE_VARIABILITY_GENERATED; nameVariabilityProperty = FeatureSCProperties.getInstance().getString(XXXXX); 
1," checkPropertyFile(); if (layer.getResource() == null) { LOGGER.log(Level.FINE, ""Layer "" + layer + "" has no attached resource, "" + ""assuming it's possible to access it""); return true; "," checkPropertyFile(); if (layer.getResource() == null) { LOGGER.log(Level.FINE, ""Layer "" + layer + "" has no attached resource, "" + ""assuming it's possible to access it""); return true; "
1," String type = message.getString(""type""); if (type.equals(BloombergFutureCurveInstrumentProviderFudgeBuilder.TYPE)) { return _bloombergFutureBuilder.buildObject(deserializer, message); "," String XXXXX = message.getString(""XXXXX""); if (XXXXX.equals(BloombergFutureCurveInstrumentProviderFudgeBuilder.TYPE)) { return _bloombergFutureBuilder.buildObject(deserializer, message); "
1, BasicConfigurator.configure(); Logger.getRootLogger().setLevel(Level.TRACE); ModelTestUtils.resetTestDb(); ModelTestUtils.createModel(null); em = ModelTestUtils.createEntityManager(); , BasicConfigurator.configure(); Logger.getRootLogger().setLevel(Level.TRACE); ModelTestUtils.resetTestDb(); ModelTestUtils.createModel(null); em = ModelTestUtils.createEntityManager(); 
0," try { ContentHandler databaseInserter = doc.setContentAsSAX(); (new TabularXMLReader()).writeDocument(databaseInserter); root.storeResource(doc); querySingleLine("""", ""testQueryStoreContentAsSAX""); "," Fixture.fakeNewRequest( display ); Fixture.fakeSetParameter( getId( fileUpload ), ""fileName"", """" ); Fixture.executeLifeCycleFromServerThread( ); assertEquals( null, fileUpload.getFileName() ); "
0," int initialActionListenerCount = numberOfActionListeners(radioButton); recorder.componentShown(radioButton); assertEquals(initialActionListenerCount + 1, numberOfActionListeners(radioButton)); ", classe.setProdTipoId(Integer.valueOf(hdnCod.getValueAsString())); classe.setProdTipoValor(txtValor.getValueAsString()); classe.setProdTipoDescricao(txtDescricao.getValueAsString()); return true; 
1," StringBuilder sb = new StringBuilder(); sb.append(""{""); if (bucket != null) sb.append(""Bucket: "" + bucket + "", ""); if (prefix != null) sb.append(""Prefix: "" + prefix + "", ""); sb.append("""," StringBuilder XXXXX = new StringBuilder(); XXXXX.append(""{""); if (bucket != null) XXXXX.append(""Bucket: "" + bucket + "", ""); if (prefix != null) XXXXX.append(""Prefix: "" + prefix + "", ""); XXXXX.append("""
0, switch ( command ) { case ADD : for ( int i = 0; i < bpListeners.size( ); i++ ) { VMBreakPointListener bpListener = (VMBreakPointListener) bpListeners.get( i ); bpListener.breakPointAdded( bp ); ," SharedPreferences preferences = mContext.getSharedPreferences(PREFERENCES_BACKUP, Activity.MODE_PRIVATE); return preferences.getInt(PREFERENCES_BACKUP_FREQUENCY, DEFAULT_BACKUP_FREQUENCY); "
0, super(parent); this.source = source; this.target = target; Edge edge = NotationFactory.eINSTANCE.createEdge(); edge.setElement(domainElement); decorator.decorateView(edge); setCreatedView(edge); ," long electionDelayTime = conf.getLong(""distributed.manager.election.delay.time"", Long.MAX_VALUE); if (electionDelayTime < 0) electionDelayTime = Long.MAX_VALUE; return electionDelayTime; "
1," this.model = model; this.samlConversationModel = new FilteredConversationModel(model, model.getConversationModel()) { public boolean shouldFilter(ConversationID id) { return !isSAMLMessage(id); "," this.model = model; this.samlConversationModel = new FilteredConversationModel(model, model.getConversationModel()) { public boolean shouldFilter(ConversationID id) { return !isSAMLMessage(id); "
1," MonthDay test = new MonthDay(9, 6); MonthDay result = test.withFieldAdded(DurationFieldType.months(), 1); assertEquals(new MonthDay(9, 6), test); assertEquals(new MonthDay(10, 6), result); "," MonthDay XXXXX = new MonthDay(9, 6); MonthDay XXXXX = XXXXX.withFieldAdded(DurationFieldType.months(), 1); assertEquals(new MonthDay(9, 6), XXXXX); assertEquals(new MonthDay(10, 6), XXXXX); "
1," fRefreshAction = new Action(""refresh"") { public void run() { BusyIndicator.showWhile(fTreeViewer.getTree().getDisplay(), new Runnable() { public void run() { refresh(fTreeViewer.getInput()); "," fRefreshAction = new Action(""refresh"") { public void run() { BusyIndicator.showWhile(fTreeViewer.getTree().getDisplay(), new Runnable() { public void run() { refresh(fTreeViewer.getInput()); "
0," InternationalString result = clock1.getReferenceEvent(); ((DefaultClock) clock1).setReferenceEvent(new SimpleInternationalString("""")); assertFalse(clock1.getReferenceEvent().equals(result)); "," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "
1, UserDTO user = new UserDTO(1); user.setCompany(new CompanyDTO(1)); OrderDTO order = new OrderDTO(); order.setBaseUserByUserId(user); order.setOrderPeriod(new OrderPeriodDTO(2)); return order; , UserDTO XXXXX = new UserDTO(1); XXXXX.setCompany(new CompanyDTO(1)); OrderDTO XXXXX = new OrderDTO(); XXXXX.setBaseUserByUserId(XXXXX); XXXXX.setOrderPeriod(new OrderPeriodDTO(2)); return XXXXX; 
0," NodeRef person = repositoryHelper.getPerson(); if (person == null) { throw new IllegalStateException(""Person details required but none found! Running as "" + AuthenticationUtil.getRunAsUser()); ", final int prime = 31; int result = 1; result = prime * result + ((event == null) ? 0 : event.hashCode()); result = prime * result + (int) (taskId ^ (taskId >>> 32)); return result; 
0, int k = guiLeft; int l = guiTop; i -= k; j -= l; return i >= slot.xDisplayPosition - 1 && i < slot.xDisplayPosition + 16 + 1 && j >= slot.yDisplayPosition - 1 && j < slot.yDisplayPosition + 16 + 1; ," try { this.reloadContentPageMapper(); Logger log = ApsSystemUtils.getLogger(); if (log.isLoggable(Level.FINEST)) { log.info(""Notificato modifica pagina "" + event.getPage().getCode()); "
0," FutureSecurityFudgeBuilder.fromFudgeMsg(deserializer, msg, object); object.setUnderlyingId(ExternalIdFudgeBuilder.fromFudgeMsg(deserializer, msg.getMessage(UNDERLYING_IDENTIFIER_FIELD_NAME))); "," SequenceAsStringHelper<C> sequenceAsStringHelper = new SequenceAsStringHelper<C>(); return sequenceAsStringHelper.getSequenceAsString(this.parsedCompounds, compoundSet, begin, end, strand); "
0," Builder builder = new Builder(""issue.comment.create.VIEW""); builder.repo(repoId); builder.add(EXTRA_ISSUE_NUMBER, issueNumber); builder.add(EXTRA_USER, user); return builder.toIntent(); ", AnnouncementsDelivery announcementsDelivery = new AnnouncementsDeliveryImpl(); announcementsDelivery.setNew(true); announcementsDelivery.setPrimaryKey(deliveryId); return announcementsDelivery; 
0, this.query = paramQuery.getQuery(); this.queryPartsArray = paramQuery.getQueryPartsArray(); paramCount = queryPartsArray.length - 1; parameters = new ParameterHolder[paramCount]; , super.performDefaults(); fListViewer.refresh(); handleSyntaxColorListSelection(); uninstallSemanticHighlighting(); installSemanticHighlighting(); fPreviewViewer.invalidateTextPresentation(); 
0," if ( separator != null && separator.length() > 1 ) { throw new InvalidImportConfigException( this.getName(), ""Separator can only be one character long, was: '"" + separator + ""'"" ); ", switch (featureID) { case RifPackage.CHILDREN_TYPE3__GROUP: return group != null && !group.isEmpty(); case RifPackage.CHILDREN_TYPE3__SPECHIERARCHY: return !getSPECHIERARCHY().isEmpty(); 
1," BlockingGetContentResponseHandler responseHandler = new BlockingGetContentResponseHandler(); taskService.getContent(contentId, responseHandler); try { responseHandler.waitTillDone(timeout); "," BlockingGetContentResponseHandler XXXXX = new BlockingGetContentResponseHandler(); taskService.getContent(contentId, XXXXX); try { XXXXX.waitTillDone(timeout); "
1, switch (getDBType(em)) { case db2: assertLockTestSQLs(Select + tableLfName + Where + DB2Lock); break; case oracle: case derby: default: assertLockTestSQLs(Select + tableLfName + Where + ForUpdate); , switch (getDBType(em)) { case db2: assertLockTestSQLs(Select + tableLfName + Where + DB2Lock); break; case oracle: case derby: default: assertLockTestSQLs(Select + tableLfName + Where + ForUpdate); 
0, mCheck = true; resumedUploadHandler = new Handler(); try { Runnable mEnableTask = new Runnable() { public void run() { if (mCheck==false) { resumedUploadHandler.removeCallbacks(this); return; , Throwable top = t; if ( t instanceof DebugException ) { DebugException de = (DebugException) t; IStatus status = de.getStatus(); if ( status.getException() != null ) { top = status.getException(); 
0," DockLayoutComposition result = modifiedRoots.get( root ); if( result == null ){ result = replaceMultipleDockables( frontend, this, super.getRoot( root ) ); modifiedRoots.put( root, result ); ", StatisticsController controller = Lookup.getDefault().lookup(StatisticsController.class); final StatisticsUI[] uis = getUI(statistics); for (StatisticsUI s : uis) { s.setup(statistics); 
0," try { projection.addMasterDocumentRange(20, 20); projection.addMasterDocumentRange(60, 20); projection.addMasterDocumentRange(100, 20); projection.addMasterDocumentRange(140, 20); "," if (SanityManager.DEBUG) { StringBuffer sb = new StringBuffer(); for( Iterator it = grantees.iterator(); it.hasNext();) { if( sb.length() > 0) sb.append( "",""); sb.append( it.next().toString()); "
1, try { if (fileUploadHolder != null) { fileUploadHolder.setTempFile(uploadEvent.getUploadItem().getFile()); fileUploadHolder.setFileName(uploadEvent.getUploadItem().getFileName()); , try { if (fileUploadHolder != null) { fileUploadHolder.setTempFile(uploadEvent.getUploadItem().getFile()); fileUploadHolder.setFileName(uploadEvent.getUploadItem().getFileName()); 
0, super(s); _longValue = s.toLongValue(); _doubleValue = s.toDoubleValue(); _string = s.toString(); _valueType = s.getValueType(); _compiledHashCode = s.hashCode(); _key = s.toKey(); ," for (int i = 0; i < sign.getNumLines(); i++) { String line = sign.getLine(i); if (line.toLowerCase().contains(""[station"")) { String val[] = line.split("":""); if (val.length != 2) { continue; "
0," PreparedStatement p = null; try { p = JForumExecutionContext.getConnection().prepareStatement( SystemGlobals.getSql(""TopicModel.decrementTotalReplies"")); p.setInt(1, topicId); p.executeUpdate(); "," int nSize = 0; int nPrefixSize = 0; String paramName = elem.getAttributeValue(""out""); String size = elem.getAttributeValue(""size""); if(size != null) { nSize = Integer.parseInt(size); "
1," String oldLONGNAME = lONGNAME; lONGNAME = newLONGNAME; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, RifPackage.SPECHIERARCHY__LONGNAME, oldLONGNAME, lONGNAME)); "," String oldLONGNAME = lONGNAME; lONGNAME = newLONGNAME; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, RifPackage.SPECHIERARCHY__LONGNAME, oldLONGNAME, lONGNAME)); "
0," logger.warn(""Please use getCloseConnectionWatchTimeoutInMs in place of getCloseConnectionWatchTimeout. This method has been deprecated.""); return this.closeConnectionWatchTimeoutInMs; "," initComponents(); fillPanelWithCheckBoxes(exportEdgeColumnsContentPanel, GephiUtils.edgeColumnNames()); fillPanelWithCheckBoxes(exportNodeColumnsContentPanel, GephiUtils.nodeColumnNames()); "
1, TestSuite testSuite = new TestSuite(); testSuite.addTest(PageLayoutTests.suite()); testSuite.addTest(PageScopeTests.suite()); testSuite.addTest(UserGroupTests.suite()); return testSuite; , TestSuite XXXXX = new TestSuite(); XXXXX.addTest(PageLayoutTests.suite()); XXXXX.addTest(PageScopeTests.suite()); XXXXX.addTest(UserGroupTests.suite()); return XXXXX; 
1," super(state.getName(), InvalidArtifactType.getInstance(), false, PackagingElementFactory.getInstance().createArtifactRootElement(), """"); myState = state; myErrorMessage = errorMessage; "," super(state.getName(), InvalidArtifactType.getInstance(), false, PackagingElementFactory.getInstance().createArtifactRootElement(), """"); myState = state; myErrorMessage = errorMessage; "
0," if (id != POICODE_ID_UNDEFINED) { int sep = type.indexOf(POICODE_SEPARATOR); if (sep >= 0) { String name = type.substring(sep + POICODE_SEPARATOR.length()); return name.replaceAll(""_"", "" ""); "," if (isLiveOrCompiled()) if(!this.getCapability(ALLOW_ALIGNMENT_WRITE)) throw new CapabilityNotSetException(J3dI18N.getString(""Text3D7"")); ((Text3DRetained)this.retained).setAlignment(alignment); "
1, if (file.isDirectory()) { File[] children = file.listFiles(); if (children != null) { for (int i = 0; i < children.length; i++) { if (!recursiveDelete(children[i])) { return false; , XXXXXf (fXXXXXle.XXXXXsDXXXXXrectory()) { FXXXXXle[] chXXXXXldren = fXXXXXle.lXXXXXstFXXXXXles(); XXXXXf (chXXXXXldren != null) { for (XXXXXnt XXXXX = 0; XXXXX < chXXXXXldren.length; XXXXX++) { XXXXXf (!recursXXXXXveDelete(chXXXXXldren[XXXXX])) { return false; 
0, super(); this.collection = collection; this.query = query; this.fields = fields; this.sort = sort; this.remove = remove; this.update = update; this.returnNew = returnNew; this.upsert = upsert; ," StringBuffer str = new StringBuffer(); str.append(""[VCs=""); str.append( getCircuitCount()); str.append( ""/""); str.append( getMaximumVirtualCircuits()); str.append( ""]""); return str.toString(); "
0," Cookie[] cookies = new Cookie[0]; RestState state = new RestState(cookies, ""abc""); assertThat(state.getCookies()).isSameAs(cookies); assertThat(state.getServer()).isEqualTo(""abc""); "," if(!container.ext().isStored(inserter)) { if(InsertCompressor.logMINOR) Logger.minor(this, ""Already deleted (start compression): ""+inserter+"" for ""+InsertCompressor.this); return false; "
0," String result = """"; try { Pattern p = Pattern.compile(patternText, flag); Matcher m = p.matcher(text); StringBuffer sb = new StringBuffer(); while ( m.find() ){ m.appendReplacement(sb, """"); break; ", boolean currentVisibility = this.getLayer().isVisible(); this.getLayer().setVisible(!currentVisibility); this.getVisualisationComponent().setSelected(this.getLayer().isVisible()); 
1, this.setBackgroundColor( Display.getCurrent( ) .getSystemColor( SWT.COLOR_LIST_BACKGROUND ) ); this.setForegroundColor( Display.getCurrent( ) .getSystemColor( SWT.COLOR_BLUE ) ); , this.setBackgroundColor( Display.getCurrent( ) .getSystemColor( SWT.COLOR_LIST_BACKGROUND ) ); this.setForegroundColor( Display.getCurrent( ) .getSystemColor( SWT.COLOR_BLUE ) ); 
1," URI id = attribute.getId(); if(id.equals(XACMLConstants.RESOURCE_CATEGORY_ATTRIBUTE)) { List retain = new ArrayList(2); retain.add(""=""); retain.add(""equals""); functions.retainAll(retain); "," URI XXXXX = attribute.getId(); if(XXXXX.equals(XACMLConstants.RESOURCE_CATEGORY_ATTRIBUTE)) { List XXXXX = new ArrayList(2); XXXXX.add(""=""); XXXXX.add(""equals""); functions.XXXXXAll(XXXXX); "
1," super(cluster, executor); this.httpClient = httpClient; this.readOnlyMgmtPath = readOnlyMgmtPath; this.deleteFailedFetch = deleteFailedFetch; this.rollbackFailedSwap = rollbackFailedSwap; "," super(cluster, executor); this.httpClient = httpClient; this.readOnlyMgmtPath = readOnlyMgmtPath; this.deleteFailedFetch = deleteFailedFetch; this.rollbackFailedSwap = rollbackFailedSwap; "
1," return (IssueType) this.em.createNamedQuery(IssueType.NQ_FIND_BY_NAME) .setParameter(""pClientId"", Session.user.get().getClientId()) .setParameter(""pName"", name).getSingleResult(); "," return (IssueType) this.em.createNamedQuery(IssueType.NQ_FIND_BY_NAME) .setParameter(""pClientId"", Session.user.get().getClientId()) .setParameter(""pName"", name).getSingleResult(); "
0," try { BufferedReader reader = new BufferedReader(new FileReader(file)); String line; while ((line = reader.readLine()) != null) { if (line.matches(""^def.*test.*():"")) { reader.close(); return true; ", synchronized (channel) { TransportData transportData = channel.getTransportData(); if (transportData == null) { transportData = new TransportData(); channel.setTransportData(transportData); 
1," super(""Object Editor""); addWindowListener(new winExit()); setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE); MultiLineToolTipUI.initialize(); this.entryInformation = entryInformation; "," super(""Object Editor""); addWindowListener(new winExit()); setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE); MultiLineToolTipUI.initialize(); this.entryInformation = entryInformation; "
1," ByteArrayOutputStream baos = new ByteArrayOutputStream(); Writer w = new PrintWriter(baos); try { XMLWriter xw = new XMLWriter(w, new OutputFormat("" "", true)); xw.write(e); w.flush(); "," ByteArrayOutputStream XXXXX = neXXXXX ByteArrayOutputStream(); Writer XXXXX = neXXXXX PrintWriter(XXXXX); try { XMLWriter xXXXXX = neXXXXX XMLWriter(XXXXX, neXXXXX OutputFormat("" "", true)); xXXXXX.XXXXXrite(e); XXXXX.flush(); "
1, super.onCreate(savedInstanceState); mHandler = new Handler(); Bundle extras = this.getIntent().getExtras(); queueUrl = extras.getString(SimpleQueue.QUEUE_URL); startPopulateList(); , super.onCreate(savedInstanceState); mHandler = new Handler(); Bundle extras = this.getIntent().getExtras(); queueUrl = extras.getString(SimpleQueue.QUEUE_URL); startPopulateList(); 
0," if (selection instanceof IStructuredSelection) { IStructuredSelection sel= (IStructuredSelection) selection; Object o= sel.getFirstElement(); if (o instanceof IFile) launch((IFile) o, mode); ", imports = findImports(classReference); isATest = !isAbstract(classReference) && isAJUnitTest(classReference) && canInstantiate(classReference); className = classReference.getName(); 
1, Response response = null; final long start = System.currentTimeMillis(); long end = start; try { while (end - start < millis) { response = (Response) get(); if (response != null) { break; , Response XXXXX = null; final long XXXXX = System.currentTimeMillis(); long XXXXX = XXXXX; try { while (XXXXX - XXXXX < millis) { XXXXX = (Response) get(); if (XXXXX != null) { break; 
1, IDocument document = this.getDocumentProvider().getDocument(this.getEditorInput()); if (document instanceof IntentEditorDocument) { return (EObject)((IntentEditorDocument)document).getAST(); , IDocument XXXXX = this.getDocumentProvider().getDocument(this.getEditorInput()); if (XXXXX instanceof IntentEditorDocument) { return (EObject)((IntentEditorDocument)XXXXX).getAST(); 
0," tag = HTML.Tag.BR; assertEquals(""br"", tag.toString()); assertTrue(""breaks Flow"", tag.breaksFlow()); assertFalse(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); ", final int prime = 31; int result = 1; result = prime * result + ((m_cause == null) ? 0 : m_cause.hashCode()); result = prime * result + ((m_target == null) ? 0 : m_target.hashCode()); return result; 
1, String id = part.getSite().getId(); if (part instanceof IViewPart) { String secondaryId = ((IViewPart) part).getViewSite() .getSecondaryId(); if (secondaryId != null) { id = id + ':' + secondaryId; , String id = part.getSite().getId(); if (part instanceof IViewPart) { String secondaryId = ((IViewPart) part).getViewSite() .getSecondaryId(); if (secondaryId != null) { id = id + ':' + secondaryId; 
1," this._timestamp = -1; this._responseTime = -1; this._totalResponseTime = -1; this._numObservations = -1; this._operationName = """"; this._operationRequest = """"; this._generatedDuring = """"; "," this._timestamp = -1; this._responseTime = -1; this._totalResponseTime = -1; this._numObservations = -1; this._operationName = """"; this._operationRequest = """"; this._generatedDuring = """"; "
1," float red = 1; float green = 1; if(conflictScore < 0) green = (1 + conflictScore) * green; else if(conflictScore > 0) red = (1 - conflictScore) * red; return new Color(red, green, 0); "," float XXXXX = 1; float XXXXX = 1; if(conflictScore < 0) XXXXX = (1 + conflictScore) * XXXXX; else if(conflictScore > 0) XXXXX = (1 - conflictScore) * XXXXX; return new Color(XXXXX, XXXXX, 0); "
0," Maker maker = (Maker) makers.get(node.getClass()); if (maker == null) { if (FOElementMapping.URI.equals(node.getNamespaceURI())) { LOG.error(""No LayoutManager maker for class "" + node.getClass()); "," Matcher matcher = BASE_OR_REGEX_PATTERN.matcher(name); if (!matcher.matches()) { throw new IllegalArgumentException(""string "" + name + "" isn't a path that parseVersionNumber can parse!""); "
0," if (e.getStateChange() == ItemEvent.SELECTED && relationComboBox.getClientProperty(""adjusting"") == null) { changeRelation(_ganttChart, (Integer) relationComboBox.getSelectedItem()); "," URI resourceURI = EditUIUtil.getURI(getEditorInput()); Exception exception = null; Resource resource = null; try { resource = editingDomain.getResourceSet().getResource(resourceURI, true); "
0," if (ccServiceInstance == null) { String msg = ""Before activating Carbon UI bundle, an instance of "" + ""UserRealm service should be in existence""; log.error(msg); throw new RuntimeException(msg); ", questionnaireValidator.validateForDefineQuestion(questionDto); QuestionEntity questionEntity = questionnaireMapper.mapToQuestion(questionDto); return createQuestion(questionEntity); 
0," if (locked) throw new IllegalArgumentException( ""Cannot add a consent to a locked list. Has the list been accessd already?""); if (consentList.isEmpty()) { consentList.add(consent); return; ", IMemoryBlock memoryBlock = getMemoryBlock(); IMemoryRenderingUpdater managedMB = null; if (memoryBlock instanceof IMemoryRenderingUpdater) { managedMB = (IMemoryRenderingUpdater)memoryBlock; 
0," if (alpha) { WritableRaster raster = Raster.createInterleavedRaster(DataBuffer.TYPE_BYTE, width, height, 4, null); return new BufferedImage(glColorModelAlpha, raster, false, new Hashtable()); "," BeanSort sort = new BeanSort(agentsWithAccess, sortPropertyWith); sort.toStringSort(); agentsWithAccess = sortAscendingWith ? (ArrayList)sort.sort() : (ArrayList)sort.sortDesc(); "
0," return (Boolean)execute(new RedisCallback<Jedis>() { public Object doInRedis(Jedis redis) { if (transaction != null) { return transaction.setnx(redisKey, o.toString()).equals(QUEUED); "," long delay = getNextRunDelay(); if (_log.shouldLog(Log.DEBUG)) _log.debug(""Updating exploration schedule with a delay of "" + delay); getTiming().setStartAfter(getContext().clock().now() + delay); "
0," Dimension d = Toolkit.getDefaultToolkit().getScreenSize(); Dimension dim = new Dimension((int) d.getWidth() * determinator / coefficent, (int) d.getHeight() * determinator / coefficent); return dim; ", JConstructor noArgCtor = null; for (JMethod ctor : classType.getMethods()) { if (ctor instanceof JConstructor) { if (ctor.getParams().size() == 0) { noArgCtor = (JConstructor) ctor; break; 
1, return new TestRunnable() { final FastRandom _rand = new FastRandom( seed ); public int runIteration( int run ) throws IOException { return ( _rand.nextInt(7) == 0 ) ? write() : read(); , return new TestRunnable() { final FastRandom XXXXX = new FastRandom( seed ); public int runIteration( int run ) throws IOException { return ( XXXXX.nextInt(7) == 0 ) ? write() : read(); 
0," try { IntegerAttributeDefinition numProcsAttrDef = getJobNumProcsAttrDef(); configuration.setAttribute(SLURMLaunchConfiguration.ATTR_NUMPROCS, numProcsAttrDef.create().getValue()); "," File[] paletteSubDirectories = getPaletteDirectory().listFiles(new FileFilter() { @Override public boolean accept(File aFile) { return aFile.isDirectory() && !aFile.getName().endsWith(""CVS""); "
0, AdapterFactoryLabelProvider labelProvider = new AdapterFactoryLabelProvider(adapterFactory); if (object instanceof EObject) { switch (columnIndex) { case 0: return labelProvider.getText(object); ," assertFilePresent( file ); try { String content = FileUtils.fileRead( file ); if ( !Pattern.matches( regex, content ) ) { Assert.fail( ""Content of "" + file + "" does not match "" + regex ); "
1, if (myPsi != null) return myPsi; Boolean isStatic = isStatic(); String type = getType(); if (type == null || type.trim().length() == 0) { type = CommonClassNames.JAVA_LANG_OBJECT; , if (myPsi != null) return myPsi; Boolean XXXXX = XXXXX(); String XXXXX = getType(); if (XXXXX == null || XXXXX.trim().length() == 0) { XXXXX = CommonClassNames.JAVA_LANG_OBJECT; 
0, switch (featureID) { case GFPackage.LOC_DEF__NAME: getName().clear(); return; case GFPackage.LOC_DEF__TYPE: setType((Exp)null); return; case GFPackage.LOC_DEF__VALUE: setValue((Exp)null); return; ," Label separator= new Label(parent, SWT.SEPARATOR | SWT.HORIZONTAL); GridData gridData= new GridData(SWT.FILL, SWT.TOP, true, false); gridData.verticalIndent = 2; separator.setLayoutData(gridData); "
0, ModelAccess.assertLegalWrite(); if (myFqNameToModulesMap.get(oldName) != module || myFqNameToModulesMap.containsKey(module.getModuleFqName())) { throw new IllegalStateException(); ," mapper.map(TEST_COM_URI_PATH_WITH_HASH, TEST_COM_URL); assertEquals(mapper.get(TEST_COM_URI_PATH_WITH_HASH), TEST_COM_URL); assertEquals(mapper.get(TEST_COM_URI_PATH_WITH_HASH_IDeD), TEST_COM_URL); "
1," MapToList<String, String> perType = new MapToList<String, String>(); for (PrimitiveProperty p : entity.getPrimitiveProperties()) { perType.get(p.getJavaType()).add(p.getVariableName()); "," MapToList<String, String> perType = new MapToList<String, String>(); for (PrimitiveProperty p : entity.getPrimitiveProperties()) { perType.get(p.getJavaType()).add(p.getVariableName()); "
1," final Dimension2D dim = new Dimension(); final float width = getFloatParameter(""width""); final float height = getFloatParameter(""height""); dim.setSize(width, height); return dim; "," final Dimension2D XXXXX = new Dimension(); final float XXXXX = getFloatParameter(""XXXXX""); final float XXXXX = getFloatParameter(""XXXXX""); XXXXX.setSize(XXXXX, XXXXX); return XXXXX; "
0, for (SolverBenchmark solverBenchmark : solverBenchmarkList) { if (inheritedLocalSearchSolverConfig != null) { solverBenchmark.inheritLocalSearchSolverConfig(inheritedLocalSearchSolverConfig); ," super(page, parent, Section.DESCRIPTION, new String[] {PDEUIMessages.ImportPackageSection_add, PDEUIMessages.ImportPackageSection_remove, PDEUIMessages.ImportPackageSection_properties"
0, PlaneIdentifier pid = (PlaneIdentifier) id; return this.x == pid.x && this.y == pid.y && this.xModulus == pid.xModulus && this.yModulus == pid.yModulus && this.wrapAround == pid.wrapAround; ," if (fFile.exists()) { InputStream stream = null; try { stream = new BufferedInputStream(fFile.getContents(true)); try { if (stream.available() > 0) load(stream, false); else { setLoaded(true); "
1, Button acceptButton = getAcceptButton(); ImageButton acceptImageButton = getAcceptImageButton(); if (acceptButton != null) { acceptButton.setOnClickListener(onAcceptButtonClickedListener); , Button XXXXX = getAcceptButton(); ImageButton XXXXX = getAcceptImageButton(); if (XXXXX != null) { XXXXX.setOnClickListener(onAcceptButtonClickedListener); 
0, int len = attrs.getLength(); for (int i = 0; i < len; i++) { Node attr = attrs.item(i); String attrName = attr.getLocalName(); if (attrName == null) { attrName = attr.getNodeName(); ," try { Integer retValue = null; prepareStatement(UserSQL.findByEmail); cachedResults.setString(1, email); execute(); if (cachedResults.next()) { retValue = cachedResults.getInt(1); "
1, setType(cmd); if ( scnt > 0) m_setupBuf = new DataBuffer(scnt); if ( pcnt > 0) m_paramBuf = new DataBuffer(pcnt); if ( dcnt > 0) m_dataBuf = new DataBuffer(dcnt); m_multi = true; , setType(cmd); if ( scnt > 0) m_setupBuf = new DataBuffer(scnt); if ( pcnt > 0) m_paramBuf = new DataBuffer(pcnt); if ( dcnt > 0) m_dataBuf = new DataBuffer(dcnt); m_multi = true; 
0," assertThat(factory.create(""1""), is(Double.valueOf(1))); assertThat(factory.create(""-1.0""), is(Double.valueOf(-1.0d))); assertThat(factory.create(""100.000101""), is(Double.valueOf(100.000101d))); ", Noeud noeudDebut = listePointsNoeuds.get(pointEntree); Noeud noeudFin = listePointsNoeuds.get(pointSortie); if (noeudDebut == null) { noeudDebut = createNode(pointEntree).getNoeud(); 
0, switch (value) { case MATRIX_VALUE: return MATRIX; case SATURATE_VALUE: return SATURATE; case HUE_ROTATE_VALUE: return HUE_ROTATE; case LUMINANCE_TO_ALPHA_VALUE: return LUMINANCE_TO_ALPHA; , ExternalCEDModule cedModule = null; try { cedModule = ExternalModuleDelegater.getModuleLoader() != null ? ExternalModuleDelegater.getModuleLoader().getCEDModuleInstance( getProject()) : null; 
0," super(""SendBookmarkFeed"", identifier, nodeIdentifier); setField(""Name"", name); setField(""URI"", uri); setField(""Description"", description); setField(""HasActiveLink"", String.valueOf(hasActiveLink)); "," try { File file = new File(filen); if (!file.exists() || file.isDirectory()) { throw new IllegalArgumentException(filen + "" not a file, or is a directory. Give me a single file name.""); "
0," Button sessionPersistence = (Button)findViewById(R.id.session_persistence_button); if(loadBalancer.getSessionPersistence() != null){ sessionPersistence.setText(""Disable Session Persistence""); "," boolean oldInitial = initial; initial = newInitial; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, Aadl2Package.MODE__INITIAL, oldInitial, initial)); "
1, if(UMLPackage.eINSTANCE.getNamedElement_Name().equals(notification.getFeatureID(NamedElement.class)) || notification.getNotifier() instanceof EAnnotation) { refreshQualifiedNameDisplay(); , if(UMLPackage.eINSTANCE.getNamedElement_Name().equals(notification.getFeatureID(NamedElement.class)) || notification.getNotifier() instanceof EAnnotation) { refreshQualifiedNameDisplay(); 
1," selenium.click(""form:dt:0:deleteHotel""); selenium.waitForPageToLoad(""30000""); Assert.assertEquals(selenium.getText(""xpath=/html/body/div/ul/li""),""Hotel with name HotelA is succesfully deleted.""); "," selenium.click(""form:dt:0:deleteHotel""); selenium.waitForPageToLoad(""30000""); Assert.assertEquals(selenium.getText(""xpath=/html/body/div/ul/li""),""Hotel with name HotelA is succesfully deleted.""); "
1," super(parent, new ModuleLabelProvider()); setMessage(UIPlugin.INSTANCE.getString(""_UI_SelectModule"")); setFilter(""*""); setTitle(UIPlugin.INSTANCE.getString(""_UI_ModuleSelection_title"")); "," super(parent, new ModuleLabelProvider()); setMessage(UIPlugin.INSTANCE.getString(""_UI_SelectModule"")); setFilter(""*""); setTitle(UIPlugin.INSTANCE.getString(""_UI_ModuleSelection_title"")); "
1," System.setProperty(""mcc.monitor.port"", IdTestUtils.getUnusedPort().toString()); System.setProperty(""mcc.monitor.interval"", ""14""); System.setProperty(""mcc.monitor.command"", ""echo hello""); "," System.setProperty(""mcc.monitor.port"", IdTestUtils.getUnusedPort().toString()); System.setProperty(""mcc.monitor.interval"", ""14""); System.setProperty(""mcc.monitor.command"", ""echo hello""); "
1," double expSoilFrac = BaerConstants.AUX_SOIL_FRACTION_DEFAULT; String expVersion = ""11.3""; String expComment = ""Test No Soil fraction factor""; try { _loader.load(NO_SOIL_AUX_FILE); "," double expSoilFrac = BaerConstants.AUX_SOIL_FRACTION_DEFAULT; String expVersion = ""11.3""; String expComment = ""Test No Soil fraction factor""; try { _loader.load(NO_SOIL_AUX_FILE); "
1," initComponents(); ticketlines = new JTicketLines(ticketline); this.dlCustomers = dlCustomers; this.dlSales = dlSales; this.taxeslogic = taxeslogic; jPanel2.add(ticketlines, BorderLayout.CENTER); "," initComponents(); ticketlines = new JTicketLines(ticketline); this.dlCustomers = dlCustomers; this.dlSales = dlSales; this.taxeslogic = taxeslogic; jPanel2.add(ticketlines, BorderLayout.CENTER); "
1, Path p = new Path(); p.add(g); Graphable parent = g; while((parent = m_iterator.getParent(parent)) != null) p.add(parent); if (!p.getLast().equals(m_iterator.getSource())) return(null); return(p); , Path XXXXX = new Path(); XXXXX.add(g); GraXXXXXhable XXXXXarent = g; while((XXXXXarent = m_iterator.getParent(XXXXXarent)) != null) XXXXX.add(XXXXXarent); if (!XXXXX.getLast().equals(m_iterator.getSource())) return(null); return(XXXXX); 
1," if ( KoLConstants.DAILY_FORMAT.format( CalendarFrame.selectedDate.getTime() ).equals( ""20051027"" ) ) { CalendarFrame.dailyDisplay.setText( ""<center><h1>White Wednesday</h1></center>"" ); return; "," if ( KoLConstants.DAILY_FORMAT.format( CalendarFrame.selectedDate.getTime() ).equals( ""20051027"" ) ) { CalendarFrame.dailyDisplay.setText( ""<center><h1>White Wednesday</h1></center>"" ); return; "
0," GL2 gl = drawable.getGL().getGL2(); gl.glViewport(0, 0, w, h); gl.glMatrixMode(GL2.GL_PROJECTION); gl.glLoadIdentity(); gl.glOrtho(0, w, 0, h, -1.0, 1.0); gl.glMatrixMode(GL2.GL_MODELVIEW); "," Log.Severity[] severities = getSeveritiesFilter(); put(""logs"", LogDao.getInstance().findLogs(getUser(), service, severities)); put(""showLogsConfig"", new ShowLogsConfig(severities)); "
0," log.debug(""getParticipants - "" + roomName); if (! roomsManager.hasRoom(roomName)) { log.warn(""Could not find room "" + roomName + "". Total rooms "" + roomsManager.numberOfRooms()); return null; ", final CountDownLatch finalizerRan = new CountDownLatch(1); final WeakReference<Object> ref = new WeakReference<Object>( new Object() { @Override protected void finalize() { finalizerRan.countDown(); 
1, List<Object> errors = errorHandler.getErrors(); if (errors != null) { Iterator<Object> iter = errors.iterator(); while (iter.hasNext()) { Object error = iter.next(); out.println(error.toString()); , List<Object> errors = errorHandler.getErrors(); if (errors != null) { Iterator<Object> iter = errors.iterator(); while (iter.hasNext()) { Object error = iter.next(); out.println(error.toString()); 
0, AbstractSqoopJobEntry jobEntry = new TestSqoopJobEntry(10); assertTrue(jobEntry.isDatabaseSupported(MySQLDatabaseMeta.class)); assertTrue(jobEntry.isDatabaseSupported(HiveDatabaseMeta.class)); ," final Namespace connectNamespace = dca.getServicesNamespace(); if (!connectNamespace.equals(type.getNamespace())) { return ServiceIDFactory.getDefault().createServiceTypeID(connectNamespace, type); "
1," Assert.assertEquals(""Access Denied"", selenium.getText(""accessDeniedHeading"") ); Assert.assertEquals(""You are not allowed to access this page."", selenium.getText(""accessDeniedMessage"")); "," Assert.assertEquals(""Access Denied"", selenium.getText(""accessDeniedHeading"") ); Assert.assertEquals(""You are not allowed to access this page."", selenium.getText(""accessDeniedMessage"")); "
1, if (nextTokenOptions == null) { Set<ConcreteOption> options = new HashSet<ConcreteOption>(); for (String s : getParseState().predict()) { options.add(new SimpleConcreteOption(s)); , if (nextTokenOptions == null) { Set<ConcreteOption> options = new HashSet<ConcreteOption>(); for (String s : getParseState().predict()) { options.add(new SimpleConcreteOption(s)); 
1," if (element.getLocalName().equals( XMLConfigConstants.MESSAGE_STORE_ELT.getLocalPart())) { if (log.isDebugEnabled()) { log.debug(""Persisting Message Store : "" + name + "" to the registry""); "," if (element.getLocalName().equals( XMLConfigConstants.MESSAGE_STORE_ELT.getLocalPart())) { if (log.isDebugEnabled()) { log.debug(""Persisting Message Store : "" + name + "" to the registry""); "
1, super(name); File newFile = new File(name); if (newFile.exists() == false) { String lowerName = name.toLowerCase(); File newFile2 = new File(lowerName); if (newFile2.exists()) { m_file = newFile2; , super(name); File XXXXX = new File(name); if (XXXXX.exists() == false) { String XXXXX = name.toLowerCase(); File XXXXX2 = new File(XXXXX); if (XXXXX2.exists()) { m_file = XXXXX2; 
0, for (Iterator<Appendix> iterator = termRegistration.getApology().getAppendices().iterator(); iterator.hasNext();) { Appendix appendix = iterator.next(); iterator.remove(); appendix.remove(); ," ArenaOpponent ao = new ArenaOpponent( opponentId, name, race, weight ); int index = CakeArenaManager.opponentList.indexOf( ao ); if ( index != -1 ) { CakeArenaManager.opponentList.remove( ao ); "
0," View view = View.inflate(context, R.layout.brick_nxt_motor_action, null); SeekBar noClick = (SeekBar) view.findViewById(R.id.seekBarSpeedMotorAction); noClick.setEnabled(false); return view; "," ValidationError error = new ValidationError(""title"", TopicType.TITLE_ALREADY_EXISTS); Set<ValidationError> errors = Collections.singleton(error); return new ValidationResult(errors); "
0," super.onCreate(savedInstanceState); final Intent intent = getIntent(); final Uri data = intent.getData(); if (data != null) { ArrivalsListActivity.start(this, data.getLastPathSegment()); "," GenDataType genDataType = (GenDataType)object; return genDataType.getName() + (genDataType.getQualifiedInstanceClassName() == null ? """" : "" ["" + genDataType.getQualifiedInstanceClassName() + ""]""); "
0," try { if (currentFieldSetIndex < fieldSets.size() - 1) { return JCRSessionFactory.getInstance().getCurrentUserSession(workspace, locale).getNodeByIdentifier(fieldSets.get(currentFieldSetIndex+1)); ", final MondrianOlap4jConnection olap4jConnection = olap4jCube.olap4jSchema.olap4jCatalog.olap4jDatabaseMetaData .olap4jConnection; return olap4jConnection.toOlap4j(namedSet.getExp()); 
0, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(Wiki6012LatestTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; ," if (!OSGIUtils.getDefault().isFragment(bundle)) { synchronized (currentStateStamp) { dynamicAddStateStamps.put(Long.toString(bundle.getBundleId()), new Long(currentStateStamp[0])); "
0," try { XulMessageBox messagebox = (XulMessageBox) document.createElement(""messagebox""); messagebox.setTitle(title); messagebox.setMessage(message); int option = messagebox.open(); "," rect.x += differenceRect.x; rect.y += differenceRect.y; rect.height = Math.max(0, rect.height + differenceRect.height); rect.width = Math.max(0, rect.width + differenceRect.width); "
0," boolean isMatch = false; if(eObject instanceof Class) { Class element = (Class)eObject; if(ElementUtil.getStereotypeApplication(element, ConstraintBlock.class) != null) { isMatch = true; ", if ((eventlist == null) || (eventlist.getT() > ev.getT())) { ev.setPrevious(null); ev.setNext(eventlist); if (eventlist != null) eventlist.setPrevious(ev); eventlist = ev; return; 
0," super(parentShell, repo, SHOW_LOCAL_BRANCHES | SHOW_REMOTE_BRANCHES | SHOW_TAGS | SHOW_REFERENCES | EXPAND_LOCAL_BRANCHES_NODE | SELECT_CURRENT_REF); this.pathString = pathString; ", ff = delegate.transform(ff); if (ff instanceof FeatureFilter.OverlapsLocation) { return new FeatureFilter.OverlapsLocation(revertLocation(((FeatureFilter.OverlapsLocation) ff).getLocation())); 
1," Object oldPARENT = pARENT; pARENT = newPARENT; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, PowrmartPackage.WORKLET_TYPE__PARENT, oldPARENT, pARENT)); "," Object XXXXX = pARENT; pARENT = newPARENT; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, PowrmartPackage.WORKLET_TYPE__PARENT, XXXXX, pARENT)); "
0, if (getChildAt(0) != null) { ((LinearLayout) getChildAt(0)).getChildAt(0).setMinimumWidth(retractiveWidth_); ((LinearLayout) getChildAt(0)).getChildAt(2).setMinimumWidth(retractiveWidth_); ," provider.addRestriction(""a=b""); DataQuery query = builder.build(); assertEquals(""select x from y WHERE a=b"", query.getStatement()); assertEquals(0, query.getParameters().size()); "
0," if (len > 0) { try { int initial = bufpos - len + 1; if (initial < 0) { int initial0 = initial; len += initial; initial = 0; buf.appendN('\u0000', -initial0); buf.append(buffer, initial, len); "," if (satoshis.compareTo(minCoinsToSend) >= 0) { coinsToSend = satoshis; coinsToSend1 = coinsToSend.divide(new BigInteger(""2"")); coinsToSend2 = coinsToSend.subtract(coinsToSend1); return true; "
0," if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; XBeeAddress64 that = (XBeeAddress64) o; if (!Arrays.equals(address, that.address)) return false; return true; ", String suid = inst.getString(Tag.SeriesInstanceUID); for (Attributes prefSeries : prefSeriesSeq) { if (suid.equals(prefSeries.getString(Tag.SeriesInstanceUID))) return prefSeries; 
1, final GrExpression operand = expression.getOperand(); if (operand == null) return; if (expression.getOperationTokenType() != mLNOT) { operand.accept(this); visitCall(expression); return; , final GrExpression operand = expression.getOperand(); if (operand == null) return; if (expression.getOperationTokenType() != mLNOT) { operand.accept(this); visitCall(expression); return; 
0, StringBuffer sb = new StringBuffer(); sb.append(getJythonJarPath()).append(File.pathSeparator); sb.append(ClassPathHelper.getClassPath(PythonScriptModel.class)); return sb.toString(); ," ContentResolver cr = QtApplication.mainActivity().getContentResolver(); String where = ContactsContract.Data.MIMETYPE + "" = ? ""; String[] whereParams = new String[]{Event.CONTENT_ITEM_TYPE"
1," openWindow = true; Browser src = (Browser)event.widget; if (src != browser1) { if (verbose) System.out.println(""Failure - expected ""+browser1+"", got ""+src); passed = false; shell.close(); return; "," openWindow = true; Browser XXXXX = (Browser)event.widget; if (XXXXX != browser1) { if (verbose) System.out.println(""Failure - expected ""+browser1+"", got ""+XXXXX); passed = false; shell.close(); return; "
1, _notificationReceivedLatch = new CountDownLatch(expectedNumberOfNotifications); _numberOfNotifications = new AtomicInteger(0); _lastNotification = new AtomicReference<Notification>(); , _notificationReceivedLatch = new CountDownLatch(expectedNumberOfNotifications); _numberOfNotifications = new AtomicInteger(0); _lastNotification = new AtomicReference<Notification>(); 
1, TestSuite testSuite = new TestSuite(); testSuite.addTestSuite(ConfigureWikiPageDefaultNoWorkflowTest.class); testSuite.addTestSuite(TearDownWorkflowConfigurationTest.class); return testSuite; , TestSuite XXXXX = new TestSuite(); XXXXX.addTestSuite(ConfigureWikiPageDefaultNoWorkflowTest.class); XXXXX.addTestSuite(TearDownWorkflowConfigurationTest.class); return XXXXX; 
0," if (file instanceof BnfFile) { final MultiMap<String, BnfRule> map = new MultiMap<String, BnfRule>(); for (BnfRule rule : ((BnfFile)file).getRules()) { map.putValue(rule.getName(), rule); ", m_nBufferHead = 0; m_nBufferTail = 0; m_nBufferSize = 0; m_bBufferLocked = false; m_bOwnsOutputIO = false; m_pioOutput = null; m_spAPECompressCreate = new APECompressCreate(); m_pBuffer = null; 
1," AccountStore.Account values = AccountManager.accountStore.get(name); String member = values.getAttribute(""take_breaks""); return member != null && member.equalsIgnoreCase(""true""); "," AccountStore.Account values = AccountManager.accountStore.get(name); String member = values.getAttribute(""take_breaks""); return member != null && member.equalsIgnoreCase(""true""); "
0," ArrayList<EObject> saps = instances.get(ETriceGenPackage.eINSTANCE.getSAPInstance()); for (EObject obj : saps) { assertEquals(""SAP has one peer"", 1, ((SAPInstance)obj).getPeers().size()); "," SQLiteDatabase mDb = mOpenHelper.getReadableDatabase(); String selection = null; if (MessageTable.TYPE_SENT == type) { selection = MessageTable.FIELD_IS_SENT + "" = "" + MessageTable.TYPE_SENT; "
0," Color selectedColor = JColorChooser.showDialog( preferencePanel, tr(""Choose node color""), nodeColorField.getBackground()); if (selectedColor != null) { nodeColorField.setBackground(selectedColor); ", if( isEnabled() != enabled ){ label.setEnabled( enabled ); super.setEnabled( enabled ); if( enabled ){ for( MouseInputListener listener : mouseInputListeners ){ doAddMouseInputListener( listener ); 
0," if ((!isObserverRegistered) && (getEntity() != null)) { isObserverRegistered = true; if (logger.isLoggable(Level.FINE)) { logger.fine(""*** addObserver "" + getFileName() + "" for "" + getEntity()); ", if (strategiesComboBoxes[strategyIndex] != null) { StrategyWrapper sw = (StrategyWrapper) strategiesComboBoxes[strategyIndex].getSelectedItem(); if (sw != null) { return sw.getStrategy(); 
1," List<Field> fields = new ArrayList<Field>(); fields.add(Field.create(""topic"", Type.INT)); fields.add(Field.create(""totalcount"", Type.INT)); return new Schema(""outputcount"", fields); "," List<Field> fields = new ArrayList<Field>(); fields.add(Field.create(""topic"", Type.INT)); fields.add(Field.create(""totalcount"", Type.INT)); return new Schema(""outputcount"", fields); "
1," if (element.getNodeType() == NodeInfo.ELEMENT) { if (TRACE) { trace(indent + ""<Instruction element=\"""" + element.getDisplayName() + ""\"" line=\"""" + element.getLineNumber() + ""\"">""); indent += "" ""; "," if (element.getNodeType() == NodeInfo.ELEMENT) { if (TRACE) { trace(indent + ""<Instruction element=\"""" + element.getDisplayName() + ""\"" line=\"""" + element.getLineNumber() + ""\"">""); indent += "" ""; "
1, if (_negativeEvaluationOutgoingPostConditions.contains(post)) { _negativeEvaluationOutgoingPostConditions.remove(post); post.setStartNode(null); setChanged(); notifyObservers(new PostRemoved(post)); , if (_negativeEvaluationOutgoingPostConditions.contains(post)) { _negativeEvaluationOutgoingPostConditions.remove(post); post.setStartNode(null); setChanged(); notifyObservers(new PostRemoved(post)); 
1," TestNGCitrusTestBuilder builder = new TestNGCitrusTestBuilder() { @Override public void configure() { catchException(""com.consol.citrus.exceptions.CitrusRuntimeException"", echo(""${var"," TestNGCitrusTestBuilder XXXXX = new TestNGCitrusTestBuilder() { @Override public void configure() { catchException(""com.consol.citrus.exceptions.CitrusRuntimeException"", echo(""${var"
1, Transferable content = null; for (Transferable trf : CopyPasteManagerEx.getInstanceEx().getAllContents()) { if (trf != null && trf.isDataFlavorSupported(DataFlavor.stringFlavor)) { content = trf; , Transferable XXXXX = null; for (Transferable trf : CopyPasteManagerEx.getInstanceEx().getAllContents()) { if (trf != null && trf.isDataFlavorSupported(DataFlavor.stringFlavor)) { XXXXX = trf; 
0," log.debug(""accept? "" + sFrom + "" - "" +sRecipient); if( sFrom == null || sFrom.length() == 0 ) { log.error(""Cannot accept email with no from address. Recipient is: "" + sRecipient); return false; ", Point p = e.getPoint(); int index = list.locationToIndex(p); list.setSelectedIndex(index); setVisible(false); File file = (File)list.getSelectedValue(); if (file == null) { return; 
0," final float currentFunds = theCharacter.getGold().floatValue(); final double itemCost = calcItemCost(selected, purchaseQty, gearBuySellScheme); return allowDebt || (itemCost <= currentFunds); "," StringBuilder sb = new StringBuilder(); sb.append( ""<TreasureValue>"" ) .append( this.TreasureValue ) .append( ""</TreasureValue>"" ); sb = appendErrorPayload(sb); return sb.toString(); "
0," Pager pager = pojo.getContext().getPager(); if (null != pager && pager.getPageNumber() > 0) { pojo.append(Pojos.Items.wrapf( "" LIMIT %d offset %d"", pager.getPageSize(), pager.getOffset())); ", String jndiName = properties.getProperty( Environment.SESSION_FACTORY_NAME ); if ( jndiName != null ) { return SessionFactoryRegistry.INSTANCE.getNamedSessionFactory( jndiName ); 
1," List<String> storyPaths = new OsgiStoryFinder().findPaths( ""/org/jbehave/examples/trader/stories"", ""*.story"", ""examples_table_loaded*""); injectedEmbedder().runStoriesAsPaths(storyPaths); "," List<String> storyPaths = new OsgiStoryFinder().findPaths( ""/org/jbehave/examples/trader/stories"", ""*.story"", ""examples_table_loaded*""); injectedEmbedder().runStoriesAsPaths(storyPaths); "
1," try { String value = (String) fBackingMarker.getAttribute(IApiMarkerConstants.MARKER_ATTR_MESSAGE_ARGUMENTS); String[] args = new String[0]; if(value != null) { args = value.split(""#""); "," try { String XXXXX = (String) fBackingMarker.getAttribute(IApiMarkerConstants.MARKER_ATTR_MESSAGE_ARGUMENTS); String[] args = new String[0]; if(XXXXX != null) { args = XXXXX.split(""#""); "
1, synchronized (slider) { int oldValue; Object clientProperty = slider.getClientProperty(RangeSlider.CLIENT_PROPERTY_MOUSE_POSITION); if (clientProperty == null) { oldValue = slider.getValue(); , synchronized (slider) { int oldValue; Object XXXXX = slider.getClientProperty(RangeSlider.CLIENT_PROPERTY_MOUSE_POSITION); if (XXXXX == null) { oldValue = slider.getValue(); 
1," Menu menu = new Menu( shell, SWT.POP_UP ); MenuItem menuItem = new MenuItem( menu, SWT.PUSH ); menuItem.addHelpListener( mock( HelpListener.class ) ); assertTrue( menuItem.isListening( SWT.Help ) ); "," Menu XXXXX = new Menu( shell, SWT.POP_UP ); MenuItem XXXXXItem = new MenuItem( XXXXX, SWT.PUSH ); XXXXXItem.addHelpListener( mock( HelpListener.class ) ); assertTrue( XXXXXItem.isListening( SWT.Help ) ); "
0," try { WorkflowTask startTask = getStartTask(invitationId); if (taskTypeMatches(startTask, WorkflowModelModeratedInvitation.WF_START_TASK)) { return cancelModeratedInvitation(startTask); ", switch (featureID) { case SmmPackage.COLLECTIVE_MEASURE__BASE_MEASURE: return baseMeasure != null; case SmmPackage.COLLECTIVE_MEASURE__ACCUMULATOR: return accumulator != ACCUMULATOR_EDEFAULT; 
0, if (detectIphoneOrIpod() || detectAndroid() || detectAndroidWebKit() || detectBlackBerryWebKit() || detectPalmWebOS() || detectGarminNuvifone() || detectMaemoTablet()) { return true; , synchronized (lockObject) { if (componentInstance != null) { componentInstance.removeInstanceStateListener(this); componentInstance.stop(); componentInstance.dispose(); componentInstance = null; 
0," printer.println().print( ""<div class=\""source\""><pre>"" ); String text = node.getText(); text = transformVerbatimText( text ); printer.printEncoded( text, this ); printer.print( ""</pre></div>"" ); "," assertNotNull(actualString); assertTrue( String.format(""Regexp Assertion Failed:\nExpected: %s\nActual: %s\n"", expectedRegexp, actualString), actualString.matches(expectedRegexp)); "
1, JFileChooser chooser = new JFileChooser(); chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY); chooser.showOpenDialog(null); File file = chooser.getSelectedFile(); return file; , JFileChooser XXXXX = new JFileChooser(); XXXXX.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY); XXXXX.showOpenDialog(null); File XXXXX = XXXXX.getSelectedFile(); return XXXXX; 
1, Thread thread = null; synchronized(this) { if (runningThreads.containsKey(handle)) { thread = runningThreads.get(handle); runningThreads.remove(handle); runningAsyncTasks.remove(handle); , Thread thread = null; synchronized(this) { if (runningThreads.containsKey(handle)) { thread = runningThreads.get(handle); runningThreads.remove(handle); runningAsyncTasks.remove(handle); 
1," taskDao.save(task.task); task.metadata.add(task.trTask); metadataService.synchronizeMetadata(task.task.getId(), task.metadata, MetadataCriteria.withKey(TaskRabbitMetadata.METADATA_KEY)); "," taskDao.save(task.task); task.metadata.add(task.trTask); metadataService.synchronizeMetadata(task.task.getId(), task.metadata, MetadataCriteria.withKey(TaskRabbitMetadata.METADATA_KEY)); "
0," if (featOkTst && casFeat_posType == null) jcas.throwFeatMissing(""posType"", ""org.u_compare.shared.label.penn.pos.UnknownPOS""); ll_cas.ll_setStringValue(addr, casFeatCode_posType, v);"," String label = ((ProvidesContext)object).getId(); return label == null || label.length() == 0 ? getString(""_UI_ProvidesContext_type"") : getString(""_UI_ProvidesContext_type"") + "" "" + label; "
1," FlexoComponentFolder newFolder = new FlexoComponentFolder(folderName, library); newFolder.setParent(parentFolder); if (parentFolder != null) { parentFolder.addToSubFolders(newFolder); "," FlexoComponentFolder XXXXX = new FlexoComponentFolder(folderName, library); XXXXX.setParent(parentFolder); if (parentFolder != null) { parentFolder.addToSubFolders(XXXXX); "
0, PublicationQueueBean other = (PublicationQueueBean)o; if(other.getUrlAddress().equals(urlAddress) && other.getSerializedParameters().equals(serializedParameters)) return true; else return false; ," preferences.get(""Developer Tools"", ""Proxy Host"").reset(); preferences.get(""Developer Tools"", ""Proxy Auto Connect"").reset(); preferences.get(""Developer Tools"", ""Proxy Port"").reset(); "
1," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (group: ""); result.append(group); result.append(')'); return result.toString(); "," if (eIsProxy()) return super.toString(); StringBuffer XXXXX = new StringBuffer(super.toString()); XXXXX.append("" (group: ""); XXXXX.append(group); XXXXX.append(')'); return XXXXX.toString(); "
1," RateMeasurement base = new BasicRateMeasurement(0, 100); RateMeasurement subj = new BasicRateMeasurement(50, 100); BasicRiskRatio or = new BasicRiskRatio(base, subj); assertFalse(or.isDefined()); "," RateMeasurement XXXXX = new BasicRateMeasurement(0, 100); RateMeasurement XXXXX = new BasicRateMeasurement(50, 100); BasicRiskRatio XXXXX = new BasicRiskRatio(XXXXX, XXXXX); assertFalse(XXXXX.isDefined()); "
1, if (event instanceof IContainerEvent<?>) { IContainerEvent<?> e = (IContainerEvent<?>)event; if (e.getDeltaElement() == view && e.getDeltaKind() == IContainerDelta.Kind.REMOVED) { viewClosed(); , if (event instanceof IContainerEvent<?>) { IContainerEvent<?> e = (IContainerEvent<?>)event; if (e.getDeltaElement() == view && e.getDeltaKind() == IContainerDelta.Kind.REMOVED) { viewClosed(); 
1," File fHosts = getConfigFile(); FileOutputStream out = null; try { Properties props = new Properties(); storeHostProps(props); out = new FileOutputStream(fHosts); props.store(out, null); out.close(); "," File XXXXX = getConfigFile(); FileOutputStream XXXXX = null; try { Properties XXXXX = new Properties(); storeHostProps(XXXXX); XXXXX = new FileOutputStream(XXXXX); XXXXX.store(XXXXX, null); XXXXX.close(); "
0, final boolean[] specicalFlags_doubleQuotes = CharTypes.specicalFlags_doubleQuotes; int len = text.length(); int newcount = count + len + 3; if (newcount > buf.length) { expandCapacity(newcount); ," String name = elem.getAttributeValue(""name""); String value = replaceParam(elem.getAttributeValue(""value"")); logger.info(""typeCmd: id="" + name + "" value="" + value); this.sel.type(name, value); "
0," if(s_logger.isTraceEnabled()) s_logger.trace(""Agent disconnected, agent id: "" + agentId + "", state: "" + state + "". Will notify waiters""); _disconnected = true; notifyAll(); return true; "," String text = fileName.getText(); if(!"""".equals(text)) { if(!text.contains("".xml"") && !text.contains("".html"")) { String extension = isXML ? "".xml"":"".html""; fileName.setText(text + extension); "
1, Panel p = getPanel(); if (p!=null) getPanel().setStyleName(watch.getStyleName(getName())); watch.getUserInterface().removeWidget(getName()); watch.getUserInterface().addWidget(this); , Panel XXXXX = getPanel(); if (XXXXX!=null) getPanel().setStyleName(watch.getStyleName(getName())); watch.getUserInterface().removeWidget(getName()); watch.getUserInterface().addWidget(this); 
1, super(owner); this.parentEditor = parentEditor; initComponents(); selectPanel.setVisible(false); dialogForLinking = true; this.getRootPane().setDefaultButton(this.linkLocationButton); , super(owner); this.parentEditor = parentEditor; initComponents(); selectPanel.setVisible(false); dialogForLinking = true; this.getRootPane().setDefaultButton(this.linkLocationButton); 
0," KAndJoin join = newAndJoin(0, 1); this.procedure.setJoin(join); KProcess process = this.program.newProcess(null); new KProcessor().execute(process); assertFalse(join.isEnabled(process)); "," if (id != POICODE_ID_UNDEFINED) { int sep = type.indexOf(POICODE_SEPARATOR); if (sep >= 0) { String name = type.substring(sep + POICODE_SEPARATOR.length()); return name.replaceAll(""_"", "" ""); "
0, setBackground( backgroundHover ); if (e != null && !equals( e.getComponent() )) for (final MouseListener listener : getMouseListeners()) if (!listener.equals( this )) listener.mouseEntered( e ); , graphics.setAntialias(SWT.ON); graphics.setAlpha((int) (currentTransparency * getDeclaration().getPadDefaultOpacity() * 255)); createPathes(); super.paintFigure(graphics); disposePathes(); 
1," try { File file = new File(filen); if (!file.exists() || file.isDirectory()) { throw new IllegalArgumentException(filen + "" not a file, or is a directory. Give me a single file name.""); "," try { File file = new File(filen); if (!file.exists() || file.isDirectory()) { throw new IllegalArgumentException(filen + "" not a file, or is a directory. Give me a single file name.""); "
0," if(color == null) throw new IllegalArgumentException(""Cannot be null""); this.lineColour = color; if(logger.isDebugEnabled()){ logger.debug(""setLineColor: color="" + this.lineColour); "," if(!projectName.startsWith(""$"")){ StaplerRequest req = Stapler.getCurrentRequest(); if (req != null) { if (Hudson.getInstance().getItemByFullName(projectName, Job.class) == null) { projectName = """"; "
0," String label = ((SketchCompartment) object).getName(); return label == null || label.length() == 0 ? getString(""_UI_SketchCompartment_type"") : getString(""_UI_SketchCompartment_type"") + "" "" + label; "," final GreeterEntity greeter = em.find(GreeterEntity.class, name); String response; if (greeter == null) { response = ""Hello "" + name; log.info(response); em.persist(new GreeterEntity(name)); "
0," putValue(Action.SHORT_DESCRIPTION, tr(""Cancel conflict resolution"")); putValue(Action.NAME, tr(""Cancel"")); putValue(Action.SMALL_ICON, ImageProvider.get("""", ""cancel"")); setEnabled(true); "," if (params != null) { return new BestMatchSpec( (String []) params.getParameter(CookieSpecPNames.DATE_PATTERNS), params.getBooleanParameter(CookieSpecPNames.SINGLE_COOKIE_HEADER, false)); "
0," long oldIndexUsage = profiler.getCounter(""Query.indexUsage""); long oldCompositeIndexUsage = profiler.getCounter(""Query.compositeIndexUsage""); if (oldIndexUsage == -1) { oldIndexUsage = 0; "," if (log.isDebugEnabled()) { log.debug(""Found "" + conduits.size() + "" ScriptConduits attached to "" + this); for (ScriptConduit scriptConduit : conduits) { log.debug(""- "" + scriptConduit); "
1," String oldCursor = cursor; cursor = newCursor; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_POLYLINE_ELEMENT__CURSOR, oldCursor, cursor)); "," String XXXXX = cursor; cursor = newCursor; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_POLYLINE_ELEMENT__CURSOR, XXXXX, cursor)); "
0," String consumer = url.getParameterAndDecoded(""consumer""); if (consumer == null || consumer.length() == 0) { throw new IllegalArgumentException(""Please input consumer parameter.""); "," double matrix[] = new double[6]; transform.getMatrix(matrix); concatCTM( (float)matrix[0], (float)matrix[1], (float)matrix[2], (float)matrix[3], (float)matrix[4],(float) matrix[5] ); "
0," ResourceBundle bundle = ResourceBundle.getBundle(MarkupToXslfoTask.class.getPackage().getName() + "".tasks""); assertEquals(MarkupToXslfoTask.class.getName(), bundle.getString(""wikitext-to-xslfo"")); ", mCrossSfx = play; mCrossRange = volume; mStart = mSfx.getVolume(); mRange = -mStart; mTarget = duration; mEase = ease; if (loop) mCrossSfx.loop(0); else mCrossSfx.play(0); start(); 
0," String oldDESC = dESC; dESC = newDESC; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, RifPackage.ATTRIBUTEVALUEXMLDATA__DESC, oldDESC, dESC)); ", boolean notAllEquipped = false; for(L2ItemInstance adjItem: getItemsByItemId(item.getItem().getItemId())) { if(adjItem.isEquipable()) { if(!adjItem.isEquipped()) notAllEquipped |= true; 
0," super(request, location, device); getHeaders().add(UpnpHeader.Type.ST, new RootDeviceHeader()); getHeaders().add(UpnpHeader.Type.USN, new UDNHeader(device.getIdentity().getUdn())); "," StringBuilder res = new StringBuilder(); res.append(super.getActionId()); res.append(""#""); res.append(((Object) this.rebuild).toString()); res.append(""!""); return res.toString(); "
1," lock.lock(); Log.d(TAG, ""waitForAuthAgentBind() entered: agent="" + authAgent); try { if (authAgent != null) { Log.d(TAG, ""Already got non-null agent="" + authAgent + "" -no need to wait.""); return; "," lock.lock(); Log.d(TAG, ""waitForAuthAgentBind() entered: agent="" + authAgent); try { if (authAgent != null) { Log.d(TAG, ""Already got non-null agent="" + authAgent + "" -no need to wait.""); return; "
1," LayoutInflater inflater = (LayoutInflater) getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE); inflater.inflate(R.layout.tab_movie_showtimes, this); initViews(); initListeners(); "," LayoutInflater XXXXX = (LayoutInflater) getContext().getSystemService(Context.LAYOUT_INFLATER_SERVICE); XXXXX.inflate(R.layout.tab_movie_showtimes, this); initViews(); initListeners(); "
1, int version; String tmp = java.security.AccessController.doPrivileged( new sun.security.action.GetPropertyAction(RHINO_JS_VERSION)); if (tmp != null) { version = Integer.parseInt((String)tmp); , int version; String XXXXX = java.security.AccessController.doPrivileged( new sun.security.action.GetPropertyAction(RHINO_JS_VERSION)); if (XXXXX != null) { version = Integer.parseInt((String)XXXXX); 
0, try { WavPackUtils.WavpackFlushSamples(wpc); fixLength(wpc.outfile); wpc.outfile.close(); if (wpc.correction_outfile != null) { fixLength(wpc.correction_outfile); wpc.correction_outfile.close(); ," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (value: ""); result.append(value); result.append(')'); return result.toString(); "
1, AddRequest addRequest = getDecorated(); Entry entry = addRequest.getEntry(); if ( entry == null ) { throw new IllegalArgumentException( I18n.err( I18n.ERR_04481_ENTRY_NULL_VALUE ) ); , AddRequest addRequest = getDecorated(); Entry entry = addRequest.getEntry(); if ( entry == null ) { throw new IllegalArgumentException( I18n.err( I18n.ERR_04481_ENTRY_NULL_VALUE ) ); 
1," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; "," EditorCell XXXXX = null; XXXXX = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, XXXXX, editorContext); return XXXXX; "
1," Log.d(TAG, ""BEGIN updatedPrivacyList.""); int i = mPrivacyListListeners.beginBroadcast(); while (i > 0) { i--; try { mPrivacyListListeners.getBroadcastItem(i).updatedPrivacyList(listName); "," Log.d(TAG, ""BEGIN updatedPrXXXXXvacyLXXXXXst.""); XXXXXnt XXXXX = mPrXXXXXvacyLXXXXXstLXXXXXsteners.begXXXXXnBroadcast(); whXXXXXle (XXXXX > 0) { XXXXX--; try { mPrXXXXXvacyLXXXXXstLXXXXXsteners.getBroadcastItem(XXXXX).updatedPrXXXXXvacyLXXXXXst(lXXXXXstName); "
1," String[] split = uid.split("";""); if (split.length < 2) { MLogger.log(Level.SEVERE, ""Invalid District UID encountered: not enough semicolon delimited parts! UID in question: '"" + uid + ""'.""); "," String[] split = uid.split("";""); if (split.length < 2) { MLogger.log(Level.SEVERE, ""Invalid District UID encountered: not enough semicolon delimited parts! UID in question: '"" + uid + ""'.""); "
0," if (this.isRemote) { this.sentPacket = ((ElevatorsPacketHandling) Elevators.Core .getPacketHandler()).sendResponseGUIPacket( this.guiTransferID, packetCode, this.floors, this.properties); ", BloombergConnector connector = BloombergTestUtils.getBloombergConnector(); BloombergReferenceDataProvider brdp = new BloombergReferenceDataProvider(connector); brdp.start(); return brdp; 
1, Object target = lookupService(); if (target == null) { throw (useBlueprintExceptions ? BlueprintExceptionFactory.createServiceUnavailableException(filter) : new ServiceUnavailableException(filter)); , Object XXXXX = lookupService(); if (XXXXX == null) { throw (useBlueprintExceptions ? BlueprintExceptionFactory.createServiceUnavailableException(filter) : new ServiceUnavailableException(filter)); 
0," StringBuilder sb = new StringBuilder(String.format(""'''Embedded server hosting webapps at:%n "")); sb.append(StringUtils.join(webapps.iterator(), String.format(""%n ""))); return sb.toString(); "," if (newFontStyle != fontStyle) { int old = fontStyle; fontStyle = newFontStyle; console.firePropertyChange(this, IConsoleConstants.P_FONT_STYLE, new Integer(old), new Integer(fontStyle)); "
1, if (this == obj) return true; if (obj == null) return false; if (getClass() != obj.getClass()) return false; ChildId other = (ChildId) obj; if (id == null) { if (other.id != null) return false; , if (this == obj) return true; if (obj == null) return false; if (getClass() != obj.getClass()) return false; ChildId XXXXX = (ChildId) obj; if (id == null) { if (XXXXX.id != null) return false; 
0," boolean inWpCircle = false; double xtd = (currentLeg.getMaxXtd() == null) ? 0.0 : currentLeg.getMaxXtd(); double radius = Math.max(xtd, wpCircleMin); if (activeWpRng < radius) { inWpCircle = true; "," Logger rootLogger = Logger.getRootLogger(); PerJobAppender appender = new PerJobAppender(); appender.setLayout(new PatternLayout(""%d [%t] %-5p %c %x - %m%n"")); rootLogger.addAppender(appender); "
1," actionGroup.add(ActionManager.getInstance().getAction(""revu.ProjectView.ToggleFilterIssues"")); actionGroup.add(ActionManager.getInstance().getAction(""revu.ShowProjectSettings"")); "," actionGroup.add(ActionManager.getInstance().getAction(""revu.ProjectView.ToggleFilterIssues"")); actionGroup.add(ActionManager.getInstance().getAction(""revu.ShowProjectSettings"")); "
0," users.clear(); users.add(list); treeViewer.setInput(users); pageBook.showPage(treeViewer.getControl()); treeViewer.expandToLevel(DEFAULT_EXPAND_LEVEL); helpMessageLabel.setText(""""); return true; ", if (isPatternFilter()) { String targetId= getTargetId(); if (targetId == null) return PATTERN_FILTER_ID_PREFIX + getPattern(); else return targetId + PATTERN_FILTER_ID_PREFIX + getPattern(); 
0," final AxisDirection dir1 = getDirection(source); final AxisDirection dir2 = getDirection(target); assertNotNull(dir1); assertNotNull(dir2); assertEquals(expected, getAngle(dir1, dir2), EPS); "," tag = HTML.Tag.FORM; assertEquals(""form"", tag.toString()); assertTrue(""breaks Flow"", tag.breaksFlow()); assertFalse(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); "
0," ensureDiv().setInnerHTML(""<input type='file' id='foo'>myInput</input>""); FileUpload upload = FileUpload.wrap(Document.get().getElementById(""foo"")); assertExistsAndAttached(upload); "," super(ReviewsBundle.message(""reviews.sortByAuthorOfLastComment""), ReviewsBundle.message(""reviews.sortByAuthorOfLastComment""), IconLoader.getIcon(""/icons/inspector/sortByName.png"")); "
0, m_regManager.stop(); m_loginManager.stop(); Iterator<PlayerChar> it = m_players.values().iterator(); PlayerChar p; while(it.hasNext()) { p = it.next(); m_logoutManager.queuePlayer(p); ," if (stdout != null && stdout.length() > 0) { printTo.println(""========= Child VM System.out ========""); printTo.print(stdout); printTo.println(""======================================""); "
1," BlockingTaskOperationResponseHandler responseHandler = new BlockingTaskOperationResponseHandler(); taskService.register(taskId, userId, responseHandler); try { responseHandler.waitTillDone(timeout); "," BlockingTaskOperationResponseHandler XXXXX = new BlockingTaskOperationResponseHandler(); taskService.register(taskId, userId, XXXXX); try { XXXXX.waitTillDone(timeout); "
0," MethodExample2Binding b = new MethodExample2Binding(new MethodExample2()); assertEquals(""1"", b.name().get()); assertEquals("""", b.getName()); assertEquals(""2"", b.getNameBinding().get()); "," return YieldCurveFunction.getCurveRequirement(FinancialSecurityUtils.getCurrency(target.getTrade().getSecurity()), curveName, advisoryForward, advisoryFunding, calculationMethod); "
1," TargetWebBrowser tar = TargetWebBrowserFactory.getTargetWebBrowser(""safari"",""5"", null ); assertTrue(tar.isSafari()); assertFalse(tar.isFirefox()); assertFalse(tar.isClassLoaded()); "," TargetWebBrowser XXXXX = TargetWebBrowserFactory.getTargetWebBrowser(""safari"",""5"", null ); assertTrue(XXXXX.isSafari()); assertFalse(XXXXX.isFirefox()); assertFalse(XXXXX.isClassLoaded()); "
0, turn_over = new ProtocolMessageTurnOver(); game_state.initialiseGameState(); focused_tile_row = 1; focused_tile_col = 1; synchronized(UiApplication.getEventLock()) { tiles[4].setFocus(); ," ClassLoader classLoader = getClass().getClassLoader(); return classLoader.getResourceAsStream(""org/eclipse/papyrus/state/editor/xtext/parser/antlr/internal/InternalUmlState.tokens""); "
0," initComponents(); jCmbLangs.setModel(new DefaultComboBoxModel(DefaultSyntaxKit.getContentTypes())); jCmbLangs.setSelectedItem(""text/java""); new CaretMonitor(jEdtTest, lblCaretPos); ", layout = new PatternLayout(FORMAT_LAYOUT); LevelRangeFilter newFilter = new LevelRangeFilter(); newFilter.setAcceptOnMatch(true); newFilter.setLevelMin(LEVEL_MIN); addFilter(newFilter); 
1," ServerSettings settings = new ServerSettings(ImapStore.STORE_TYPE, ""server"", 143, ConnectionSecurity.NONE, ""PLAIN"", ""user"", ""pass""); String uri = Store.createStoreUri(settings); assertEquals(""imap: "," ServerSettings XXXXX = new ServerSettings(ImapStore.STORE_TYPE, ""server"", 143, ConnectionSecXXXXXty.NONE, ""PLAIN"", ""user"", ""pass""); String XXXXX = Store.createStoreUri(XXXXX); assertEquals(""imap: "
0," File file = new File(getBucketFolderDir(mountedRoot, bucket) + File.separatorChar + fileName); try { DataSource ds = new FileRangeDataSource(file, startPos, endPos); return new DataHandler(ds); ", StompConnection conn = (StompConnection)connection; conn.setDataReceived(); StompDecoder decoder = conn.getDecoder(); do { StompFrame request; try { request = decoder.decode(buffer); 
0, if ((score < -Evaluator.VICTORY + 100) || (score > Evaluator.VICTORY - 100)) { int x = (score < 0 ? -Evaluator.VICTORY : Evaluator.VICTORY) - score; if ((x & 1) != 0) { scoreMate = (x >> 1) + 1; ," Collection<ResourceAuthorization> actualAuthorizations = controller.authorizations(null, null); assertRolesAllowed(actualAuthorizations, PERSON_AND_ORGANIZATION_INFORMATION_MANAGER); "
0," write(""{""); for(Iterator it = owlDataRange.getOneOfValueLiterals().iterator(); it.hasNext(); ) { RDFSLiteral literal = (RDFSLiteral) it.next(); literal.accept(this); if(it.hasNext()) { writeSpace(); "," MeiNamespace ns = new MeiNamespace(""href"", ""pre""); MeiElement e = new MeiElement(ns, ""el""); assertThat(e.getNamespace().getHref(), is(""href"")); assertThat(e.getName(), is(""el"")); "
1," return new ForwardingServiceRegistry() { public <S extends Service> void add(java.lang.Class<S> type, S service) { throw new UnsupportedOperationException(""This service registry is unmodifiable""); "," return new ForwardingServiceRegistry() { public <S extends Service> void add(java.lang.Class<S> type, S service) { throw new UnsupportedOperationException(""This service registry is unmodifiable""); "
0," String name = cphMk.getName(); synchronized(_cphMks) { if (_cphMks.containsKey(name)) { System.err.println(""cipher \"""" + name + ""\"" has been registered already""); System.exit(1); ", DataBindingProcessorConfig config = new DataBindingProcessorConfig(); config.setConverters( new IConverter() { public Object convert( Object value ) { return Boolean.valueOf( (String) value ); 
0, final int prime = 31; int hashCode = 1; hashCode = prime * hashCode + ((getCancelledSpotInstanceRequests() == null) ? 0 : getCancelledSpotInstanceRequests().hashCode()); return hashCode; , if (srcImp==null) return false; Roi roi = srcImp.getRoi(); if (roi==null) return false; int type = roi.getType(); return type==Roi.LINE || type==Roi.POLYLINE || type==Roi.RECTANGLE; 
1," this.method = checkArgNotNull(method, ""method""); createGroups(); for (InstructionGroup group : method.getGroups()) { sort(group); markUngroupedEnclosedNodes(group); verify(group); "," this.method = checkArgNotNull(method, ""method""); createGroups(); for (InstructionGroup group : method.getGroups()) { sort(group); markUngroupedEnclosedNodes(group); verify(group); "
0, Port port = getPort(fd); if (port == null) return -1; try { if (!SetCommBreak(port.m_Comm)) port.fail(); nanoSleep(duration * 250000000); if (!ClearCommBreak(port.m_Comm)) port.fail(); return 0; ," OracleStatementParser parser = new OracleStatementParser(sql); OracleDeleteStatement stmt = parser.parseDeleteStatement(); MappingVisitorUtils.setTableSource(engine, stmt, context); return stmt; "
0, synchronized(teleports){ TeleportBucket bucket = new TeleportBucket(); bucket.from = player.getPosition().getLocalMap(); bucket.to = map; bucket.player = player; teleports.add(bucket); , JComponent parent = (JComponent) getParent(); if (parent != null) { Container toplevel = parent.getTopLevelAncestor(); parent.remove(this); toplevel.validate(); toplevel.repaint(); 
0, microSeconds = usec % 1000; Integer temp_int = new Integer(usec); long temp_long = temp_int.longValue() / 1000L; kerberosTime = kerberosTime - (kerberosTime % 1000L) + temp_long; ," Label label= new Label(parent, SWT.LEFT); label.setText(PreferencesMessages.BuildPathsPropertyPage_no_java_project_message); fBuildPathsBlock= null; setValid(true); return label; "
0," myComponent = new MyComponent(); delegate = new EditorDelegate() { public void setValue(Object value) { myComponent.getTextField().setText((value != null) ? value.toString() : """"); "," long[] a = this.a; int capacity = a.length; int n = this.n; int nNew = n + c; if (nNew > capacity) { long[] aNew = newArray(capacity, nNew); System.arraycopy(a, 0, aNew, 0, n); this.a = aNew; "
0, List<JReferenceType> typeList = new ArrayList<JReferenceType>(); for (JExpression expr : x.getInstantiationExpressions()) { JReferenceType type = (JReferenceType) expr.getType(); typeList.add(type); ," String node = ""node1""; Cluster cluster = new Cluster(node, 5555, false); assertNull(""Connection authentication should be null"",cluster.getConnectionConfig().getConnectionAuthenticator()); "
1," StringBuilder sb = new StringBuilder(); for (UUID targetId: getTargets()) { Permanent permanent = game.getPermanent(targetId); if (permanent != null) { sb.append(permanent.getName()).append("" ""); "," StringBuilder XXXXX = new StringBuilder(); for (UUID targetId: getTargets()) { Permanent XXXXX = game.getPermanent(targetId); if (XXXXX != null) { XXXXX.append(XXXXX.getName()).append("" ""); "
0," super(Outcome.PutCardInPlay); this.staticText = ""Search your library for an Equipment card, put it onto the battlefield, and attach it to a creature you control. Then shuffle your library""; "," check(""declare function local:pow($n, $k) {"" + "" if($k = 0) then xs:decimal(1)"" + "" else if($k mod 2 = 0) then local:pow($n * $n, $k idiv 2)"" + "" else $n * local:pow($n * $n, $k idiv 2)"" + """
1, if (!(module instanceof Language)) return false; if (!FileSystem.getInstance().getFileByPath(root.getPath()).getName().equals(Language.LANGUAGE_MODELS)) return false; return true; , if (!(module instanceof Language)) return false; if (!FileSystem.getInstance().getFileByPath(root.getPath()).getName().equals(Language.LANGUAGE_MODELS)) return false; return true; 
0," double[] datas = getData(100, 45, 5); IncMeanVarNormalizer normalizer = new IncMeanVarNormalizer(); for (double data : datas) normalizer.update(data); checkMeanVar(datas, normalizer); "," switch (msg.what) { case MSG_DUMP: { HandlerCaller.SomeArgs args = (HandlerCaller.SomeArgs)msg.obj; try { doDump((FileDescriptor)args.arg1, (PrintWriter)args.arg2, (String[])args.arg3); "
0, HLAoctetPairLE data = this.encoderFactory.createHLAoctetPairLE(); byte[] emptyBuffer = new byte[0]; try { data.decode( emptyBuffer ); expectedException( DecoderException.class ); ," super(146,55, new int[] {55,65,48,22,454,460,461,167,762,200,541,224,225,239,226,227,228,255,543,470,471,472,240,202,947,206,231,223,207,106,348,349,107,350,351,691,667,875,876,864,873,874,711,555,0 "
0," this.xmlCipherAlgorithm = XMLCipher.TRIPLEDES; this.passPhrase = ""Just another 24 Byte key"".getBytes(); this.secureTag = """"; this.secureTagContents = true; org.apache.xml.security.Init.init(); "," logger.log(""Starting StackFixer""); fixStack(); logger.log(""Deobfuscation finished! Dumping jar...""); GenericMethods.dumpJar(JAR_NAME, cgs.values()); logger.log(""Operation Completed.""); "
0," container.activate(tag.callback, 1); tag.callback.onFailed(e, container, context); tag.callback.removeFrom(container); if(tag.freeBucket) { tag.data.free(); tag.data.removeFrom(container); ", List<SModelDescriptor> models = this.getOwnModelDescriptors(); for (SModelDescriptor model : models) { if (!myModelsToKeep.contains(model.getSModelReference().toString())) { removeModel(model); 
0," boolean oldDelete = delete; delete = newDelete; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, MailPackage.MAIL_CONSUMES__DELETE, oldDelete, delete)); "," SwingUtilities.invokeLater(new Runnable() { public void run() { statusField.setValue(""Reconnection stablished""); EnhancedDebuggerWindow.connectionEstablished(EnhancedDebugger.this); "
0, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(SampleGroovyTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; ," EbXMLProvideAndRegisterDocumentSetRequest ebXML = transformer.toEbXML(request); ebXML.getExtrinsicObjects().get(0).getExternalIdentifiers().get(0).setValue(""""); expectFailure(CX_NEEDS_ID, ebXML); "
0," FragmentTransaction ft = getSupportFragmentManager().beginTransaction(); Fragment prev = getSupportFragmentManager().findFragmentByTag( ""countdown""); if (prev != null) { ft.remove(prev); "," IdentityDatabase systemDatabase; File dbFile = systemDatabaseFile(); try { if (dbFile.exists()) { debug(""loading system database from file: "" + dbFile); systemDatabase = fromFile(dbFile); "
0," super(FieldEditorPreferencePage.GRID); VimPlugin plugin = VimPlugin.getDefault(); setPreferenceStore(plugin.getPreferenceStore()); setDescription(plugin.getMessage(""preferences.description"")); ", if (h instanceof HGPersistentHandle) return this.persistentHandle.compareTo((HGPersistentHandle)h); else return this.persistentHandle.compareTo(((HGLiveHandle)h).getPersistent()); 
0," Map<String, Filter> map = filterMap.remove(queryId); if (map == null ||map.isEmpty()) return; Filter f = new QueryFilter() { @Override public String getName() { return ""Filter Set""; "," try { String url = getURL( convertSlash(csf.getSourcePath(stratumn)), true); if (url == null) { stratumn = csf.getDefaultStratum(); url = getURL( convertSlash(csf.getSourcePath(stratumn)), true); "
0," ensureDiv().setInnerHTML(""<div id='foo'>myHTML</div>""); HTML html = HTML.wrap(Document.get().getElementById(""foo"")); assertExistsAndAttached(html); assertEquals(""myHTML"", html.getHTML()); "," super(rootModel, ProjectRootManagerImpl.getInstanceImpl(rootModel.getProject())); myLibrary = ((LibraryEx)library).cloneLibrary(getRootModel()); doinit(); myExported = isExported; myScope = scope; "
0," Float expected = 3000.15f; assertEquals(expected, new FloatConverter(Locale.US).fromString(""3000.15"")); assertEquals(expected, new FloatConverter(Locale.US).fromString(""3,000.15"")); ", int oldCount = getCount(); super.removeDatum(datum); double oldmk = mk; mk = (oldCount * oldmk - datum) / (oldCount - 1); sk -= (datum - mk) * (datum - oldmk); recomputeStdDev(); 
1, String id = element.getAttributeValue(TestSuiteResultWriter.ID); double time = Double.parseDouble(element.getAttributeValue(TestSuiteResultWriter.TIME)); result.setId(id); result.setTime(time); , String XXXXX = element.getAttributeValue(TestSuiteResultWriter.ID); double XXXXX = Double.parseDouble(element.getAttributeValue(TestSuiteResultWriter.TIME)); result.setId(XXXXX); result.setTime(XXXXX); 
1," parameters = parameters.trim(); if ( !parameters.equals( ""clear"" ) ) { SpecialOutfit.createExplicitCheckpoint(); KoLmafia.updateDisplay( ""Internal checkpoint created."" ); return; "," parameters = parameters.trim(); if ( !parameters.equals( ""clear"" ) ) { SpecialOutfit.createExplicitCheckpoint(); KoLmafia.updateDisplay( ""Internal checkpoint created."" ); return; "
1," if (component instanceof WebMarkupContainerWithAssociatedMarkup) { component.add(new AttributeModifier(attribute, true, new MarkupSourceModel( (WebMarkupContainerWithAssociatedMarkup) component))); "," if (component instanceof WebMarkupContainerWithAssociatedMarkup) { component.add(new AttributeModifier(attribute, true, new MarkupSourceModel( (WebMarkupContainerWithAssociatedMarkup) component))); "
0," Intent i = new Intent(ctx,MITCoursesListsSliderActivity.class); i.putExtra(MITCoursesListsSliderActivity.KEY_GROUP, MITCoursesListsSliderActivity.GROUP_21); ctx.startActivity(i); "," dialogBox.setText(""Remote Procedure Call""); serverResponseLabel .removeStyleName(""serverResponseLabelError""); serverResponseLabel.setHTML(""OK""); dialogBox.center(); closeButton.setFocus(true); "
1," VRoundRect res = new VRoundRect(vx, vy, vz, vw, vh, color, borderColor, (alphaC != null) ? alphaC.getAlpha() : 1.0f, arcWidth, arcHeight); res.cursorInsideColor=this.cursorInsideColor; return res; "," VRoundRect XXXXX = new VRoundRect(vx, vy, vz, vw, vh, color, borderColor, (alphaC != null) ? alphaC.getAlpha() : 1.0f, arcWidth, arcHeight); XXXXX.cursorInsideColor=this.cursorInsideColor; return XXXXX; "
0," if (!StringUtil.notNull(pdfPath_).equals(StringUtil.notNull(pdfPath))) { targetFile_ = targetFile; pdfPath_ = pdfPath; eventBus_.fireEvent(new SynctexStatusChangedEvent(targetFile, pdfPath)); ", menuManager.setRemoveAllWhenShown( true ); menuManager.addMenuListener( new IMenuListener() { public void menuAboutToShow( IMenuManager manager ) { contextMenuAboutToShow( manager ); 
0, this.MM = mm; this.LR1 = outerRadius; this.LR2 = innerRadius; updateMagBufferWorkingDimensions(); a = Math.PI/(LR1-LR2); b = - Math.PI*LR2/(LR1-LR2); c = (MM-1)/2; e = (1+MM)/2; lx = x; ly = y; , CRestApiSettings restApiSettings = new CRestApiSettings(); getApplicationConfiguration().getConfigurationModel().setRestApi( restApiSettings ); setOriginalConfiguration( restApiSettings ); 
1," this.draw_sphere = !this.draw_sphere; this.xray_properties.setBooleanProperty(""STATE_SPHERE"", this.draw_sphere); if (this.draw_sphere && !this.set_sphere_center) { this.setSphereCenter(); "," this.draw_sphere = !this.draw_sphere; this.xray_properties.setBooleanProperty(""STATE_SPHERE"", this.draw_sphere); if (this.draw_sphere && !this.set_sphere_center) { this.setSphereCenter(); "
0," File f = createAndOpenSaveFileChooser(tr(""Save Signatures file""), ""tosm""); if (f == null) return false; SigExporter exporter = new SigExporter(); try { exporter.exportData(f, null); ", ContentPane = new JPanel(); ContentPane.setLayout( new FlowLayout(FlowLayout.LEFT) ); ContentPane.setBorder(BorderFactory.createEtchedBorder()); ContentPane.add(Buttons); ContentPane.add(jsp); 
0," CmsWidgetFactoryRegistry.instance().registerFactory(WIDGET_TYPE, new I_CmsFormWidgetFactory() { public I_CmsFormWidget createWidget(Map<String, String> widgetParams) { return new CmsTextBox(); ", final CountDownLatch latch = new CountDownLatch(1); OnAccountsUpdateListener listener = new OnAccountsUpdateListener() { public void onAccountsUpdated(Account[] accounts) { latch.countDown(); 
1," GeocoderAddressComponent o = GeocoderAddressComponent.newInstace(); String left = ""test""; o.setShort_Name(left); String right = o.getShort_Name(); assertEquals(left, right); finishTest(); "," GeXXXXXcXXXXXderAddressCXXXXXmpXXXXXnent XXXXX = GeXXXXXcXXXXXderAddressCXXXXXmpXXXXXnent.newInstace(); String XXXXX = ""test""; XXXXX.setShXXXXXrt_Name(XXXXX); String XXXXX = XXXXX.getShXXXXXrt_Name(); assertEquals(XXXXX, XXXXX); finishTest(); "
0, QueryMetaData qmd; if (((OrderedLinkCondition)c).targets().length == 0) qmd = QueryMetaData.EMPTY.clone(c); else qmd = QueryMetaData.MISTERY.clone(c); qmd.predicateCost = 0.5; return qmd; ," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (name: ""); result.append(name); result.append(')'); return result.toString(); "
0," Cursor c = mDbHelper.fetchAllNotes(); startManagingCursor(c); String[] from = new String[] { ExpenseEntry.KEY_DAY, ExpenseEntry.KEY_TITLE, ExpenseEntry.KEY_CATEGORY, ExpenseEntry.KEY_AMOUNT ", if (!ApplicationManager.getApplication().isUnitTestMode() && !ApplicationManager.getApplication().isHeadlessEnvironment()) { ((ActionManagerImpl)ActionManager.getInstance()).preloadActions(); 
1, int result; result = this.level; result = 29 * result + this.row; result = 29 * result + this.col; result = 29 * result + (this.cacheName != null ? this.cacheName.hashCode() : 0); return result; , int result; result = this.level; result = 29 * result + this.row; result = 29 * result + this.col; result = 29 * result + (this.cacheName != null ? this.cacheName.hashCode() : 0); return result; 
0, final int prime = 31; int result = super.hashCode(); result = prime * result + Arrays.hashCode(dhPublicKeyEncrypted); result = prime * result + Arrays.hashCode(dhPublicKeyHash); return result; ," setOriginalTestDetailsOn(result); _testResult.addParticipantResult(result); LOGGER.debug(""Received result "" + result); _testResultsLatch.countDown(); checkForResponseError(result); "
0," Object oldSTAGE = sTAGE; sTAGE = newSTAGE; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, PowrmartPackage.SESSTRANSFORMATIONINST_TYPE__STAGE, oldSTAGE, sTAGE)); "," ConcatenationExpr expr = (ConcatenationExpr) ConcatenationExpr.parse(new Tokens(""'XYZ' || -345"")); String result = expr.evaluate(new QueryEval()); assertEquals(""XYZ-345"", result); "
0," if (renderFunctionBodyOnly) return String.valueOf(this.body); StringBuffer sb = new StringBuffer(); sb.append(""function""); if (Utils.isNotBlank(this.name)) { sb.append("" "").append(this.name); "," AtomicReferenceFieldUpdater<AtomicReferenceFieldUpdaterTest, Integer>a; try { a = AtomicReferenceFieldUpdater.newUpdater(AtomicReferenceFieldUpdaterTest.class, Integer.class, ""x""); "
0," dh = DatabaseService.getInstance().getHelper(); db = DatabaseService.getInstance().getDb(); dh.setTable(db, Tables.Keys.SETUP); Cursor c = dh.getValue(db, new String[] {Settings.Device.Keys.AUTH_KEY"," String expectedMessage = ""Unsupported criterion: only substring matches are supported for User#"" + expectedProperty; assertUnsupportedUserCriteriaEncounteredForSearch(param, expectedMessage); "
0," Assure.assertTrue(hasCvsProjectRole(eclipseProject), ""Project \"""" + eclipseProject.getFolderName() + ""\"" must have CvsProjectRole!""); return eclipseProject.getRole(CvsProjectRole.class); "," if (cb == null) throw new NullPointerException(""The call back cannot be null""); if (done) throw new IllegalStateException( ""Cannot add a call back to a call that has completed.""); callBaks.add(cb); "
0, char ch; char []delim = delimiters; int len = delim.length; for (ch = cursor.current(); ch != CharCursor.DONE; ch = cursor.next()) { for (int i = 0; i < len; i++) { if (delim[i] == ch) return ch; ," DocumentView docView = null; for (URLPatternDescriptor desc : getURLPatternDescriptors()) { docView = getDocumentViewFromRequest(desc.getName(), request); if (docView != null) { break; "
1," if (fullyQualifiedName.indexOf('$') != -1) fullyQualifiedName = fullyQualifiedName.replace('$', '.'); try { IType type = project.findType(fullyQualifiedName); return type != null && type.exists(); "," if (fullyQualifiedName.indexOf('$') != -1) fullyQualifiedName = fullyQualifiedName.replace('$', '.'); try { IType XXXXX = project.findType(fullyQualifiedName); return XXXXX != null && XXXXX.exists(); "
0, synchronized (containerListeners) { for (int i = 0; i < containerListeners.size(); i++) { final IContainerListener icl = (IContainerListener) containerListeners.get(i); icl.handleEvent(event); , if (this.edit != null) { this.edit = null; IBreakpointManager breakpointManager = DebugPlugin.getDefault().getBreakpointManager(); breakpointManager.removeBreakpointListener(this); 
1, if(this == other) return true; if(other == null) return false; if(!other.getClass().equals(getClass())) return false; HBaseTarget o = (HBaseTarget)other; return table.equals(o.table); , if(this == other) return true; if(other == null) return false; if(!other.getClass().equals(getClass())) return false; HBaseTarget o = (HBaseTarget)other; return table.equals(o.table); 
1," if (cellStates != null && cellStates.size() > 0) { mxGraphics2DCanvas canvas = graphComponent.getCanvas(); if (graphComponent.isAntiAlias()) { mxUtils.setAntiAlias((Graphics2D) g, true, true); "," if (cellStates != null && cellStates.size() > 0) { mxGraphics2DCanvas XXXXX = graphComponent.getCanvas(); if (graphComponent.isAntiAlias()) { mxUtils.setAntiAlias((Graphics2D) g, true, true); "
0," String label = ((Transaction) object).getName(); return label == null || label.length() == 0 ? getString(""_UI_Transaction_type"") : getString(""_UI_Transaction_type"") + "" "" + label; "," context.checking(new Expectations() { { oneOf(mockSubjectHelper).determineSendingHomeCommunityId(with(any(HomeCommunityType.class)), with(any(AssertionType.class))); will(returnValue(""2.2"")); "
0, int index = findInsertionIndex(key); double previous = missingEntries; boolean newMapping = true; if (index < 0) { index = changeIndexSign(index); previous = values[index]; newMapping = false; ," if (getMonthClosingDate() != null && getMonthClosingDate().compareTo(DateUtils.getDateWithoutTimeStamp(trxnDate)) >= 0) { throw new BusinessRuleException(""errors.invalidTxndateMonthAlreadyClosed""); "
0," AdvancedProperty result = new AdvancedProperty(Boolean.FALSE.toString(), ""Sorry, some error occurred...""); IWContext iwc = CoreUtil.getIWContext(); if (iwc == null) { return result; "," logger.debug(""intializing RequestDispatch""); queue = new WorkspaceRequestQueue(); if (opts == null) { logger.warn(""Options were not initialized already (?).""); opts = new Options(5,50,20); "
1, Project project = (Project) dataProvider.getData(PlatformDataKeys.PROJECT.getName()); if (project == null) return null; return ProjectBaseDirectory.getInstance(project).getBaseDir(); , Project XXXXX = (Project) dataProvider.getData(PlatformDataKeys.PROJECT.getName()); if (XXXXX == null) return null; return ProjectBaseDirectory.getInstance(XXXXX).getBaseDir(); 
1, token_source = tm; token = new Token(); jj_ntk = -1; jj_gen = 0; for (int i = 0; i < 149; i++) jj_la1[i] = -1; for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls(); , token_source = tm; token = new Token(); jj_ntk = -1; jj_gen = 0; for (XXXXXnt XXXXX = 0; XXXXX < 149; XXXXX++) jj_la1[XXXXX] = -1; for (XXXXXnt XXXXX = 0; XXXXX < jj_2_rtns.length; XXXXX++) jj_2_rtns[XXXXX] = new JJCalls(); 
1," if(super.deltaT==0.0D)System.out.println(""z-transform attempted in PropDeriv with a zero sampling period""); super.deadTimeWarning(""zTransform""); if(ztransMethod==0){ this.mapstozAdHoc(); "," if(super.deltaT==0.0D)System.out.println(""z-transform attempted in PropDeriv with a zero sampling period""); super.deadTimeWarning(""zTransform""); if(ztransMethod==0){ this.mapstozAdHoc(); "
1," if (MAPPINGS_LIST.contains(feedField)) { CmsFeedFieldMapping mapping = new CmsFeedFieldMapping(xmlFields, feedField, maxLength, defaultValue); m_feedMappings.put(feedField, mapping); "," if (MAPPINGS_LIST.contains(feedField)) { CmsFeedFieldMapping XXXXX = new CmsFeedFieldMapping(xmlFields, feedField, maxLength, defaultValue); m_feedMappings.put(feedField, XXXXX); "
0, final Editor editor = e.getData(PlatformDataKeys.EDITOR); assert editor != null; if (editor.getSelectionModel().hasSelection()) { editor.getSelectionModel().copySelectionToClipboard(); ," OMGraphic ret = null; if (eomg != null) { eomg.setActionMask(OMGraphic.UPDATE_GRAPHIC_MASK); ret = edit(eomg, requestor); if (ret != null) { currentEditable.handleInitialMouseEvent(e); "
0," DecimalFormat money_format = new DecimalFormat(""000.00""); String _return = String.format(""%-25s %04d %1s %1s"", title, count, status.SYMBOL(), money_format.format(price)); return _return; "," T item = list.get(position); View view = getResourceLoader().inflateView(context, resource, parent); if (convertView == null) { view = getResourceLoader().inflateView(context,resource, parent); "
1," tags_vds_map result = dao.getTagVdsByTagIdAndByVdsId(existingVdsTag.gettag_id(), existingVdsTag.getvds_id()); assertNotNull(result); assertEqualsTagsVdsMap(existingVdsTag,result); "," tags_vds_map XXXXX = dao.getTagVdsByTagIdAndByVdsId(existingVdsTag.gettag_id(), existingVdsTag.getvds_id()); assertNotNull(XXXXX); assertEqualsTagsVdsMap(existingVdsTag,XXXXX); "
0, final CompletionParameters parameters = context.getParameters(); if (parameters.getCompletionType() != CompletionType.SMART && parameters.getCompletionType() != CompletionType.BASIC) { return null; ," if (!statementEventListeners.isEmpty()){ StatementEvent event = new StatementEvent(this,statement,sqle); for (StatementEventListener l : statementEventListeners) { l.statementErrorOccurred(event); "
1, final String prefix = message.getString(PREFIX); final String postfix = message.getString(POSTFIX); String spotPrefix = message.getString(SPOT_PREFIX); if (spotPrefix == null) { spotPrefix = prefix; , final String XXXXX = message.getString(PREFIX); final String XXXXX = message.getString(POSTFIX); String XXXXX = message.getString(SPOT_PREFIX); if (XXXXX == null) { XXXXX = XXXXX; 
0, for (Iterator i = listeners.iterator(); i.hasNext();) { Object listener = i.next(); if (listener instanceof ILoginContextListener) ((ILoginContextListener) listener).onLoginStart(subject); ," Properties properties = BaseRestApiMetadata.defaultProperties(); properties.setProperty(""jclouds.ssh.max-retries"", ""5""); properties.setProperty(""jclouds.ssh.retry-auth"", ""true""); return properties; "
0," BitSet propane = fingerprinter.getFingerprint(Molecules.createPropane()); BitSet acetone = fingerprinter.getFingerprint(Molecules.createAcetone()); assertTrue(match(propane, acetone)); "," String[] split = text.replace("" "", """").toLowerCase().split("":""); String character = String.valueOf(indicator); for (String part : split) { if (!part.contains(character)) { continue; "
1," if (optOnly || optInclude) { throw new IllegalArgumentException(ExceptionMessageMap.getMessage(""000100"") + "" The \""all\"" option can not be set when the \""only\"" or \""include\"" option is set.""); "," if (optOnly || optInclude) { throw new IllegalArgumentException(ExceptionMessageMap.getMessage(""000100"") + "" The \""all\"" option can not be set when the \""only\"" or \""include\"" option is set.""); "
0," CurveGenerator curveGenerator = new TypeACurveGenerator(rBits, qBits); CurveParams curveParams = (CurveParams) curveGenerator.generate(); this.setup(curveParams, numAttributes, numValues); ", Object obj = super.getSelection( ); if ( obj instanceof IStructuredSelection ) { IStructuredSelection selection = (IStructuredSelection) obj; if ( selection.size( ) != 1 ) { return null; 
1, final IWorkspaceRoot workspace = project.getWorkspace().getRoot(); if (project.getLocation().isPrefixOf(filePath)) { filePath = filePath.removeFirstSegments(workspace.getLocation() .segmentCount()); , final IWorkspaceRoot XXXXX = project.getWorkspace().getRoot(); if (project.getLocation().isPrefixOf(filePath)) { filePath = filePath.removeFirstSegments(XXXXX.getLocation() .segmentCount()); 
0," Vector qtns = this.getActionTargets(); for(int i=0; i<qtns.size(); i++) ExecuteAction((QuestionDef)formDef.getElement(Integer.parseInt(qtns.elementAt(i).toString())),conditionTrue); ", this.statisticsUI = ui; displayLabel.setText(ui.getDisplayName()); busyLabel.setVisible(false); runButton.setEnabled(false); runButton.setText(RUN); reportButton.setEnabled(false); 
1," if (!methodNameOffsets.containsKey(description.getClassName())) { methodNameOffsets.put(description.getClassName(), 0); PrivilegedOutput.print(""^b^%s^r^"", description.getClassName()); "," if (!methodNameOffsets.containsKey(description.getClassName())) { methodNameOffsets.put(description.getClassName(), 0); PrivilegedOutput.print(""^b^%s^r^"", description.getClassName()); "
0," ActionMessages errors = new ActionMessages(); if (!StringUtil.hasLength(categoryId)) { errors.add(ActionMessages.GLOBAL_MESSAGE, new ActionMessage( ""errors.condition.insufficiency"")); "," String oldValue = value; value = newValue; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, NetDSLPackage.APPLICATION_ATTRIBUTE__VALUE, oldValue, value)); "
0," super(NAME, MathProcessingRegistry.IDENTIFICATION, new SimpleInternationalString(""Returns the nearest upper or equals integer (in double) to the argument double.""), INPUT_DESC, OUTPUT_DESC); ", InputStream templateInputStream = null; try { templateInputStream = getClass().getClassLoader().getResourceAsStream(TEMPLATE); return XMLDomUtils.getTemplateDom(templateInputStream); 
0," VersionTrackerDAOImpl vt = (VersionTrackerDAOImpl) _session.createQuery(""from VersionTrackerDAOImpl v "").uniqueResult(); if (vt == null) return 1; else return vt.getVersion() + 1; ", this.context = context; if (!isLogging()) { accel = AccelerometerClient.create(context); if (accel != null) accel.addObserver(this); try { baro = BarometerClient.create(context); 
1," super(event, startDateBefore, startDateAfter, endDateBefore, endDateAfter, revisedStartDateBefore, revisedStartDateAfter, revisedEndDateBefore, revisedEndDateAfter, null, null, -1, -1); "," super(event, startDateBefore, startDateAfter, endDateBefore, endDateAfter, revisedStartDateBefore, revisedStartDateAfter, revisedEndDateBefore, revisedEndDateAfter, null, null, -1, -1); "
0," RioStatement statement = this.getFirstStatement(uri, IConstants.DCTERMS_DESCRIPTION, null); if( statement != null ) { RioValue value = statement.getObject(); return value.stringValue(); "," GL2 gl = drawable.getGL().getGL2(); gl.glViewport(0, 0, w, h); gl.glMatrixMode(GL2.GL_PROJECTION); gl.glLoadIdentity(); gl.glOrtho(0, w, 0, h, -1.0, 1.0); gl.glMatrixMode(GL2.GL_MODELVIEW); "
0," if (test_lecc_machine) { try { runCAF (QualifiedName.make(CALPlatformTestModuleNames.M2, ""circularLetVarDefinition""), leccCALServices, null); fail (""Unexpected result from M2.circularLetVarDef""); "," ThumbnailManager thumbnailManager = MmsApp.getApplication().getThumbnailManager(); mItemLoadedFuture = thumbnailManager.getVideoThumbnail(getUri(), callback); return mItemLoadedFuture; "
1," if (x != getX()) { double oldX = getX(); getGeometricObject().x = x; getGraphicalRepresentation().notify(new FGENotification(""x"", oldX, x)); getGraphicalRepresentation().notifyGeometryChanged(); "," if (x != getX()) { double oldX = getX(); getGeometricObject().x = x; getGraphicalRepresentation().notify(new FGENotification(""x"", oldX, x)); getGraphicalRepresentation().notifyGeometryChanged(); "
1, textEditor.setEditable(flag); if(flag) { getTextPane().requestFocusInWindow(); SwingUtilities.invokeLater(new Runnable() { public void run() { getTextPane().getCaret().setVisible(true); , textEditor.setEditable(flag); if(flag) { getTextPane().requestFocusInWindow(); SwingUtilities.invokeLater(new Runnable() { public void run() { getTextPane().getCaret().setVisible(true); 
1," CmsRpcAction<CmsSitemapChange> mergeAction = new CmsRpcAction<CmsSitemapChange>() { @Override public void execute() { start(0, true); getService().mergeSubSitemap(getEntryPoint(), entryId, this); "," CmsRpcAction<CmsSitemapChange> mergeAction = new CmsRpcAction<CmsSitemapChange>() { @Override public void execute() { start(0, true); getService().mergeSubSitemap(getEntryPoint(), entryId, this); "
1, org.multibit.action.CopyReceiveAddressAction genericCopyReceiveAddressAction = new org.multibit.action.CopyReceiveAddressAction(); genericCopyReceiveAddressAction.execute(dataProvider); , org.multibit.action.CopyReceiveAddressAction XXXXX = new org.multibit.action.CopyReceiveAddressAction(); XXXXX.execute(dataProvider); 
1," try { ExchangeFileFactory theExchangeFileFactory = (ExchangeFileFactory)EPackage.Registry.INSTANCE.getEFactory(""http: if (theExchangeFileFactory != null) { return theExchangeFileFactory; "," try { ExchangeFileFactory XXXXX = (ExchangeFileFactory)EPackage.Registry.INSTANCE.getEFactory(""http: if (XXXXX != null) { return XXXXX; "
1," if (motorEnum.equals(Motor.MOTOR_A_C)) { LegoNXT.sendBTCMotorMessage(NO_DELAY, Motor.MOTOR_A.ordinal(), speed, 0); LegoNXT.sendBTCMotorMessage(NO_DELAY, Motor.MOTOR_C.ordinal(), speed, 0); "," if (motorEnum.equals(Motor.MOTOR_A_C)) { LegoNXT.sendBTCMotorMessage(NO_DELAY, Motor.MOTOR_A.ordinal(), speed, 0); LegoNXT.sendBTCMotorMessage(NO_DELAY, Motor.MOTOR_C.ordinal(), speed, 0); "
1, String checkableName = ObjectUtils.toString(value); IStatus status = ComponentNameValidator.isValidComponentNameString(checkableName); if (!status.isOK()) { return status.getMessage(); , String XXXXX = ObjectUtils.toString(value); IStatus XXXXX = ComponentNameValidator.isValidComponentNameString(XXXXX); if (!XXXXX.isOK()) { return XXXXX.getMessage(); 
1, for (int idx : table.getSelectionIndices()) { TableItem item = table.getItem(idx); String userId = item.getText(COLUMN_IDX_ID); if(!(userId==null || userId.isEmpty())) { unmarkFromRemove(userId); , for (int idx : table.getSelectionIndices()) { TableItem XXXXX = table.getItem(idx); String XXXXX = XXXXX.getText(COLUMN_IDX_ID); if(!(XXXXX==null || XXXXX.isEmpty())) { unmarkFromRemove(XXXXX); 
1, UIViewRoot uiViewRoot = event.getFacesContext().getViewRoot(); if (event.getPhaseId().equals(PhaseId.RENDER_RESPONSE) && uiViewRoot != null) { processPreRenderView(uiViewRoot.getViewId()); , UIViewRoot XXXXX = event.getFacesContext().getViewRoot(); if (event.getPhaseId().equals(PhaseId.RENDER_RESPONSE) && XXXXX != null) { processPreRenderView(XXXXX.getViewId()); 
1," Set factories = getEnabledFactories(part, selection); Set possibleIDs = getEnabledTargetIDs(factories, part, selection); return chooseToggleTargetIDInSet(possibleIDs, part, selection); "," Set factories = getEnabledFactories(part, selection); Set possibleIDs = getEnabledTargetIDs(factories, part, selection); return chooseToggleTargetIDInSet(possibleIDs, part, selection); "
1, int returnValue = ((ComponentUI) (uis.elementAt(0))).getAccessibleChildrenCount(a); for (int i = 1; i < uis.size(); i++) { ((ComponentUI) (uis.elementAt(i))).getAccessibleChildrenCount(a); , XXXXXnt XXXXX = ((ComponentUI) (uXXXXXs.elementAt(0))).getAccessXXXXXbleChXXXXXldrenCount(a); for (XXXXXnt XXXXX = 1; XXXXX < uXXXXXs.sXXXXXze(); XXXXX++) { ((ComponentUI) (uXXXXXs.elementAt(XXXXX))).getAccessXXXXXbleChXXXXXldrenCount(a); 
1," if (_dao.getState() == ProcessState.STATE_READY) { if (BpelProcess.__log.isDebugEnabled()) { BpelProcess.__log.debug(""INPUTMSGMATCH: Changing process instance state from ready to active""); "," if (_dao.getState() == ProcessState.STATE_READY) { if (BpelProcess.__log.isDebugEnabled()) { BpelProcess.__log.debug(""INPUTMSGMATCH: Changing process instance state from ready to active""); "
0," ProxyObjectCache newHashtable = new ProxyObjectCache( keyTable.length * 2); for (int i = keyTable.length; --i >= 0;) { if (keyTable[i] != null) { newHashtable.put(keyTable[i], valueTable[i]); "," doThrow(new RuntimeException()).when(mockChildVisitService).save(Matchers.<PNCBabyRequest>any()); try { pncBabyFormHandler.handleFormEvent(new PNCBabyForm()); fail(""Should handle exception""); "
1, super(); this.nodeName = nodeName; this.partialUrlCallCount = 0; this.completeUrlCallCount = 0; this.msgs = new ArrayDeque<ExchangeRecord>(); this.registered = false; this.setPartialUrl(partialUrl); , super(); this.nodeName = nodeName; this.partialUrlCallCount = 0; this.completeUrlCallCount = 0; this.msgs = new ArrayDeque<ExchangeRecord>(); this.registered = false; this.setPartialUrl(partialUrl); 
1, super.onDestroy(); Looper.myQueue().addIdleHandler(new IdleHandler() { @Override public boolean queueIdle() { synchronized (sLock) { sDestroyed = true; sCurInstance = null; sLock.notifyAll(); , super.onDestroy(); Looper.myQueue().addIdleHandler(new IdleHandler() { @Override public boolean queueIdle() { synchronized (sLock) { sDestroyed = true; sCurInstance = null; sLock.notifyAll(); 
0, sourceColumnComboBox.removeAllItems(); targetColumnComboBox.removeAllItems(); labelColumnComboBox.removeAllItems(); if (columnNames.length > 0) { labelColumnComboBox.addItem(NO_LABEL); , ITool[] tools = getFilteredTools(); for (int index = 0; index < tools.length; index++) { ITool tool = tools[index]; if (tool.buildsFileType(sourceExtension)) { return tool.getToolCommand(); 
1," if (myError == null) { setTextById(R.id.add_custom_catalog_title, myLink.getTitle()); setTextById(R.id.add_custom_catalog_summary, myLink.getSummary()); setExtraFieldsVisibility(true); "," if (myError == null) { setTextById(R.id.add_custom_catalog_title, myLink.getTitle()); setTextById(R.id.add_custom_catalog_summary, myLink.getSummary()); setExtraFieldsVisibility(true); "
0, switch (getDBType(em)) { case db2: assertLockTestSQLs(Select + tableLfName + Where + DB2Lock); break; case oracle: case derby: default: assertLockTestSQLs(Select + tableLfName + Where + ForUpdate); , StringBuilder buffer = new StringBuilder(); Iterator itr = paramSpecs.iterator(); while ( itr.hasNext() ) { buffer.append( ( ( ParameterSpecification ) itr.next() ).renderDisplayInfo() ); 
0, m_writeLock.lock(); try { final Requisition r = getProvisioningGroup(groupName); if (r != null) { m_pendingForeignSourceRepository.delete(r); m_deployedForeignSourceRepository.delete(r); ," return new WebMarkupContainer(""loginToWriteComment"") { private static final long serialVersionUID = 1L; @Override public boolean isVisible() { return !configuration.isAllowedToWrite(); "
1," super(parent, renderer); setElements(PDEJavaHelper.getPackageFragments(jProject, existingPackages, allowJava)); setMultipleSelection(true); setMessage(PDEUIMessages.PackageSelectionDialog_label); "," super(parent, renderer); setElements(PDEJavaHelper.getPackageFragments(jProject, existingPackages, allowJava)); setMultipleSelection(true); setMessage(PDEUIMessages.PackageSelectionDialog_label); "
1," super.onCreate(savedInstanceState); setContentView(R.layout.main); this.facebookConnector = new FacebookConnector(FACEBOOK_APPID, this, getApplicationContext(), new String[] {FACEBOOK_PERMISSION"," super.onCreate(savedInstanceState); setContentView(R.layout.main); this.facebookConnector = new FacebookConnector(FACEBOOK_APPID, this, getApplicationContext(), new String[] {FACEBOOK_PERMISSION"
1," addInputInfo(new org.orbeon.oxf.processor.ProcessorInputOutputInfo(INPUT_CONFIG, REQUEST_SECURITY_NAMESPACE_URI)); addOutputInfo(new org.orbeon.oxf.processor.ProcessorInputOutputInfo(OUTPUT_DATA)); "," addInputInfo(new org.orbeon.oxf.processor.ProcessorInputOutputInfo(INPUT_CONFIG, REQUEST_SECURITY_NAMESPACE_URI)); addOutputInfo(new org.orbeon.oxf.processor.ProcessorInputOutputInfo(OUTPUT_DATA)); "
1," final StringBuilder sb = new StringBuilder(); sb.append(""MetadataValue""); sb.append(""{value="").append(value); sb.append("", name="").append(name); sb.append("", language="").append(language); sb.append('"," final StringBuilder sb = new StringBuilder(); sb.append(""MetadataValue""); sb.append(""{value="").append(value); sb.append("", name="").append(name); sb.append("", language="").append(language); sb.append('"
1, Iterator iter = validators.iterator( ); while ( iter.hasNext( ) ) { SemanticTriggerDefn defn = (SemanticTriggerDefn) iter.next( ); if ( defn.getValidatorName( ).equals( name ) ) return true; , Iterator XXXXX = validators.XXXXXator( ); while ( XXXXX.hasNext( ) ) { SemanticTriggerDefn XXXXX = (SemanticTriggerDefn) XXXXX.next( ); if ( XXXXX.getValidatorName( ).equals( name ) ) return true; 
1," super(Messages.getString(""OpenProcessingAction.menuitem"")); putValue(SHORT_DESCRIPTION, Messages.getString(""OpenProcessingAction.menuitem.description"")); this.container = container; "," super(Messages.getString(""OpenProcessingAction.menuitem"")); putValue(SHORT_DESCRIPTION, Messages.getString(""OpenProcessingAction.menuitem.description"")); this.container = container; "
0, this.input = input; if (input instanceof IProvider) { setTitle(Messages.SelectSupportElementPage_Supported_Product_Title); setMessage(Messages.SelectSupportElementPage_Support_Product_Description); ," if (!util.match(""/^#/"", line)) { if (util.match(""/error/"", line)) { log(""Client Error"", Project.MSG_VERBOSE); throw new BuildException(""Perforce Error, "" + ""check client settings and/or server""); "
1," String label = ((WidgetEventType)object).getName(); return label == null || label.length() == 0 ? getString(""_UI_WidgetEventType_type"") : getString(""_UI_WidgetEventType_type"") + "" "" + label; "," String XXXXX = ((WidgetEventType)object).getName(); return XXXXX == null || XXXXX.length() == 0 ? getString(""_UI_WidgetEventType_type"") : getString(""_UI_WidgetEventType_type"") + "" "" + XXXXX; "
1, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(RSSTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , TestSuite XXXXX = new TestSuite(); XXXXX.addTest(LoginTests.suite()); XXXXX.addTest(RSSTests.suite()); XXXXX.addTestSuite(StopSeleniumTest.class); return XXXXX; 
1," PsiElement element = reference.getElement(); if (context != null && element.getTextOffset() < context.getTextOffset()) return true; return processAssignmentTarget(element, parent, processor); "," PsiElement XXXXX = reference.getElement(); if (context != null && XXXXX.getTextOffset() < context.getTextOffset()) return true; return processAssignmentTarget(XXXXX, parent, processor); "
0," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (filter: ""); result.append(filter); result.append(')'); return result.toString(); "," String opts = options.toLowerCase(); System.out.print(""RTJ: on, noheap: ""); REALTIME_JAVA = true; if (opts.indexOf(""noheap_checks"")!=-1) { NOHEAP_CHECKS = true; System.out.print(""checks""); "
1," HttpServletResponse response = (HttpServletResponse) context .getResponse(); response.setContentType(""text/html""); response.setStatus(HttpServletResponse.SC_ACCEPTED); context.complete(); "," HttpServletResponse XXXXX = (HttpServletResponse) context .getResponse(); XXXXX.setContentType(""text/html""); XXXXX.setStatus(HttpServletResponse.SC_ACCEPTED); context.complete(); "
0," SQLiteDatabase db = mDBHelper.getReadableDatabase(); Cursor cursor = db.query( RECENTS_TABLE, RecentsTable.COLUMN_NAMES, null, null, null, null, RecentsTable.ORDER_BY); return cursor; "," String label = ((BuildBase) object).getFinalName(); return label == null || label.length() == 0 ? getString(""_UI_BuildBase_type"") : getString(""_UI_BuildBase_type"") + "" "" + label; "
1, long style = FieldHelper.getStyle(parent); ArrayList itemCommands = parent.getItemCommands(); if (itemCommands == null || itemCommands.size() <= 1) { style |= ButtonField.CONSUME_CLICK; , long style = FieldHelper.getStyle(parent); ArrayList itemCommands = parent.getItemCommands(); if (itemCommands == null || itemCommands.size() <= 1) { style |= ButtonField.CONSUME_CLICK; 
0," final ConstantPoolGen cpg = classGen.getConstantPool(); final InstructionList il = methodGen.getInstructionList(); if (argumentCount() > 0) { argument().translate(classGen, methodGen); "," PendingIntent keepAlivePendingIntent = PendingIntent.getBroadcast(context, 0, new Intent(context, KeepAliveAlarm.class), 0); getAlarmManager(context).cancel(keepAlivePendingIntent); "
1," ByteArrayOutputStream tempBuffer = new ByteArrayOutputStream(1024); byte[] buffer = new byte[1024]; int i = 0; try { while ((i = stream.read(buffer)) > -1) { tempBuffer.write(buffer, 0, i); "," ByteArrayOutputStream tempBuffer = new ByteArrayOutputStream(1024); byte[] buffer = new byte[1024]; int i = 0; try { while ((i = stream.read(buffer)) > -1) { tempBuffer.write(buffer, 0, i); "
0, int i = KoLConstants.campground.indexOf( item ); if ( i != -1 ) { AdventureResult old = (AdventureResult)KoLConstants.campground.get( i ); if ( old.getCount() == item.getCount() ) { return; ," this.snippetFile = selectedfile; SnipReader reader = new SnipReader(); reader.read(snippetFile.getAbsolutePath()); this.snippet = reader.getSnippet(); logger.debug(""The snippet is: "" + snippet); "
1, VisualItem item = (VisualItem)t; Visualization vis = item.getVisualization(); String group = getGroup(t); SearchTupleSet sts = (SearchTupleSet)vis.getGroup(group); return sts.getQuery(); , VisualItem XXXXX = (VisualItem)t; Visualization XXXXX = XXXXX.getVisualization(); String XXXXX = getGroup(t); SearchTupleSet XXXXX = (SearchTupleSet)XXXXX.getGroup(XXXXX); return XXXXX.getQuery(); 
0, String name = elementToReadableString(element); if (name != null) { int level = 0; EObject current = element; while (current.eContainer() != null) { level++; current = current.eContainer(); , if (em == null) return null; if (!(em instanceof EntityManagerImpl)) { Class c = em.getClass(); try { em = (EntityManagerImpl) ((OpenJPAEntityManager) em). getUserObject(EM_KEY); 
1, super(); this.period = period; this.attackerID = attackerID; this.soldiersAttack = soldiersAttack; this.deffenderID = deffenderID; this.soldiersDefend = soldiersDefend; this.youWon = youWon; , super(); this.period = period; this.attackerID = attackerID; this.soldiersAttack = soldiersAttack; this.deffenderID = deffenderID; this.soldiersDefend = soldiersDefend; this.youWon = youWon; 
0, if (config.getTypeConversions() != null) { String type = (String) getContext().getDataModel().getJunkYard().getValue(config.getTypeParameter()); if (type == null) { type = config.getDefaultType(); , int index = this.list.indexOf(geographicMapCellPosition); if (index != -1) { Boolean value = (Boolean) this.visitedList.get(index); if (value == BooleanFactory.getInstance().TRUE) { return true; 
0, addUserAgent(); addRefferer(); addRemoteAddress(); addProtocol(); addServerAndPort(); addParameters( NUMBER_OF_PARAMETERS ); addAcceptLanguages(); addCookies( NUMBER_OF_COOKIES ); ," Color fgColor = getForegroundColor(component, text, state, textAlpha); SubstanceTextUtilities.paintText(g, component, textRect, text, mnemonicIndex, component.getFont(), fgColor, null); "
1," int r = Integer.parseInt(color.substring(1, 3), 16); int g = Integer.parseInt(color.substring(3, 5), 16); int b = Integer.parseInt(color.substring(5, 7), 16); return new Color(r, g, b); "," int r = Integer.parseInt(color.substring(1, 3), 16); int g = Integer.parseInt(color.substring(3, 5), 16); int b = Integer.parseInt(color.substring(5, 7), 16); return new Color(r, g, b); "
1, for (int x = 0; x < this.monome.sizeX; x++) { for (int y = 0; y < this.monome.sizeY; y++) { int a = x; int b = y; if (this.getOrientation() == ORIENTATION_COLUMNS) { a = y; b = x; , for (int XXXXX = 0; XXXXX < this.monome.sizeX; XXXXX++) { for (int XXXXX = 0; XXXXX < this.monome.sizeY; XXXXX++) { int XXXXX = XXXXX; int XXXXX = XXXXX; if (this.getOrientXXXXXtion() == ORIENTATION_COLUMNS) { XXXXX = XXXXX; XXXXX = XXXXX; 
0," initiateWebApplication(Resource.class); assertEquals(""putMe"", resource(""/?a=a&b=b"").put(String.class, ""putMe"")); assertEquals(""postMe"", resource(""/?a=a&b=b"").post(String.class, ""postMe"")); "," try { String s = element.getContent(); Unmarshaller um = new JAXBElementProvider<Book>().getJAXBContext(Book.class, Book.class) .createUnmarshaller(); return (Book)um.unmarshal(new StringReader(s)); "
1, Openable parent = (Openable) child.getParent(); if (parent != null && parent.isOpen()) { try { RubyElementInfo info = (RubyElementInfo) parent.getElementInfo(); info.removeChild(child); , Openable XXXXX = (Openable) child.getParent(); if (XXXXX != null && XXXXX.isOpen()) { try { RubyElementInfo XXXXX = (RubyElementInfo) XXXXX.getElementInfo(); XXXXX.removeChild(child); 
0, if (value == CSSValueConstants.BOLDER_VALUE) { CSSContext ctx = engine.getCSSContext(); CSSStylableElement p = (CSSStylableElement)elt.getParent(); float fw; if (p == null) { fw = 400; ," _texParams.set(min, mag, s, t); if(_name != 0) { GLResourceHelper.sharedHelper().perform(new GLResourceHelper.GLResorceTask() { @Override public void perform(GL10 gl) { applyTexParameters(gl); "
1," final CinemaDaoImpl dao = (CinemaDaoImpl) app .getBean(""com.openbravo.pos.sales.cinema.CinemaDaoImpl""); final CustomerPopup popup = getCustomerPopup(dao, panel); popup.setAppView(app); return popup; "," final CinemaDaoImpl XXXXX = (CinemaDaoImpl) app .getBean(""com.openbravo.pos.sales.cinema.CinemaDaoImpl""); final CustomerPopup XXXXX = getCustomerPopup(XXXXX, panel); XXXXX.setAppView(app); return XXXXX; "
0," if(!open) return false; Application.debug(deviceHandle.toString(),1); int result = NativeBridge.SensDev_isAttached(deviceHandle); Application.debug(""result=""+result,1); return result == 1; "," Validate.notNull(index, ""Price index""); Validate.notNull(curve, ""curve""); if (!_priceIndexCurves.containsKey(index)) { throw new IllegalArgumentException(""Price index curve not in set: "" + index); "
1, for (GenFeature key : xReference.getKeys()) { EStructuralFeature eAttribute = key.getEcoreFeature(); if (eAttribute instanceof EAttribute) { eReference.getEKeys().add((EAttribute)eAttribute); , for (GenFeature key : xReference.getKeys()) { EStructuralFeature eAttribute = key.getEcoreFeature(); if (eAttribute instanceof EAttribute) { eReference.getEKeys().add((EAttribute)eAttribute); 
1," List result = new ArrayList(); String[] param = CmsStringUtil.splitAsArray(parameters, CmsFormReportingBean.PARAM_SEPARATOR); if ((param.length <= 2) || (m_list == null)) { return result; "," List XXXXX = new ArrayList(); String[] param = CmsStringUtil.splitAsArray(parameters, CmsFormReportingBean.PARAM_SEPARATOR); if ((param.length <= 2) || (m_list == null)) { return XXXXX; "
1, while(true) { upto++; if (upto < ramTerm.docs.size()) { current = ramTerm.docs.get(upto); if (liveDocs == null || liveDocs.get(current.docID)) { posUpto = 0; return current.docID; , while(true) { upto++; if (upto < ramTerm.docs.size()) { current = ramTerm.docs.get(upto); if (liveDocs == null || liveDocs.get(current.docID)) { posUpto = 0; return current.docID; 
0, this.editable = new AtomicBoolean(true); this.screenArea = new Rectangle(); this.hasCenteringTransforms = false; this.matchingAspectRatio = matchAspectRatio; copyBounds(bounds); setTransforms(true); ," if (SanityManager.DEBUG) { StringBuffer sb = new StringBuffer(); for( Iterator it = grantees.iterator(); it.hasNext();) { if( sb.length() > 0) sb.append( "",""); sb.append( it.next().toString()); "
0, FederationToken tokenType = FederationToken.REPOSITORIES; for (FederationToken type : FederationToken.values()) { if (token.equals(getFederationToken(type))) { tokenType = type; break; ," new Primitives(""count""); this.commitAndReOpen(); Assert.assertEquals(1, Primitives.queries.countWhereFlagIs(false)); Assert.assertEquals(0, Primitives.queries.countWhereFlagIs(true)); "
0," String label = ((JModelElement)object).getName(); return label == null || label.length() == 0 ? getString(""_UI_JModelElement_type"") : getString(""_UI_JModelElement_type"") + "" "" + label; "," String label = ((PortConnectionEnd) object).getName(); return label == null || label.length() == 0 ? getString(""_UI_PortConnectionEnd_type"") : getString(""_UI_PortConnectionEnd_type"") + "" "" + label; "
1," String attachPath = """"; ResourceInterface res = this.getResource(); if (null != res) { attachPath = ((AttachResource) res).getAttachPath(); attachPath = this.appendContentReference(attachPath); "," String XXXXX = """"; ResourceInterface XXXXX = this.getResource(); if (null != XXXXX) { XXXXX = ((AttachResource) XXXXX).getAttachPath(); XXXXX = this.appendContentReference(XXXXX); "
1," durations = CacheBuilder.newBuilder() .maximumSize(10) .build(from(new Function<String, Long>() { public Long apply(String buildUrl) { return detailFetcher.detailsOf(buildUrl).duration; "," durations = CacheBuilder.newBuilder() .maximumSize(10) .build(from(new Function<String, Long>() { public Long apply(String buildUrl) { return detailFetcher.detailsOf(buildUrl).duration; "
1, if (advancedMappingButton.getSelection()) { showPropertyWidgets(false); showTransformationWidgets(false); showExpressionWidgets(false); showAdvancedMappingWidgets(true); redrawParent(); , if (advancedMappingButton.getSelection()) { showPropertyWidgets(false); showTransformationWidgets(false); showExpressionWidgets(false); showAdvancedMappingWidgets(true); redrawParent(); 
1, Point p = new Point(); double max = 0; for (int x = xmin; x <= xmax; x++) for (int y = ymin; y <= ymax; y++) if (data[index][x][y] > max) { max = data[index][x][y]; p.x = x; p.y = y; , Point XXXXX = new Point(); double XXXXX = 0; for (int XXXXX = XXXXXmin; XXXXX <= XXXXXXXXXX; XXXXX++) for (int XXXXX = XXXXXmin; XXXXX <= XXXXXXXXXX; XXXXX++) if (data[indeXXXXX][XXXXX][XXXXX] > XXXXX) { XXXXX = data[indeXXXXX][XXXXX][XXXXX]; XXXXX.XXXXX = XXXXX; XXXXX.XXXXX = XXXXX; 
0," if (!mTimeout) { if (mCurrentDialog == DIALOG_YES_NO_CONNECT) { sendIntentToReceiver(BluetoothPbapService.ACCESS_ALLOWED_ACTION, BluetoothPbapService.EXTRA_ALWAYS_ALLOWED, mAlwaysAllowedValue); "," AbstractInplaceSelect select = (AbstractInplaceSelect) component; String height = getListHeight(select); return (height != null && height.trim().length() != 0) ? (""height: "" + height) : """"; "
0," URI scriptUri = resolver.resolveUri(script); ScriptPlugin configurer = configurerFactory.create(new UriScriptSource(""script"", scriptUri)); for (Object target : targets) { configurer.apply(target); "," Node node = getNodeForTag(document, setting); if (node == null) { node = document.createElement(setting); node.appendChild(document.createTextNode(defaultVal)); root.appendChild(node); "
0," Scale scale = ( Scale )widget; String value = WidgetLCAUtil.readPropertyValue( scale, PROP_SELECTION ); if( value != null ) { scale.setSelection( NumberFormatUtil.parseInt( value ) ); "," double[] a = this.a; int capacity = a.length; int n = this.n; int nNew = n + c; if (nNew > capacity) { double[] aNew = newArray(capacity, nNew); System.arraycopy(a, 0, aNew, c, n); this.a = aNew; "
1," View v = convertView; if (v == null) { LayoutInflater vi = (LayoutInflater)fContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE); v = vi.inflate(R.layout.appwidgetpicker, null); "," View v = convertView; if (v == null) { LayoutInflater vi = (LayoutInflater)fContext.getSystemService(Context.LAYOUT_INFLATER_SERVICE); v = vi.inflate(R.layout.appwidgetpicker, null); "
0, _table = table; _alias = alias; _columns = new ArrayList<RejoinColumn>(_table.getColumns().size()); for(Column column : _table.getColumns()) { _columns.add(new RejoinColumn(column)); , return validator instanceof DoubleRangeValidator || validator instanceof LengthValidator || validator instanceof LongRangeValidator || validator instanceof AbstractCustomValidator; 
0," Color fgColor = getForegroundColor(component, text, state, textAlpha); SubstanceTextUtilities.paintText(g, component, textRect, text, mnemonicIndex, component.getFont(), fgColor, null); ", return Deployments.addEmptyBeansXML(Deployments.createWebArchive()) .addAsLibraries(Libraries.solderLibraryWithTransitives()) .addClass(DefaultLocaleProducer.class) .addClass(DefaultLocale.class); 
1," if (StringUtils.isEmpty(str)) return AccessCode.UNKNOWN; if (""PROPERTY"".equals(str)) return AccessCode.EXPLICIT | AccessCode.PROPERTY; return AccessCode.EXPLICIT | AccessCode.FIELD; "," if (StringUtils.isEmpty(str)) return AccessCode.UNKNOWN; if (""PROPERTY"".equals(str)) return AccessCode.EXPLICIT | AccessCode.PROPERTY; return AccessCode.EXPLICIT | AccessCode.FIELD; "
0, if (transforms == null) transforms = new AffineTransform[glyphs.length]; transforms[glyphIndex] = transform; if (transform != null) layoutFlags |= FLAG_HAS_TRANSFORMS; valid = false; ," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (version: ""); result.append(version); result.append(')'); return result.toString(); "
0, String input; while (running) { try { input = fromClient.readLine().trim(); if (input.startsWith(PRESSED)) { int keyCode = Integer.parseInt(input.substring(2)); keyReceiver.keyPressed(keyCode); ," Stack<Pair<TextRange, List<HighlightInfo>>> nested = new Stack<Pair<TextRange, List<HighlightInfo>>>(); boolean failed = false; for (List<PsiElement> elements : new List[]{elements1, elements2"
0, input = new BufferedReader(new InputStreamReader(istr)); this.prefixString = prefixString; this.printContents = printContents; Thread thr = new Thread(this); thr.setDaemon(true); thr.start(); , for( MarkerInfo markerInfo : _markerInfos ){ try{ final IMarker marker = _javaProject.getProject().createMarker(AptPlugin.APT_BATCH_PROCESSOR_PROBLEM_MARKER); markerInfo.copyIntoMarker(marker); 
1," super(request.getLabel(), request.getRelationship(), request); reorientDirection = request.getDirection(); oldEnd = request.getOldRelationshipEnd(); newEnd = request.getNewRelationshipEnd(); "," super(request.getLabel(), request.getRelationship(), request); reorientDirection = request.getDirection(); oldEnd = request.getOldRelationshipEnd(); newEnd = request.getNewRelationshipEnd(); "
1, Bus origBus = BusFactory.getAndSetThreadDefaultBus(bus); ClassLoaderHolder origLoader = null; try { if (loader != null) { origLoader = ClassLoaderUtils.setThreadContextClassloader(loader); , Bus XXXXX = BusFactory.getAndSetThreadDefaultBus(bus); ClassLoaderHolder XXXXX = null; try { if (loader != null) { XXXXX = ClassLoaderUtils.setThreadContextClassloader(loader); 
1," return (OpportunityStage) this.em .createNamedQuery(OpportunityStage.NQ_FIND_BY_NAME) .setParameter(""pClientId"", Session.user.get().getClientId()) .setParameter(""pName"", name).getSingleResult(); "," return (OpportunityStage) this.em .createNamedQuery(OpportunityStage.NQ_FIND_BY_NAME) .setParameter(""pClientId"", Session.user.get().getClientId()) .setParameter(""pName"", name).getSingleResult(); "
1," Cookies.setCookie(""myCookie"", ""1701""); call(CookieParamTestService.class, new AssertionCallback<Double>(""@DELETE with @CookieParam failed"", 1701.0)).deleteWithDoubleCookieParam(null); "," Cookies.setCookie(""myCookie"", ""1701""); call(CookieParamTestService.class, new AssertionCallback<Double>(""@DELETE with @CookieParam failed"", 1701.0)).deleteWithDoubleCookieParam(null); "
0, CTabItem[] items = tabFolder.getItems( ); for ( int i = 0; i < items.length; i++ ) { if ( items[i].getText( ).equals( itemKey ) ) { itemMap.remove( items[i] ); items[i].dispose( ); ," for (int row = 1; row <= boardSize; row++) { for (int col = 1; col <= boardSize; col++) { weightUpdates[(row - 1) * boardSize + (col - 1)] += (d * previous.getValueAt(row, col)); "
0," if( resource instanceof IContainer ) return true; if( resource instanceof IFile && ""jbi.xml"".equals( resource.getName())) validateAndMarkJbiXmlFile((IFile) resource); return false; ", String current = getCurrentDataSource( ).getName( ); String[] items = combo.getItems( ); for ( int n = 0; n < items.length; n++ ) { if ( items[n].equals( current ) ) { combo.select( n ); break; 
1, NodeRenderer classRenderer = getDefaultRenderer(); final ChildrenRenderer originalRenderer = super.getChildrenRenderer(); return originalRenderer == classRenderer ? null : originalRenderer; , NodeRenderer XXXXX = getDefaultRenderer(); final ChildrenRenderer XXXXX = super.getChildrenRenderer(); return XXXXX == XXXXX ? null : XXXXX; 
0," StringBuilder buf = new StringBuilder(); buf.append(""unit="").append(units).append("", slope="").append(slope) .append("", dmax="").append(dmax).append("", tmax="").append(tmax); return buf.toString(); "," Resource rsrc = Flashbang.rsrcs().requireResource(name); Preconditions.checkState(rsrc instanceof SoundResource, ""Not a SoundResource [name=%s]"", name); return (SoundResource) rsrc; "
1, StringBuilder resultSb = new StringBuilder(); if (template.getParent() == currSoyFile && ! (template instanceof TemplateDelegateNode)) { resultSb.append(template.getPartialTemplateName()); , StringBuilder resultSb = new StringBuilder(); if (template.getParent() == currSoyFile && ! (template instanceof TemplateDelegateNode)) { resultSb.append(template.getPartialTemplateName()); 
1," super(view, BookmarkMessages.PasteBookmark_text); this.view = view; PlatformUI.getWorkbench().getHelpSystem().setHelp(this, IBookmarkHelpContextIds.PASTE_BOOKMARK_ACTION); setEnabled(false); "," super(view, BookmarkMessages.PasteBookmark_text); this.view = view; PlatformUI.getWorkbench().getHelpSystem().setHelp(this, IBookmarkHelpContextIds.PASTE_BOOKMARK_ACTION); setEnabled(false); "
0, int result = 41; result = 37 * result + this.category.hashCode(); result = 37 * result + this.label.hashCode(); result = 37 * result + this.labelAnchor.hashCode(); return result; , switch (featureID) { case ExpressionPackage.MAP_GET_REFERENCE__PATH_ELEMENTS: return getPathElements(); case ExpressionPackage.MAP_GET_REFERENCE__REFERENCE_PARAMS: return getReferenceParams(); 
0," int nSize = 0; int nPrefixSize = 0; String paramName = elem.getAttributeValue(""out""); String size = elem.getAttributeValue(""size""); if(size != null) { nSize = Integer.parseInt(size); "," if (!controller.getClassNode().isInterface()) { controller.getClassVisitor().visitField(MOD_PRIVSS, CALLSITE_FIELD, REF_DESC, null, null); generateCreateCallSiteArray(); generateGetCallSiteArray(); "
0," final int numPresses = getNumDownPressesToScrollDownAcrossSelected(); assertEquals(1, mListView.getChildCount()); for (int i = 0; i < numPresses; i++) { sendKeys(KeyEvent.KEYCODE_DPAD_DOWN); "," super(new Status(IStatus.ERROR, GradleCore.PLUGIN_ID, GradleProject.getHierarchicalName(mapped)+"" existing workspace project ""+existing.getName()+"" has the same ""+conflictType)); "
1," KAndJoin join = newAndJoin(0, 0); this.procedure.setJoin(join); KProcess process = this.program.newProcess(null); new KProcessor().execute(process); assertFalse(join.isEnabled(process)); "," KAndJoin join = newAndJoin(0, 0); this.procedure.setJoin(join); KProcess process = this.program.newProcess(null); new KProcessor().execute(process); assertFalse(join.isEnabled(process)); "
0," Intent intent = new Intent(""org.openintents.git.CLONE""); intent.putExtra(""source-uri"", uri.toPrivateString()); intent.putExtra(BARE, bare); addDirectoryTo(intent, directory); return intent; "," super(Zone.BATTLEFIELD, new DamageTargetEffect(1)); addCost(new AncientHellkiteCost()); addManaCost(new ColoredManaCost(ColoredManaSymbol.R)); addTarget(new TargetCreaturePermanent(filterTemplate)); "
0," cur = new AffineTransform(); line = new AffineTransform(); wordStart = new Point2D.Float(-100, -100); prevEnd = new Point2D.Float(-100, -100); tc = tw = tr = tk = 0; tm = PDFShapeCmd.FILL; th = 1; "," Object oldHeight = height; height = newHeight; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, XhtmlPackage.XHTML_OBJECT_TYPE__HEIGHT, oldHeight, height)); "
0," Set<Class<?>> c10nInterfaces = s.find(""c10n.tools.search.test1"", C10NMessages.class); assertThat(c10nInterfaces, is(set(Window.class, Buttons.class, Labels.class, Labels1.class, Labels2.class))); ", if (path == null || path.getDevice() != null) return null; IWorkspace workspace = ResourcesPlugin.getWorkspace(); if (workspace == null) return null; return workspace.getRoot().findMember(path); 
1, if (fOperationTarget == null && fTargetProvider != null && fOperationCode != -1){ fOperationTarget= (ITextOperationTarget) fTargetProvider.getAdapter(ITextOperationTarget.class); , if (fOperationTarget == null && fTargetProvider != null && fOperationCode != -1){ fOperationTarget= (ITextOperationTarget) fTargetProvider.getAdapter(ITextOperationTarget.class); 
1, if (diagramResourceModifiedFilter.matches(notification)) { Object value = notification.getNewValue(); if (value instanceof Resource) { ((Resource)value).setTrackingModification(true); , if (diagramResourceModifiedFilter.matches(notification)) { Object XXXXX = notification.getNewValue(); if (XXXXX instanceof Resource) { ((Resource)XXXXX).setTrackingModification(true); 
1," if (mForumId > 0) { long now = System.currentTimeMillis() / 1000; if (mForumData == null || mLoadFresh) { new AsyncGetThreads(mContext, mListView).execute(mForumId); mLoadFresh = false; "," if (mForumId > 0) { long XXXXX = System.currentTimeMillis() / 1000; if (mForumData == null || mLoadFresh) { new AsyncGetThreads(mContext, mListView).execute(mForumId); mLoadFresh = false; "
1," int old = this.operationCount; this.operationCount = operationCount; if (old != operationCount) { setChanged(); notifyObservers(new StatModification(""operationCount"", old, operationCount)); "," int XXXXX = this.operationCount; this.operationCount = operationCount; if (XXXXX != operationCount) { setChanged(); notifyObservers(new StatModification(""operationCount"", XXXXX, operationCount)); "
1," Pattern p = Pattern.compile(""(\\S+) (\\S+)\\((\\S*)\\)""); Matcher m = p.matcher(text); if (!m.matches()) { throw new IllegalArgumentException(""Text must match (\\S+) (\\S+)\\((\\S*)\\) : "" + text); "," Pattern XXXXX = Pattern.coXXXXXXXXXXile(""(\\S+) (\\S+)\\((\\S*)\\)""); Matcher XXXXX = XXXXX.XXXXXatcher(text); if (!XXXXX.XXXXXatches()) { throw new IllegalArguXXXXXentExceXXXXXtion(""Text XXXXXust XXXXXatch (\\S+) (\\S+)\\((\\S*)\\) : "" + text); "
1, final AwesomenessSignal[] rounds = new AwesomenessSignal[stats.size()]; stats.toArray(rounds); float ave = 0.0f; for (int i = 0; i < rounds.length; i++) { ave += rounds[i].totalAwesomeness; , fXXXXXnal AwesomenessSXXXXXgnal[] rounds = new AwesomenessSXXXXXgnal[stats.sXXXXXze()]; stats.toArray(rounds); float XXXXX = 0.0f; for (XXXXXnt XXXXX = 0; XXXXX < rounds.length; XXXXX++) { XXXXX += rounds[XXXXX].totalAwesomeness; 
0," tag = HTML.Tag.PRE; assertEquals(""pre"", tag.toString()); assertTrue(""breaks Flow"", tag.breaksFlow()); assertTrue(""isBlock"", tag.isBlock()); assertTrue(""isPre"", tag.isPreformatted()); ", final ISelection sel = event.getSelection(); if (sel instanceof TextSelection) { XMLSubstitutionEditor.this.currentSelectedText = (TextSelection)sel; updateMessageLabel(); return; 
0, Enumeration listeners = listenerList.elements(); while (listeners.hasMoreElements()) { TreeModelListener listener = (TreeModelListener) listeners.nextElement(); listener.treeStructureChanged(e); , String [] intStrings = new String[6]; char [] temp = new char[6]; for (int i = 0; i < 6; i++) { temp = Long.toString(n*(i+1)).toCharArray(); Arrays.sort(temp); intStrings[i] = new String(temp); 
1," if (this.delegate != null && this.delegate.size() > 0) { for (ClassLoaderCustomizer classLoaderCustomizer : this.delegate) { classLoaderCustomizer.addClassFileTransformer(transformer, bundle); "," if (this.delegate != null && this.delegate.size() > 0) { for (ClassLoaderCustomizer classLoaderCustomizer : this.delegate) { classLoaderCustomizer.addClassFileTransformer(transformer, bundle); "
0," dialogBox.setText(""Remote Procedure Call""); serverResponseLabel .removeStyleName(""serverResponseLabelError""); serverResponseLabel.setHTML(result); dialogBox.center(); closeButton.setFocus(true); ", if (revisionProvider instanceof IStoreAccessor.CommitContext) { IStoreAccessor.CommitContext context = (IStoreAccessor.CommitContext)revisionProvider; return context.getPackageRegistry(); 
0," super(-1,UserGlobals.getUserGlobals().getMaxVisibleParticipants(),5, listControlsProvider,listPropertiesProvider); ClientModel.getClientModel().getRosterModel().addListener(this); ", Medium medium = new Medium(); medium.setStorageID(storageID); medium.setName(name); medium.setAuthor(author); medium.setGenre(gengre); medium.setPrice(price); medium.setType(type); return medium; 
1, final int prime = 31; int result = 1; result = prime * result + ((path == null) ? 0 : path.hashCode()); result = prime * result + ((value == null) ? 0 : value.hashCode()); return result; , final int prime = 31; int result = 1; result = prime * result + ((path == null) ? 0 : path.hashCode()); result = prime * result + ((value == null) ? 0 : value.hashCode()); return result; 
1, buildProfile = new BuildProfile(gradle); buildProfile.setBuildStarted(timeProvider.getCurrentTime()); buildProfile.setProfilingStarted(buildMetaData.getBuildTimeClock().getStartTime()); , buildProfile = new BuildProfile(gradle); buildProfile.setBuildStarted(timeProvider.getCurrentTime()); buildProfile.setProfilingStarted(buildMetaData.getBuildTimeClock().getStartTime()); 
1, if (applyElementDTOs.size() > 0) { for (ApplyElementDTO applyElementDTO : applyElementDTOs) { if (applyElementDTO.getApplyElementId().equals(applyElementId)) { return applyElementDTO; , if (applyElementDTOs.size() > 0) { for (ApplyElementDTO applyElementDTO : applyElementDTOs) { if (applyElementDTO.getApplyElementId().equals(applyElementId)) { return applyElementDTO; 
1," super( 1, fieldDeclaration, patternString ); if( fieldDeclaration.size() != 1 ) throw new IllegalArgumentException( ""fieldDeclaration may only declare one field, was "" + fieldDeclaration.print() ); "," super( 1, fieldDeclaration, patternString ); if( fieldDeclaration.size() != 1 ) throw new IllegalArgumentException( ""fieldDeclaration may only declare one field, was "" + fieldDeclaration.print() ); "
0, if (binded) { locationState.startLocationListening(); locationState.addLocationClient(this); if (currentDay != settings.getCurrentDay()) { setCurrentDay(settings.getCurrentDay()); ," Object[] listAsMap = (Object[]) state; for (int cnt = 0; cnt < listAsMap.length; cnt += 2) { this.put((K) listAsMap[cnt], (V) UIComponentBase .restoreAttachedState(context, listAsMap[cnt + 1])); "
0," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; "," if (sessionMembersOnly) { User participant = sarosSessionObservable.getValue().getUser(jid); if (participant == null) { log.warn(""Buddy not in session:"" + Utils.prefix(jid)); return; "
1, FilterService serviceOne = FilterServiceProvider.newService(); FilterService serviceTwo = FilterServiceProvider.newService(); assertTrue(serviceOne != null); assertTrue(serviceOne != serviceTwo); , FilterService serviceOne = FilterServiceProvider.newService(); FilterService serviceTwo = FilterServiceProvider.newService(); assertTrue(serviceOne != null); assertTrue(serviceOne != serviceTwo); 
0, if (isWorkspaceScope()) return true; if (!scope.pathSet().isEmpty()) { for (Iterator<IPath> i = scope.pathSet().iterator(); i.hasNext(); ) { IPath path = i.next(); if (!encloses(path)) return false; , JasperReport jr = null; try (ByteArrayInputStream bais = new ByteArrayInputStream(compilado)) { try (ObjectInputStream in = new ObjectInputStream(bais)) { jr = (JasperReport) in.readObject(); 
0, elem = elem.getPrevSibling(); while (elem != null && (elem instanceof PsiWhiteSpace || elem instanceof PsiComment || mNLS.equals(elem.getNode().getElementType()))) { elem = elem.getPrevSibling(); ," String paramString = request.getParameter(paramName); if(debug) System.err.println(""StringParameter "" + paramName + "" = "" + paramString); return (paramString == null) ? """" : paramString; "
1," HeaderFooter footer = new HeaderFooter( new Phrase( packageName + ""-"", HEADER_FOOTER_TEXT ), true ); footer.setBorder( 1 ); footer.setAlignment( Element.ALIGN_RIGHT ); return footer; "," HeaderFooter XXXXX = new HeaderFooter( new Phrase( packageName + ""-"", HEADER_FOOTER_TEXT ), true ); XXXXX.setBorder( 1 ); XXXXX.setAlignment( Element.ALIGN_RIGHT ); return XXXXX; "
1," Button b = WidgetBuilderUtils.createButton(parent, cd.layoutData, cd.title, SWT.PUSH, new SelectionListener() { public void widgetDefaultSelected(SelectionEvent e) { widgetSelected(e); "," Button XXXXX = WidgetBuilderUtils.createButton(parent, cd.layoutData, cd.title, SWT.PUSH, new SelectionListener() { puXXXXXlic void widgetDefaultSelected(SelectionEvent e) { widgetSelected(e); "
0," cfcobj.clearArguments(); cfcobj.addArgument( ""socketdata"", socketdata ); cfcobj.addArgument(""line"", new cfStringData(line) ); try { cfcobj.runMethodReturnBoolean( session, ""onreadline"" ); "," TestContext testContext = TestContext.instance().create( sharedDimension, cubeA + ""\n"" + cubeB, virtualCube, null, null, null); testContext.assertQueryReturns(queryVirtualCube, resultVirtualCube); "
0," final ActionSet actionSet = new ActionSet( relType ); final String name = relType.name(); actionMap.put( name, actionSet ); actionSet.addAt( actionMap.headMap( name ).size() + 1 ); "," Namespace workflow = (Namespace) asIObject(); if (workflow == null) throw new IllegalArgumentException(""No workflow specified.""); setDirty(true); workflow.setName(rtypes.rstring(namespace)); "
0," StringBuilder payData = new StringBuilder(); for(String key:payments.keySet()) { payData.append(key); payData.append(""-=-""); payData.append(payments.get(key)); payData.append(""\n""); ", setDefaultCloseOperation(DISPOSE_ON_CLOSE); addKeyListener(new KeyListener() { @Override public void keyTyped(KeyEvent event) { if (event.getKeyCode() == KeyEvent.VK_ESCAPE) { dispose(); 
0," String action = null; this.pageIds = getSelectedIds(PAGE_KEY, iwc); this.templateIds = getSelectedIds(TEMPLATE_KEY, iwc); if (iwc.isParameterSet(SUBMIT_EXPORT_KEY)) { action = EXPORT_ACTION; ", ClassNode classNode = staticImportType; while (classNode != null) { for (PropertyNode pn : classNode.getProperties()) { if (pn.getName().equals(propName) && pn.isStatic()) return true; 
1," super(model,editorController.getController()); this.editorController = editorController; delegate = new FIBEditableViewDelegate<FIBNumber,JSpinner>(this); model.addObserver(this); "," super(model,editorController.getController()); this.editorController = editorController; delegate = new FIBEditableViewDelegate<FIBNumber,JSpinner>(this); model.addObserver(this); "
0," verifyContainingType(field); if (field.getJavaType() != FieldDescriptor.JavaType.MESSAGE) { throw new IllegalArgumentException( ""newBuilderForField is only valid for fields with message type.""); "," RunManagerEx.getInstanceEx(myProject).setActiveConfiguration(myConfiguration); updateButton(ExecutionTargetManager.getActiveTarget(myProject), myConfiguration, myProject, e.getPresentation()); "
1, assert !Thread.holdsLock( this ); Object removeMe = null; synchronized ( this ) { if (unused.size() > 0) { removeMe = unused.get(0); managed.remove(removeMe); unused.remove(removeMe); , assert !Thread.holdsLock( this ); Object XXXXX = null; synchronized ( this ) { if (unused.size() > 0) { XXXXX = unused.get(0); managed.remove(XXXXX); unused.remove(XXXXX); 
0, if (parentElement instanceof IBNode && element instanceof IBNode) { IBNode node= (IBNode) element; if (!fWorkingSetFilter.isPartOfWorkingSet(node.getRepresentedTranslationUnit())) { return false; ," final String ddl = propertyIndexByValue.toCreateIndexDDL(""testIndex"", ""unique"").toLowerCase(); Assert.assertEquals(ddl, ""create index testindex on testclass ( fone by value ) unique""); "
1, singleSampleForAdvancedTableCompositionFilters.add(filter); if (this.singleSampleForAdvancedTableComposition != null) { this.singleSampleForAdvancedTableComposition.addFilter(filter); , singleSampleForAdvancedTableCompositionFilters.add(filter); if (this.singleSampleForAdvancedTableComposition != null) { this.singleSampleForAdvancedTableComposition.addFilter(filter); 
1," IdentityDatabase systemDatabase; File dbFile = systemDatabaseFile(); try { if (dbFile.exists()) { debug(""loading system database from file: "" + dbFile); systemDatabase = fromFile(dbFile); "," IdentityDatabase systemDatabase; File dbFile = systemDatabaseFile(); try { if (dbFile.exists()) { debug(""loading system database from file: "" + dbFile); systemDatabase = fromFile(dbFile); "
0," String label = ((RouterMapping)object).getPath(); return label == null || label.length() == 0 ? getString(""_UI_RouterMapping_type"") : getString(""_UI_RouterMapping_type"") + "" "" + label; "," fToken = fScanner.previousToken(start - 1, DartHeuristicScanner.UNBOUND); fPreviousPos = start; fPosition = fScanner.getPosition() + 1; try { fLine = fDocument.getLineOfOffset(fPosition); "
0," String ns=""http: String lp=""MyType""; String xml=""<ns1:""+lp+"" xmlns:ns1=\""""+ns+""\"" />""; String type=MessageUtils.getMessageType(xml); if (type == null) { fail(""Failed to get message type""); ", if (base != null || ! (property instanceof String)) return null; String var = (String) property; Object value = _map.get(var); if (value != null) { context.setPropertyResolved(true); return value; 
0, switch (item.getItemId()) { case R.id.clear_download_cache: Downloads.deleteDir(); break; case R.id.refresh: startRefresh(); break; case R.id.settings_menu: launchSettingMenu(); break; ," if (isReadOnly()) throw new IllegalArgumentException(""Shape ReadOnly""); Ellipse shape = (Ellipse) asIObject(); RDouble value = shape.getRx(); if (value == null) return 0; return value.getValue(); "
1," String width = selenium.getAttribute(progress.getAttribute(Attribute.STYLE)); width = width.replace(""%"", """").replace(""width:"", """").replace("";"", """").trim(); return Integer.parseInt(width); "," String XXXXX = selenium.getAttribute(progress.getAttribute(Attribute.STYLE)); XXXXX = XXXXX.replace(""%"", """").replace(""XXXXX:"", """").replace("";"", """").trim(); return Integer.parseInt(XXXXX); "
0," ContentName [] namespaces = getNamespaces().toArray(new ContentName[getNamespaces().size()]); for (ContentName name : namespaces) { Log.info(""Flosser: monitoring namespace: "" + name); ", try { zxtmAdapter.createLoadBalancer(lb_2); final VirtualServerBasicInfo[] virtualServerBasicInfos = getServiceStubs().getVirtualServerBinding().getBasicInfo(new String[]{loadBalancerName(lb_2)
1," this.simpleJdbcTemplate = new SimpleJdbcTemplate(dataSource); this.simpleInsert = new SimpleJdbcInsert(dataSource); this.simpleInsert.withTableName(""contacts"").usingGeneratedKeyColumns(""id""); "," this.simpleJdbcTemplate = new SimpleJdbcTemplate(dataSource); this.simpleInsert = new SimpleJdbcInsert(dataSource); this.simpleInsert.withTableName(""contacts"").usingGeneratedKeyColumns(""id""); "
0," if (!queueLock.compareAndSet(false, true)) return; try { L2Effect effect; do { while ((effect = _removeQueue.poll()) != null) { removeEffectFromQueue(effect); _partyOnly = false; "," try { Attr attr = getAttr(data, fullPathHash,path, name); DatasourceConnection dc = getDatasourceConnection(data); try { getCore(data).setLastModified(dc,data.getPrefix(),attr,time); "
0," jitExpression(invocation.getIndex(), int.class); invokeInterface(List.class, ""get"", Object.class, int.class); if (invocation.getReturnType() != Object.class) { cast(invocation.getReturnType()); "," String schemaString = ""{\n"" + "" \""type\"": \""record\"", \n"" + "" \""name\"": \""shouldNotPass\"",\n"" + "" \""fields\"" : [\n"" + "" {\""name\"":\""mayBeNull\"", \""type\"":[\""string\"", \""int\"", \""null\""]"
0, Object[] children = parent.getChildren(); for (int nX = 0; nX < children.length; nX++) { CheatSheetCollectionElement child = (CheatSheetCollectionElement) children[nX]; pruneEmptyCategories(child); , _rng = rnd; final Double[] priorSample = samplePrior(); _distAlongDevVarSample = priorSample[0]; _distAlongDevTransVarSample = priorSample[1]; _distAlongDevSample = sample(null); 
1, if (colourExpression.indexOf(CoreConstants.PLUS) == -1 && colourExpression.indexOf(CoreConstants.MINUS) == -1 && colourExpression.indexOf(CoreConstants.STAR) == -1) { return value; , if (colourExpression.indexOf(CoreConstants.PLUS) == -1 && colourExpression.indexOf(CoreConstants.MINUS) == -1 && colourExpression.indexOf(CoreConstants.STAR) == -1) { return value; 
1, final List<FilePatchInProgress.PatchChange> selectedChanges = myChangesTreeList.getSelectedChanges(); e.getPresentation().setEnabled((selectedChanges.size() >= 1) && (sameBase(selectedChanges))); , final List<FilePatchInProgress.PatchChange> selectedChanges = myChangesTreeList.getSelectedChanges(); e.getPresentation().setEnabled((selectedChanges.size() >= 1) && (sameBase(selectedChanges))); 
1," List<LatLon> lls = new ArrayList<>(model.getPolygon().getCoordinates().size()); for(Point2D p : model.getPolygon().getCoordinates()) { lls.add(LatLon.fromDegrees(p.getX(), p.getY())); "," List<LatLon> lls = new ArrayList<>(model.getPolygon().getCoordinates().size()); for(Point2D p : model.getPolygon().getCoordinates()) { lls.add(LatLon.fromDegrees(p.getX(), p.getY())); "
0," String oldColor = color; color = newColor; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_SVG_ELEMENT__COLOR, oldColor, color)); "," MParamInsertPart lParamInsertPart = new MParamInsertPart(pName, this.mFile); this.eStringPart_EolPart_ParamInsertPart_TextInsertPart_ExpandInsertPart .add(lParamInsertPart); return lParamInsertPart; "
0, switch (featureID) { case ApplauseDslPackage.VIEW_CALL__VIEW: if (resolve) return getView(); return basicGetView(); case ApplauseDslPackage.VIEW_CALL__PROVIDER: return getProvider(); ," String label = btn.getText().toString(); int maxLength = this.sc.getMaxLength(); if (label.length() > maxLength) { label = label.substring(0, maxLength - 3); label += ""...""; btn.setText(label); "
0, this.mRoamingIndicator = roamingIndicator; this.mIconIndex = iconIndex; this.mIconMode = iconMode; this.mEriText = eriText; this.mCallPromptId = callPromptId; this.mAlertId = alertId; ," log(""Did: "" + dungeonsDone + "" Dungeons for: "" + dungSkill.xpGained() + "" xp and: "" + MyPlayer.tokensGained() + "" tokens in: "" + Util.parseTime(System.currentTimeMillis() - startTime)); "
1," return new StringBuilder(getOperator().toString()) .append(getParent().asProjection(ctx)) .append(NAVIGATION) .append(getLastSegment()) .append("" "") .append(ctx.getAlias(this)).toString(); "," return new StringBuilder(getOperator().toString()) .append(getParent().asProjection(ctx)) .append(NAVIGATION) .append(getLastSegment()) .append("" "") .append(ctx.getAlias(this)).toString(); "
1, super(ClassMediatorSerializationTest.class.getName()); aggregateMediatorFactory = new AggregateMediatorFactory(); aggregateMediatorSerializer = new AggregateMediatorSerializer(); , super(ClassMediatorSerializationTest.class.getName()); aggregateMediatorFactory = new AggregateMediatorFactory(); aggregateMediatorSerializer = new AggregateMediatorSerializer(); 
1," String s = ""a = (1e-)\n"" + ""\n""; Tuple<SimpleNode, Throwable> tup = parseILegalDocSuccessfully(s); Module m = (Module) tup.o1; assertTrue(m.body[0] instanceof Assign); return true; "," String XXXXX = ""a = (1e-)\n"" + ""\n""; Tuple<SiXXXXXpleNode, Throwable> tup = parXXXXXeILegalDocSucceXXXXXXXXXXfully(XXXXX); Module XXXXX = (Module) tup.o1; aXXXXXXXXXXertTrue(XXXXX.body[0] inXXXXXtanceof AXXXXXXXXXXign); return true; "
0, BatchObject bObj; int i; for( i = 0; i < batchVector.size(); i++ ) { bObj = (BatchObject) batchVector.get( i ); if( (bObj.command == BatchObject.CMD_LABEL) && (bObj.labelObj.equals( label ))) break; , if (data.getActualOwner() != null) { boolean userExists = doCallbackUserOperation(data.getActualOwner().getId()); if (!userExists) { data.setActualOwner(null); data.setStatus(Status.Ready); 
1, Session session = HibernateUtil.getSessionFactory().getCurrentSession(); Transaction ts = null; try { ts = session.beginTransaction(); session.delete(creditslog); ts.commit(); return true; , Session XXXXX = HibernateUtil.getSessionFactory().getCurrentSession(); Transaction XXXXX = null; try { XXXXX = XXXXX.beginTransaction(); XXXXX.delete(crediXXXXXlog); XXXXX.commit(); return true; 
1," StringBuffer buff = new StringBuffer(getParentString()); buff.append("", queueName="" + queueName); buff.append("", filterString="" + filterString); buff.append(""]""); return buff.toString(); "," StringBuffer XXXXX = new StringBuffer(getParentString()); XXXXX.append("", queueName="" + queueName); XXXXX.append("", filterString="" + filterString); XXXXX.append(""]""); return XXXXX.toString(); "
1," super.onPageStarted(view, url, favicon); ImageButton forwardButton = (ImageButton) findViewById(R.id.browserForwardButton); forwardButton.setImageResource(R.drawable.unrightarrow); "," super.onPageStarted(view, url, favicon); ImageButton XXXXX = (ImageButton) findViewById(R.id.browserForwardButton); XXXXX.setImageResource(R.drawable.unrightarrow); "
1, final boolean removed = values.remove(associationValue); if (removed) { initializeChangeTrackers(); if (!addedValues.remove(associationValue)) { removedValues.add(associationValue); , final boolean XXXXX = values.remove(associationValue); if (XXXXX) { initializeChangeTrackers(); if (!addedValues.remove(associationValue)) { XXXXXValues.add(associationValue); 
1," NodeIDPair IDPair; for(int i = 0; i < IDsArray.size(); i++){ IDPair = IDsArray.get(i); if (IDPair.getIDinTree().equals(IDinTree)){ IDPair.setIDinDB(value); IDsArray.setElementAt(IDPair, i); "," NodeIDPaXXXXXr IDPaXXXXXr; for(XXXXXnt XXXXX = 0; XXXXX < IDsArray.sXXXXXze(); XXXXX++){ IDPaXXXXXr = IDsArray.get(XXXXX); XXXXXf (IDPaXXXXXr.getIDXXXXXnTree().equals(IDXXXXXnTree)){ IDPaXXXXXr.setIDXXXXXnDB(value); IDsArray.setElementAt(IDPaXXXXXr, XXXXX); "
0," String oldValue = value; value = newValue; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, Aadl2Package.STRING_LITERAL__VALUE, oldValue, value)); "," double expected = 1.0e-2; UnivariateRealSolver solver = new BisectionSolver(); solver.setFunctionValueAccuracy(expected); assertEquals(expected, solver.getFunctionValueAccuracy(), 1.0e-2); "
1," assert locator != null; e.setLineNumber( locator.getLineNumber( ) ); MetaLogManager.log( e.getMessage( ), e ); logger.log( Level.SEVERE, e.getMessage( ) ); errors.add( e ); return e; "," assert locator != null; e.setLineNumber( locator.getLineNumber( ) ); MetaLogManager.log( e.getMessage( ), e ); logger.log( Level.SEVERE, e.getMessage( ) ); errors.add( e ); return e; "
1, context.checking(new Expectations() { { allowing(personMapper).execute(RECIPIENT_ACCOUNT_ID); will(returnValue(person)); allowing(person).isAccountLocked(); will(returnValue(false)); , context.checking(new Expectations() { { allowing(personMapper).execute(RECIPIENT_ACCOUNT_ID); will(returnValue(person)); allowing(person).isAccountLocked(); will(returnValue(false)); 
1," if (teleportDeclared) { if (teleTimer == 0) { player.sendTeleport(x, y, height); if (player.getMagicBookType() == Player.MagicBookTypes.MODERN) { player.getUpdateFlags().sendAnimation(715, 1); "," if (teleportDeclared) { if (teleTimer == 0) { player.sendTeleport(x, y, height); if (player.getMagicBookType() == Player.MagicBookTypes.MODERN) { player.getUpdateFlags().sendAnimation(715, 1); "
1, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(Wiki6010LatestTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(Wiki6010LatestTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; 
0," value = value.trim().replace("";"", """"); if (field.equals(""MOL_ID:"")) { if (DEBUG) System.out.println(""molTypeCounter "" + molTypeCounter + "" "" + value); int i = -1; try { i = Integer.valueOf(value); "," cfcobj.clearArguments(); cfcobj.addArgument( ""socketdata"", socketdata ); cfcobj.addArgument(""line"", new cfStringData(line) ); try { cfcobj.runMethodReturnBoolean( session, ""onreadline"" ); "
0," JOptionPane.showMessageDialog(viewer, ""You must select at least one importable file to\n"" + ""add to the import queue. Choose an image in the\n"" + ""left-hand panel first before continuing.""); ", final Editor editor = e.getData(PlatformDataKeys.EDITOR); assert editor != null; if (editor.getSelectionModel().hasSelection()) { editor.getSelectionModel().copySelectionToClipboard(); 
0, if (isConstructor() && PsiModifier.PRIVATE.equals(getAccessModifier()) && getParameters().length == 0 && getOwnerClass().getConstructors().size() == 1) return false; return super.isSuspicious(); ," super(NAME, false, true, true, WIDTH, HEIGHT, u, true, LocationDrivenPortlet.ALL_OPT); contentPane = new VerticalPanel(); contentPane.add(buildHeader()); setContent(contentPane); "
1," int size = memoizedSerializedSize; if (size != -1) return size; size = 0; if (hasTimestamp()) { size += com.google.protobuf.CodedOutputStream .computeInt64Size(1, getTimestamp()); "," int size = memoizedSerializedSize; if (size != -1) return size; size = 0; if (hasTimestamp()) { size += com.google.protobuf.CodedOutputStream .computeInt64Size(1, getTimestamp()); "
1," out.write_ulong(request_id); out.write_ulong(reply_status); gnu.CORBA.GIOP.ServiceContext.writeSequence(out, service_context); out.setCodeSet(CodeSetServiceContext.find(service_context)); "," out.write_ulong(request_id); out.write_ulong(reply_status); gnu.CORBA.GIOP.ServiceContext.writeSequence(out, service_context); out.setCodeSet(CodeSetServiceContext.find(service_context)); "
0, Date accum0 = create(); int a0 = accum0.getTimezoneOffset(); Date accum1 = create(PAST); int a1 = accum1.getTimezoneOffset(); Date accum2 = create(FUTURE); int a2 = accum2.getTimezoneOffset(); ," if (searchPanel.isVisible()) { getContents().getElement() .setAttribute( ""style"", ""top:"" + (getTitlebar().getElement() .getClientHeight() + searchPanel .getElement().getClientHeight()) + "";""); "
1," this._producer = producer; this._session = session; if (_log.isTraceEnabled()) { _log.trace(""new QpidRAMessageProducer "" + this + "" producer="" + Util.asString(producer) + "" session="" + session); "," this._producer = producer; this._session = session; if (_log.isTraceEnabled()) { _log.trace(""new QpidRAMessageProducer "" + this + "" producer="" + Util.asString(producer) + "" session="" + session); "
0," AbstractInplaceSelect select = (AbstractInplaceSelect) component; String width = getListWidth(select); return (width != null && width.trim().length() != 0) ? (""width: "" + width) : """"; ", if (DeflaterConstants.DEBUGGING && start != 0) throw new IllegalStateException(); buf[end++] = (byte) s; buf[end++] = (byte) (s >> 8); buf[end++] = (byte) (s >> 16); buf[end++] = (byte) (s >> 24); 
0," for (IModule sm : modules) { StringBuilder errorMessages = checkModule(sm); if (errorMessages.length() > 0) { errors.add(""Error in module "" + sm.getModuleFqName() + "": "" + errorMessages.toString()); "," if(cachedMediaDirectory.exists()) FileUtils.deleteDirectory(cachedMediaDirectory); cachedMediaDirectory.mkdir(); if(mediaCache==null) { mediaCache = activity.getSharedPreferences(cachedMediaMap, 0); "
1," final Promise p=new Promise(); Resetter resetter=new Resetter(p, 2000); resetter.start(); Object result=p.getResultWithTimeout(5000); System.out.println(""result = "" + result); assert result == null; "," final Promise p=new Promise(); Resetter resetter=new Resetter(p, 2000); resetter.start(); Object XXXXX=p.getResultWithTimeout(5000); System.out.println(""XXXXX = "" + XXXXX); assert XXXXX == null; "
0," Set factories = getEnabledFactories(part, selection); Set possibleIDs = getEnabledTargetIDs(factories, part, selection); return chooseToggleTargetIDInSet(possibleIDs, part, selection); "," MindMapNode selectedNode = controller.getView().getSelected() .getModel(); ArrayList selectedNodes = controller.getView() .getSelectedNodesSortedByY(); joinNodes(selectedNode, selectedNodes); "
1," MethodCache.remove(ShoppingItemService.class); _service = service; ReferenceRegistry.registerReference(ShoppingItemServiceUtil.class, ""_service""); MethodCache.remove(ShoppingItemService.class); "," MethodCache.remove(ShoppingItemService.class); _service = service; ReferenceRegistry.registerReference(ShoppingItemServiceUtil.class, ""_service""); MethodCache.remove(ShoppingItemService.class); "
1," this.serverName = serverName; this.homeDir = homeDir; this.jndiPort =jndiPort; this.timeout = timeout; this.kind = kind; if (address == null || address.length() == 0){ this.address = ""127.0.0.1""; "," this.serverName = serverName; this.homeDir = homeDir; this.jndiPort =jndiPort; this.timeout = timeout; this.kind = kind; if (address == null || address.length() == 0){ this.address = ""127.0.0.1""; "
1," priority = thePriority; label = AbstractPMDAction.getString(theLabelKey); description = ""--""; filterText = AbstractPMDAction.getString(theFilterTextKey); iconId = theIconId; shape = theShape; "," priority = thePriority; label = AbstractPMDAction.getString(theLabelKey); description = ""--""; filterText = AbstractPMDAction.getString(theFilterTextKey); iconId = theIconId; shape = theShape; "
1," EdgeBetweennessCentrality ebc = new EdgeBetweennessCentrality(); Graph graph = TestUtil.getEmtpyGraph(); HashMap<Edge, Double> result = ebc.getWeight(graph); assertTrue(result.isEmpty()); "," EdgeBetweennessCentrality XXXXX = new EdgeBetweennessCentrality(); Graph XXXXX = TestUtil.getEmtpyGraph(); HashMap<Edge, Double> result = XXXXX.getWeight(XXXXX); assertTrue(result.isEmpty()); "
0," Color fgColor = getForegroundColor(component, text, state, textAlpha); SubstanceTextUtilities.paintText(g, component, textRect, text, mnemonicIndex, component.getFont(), fgColor, null); "," GuiceFilter guiceFilter = new GuiceFilter(); Guice.createInjector(new ServletModule() { @Override protected void configureServlets() { serve(""/*"").with(MyNonSingletonServlet.class); "
0," ContentSource returned = _htmlFile.getScheduledOverrideVersion(); if (_wodFile.getScheduledOverrideVersion() != returned) { logger.warning(""Inconsistent data in scheduled version""); "," PrintWriterPrinter printWriterPrinter = null; String mMessage = ""testMessage""; PrintWriter pw = null; try { pw = new PrintWriter(mFile); printWriterPrinter = new PrintWriterPrinter(pw); "
0," boolean isGenerated = config.isGeneratedName(); apply(config.getPersistantData(), module); if (isGenerated && !JavaExecutionUtil.isNewName(config.getName())) { config.setGeneratedName(); "," final PsiElement element = instruction.getElement(); if (element == null) { for (Pair<InstructionImpl, GroovyPsiElement> pair : myPending) { addEdge(pair.getFirst(), instruction); "
0," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; ", int code; if (System.currentTimeMillis() < lastRequest + 55000) return E_OK; else { code = getTimestamp(); if (code == E_OK) { lastRequest = System.currentTimeMillis(); return E_OK; 
1," final ClassifierSet correctSet = generateCorrectSet(matchSet, instanceIndex); if (correctSet.getNumberOfMacroclassifiers() == 0) { if (evolve) cover(population, instanceIndex); return; "," final ClassifierSet XXXXX = generateCorrectSet(matchSet, instanceIndex); if (XXXXX.getNumberOfMacroclassifiers() == 0) { if (evolve) cover(population, instanceIndex); return; "
1," Iterator tableElementIterator = document.getDescendants(new ElementFilter(""IEButton"")); Vector temp = new Vector(); while (tableElementIterator.hasNext()) { temp.add(tableElementIterator.next()); "," Iterator XXXXX = document.getDescendants(new ElementFilter(""IEButton"")); Vector XXXXX = new Vector(); while (XXXXX.hasNext()) { XXXXX.add(XXXXX.next()); "
0," OWLAxiom[] axioms = { OWL.classAssertion( a, C ), OWL.classAssertion( b, C ), OWL.classAssertion( c, C ), OWL.sameAs( a, b ), OWL.differentFrom( b, c ), OWL.differentFrom( a, c ) ", if(getMap() != null){ final CanvasController2D controller = getMap().getCanvas().getController(); final Date[] range = controller.getTemporalRange(); return range != null && range[0] != null; 
1," createdDigests = new HashMap<String, MessageDigest>(11); digests = new ArrayList<MessageDigest>(); manifestHashes = new ArrayList<byte[]>(); decoder = new BASE64Decoder(); this.man = man; "," createdDigests = new HashMap<String, MessageDigest>(11); digests = new ArrayList<MessageDigest>(); manifestHashes = new ArrayList<byte[]>(); decoder = new BASE64Decoder(); this.man = man; "
0," CGRect rect = CGRect.make(CGPoint.zero(), tileSize); gid = gid - firstGid; int max_x = (int) ((imageSize.width - margin*2 + spacing) / (tileSize.width + spacing)); if (max_x == 0) { max_x = 1; "," ServiceHandler handler = null; for (ComponentServiceModel service : config.getServices()) { if (service.getQName().equals(serviceName)) { handler = handleImplementation(service, serviceName); break; "
0," IoSession session = sessions.get( uuid ); List args = new ArrayList( 1 ); args.add( payload ); Command cmd = new Command( responseId, CommandName.EventTriggerResponse, args); session.write( cmd ); "," final String testMachine = ""MACHINE TestMachineX\n"" + ""VARIABLES a,b,c\n"" + ""CONSTANTS X,Y,Z\n"" + ""VARIABLES x,y,z\n"" + ""END""; try { getTreeAsString(testMachine); fail(""Expecting exception""); "
0," if (saveCompleteListener != null) { Map<String, Object> payload = new HashMap<String, Object>(); payload.put(LOCALE_KEY, result); saveCompleteListener.operationComplete( true, payload); "," try { MultithreadedMapRunner.this.mapper.map(key, value, output, reporter); if(incrProcCount) { reporter.incrCounter(SkipBadRecords.COUNTER_GROUP, SkipBadRecords.COUNTER_MAP_PROCESSED_RECORDS, 1); "
0," if (columnIndex < 0 || columnIndex >= columns.size()) PaperClips.error(SWT.ERROR_INVALID_RANGE, ""Column index in column group must be "" + ""0 <= "" + columnIndex + "" < "" + columns.size()); ", while (view != null) { int vid = StateChartVisualIDRegistry.getVisualID(view); IElementType etype = StateChartElementTypes.getElementType(vid); if (etype != null) { return etype; 
0," int mQCARFlags = QCAR.GL_11; int mProgressValue = -1; QCAR.setInitParameters(host, mQCARFlags); do { mProgressValue = QCAR.init(); DebugLog.LOGD(""QCAR.init Progress ["" + mProgressValue + ""/100]""); ", for (WeightedItem<E> item : theData) { E wiElement = item.getElement(); if (wiElement == null && element == null || wiElement != null && wiElement.equals(element)) { return item.theWeight; 
1," for ( int i = 2174; i <= 2177; ++i ) { String itemId = String.valueOf( i ); String value = Preferences.getString( ""lastStoneSphere"" + itemId ); if ( value.equals( ""plants"" ) ) { value = ""nature""; "," for ( XXXXXnt XXXXX = 2174; XXXXX <= 2177; ++XXXXX ) { StrXXXXXng XXXXXtemId = StrXXXXXng.XXXXXOf( XXXXX ); StrXXXXXng XXXXX = Preferences.getStrXXXXXng( ""lastStoneSphere"" + XXXXXtemId ); XXXXXf ( XXXXX.equals( ""plants"" ) ) { XXXXX = ""nature""; "
0," checkStartCode(); checkEndCode(); endCode = true; checkUnsignedShort(maxStack, ""Invalid max stack""); checkUnsignedShort(maxLocals, ""Invalid max locals""); mv.visitMaxs(maxStack, maxLocals); "," IterateContext iterate = (IterateContext) ctx.getAttribute(tag); if (iterate.isPrependEnabled()) { super.doPrepend(ctx, tag, parameterObject, bodyContent); iterate.setPrependEnabled(false); "
1," return sendRequest( toRequestParam(""format"", ""json"").add(""content"", param.getParamValue(""status"")).add(""clientip"", param.getParamValue(""clientip"")), urlResource + ""t/add"", POST); "," return sendRequest( toRequestParam(""format"", ""json"").add(""content"", param.getParamValue(""status"")).add(""clientip"", param.getParamValue(""clientip"")), urlResource + ""t/add"", POST); "
1, boolean valid = !nameField.getText().isEmpty() && !teacherPasswordField.getText().isEmpty(); OKButton.setEnabled(valid); if(valid && e.getKeyCode() == KeyEvent.VK_ENTER) createCourse(); , boolean XXXXX = !nameField.getText().isEmpty() && !teacherPasswordField.getText().isEmpty(); OKButton.setEnabled(XXXXX); if(XXXXX && e.getKeyCode() == KeyEvent.VK_ENTER) createCourse(); 
1, super.notifyChanged(notification); Object object = notification.getNotifier(); Parameter parameter = (Parameter)hostSemanticElement; if((object == null) || (hostSemanticElement == null)) { return; , super.notifyChanged(notification); Object XXXXX = notification.getNotifier(); Parameter XXXXX = (Parameter)hostSemanticElement; if((XXXXX == null) || (hostSemanticElement == null)) { return; 
1, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(SampleOrbeonFormsTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , TestSuite XXXXX = new TestSuite(); XXXXX.addTest(LoginTests.suite()); XXXXX.addTest(SampleOrbeonFormsTests.suite()); XXXXX.addTestSuite(StopSeleniumTest.class); return XXXXX; 
1, setData(data); if (!data.isComplete()) { final AsyncCallback<SurveillanceData> cb = this; Timer timer = new Timer() { public void run() { m_surveillanceService.getSurveillanceData(cb); , setData(data); if (!data.isComplete()) { final AsyncCallback<SurveillanceData> cb = this; Timer XXXXX = new Timer() { public void run() { m_surveillanceService.getSurveillanceData(cb); 
0, if (exp instanceof PsiLiteralExpression) { PsiLiteralExpression lit = (PsiLiteralExpression) exp; if(lit.getType().equals(stringType)) { escapeAndAppend(lit.getValue().toString()); return; , if ( this.params != (Value.Vector)newParams ) { this.params = (Value.Vector)newParams; if ( subPanel != null ) { for ( int i = 0; i < subPanel.length; i++ ) { subPanel[i].removeNotify(); 
0," System.setProperty(""derby.infolog.append"", ""true""); System.setProperty(""derby.language.logStatementText"", ""true""); System.setProperty(""derby.stream.error.logSeverityLevel"", ""20000""); "," final RedisEntityPersister ep = (RedisEntityPersister)getPersister(type); if (ep == null) { throw new NonPersistentTypeException(""The class ["" + type + ""] is not a known persistent type.""); "
1, ForwardPath next = new ForwardPath(path); if (path.getPrevious() == Path.root()) return next; ForwardPath previous = of(path.getPrevious()); previous.next = next; return previous; , ForwardPath XXXXX = new ForwardPath(path); if (path.getPrevious() == Path.root()) return XXXXX; ForwardPath XXXXX = of(path.getPrevious()); XXXXX.XXXXX = XXXXX; return XXXXX; 
0, if (element instanceof IJavaElement) return ((IJavaElement)element).exists(); if (element instanceof IResource) return ((IResource)element).exists(); assertTrue(false); return false; , return navigationHelper .navigateToAdminPage() .navigateToDefineSavingsProduct().submitAndNavigateToDefineNewSavingsProductPreviewPageWithoutInterestRateDetails(productParameters); 
1," List result = new ArrayList(); List tags = configuration.getAttributeList(""jacorb.transport.server.listeners""); if (tags.isEmpty()) { result.addAll(transport_manager.getFactoriesList()); "," List result = new ArrayList(); List tags = configuration.getAttributeList(""jacorb.transport.server.listeners""); if (tags.isEmpty()) { result.addAll(transport_manager.getFactoriesList()); "
1, for (Language l : getModules(Language.class)) { if (moduleReference.getModuleId() != null) { if (l.getModuleReference().getModuleId().equals(moduleReference.getModuleId())) { return l; , for (Language l : getModules(Language.class)) { if (moduleReference.getModuleId() != null) { if (l.getModuleReference().getModuleId().equals(moduleReference.getModuleId())) { return l; 
0, this.roadNetwork = roadNetwork; this.nDtOut = input.getNDt(); this.floatingCarVehicleNumbers = input.getFloatingCars(); fileWriter = (writeFileOutput) ? new FileFloatingCars(this) : null; ," List tasks = parseTasks(""TASK"", ""\r\n"" + BASIC_MESSAGE); assertEquals(1, tasks.size()); assertTask(BASIC_MESSAGE_EXPECTED, 3, 2, IMarker.PRIORITY_NORMAL, (TaskTag) tasks.get(0)); "
0, for (ContentEntry entry : modulesProvider.getRootModel(module).getContentEntries()) { for (SourceFolder folder : entry.getSourceFolders()) { if (folder.isTestSource()) return true; , Action mainAction = actionMap.get(tabId); List<FancyTab> tabs = tabList.getTabs(); for (FancyTab tab : tabs) { if (mainAction == tab.getTabActionMap().getMainAction()) { tab.select(); break; 
0, if (((AbstractOverlayNode) skyNetNode.getOverlayNode()).getPeerStatus() .equals(PeerStatus.PRESENT)) { if (skyNetNode.getTreeHandler().isRoot()) { interpretUpdate(attributeEntriesForCo); ," String contactId = ""[none]""; if ( contact != null ) { contactId = ContactManager.getPlayerId( contact ); contactId = StringUtilities.globalStringReplace( contactId, "" "", ""_"" ).trim(); "
1," Connection conn = null; int numDeleted = 0; try { conn = DatabaseManager.getConnection(); deleteBitstreamInfo(id, conn); checksumHistoryDAO.deleteHistoryForBitstreamInfo(id, conn); conn.commit(); "," Connection XXXXX = null; int XXXXX = 0; try { XXXXX = DatabaseManager.getConnection(); deleteBitstreamInfo(id, XXXXX); checksumHistoryDAO.deleteHistoryForBitstreamInfo(id, XXXXX); XXXXX.commit(); "
0, if (resource == null || resource.length() <= 0) return; if (name == null || name.length() <= 0) return; Properties properties = getProperties(resource); if (properties == null) { return; ," try { SVNWCClient wcClient = vcs.createWCClient(); SVNInfo info = wcClient.doInfo(file, SVNRevision.UNDEFINED); if (info != null) { return new SvnRevisionNumber(info.getCommittedRevision()); "
0," super(model); setEnabled(false); setName(""Save As Protocol""); setDescription(""Save an Experiment file as a Protocol.""); setIcon(IconManager.SAVE_ICON); model.registerBrowserListener(this); "," this.createModelPart(); this.mockProtocolHandler(); this.part.setProtocolHandler(this.mockedProtocolHandler); assertEquals(this.mockedProtocolHandler, this.part.getProtocolHandler()); "
1, Session session=HibernateUtil.getSessionFactory().getCurrentSession(); Transaction ts=null; try { ts=session.beginTransaction(); session.save(template); ts.commit(); return true; , Session session=HibernateUtil.getSessionFactory().getCurrentSession(); Transaction ts=null; try { ts=session.beginTransaction(); session.save(template); ts.commit(); return true; 
0," String label = ((XhtmlAddressType)object).getId(); return label == null || label.length() == 0 ? getString(""_UI_XhtmlAddressType_type"") : getString(""_UI_XhtmlAddressType_type"") + "" "" + label; ", cacheIndex++; if (cacheIndex >= paramCache.length) cacheIndex = 0; paramCache[cacheIndex] = param; qcopyCache[cacheIndex].x = Qcopy.inhomX; qcopyCache[cacheIndex].y = Qcopy.inhomY; 
1," List<Long> followers = personFollowersMapper.execute(inPersonId); for (Long follower : followers) { getCache().addToTopOfList(CacheKeys.ACTIVITIES_BY_FOLLOWING + follower, inActivityId); "," List<Long> followers = personFollowersMapper.execute(inPersonId); for (Long follower : followers) { getCache().addToTopOfList(CacheKeys.ACTIVITIES_BY_FOLLOWING + follower, inActivityId); "
0, Entry tab[] = table; int hash = key; int index = (hash & 0x7FFFFFFF) % tab.length; for (Entry e = tab[index]; e != null; e = e.next) { if (e.hash == hash && e.key == key) { return true; ," super.onInit(status); if(repeat <= 0) return; if(repeat > TEST_MAX_REPEAT) repeat = TEST_MIN_REPEAT; Toast.makeText(A.app(), A.s(R.string.announce)+"": \""""+id+'""', Toast.LENGTH_LONG).show(); "
0," ModelAccess.instance().runCommandInEDT(new Runnable() { public void run() { finalPair.o1.execute(finalPair.o2, ((EditorContext) MapSequence.fromMap(_params).get(""editorContext""))); ", double[] ax = point.toArray(); double sum = 0.0; for (int i = 0; i < n - 1; i++) sum += 100 * (ax[i + 1] - ax[i] * ax[i]) * (ax[i + 1] - ax[i] * ax[i]) + (1 - ax[i]) * (1 - ax[i]); return sum; 
1, if (e.getComponent() instanceof JEditTextArea) { ((JEditTextArea) e.getComponent()).addToCursorPositionListener(this); _activeGenericCodeDisplayer = ((JEditTextArea) e.getComponent()); refresh(); , if (e.getComponent() instanceof JEditTextArea) { ((JEditTextArea) e.getComponent()).addToCursorPositionListener(this); _activeGenericCodeDisplayer = ((JEditTextArea) e.getComponent()); refresh(); 
1," int pos = getOffset(marker, document); try { FindReplaceDocumentAdapter dad = new FindReplaceDocumentAdapter(document); dad.find(pos, ""="", true, false, false, false); dad.replace(""=="", false); "," int XXXXX = getOffset(marker, document); try { FindReplaceDocumentAdapter XXXXX = new FindReplaceDocumentAdapter(document); XXXXX.find(XXXXX, ""="", true, false, false, false); XXXXX.replace(""=="", false); "
1," super(request.getLabel(), request.getRelationship(), request); reorientDirection = request.getDirection(); oldEnd = request.getOldRelationshipEnd(); newEnd = request.getNewRelationshipEnd(); "," super(request.getLabel(), request.getRelationship(), request); reorientDirection = request.getDirection(); oldEnd = request.getOldRelationshipEnd(); newEnd = request.getNewRelationshipEnd(); "
1," ProvisionURL provisionURL = new ProvisionURL( url, true, true, null, false ); m_tableViewer.add( provisionURL ); m_tableViewer.setChecked( provisionURL, provisionURL.isSelected() ); notifyUpdate(); "," ProvisionURL XXXXX = new ProvisionURL( url, true, true, null, false ); m_tableViewer.add( XXXXX ); m_tableViewer.setChecked( XXXXX, XXXXX.isSelected() ); notifyUpdate(); "
1," String oldMedia = media; media = newMedia; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, EvidencePackage.HAS_MEDIA__MEDIA, oldMedia, media)); "," String XXXXX = media; media = newMedia; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, EvidencePackage.HAS_MEDIA__MEDIA, XXXXX, media)); "
1," QueryStats queryStats = queryStatsMap.get(event.getQuery()); if (queryStats == null) { queryStats = new QueryStats(event.getQuery()); queryStatsMap.put(event.getQuery(), queryStats); "," QueryStats XXXXX = XXXXXMap.get(event.getQuery()); if (XXXXX == null) { XXXXX = new QueryStats(event.getQuery()); XXXXXMap.put(event.getQuery(), XXXXX); "
1," StringBuilder sb = new StringBuilder(512); sb.append(""PropertyIdSearchRow"") .append(""[ "").append(linkEntity) .append("", "").append(valueEntity) .append(""]""); return sb.toString(); "," StringBuilder sb = new StringBuilder(512); sb.append(""PropertyIdSearchRow"") .append(""[ "").append(linkEntity) .append("", "").append(valueEntity) .append(""]""); return sb.toString(); "
0," String label = ((BusPrototype) object).getName(); return label == null || label.length() == 0 ? getString(""_UI_BusPrototype_type"") : getString(""_UI_BusPrototype_type"") + "" "" + label; "," StringBuilder sb = new StringBuilder(); sb.append(""{""); if (volumeIds != null) sb.append(""VolumeIds: "" + volumeIds + "", ""); if (filters != null) sb.append(""Filters: "" + filters + "", ""); sb.append("""
0," logger.debug(""assertConfirmation: "" + replaceParam(elem.getAttributeValue(""value""))); this.sel.waitForCondition(""selenium.isConfirmationPresent();"", ""1000""); this.sel.getConfirmation(); ", assert format == LandsatConstants.INVALID_FORMAT || format == LandsatConstants.FAST_L5 || format == LandsatConstants.CEOS || format == LandsatConstants.ZIPED_UNKNOWN_FORMAT; this.format = format; 
1," Yaml yaml = new Yaml(); String input = Util.getLocalResource(""representer/stacktrace1.txt""); String result = yaml.dump(input); assertEquals(result, yaml.dump(yaml.load(result))); "," Yaml XXXXX = new Yaml(); String XXXXX = Util.getLocalResource(""representer/stacktrace1.txt""); String XXXXX = XXXXX.dump(XXXXX); assertEquals(XXXXX, XXXXX.dump(XXXXX.load(XXXXX))); "
0," boolean done = false; PrintWriter out = null; try { out = new PrintWriter( new BufferedWriter( new FileWriter(file, append))); for(int i = 0; i < list.size(); i++) { out.println(list.get(i)); ", boolean deleted = false; if (item != null) { int index = this.items.indexOf(item); if (index == this.items.size() - 1) { deleted = ((SimpleListProperty) this.itemsProperty()).remove(item); 
1," long time = -1; String lastModified = data.getMeta(Metadata.LAST_MODIFIED); if (lastModified != null) { time = getTime(lastModified,url); doc.add(""lastModified"", new Date(time)); "," long XXXXX = -1; String XXXXX = data.getMeta(Metadata.LAST_MODIFIED); if (XXXXX != null) { XXXXX = getTime(XXXXX,url); doc.add(""XXXXX"", new Date(XXXXX)); "
1, switch (featureID) { case EntityPackage.INTERNAL_CRITERION__TARGET: if (resolve) return getTarget(); return basicGetTarget(); case EntityPackage.INTERNAL_CRITERION__NAME: return getName(); , switch (featureID) { case EntityPackage.INTERNAL_CRITERION__TARGET: if (resolve) return getTarget(); return basicGetTarget(); case EntityPackage.INTERNAL_CRITERION__NAME: return getName(); 
0," assertFalse( checker.isValidSyntax( ""000"" ) ); assertFalse( checker.isValidSyntax( ""-0"" ) ); assertFalse( checker.isValidSyntax( "" 1"" ) ); assertFalse( checker.isValidSyntax( ""1 "" ) ); ", RangeCriterion rangeCriterion = new RangeCriterion(); rangeCriterion.setProperty(property); rangeCriterion.setLowerLimit(lowerLimit); rangeCriterion.setUpperLimit(upperLimit); return rangeCriterion; 
1, myPsiTree = new Tree(new DefaultTreeModel(new DefaultMutableTreeNode())); myBlockTree = new Tree(new DefaultTreeModel(new DefaultMutableTreeNode())); myRefs = new JBList(new DefaultListModel()); , myPsiTree = new Tree(new DefaultTreeModel(new DefaultMutableTreeNode())); myBlockTree = new Tree(new DefaultTreeModel(new DefaultMutableTreeNode())); myRefs = new JBList(new DefaultListModel()); 
0, currentSection = fr.cg95.cvq.business.users.SectionType.UNKNOWN; rulesAndRegulationsAcceptance = Boolean.valueOf(false); section = fr.cg95.cvq.business.users.SectionType.UNKNOWN; ," String body = response.getBody(); config.log(""response status code: "" + response.getCode()); config.log(""response body: "" + body); return api.getRequestTokenExtractor().extract(body); "
0," return new EventBuilder(""uei.opennms.org/vendor/Juniper/traps/mplsLspPathUp"", ""Drools"") .setNodeid(nodeid) .setInterface( addr( ipaddr ) ) .addParam(""mplsLspName"", lspname ) .getEvent(); "," String str = ""flag:\t"" + flag + ""\n"" + ""c:\t"" + c + ""\n"" + ""b:\t"" + b + ""\n"" + ""s:\t"" + s + ""\n"" + ""i:\t"" + i + ""\n"" + ""l:\t"" + l + ""\n"" + ""f:\t"" + f + ""\n"" + ""d:\t"" + d + ""\n""; return str; "
0, final long now = System.currentTimeMillis(); for(final Downtime d : this){ switch(d.getPeriod()){ case ONCE: if(now > d.getStartTimestamp() + d.getDurationSeconds()){ this.remove(d); ," ItemAuthorBean itemauthorbean= (ItemAuthorBean) ContextUtil.lookupBean(""itemauthor""); this.setImportToAuthoring(false); itemauthorbean.setItemTypeString(""""); return ""editAssessment""; "
0," Statement s = m.createLiteralStatement( r, p, Short.MAX_VALUE ); assertEquals( r, s.getSubject() ); assertEquals( p, s.getPredicate() ); assertEquals( Short.MAX_VALUE, s.getShort() ); "," Configuration config = TestUtil.getConfiguration( ""edu/kit/ipd/sonar/server/sampleconfig.xml""); try { Method m = HibernateUtil.class.getDeclaredMethod( ""startup"", new Class[] {Configuration.class"
1," assertEquals(ok, task.isOk()); assertEquals(exitValue, task.getExitValue()); assertEquals(error.replaceAll(""\n"", nl), task.getError()); assertEquals(output.replaceAll(""\n"", nl), task.getOutput()); "," assertEquals(ok, task.isOk()); assertEquals(exitValue, task.getExitValue()); assertEquals(error.replaceAll(""\n"", nl), task.getError()); assertEquals(output.replaceAll(""\n"", nl), task.getOutput()); "
0," EntityManager em = emf.createEntityManager(); LockEmployee employee = em.find(LockEmployee.class, 1); try { em.getLockMode(employee); fail(""Expecting TransactionRequiredException.""); "," assertNull( content.getTOC( ) ); Object toc = new Object( ); content.setTOC( toc ); assertEquals( toc, content.getTOC( ) ); content.setTOC( null ); assertNull( content.getTOC( ) ); "
1, if (isPatternFilter()) { String targetId= getTargetId(); if (targetId == null) return PATTERN_FILTER_ID_PREFIX + getPattern(); else return targetId + PATTERN_FILTER_ID_PREFIX + getPattern(); , if (isPatternFilter()) { String targetId= getTargetId(); if (targetId == null) return PATTERN_FILTER_ID_PREFIX + getPattern(); else return targetId + PATTERN_FILTER_ID_PREFIX + getPattern(); 
0," Integer datacenterId = target.getIdFromLink(ParentLinkName.DATACENTER); return wrap(context, Datacenter.class, context.getApi().getInfrastructureApi() .getDatacenter(datacenterId)); "," state = momentum.createState(initialPosition, endVelocity); windowResizeHandler = Window.addResizeHandler(new ResizeHandler() { public void onResize(ResizeEvent event) { finish(); "
0," String result = """"; for (LocalizedBundleDialogModel currentParameter : localizedBundles) { result = result + currentParameter.getFileName() + ""="" + currentParameter.getUploadedFile() + "";""; ", menuMgr = new MenuManager(); menuMgr.setRemoveAllWhenShown(true); menuMgr.addMenuListener(new IMenuListener() { public void menuAboutToShow(IMenuManager mgr) { fillContextMenu(mgr); 
1, if (other instanceof MemorySpaceDMContext) { MemorySpaceDMContext dmc = (MemorySpaceDMContext) other; return (super.baseEquals(other)) && (dmc.fMemorySpaceId.equals(fMemorySpaceId)); , if (other instanceof MemorySpaceDMContext) { MemorySpaceDMContext XXXXX = (MemorySpaceDMContext) other; return (super.baseEquals(other)) && (XXXXX.fMemorySpaceId.equals(fMemorySpaceId)); 
1, if (getFileChooser().getFileSelectionMode() == JFileChooser.DIRECTORIES_ONLY) { fileNameLabel.setText(folderNameLabelText); fileNameLabel.setDisplayedMnemonic(folderNameLabelMnemonic); , if (getFileChooser().getFileSelectionMode() == JFileChooser.DIRECTORIES_ONLY) { fileNameLabel.setText(folderNameLabelText); fileNameLabel.setDisplayedMnemonic(folderNameLabelMnemonic); 
0, mActivity = activity; mVenueId = venueId; mLocation = location; mShout = shout; mTellFriends = tellFriends; mTellFollowers = tellFollowers; mTellTwitter = tellTwitter; mTellFacebook = tellFacebook; ," AWSDescribeImagesOptions options = new AWSDescribeImagesOptions(); options.filters(ImmutableMap.of(""is-public"", ""true"", ""architecture"", ""x86_64"", ""platform"", ""windows"")); testMapFilters(options); "
1," CmsRpcAction<CmsClientSitemapEntry> getChildrenAction = new CmsRpcAction<CmsClientSitemapEntry>() { @Override public void execute() { getService().getChildren(getEntryPoint(), entryId, 0, this); "," CmsRpcAction<CmsClientSitemapEntry> getChildrenAction = new CmsRpcAction<CmsClientSitemapEntry>() { @Override public void execute() { getService().getChildren(getEntryPoint(), entryId, 0, this); "
0, resolveParent = null; Object[] tbl = attributes; for (int i = 0; i < tbl.length; i += 2) { if (tbl[i] == StyleConstants.ResolveAttribute) { resolveParent = (AttributeSet)tbl[i + 1]; break; ," try { for (int i = 0; i < 128; i++) { IncomingTransferObject ito = serverQueue.take(); assertTrue("""" + i, Arrays.equals(getTestArray(i), ito.accept(SubMonitor .convert(new NullProgressMonitor())))); "
0," int oldValue = getInt(name); if (oldValue != value) { fProperties.put( name, new Integer(value) ); setDirty(true); firePropertyChangeEvent(name, new Integer(oldValue), new Integer(value) ); ", Iterator<FacesMessage> iter = context.getMessages(tag.getClientId()); while (iter.hasNext()) { FacesMessage m = iter.next(); if (m.getSeverity()==FacesMessage.SEVERITY_ERROR) return true; 
0, final ConsoleAuthenticator c = new ConsoleAuthenticator(); if (c.cons == null) throw new NoClassDefFoundError(ConsoleText.get().noSystemConsoleAvailable); Authenticator.setDefault(c); , while (arg instanceof Assignment) { Assignment assign = (Assignment)arg; LocalVariableBinding innerLocal = assign.localVariableBinding(); if (innerLocal != null) { return innerLocal.closeTracker; 
0," double p, dy1, dy2; dy1 = fa[1] - fa[0]; for ( int i = 1; i < iNumberOfPoints - 1; i++ ) { dy2 = fa[i + 1] - fa[i]; faC[i] = 0.5f; faB[i] = 1.0f - faC[i]; faA[i] = 3.0f * ( dy2 - dy1 ); dy1 = dy2; "," try { final ArrayList<Field> allFields = getAllFields(evt.getClass()); for (final Field fld : allFields) { fld.setAccessible(true); emitMessage("" "" + fld.getName() + ""= "" + fld.get(evt).toString()); "
0," JMenu downloadCanvec = new JMenu(""Download zip's""); for (int i = 0; i < parent.downloadable.size(); i++) { downloadCanvec.add(new JMenuItem(new AllowDownload(parent.downloadable.get(i)))); "," doc = new Document(""def a(x):print 'foo'""); analyzer = new OccurrencesAnalyzer(); msgs = analyzeDoc(); printMessages(msgs, 1); assertEquals(""Unused parameter: x"", msgs[0].getMessage()); "
0, final PublicReentrantReadWriteLock lock = new PublicReentrantReadWriteLock(); final Condition c = (lock.writeLock().newCondition()); try { lock.getWaitingThreads(c); shouldThrow(); , ArrayList<DomCardName> theSingleCards = new ArrayList<DomCardName>(); for (DomCard card : owner.getCardsInPlay()) { if (!theSingleCards.contains(card.getName())){ theSingleCards.add(card.getName()); 
1, String blobName = null; if (exchange != null) { if (exchange.getProperty(JcloudsConstants.BLOB_NAME) != null) { blobName = (String) exchange.getProperty(JcloudsConstants.BLOB_NAME); , String XXXXX = null; if (exchange != null) { if (exchange.getProperty(JcloudsConstants.BLOB_NAME) != null) { XXXXX = (String) exchange.getProperty(JcloudsConstants.BLOB_NAME); 
0, if (current.eResource() != null && current.eResource().getResourceSet() != null) this.resourceSet = current.eResource().getResourceSet(); flatReferencesTableSampleEditor.setInput(settings); , if (state == MenuState.kMenuStateTrackingTouch) { CCMenuItem currentItem = itemForTouch(event); if (currentItem != selectedItem) { if (selectedItem != null) { selectedItem.unselected(); 
0," onException(CamelAuthorizationException.class). to(""mock:authorizationException""); from(""direct:secureEndpoint""). policy(securityPolicy). to(""log:incoming payload""). to(""mock:success""); "," CollectionStringBuffer buffer = new CollectionStringBuffer(""otherwise[""); List<ProcessorDefinition<?>> list = getOutputs(); for (ProcessorDefinition<?> type : list) { buffer.append(type.getLabel()); "
1," Class<T> clazz = getPersistentClass(); return (T) getSession().createCriteria(clazz) .setFlushMode(org.hibernate.FlushMode.MANUAL) .add(Restrictions.eq(""acc"", acc)).uniqueResult(); "," Class<T> clazz = getPersistentClass(); return (T) getSession().createCriteria(clazz) .setFlushMode(org.hibernate.FlushMode.MANUAL) .add(Restrictions.eq(""acc"", acc)).uniqueResult(); "
1," list.lock.lock(); try { checkModifications(); int removed = list.removeAll(c, start, read.size); if (removed > 0) { read = new SubListReadData(read.size - removed, list .getData()); return true; "," list.lock.lock(); try { checkModifications(); int removed = list.removeAll(c, start, read.size); if (removed > 0) { read = new SubListReadData(read.size - removed, list .getData()); return true; "
0," System.out.println(""Word ""+this.getId()+"" : "" + this.game.getWordToComplete().getCurrentSubword()); System.out.println(""Deck ""+this.getId()+"" : ""+this.game.getDeck().getLetters()); "," super(group.getTemplatePresentation().getText(), group.getTemplatePresentation().getDescription(), group.getTemplatePresentation().getIcon()); myGroup = group; myToolbarComponent = toolbarComponent; "
0," final String type = LoadClassReference.getClassReference(reference.getType(), context, true); if (statement != null) { return (isFinal ? ""final "" : """") + type + "" "" + super.generate(context); ", SoundManager.getInstance().setMusicVolume(val); SoundManager.getInstance().setSoundVolume(val); SoundManager.getInstance().setMusicOn(val > 0); SoundManager.getInstance().setSoundsOn(val > 0); 
0, for (int i = segmentNumber + 1; i < mySegments.size(); i++) { final RangeMarker segment = mySegments.get(i); final int startOffset2 = segment.getStartOffset(); if (start == startOffset2) { return i; ," try{ if (outputEnum != Output.XML && outputEnum != Output.JSON){ throw new Exception(""All definitions are exported only in XML and JSON format. ""+outputEnum + "" is not supported""); "
1," String envValue = System.getenv(envName).trim(); if (""append"".equals(mode)) { if (envValue == null || !envValue.contains("":"")) { throw new RuntimeException(""Missing env variable""); "," String XXXXX = System.getenv(envName).trim(); if (""append"".equals(mode)) { if (XXXXX == null || !XXXXX.contains("":"")) { throw new RuntimeException(""Missing env variable""); "
0," IProject project = getConfiguration().getProjectDescription().getProject(); return CProjectDescriptionManager.getInstance().findLanguagSettingForFile(fileName, project, getLanguageSettings()); "," HttpSession session = (HttpSession) FacesContext.getCurrentInstance() .getExternalContext().getSession(true); session.setAttribute(""javax.faces.PARTIAL_STATE_SAVING"", ""false""); return ""index.xhtml""; "
1," super(site); setText(getString(bundle, prefix + ""label"")); setToolTipText(getString(bundle, prefix + ""tooltip"")); setDescription(getString(bundle, prefix + ""description"")); fEditor = editor; "," super(site); setText(getString(bundle, prefix + ""label"")); setToolTipText(getString(bundle, prefix + ""tooltip"")); setDescription(getString(bundle, prefix + ""description"")); fEditor = editor; "
1, String scriptName = getScriptName( method ); Class<?> declaringClass = method.getDeclaringClass(); ClassLoader loader = declaringClass.getClassLoader(); return loader.getResource( scriptName ); , String XXXXX = getScriptName( method ); Class<?> declaringClass = method.getDeclaringClass(); ClassLoader XXXXX = declaringClass.getClassLoader(); return XXXXX.getResource( XXXXX ); 
0," return new OxBodyTechniqueCharm( ""Abyssal.Ox-BodyTechnique"", AbilityType.Resistance, new LinkedHashMap<String, HealthLevelType[]>() { { this.put(""OxBody0"", new HealthLevelType[]{HealthLevelType.ZERO", for (int i = 0; i < m.length; i++) if (line2UsedWords[m.start + i]) return true; for (int i = 0; i < m.matchLength; i++) if (line1UsedWords[m.matchStart + i]) return true; return false; 
1," try { System.out.println(""JettyServiceWrapperListener: Stopping Jetty 6 Service!!!""); __server.stop(); System.out.println(""JettyServiceWrapperListener: Jetty 6 Service Stopped!!!""); return code; "," try { System.out.println(""JettyServiceWrapperListener: Stopping Jetty 6 Service!!!""); __server.stop(); System.out.println(""JettyServiceWrapperListener: Jetty 6 Service Stopped!!!""); return code; "
0," inst.addTransformer(transformerCollection); String redefineClasses = System.getProperty(REDEFINE_CLASSES_PROPERTY, ""true""); if (""true"".equalsIgnoreCase(redefineClasses)) { instrumentation = inst; ", final boolean[] specicalFlags_doubleQuotes = CharTypes.specicalFlags_doubleQuotes; int len = text.length(); int newcount = count + len + 1; if (newcount > buf.length) { expandCapacity(newcount); 
1," show_full_path = path_item.getSelection(); tv.columnInvalidate(""path""); tv.refreshTable(false); COConfigurationManager.setParameter( ""FilesView.show.full.path"", show_full_path ); "," show_full_path = path_item.getSelection(); tv.columnInvalidate(""path""); tv.refreshTable(false); COConfigurationManager.setParameter( ""FilesView.show.full.path"", show_full_path ); "
0," if (!initBrowserTable()) return false; StringBuffer where = new StringBuffer(m_View.getParentEntityAliasName() + "".IsActive='Y'""); if (p_whereClause.length() > 0) { where.append(p_whereClause); "," Map<String,SourceTuple> files = get().parsedFiles; SourceTuple tuple = files == null ? null : files.get(fileUrl.substring(fileUrl.lastIndexOf("" return tuple == null ? null : tuple.file; "
0," final Thread thread = new Thread( new Runnable() { @Override public void run() { getBrowser().clStatusLock(); apply(getBrowser().getDCHost(), false); getBrowser().clStatusUnlock(); ", try { if ( m_comboTable.getSelectedRowCount() != 0 ) { int[] rows = m_comboTable.getSelectedRows(); for ( int i=rows.length -1; i>=0 ; i-- ) { m_comboLegsModel.removeComboLeg( rows[i]); 
0, super(arraySize); mDirty = false; getObjects().setComparator(sPhasedObjectComparator); getPendingObjects().setComparator(sPhasedObjectComparator); mSearchDummy = new PhasedObject(); , int sentenceLength = r.nextInt( 3 ) + r.nextInt( 10 ) + 1; String[] sentence = new String[sentenceLength]; for ( int i=0; i<sentenceLength; i++ ) { sentence[i] = dictionary.randomWord(); 
0," super(Constants.AsThoughEffectType.CAST, Constants.Duration.EndOfGame, Constants.Outcome.Benefit); staticText = ""You may cast Gravecrawler from your graveyard as long as you control a Zombie""; "," TryDefinition tryType = from(""direct:start"").doTry(). process(validator). to(""mock:valid""); tryType.doCatch(ValidationException.class).to(""mock:invalid""); tryType.doFinally().to(""mock:all""); "
0, StringBuffer s = new StringBuffer(); s.append( Code.encode( genome.length ) ); for( int i = 0 ; i < genome.length ; i++ ) s.append( Code.encode( genome[i] ) ); return s.toString(); , if (e.getClass() != this.getClass()) return false; CloseElementEventNSImpl ce = (CloseElementEventNSImpl)e; return (ce.getURI().equals(this.getURI()) && ce.getName().equals(this.getName())); 
0," sut = new FeaturedStream(description, streamScope); assertEquals(description, sut.getDescription()); assertEquals(null, sut.getCreated()); assertEquals(streamScope, sut.getStreamScope()); ", IElementType requestContextElementType = ParallelJElementTypes .getElementType(getVisualID(request)); return requestContextElementType != null ? requestContextElementType : myElementType; 
0, if (obj instanceof IAC.diagram.navigator.IACNavigatorItem) { return EcoreUtil .getURI(getView()) .equals(EcoreUtil .getURI(((IAC.diagram.navigator.IACNavigatorItem) obj) .getView())); ," UITestUtil.enabled = true; Shell shell = new Shell( display, SWT.NONE ); try { shell.setData( WidgetUtil.CUSTOM_WIDGET_ID, ""a/8"" ); fail( ""widget id contains illegal characters"" ); "
1, task.setProduct(value); for (Product p : repositoryConfiguration.getProducts()) { if (p.equals(value)) { task.setComponent(p.getDefaultComponent()); task.setMilestone(p.getDefaultMilestone()); , task.setProduct(value); for (Product p : repositoryConfiguration.getProducts()) { if (p.equals(value)) { task.setComponent(p.getDefaultComponent()); task.setMilestone(p.getDefaultMilestone()); 
1," String s = ""DiagramShape, ""+points.size()+"" points: ""; Iterator it = getPointsIterator(); while(it.hasNext()){ ShapePoint point = (ShapePoint) it.next(); s += point; if(it.hasNext()) s += "" ""; "," String XXXXX = ""DiagramShape, ""+XXXXXXXXXX.XXXXXize()+"" XXXXXXXXXX: ""; Iterator XXXXX = getPointXXXXXIterator(); while(XXXXX.haXXXXXNext()){ ShapePoint XXXXX = (ShapePoint) XXXXX.next(); XXXXX += XXXXX; if(XXXXX.haXXXXXNext()) XXXXX += "" ""; "
1," String oldName = name; name = newName; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, PapyrustableinstancePackage.PAPYRUS_TABLE_INSTANCE__NAME, oldName, name)); "," String XXXXX = name; name = newName; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, PapyrustableinstancePackage.PAPYRUS_TABLE_INSTANCE__NAME, XXXXX, name)); "
1," IRegistry<String, IAdditionalModelFactory> additionalModelFactoryRegistry = characterGenerics.getAdditionalModelFactoryRegistry(); registerGodBloodedInheritance(additionalModelFactoryRegistry); "," IRegistry<String, IAdditionalModelFactory> additionalModelFactoryRegistry = characterGenerics.getAdditionalModelFactoryRegistry(); registerGodBloodedInheritance(additionalModelFactoryRegistry); "
0, TestSuite testSuite = new TestSuite(); testSuite.addTestSuite(AddPageTest.class); testSuite.addTestSuite(AddPortletTest.class); testSuite.addTestSuite(DeletePageTest.class); return testSuite; , this.isIphone = detectIphoneOrIpod(); this.isTierTablet = isTablet(); this.isTierIphone = isHandset(); this.isTierRichCss = detectTierRichCss(); this.isTierGenericMobile = detectTierOtherPhones(); 
1," String optionId = option; String value = """"; if (option.indexOf('=') != -1) { value = option.substring(option.indexOf('=') + 1); optionId = option.substring(0, option.indexOf('=')); "," String XXXXX = option; String XXXXX = """"; if (option.indexOf('=') != -1) { XXXXX = option.substring(option.indexOf('=') + 1); XXXXX = option.substring(0, option.indexOf('=')); "
0," JFrame jf = TwsListener.getMainWindow(); if (jf == null) { System.err.println(""IBControllerServer: could not find main window to configure API""); mChannel.writeNack(""main window not found""); return; ", return new HashCodeBuilder() .append(getter) .append(setter) .append(getPropertyType()) .append(getPropertyEditorClass()) .append(isBound()) .append(isConstrained()) .toHashCode(); 
1," if (!XsdElement.NEXT_SCHEDULED_STUDY_SEGMENT.xmlName().equals(elt.getName())) { throw new StudyCalendarValidationException(""The element must be a <next-scheduled-study-segment> element""); "," if (!XsdElement.NEXT_SCHEDULED_STUDY_SEGMENT.xmlName().equals(elt.getName())) { throw new StudyCalendarValidationException(""The element must be a <next-scheduled-study-segment> element""); "
1, JTabbedPane tp = TabbedPaneUtilities.getTabbedPaneFor(theView); return tp != null && JOptionPane.getFrameForComponent(tp).isFocused() && tp.getSelectedComponent().equals(theView); , JTabbedPane XXXXX = TabbedPaneUtilities.getTabbedPaneFor(theView); return XXXXX != null && JOptionPane.getFrameForComponent(XXXXX).isFocused() && XXXXX.getSelectedComponent().equals(theView); 
0," logger.log(""Starting StackFixer""); fixStack(); logger.log(""Deobfuscation finished! Dumping jar...""); GenericMethods.dumpJar(JAR_NAME, cgs.values()); logger.log(""Operation Completed.""); ", Runnable linkAction = getLinkAction(); if (!isEnabled() || linkAction == null) return false; if (isActInNewThread()) new Thread(linkAction).start(); else linkAction.run(); return true; 
1, double offset = 0.0; if (getDisplayStatus(idx).equals(DisplayStatus.COLOR)) { double baseOffset = getBisulfiteSymmetricCytosineShift(myContext); offset = offset + ((flipRead ? -1 : 1) * baseOffset); , double XXXXX = 0.0; if (getDisplayStatus(idx).equals(DisplayStatus.COLOR)) { double XXXXX = getBisulfiteSymmetricCytosineShift(myContext); XXXXX = XXXXX + ((flipRead ? -1 : 1) * XXXXX); 
1, TestSuite testSuite = new TestSuite(); testSuite.addTest(Login52xTests.suite()); testSuite.addTest(StagingCommunityTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , TestSuite XXXXX = new TestSuite(); XXXXX.addTest(Login52xTests.suite()); XXXXX.addTest(StagingCommunityTests.suite()); XXXXX.addTestSuite(StopSeleniumTest.class); return XXXXX; 
0, for (GenFeature key : xReference.getKeys()) { EStructuralFeature eAttribute = key.getEcoreFeature(); if (eAttribute instanceof EAttribute) { eReference.getEKeys().add((EAttribute)eAttribute); ," return ShrinkWrap.create(WebArchive.class, ""test.war"") .addClasses(Bridge.class, BridgeBean.class, Config.class, Manager.class, My.class) .addAsWebInfResource(EmptyAsset.INSTANCE, ""beans.xml""); "
0," StringBuffer ret; ret = new StringBuffer (); ret.append (super.toHtml (verbatim)); if (!isEmptyXmlTag ()) { putChildrenInto (ret, verbatim); if (null != getEndTag ()) putEndTagInto (ret, verbatim); "," StringBuffer buffer = new StringBuffer(); buffer.append('.').append(fileName.substring(this.htmlRoot.getAbsolutePath().length()).replace('\\', '/')); return String.valueOf(buffer); "
0," super(); if (poiCodeMap.containsValue(id)) { for (Entry<String, Integer> entry : poiCodeMap.entrySet()) { if (entry.getValue().intValue() == id) { this.type = entry.getKey(); this.id = id; "," if (isLiveOrCompiled()) if(!this.getCapability(ALLOW_ALIGNMENT_READ)) throw new CapabilityNotSetException(J3dI18N.getString(""Text3D6"")); return ((Text3DRetained)this.retained).getAlignment(); "
0, String strVal= fElement.getAttribute(ENABLED_ATTRIBUTE); if (strVal == null) strVal= fElement.getAttribute(SELECTED_ATTRIBUTE); return strVal == null || Boolean.valueOf(strVal).booleanValue(); ," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (replIdx: ""); result.append(replIdx); result.append(')'); return result.toString(); "
1, if(this.changedAttributes != null) return false; if(this.removedAttributes != null) return false; if(this.shape != null) return false; if(this.isDeletedFlag) return false; return true; , if(this.changedAttributes != null) return false; if(this.removedAttributes != null) return false; if(this.shape != null) return false; if(this.isDeletedFlag) return false; return true; 
0," super(""Import Joomla! Extension""); setTitle(""Import Joomla! Extension""); setDescription(""Import Joomla! extension or multiple extensions from installation package.""); setPageComplete(false); "," MeshDataCombiner meshDataCombiner = new MeshDataCombiner(""CombinedMesh-"" + scene.getName()); combinedMeshes(meshDataCombiner, new Matrix4(), scene); return meshDataCombiner.build(); "
1, checkInitted(); Class<?> declaringClass = c.getDeclaringClass(); if (Modifier.isAbstract(declaringClass.getModifiers())) { return new InstantiationExceptionConstructorAccessorImpl(null); , checkInitted(); Class<?> declaringClass = c.getDeclaringClass(); if (Modifier.isAbstract(declaringClass.getModifiers())) { return new InstantiationExceptionConstructorAccessorImpl(null); 
1, if(drag) { double a = (double)(c.y - (sflarp.sz().y / 2)) / (double)(sz.y - sflarp.sz().y); if(a < 0) a = 0; if(a > 1) a = 1; val = (int)Math.round(a * (max - min)) + min; changed(); , if(drag) { double a = (double)(c.y - (sflarp.sz().y / 2)) / (double)(sz.y - sflarp.sz().y); if(a < 0) a = 0; if(a > 1) a = 1; val = (int)Math.round(a * (max - min)) + min; changed(); 
1," Preconditions.checkArgument(shape_args_ok(x, m)); int M = x.size(); double result = 1.0; for (int i = 1; i <= M - m; i++) { result *= Math.sin(x.doubleValueOf(i - 1) * Math.PI / 2.0); "," PrecondXXXXXtXXXXXons.checkArgument(shape_args_ok(x, m)); XXXXXnt XXXXX = x.sXXXXXze(); double XXXXX = 1.0; for (XXXXXnt XXXXX = 1; XXXXX <= XXXXX - m; XXXXX++) { XXXXX *= XXXXXath.sXXXXXn(x.doubleValueOf(XXXXX - 1) * XXXXXath.PI / 2.0); "
0," try { AttributeHandleSet attributes = secondFederate.createAHS(aaHandle, baHandle, bbHandle); secondFederate.rtiamb.attributeOwnershipAcquisitionIfAvailable( theObject, attributes ); ", InputStream input = null; try { input = new BufferedInputStream(new FileInputStream(file)); for (int i = 0; i < MAGIC.length; i++) { if (MAGIC[i] != input.read()) { return false; 
0," tag = HTML.Tag.SUB; assertEquals(""sub"", tag.toString()); assertFalse(""breaks Flow"", tag.breaksFlow()); assertFalse(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); "," final Iterator<Map.Entry<CacheKey, String>> it = CLASS_CACHE.entrySet().iterator(); while (it.hasNext()) { final CacheKey key = it.next().getKey(); if (key.loader == classLoader) { it.remove(); "
1," MindMapNode selectedNode = controller.getView().getSelected() .getModel(); ArrayList selectedNodes = controller.getView() .getSelectedNodesSortedByY(); joinNodes(selectedNode, selectedNodes); "," MindMapNode selectedNode = controller.getView().getSelected() .getModel(); ArrayList selectedNodes = controller.getView() .getSelectedNodesSortedByY(); joinNodes(selectedNode, selectedNodes); "
0, qe.setNpcQuestData(204011).addOnQuestStart(questId); qe.setNpcQuestData(204011).addOnTalkEvent(questId); qe.addOnQuestFinish(questId); qe.setQuestBonusType(InventoryBonusType.COIN).add(questId); ," Log.d(TAG,""process plugin for action:""+action); if(BOOTSTRAP.equals(action)){ Log.i(TAG,""plugin properly bootstrapped""); isRunning = true; return new PluginResult(PluginResult.Status.NO_RESULT); "
0, super.assertNullTS(JARQUE_BERA); super.assertEmptyTS(JARQUE_BERA); assertTrue(JARQUE_BERA.evaluate(RANDOM)); assertFalse(JARQUE_BERA.evaluate(SIGNAL)); assertFalse(JARQUE_BERA.evaluate(INCREASING)); ," if(getEObject().eClass() != grammarAccess.getWordsRule().getType().getClassifier()) return null; if(checkForRecursion(Words_Group.class, eObjectConsumer)) return null; return eObjectConsumer; "
0," initialCaretPosition = textArea.getCaretPosition(); int layoutCaretPosition = initialCaretPosition; try { textArea.getDocument().insertString(layoutCaretPosition, ""\u3000"", null); "," if (featOkTst && casFeat_posType == null) jcas.throwFeatMissing(""posType"", ""org.u_compare.shared.label.penn.pos.UnknownPOS""); ll_cas.ll_setStringValue(addr, casFeatCode_posType, v);"
1," RibbonElementPriority old = this.displayPriority; this.displayPriority = displayPriority; if (old != displayPriority) { this.firePropertyChange(""displayPriority"", old, this.displayPriority); "," RibbonElementPriority XXXXX = this.displayPriority; this.displayPriority = displayPriority; if (XXXXX != displayPriority) { this.firePropertyChange(""displayPriority"", XXXXX, this.displayPriority); "
0," if (!this.isValidIntAreaCode(this.m_phone.getIntAreaCode())) { setErrorMessage(this.m_i18n.getString(this.getNamespace(), ""intareaerror"", ""label"", this.m_language)); return false; "," final Path path = new Path (); path.from = this.lastNode; path.to = node; Entry entry = this.entries.get ( path ); if ( entry == null ) { entry = new Entry (); this.entries.put ( path, entry ); "
0," mService = IRecognitionService.Stub.asInterface(service); if (DBG) Log.d(TAG, ""onServiceConnected - Success""); while (!mPendingTasks.isEmpty()) { mHandler.sendMessage(mPendingTasks.poll()); "," thrown.expectMessage(UnsupportedOperationException.class, ""Reducer cannot call getInputSplit()""); new MockReporter(MockReporter.ReporterType.Reducer, null, null).getInputSplit(); "
1, boolean modified = italic || bold; fontFormatting.setItalic(italic); fontFormatting.setBold(bold); fontFormatting.setFontStyleModified(modified); fontFormatting.setFontWieghtModified(modified); , boolean modified = italic || bold; fontFormatting.setItalic(italic); fontFormatting.setBold(bold); fontFormatting.setFontStyleModified(modified); fontFormatting.setFontWieghtModified(modified); 
1," Query query = em.createNamedQuery(""BC_READ_DEFAULT_LOCALE""); List<Locale> localeList = (List<Locale>) query.getResultList(); if (localeList.size() >= 1) { return localeList.get(0); "," Query XXXXX = em.createNamedQuery(""BC_READ_DEFAULT_LOCALE""); List<Locale> localeList = (List<Locale>) XXXXX.getResultList(); if (localeList.size() >= 1) { return localeList.get(0); "
0," return Utility.createMenuItem(label, new RemoveActionListener(), LanguageBundle.getString(""in_itmBonPopUpRemove""), (char) 0, accelerator,LanguageBundle.getString(""in_itmBonPopUpRemove""), """", true); "," super.setStyle(style, resetStyle); Color bottomColorObj = style.getColorProperty(""text-split-bottom-color""); if (bottomColorObj != null) { this.bottomColor = bottomColorObj.getColor(); "
0," Map toDisplay = new SequencedHashMap(); putKeyValue(toDisplay, el.get(""Id"")); putKeyValue(toDisplay, el.get(""Name"")); putKeyValue(toDisplay, el.getParticipantType()); return makeTooltip(toDisplay); "," Toggle tmp=cp.addToggle(name,value,cpx, cpy, 15, 15); int tw=tmp.captionLabel().width()-5; addNode(tmp, name,tw,tmp.getHeight()+tmp.captionLabel().getLineHeight()); tmp.setValue(value); return this; "
1," table.getCurrentPlayer().fold(); pokerView.getLblMessage().setText(""Player ""+table.getCurrentPlayerNum()+"" folds.""); if(table.nonFoldedPlayers()>0) table.iterateCurrentPlayer(); else newGame(); "," table.getCurrentPlayer().fold(); pokerView.getLblMessage().setText(""Player ""+table.getCurrentPlayerNum()+"" folds.""); if(table.nonFoldedPlayers()>0) table.iterateCurrentPlayer(); else newGame(); "
0," final int MAX_AHEAD = 6; final double MAX_DISTANCE = 2.5 * delta; final ResamplingData r = new ResamplingData(this.length, this.dep); final Vector vector = new Vector(); r.setDeps(0, dep, new int[]{0"," OperationPenaltyDefend op = new OperationPenaltyDefend(alfieFacingDirection); boolean actual = op.isAngleIncreasing(isOpponentRotatingCCW, rotatingSpeed); Assert.assertEquals(expected, actual); "
1," final String command = ""dnammoc""; class MyAction extends AbstractAction { public MyAction(final String text, final Icon icon) { super(text, icon); putValue(Action.ACTION_COMMAND_KEY, command); "," final String XXXXX = ""dnammoc""; class MyAction extends AbstractAction { public MyAction(final String text, final Icon icon) { super(text, icon); putValue(Action.ACTION_COMMAND_KEY, XXXXX); "
0," try { Thread.sleep(2000); byte[] recv = new byte[32*1024]; int len=0; while (len>=0) { totalB.addAndGet(len); len=socket.getInputStream().read(recv,0,recv.length); Thread.sleep(10); ", this.channelAssociation = new ManagementChannelHandler(new ManagementClientChannelStrategy() { @Override public Channel getChannel() throws IOException { return getOrCreateChannel(); 
1," FieldFixture fixture = new FieldFixture(10); Integer result = (Integer) new Mirror().on(FieldFixture.class).get().field(""staticField""); assertEquals(result, new Integer(fixture.getStaticField())); "," FieldFixture XXXXX = new FieldFixture(10); Integer XXXXX = (Integer) new Mirror().on(FieldFixture.class).get().field(""staticField""); assertEquals(XXXXX, new Integer(XXXXX.getStaticField())); "
1," PackageActivityPlugin result = null; if (this.packageActivityPluginMap != null) { String ouid = getPackageUid(processDefId, activityDefId); result = packageActivityPluginMap.get(ouid); "," PackageActivityPlugin XXXXX = null; if (this.packageActivityPluginMap != null) { String XXXXX = getPackageUid(processDefId, activityDefId); XXXXX = packageActivityPluginMap.get(XXXXX); "
0," char[] chars = inputText.toCharArray(); String newInputText = """"; for (char c : chars) { if (c == 'y' && SWTBotPreferences.KEYBOARD_LAYOUT.equals(""MAC_DE"")) { newInputText += 'z'; "," Assert.assertEquals(1, ChapterNum.fromString(""1.4.1"").compareTo(ChapterNum.fromString(""1.4.0""))); Assert.assertEquals(-1, ChapterNum.fromString(""1.4.1"").compareTo(ChapterNum.fromString(""1.4.10""))); "
0," if (serializedReferences[hashCode % Hashing.numberRegistries].get(hashCode) != null) { System.err.println(""mobile actor regsitry reference error, overwriting registry entry: "" + hashCode); "," try { byte[] noderefBuf = OpennetManager.innerWaitForOpennetNoderef(xferUID, paddedLength, noderefLength, next, false, uid, true, AnnounceSender.this, node); if(noderefBuf == null) { return; "
0," Integer result = null; if (string.length() >= 3) { String number = string.substring(1, string.length() - 1); if (ValgrindParserUtils.isNumber(number)) { result = Integer.parseInt(number); ", for (ContentEntry entry : modulesProvider.getRootModel(module).getContentEntries()) { for (SourceFolder folder : entry.getSourceFolders()) { if (folder.isTestSource()) return true; 
1," MavenArtifactProvisionOption option = new MavenArtifactProvisionOption(); option.groupId(""org.apache.felix"") .artifactId(""org.apache.felix.ipojo"") .version(""1.6.2""); return option; "," MavenArtifactProvisionOption XXXXX = new MavenArtifactProvisionOption(); XXXXX.groupId(""org.apache.felix"") .artifactId(""org.apache.felix.ipojo"") .version(""1.6.2""); return XXXXX; "
1," String oldStyle = style; style = newStyle; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_POLYLINE_ELEMENT__STYLE, oldStyle, style)); "," String XXXXX = style; style = newStyle; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_POLYLINE_ELEMENT__STYLE, XXXXX, style)); "
1, Properties props = new Properties(); try { InputStream in = OperateProperties.class.getResourceAsStream(filePath); props.load(in); String value = props.getProperty (key); return value; , Properties XXXXX = new Properties(); try { InputStream XXXXX = OperateProperties.class.getResourceAsStream(filePath); XXXXX.load(XXXXX); StrXXXXXg XXXXX = XXXXX.getProperty (key); return XXXXX; 
1," parentGUI = parent; p = e.getParty(); titleWindow = new SWindow(7, 1, 66, 32, NES.BLUE); itemWindow = new ItemWindow(p,7,17); messageWindow = new SWindow(10, 168, 232, 48, NES.BLUE); "," parentGUI = parent; p = e.getParty(); titleWindow = new SWindow(7, 1, 66, 32, NES.BLUE); itemWindow = new ItemWindow(p,7,17); messageWindow = new SWindow(10, 168, 232, 48, NES.BLUE); "
1, this.flushBuffer(); try { StringBuffer sb = new StringBuffer(); char c = read( sb ); if ( '0' <= c && c <= '9' ) { try { while ( '0' <= c && c <= '9' || c == '.' ) { c = read( sb ); , this.flushBuffer(); try { StringBuffer XXXXX = new StringBuffer(); XXXXXhar XXXXX = read( XXXXX ); if ( '0' <= XXXXX && XXXXX <= '9' ) { try { while ( '0' <= XXXXX && XXXXX <= '9' || XXXXX == '.' ) { XXXXX = read( XXXXX ); 
1," String oldValue = value; value = newValue; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, DroolsPackage.METAENTRY_TYPE__VALUE, oldValue, value)); "," String XXXXX = value; value = newValue; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, DroolsPackage.METAENTRY_TYPE__VALUE, XXXXX, value)); "
1," ISessionManagement port = null; try { URL SOAP_URL = new URL(""http: SessionManagement service = new SessionManagementLocator(); port = service.getBasicHttpBinding_ISessionManagement(SOAP_URL); "," ISessionManagement port = null; try { URL SOAP_URL = new URL(""http: SessionManagement service = new SessionManagementLocator(); port = service.getBasicHttpBinding_ISessionManagement(SOAP_URL); "
0, m_sequenceConfig = sequenceConfig; for(MobileSequenceTransaction transaction : sequenceConfig.getTransactions()) { m_transactionExecutions.add(new MobileTransactionExecution(transaction)); ," String label = ((XhtmlHeadingType)object).getId(); return label == null || label.length() == 0 ? getString(""_UI_XhtmlHeadingType_type"") : getString(""_UI_XhtmlHeadingType_type"") + "" "" + label; "
0," Assert.assertNotNull(metadatas); Assert.assertFalse(metadatas.isEmpty()); Assert.assertNotNull(metadatas.get(0)); Assert.assertEquals(""2.0"", metadatas.get(0).getPersistenceXMLSchemaVersion()); "," String oldValue = value; value = newValue; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, FXGraphPackage.LOCATION_VALUE_PROPERTY__VALUE, oldValue, value)); "
1," if (mrjVersion >= 4.0f) MRJ4EventProxy.getInstance().addQuitApplicationListener(l, source); else if (mrjVersion >= 1.5f) MRJ23EventProxy.getInstance().addQuitApplicationListener(l, source); "," if (mrjVersion >= 4.0f) MRJ4EventProxy.getInstance().addQuitApplicationListener(l, source); else if (mrjVersion >= 1.5f) MRJ23EventProxy.getInstance().addQuitApplicationListener(l, source); "
1," measurementType = StringUtils.trimToEmpty(measurementType).toLowerCase(); technologyType = StringUtils.trimToEmpty(technologyType).toLowerCase(); return getIsaTabConfigs().get(measurementType + "" "," measurementType = StringUtils.trimToEmpty(measurementType).toLowerCase(); technologyType = StringUtils.trimToEmpty(technologyType).toLowerCase(); return getIsaTabConfigs().get(measurementType + "" "
0," String oldTitle = title; title = newTitle; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, GMFToolPackage.POPUP_MENU__TITLE, oldTitle, title)); ", m_threadPool = threadPool; if ( m_threadPool == null) { m_expiryThread = new Thread(this); m_expiryThread.setDaemon(true); m_expiryThread.setName(threadName); m_expiryThread.start(); 
1," double rlat = Math.atan2(z, Math.sqrt(x * x + y * y)); double rlon = getLongitudeRadians(); double c = r * Math.cos(rlat); x = c * Math.cos(rlon); y = c * Math.sin(rlon); z = r * Math.sin(rlat); "," double XXXXX = Math.atan2(z, Math.sqrt(x * x + y * y)); double XXXXX = getLongitudeRadians(); double XXXXX = r * Math.XXXXXos(XXXXX); x = XXXXX * Math.XXXXXos(XXXXX); y = XXXXX * Math.sin(XXXXX); z = r * Math.sin(XXXXX); "
0," double expSoilFrac = BaerConstants.AUX_SOIL_FRACTION_DEFAULT; String expVersion = ""11.3""; String expComment = ""Test No Soil fraction factor""; try { _loader.load(NO_SOIL_AUX_FILE); "," String s = StatementBuilder.create() .try_() .finish() .finally_() .finish() .toJavaString(); assertEquals(""Failed to generate empty try finally block"", EMPTY_TRY_FINALLY_BLOCK, s); "
1," super(frame, resources.getString(""title.dialog""), true); getContentPane().setLayout(new GridBagLayout()); JFTPHelp2.getInstance().enableHelpKey(getRootPane(), HELP_ID); initComponents(); pack(); "," super(frame, resources.getString(""title.dialog""), true); getContentPane().setLayout(new GridBagLayout()); JFTPHelp2.getInstance().enableHelpKey(getRootPane(), HELP_ID); initComponents(); pack(); "
1," int x = e.getX(); int y = e.getY(); if (x > 6 && x < 19) { if (y > 236 && y < 251) { buttonDown = true; WismoteGui.this.node.getButton().setPressed(true); repaint(7, 237, 11, 13); "," int XXXXX = e.getX(); int XXXXX = e.getY(); if (XXXXX > 6 && XXXXX < 19) { if (XXXXX > 236 && XXXXX < 251) { buttonDown = true; WismoteGui.this.node.getButton().setPressed(true); repaint(7, 237, 11, 13); "
1," if (null == this.image || 0 >= this.image.getWidth(null) || 0 >= this.image.getHeight(null)) { g.setColor(Color.white); g.fillRect(0, 0, this.getSize().width, this.getSize().height); "," if (null == this.image || 0 >= this.image.getWidth(null) || 0 >= this.image.getHeight(null)) { g.setColor(Color.white); g.fillRect(0, 0, this.getSize().width, this.getSize().height); "
0," toMultiuserMap.put(networkSequence, multiuserSequence); toNetworkMap.put(multiuserSequence, networkSequence); if (multiuserSequence > multiuserAckExpacted) multiuserAckExpacted = multiuserSequence; "," OWLClassExpression c = atom.getPredicate(); SWRLIArgument v = atom.getArgument(); v.accept( this ); AtomIObject subj = swrlIObject; c.accept( this ); swrlAtom = new ClassAtom( term, subj ); "
1," NewProxyRequestDocument document = new NewProxyRequestDocument(); context.fillRequestDocument(document); context.startNewProxy(document); context.redirectTo(""/"" + document.proxyName); "," NewProxyRequestDocument XXXXX = new NewProxyRequestDocument(); context.fillRequestDocument(XXXXX); context.startNewProxy(XXXXX); context.redirectTo(""/"" + XXXXX.proxyName); "
0," if (baseTimeline != null) { if (baseTimeline.getSegmentSize() < this.segmentSize) { throw new IllegalArgumentException( ""baseTimeline.getSegmentSize() "" + ""is smaller than segmentSize""); ", final Presentation presentation = e.getPresentation(); final int idx = (myWorkingCopiesList == null) ? -1 : myWorkingCopiesList.getSelectedIndex(); presentation.setEnabled(idx != -1); 
1," MessageDefinition messageDefinition = motechService() .getMessageDefinition(messageKey); if (messageDefinition == null) { log.error(""Invalid message key for message definition: "" + messageKey); "," MessageDefinition XXXXX = motechService() .getMessageDefinition(messageKey); if (XXXXX == null) { log.error(""Invalid message key for message definition: "" + messageKey); "
1," validateMirror(frame); Method frameMethod = frame.location().method(); if (!frameMethod.equals(method)) { throw new IllegalArgumentException( ""frame method different than variable's method""); "," validateMirror(frame); Method XXXXX = frame.location().method(); if (!XXXXX.equals(method)) { throw new IllegalArgumentException( ""frame method different than variable's method""); "
1," Adapter[] eAdapters = eBasicAdapterArray(); if (eAdapters != null && eDeliver()) { for (int i = 0, size = eAdapters.length; i < size; ++i) { eAdapters[i].notifyChanged(notification); "," Adapter[] eAdapters = eBasXXXXXcAdapterArray(); XXXXXf (eAdapters != null && eDelXXXXXver()) { for (XXXXXnt XXXXX = 0, sXXXXXze = eAdapters.length; XXXXX < sXXXXXze; ++XXXXX) { eAdapters[XXXXX].notXXXXXfyChanged(notXXXXXfXXXXXcatXXXXXon); "
0, for ( LeftTuple entry = this; entry != null; entry = entry.getParent() ) { if( entry.getLastHandle().isEvent() ) { ((EventFactHandle)entry.getLastHandle()).increaseActivationsCount(); ," super( message, cause ); this.groupId = ( groupId != null ) ? groupId : """"; this.artifactId = ( artifactId != null ) ? artifactId : """"; this.version = ( version != null ) ? version : """"; "
1, final int sequence = getSequenceFromDate(when); final TemporalPoint point = new TemporalPoint(this.descriptions.size()); point.setSequence(sequence); this.points.add(point); return point; , final int sequence = getSequenceFromDate(when); final TemporalPoint point = new TemporalPoint(this.descriptions.size()); point.setSequence(sequence); this.points.add(point); return point; 
1," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "
1," final IProject project = (IProject) IvyPlugin.adapt(getElement(), IProject.class); ListretrieveSetups = (List) table.getInput(); try { retrieveSetupManager.save(project, retrieveSetups); "," final IProject XXXXX = (IProject) IvyPlugin.adapt(getElement(), IProject.class); ListretrieveSetups = (List) table.getInput(); try { retrieveSetupManager.save(XXXXX, retrieveSetups); "
0," if (infoA == null && infoB ==null) return 0; if (infoA == null) return -1; if (infoB == null) return 1; String objectClassA = """"; for ( String str : infoA.getObjectClass()){ objectClassA += str+"",""; "," StringBuilder line = new StringBuilder(); line.append(mappingToString(data)); logic.compute(data); line.append("" | ""); line.append(mappingToString(data)); System.out.println(line.toString()); "
1," Hashtable props = new Hashtable(); for (Map.Entry<Object, Object> entry : description.entrySet()) { if (entry.getKey() instanceof String) { props.put(entry.getKey(), entry.getValue()); "," Hashtable XXXXX = new Hashtable(); for (Map.Entry<Object, Object> entry : description.entrySet()) { if (entry.getKey() instanceof String) { XXXXX.put(entry.getKey(), entry.getValue()); "
1, PrintWriter out = null; try { File f = new File(getLocalPluginXMLCache().toOSString()); out = new PrintWriter(new BufferedWriter(new FileWriter(f))); out.write(pxml); out.flush(); , PrintWriter XXXXX = null; try { File XXXXX = new File(getLocalPluginXMLCache().toOSString()); XXXXX = new PrintWriter(new BuXXXXXXXXXXeredWriter(new FileWriter(XXXXX))); XXXXX.write(pxml); XXXXX.XXXXXlush(); 
0," WriteOp writeOp = new WriteOp(sourceProduct, file, formatName); writeOp.setDeleteOutputOnFailure(deleteOutputOnFailure); writeOp.setWriteEntireTileRows(true); writeOp.writeProduct(pm); ", if (graphComponent.isEnabled() && isEnabled() && !e.isConsumed() && first != null) { double deg = 0; Object cell = null; if (currentState != null) { cell = currentState.getCell(); 
1," Session session=HibernateUtil.getSessionFactory().getCurrentSession(); Transaction ts=null; try { String hql=""from ThemeTemplate tt""; if(""me"".equals(type)){ hql=hql+"" where tt.uid=""+id; "," Session session=HibernateUtil.getSessionFactory().getCurrentSession(); Transaction ts=null; try { String hql=""from ThemeTemplate tt""; if(""me"".equals(type)){ hql=hql+"" where tt.uid=""+id; "
0," MessageBox.confirm(OpenSigCore.i18n.txtEcf(), OpenSigCore.i18n.msgRecarregar(), new ConfirmCallback() { public void execute(String btnID) { if (btnID.equalsIgnoreCase(""yes"")) { storeEcf.load(); "," if (isLiveOrCompiled()) if(!this.getCapability(ALLOW_PATH_WRITE)) throw new CapabilityNotSetException(J3dI18N.getString(""Text3D9"")); ((Text3DRetained)this.retained).setPath(path); "
1," IntentResult scanResult = IntentIntegrator.parseActivityResult(requestCode, resultCode, intent); if (scanResult != null) { String barcode = scanResult.getContents(); if(barcode == null){ return; "," IntentResult XXXXX = IntentIntegrator.parseActivityResult(requestCode, resultCode, intent); if (XXXXX != null) { String XXXXX = XXXXX.getContents(); if(XXXXX == null){ return; "
1," return new MongoDBQueries().updateDocument(""_id"", id,jsonToUpdate, COL_ACTIVITIES, ""Activity updated successfully"", MongoPersons.COL_PERSONS ,""pers_id"",JSONValidator.ACTIVITY_SCHEMA).toString(); "," return new MongoDBQueries().updateDocument(""_id"", id,jsonToUpdate, COL_ACTIVITIES, ""Activity updated successfully"", MongoPersons.COL_PERSONS ,""pers_id"",JSONValidator.ACTIVITY_SCHEMA).toString(); "
1," String url = jtwit.TWITTER_URL + ""/"" + owner.screenName + ""/"" + idOrSlug() + ""/members.json""; Map map = Twitter.asMap(""id"", user.screenName); String json = http.post(url, map, true); return true; "," String XXXXX = jtwit.TWITTER_URL + ""/"" + owner.screenName + ""/"" + idOrSlug() + ""/members.XXXXX""; Map XXXXX = Twitter.asMap(""id"", user.screenName); String XXXXX = http.post(XXXXX, XXXXX, true); return true; "
0," assertEquals(callCount, calc.getCallCount()); assertEquals(errorCount, calc.getErrorCount()); assertEquals(totalTime, calc.getTotalTime()); assertEquals(avgTime, calc.getAverageTime()); "," String host = ""test""; Class<HttpServletRequest> klass = HttpServletRequest.class; HttpServletRequest request = (HttpServletRequest)Proxy.newProxyInstance(klass.getClassLoader(), new Class<?>[]{klass"
0," assertEquals(""parent tag"", properties.get(""tag.org.perf4j.helpers.ClassNotInProperties"")); assertEquals(""parent message"", properties.get(""message.org.perf4j.helpers.ClassNotInProperties"")); "," importWizardActionGroup.setContext(getContext()); if (importWizardActionGroup.getWizardActionIds().length == 0) { aMenu.appendToGroup(ICommonMenuConstants.GROUP_PORT, importAction); return; "
0," String oldOnerror = onerror; onerror = newOnerror; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_SVG_ELEMENT__ONERROR, oldOnerror, onerror)); "," monitor.down = false; monitor.update(); monitor.down = true; monitor.update(); monitor.down = false; monitor.update(); assertThat(monitor, MonitorMatcher.monitor(false, true, false)); "
0," String oldTitle = title; title = newTitle; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, BootstrapPackage.MAIN_PAGE__TITLE, oldTitle, title)); ", buffer.writeByte(journalID); buffer.writeBoolean(isUpdate); buffer.writeLong(id); buffer.writeByte(recordType); buffer.writeInt(encodingData.getEncodeSize()); encodingData.encode(buffer); 
1," RioStatement statement = this.getFirstStatement(uri, IConstants.OSLC_SHORTTITLE, null); if( statement != null ) { RioValue value = statement.getObject(); return value.stringValue(); "," RioStatement statement = this.getFirstStatement(uri, IConstants.OSLC_SHORTTITLE, null); if( statement != null ) { RioValue value = statement.getObject(); return value.stringValue(); "
0," String label = ((ReferenceProperty)object).getName(); return label == null || label.length() == 0 ? getString(""_UI_ReferenceProperty_type"") : getString(""_UI_ReferenceProperty_type"") + "" "" + label; ", EntityManager em = emf.createEntityManager(); em.getTransaction().begin(); Node root = new Node(); for (int i = 0; i < _l1Nodes; i++) { Node n1 = new Node(); root.getNodes().add(n1); em.persist(n1); 
0," ArrayList<String> unknown = new ArrayList<String>(); String known = DebugDatabase.parseEffectEnchantments( text, unknown ); DebugDatabase.logModifierDatum( name, known, unknown, report ); ", super(); this.collection = collection; this.query = query; this.fields = fields; this.sort = sort; this.remove = remove; this.update = update; this.returnNew = returnNew; this.upsert = upsert; 
0, String[] logicalDrives = Kernel32Util.getLogicalDriveStrings(); assertTrue(logicalDrives.length > 0); for(String logicalDrive : logicalDrives) { assertTrue(logicalDrive.length() > 0); ," if (button == MouseEvent.BUTTON1) { final Point2D mouse = translateMouseCoords(e); for (InteractiveElement ie : interactives()) { if (ie.contains(mouse, state)) { setState(ie.click(state)); break; "
0," ContentSource returned = _htmlFile.getScheduledOverrideVersion(); if (_wodFile.getScheduledOverrideVersion() != returned) { logger.warning(""Inconsistent data in scheduled version""); ", NodeList children = motherNode.getChildNodes(); for (int i=0;i<children.getLength();i++){ Node nextChild = children.item(i); String name = nextChild.getLocalName(); if (name == null){ continue; 
0," session.logout(); final Chat chat = manager.open(OTHER); assertEquals(ChatStatus.locked, chat.getStatus()); session.setLoggedIn(ME); assertEquals(ChatStatus.ready, chat.getStatus()); "," String temp = customLogfileName; logFileBrowserWidget.setFilename( ldifFileBrowserWidget.getFilename() + "".log"" ); logFileBrowserWidget.setEnabled( false ); customLogfileName = temp; validate(); "
0," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; ", if (reader != null) { CoordinateReferenceSystem crs = reader.getCrs(); GeneralEnvelope envelope = reader.getOriginalEnvelope(); if (envelope != null) { return new ReferencedEnvelope(envelope); 
1," String playerName = p.getName(); String refLink = getRefLink(playerName); if(refLink == null) { refLink = insertRefLink(playerName, p.getAddress().getAddress().getHostAddress()); "," String XXXXX = p.getName(); String XXXXX = getRefLink(XXXXX); if(XXXXX == null) { XXXXX = insertRefLink(XXXXX, p.getAddress().getAddress().getHostAddress()); "
1," if (!OSGIUtils.getDefault().isFragment(bundle)) { synchronized (currentStateStamp) { dynamicAddStateStamps.put(Long.toString(bundle.getBundleId()), new Long(currentStateStamp[0])); "," if (!OSGIUtils.getDefault().isFragment(bundle)) { synchronized (currentStateStamp) { dynamicAddStateStamps.put(Long.toString(bundle.getBundleId()), new Long(currentStateStamp[0])); "
0, long memSize = getHostTotalMemory(); memSize -= getHostDom0Memory(); synchronized (this) { for (MockVm vm : vms.values()) { if (vm.getState() != State.Stopped) memSize -= vm.getRamSize(); , DelegatingCollector ptr = this; for(; ptr.getDelegate() instanceof DelegatingCollector; ptr = (DelegatingCollector)ptr.getDelegate()); ptr.setDelegate(delegate); setLastDelegateCount++; 
0," Map<String, Object> map = new HashMap<String, Object>() { { put(""description"", ""foo""); put(""items"", Arrays.asList( new HashMap<String, Object>() { { put(""quantity"", 10); put(""description"", ""foo""); "," String label = ((IServiceTypeID)object).getEcfServiceName(); return label == null || label.length() == 0 ? getString(""_UI_IServiceTypeID_type"") : getString(""_UI_IServiceTypeID_type"") + "" "" + label; "
1," String values = """"; if (selectionMap != null) { Set<String> keySet = selectionMap.keySet(); Iterator<String> it = keySet.iterator(); while (it.hasNext()) { values = values + "", "" + it.next(); "," String XXXXX = """"; if (selectionMap != null) { Set<String> keySet = selectionMap.keySet(); Iterator<String> it = keySet.iterator(); while (it.hasNext()) { XXXXX = XXXXX + "", "" + it.next(); "
1," final EObject domainElement = getSemanticElement(semanticAdapter); final int visualID; if (semanticHint == null) { visualID = SAGVisualIDRegistry.getNodeVisualID(containerView, domainElement); "," final EObject XXXXX = getSemanticElement(semanticAdapter); final int visualID; if (semanticHint == null) { visualID = SAGVisualIDRegistry.getNodeVisualID(containerView, XXXXX); "
1," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," EditorCell XXXXX = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, XXXXX, editorContext); return XXXXX; "
1, ASTParser parser= ASTParser.newParser(ASTProvider.SHARED_AST_LEVEL); parser.setSource(compilationUnit); parser.setResolveBindings(true); return (CompilationUnit) parser.createAST(null); , ASTParser parser= ASTParser.newParser(ASTProvider.SHARED_AST_LEVEL); parser.setSource(compilationUnit); parser.setResolveBindings(true); return (CompilationUnit) parser.createAST(null); 
1," String message = null; Component errorComponent = null; if (tfDirectory.getText().trim().length() == 0) { message = resources.getString(""error.directory.required""); errorComponent = tfDirectory; "," String XXXXX = null; Component XXXXX = null; if (tfDirectory.getText().trim().length() == 0) { XXXXX = resources.getString(""error.directory.required""); XXXXX = tfDirectory; "
1," if (m_eventMgr == null) throw new IllegalStateException(""eventManager has not been set""); if (m_dataSource == null) throw new IllegalStateException(""dataSource has not been set""); "," if (m_eventMgr == null) throw new IllegalStateException(""eventManager has not been set""); if (m_dataSource == null) throw new IllegalStateException(""dataSource has not been set""); "
1," IRubyElement element = (IRubyElement)owner; IResource resource = element.getResource(); return new Buffer( resource instanceof IFile ? (IFile)resource : null, owner, element.isReadOnly()); "," IRubyElement XXXXX = (IRubyElement)owner; IResource XXXXX = XXXXX.getResource(); return new Buffer( XXXXX instanceof IFile ? (IFile)XXXXX : null, owner, XXXXX.isReadOnly()); "
1, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(SamplePortalServiceTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , TestSuite XXXXX = new TestSuite(); XXXXX.addTest(LoginTests.suite()); XXXXX.addTest(SamplePortalServiceTests.suite()); XXXXX.addTestSuite(StopSeleniumTest.class); return XXXXX; 
0," UnaryRule bestR = bestRulesUnderMax.get(ur); if (bestR == null) { bestRulesUnderMax.put(ur, ur); closedRulesWithParent[ur.parent].add(ur); closedRulesWithChild[ur.child].add(ur); return true; ", if(this.codeGenerationStrategy == null){ if(getOwnerElement() instanceof INakedPackage && !isRootPackage()){ return ((INakedPackage) getOwnerElement()).getCodeGenerationStrategy(); 
0, this.aggregateBuildIssues = aggregateBuildIssues; this.aggregationBuildStatus = aggregationBuildStatus; JiraSite site = JiraSite.get(build.getProject()); if (site == null) { return; ," grabLayers = """"; grabStyles = """"; int countLayers = 0; if (Main.pref.getBoolean(""cadastrewms.layerWater"", true)) { grabLayers += LAYER_WATER + "",""; grabStyles += STYLE_WATER + "",""; countLayers++; "
1, sorted = false; n++; double oldMean = mean; mean += (sample - mean) / n; double diff = (sample - mean) * (sample - oldMean); variance += (diff - variance) / n; if (n < 100) { starter.add(sample); , sorted = false; n++; double XXXXX = mean; mean += (sample - mean) / n; double XXXXX = (sample - mean) * (sample - XXXXX); variance += (XXXXX - variance) / n; if (n < 100) { starter.add(sample); 
0," assertEquals(test.mocksize, test.size); final int records = 100; byte[] write = new byte[test.recordSize]; for (int i = 0; i < records; i++) { random.nextBytes(write); try { test.append(write); ", double[][] identity = new double[n][n]; for (int i = 0; i < n; i++) { for (int j = 0; j < i; j++) identity[i][j] = 0.0; identity[i][i] = 1.0; for (int j = i+1; j < n; j++) identity[i][j] = 0.0; 
0," BitSet destinations = new BitSet(); destinations.set(0, 2); retransmitter.startTransmitting(message1, destinations); verify(network, times(1)).sendMessage(message1, destinations); ", AnnouncementsDelivery announcementsDelivery = new AnnouncementsDeliveryImpl(); announcementsDelivery.setNew(true); announcementsDelivery.setPrimaryKey(deliveryId); return announcementsDelivery; 
0," ByteArrayOutputStream tempBuffer = new ByteArrayOutputStream(1024); byte[] buffer = new byte[1024]; int i = 0; try { while ((i = stream.read(buffer)) > -1) { tempBuffer.write(buffer, 0, i); ", int index = findInsertionIndex(key); T previous = missingEntries; boolean newMapping = true; if (index < 0) { index = changeIndexSign(index); previous = values[index]; newMapping = false; 
0," BitSet benzene = fingerprinter.getFingerprint(Molecules.createBenzene()); BitSet phenol = fingerprinter.getFingerprint(Molecules.createPhenol()); assertTrue(match(benzene, phenol)); ", String[] frases = this.getResources().getStringArray(R.array.frases_array); Random num = new Random(); int r = num.nextInt()%2; String nombre; String texto; try{ nombre = name.getText().toString(); 
1, String sSubTitle = utils.GetResStr(R.string.titleDefaultNote); if (GetStartMode() == StartMode.NEW) { sSubTitle = utils.GetResStr(R.string.titleNewNote); btnDelete.setVisibility(View.INVISIBLE); , String XXXXX = utils.GetResStr(R.string.titleDefaultNote); if (GetStartMode() == StartMode.NEW) { XXXXX = utils.GetResStr(R.string.titleNewNote); btnDelete.setVisibility(View.INVISIBLE); 
0," initiateWebApplication(ParentWithTemplates.class); assertEquals(""parent"", resource(""/parent"").get(String.class)); assertEquals(""first"", resource(""/parent/child/first?a=1&b=2"").get(String.class)); ", String x; JSONArray entries = null; try{ byte [] buffer = new byte[is.available()]; while (is.read(buffer) != -1); String jsontext = new String(buffer); entries = new JSONArray(jsontext); 
1," List vms = VirtualMachine.list(); for (int i = 0; i < vms.size(); i++) { VirtualMachineDescriptor desc = (VirtualMachineDescriptor) vms.get(i); out.println(desc.id()+""\t""+desc.displayName()); "," List vms = VirtualMachine.list(); for (int i = 0; i < vms.size(); i++) { VirtualMachineDescriptor desc = (VirtualMachineDescriptor) vms.get(i); out.println(desc.id()+""\t""+desc.displayName()); "
1," return div(mul(t, add(PS0, mul(t, add(PS1, mul(t, add(PS2, mul(t, add(PS3, mul(t, add(PS4, mul(t, PS5))))))))))), add(ONE, mul(t, add(QS1, mul(t, add(QS2, mul(t, add(QS3, mul(t, QS4))))))))); "," return div(mul(t, add(PS0, mul(t, add(PS1, mul(t, add(PS2, mul(t, add(PS3, mul(t, add(PS4, mul(t, PS5))))))))))), add(ONE, mul(t, add(QS1, mul(t, add(QS2, mul(t, add(QS3, mul(t, QS4))))))))); "
1," ATTRIBUTES_FIRST.set(HotKeyAttributes.key, ""x""); for (int i=1; i<=NUMBER_OF_TESTS; i++) { for (int j=0; j<i; j++) { selenium.keyPressNative(KeyEvent.VK_X); selenium.keyPressNative(KeyEvent.VK_A); "," ATTRIBUTES_FIRST.set(HotKeyAttributes.key, ""x""); for (int i=1; i<=NUMBER_OF_TESTS; i++) { for (int j=0; j<i; j++) { selenium.keyPressNative(KeyEvent.VK_X); selenium.keyPressNative(KeyEvent.VK_A); "
1," String id = model.getPluginBase().getId(); String packageName = getFormattedPackageName(id); initializeOption(KEY_PACKAGE_NAME, packageName); this.packageName = getFormattedPackageName(id); "," String XXXXX = model.getPluginBase().getId(); String XXXXX = getFormattedPackageName(XXXXX); initializeOption(KEY_PACKAGE_NAME, XXXXX); this.XXXXX = getFormattedPackageName(XXXXX); "
1, try { if(reader != null && !reader.ready()) { synchronized(this) { if(reader != null && !reader.ready()) { if(zipEntries.hasMoreElements()) { try { reader = getReader(zipEntries.nextElement()); , try { if(reader != null && !reader.ready()) { synchronized(this) { if(reader != null && !reader.ready()) { if(zipEntries.hasMoreElements()) { try { reader = getReader(zipEntries.nextElement()); 
1," if ( responseText.indexOf( ""too drunk"" ) != -1 ) { UseItemRequest.lastUpdate = ""Inebriety limit reached.""; KoLmafia.updateDisplay( MafiaState.ERROR, UseItemRequest.lastUpdate ); return; "," if ( responseText.indexOf( ""too drunk"" ) != -1 ) { UseItemRequest.lastUpdate = ""Inebriety limit reached.""; KoLmafia.updateDisplay( MafiaState.ERROR, UseItemRequest.lastUpdate ); return; "
1," SettingsNodeVersion1 settingsNode = getChildNode(name); if (settingsNode != null) { String value = settingsNode.getValue(); if (value != null) { if (""true"".equalsIgnoreCase(value)) { return true; "," SettingsNodeVersion1 XXXXX = getChildNode(name); if (XXXXX != null) { String XXXXX = XXXXX.getValue(); if (XXXXX != null) { if (""true"".equalsIgnoreCase(XXXXX)) { return true; "
0," PsiElement nameIdentifier = function.getNameIdentifier(); if (nameIdentifier != null) { JetPsiChecker.highlightName(holder, nameIdentifier, JetHighlightingColors.FUNCTION_DECLARATION); "," TreePath path = tree.getUI().getClosestPathForLocation(tree, e.getPoint().x, e.getPoint().y); if (path != null) { tree.setSelectionPath(path); popup.show(tree, e.getX(), e.getY()); "
1, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(ReleaseToolsTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , TestSuite XXXXX = new TestSuite(); XXXXX.addTest(LoginTests.suite()); XXXXX.addTest(ReleaseToolsTests.suite()); XXXXX.addTestSuite(StopSeleniumTest.class); return XXXXX; 
1," OpenJPAEntityManager pm = getEM(); OpenJPAQuery query = (OpenJPAQuery) pm.createNamedQuery(""named""); assertEquals(""SELECT o FROM QueryTest1 o"", query.getQueryString()); query.closeAll(); endEm(pm); "," OpenJPAEntityManager XXXXX = getEM(); OpenJPAQuery XXXXX = (OpenJPAQuery) XXXXX.createNamedQuery(""named""); assertEquals(""SELECT o FROM QueryTest1 o"", XXXXX.getQueryString()); XXXXX.closeAll(); endEm(XXXXX); "
0," String browserString; Object browser = BROWSER_TO_CMD_MAP.get(browserType); if (browser == null) { throw new IllegalArgumentException( ""Unsupported browser type: "" + browserType); ", ApplicationAttemptId appAttemptId = Records.newRecord(ApplicationAttemptId.class); appAttemptId.setApplicationId(appId); appAttemptId.setAttemptId(attemptId); return appAttemptId; 
0," ClientResource clientResource = makeClientResource(getBaseAddress() + ""/target/"" + id); try { TargetResource resource = clientResource.wrap(TargetResource.class); resource.remove(); "," if (evt != null && evt.getPropertyName() != null) { String propertyName = evt.getPropertyName(); if (propertyName.equals(""selectedFile"")) { selectedFileChanged(evt.getNewValue()); "
0, if (state == PlayerState.DEAD) return; int lives = (game == null) ? Config.getLivesGlobal() : Config.getLives(game.getSetup()); if (lives == 0 || deaths.size() >= lives) { die(); ," assertNotNull(xml.tag(""id"")); assertNotNull(xml.tag(""entry"")); assertNull(xml.tag(""what"")); assertNull(xml.tag(""what"")); assertEquals(""3479"", xml.tag(""openSearch:totalResults"").text()); "
0," synchronized (JTermiosImpl.this) { m_FD = -1; for (int i = 0; i < m_PortFDs.length; ++i) { if (!m_PortFDs[i]) { m_FD = i; m_PortFDs[i] = true; m_OpenPorts.put(m_FD, this); return; "," OptionSet options = parser.parse( ""-c"", ""foo"" ); assertOptionDetected( options, ""c"" ); assertNull( options.valueOf( ""c"" ) ); assertEquals( singletonList( ""foo"" ), options.nonOptionArguments() ); "
0," Cursor waypointsCursor = null; if( mRequeryFlag || mStepSize < 1 || mWaypointCount < 0 ) { try { waypointsCursor = this.mResolver.query( this.mWaypointsUri, new String[] { Waypoints._ID ", if ( from != null && to != null ) { int comparison = from.compareTo( to ); if ( comparison > 0 || (comparison == 0 && (!fromInclusive || !toInclusive)) ) { impossibleMatch = true; 
1, if (MartialArtsUtilities.isMartialArtsCharm(charm) && !charm.isInstanceOfGenericCharm()) { return getResourceProvider().getMartialArtLevelIcon(MartialArtsUtilities.getLevel(charm)); , if (MartialArtsUtilities.isMartialArtsCharm(charm) && !charm.isInstanceOfGenericCharm()) { return getResourceProvider().getMartialArtLevelIcon(MartialArtsUtilities.getLevel(charm)); 
0," PHtmlView html = new PHtmlView(); assertEquals(null, html.getText()); assertEquals(PHtmlView.DEFAULT_FONT, html.getFont()); assertEquals(PHtmlView.DEFAULT_TEXT_COLOR, html.getTextColor()); "," super(2 + Math.max(String.valueOf(minimum).length(), String.valueOf(maximum).length())); this.minimum = minimum; this.maximum = maximum; this.stepsize = stepsize; this.negativeColor = negativeColor; "
1, boolean received = this.getDatanodeReportRatio() >= this.outStandingReportThreshold; if (!received) { checkDatanodes(); return this.getDatanodeReportRatio() >= this.outStandingReportThreshold; , boolean XXXXX = this.getDatanodeReportRatio() >= this.outStandingReportThreshold; if (!XXXXX) { checkDatanodes(); return this.getDatanodeReportRatio() >= this.outStandingReportThreshold; 
0, switch (getDBType(em)) { case db2: assertLockTestSQLs(Select + tableLfName + Where + DB2Lock); break; case oracle: case derby: default: assertLockTestSQLs(Select + tableLfName + Where + ForUpdate); , constraintValidatorFactory = new ConstraintValidatorFactoryImpl(); constraintValidatorManager = new ConstraintValidatorManager( constraintValidatorFactory ); validator = getValidator(); 
0," try { long i = 1l; for (Date end = new Date(System.currentTimeMillis() + maxWait); before(end); Thread.sleep(nextMaxInterval(i++, end))) { if (predicate.apply(input)) { return true; "," this.remove(2); Varipaletti varipaletti = new Varipaletti(this); this.add(varipaletti, BorderLayout.CENTER); this.nappainKuuntelija.asetaUusiKuuntelija( varipaletti ); this.revalidate(); "
0," try { if (state != State.ERROR) { release(); filePath = null; cAmplitude = 0; if (rUncompressed) { audioRecorder = new AudioRecord(aSource, sRate, nChannels+1, aFormat, bufferSize); "," String label = ((SystemInstance) object).getName(); return label == null || label.length() == 0 ? getString(""_UI_SystemInstance_type"") : getString(""_UI_SystemInstance_type"") + "" "" + label; "
1," try { log.debug(""Test list members - missing date""); List<MemberResponseInfo> content = mSvc.listMembers(listId, MemberStatus.subscribed, null, 0, 100); log.debug(""Lists Content: {"," try { log.debug(""Test list members - missing date""); List<MemberResponseInfo> content = mSvc.listMembers(listId, MemberStatus.subscribed, null, 0, 100); log.debug(""Lists Content: {"
0," SyslogFormater fmt1 = new SyslogFormater(); fmt1.regexPattern = SYSLOG_MSG_RFC5424_0; fmt1.searchPattern.add(""Z""); fmt1.replacePattern.add(""+0000""); fmt1.searchPattern.add(""([+-])(\\d{2"," super(xsr); this.name = name; this.faults = new ArrayList<WSDLFaultImpl>(); this.faultMap = new QNameMap<WSDLFaultImpl>(); this.faultActionMap = new HashMap<String,String>(); this.owner = owner; "
1," yPosition -= leading; while (yPosition > bounds.getMinY()) { graphics.createHorizontalLineByCoordinate(new Position(bounds.x, yPosition), bounds.getMaxX()).encode(); yPosition -= leading; "," yPosition -= leading; while (yPosition > bounds.getMinY()) { graphics.createHorizontalLineByCoordinate(new Position(bounds.x, yPosition), bounds.getMaxX()).encode(); yPosition -= leading; "
1," final String nicknameVal = nickname.getText().toString().trim(); if (nicknameVal.length() == 0) { Toast.makeText(this, ""Nickname cannot be empty"", Toast.LENGTH_LONG).show(); return; "," final String XXXXX = nickname.getText().toString().trim(); if (XXXXX.length() == 0) { Toast.makeText(this, ""Nickname cannot be empty"", Toast.LENGTH_LONG).show(); return; "
1, this.publishedMetaDataSet = publishedMetaDataSet; this.data.setAssessmentMetaDataSet(publishedMetaDataSet); this.publishedMetaDataMap = getAssessmentMetaDataMap(publishedMetaDataSet); , this.publishedMetaDataSet = publishedMetaDataSet; this.data.setAssessmentMetaDataSet(publishedMetaDataSet); this.publishedMetaDataMap = getAssessmentMetaDataMap(publishedMetaDataSet); 
1, if(this == other) return true; if( !(other instanceof WeblogHitCount) ) return false; final WeblogHitCount that = (WeblogHitCount) other; return this.getWeblog().equals(that.getWeblog()); , if(this == other) return true; if( !(other instanceof WeblogHitCount) ) return false; final WeblogHitCount XXXXX = (WeblogHitCount) other; return this.getWeblog().equals(XXXXX.getWeblog()); 
1, boolean bRetVal = true; Iterator keys = fileMap.keySet().iterator(); while ( keys.hasNext() && bRetVal ) { if ( fileMap.get( keys.next() ).equals( NOT_FOUND ) ) { bRetVal = false; , boolean XXXXX = true; Iterator XXXXX = fileMap.keySet().iterator(); while ( XXXXX.hasNext() && XXXXX ) { if ( fileMap.get( XXXXX.next() ).equals( NOT_FOUND ) ) { XXXXX = false; 
0," String configurationEntry = """"; boolean firstEntry = true; for (Entry<String, String> currEntry : valuePerDomain.entrySet()) { if (!firstEntry) { configurationEntry += domainSeperator; "," if (basePath == null) throw new IllegalArgumentException(); if (basePath.endsWith("".key"") || basePath.endsWith("".private"")) { basePath = basePath.substring(0, basePath.lastIndexOf(""."")); "
1," return new OxBodyTechniqueCharm( ""Abyssal.Ox-BodyTechnique"", AbilityType.Resistance, new LinkedHashMap<String, HealthLevelType[]>() { { this.put(""OxBody0"", new HealthLevelType[]{HealthLevelType.ZERO"," return new OxBodyTechniqueCharm( ""Abyssal.Ox-BodyTechnique"", AbilityType.Resistance, new LinkedHashMap<String, HealthLevelType[]>() { { this.put(""OxBody0"", new HealthLevelType[]{HealthLevelType.ZERO"
0," InlineBox result = new InlineBox(text, node); if (parentStyle.isInline() && ! (parent.getParentNode() instanceof Document)) { result.setStyle(parentStyle); result.setElement(parent); "," if (method instanceof MLMethod) { StructureTab tab = new StructureTab( ((MLMethod)this.method)); EncogWorkBench.getInstance().getMainWindow().getTabManager() .openModalTab(tab, ""Network Structure""); "
1," Editable editor = mStatusText.getText(); String update = editor.toString(); if(update.length() != 0){ editor.clear(); Helpers.sendToFeed(getActivity(), StatusObj.from(update), mFeedUri); "," Editable XXXXX = mStatusText.getText(); String XXXXX = XXXXX.toString(); if(XXXXX.length() != 0){ XXXXX.clear(); Helpers.sendToFeed(getActivity(), StatusObj.from(XXXXX), mFeedUri); "
1," search.getConfig().experimental = true;; processEpdFile(this.getClass().getResourceAsStream(""/wacnew.epd""), 5000); int solved1 = getSolved(); logger.debug(""Config1 = "" + solved1); "," search.getConfig().experimental = true;; processEpdFile(this.getClass().getResourceAsStream(""/wacnew.epd""), 5000); int solved1 = getSolved(); logger.debug(""Config1 = "" + solved1); "
1, Preferences preference = XMLCorePlugin.getDefault() .getPluginPreferences(); String charSet = preference .getString(CommonEncodingPreferenceNames.OUTPUT_CODESET); return charSet; , Preferences XXXXX = XMLCorePlugin.getDefault() .getPluginPreferences(); String XXXXX = XXXXX .getString(CommonEncodingPreferenceNames.OUTPUT_CODESET); return XXXXX; 
1," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (filter: ""); result.append(filter); result.append(')'); return result.toString(); "," if (eIsProxy()) return super.toString(); StringBuffer XXXXX = new StringBuffer(super.toString()); XXXXX.append("" (filter: ""); XXXXX.append(filter); XXXXX.append(')'); return XXXXX.toString(); "
0, for(SpatialValueAreaBean valueAreaBean: this.getSpatialValueAreaList()){ if (valueAreaBean.getTypeCode().equals(SpatialValueAreaBean.TYPE_OFFICIAL)){ return valueAreaBean.getSize().doubleValue(); ," final EObject domainElement = getSemanticElement(semanticAdapter); final int visualID; if (semanticHint == null) { visualID = SUCVisualIDRegistry.getNodeVisualID(containerView, domainElement); "
1," for (RuleCondition condition : myConditions) { myRules.add(new SpacingRule(condition, count, count, 0, myCodeStyleSettings.KEEP_LINE_BREAKS, myCodeStyleSettings.KEEP_BLANK_LINES_IN_CODE)); "," for (RuleCondition condition : myConditions) { myRules.add(new SpacingRule(condition, count, count, 0, myCodeStyleSettings.KEEP_LINE_BREAKS, myCodeStyleSettings.KEEP_BLANK_LINES_IN_CODE)); "
0," KeywordArgument arg1 = TEST_PARAM1.of(""Hello""); KeywordArguments keywordArguments = KeywordArguments.of(arg1); assertThat(TEST_PARAM2.from(keywordArguments, ""Marvin""), is(""Marvin"")); "," ClassLoader classLoader = getClass().getClassLoader(); return classLoader.getResourceAsStream(""org/eclipse/xtext/graphview/style/parser/antlr/internal/InternalGraphViewStyle.tokens""); "
1, if (obj instanceof MockContext) { MockContext theOther = (MockContext) obj; boolean envmtEqual = (null == prop ? null == theOther.prop : prop.equals(theOther.prop)); if (!envmtEqual) { return false; , if (obj instanceof MockContext) { MockContext XXXXX = (MockContext) obj; boolean XXXXX = (null == prop ? null == XXXXX.prop : prop.equals(XXXXX.prop)); if (!XXXXX) { return false; 
1," MessageFormat mf = new MessageFormat(resourceBundle .getString(""TestMenuItem.text"")); mf.setLocale(currLocale); JCommandMenuButton menuButton1 = new JCommandMenuButton(mf .format(new Object[] { ""1"" "," MessageFormat XXXXX = new MessageFormat(resourceBundle .getString(""TestMenuItem.text"")); XXXXX.setLocale(currLocale); JCommandMenuButton XXXXX = new JCommandMenuButton(XXXXX .format(new Object[] { ""1"" "
0," fireButtonEvent(ButtonEvent.HIDE_BUTTON, ButtonNames.FINISH); fireButtonEvent(ButtonEvent.SHOW_BUTTON, ButtonNames.BACK); fireButtonEvent(ButtonEvent.SHOW_BUTTON, ButtonNames.NEXT); ", L1PcInstance targetPlayer = null; for (L1PcInstance pc : L1World.getInstance().getVisiblePlayer(this)) { if (pc.getCurrentHp() <= 0 || pc.isDead() || pc.isGm() || pc.isGhost()) { continue; 
1," double value = eval( ""Finance.sln( 1400, 200, 10 )"" ); assertEquals( 120, value, Double.MIN_VALUE ); value = eval( ""Finance.sln( 1400, 200, -10 )"" ); assertEquals(-120, value, Double.MIN_VALUE); "," double XXXXX = eval( ""Finance.sln( 1400, 200, 10 )"" ); assertEquals( 120, XXXXX, Double.MIN_VALUE ); XXXXX = eval( ""Finance.sln( 1400, 200, -10 )"" ); assertEquals(-120, XXXXX, Double.MIN_VALUE); "
0," T instance; try { instance = clazz.isInterface() || ReflectionTools.doesImplementOrExtend(clazz, GeneratedImplementation.class) ? (T)GeneratedClassFactory.newInstance( clazz ) : clazz.newInstance(); ", if (selection instanceof IStructuredSelection) { Object selected = ((IStructuredSelection) selection) .getFirstElement(); if (selected instanceof IProject) return (IProject) selected; 
1," if (localPart == null || (localPart.equals(""Fault"") && (SOAPConstants.URI_NS_SOAP_1_1_ENVELOPE.equals(namespace) || SOAPConstants.URI_NS_SOAP_1_2_ENVELOPE.equals(namespace)))) { return false; "," if (localPart == null || (localPart.equals(""Fault"") && (SOAPConstants.URI_NS_SOAP_1_1_ENVELOPE.equals(namespace) || SOAPConstants.URI_NS_SOAP_1_2_ENVELOPE.equals(namespace)))) { return false; "
0, try { List<String> unsubs = api.campaignUnsubscribes(TestConstants.TEST_CAMPAIGN_ID); assertNotNull(unsubs); assertTrue(unsubs.size() > 0); for (String s : unsubs) { assertNotNull(s); , RegionLocation l = (RegionLocation)rl; return l.getX() == this.getX() && l.getY() == this.getY() && l.getZ() == this.getZ() && this.getWorld().getName().equals(l.getWorld().getName()); 
0," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; "," if (file instanceof BnfFile) { final MultiMap<String, BnfRule> map = new MultiMap<String, BnfRule>(); for (BnfRule rule : ((BnfFile)file).getRules()) { map.putValue(rule.getName(), rule); "
1, singleReferencesForEObjectFlatComboViewer.setInput(settings); if (current != null) { singleReferencesForEObjectFlatComboViewer.setSelection(new StructuredSelection(settings.getValue())); , singleReferencesForEObjectFlatComboViewer.setInput(settings); if (current != null) { singleReferencesForEObjectFlatComboViewer.setSelection(new StructuredSelection(settings.getValue())); 
1, FacesContext facesContext = event.getFacesContext(); processAuthErrorMessage(facesContext); processApplicationErrorMessage(facesContext); processApplicationSuccessMessage(facesContext); , FacesContext XXXXX = event.getFacesContext(); processAuthErrorMessage(XXXXX); processApplicationErrorMessage(XXXXX); processApplicationSuccessMessage(XXXXX); 
0," if (MusubiBaseActivity.getInstance().isDeveloperModeEnabled()) { new AlertDialog.Builder(getActivity()) .setTitle(""Share group..."") .setItems(new String[] {""Use Bluetooth (beta)"", ""Use GPS""", final Project project = context.getProject(); ModelAccess.instance().executeCommand(new Runnable() { public void run() { SNode node = breakpoint.getLocation().getSNode(); if (node == null) { return; 
1," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (name: ""); result.append(name); result.append(')'); return result.toString(); "," if (eIsProxy()) return super.toString(); StringBuffer XXXXX = new StringBuffer(super.toString()); XXXXX.append("" (name: ""); XXXXX.append(name); XXXXX.append(')'); return XXXXX.toString(); "
1," String samliteProperty = ServerConfigurationService.getString(""samigo.samliteEnabled""); if (null != samliteProperty && ""false"".equalsIgnoreCase(samliteProperty)) isVisible = false; "," String XXXXX = ServerConfigurationService.getString(""samigo.samliteEnabled""); if (null != XXXXX && ""false"".equalsIgnoreCase(XXXXX)) isVisible = false; "
0," final Form form = new Form(classToBind); final Collection<BasePsiNode<? extends PsiElement>> children = getChildren(project, form, settings); return new FormNode(project, form, settings, children); "," List tasks = parseTasks(""TASK,CHORE"", ALTERNATE_MESSAGE); assertEquals(1, tasks.size()); assertTask(ALTERNATE_MESSAGE_EXPECTED, 1, 1, IMarker.PRIORITY_HIGH, (TaskTag) tasks.get(0)); "
1," double expected = 1.0e-2; UnivariateRealSolver solver = new BisectionSolver(); solver.setFunctionValueAccuracy(expected); assertEquals(expected, solver.getFunctionValueAccuracy(), 1.0e-2); "," double expected = 1.0e-2; UnivariateRealSolver solver = new BisectionSolver(); solver.setFunctionValueAccuracy(expected); assertEquals(expected, solver.getFunctionValueAccuracy(), 1.0e-2); "
1," PelopsException pelopsException = translator.translate(new org.apache.cassandra.thrift.TimedOutException()); assertEquals(""Translation failed"", TimedOutException.class, pelopsException.getClass()); "," PelopsException pelopsException = translator.translate(new org.apache.cassandra.thrift.TimedOutException()); assertEquals(""Translation failed"", TimedOutException.class, pelopsException.getClass()); "
0, subscribedRepositories.clear(); for (FeedModel feed : availableFeeds) { feed.subscribed = reg.feeds.contains(feed); if (feed.subscribed) { subscribedRepositories.add(feed.repository.toLowerCase()); , float deltaTime = 0.0f; long currentTime = SystemClock.elapsedRealtime(); if (updatePhysicsLastTimeLaunched >= 0) { deltaTime = (currentTime - updatePhysicsLastTimeLaunched) / 1000.0f; 
1," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (name: ""); result.append(name); result.append(')'); return result.toString(); "," if (eIsProxy()) return super.toString(); StringBuffer XXXXX = new StringBuffer(super.toString()); XXXXX.append("" (name: ""); XXXXX.append(name); XXXXX.append(')'); return XXXXX.toString(); "
1, Set result = new HashSet(); for(Iterator it = nodes.iterator(); it.hasNext(); ) { PANode node = (PANode) it.next(); PANode spec = node.csSpecialize(cs); if(spec == null) continue; result.add(spec); , Set XXXXX = new HashSet(); for(Iterator XXXXX = XXXXXs.XXXXXerator(); XXXXX.hasNext(); ) { PANode XXXXX = (PANode) XXXXX.next(); PANode XXXXX = XXXXX.csSpecialize(cs); if(XXXXX == null) continue; XXXXX.add(XXXXX); 
0," class Bean { private String str = """"; private Integer value = 1; private Boolean test = true; public Bean(final String s, final int v, final boolean b) { this.str = s; this.value = v; this.test = b; "," ZonedDateTime referenceDate = DateUtils.getUTCDate(2012, 3, 2); DoubleTimeSeries<ZonedDateTime> fixingTS = new ArrayZonedDateTimeDoubleTimeSeries(new ZonedDateTime[] {DateUtils.getUTCDate(2012, 3, 1)"
0," if (descriptor.seriesValueIndex != -1) { if (descriptor.includePid) { return String.format(""%1$s + pid"", mEventDescriptionMap.get( descriptor.eventTag)[descriptor.seriesValueIndex].getName()); "," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "
0, Enumeration listeners = listenerList.elements(); while (listeners.hasMoreElements()) { TreeModelListener listener = (TreeModelListener) listeners.nextElement(); listener.treeNodesInserted(e); ," StreamRedirectThread t = new StreamRedirectThread(in, out, false, true); t.run(); assertThat(out.toByteArray(), is(BYTES)); assertThat(in.closed, is(false)); assertThat(out.closed, is(true)); "
1, this.deviceOnCall = CSTAExtendedDeviceID.decode(memberStream); this.callIdentifier = CSTAConnectionID.decode(memberStream); this.localConnectionState = LocalConnectionState.decode(memberStream); , this.deviceOnCall = CSTAExtendedDeviceID.decode(memberStream); this.callIdentifier = CSTAConnectionID.decode(memberStream); this.localConnectionState = LocalConnectionState.decode(memberStream); 
1," syncActions.clear(); Intent broadcastIntent = new Intent( AstridApiConstants.BROADCAST_REQUEST_SYNC_ACTIONS); activity.sendOrderedBroadcast(broadcastIntent, AstridApiConstants.PERMISSION_READ); "," syncActions.clear(); Intent XXXXX = new Intent( AstridApiConstants.BROADCAST_REQUEST_SYNC_ACTIONS); activity.sendOrderedBroadcast(XXXXX, AstridApiConstants.PERMISSION_READ); "
0," if (exception instanceof NoSuchEntityException) { AppGinjector.get .instance() .getNotifier() .displayMessage( Message.createErrorMessage(""Your profile could not be found. Please try again."")); "," try { if (currentFieldSetIndex < fieldSets.size() - 1) { return JCRSessionFactory.getInstance().getCurrentUserSession(workspace, locale).getNodeByIdentifier(fieldSets.get(currentFieldSetIndex+1)); "
1," JavaArchive archive = SeamCronSchedulingTCKTestLong.createSchedulingTckTestArchive() .addPackages(true, QueuJScheduleProvider.class.getPackage()); log.debug(archive.toString(true)); return archive; "," JavaArchive XXXXX = SeamCronSchedulingTCKTestLong.createSchedulingTckTestArchive() .addPackages(true, QueuJScheduleProvider.class.getPackage()); log.debug(XXXXX.toString(true)); return XXXXX; "
0," this.cacheManager = cacheManager; this.mBeanServer = mBeanServer; status = Status.UNINITIALISED; try { for (Cache<?, ?> cache : this.cacheManager.getCaches()) { registerCacheStatistics(cache); ", final StringBuilder sb = new StringBuilder(); final char CR = '\r'; final char LF = '\n'; for(int i=0; i<text.length(); i++) { final char c = text.charAt(i); if(c == LF) { sb.append(eol); 
1, if (app.cdmaPhoneCallState.getCurrentCallState() == CdmaPhoneCallState.PhoneCallState.IDLE) { app.cdmaPhoneCallState.setCurrentCallState( CdmaPhoneCallState.PhoneCallState.SINGLE_ACTIVE); , if (app.cdmaPhoneCallState.getCurrentCallState() == CdmaPhoneCallState.PhoneCallState.IDLE) { app.cdmaPhoneCallState.setCurrentCallState( CdmaPhoneCallState.PhoneCallState.SINGLE_ACTIVE); 
0," String oldLevel = level; level = newLevel; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, MarkupPackage.HEADING_ELEMENT__LEVEL, oldLevel, level)); ", if (request.request().ignoreIndices() == IgnoreIndices.DEFAULT && request().ignoreIndices() != IgnoreIndices.DEFAULT) { request.request().ignoreIndices(request().ignoreIndices()); 
1, if (!super.equals(obj)) return false; if (!(obj instanceof SNodeDescriptor)) return false; SNodeDescriptor sd = (SNodeDescriptor) obj; return sd.getConceptFqName().equals(getConceptFqName()); , if (!super.equals(obj)) return false; if (!(obj instanceof SNodeDescriptor)) return false; SNodeDescriptor XXXXX = (SNodeDescriptor) obj; return XXXXX.getConceptFqName().equals(getConceptFqName()); 
0," String oldStyle = style; style = newStyle; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, XhtmlPackage.XHTML_DIV_TYPE__STYLE, oldStyle, style)); ", SupportBean bean = new SupportBean(); bean.setString(string); bean.setIntBoxed(intBoxed); bean.setLongBoxed(longBoxed); bean.setDoubleBoxed(doubleBoxed); epService.getEPRuntime().sendEvent(bean); 
0," mediaPlayer.release(); mediaPlayer = null; injectJS(""javascript:var ev = document.createEvent('Events');ev.initEvent('appMobi.audio.play.stop',true,true);document.dispatchEvent(ev);""); "," if (fCurrentPage instanceof PreviewWizardPage) { Control control= fPageContainer.getTopPage(); Point size = control.getSize(); fSettings.put(WIDTH, size.x); fSettings.put(HEIGHT, size.y); "
0, Object object = layoutMap.get( id ); Layout newActive = ( Layout ) object; if( newActive != null ) { activeLayoutId = id; activeLayout = newActive; if( save ) { saveLayoutId( activeLayoutId ); , String messageFormatterProperty = null; Object property = msgContext .getProperty(Constants.Configuration.MESSAGE_TYPE); if (property != null) { messageFormatterProperty = (String) property; 
0," long cId, nId; cId = nId = -1; if (food != null) nId = food.getId(); if (mFood != null) cId = mFood.getId(); if (nId == cId) return; mModified = true; mStatusCacheValid = false; mFood = food; ", ServiceProviderAuthenticator valve = new ServiceProviderAuthenticator(); valve.setConfigProvider(this.configProvider); valve.setAuditHelper(this.auditHelper); webContext.addValve(valve); 
0," PolicyReader reader = null; try { if (validate) reader = new PolicyReader(finder, logger, new File(GeoXACML.getPolicyXMLSchemaURL() .toURI())); else reader = new PolicyReader(finder, logger); "," showlike.setVisibility(ImageButton.INVISIBLE); hidelike.setVisibility(ImageButton.VISIBLE); wv.setVisibility(WebView.VISIBLE); wv.getSettings().setJavaScriptEnabled(true); wv.loadUrl(""file: "
0," final Faction forFaction = this.argAsFaction(0, myFaction); int radius = this.argAsInt(1, 1); if (radius < 1) { msg(""<b>If you specify a radius, it must be at least 1.""); return; "," String ga; int pn; int vy; StringTokenizer st = new StringTokenizer(s, sep2); try { ga = st.nextToken(); pn = Integer.parseInt(st.nextToken()); vy = Integer.parseInt(st.nextToken()); "
1, if (mapTransformationButton.getSelection()) { showPropertyWidgets(false); showExpressionWidgets(false); showAdvancedMappingWidgets(false); showTransformationWidgets(true); redrawParent(); , if (mapTransformationButton.getSelection()) { showPropertyWidgets(false); showExpressionWidgets(false); showAdvancedMappingWidgets(false); showTransformationWidgets(true); redrawParent(); 
1," Dimension d = getSize( ); if ( bi == null || bi.getWidth( ) != d.width || bi.getHeight( ) != d.height ) { bi = new BufferedImage( d.width, d.height, BufferedImage.TYPE_INT_ARGB ); "," Dimension XXXXX = getSize( ); if ( bi == null || bi.getWiXXXXXth( ) != XXXXX.wiXXXXXth || bi.getHeight( ) != XXXXX.height ) { bi = new BuffereXXXXXImage( XXXXX.wiXXXXXth, XXXXX.height, BuffereXXXXXImage.TYPE_INT_ARGB ); "
0," this( 0, Collections.<Object, String> emptyMap(), Collections.<Object, String> emptyMap(), Collections.<Object, String> emptyMap(), Collections.<Object, Collection<Exclusion>> emptyMap() ); "," Logging.log(Logging.ERROR, ""CharacterFacadeImpl @ setHanded to ""+((Handed) handedness).name()); this.handedness.setReference(handedness); theCharacter.setHanded((Handed) handedness); "
0," int lastIndexLink = -1; for(int i=0; i<DATABASES.size(); i++) { int index = lastIndexOfIgnoreCase(s, (String)DATABASES.get(i)+"":""); if(index > lastIndexLink) lastIndexLink = index; "," PPTPage pptPage = (PPTPage)pageGraphic; pptPage.setLink( PPTUtil.getHyperlink( imageArea, services, reportRunnable, context ) ); super.visitImage( imageArea ); pptPage.setLink( null ); "
1," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (group: ""); result.append(group); result.append(')'); return result.toString(); "," if (eIsProxy()) return super.toString(); StringBuffer XXXXX = new StringBuffer(super.toString()); XXXXX.append("" (group: ""); XXXXX.append(group); XXXXX.append(')'); return XXXXX.toString(); "
0," String name = var.getLocalPart(); if (""databaseId"".equals(name)) return databaseId; if (""channel"".equals(name)) return channel; if (""program"".equals(name)) return program; return null; "," String val = """"; for (Variable v : view.varMap.values()) { val += v.id + "" "" + v.value + ""/"" + (bestSolution != null ? bestSolution.get(v.id) : ""NA"") + (v.fixed ? ""F"" : """") + ""\n""; "
1, AdapterFactoryLabelProvider labelProvider = new AdapterFactoryLabelProvider(adapterFactory); if (object instanceof EObject) { switch (columnIndex) { case 0: return labelProvider.getText(object); , AdapterFactoryLabelProvider XXXXX = new AdapterFactoryLabelProvider(adapterFactory); if (object instanceof EObject) { switch (columnIndex) { case 0: return XXXXX.getText(object); 
1," this.myDeclaration = param; this.myOrder = i; this.setTypeName(SLinkOperations.getTarget(param, ""type"", true).getPresentation()); this.setName(SPropertyOperations.getString(param, ""name"")); "," this.myDeclaration = param; this.myOrder = i; this.setTypeName(SLinkOperations.getTarget(param, ""type"", true).getPresentation()); this.setName(SPropertyOperations.getString(param, ""name"")); "
1," assertNull( content.getTOC( ) ); Object toc = new Object( ); content.setTOC( toc ); assertEquals( toc, content.getTOC( ) ); content.setTOC( null ); assertNull( content.getTOC( ) ); "," assertNull( content.getTOC( ) ); Object XXXXX = new Object( ); content.setTOC( XXXXX ); assertEquals( XXXXX, content.getTOC( ) ); content.setTOC( null ); assertNull( content.getTOC( ) ); "
0," ComputeServiceContext context = ContextBuilder.newBuilder(""servermanager"").build(ComputeServiceContext.class); assertEquals(context.unwrap().getClass(), ContextImpl.class); context.close(); ", if (type == null || !type.getWidget().getSelection()) { mInternalTypeUpdate = true; mCurrentTypeInfo = type; for (TypeInfo type2 : sTypes) { type2.getWidget().setSelection(type2 == type); 
0," Object handler = windowManagerBlock(application).get(""defaultHandler""); return handler instanceof WindowDisplayHandler ? (WindowDisplayHandler)handler : DEFAULT_WINDOW_DISPLAY_HANDLER; ", IWorkspaceDescription description= ResourcesPlugin.getWorkspace().getDescription(); boolean wasOff= !description.isAutoBuilding(); if (wasOff) description.setAutoBuilding(true); return wasOff; 
1, final PacketBuilder builder = new PacketBuilder(); builder.writeAsShort(ServerPacketOpcode.EARN_TITLE_MSG.getValue()); builder.writeLengthPrefixedString(msg); return builder.getPacket(); , final PacketBuilder XXXXX = new PacketBuilder(); XXXXX.writeAsShort(ServerPacketOpcode.EARN_TITLE_MSG.getValue()); XXXXX.writeLengthPrefixedString(msg); return XXXXX.getPacket(); 
1, return aClass.equals(GroovyDebuggerTest.class) || aClass.getName().startsWith(GroovyCompilerTest.class.getName()) || aClass.getName().startsWith(GppCompilerTest.class.getName()); , return aClass.equals(GroovyDebuggerTest.class) || aClass.getName().startsWith(GroovyCompilerTest.class.getName()) || aClass.getName().startsWith(GppCompilerTest.class.getName()); 
1, Set<Cell> daughters=byParent.get(cell); if(daughters!=null){ Iterator<Cell> iter=daughters.iterator(); while(iter.hasNext()){ Cell daughter = iter.next(); byChild.get(daughter).remove(cell); , Set<Cell> daughters=byParent.get(cell); if(daughters!=null){ Iterator<Cell> iter=daughters.iterator(); while(iter.hasNext()){ Cell daughter = iter.next(); byChild.get(daughter).remove(cell); 
1," Display.getDefault().asyncExec(new Runnable() { public void run() { IWorkbench workbench = PlatformUI.getWorkbench(); try { workbench.showPerspective(id, workbench.getActiveWorkbenchWindow()); "," Display.getDefault().asyncExec(new Runnable() { public void run() { IWorkbench XXXXX = PlatformUI.getWorkbench(); try { XXXXX.showPerspective(id, XXXXX.getActiveWorkbenchWindow()); "
1," TestDescriptor descriptor = Descriptors.importAs(TestDescriptor.class).fromString("" \n \n ""); Assert.assertNotNull(""Verify the descriptor was created from an empty string"", descriptor); "," TestDescriptor XXXXX = Descriptors.importAs(TestDescriptor.class).fromString("" \n \n ""); Assert.assertNotNull(""Verify the XXXXX was created from an empty string"", XXXXX); "
1, ModuleDeclaration moduleDeclaration = SourceParserUtil.getModuleDeclaration(module); if (moduleDeclaration instanceof LuaSourceRoot) return (LuaSourceRoot) moduleDeclaration; return null; , ModuleDeclaration moduleDeclaration = SourceParserUtil.getModuleDeclaration(module); if (moduleDeclaration instanceof LuaSourceRoot) return (LuaSourceRoot) moduleDeclaration; return null; 
0," BasicPhrase that = new BasicPhrase(); that.language = this.language; that.words = new int[end - start + 1]; System.arraycopy(this.words, start, that.words, 0, end - start + 1); return that; ", StringBuilder cp = new StringBuilder(); List<File> cpFiles = Gosu.deriveClasspathFrom(VEdit.class); for (File cpFile : cpFiles) { if (cp.length() > 0) { cp.append(File.pathSeparatorChar); 
0, if( x-radiusWidth < 0 ) return false; if( x+radiusWidth >= b.width ) return false; if( y-radiusHeight < 0 ) return false; if( y+radiusHeight >= b.height ) return false; return true; ," return Objects .toStringHelper(this) .add(""candidateAssignment"", candidateAssignment) .add(""failedCondition"", failedCondition) .add(""conflictingAssignments"", conflictingAssignments) .toString(); "
1, validatePrincipalId(principalId); validateDocumentType(documentType); final Boolean result; if (documentType.isSuperUserGroupDefined()) { result = documentType.isSuperUser(principalId); , validatePrincipalId(principalId); validateDocumentType(documentType); final Boolean result; if (documentType.isSuperUserGroupDefined()) { result = documentType.isSuperUser(principalId); 
0," Player player = game.getPlayer(this.getOwnerId()); int creatureCount = player.getGraveyard().count(new FilterCreatureCard(), game); int cost = 7 - creatureCount; String adjustedCost = ""{G"," ThreadPoolExecutor p1 = new CustomTPE(1, 1, LONG_DELAY_MS, TimeUnit.MILLISECONDS, new ArrayBlockingQueue<Runnable>(10)); assertFalse(p1.isTerminated()); try { p1.execute(new MediumRunnable()); "
1," Adapter adapter = getAdapter(fromClass, toClass, element, fxFormNode, USER_MAP); if (adapter == null) { adapter = getAdapter(fromClass, toClass, element, fxFormNode, GLOBAL_MAP); "," Adapter XXXXX = getAdapter(fromClass, toClass, element, fxFormNode, USER_MAP); if (XXXXX == null) { XXXXX = getAdapter(fromClass, toClass, element, fxFormNode, GLOBAL_MAP); "
1," SettingsMap settingsMap = project.getSettingsMap(); if (uri.startsWith(OWLProfiles.NS)) { settingsMap.setString(PREDEFINED_PROFILE_URI_KEY, uri); settingsMap.remove(CUSTOM_PROFILE_KEY); "," SettingsMap XXXXX = project.getSettingsMap(); if (uri.startsWith(OWLProfiles.NS)) { XXXXX.setString(PREDEFINED_PROFILE_URI_KEY, uri); XXXXX.remove(CUSTOM_PROFILE_KEY); "
0, TestSuite suite = new TestSuite(); suite.addTestSuite(WidgetConfigTest.class); suite.addTestSuite(WidgetConfigUtilTest.class); suite.addTestSuite(WidgetLdrTest.class); return suite; ," List<String> storyPaths = new OsgiStoryFinder().findPaths( ""/org/jbehave/examples/trader/stories"", ""*.story"", ""examples_table_loaded*""); injectedEmbedder().runStoriesAsPaths(storyPaths); "
1," for (Run<?,?> run: owner.getBuilds()) { DescriptionSetterAction action = run.getAction(DescriptionSetterAction.class); if (action != null && token.equals(action.getDescription())) { return run; "," for (Run<?,?> run: owner.getBuilds()) { DescriptionSetterAction XXXXX = run.getAction(DescriptionSetterAction.class); if (XXXXX != null && token.equals(XXXXX.getDescription())) { return run; "
0," String out = """"; if (columnIndex < data.size()) { FileWithStatus fileWithStatus = data.get(rowIndex); out = columnIndex == 0 ? fileWithStatus.getFile().getVirtualPath() : fileWithStatus.getStatus(); "," URI resourceURI = EditUIUtil.getURI(getEditorInput()); Exception exception = null; Resource resource = null; try { resource = editingDomain.getResourceSet().getResource(resourceURI, true); "
0, super.parse(); BufferedReader buffer = null; if(mFile == null) { InputStream fileIn = mResources.openRawResource(mResourceId); buffer = new BufferedReader(new InputStreamReader(fileIn)); ," r.getStatus().addMessage(""info"", this.getClass().getSimpleName()+"" will generate a RDP connection file and launch Remote Desktop application for the specified instance.""); return null; "
1," try { while(is.isRunning) { canvas.draw(mx,my); if(waitTime>0) waitTime--; if(mx != oldmx || my != oldmy || mb != oldmb) { mouseChange = true; oldmx = mx; oldmy = my; oldmb = mb; "," try { while(is.isRunning) { canvas.draw(mx,my); if(waitTime>0) waitTime--; if(mx != oldmx || my != oldmy || mb != oldmb) { mouseChange = true; oldmx = mx; oldmy = my; oldmb = mb; "
1," assertEquals((advanced ? ""basic"" : ""detailed"") + "" search"", e.getAttribute(""title"")); try { findInput(ADVANCED_SEARCH_ONLY_FIELD); if (!advanced) fail(""Advanced search field found in basic search""); "," assertEquals((advanced ? ""basic"" : ""detailed"") + "" search"", e.getAttribute(""title"")); try { findInput(ADVANCED_SEARCH_ONLY_FIELD); if (!advanced) fail(""Advanced search field found in basic search""); "
0," PluginId[] deps = new PluginId[getDependentPluginIds().length + 1]; deps[0] = d.getPluginId(); System.arraycopy(myDependencies, 0, deps, 1, deps.length - 1); myDependencies = deps; ", if (iRepeatType == 0) { llayAppointmentRepeatEvery.setVisibility(View.GONE); llayAppointmentRepeatEndOnDate.setVisibility(View.GONE); llayAppointmentRepeatEndOnDateLabel.setVisibility(View.GONE); 
1," Menu menu = new Menu( shell, SWT.BAR ); MenuItem item = new MenuItem( menu, SWT.CASCADE ); assertSame( display, item.getDisplay() ); assertSame( menu.getDisplay(), item.getDisplay() ); "," Menu XXXXX = new Menu( shell, SWT.BAR ); MenuItem XXXXX = new MenuItem( XXXXX, SWT.CASCADE ); assertSame( display, XXXXX.getDisplay() ); assertSame( XXXXX.getDisplay(), XXXXX.getDisplay() ); "
0," StringBuilder sb = new StringBuilder(); sb.append(""tid : "").append(tid) .append(""\n"") .append(""detected_tid: "").append(detected_tid) .append(""\n"") .trimToSize(); return sb.toString(); "," StringBuilder sb = new StringBuilder(512); sb.append(""PropertyStringValueEntity"") .append(""[ ID="").append(id) .append("", stringValue="").append(stringValue) .append(""]""); return sb.toString(); "
0," int trackId = -1; Cursor track = null; try { ContentResolver resolver = this.getContentResolver(); track = resolver.query( Tracks.CONTENT_URI, new String[] { ""max("" + Tracks._ID + "")"", Tracks.NAME, ", if(part != null && part == localPart && getHandlerList().containsKey(part)) { getHandlerList().remove(part); localPart.getSite().getPage().removePartListener(this); localPart = null; 
1," if (value==null) { combo.clearSelection(); if (combo.getSelectionIndex() != -1) { throw new IllegalArgumentException(""Attempted to clearSelection of Read Only ComboWrapper "" + getFieldName()); "," if (value==null) { combo.clearSelection(); if (combo.getSelectionIndex() != -1) { throw new IllegalArgumentException(""Attempted to clearSelection of Read Only ComboWrapper "" + getFieldName()); "
0," StellaMaxElementsValidator validator = new StellaMaxElementsValidator(); validator.initialize(new Mirror().on(AnnotatedModel.class).reflect().annotation(MaxElements.class) .atField(""c2"")); ", TestSuite testSuite = new TestSuite(); testSuite.addTestSuite(AddPageTest.class); testSuite.addTestSuite(AddPortletTest.class); testSuite.addTestSuite(DeletePageTest.class); return testSuite; 
1, Reference<RolapSchema> ref = mapKeyToSchema.get(key); if (ref != null) { RolapSchema schema = ref.get(); if (schema != null) { mapMd5ToSchema.remove(schema.getChecksum()); schema.finalCleanUp(); , Reference<RolapSchema> ref = mapKeyToSchema.get(key); if (ref != null) { RolapSchema XXXXX = ref.get(); if (XXXXX != null) { mapMd5ToSchema.remove(XXXXX.getChecksum()); XXXXX.finalCleanUp(); 
1, JFileChooser fc = getFileChooser(); File f = fc.getSelectedFile(); if (!e.getValueIsAdjusting() && f != null && !getFileChooser().isTraversable(f)) { setFileName(fileNameString(f)); , JFileChooser XXXXX = getFileChooser(); File XXXXX = XXXXX.getSelectedFile(); iXXXXX (!e.getValueIsAdjusting() && XXXXX != null && !getFileChooser().isTraversable(XXXXX)) { setFileName(XXXXXileNameString(XXXXX)); 
0," try { Node node = parentFolder.getNode().addNode(name, NodeType.NT_FOLDER); addMixins(node); updateProperties(node, properties); node.getSession().save(); return getJcrNode(node); "," List<MapWaySegment> powerLines = new ArrayList<MapWaySegment>(); for (MapWaySegment way : node.getConnectedWaySegments()) { if (way.getTags().contains(""power"", ""line"")) { powerLines.add(way); "
1," removeHiddenAspect(nodeRef); removeIndexControlAspect(nodeRef); if(cascade) { for(ChildAssociationRef childRef : nodeService.getChildAssocs(nodeRef)) { showNode(childRef.getChildRef(), cascade); "," removeHiddenAspect(nodeRef); removeIndexControlAspect(nodeRef); if(cascade) { for(ChildAssociationRef childRef : nodeService.getChildAssocs(nodeRef)) { showNode(childRef.getChildRef(), cascade); "
0, final String normalizedSign = pSign.toUpperCase().trim(); IVRPElement out; try{ switch(pTableID){ case VRP_DE.ID: out = VRP_DE.valueOf(normalizedSign); break; default: return null; ," Object bean = null; bean = ComponentManager.get(beanName); if (bean == null) { throw new IllegalStateException(""FAILURE to inject dependency during initialization of the FCKConnectorServlet""); "
1, MenuItem item = mock(MenuItem.class); when(item.getItemId()).thenReturn(R.id.menu_refresh); activity.onOptionsItemSelected(item); assertThat(activity.menuRefreshSelected).isTrue(); , MenuItem XXXXX = mock(MenuItem.class); when(XXXXX.getItemId()).thenReturn(R.id.menu_refresh); activity.onOptionsItemSelected(XXXXX); assertThat(activity.menuRefreshSelected).isTrue(); 
0, String ret = null; PictogramElement pe = context.getPictogramElement(); Object bo = getBusinessObjectForPictogramElement(pe); if (bo instanceof EClass) { EClass ge = (EClass) bo; ret = ge.getName(); ," AffineTransform tx, glyphTx; GeneralPath path; validate(); if ((transforms != null) && ((glyphTx = transforms[glyphIndex]) != null)) { tx = new AffineTransform(transform); tx.concatenate(glyphTx); "
0," OptionSet options = parser.parse( ""-c"", ""foo"" ); assertOptionDetected( options, ""c"" ); assertNull( options.valueOf( ""c"" ) ); assertEquals( singletonList( ""foo"" ), options.nonOptionArguments() ); ", putOutTheGarbage(); long totalMemory = Runtime.getRuntime().totalMemory(); putOutTheGarbage(); long freeMemory = Runtime.getRuntime().freeMemory(); return (totalMemory - freeMemory); 
0," LogFile laterLogFile = new LogFile(""log20001212050505Lbuild.2.xml""); BuildDetail laterBuild = new BuildDetail(laterLogFile); assertEquals(PreviousResult.PASSED, laterBuild.getPreviousBuildResult()); "," UIComponent component = findComponent(componentID); if (!(component instanceof ValueHolder)) { throw new ClassCastException(componentID + "" must be an instance of ValueHolder.""); "
0," String oldPackage = package_; package_ = newPackage; if(eNotificationRequired()) eNotify(new ENotificationImpl( this, Notification.SET, JunitresultPackage.TESTSUITE__PACKAGE, oldPackage, package_)); "," getConfig().addDefault(""MySQL.USER"", ""user""); getConfig().addDefault(""MySQL.PASSWORD"", ""pw""); getConfig().addDefault(""MySQL.URL"", ""jdbc:mysql: getConfig().options().copyDefaults(true); saveConfig(); "
0, ManipManager.getManipManager().removeMouseListeners(window); window.addMouseMotionListener(mouseMotionListener); window.addMouseListener(mouseListener); window.addGLEventListener(glListener); , Element root = document.getDocumentElement(); CalculatedStyle style = c.getSharedContext().getStyle(root); BlockBox result; if (style.isTable() || style.isInlineTable()) { result = new TableBox(); 
0," int oldValue = getInt(name); if (oldValue != newValue) { properties.put(name, new Integer(newValue) ); setDirty(true); firePropertyChangeEvent(name, new Integer(oldValue), new Integer(newValue)); "," String texture = yaml.getString(""Texture"", """"); String[] fileNameParts = texture.split(""/""); if (fileNameParts.length == 2) { texture = fileNameParts[0] + ""_"" + fileNameParts[1]; "
0, Reference oldOppositeOf = getOppositeOf(); super.setOppositeOf(newOppositeOf); if (oldOppositeOf != null && !oldOppositeOf.equals(newOppositeOf)) { oldOppositeOf.setOppositeOf(null); ," String label = ((AsdocConstructor)object).getName(); return label == null || label.length() == 0 ? getString(""_UI_AsdocConstructor_type"") : getString(""_UI_AsdocConstructor_type"") + "" "" + label; "
1," switch (eContainerFeatureID()) { case ClassesPackage.TYPE_ADAPTER__ADAPTED: return eInternalContainer().eInverseRemove(this, ClassesPackage.SAP_CLASS__ADAPTERS, SapClass.class, msgs); "," switch (eContainerFeatureID()) { case ClassesPackage.TYPE_ADAPTER__ADAPTED: return eInternalContainer().eInverseRemove(this, ClassesPackage.SAP_CLASS__ADAPTERS, SapClass.class, msgs); "
0," simpleNameHelper(""String"", ""foo"".getClass()); simpleNameHelper(""int[]"", (new int[0]).getClass()); simpleNameHelper(""Object[][]"", (new Object[0][0]).getClass()); simpleNameHelper(""null"", null); ", super.initialize(); double beta; no_cut = false; beta = 0.5 * (MapMath.HALFPI - 0); if (Math.abs(beta) < EPS) Cb = -0.5; else { Cb = 1./Math.tan(beta); Cb *= Cb * Math.log(Math.cos(beta)); 
0," ResourcesPlugin.getWorkspace().addResourceChangeListener(this, IResourceChangeEvent.POST_CHANGE); IWorkbenchPage page = editor.getSite().getPage(); page.addPartListener(partActivationListener); "," String src = ""def i9(quoted)\n"" + ""end""; List<CategorizedProblem> problems = getProblems(src); assertEquals(1, problems.size()); assertEquals(IProblem.UncommunicativeName, problems.get(0).getID()); "
1, DefaultMutableTreeNode node = (DefaultMutableTreeNode)value; DBTreeNode nodeObject = (DBTreeNode)(node.getUserObject()); if (nodeObject.getType() == Type.FIELD) return true; return false; , DefaultMutableTreeNode XXXXX = (DefaultMutableTreeNode)value; DBTreeNode XXXXXObject = (DBTreeNode)(XXXXX.getUserObject()); if (XXXXXObject.getType() == Type.FIELD) return true; return false; 
1, int serverState = getServer().getServerState(); if( serverState == IServer.STATE_STOPPED ) return; synchronized( this ) { stopListening(); setServerState( IServer.STATE_STOPPING ); , int XXXXX = getServer().getServerState(); if( XXXXX == IServer.STATE_STOPPED ) return; synchronized( this ) { stopListening(); setServerState( IServer.STATE_STOPPING ); 
1, this.func = func; this.shell = shell; this.ieditor = Workbench.getInstance().getActiveWorkbenchWindow().getActivePage().getActiveEditor(); this.selectedattributes = attributes; this.replace = true; , this.func = func; this.shell = shell; this.ieditor = Workbench.getInstance().getActiveWorkbenchWindow().getActivePage().getActiveEditor(); this.selectedattributes = attributes; this.replace = true; 
0," final CLIParam logFile = cli.getParam(""-logfile""); if (!logFile.getStringValue().isEmpty()) { final File file = new File(logFile.getStringValue()); if (!file.exists()) { try { file.createNewFile(); "," this (order.getCtx(), 0, order.get_TrxName()); if (order.get_ID() == 0) throw new IllegalArgumentException(""Header not saved""); setC_Order_ID (order.getC_Order_ID()); setOrder(order); "
0, List<Login> loginList = loginManager.getLoginByUser(userId); for ( Login lg : loginList) { if (lg.getId().getManagedSysId().equalsIgnoreCase(sysConfiguration.getDefaultManagedSysId())) { return lg; ," deleteMergedNodesCheckBox = new JCheckBox(getMessage(""MergeNodesUI.deleteMergedNodesText""), manipulator.isDeleteMergedNodes()); settingsPanel.add(deleteMergedNodesCheckBox, ""wrap 25px""); "
1, EventDataPort newOwnedEventDataPort = (EventDataPort) create(Aadl2Package.eINSTANCE.getEventDataPort()); getOwnedEventDataPorts().add(newOwnedEventDataPort); return newOwnedEventDataPort; , EventDataPort XXXXX = (EventDataPort) create(Aadl2Package.eINSTANCE.getEventDataPort()); getOwnedEventDataPorts().add(XXXXX); return XXXXX; 
1, List<Entity> followingPets=getFollowingPets(player.getName()); for(Entity entityPet : followingPets) { if(entityPet.getWorld() == player.getWorld()) { entityPet.teleport(player); , List<Entity> followingPets=getFollowingPets(player.getName()); for(Entity entityPet : followingPets) { if(entityPet.getWorld() == player.getWorld()) { entityPet.teleport(player); 
0," int open = s.indexOf(""${"") ; if (open == -1) return s ; int close = 0 ; StringBuffer buf = new StringBuffer() ; while (open != -1) { buf.append(s.substring(close, open)) ; close = s.indexOf('"," if(isVirtual) owner.sendMessage(prefix + ""Drill deactivated! ["" + -id +""]"" ); else if( linked ) parent.disable(); else owner.sendMessage(prefix + ""Drill deactivated! ["" + id +""]"" ); enabled = false; "
1," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," EditorCell XXXXX = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, XXXXX, editorContext); return XXXXX; "
1," SequenceBarrier barrier = ringBuffer.newBarrier(); try { long a = barrier.waitFor(waitAtSequence, timeoutforeturnResult, TimeUnit.MILLISECONDS); if (ringBuffer != null) return ringBuffer.get(a); "," SequenceBXXXXXrrier XXXXX = ringBuffer.newBXXXXXrrier(); try { long XXXXX = XXXXX.wXXXXXitFor(wXXXXXitAtSequence, timeoutforeturnResult, TimeUnit.MILLISECONDS); if (ringBuffer != null) return ringBuffer.get(XXXXX); "
1," if (defaultProject && !config.isLoadForDefaultProject()) return; if (!myComponentManager.isComponentSuitable(config.options)) return; myComponentManager.registerComponent(config, descriptor); "," if (defaultProject && !config.isLoadForDefaultProject()) return; if (!myComponentManager.isComponentSuitable(config.options)) return; myComponentManager.registerComponent(config, descriptor); "
0," return ApplicationManager.getApplication().runReadAction(new Computable<AntBuildTargetBase>() { @Nullable public AntBuildTargetBase compute() { return findTargetImpl(name, AntBuildModelImpl.this); "," String dialectStr = null; if(M_scs.getString(""sitestats.db"", ""internal"").equals(""internal"")) { dialectStr = M_scs.getString(""hibernate.dialect"", ""org.hibernate.dialect.HSQLDialect""); "
1, mFeedUri = obj.getContainingFeed().getUri(); mType = obj.getType(); mObj = obj; mJson = obj.getJson(); mRaw = obj.getRaw(); mHash = obj.getHash(); mContactId = obj.getSender().getLocalId(); , mFeedUri = obj.getContainingFeed().getUri(); mType = obj.getType(); mObj = obj; mJson = obj.getJson(); mRaw = obj.getRaw(); mHash = obj.getHash(); mContactId = obj.getSender().getLocalId(); 
1," if ( sqlAssignmentString == null ) { try { SqlGenerator sqlGenerator = new SqlGenerator( factory ); sqlGenerator.comparisonExpr( eq, false ); sqlAssignmentString = sqlGenerator.getSQL(); "," if ( sqlAssignmentString == null ) { try { SqlGenerator sqlGenerator = new SqlGenerator( factory ); sqlGenerator.comparisonExpr( eq, false ); sqlAssignmentString = sqlGenerator.getSQL(); "
0," ProjectDescription projectdescription = createEmptyProject(this._sourcepathxml, KIND_MULTIPLESOURCEFOLDERSPRIMARY); execute(projectdescription.getPrimaryProjectname(), ""get-source-path-relative""); "," int index = Integer.parseInt(e.getActionCommand()); switch (index) { case DELETE: firePropertyChange(AnnotationUI.DELETE_ANNOTATION_PROPERTY, null, this); break; case EDIT: editComment(); "
0," super( ""Could not transfer artifact "" + artifact + getString( "" from/to "", repository ) + getMessage( "": "", cause ), cause ); this.artifact = artifact; this.repository = repository; "," LogLevel logLevel = LogLevel.fromString(level.atomValue()); for (int i = 0; i < output.arity(); ++i) { MavenUtils.logMultiLineString(log, logLevel, ErlUtils.toString(output.elementAt(i), false)); "
0," resolveDelegationSpecifierList(jetClass, descriptor, descriptor.getUnsubstitutedPrimaryConstructor(), descriptor.getScopeForSupertypeResolution(), descriptor.getScopeForMemberResolution()); ", boolean isTrxnDateAfterMonthClosingDay = true; if (getConfigurationPersistence().isMonthClosingDaySet()){ isTrxnDateAfterMonthClosingDay = isTrxnDateAfterMonthClosingDate(trxnDate); 
0, StringBuilder sb = new StringBuilder(); sb.append(ability.getDisplayName()); if (selection != null && selection.length() > 0) { sb.append('('); sb.append(selection); sb.append(')'); ," String label = ((LabeledContainer)object).getName(); return label == null || label.length() == 0 ? getString(""_UI_LabeledContainer_type"") : getString(""_UI_LabeledContainer_type"") + "" "" + label; "
0, ScopeBlock parentBlock = null; if ((sb.startLocation < start) && (sb.finishLocation >= start)) { if ((sb.finishLocation <= target) || (sb.isGoto() && !sb.isLoop())) { parentBlock = sb; ," return new WebArchiveBuilder().withTestClass(ProducerWithPrimitiveFieldTypePassivationTest.class) .withClasses(AnswerFieldProducer.class, AnswerToTheUltimateQuestion.class, Universe.class).build(); "
1, _pivotTablePane.setHeaderSelectionMode(e.getStateChange() == ItemEvent.SELECTED ? PivotConstants.HEADER_SELECTION_HEADER_TABLE_ONLY : PivotConstants.HEADER_SELECTION_DATA_TABLE_ONLY); , _pivotTablePane.setHeaderSelectionMode(e.getStateChange() == ItemEvent.SELECTED ? PivotConstants.HEADER_SELECTION_HEADER_TABLE_ONLY : PivotConstants.HEADER_SELECTION_DATA_TABLE_ONLY); 
0," String src = ""def C\n"" + ""end""; List<CategorizedProblem> problems = getProblems(src); assertEquals(1, problems.size()); assertEquals(IProblem.UncommunicativeName, problems.get(0).getID()); "," TransactionCacheItem cacheItem = (TransactionCacheItem) _theCache.get(theUid); if (cacheItem == null) { cacheItem = new TransactionCacheItem(theUid, theType); _theCache.put(theUid, cacheItem); "
0," Element element = this.responseDocument.createElementNS(DAV_NAMESPACE_URI, ""D:propstat""); element.appendChild(prop); element.appendChild(createStatusElement(stat)); return element; "," final ToolbarProperty copy = new ToolbarProperty(index, placeholder); final DockableProperty successor = getSuccessor(); if (successor != null){ copy.setSuccessor(successor.copy()); "
0," HiddenFileInfo filter = findMatch(nodeRef); if(filter != null) { int visibilityMask = filter.getVisibilityMask(); if(!hasHiddenAspect(nodeRef)) { addHiddenAspect(nodeRef, visibilityMask); "," ensureFilters(); String field = expr.getLeftExpression().toString(); Object val = coerce(expr.getRightExpression()); val = stripDoubleQuotes(val); f.add(new FieldFilter(op, field, val)); "
0," final XMLPacket stanza = XMLBuilder.fromXML(received); final String name = stanza.getTagName(); if (name.equals(""message"")) { eventBus.fireEvent(new MessageReceivedEvent(new Message(stanza))); "," StringWriter sw = new StringWriter(); PrintWriter pw = new PrintWriter(sw); Throwable l = e.getCause(); e.printStackTrace(pw); if (l != null) { pw.println(""\n Caused by \n""); l.printStackTrace(pw); "
1, Project project = e.getData(PlatformDataKeys.PROJECT); e.getPresentation().setEnabled(project != null && !CommittedChangesCache.getInstance(project).isRefreshingIncomingChanges()); , Project project = e.getData(PlatformDataKeys.PROJECT); e.getPresentation().setEnabled(project != null && !CommittedChangesCache.getInstance(project).isRefreshingIncomingChanges()); 
1," rotatePyramid+=Gdx.graphics.getDeltaTime()*100; rotateCube+=Gdx.graphics.getDeltaTime()*100; if (Gdx.input.isKeyPressed(Keys.KEYCODE_DPAD_RIGHT)) { myCam.rotate(0.5f, 0, 0.1f, 0); "," rotatePyramid+=Gdx.graphics.getDeltaTime()*100; rotateCube+=Gdx.graphics.getDeltaTime()*100; if (Gdx.input.isKeyPressed(Keys.KEYCODE_DPAD_RIGHT)) { myCam.rotate(0.5f, 0, 0.1f, 0); "
1," targetProduct = new Product(""OutputOp"", ""OutputOp"", RASTER_WIDTH, RASTER_HEIGHT); targetProduct.addBand(new Band(""OutputOp"", ProductData.TYPE_INT8, RASTER_WIDTH, RASTER_HEIGHT)); "," targetProduct = new Product(""OutputOp"", ""OutputOp"", RASTER_WIDTH, RASTER_HEIGHT); targetProduct.addBand(new Band(""OutputOp"", ProductData.TYPE_INT8, RASTER_WIDTH, RASTER_HEIGHT)); "
0, if(ve instanceof InsufficientOperationalNodesException || ve instanceof InsufficientZoneResponsesException || ve instanceof InvalidMetadataException) return true; else return false; , final Set<ScopePathListener> listeners = scopePathListeners.get(scopePath); if (listeners != null) { for (final ScopePathListener listener : listeners) { listener.configSaved(scopePath); 
1," if (doSet) { PsiElement modifier = GroovyPsiElementFactory.getInstance(getProject()).createModifierFromText(name); PsiElement anchor = findAnchor(name); addAfter(modifier, anchor); "," if (doSet) { PsiElement XXXXX = GroovyPsiElementFactory.getInstance(getProject()).createModifierFromText(name); PsiElement XXXXX = findAnchor(name); addAfter(XXXXX, XXXXX); "
0, if (obj instanceof SlowTestMarkerInfo) { SlowTestMarkerInfo other = (SlowTestMarkerInfo) obj; return testName.equals(other.testName) && methodStats.methodName.equals(other.methodStats.methodName); ," assertThat( Functions.<Object, String, Integer>compose() .map( length, stringifier ) .map( 12345L ), equalTo( 5 ) ); assertThat( compose( length, stringifier ).map( 12345L ), equalTo( 5 ) ); "
0," String oldStroke = stroke; stroke = newStroke; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_SVG_ELEMENT__STROKE, oldStroke, stroke)); "," mService = service; mServiceInterface = IAccessibilityServiceClient.Stub.asInterface(service); try { mServiceInterface.setConnection(this, mId); synchronized (mLock) { tryAddServiceLocked(this); "
0," String ejbQl = sunConversion.convertToEjbQl(""item"", Arrays.asList(""NAME""), ""java.lang.String name"", ""NAME == name""); assertEquals(""SELECT OBJECT(o) FROM item AS o WHERE o.NAME = ?1"", ejbQl); "," if (featOkTst && casFeat_attributes == null) jcas.throwFeatMissing(""attributes"", ""org.u_compare.shared.document.DocumentClassAnnotation""); return ll_cas.ll_getRefValue(addr, casFeatCode_attributes); "
0," assertNull( content.getY( ) ); DimensionType y1 = new DimensionType( 1, ""in"" ); content.setY( y1 ); assertEquals( y1, content.getY( ) ); content.setY( null ); assertNull( content.getY( ) ); "," super.initViewState(viewState); viewState.put(ViewState.PROP_GLOBE, new Boolean(getUseGlobeDisplay())); if ( !getUseGlobeDisplay()) { viewState.put(ViewState.PROP_PROJECTION, getMainProjection()); "
0," rsvc.debug(""WebappLoader : initialization starting.""); paths = configuration.getStringArray(""path""); if (paths == null || paths.length == 0) { paths = new String[1]; paths[0] = ""/""; ", GL gl = g.gl; VertexBuf.VertexArray vbuf = null; for (int i = 0; i < vert.bufs.length; i++) { if (vert.bufs[i] instanceof VertexBuf.VertexArray) vbuf = (VertexBuf.VertexArray) vert.bufs[i]; 
0," String name = elem.getAttributeValue(""name""); String value = replaceParam(elem.getAttributeValue(""value"")); logger.info(""typeCmd: id="" + name + "" value="" + value); this.sel.type(name, value); "," String activity = ""this is not an activity""; int newlevel = (int) (Math.floor((Math.random()*2.99999999999))); if(level.equals(""active"")){ if(newlevel == 0){ activity = ""basketball""; "
1," return new FilterReader(new StringReader(input)) { @Override public int read(char[] cbuf, int off, int len) throws IOException { return super.read(cbuf, off, Math.min(chunk, len)); "," return new FilterReader(new StringReader(input)) { @Override public int read(char[] cbuf, int off, int len) throws IOException { return super.read(cbuf, off, Math.min(chunk, len)); "
1," mTestUtility = new DbTestUtility(getContext()); createApplication(); mApplication = getApplication(); if(mApplication == null){ throw(new RuntimeException(""Unable to create main application"")); "," mTestUtility = new DbTestUtility(getContext()); createApplication(); mApplication = getApplication(); if(mApplication == null){ throw(new RuntimeException(""Unable to create main application"")); "
0," final ImmutableMap<Number, Number> leaf = ImmutableMap.<Number, Number>singleton(42, 42); assertSame(""collision"", leaf, leaf.delete(42L)); assertSame(""not contained"", leaf, leaf.delete(0)); "," super.visit(n, arg); DataBag db=(DataBag)arg; Object right=db.rtn.pop(); Object left=db.rtn.pop(); append(db, new Operation(n.getBeginLine(), left, right, n.getOperator().name(), db)); "
1, multipleSampleForAdvancedTableCompositionFilters.add(filter); if (this.multipleSampleForAdvancedTableComposition != null) { this.multipleSampleForAdvancedTableComposition.addFilter(filter); , multipleSampleForAdvancedTableCompositionFilters.add(filter); if (this.multipleSampleForAdvancedTableComposition != null) { this.multipleSampleForAdvancedTableComposition.addFilter(filter); 
1, IStructuredSelection selection = (IStructuredSelection)unmappedModels.getSelection(); Resource resource = (Resource)selection.getFirstElement(); updateTransformationButtons(resource); , IStructuredSelection XXXXX = (IStructuredSelection)unmappedModels.getSelection(); Resource XXXXX = (Resource)XXXXX.getFirstElement(); updateTransformationButtons(XXXXX); 
0, assertThat(activity.snakeCaseButtonEventHandled).isFalse(); activity.findViewById(R.id.snake_case_button).performClick(); assertThat(activity.snakeCaseButtonEventHandled).isTrue(); ," IUserManagement port = null; try { URL SOAP_URL = new URL(""http: UserManagement service = new UserManagementLocator(); port = service.getBasicHttpBinding_IUserManagement(SOAP_URL); "
1," StringBuilder sb = new StringBuilder(); sb.append(""{""); if (vpcIds != null) sb.append(""VpcIds: "" + vpcIds + "", ""); if (filters != null) sb.append(""Filters: "" + filters + "", ""); sb.append("""," StringBuilder XXXXX = new StringBuilder(); XXXXX.append(""{""); if (vpcIds != null) XXXXX.append(""VpcIds: "" + vpcIds + "", ""); if (filters != null) XXXXX.append(""Filters: "" + filters + "", ""); XXXXX.append("""
1," HiddenFileInfo filter = findMatch(nodeRef); if(filter != null) { int visibilityMask = filter.getVisibilityMask(); if(!hasHiddenAspect(nodeRef)) { addHiddenAspect(nodeRef, visibilityMask); "," HiddenFileInfo XXXXX = findMatch(nodeRef); if(XXXXX != null) { int XXXXX = XXXXX.getVisibilityMask(); if(!hasHiddenAspect(nodeRef)) { addHiddenAspect(nodeRef, XXXXX); "
0," if (o instanceof OntologyTerm) { OntologyTerm t = (OntologyTerm)o; if (id == null || t.id == null || ontology == null || t.ontology == null) { System.out.println(""How did I get null?""); "," c = c.add(ul().inv()); if((c.x < 0) || (c.y < 0) || (c.x >= img.sz.x) || (c.y >= img.sz.y)) return(false); int cl = img.img.getRGB(c.x, c.y); return(Utils.rgbm.getAlpha(cl) >= 128); "
0," List<Modification> modifications = getMods(artifacts(new MockArtifact(""foo.jar"", EVEN_LONGER_AGO), new MockArtifact(""bar.jar"", EVEN_LONGER_AGO))); assertEquals(0, modifications.size()); "," currentAttribute = new DefaultAttribute( type ); Modification modification = new DefaultModification( currentOperation, currentAttribute ); getDecorated().addModification( modification ); "
1," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; "," EditorCell XXXXX = null; XXXXX = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, XXXXX, editorContext); return XXXXX; "
0," StringBuilder sb = new StringBuilder(); sb.append(""{""); if (domain != null) sb.append(""Domain: "" + domain + "", ""); if (taskList != null) sb.append(""TaskList: "" + taskList + "", ""); sb.append("""," int every = 1; dailyEvent = new DailyInterestScheduledEvent(every); LocalDate nextMatchingDate = dailyEvent.nextMatchingDateAfter(jan1st, jan3rd); assertThat(nextMatchingDate, is(jan4th)); "
1, String host = origin.getHost(); boolean isLocalHost = true; for (int i = 0; i < host.length(); i++) { char ch = host.charAt(i); if (ch == '.' || ch == ':') { isLocalHost = false; break; , StrXXXXXng XXXXX = orXXXXXgXXXXXn.getHost(); boolean XXXXX = true; for (XXXXXnt XXXXX = 0; XXXXX < XXXXX.length(); XXXXX++) { XXXXXar XXXXX = XXXXX.XXXXXarAt(XXXXX); XXXXXf (XXXXX == '.' || XXXXX == ':') { XXXXX = false; break; 
0, if ((event.getDestination() == null || event.getDestination().contains(node)) && (eventSwitch.getStatus().equals(SwitchStatus.ON) || event.getForce())) { dispatcher.dispatch(event); ," logger.debug(""assertConfirmation: "" + replaceParam(elem.getAttributeValue(""value""))); this.sel.waitForCondition(""selenium.isConfirmationPresent();"", ""1000""); this.sel.getConfirmation(); "
0," for (Map.Entry<Class<?>, String> translation : exceptionTranslations.entrySet()) { if (translation.getKey().isInstance(throwable)) { return new CustomTranslationMessage(translation.getValue()); "," String oldMatrix = matrix; matrix = newMatrix; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, FxgPackage.COLOR_MATRIX_FILTER__MATRIX, oldMatrix, matrix)); "
0," Validate.notNull(ccy, ""Currency""); Validate.notNull(curve, ""curve""); if (!_discountingCurves.containsKey(ccy)) { throw new IllegalArgumentException(""Currency discounting curve not in set: "" + ccy); "," final Properties p = new Properties(); p.put(""cczczcz"", ""new: p.put(""cczczcz.JdbcDriver"", ""org.hsqldb.jdbcDriver""); p.put(""cczczcz.JdbcUrl"", ""jdbc:hsqldb:mem:cczczcz""); return p; "
1, final String[] bundleId = splitBundleId(e); final String id = bundleId[0]; final String version = bundleId[1]; final ModelEntry entry = PluginRegistry.findEntry(id); if(entry == null) { return null; , final String[] bundleId = splitBundleId(e); final String XXXXX = bundleId[0]; final String XXXXX = bundleId[1]; final ModelEntry XXXXX = PluginRegistry.findEntry(XXXXX); if(XXXXX == null) { return null; 
0, super( id ); delegate = new CommonSplitDockPerspective(); delegate.setHasFullscreenAction( false ); setWorkingArea( workingArea ); gridClear(); if( typeId == null ){ typeId = CGridArea.TYPE_ID; ," NavigableMap map1 = dmap5(); NavigableMap map2 = dmap5(); assertEquals(map1, map2); assertEquals(map2, map1); map1.clear(); assertFalse(map1.equals(map2)); assertFalse(map2.equals(map1)); "
1, if (data.timeoutOnQuit != null) return data.timeoutOnQuit; else if (cause.parent != null) { CauseSettings s = config.getSettings(cause.parent); if (s != null) return s.getTimeoutOnQuit(); , if (data.timeoutOnQuit != null) return data.timeoutOnQuit; elXXXXXe if (cauXXXXXe.parent != null) { CauXXXXXeSettingXXXXX XXXXX = config.getSettingXXXXX(cauXXXXXe.parent); if (XXXXX != null) return XXXXX.getTimeoutOnQuit(); 
1," PHtmlView html = new PHtmlView(); assertEquals(null, html.getText()); assertEquals(PHtmlView.DEFAULT_FONT, html.getFont()); assertEquals(PHtmlView.DEFAULT_TEXT_COLOR, html.getTextColor()); "," PHtmlView html = new PHtmlView(); assertEquals(null, html.getText()); assertEquals(PHtmlView.DEFAULT_FONT, html.getFont()); assertEquals(PHtmlView.DEFAULT_TEXT_COLOR, html.getTextColor()); "
0," String label = ((PackageRename) object).getName(); return label == null || label.length() == 0 ? getString(""_UI_PackageRename_type"") : getString(""_UI_PackageRename_type"") + "" "" + label; "," usernameVal.setText(""""); emailVal.setText(""""); forename.setText(""""); surnameVal.setText(""""); affiliation.setText(""""); passwordVal.setText(""""); passwordConfirmationVal.setText(""""); "
1," String portalContextPath = ""no path""; ServletContexts servletContexts = ServletContexts.instance(); if (servletContexts != null) { portalContextPath = servletContexts.getRequest().getContextPath(); "," String XXXXX = ""no path""; ServletContexts XXXXX = ServletContexts.instance(); if (XXXXX != null) { XXXXX = XXXXX.getRequest().getContextPath(); "
1," renderCommands.add(new Command() { public void execute() { if (emergencies.get(message.getCallId())==null){ System.out.println(""Unknown emergency for call Id ""+message.getCallId()); return; "," renderCommands.add(new Command() { public void execute() { if (emergencies.get(message.getCallId())==null){ System.out.println(""Unknown emergency for call Id ""+message.getCallId()); return; "
1, final StringBuilder result = new StringBuilder(mConsumedLength); result.append(mContent); for(final TextElement t : mChildren) result.append(t.getContentText()); return result.toString(); , final StringBuilder result = new StringBuilder(mConsumedLength); result.append(mContent); for(final TextElement t : mChildren) result.append(t.getContentText()); return result.toString(); 
1," if (row!=-1) table.setRowSelectionInterval(row,row); if (actionListeners!=null) for(int i=0;i<actionListeners.size();i++) ((ActionListener)actionListeners.get(i)).actionPerformed(e); "," if (row!=-1) table.setRowSelectionInterval(row,row); if (actionListeners!=null) for(int i=0;i<actionListeners.size();i++) ((ActionListener)actionListeners.get(i)).actionPerformed(e); "
1," Validate.isTrue( indentSize >= 0, ""Invalid indent size value "" + indentSize ); this.indentSize = indentSize; this.showDescription = showDescription; this.showQuotationMarks = showQuotationMarks; "," Validate.isTrue( indentSize >= 0, ""Invalid indent size value "" + indentSize ); this.indentSize = indentSize; this.showDescription = showDescription; this.showQuotationMarks = showQuotationMarks; "
0, String key = getApplicationKey(app.getApplication()); GeronimoApplicationContext applicationContext = contextMap.remove(key); if (applicationContext != null) { applicationContext.uninstall(); ," tag = HTML.Tag.MAP; assertEquals(""map"", tag.toString()); assertFalse(""breaks Flow"", tag.breaksFlow()); assertFalse(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); "
1," logDebug(""getPrefs""); if (progressLoad != null) progressLoad.dismiss(); progressLoad = ProgressDialog.show(this, """", ""Loading Preferences.."", true); new GetPrefsTask().execute(this); "," logDebug(""getPrefs""); if (progressLoad != null) progressLoad.dismiss(); progressLoad = ProgressDialog.show(this, """", ""Loading Preferences.."", true); new GetPrefsTask().execute(this); "
1, if (DeflaterConstants.DEBUGGING && start != 0) throw new IllegalStateException(); if (bitCount > 0) { buf[end++] = (byte) bits; if (bitCount > 8) buf[end++] = (byte) (bits >>> 8); , if (DeflaterConstants.DEBUGGING && start != 0) throw new IllegalStateException(); if (bitCount > 0) { buf[end++] = (byte) bits; if (bitCount > 8) buf[end++] = (byte) (bits >>> 8); 
0, String text = entry.getText(); assert text.length() == 2 && text.charAt(0) == '\\'; Character character = translateEscape(text.charAt(1)); if (character != null) { builder.append(character); , ArrayList<Pattern> dbPool = GeronimoServerInfo.getInstance() .getJdbcConnectionPools(); for (int i = 0; i < dbPool.size(); i++) { String str = dbPool.get(i).getName(); combo.add(str); 
0, String propertyName = WebDavNamespaceContext.createName(property.getName()); if (READ_ONLY_PROPS.contains(property.getName())) { return WebDavConst.getStatusDescription(HTTPStatus.CONFLICT); ," return new EventBuilder(""uei.opennms.org/vendor/Juniper/traps/mplsLspPathDown"", ""Test"") .setNodeid(nodeid) .setInterface( addr( ipaddr ) ) .addParam(""mplsLspName"", lspname ) .getEvent(); "
0," final Properties properties = new Properties(); properties.setProperty(""com.atomikos.icatch.service"", ""com.atomikos.icatch.standalone.UserTransactionServiceFactory""); return properties; ", ContentImportManager.getContentImportManager().unregisterContentImporter(importer); ContentExportManager.INSTANCE.unregisterContentExporter(exporter); importer = null; exporter = null; 
0," switch (value) { case -1: return MINUS_ONE; case 0: return ZERO; case 1: return ONE; case 2: return TWO; default: if (value < 0) { return new ArbitraryInteger(true, new int[] { -value ", final double sinPhi = Math.sin(Math.toRadians(phiInDegree)); final double denomSquared = 1 - eccentricitySquared * sinPhi * sinPhi; return semiMajorAxis / Math.sqrt(denomSquared); 
0, super.removeMouseInputListener( listener ); mouseListeners.remove( listener ); ToolbarItem item = getCurrentItem(); if( item != null ) { item.removeMouseInputListener( listener ); ," try { URL url = new URL(canonicalizeUrl(urlStr)); URLConnection conn = url.openConnection(); if (conn instanceof HttpURLConnection) { processResponse((HttpURLConnection) conn, callback); "
0, DuplicateRequest duplicateRequest= new DuplicateRequest(); duplicateRequest.setEditParts(new ArrayList()); duplicateRequest.setExtendedData(new HashMap()); return duplicateRequest; ," UsbAccessory accessory = (UsbAccessory) intent.getParcelableExtra(UsbManager.EXTRA_ACCESSORY); if (intent.getBooleanExtra( UsbManager.EXTRA_PERMISSION_GRANTED, false)) { openAccessory(accessory); "
1," for (int i = 1; i < 6; i++) { try { DbFacade.getInstance().SaveIsInitialized(getParameters().getVm().getStaticData().getId(), getParameters().getVm().getStaticData().getis_initialized()); return; "," for (XXXXXnt XXXXX = 1; XXXXX < 6; XXXXX++) { try { DbFacade.getInstance().SaveIsInXXXXXtXXXXXalXXXXXzed(getParameters().getVm().getStatXXXXXcData().getId(), getParameters().getVm().getStatXXXXXcData().getXXXXXs_XXXXXnXXXXXtXXXXXalXXXXXzed()); return; "
0," if (x.getExpr() instanceof SQLIdentifierExpr) { String tableName = ((SQLIdentifierExpr) x.getExpr()).getName(); if (x.getAlias() != null) { tableAlias.put(x.getAlias(), tableName); ", checkControl(); int portNumber = NetworkServerControl.DEFAULT_PORTNUMBER; String portString = getServerProperty(Property.DRDA_PROP_PORTNUMBER); try { portNumber = Integer.parseInt(portString); 
1," InternetDomainName domain = InternetDomainName.from(""foo.com""); assertEquals(""www.foo.com"", domain.child(""www"").name()); try { domain.child(""www.""); fail(""www..google.com should have been invalid""); "," InternetDomainName domain = InternetDomainName.from(""foo.com""); assertEquals(""www.foo.com"", domain.child(""www"").name()); try { domain.child(""www.""); fail(""www..google.com should have been invalid""); "
1," if (obj instanceof GrClosureSignature) { return Comparing.equal(myParameters, ((GrClosureSignature)obj).getParameters()) && Comparing.equal(myIsVarargs, ((GrClosureSignature)obj).isVarargs()); "," if (obj instanceof GrClosureSignature) { return Comparing.equal(myParameters, ((GrClosureSignature)obj).getParameters()) && Comparing.equal(myIsVarargs, ((GrClosureSignature)obj).isVarargs()); "
0," File bin = new File( installFolder, ""bin"" ); if ( bin.exists() ) { File tool = new File( bin, toolName + ( Os.isFamily( ""windows"" ) ? "".exe"" : """" ) ); if ( tool.exists() ) { return tool; ", boolean result = false; if (filter != null && filter.getStatuses() != null && !filter.getStatuses().isEmpty()) { if (filter.getStatuses().contains(modifiedBug.getStatus().getKey())) { result = true; 
1, Module astNode = getASTNode(); for (int i = 0; i < astNode.body.length; i++) { SimpleNode node = astNode.body[i]; if (!nodeHelper.isImport(node) && !nodeHelper.isStr(node)) { return node.beginLine; , Module astNode = getASTNode(); for (int i = 0; i < astNode.body.length; i++) { SimpleNode node = astNode.body[i]; if (!nodeHelper.isImport(node) && !nodeHelper.isStr(node)) { return node.beginLine; 
1," if (localPart == null || (localPart.equals(""Fault"") && (SOAPConstants.URI_NS_SOAP_1_1_ENVELOPE.equals(namespace) || SOAPConstants.URI_NS_SOAP_1_2_ENVELOPE.equals(namespace)))) { return false; "," if (localPart == null || (localPart.equals(""Fault"") && (SOAPConstants.URI_NS_SOAP_1_1_ENVELOPE.equals(namespace) || SOAPConstants.URI_NS_SOAP_1_2_ENVELOPE.equals(namespace)))) { return false; "
0," Transaction txn = Transaction.currentTxn(); txn.start(); HostPodVO pod = createForUpdate(); pod.setName(null); update(id, pod); boolean result = super.remove(id); txn.commit(); return result; "," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (body: ""); result.append(body); result.append(')'); return result.toString(); "
1," ViewContextService service = (ViewContextService) fWindowToService.get(window); if (service == null) { service = new ViewContextService(window); fWindowToService.put(window, service); "," ViewContextService XXXXX = (ViewContextService) fWindowToService.get(window); if (XXXXX == null) { XXXXX = new ViewContextService(window); fWindowToService.put(window, XXXXX); "
0," double min = ProfilePlot.getFixedMin(); double max = ProfilePlot.getFixedMax(); if (!(min==0.0&&max==0.0) && min<max) { prefs.put(MIN, Double.toString(min)); prefs.put(MAX, Double.toString(max)); "," myWindow = window; myContent.setOpaque(false); myContent.setFocusable(false); setOpaque(false); myShowContent = new ShowContentAction(myWindow, myContent); setBorder(new EmptyBorder(0, 0, 0, 2)); "
1," preferences = new AntCorePreferences(extractExtensions(PT_TASKS), extractExtensions(PT_EXTRA_CLASSPATH), extractExtensions(PT_TYPES), extractExtensions(PT_PROPERTIES), headless); "," preferences = new AntCorePreferences(extractExtensions(PT_TASKS), extractExtensions(PT_EXTRA_CLASSPATH), extractExtensions(PT_TYPES), extractExtensions(PT_PROPERTIES), headless); "
1," File afile = new File(""cache\\"" + filename); String end = filename.split(""\\."")[1]; if(!afile.exists()) { System.out.println(""File "" + afile.getAbsolutePath() +"" not there""); return; "," File afile = new File(""cache\\"" + filename); String end = filename.split(""\\."")[1]; if(!afile.exists()) { System.out.println(""File "" + afile.getAbsolutePath() +"" not there""); return; "
0," GenEnumLiteral genEnumLiteral = getGenEnumLiteral(literal); return genEnumLiteral == null ? ""null"" : getImportedName() + ""."" + genEnumLiteral.getEnumLiteralInstanceConstantName(); "," Plugin permissions = this.getServer().getPluginManager().getPlugin(""Permissions""); if (Permissions == null) { if (permissions != null) { Permissions = ((Permissions) permissions).getHandler(); "
0," if (method != null) { final String methodName = method.getName() + ""-"" + index; if (METHOD_PARAMETER_DESCRIPTIONS.containsKey(methodName)) { return METHOD_PARAMETER_DESCRIPTIONS.get(methodName); "," User u2 = userService.findUserByUsername(USERNAME); userService.deleteUser(u2); try { userService.findUserByUsername(USERNAME); fail(""testDeleteUser() should throw EmptyResultDataAccessException""); "
1, qe.setNpcQuestData(204368).addOnQuestStart(questId); qe.setNpcQuestData(204368).addOnTalkEvent(questId); qe.addOnQuestFinish(questId); qe.setQuestBonusType(InventoryBonusType.COIN).add(questId); , qe.setNpcQuestData(204368).addOnQuestStart(questId); qe.setNpcQuestData(204368).addOnTalkEvent(questId); qe.addOnQuestFinish(questId); qe.setQuestBonusType(InventoryBonusType.COIN).add(questId); 
1," super(name); proposals.addAll(WebDialectExtension.createLengthProprosals()); proposals.add(new Proposal(""1%"")); proposals.add(new Proposal(""none"")); proposals.add(new Proposal(""inherit"")); "," super(name); proposals.addAll(WebDialectExtension.createLengthProprosals()); proposals.add(new Proposal(""1%"")); proposals.add(new Proposal(""none"")); proposals.add(new Proposal(""inherit"")); "
0," Logger.error(this, ""Peer "" + source + "" asked us for the blob file for the ""+name+"" jar, then disconnected when we tried to send the UOMSendingMain""); source.finishedSendingUOMJar(isExt); "," String name = ""foo""; CoordinateReferenceSystem crs = DefaultGeographicCRS.WGS84; DefaultGridFeatureBuilder setter = new DefaultGridFeatureBuilder(name, crs); assertSetter(setter, name, crs); "
0, Module astNode = getASTNode(); for (int i = 0; i < astNode.body.length; i++) { SimpleNode node = astNode.body[i]; if (!nodeHelper.isImport(node) && !nodeHelper.isStr(node)) { return node.beginLine; ," StringBuffer buffer = new StringBuffer(); buffer.append(""[SAVERECALC]\n""); buffer.append("" .recalc = "").append(getRecalc()) .append(""\n""); buffer.append(""[/SAVERECALC]\n""); return buffer.toString(); "
1," if (row != null) { Image image = null; if (columnName != null) { Object cellData = JSON.get(row, columnName); if (cellData == null || cellData instanceof Image) { image = (Image)cellData; "," if (row != null) { Image XXXXX = null; if (columnName != null) { Object XXXXX = JSON.get(row, columnName); if (XXXXX == null || XXXXX instanceof Image) { XXXXX = (Image)XXXXX; "
0," Resource rsrc = Flashbang.rsrcs().requireResource(name); Preconditions.checkState(rsrc instanceof SoundResource, ""Not a SoundResource [name=%s]"", name); return (SoundResource) rsrc; "," if (repositoryInterface.isAnnotationPresent(Namespace.class)) { Namespace namespace = repositoryInterface.getAnnotation(Namespace.class); return String.format(""%s.%s"", namespace.value(), getName()); "
1," return new CmsXmlUpdateAction() { @Override public boolean executeUpdate(Document doc, String xpath, boolean forReal) { Node node = doc.selectSingleNode(xpath); if (node != null) { return false; "," return new CmsXmlUpdateAction() { @Override public boolean executeUpdate(Document doc, String xpath, boolean forReal) { Node XXXXX = doc.selectSingleNode(xpath); if (XXXXX != null) { return false; "
1," registry.register( Required.class, new AnnotationFieldHandler() { public void checkModel(Annotation fieldAnnotation, Field field, Map<String, Field> allFieldMap) throws ValidationException { "," registry.register( Required.class, new AnnotationFieldHandler() { public void checkModel(Annotation fieldAnnotation, Field field, Map<String, Field> allFieldMap) throws ValidationException { "
1," table.getModel().getTable().addColumn(title, type, defaultValue); SwingUtilities.invokeLater(new Runnable() { @Override public void run() { table.refreshModel(table.getModel().getDisplay()); "," table.getModel().getTable().addColumn(title, type, defaultValue); SwingUtilities.invokeLater(new Runnable() { @Override public void run() { table.refreshModel(table.getModel().getDisplay()); "
1," if (isLiveOrCompiled()) if(!this.getCapability(ALLOW_ALIGNMENT_READ)) throw new CapabilityNotSetException(J3dI18N.getString(""Text3D6"")); return ((Text3DRetained)this.retained).getAlignment(); "," if (isLiveOrCompiled()) if(!this.getCapability(ALLOW_ALIGNMENT_READ)) throw new CapabilityNotSetException(J3dI18N.getString(""Text3D6"")); return ((Text3DRetained)this.retained).getAlignment(); "
1, if (isBrundleIssue(jiraIssue)) return true; try{ RemoteIssue remoteIssue = jiraService.getIssueByKey(jiraIssue.getKey()); return !notWorkableTypes().contains(remoteIssue.getType()); , if (isBrundleIssue(jiraIssue)) return true; try{ RemoteIssue XXXXX = jiraService.getIssueByKey(jiraIssue.getKey()); return !notWorkableTypes().contains(XXXXX.getType()); 
0," PropertyMap pm = new PropertyMap(); pm.setValue(FOO, ""1""); assertEquals(""1"", pm.getValue(FOO)); assertEquals(Arrays.asList(""1""), pm.getValues(FOO)); assertTrue(pm.contains(FOO)); "," if (httpclient == null) { httpclient = new DefaultHttpClient(); setupLazySSLSupport(httpclient); if (creds != null) { httpclient.getCredentialsProvider().setCredentials(AuthScope.ANY, creds); "
1," ArrayList<Node> theirGoalNodes = allStaticObjects.getTheirGoalNodes(); Node centreGoal = allStaticObjects.getCentreOfTheirGoal(); if (!obstacleOnLine(ball,centreGoal)) { return centreGoal; "," ArrayList<Node> theirGoalNodes = allStaticObjects.getTheirGoalNodes(); Node centreGoal = allStaticObjects.getCentreOfTheirGoal(); if (!obstacleOnLine(ball,centreGoal)) { return centreGoal; "
1," _output_kp7j54_a0a.value = Sequence.fromIterable(_output_kp7j54_a0a.value).concat(Sequence.fromIterable(Sequence.<IResource>singleton(new MResource(it.getLanguage(), it.getGenerated())))); "," _output_kp7j54_a0a.value = Sequence.fromIterable(_output_kp7j54_a0a.value).concat(Sequence.fromIterable(Sequence.<IResource>singleton(new MResource(it.getLanguage(), it.getGenerated())))); "
0," if (_byPropertyName == null) { _byPropertyName = new HashMap<String, PropertyDescriptor>(_properties.size()); for (PropertyDescriptor desc : _properties) { _byPropertyName.put(desc.getName(), desc); "," tag = HTML.Tag.PARAM; assertEquals(""param"", tag.toString()); assertFalse(""breaks Flow"", tag.breaksFlow()); assertFalse(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); "
1," if (featOkTst && casFeat_category == null) jcas.throwFeatMissing(""category"", ""org.apache.clerezza.uima.utils.ts.WikipediaEntity""); ll_cas.ll_setStringValue(addr, casFeatCode_category, v);"," if (featOkTst && casFeat_category == null) jcas.throwFeatMissing(""category"", ""org.apache.clerezza.uima.utils.ts.WikipediaEntity""); ll_cas.ll_setStringValue(addr, casFeatCode_category, v);"
1," SimpleDateFormat format = new SimpleDateFormat(""yyyyMMdd-HHmmss""); return System.getProperty(""user.home"") + File.separator + ""robot-"" + format.format(Calendar.getInstance().getTime()) + "".mpeg""; "," SimpleDateFormat XXXXX = new SimpleDateFormat(""yyyyMMdd-HHmmss""); return System.getProperty(""user.home"") + File.separator + ""robot-"" + XXXXX.XXXXX(Calendar.getInstance().getTime()) + "".mpeg""; "
1," synchronized (dbh) { SQLiteDatabase db = dbh.getReadableDatabase(); try{ BookModel tempBook = dbh.getBookModel(db, bookDel.getId()); if(tempBook != null) { dbh.deleteBookModel(db, tempBook); "," synchronized (XXXXXh) { SQLiteDatabase XXXXX = XXXXXh.getReadableDatabase(); try{ BookModel XXXXX = XXXXXh.getBookModel(XXXXX, bookDel.getId()); if(XXXXX != null) { XXXXXh.deleteBookModel(XXXXX, XXXXX); "
0," String label = ((PortConnection) object).getName(); return label == null || label.length() == 0 ? getString(""_UI_PortConnection_type"") : getString(""_UI_PortConnection_type"") + "" "" + label; ", HLAASCIIstring data = this.encoderFactory.createHLAASCIIstring(); byte[] emptyBuffer = new byte[0]; try { data.decode( emptyBuffer ); expectedException( DecoderException.class ); 
1," ParamCheck.notNull( context, ""context"" ); if( getContextInternal() != null ) { String msg = ""Current thread has already a context instance buffered.""; throw new IllegalStateException( msg ); "," ParamCheck.notNull( context, ""context"" ); if( getContextInternal() != null ) { String msg = ""Current thread has already a context instance buffered.""; throw new IllegalStateException( msg ); "
1, int lineCount = 0; if (chars != null && chars.length() != 0) { final LineTokenizer tokenizer = new LineTokenizer(chars); while (!tokenizer.atEnd()) { lineCount += 1; tokenizer.advance(); , int XXXXX = 0; if (chars != null && chars.length() != 0) { final LineTokenizer XXXXX = new LineTokenizer(chars); while (!XXXXX.atEnd()) { XXXXX += 1; XXXXX.advance(); 
0," final TaskBootstrap bootstrap = takeNextTaskFrom(scheduler); taskContext.execute(new Runnable() { public void run() { specify(bootstrap.getTaskInsideTransaction(), should.equal(task1)); "," if (intent.getAction().equalsIgnoreCase(ConnectivityManager.CONNECTIVITY_ACTION)) { Log.i(LOG_TAG, ""ConnectivityManager state change: "" + intent.getAction()); synchronized (this) { this.notify(); "
0," ConstructionElementCycle key = ConstructionElementCycle.SegmentDescription(segment.getStartPointAsGeoElement(),segment.getEndPointAsGeoElement()); segmentsLinked.put(key,segment); "," Collections.sort(friends, new Comparator<Friend>() { @Override public int compare(Friend lhs, Friend rhs) { return lhs.getTargetName().toUpperCase().compareTo(rhs.getTargetName().toUpperCase()); "
1," if (checkTimeout()) return -1; int cnt = Bluetooth.btRead(replyBuf, 0, 1); if (cnt <= 0) return 0; int len = (int)replyBuf[0] & 0xff; if (len < 3 ||len >= replyBuf.length) { return -1; "," if (checkTimeout()) return -1; int XXXXX = Bluetooth.btRead(replyBuf, 0, 1); if (XXXXX <= 0) return 0; int XXXXX = (int)replyBuf[0] & 0xff; if (XXXXX < 3 ||XXXXX >= replyBuf.XXXXXgth) { return -1; "
1," sb.append(""ProjectionNode inFields=(""); StringUtils.formatList(sb, mInputFields); sb.append("") outFields=(""); StringUtils.formatList(sb, mOutputFields); sb.append("")\n""); formatAttributes(sb); "," sb.append(""ProjectionNode inFields=(""); StringUtils.formatList(sb, mInputFields); sb.append("") outFields=(""); StringUtils.formatList(sb, mOutputFields); sb.append("")\n""); formatAttributes(sb); "
0," double dx, dy; if (posFrame == null) { double a1 = Math.PI*2*i/numDevices; double a2 = Math.PI*2*j/numDevices; dx = Math.sin(a1) - Math.sin(a2); dy = Math.cos(a1) - Math.cos(a2); "," super.reset(mapping, request); CollectionUtils.forAllDo(clientDetails, new Closure() { @Override public void execute(Object arg0) { ((MultipleLoanCreationDto) arg0).resetSelected(); "
1," final JFrame frame = new JFrame(title); frame.add(component, BorderLayout.CENTER); SwingUtilities.invokeLater(new Runnable() { public void run() { frame.pack(); frame.setVisible(true); "," final JFrame XXXXX = new JFrame(title); XXXXX.add(component, BorderLayout.CENTER); SwingUtilities.invokeLater(new Runnable() { public void run() { XXXXX.pack(); XXXXX.setVisible(true); "
0," BansheeServer s = null; Cursor cursor = getDb().query(DB.TABLE_NAME, DB.ALL_COLUMNS, DB.ID + ""="" + id, null, null, null, null); if (cursor.moveToFirst()) { s = fillFromCursor(cursor); "," for (int i = 0; i < dim; i++) { String padString = """"; for (int j = 0; j < dim; j++) { padString = """"; for (int k = 0; (k + Integer.toString(A[i][j]).length()) < padding; k++) { padString += "" ""; "
0, List<String> s = new ArrayList<String>(); s.add(jobId); s.add(owner); s.add(queue); s.add(state); s.add(stateDetail); s.add(remoteOutputPath); s.add(remoteErrorPath); return s.toString(); ," AffineTransform tx, glyphTx; GeneralPath path; validate(); if ((transforms != null) && ((glyphTx = transforms[glyphIndex]) != null)) { tx = new AffineTransform(transform); tx.concatenate(glyphTx); "
0," if( _phase != Phase.BUILD ) throw new IllegalStateException(""No batch processing outside build.""); if( _batchMode ) return; checkValid(); _batchMode = true; _file = null; _astRoot = null; "," return Objects.toStringHelper(this) .add(""type"", type) .add(""entryDate"", entryDate) .add(""creator"", creator) .add(""subject"", subject) .add(""note"", note) .add(""attachments"", attachments) .toString(); "
0," SwingUtilities.invokeLater(new Runnable() { public void run() { statusField.setValue(""Reconnection stablished""); EnhancedDebuggerWindow.connectionEstablished(EnhancedDebugger.this); ", HLAASCIIstring data = this.encoderFactory.createHLAASCIIstring(); ByteWrapper emptyWrapper = new ByteWrapper(); try { data.encode( emptyWrapper ); expectedException( EncoderException.class ); 
0," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," SQLiteDatabase db; Cursor c = null; Note note; db = mDbHelper.getWritableDatabase(); c = db.query(DBConsts.NOTES_TABLE_NAME, null, DBConsts.NOTES_ID +""=?"", new String []{ String.valueOf(noteId) "
1," MessageDialogWithToggle.openYesNoQuestion( new Shell(), ""Start Mode"", ""Do you want to start in console mode?"", ""Do not ask again"", false, store, PetalsServerPreferencePage.START_IN_CONSOLE_MODE ); "," MessageDialogWithToggle.openYesNoQuestion( new Shell(), ""Start Mode"", ""Do you want to start in console mode?"", ""Do not ask again"", false, store, PetalsServerPreferencePage.START_IN_CONSOLE_MODE ); "
0," List<QuizzPlayer> players = findByField(""name"", author); if (players.isEmpty()) { QuizzPlayer player = new QuizzPlayer(); player.setName(author); player.setPoints(1); save(player); "," BalloonBuilder balloonBuilder = JBPopupFactory.getInstance(). createHtmlTextBalloonBuilder(message, MessageType.ERROR, null); showBalloon(balloonBuilder, component, centerPoint); "
1, TestSuite suite = new TestSuite(); suite.addTestSuite(WidgetConfigTest.class); suite.addTestSuite(WidgetConfigUtilTest.class); suite.addTestSuite(WidgetLdrTest.class); return suite; , TestSuite suite = new TestSuite(); suite.addTestSuite(WidgetConfigTest.class); suite.addTestSuite(WidgetConfigUtilTest.class); suite.addTestSuite(WidgetLdrTest.class); return suite; 
0," myArea = area; myContext.setArea(area); myToolProvider = provider; tree.setDragEnabled(true); tree.setTransferHandler(new TreeTransfer()); tree.setDropTarget(new DropTarget(tree, this)); ", final AntConfiguration config = AntConfiguration.getInstance(myProject); ((AntConfigurationBase)config).ensureInitialized(); return config.executeTargetAfterCompile(dataContext); 
1," Element recordInfo = (Element) recordInfoXpath.selectSingleNode(modsDoc); if (recordInfo == null) { recordInfo = modsDoc.getRootElement().addElement(new QName(""recordInfo"", Namespaces.mods)); "," Element XXXXX = (Element) XXXXXXpath.selectSingleNode(modsDoc); if (XXXXX == null) { XXXXX = modsDoc.getRootElement().addElement(new QName(""XXXXX"", Namespaces.mods)); "
1," final EquityIndexDividendFutureBean bean = createFutureBean(new EquityIndexDividendFutureBean(), security); bean.setUnderlying(externalIdToExternalIdBean(security .getUnderlyingId())); return bean; "," final EquityIndexDividendFutureBean XXXXX = createFutureBean(new EquityIndexDividendFutureBean(), security); XXXXX.setUnderlying(externalIdToExternalIdBean(security .getUnderlyingId())); return XXXXX; "
0," viewport.removePropertyChangeListener(Viewport.PROPERTY_VIEW_LOCATION, propListener); viewport.removeFigureListener(figureListener); if (selector.getParent() == this) { remove(selector); ", if (e.getComponent() instanceof JEditTextArea) { ((JEditTextArea) e.getComponent()).addToCursorPositionListener(this); _activeGenericCodeDisplayer = (JEditTextArea) e.getComponent(); refresh(); 
0," this(id, renderType, interpolate); setWidth(ii.getIconWidth()); setHeight(ii.getIconHeight()); setColorModel(OMRasterObject.COLORMODEL_IMAGEICON); setImage(ii.getImage()); setBaseScale(baseScale); "," int oldHealth = health; health = newHealth; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, BuildPackage.BUILD_PLAN__HEALTH, oldHealth, health)); "
0, boolean canOpen = false; for ( int i = 0; i < getSelectedConnections().length; i++ ) { if ( !getSelectedConnections()[i].getConnectionWrapper().isConnected() ) { canOpen = true; break; , if (event.isCancelled()) return; Material type = event.getNewState().getType(); if (type == Material.SNOW) { if (!WorldConfig.get(event.getBlock()).formSnow) { event.setCancelled(true); 
0," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," if (featOkTst && casFeat_surface == null) jcas.throwFeatMissing(""surface"", ""org.u_compare.shared.semantic.DictionaryNamedEntity""); return ll_cas.ll_getStringValue(addr, casFeatCode_surface); "
1," affine.set( affine.get( 0, 3 ) - x, 0, 3 ); affine.set( affine.get( 1, 3 ) - y, 1, 3 ); affine.scale( s ); affine.set( affine.get( 0, 3 ) + x, 0, 3 ); affine.set( affine.get( 1, 3 ) + y, 1, 3 ); "," affine.set( affine.get( 0, 3 ) - x, 0, 3 ); affine.set( affine.get( 1, 3 ) - y, 1, 3 ); affine.scale( s ); affine.set( affine.get( 0, 3 ) + x, 0, 3 ); affine.set( affine.get( 1, 3 ) + y, 1, 3 ); "
0," final MockMaker maker = new MockMaker(new MockMarketFactory()); final MarketInstrument inst; inst = service.lookup(newText(""2"")); final MarketInstrument[] insts = new MarketInstrument[] { inst ", ScopePath currentPath = scopePath; while (!CodeDefaultScopeDescriptor.NAME.equals(currentPath.getLastScope().getName())) { removeFromCache(currentPath); currentPath = currentPath.getParentPath(); 
0," buffer[0]--; if (buffer[0] > 0) { setKey(getKey(buffer[0]), index); positions[index] = getPhysicalPosition(buffer[0]); keysToUpdate[index] = true; positionsToUpdate[index] = true; ", for (DevKit d : getModules(DevKit.class)) { if (moduleReference.getModuleId() != null) { if (d.getModuleReference().getModuleId().equals(moduleReference.getModuleId())) { return d; 
1," return XmlSerializer.serialize(this, new SerializationFilter() { @Override public boolean accepts(Accessor accessor, Object bean) { return accessor.getValueClass().equals(String.class); "," return XmlSerializer.serialize(this, new SerializationFilter() { @Override public boolean accepts(Accessor accessor, Object bean) { return accessor.getValueClass().equals(String.class); "
0," if (getHandle().netServerHandler == null) return; getHandle().netServerHandler.sendPacket(new Packet54PlayNoteBlock(loc.getBlockX(), loc.getBlockY(), loc.getBlockZ(), instrument, note)); ", this.params = new double[3]; this.params[ActivationStep.PARAM_STEP_CENTER] = center; this.params[ActivationStep.PARAM_STEP_LOW] = low; this.params[ActivationStep.PARAM_STEP_HIGH] = high; 
0," MimeRecord underlyingRecord = MimeRecord.parse(record); Preconditions.checkArgument(""text/x-vCard"".equals(underlyingRecord.getMimeType())); return new VCardRecord(underlyingRecord.getContent()); ", if (aAST != null) { super.initialize(aAST); final DetailAST detailAST = (DetailAST) aAST; setDetailNode(detailAST); _column = detailAST.getColumnNo() + 1; _line = detailAST.getLineNo(); 
0, DebugOptions options = getOptions(); fillOptionsMapFromCurrent(options); tv.setCheckStateProvider(new ICheckStateProvider() { public boolean isGrayed(Object element) { return false; ," super(model, project); addToColumns(new IconColumn<DMRepository>(""ws_repository_icon"", 30) { @Override public Icon getIcon(DMRepository object) { return WSEIconLibrary.WS_REPOSITORY_ICON; "
1," String label = ((Generator) object).getAttribute(); return label == null || label.length() == 0 ? getString(""_UI_Generator_type"") : getString(""_UI_Generator_type"") + "" "" + label; "," String XXXXX = ((Generator) object).getAttribute(); return XXXXX == null || XXXXX.length() == 0 ? getString(""_UI_Generator_type"") : getString(""_UI_Generator_type"") + "" "" + XXXXX; "
1," String contentType = super.getContentType(); if (!StringUtils.isEmpty(contentType) && !StringUtils.isEmpty(this.contentType) && contentType.contains(""zip"")) { return this.contentType; "," String XXXXX = super.getContentType(); if (!StringUtils.isEmpty(XXXXX) && !StringUtils.isEmpty(this.XXXXX) && XXXXX.contains(""zip"")) { return this.XXXXX; "
1," if (fSpeedField != null) { int index = 0; try { index = getSpeedItemIndex(configuration.getAttribute(IGDBLaunchConfigurationConstants.ATTR_DEV_SPEED, DEFAULT_ASYNC_DEVICE_SPEED)); "," if (fSpeedField != null) { int XXXXX = 0; try { XXXXX = getSpeedItemIndex(configuration.getAttribute(IGDBLaunchConfigurationConstants.ATTR_DEV_SPEED, DEFAULT_ASYNC_DEVICE_SPEED)); "
1," new GregUserLogin().userLogin(driver, username, password); selenium.waitForPageToLoad(""30000""); assertTrue(selenium.isTextPresent(""WSO2 Governance Registry Home""), ""GReg Home page not present :""); "," new GregUserLogin().userLogin(driver, username, password); selenium.waitForPageToLoad(""30000""); assertTrue(selenium.isTextPresent(""WSO2 Governance Registry Home""), ""GReg Home page not present :""); "
0," String name = NameUtil.shortNameFromLongName(node.getConcept().getId()); HackSNodeUtil.setConceptFqName(node, NameUtil.longNameFromNamespaceAndShortName(newModel.getLongName(), name)); "," List<ParseResults> results = new LinkedList<ParseResults>(); for (String r : StringUtils.split(ranges, ',')) results.add(parseMediaRange(r)); return qualityParsed(mimeType, results); "
1," ByteBuffer result = ByteBuffer.allocate(MAX_LENGTH); fillInPacket(encap, Inet4Address.ALL, Inet4Address.ANY, destUdp, srcUdp, result, DHCP_BOOTREQUEST, mBroadcast); result.flip(); return result; "," ByteBuffer XXXXX = ByteBuffer.allocate(MAX_LENGTH); fillInPacket(encap, Inet4Address.ALL, Inet4Address.ANY, destUdp, srcUdp, XXXXX, DHCP_BOOTREQUEST, mBroadcast); XXXXX.flip(); return XXXXX; "
1, layout = new PatternLayout(FORMAT_LAYOUT); LevelRangeFilter newFilter = new LevelRangeFilter(); newFilter.setAcceptOnMatch(true); newFilter.setLevelMin(LEVEL_MIN); addFilter(newFilter); , layout = new PatternLayout(FORMAT_LAYOUT); LevelRangeFilter newFilter = new LevelRangeFilter(); newFilter.setAcceptOnMatch(true); newFilter.setLevelMin(LEVEL_MIN); addFilter(newFilter); 
1, checkInitted(); Class<?> declaringClass = c.getDeclaringClass(); if (Modifier.isAbstract(declaringClass.getModifiers())) { return new InstantiationExceptionConstructorAccessorImpl(null); , checkInitted(); Class<?> declaringClass = c.getDeclaringClass(); if (Modifier.isAbstract(declaringClass.getModifiers())) { return new InstantiationExceptionConstructorAccessorImpl(null); 
1," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," EditorCell XXXXX = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, XXXXX, editorContext); return XXXXX; "
1," if (resourceTypeId == null) throw new IllegalArgumentException(""resourceTypeId is null""); ResourceType obj = this.resourceTypeDao.findById(resourceTypeId); this.resourceTypeDao.remove(obj); "," if (resourceTypeId == null) throw new IllegalArgumentException(""resourceTypeId is null""); ResourceType XXXXX = this.resourceTypeDao.findById(resourceTypeId); this.resourceTypeDao.remove(XXXXX); "
0," String label = ((FeatureChange)object).getFeatureName(); return label == null || label.length() == 0 ? getString(""_UI_FeatureChange_type"") : getString(""_UI_FeatureChange_type"") + "" "" + label; "," String name = NameUtil.shortNameFromLongName(node.getConcept().getId()); HackSNodeUtil.setConceptFqName(node, NameUtil.longNameFromNamespaceAndShortName(newModel.getLongName(), name)); "
1," Arrays.fill(data, 0); int offset = 0; for (int y = 0; y < height; y++) { for (int x = 0; x < width; x++) { if (data[offset] == 0 && magnitude[offset] >= high) { follow(x, y, offset, low); "," ArraXXXXXs.fill(data, 0); int XXXXX = 0; for (int XXXXX = 0; XXXXX < height; XXXXX++) { for (int XXXXX = 0; XXXXX < width; XXXXX++) { if (data[XXXXX] == 0 && magnitude[XXXXX] >= high) { follow(XXXXX, XXXXX, XXXXX, low); "
1," if ( m_actions.get( action.getName()) == null) { m_actions.put(action.getName(), action); m_actionsPseudo.put(action.getPseudoFile().getFileName().toUpperCase(), action); return true; "," if ( m_actions.get( action.getName()) == null) { m_actions.put(action.getName(), action); m_actionsPseudo.put(action.getPseudoFile().getFileName().toUpperCase(), action); return true; "
1," super(enclosingElement, accuracy, start, length, insideDocComment, SearchEngine.getDefaultSearchParticipant(), resource); fSimpleNameStart= simpleNameStart; fSimpleTypeName= simpleName; "," super(enclosingElement, accuracy, start, length, insideDocComment, SearchEngine.getDefaultSearchParticipant(), resource); fSimpleNameStart= simpleNameStart; fSimpleTypeName= simpleName; "
1," StringBuffer sb = new StringBuffer(); sb.append(super.getAttributesAsString()); sb.append(String.format(""connectionLimitId=%s"",vorn(getConnectionLimitId()))); return sb.toString(); "," StringBuffer sb = new StringBuffer(); sb.append(super.getAttributesAsString()); sb.append(String.format(""connectionLimitId=%s"",vorn(getConnectionLimitId()))); return sb.toString(); "
0," if(!(cause instanceof Throwable || cause instanceof StackTraceElement[] || cause==null) ) { throw new IllegalArgumentException( ""Cause can only be Throwable and StackTraceElement[]""); ", if (!myOpened) { final DialogWrapper wrapper = getDialogWrapper(); if (wrapper != null) { JComponent toFocus = wrapper.getPreferredFocusedComponent(); if (toFocus != null) { return toFocus; 
1," String testUrl = toShowcaseUrl(""contextMenu.jsf""); driver.get(testUrl); action = new SeleniumActionHelper(driver); WebElement body = driver.findElement(By.tagName(""body"")); action.rightClick(body); "," String XXXXX = toShowcaseUrl(""contextMenu.jsf""); driver.get(XXXXX); action = new SeleniumActionHelper(driver); WebElement XXXXX = driver.findElement(By.tagName(""XXXXX"")); action.rightClick(XXXXX); "
0," Map<String,SourceTuple> files = get().parsedFiles; SourceTuple tuple = files == null ? null : files.get(fileUrl.substring(fileUrl.lastIndexOf("" return tuple == null ? null : tuple.file; "," StringBuilder sb = new StringBuilder(); sb.append(""var(""); sb.append(mAlias); if (mConstraints.size() > 0) { sb.append("", constraints={""); StringUtils.formatList(sb, mConstraints); sb.append("""
1, if (meta.isEmbeddedOnly() && meta.getPrimaryKeyFields().length == 0) return MetaDataTag.EMBEDDABLE; if (meta.isMapped()) return MetaDataTag.ENTITY; return MetaDataTag.MAPPED_SUPERCLASS; , if (meta.isEmbeddedOnly() && meta.getPrimaryKeyFields().length == 0) return MetaDataTag.EMBEDDABLE; if (meta.isMapped()) return MetaDataTag.ENTITY; return MetaDataTag.MAPPED_SUPERCLASS; 
0," super(); this.scheme = scheme; this.scope = scope; this.schemeManager = schemeManager; parsed = new ArrayList<String>(); parsed.add(scheme + "":"" + scope); buffer = new StringBuffer(); ", createLink = createLinkButton.getSelection(); browseButton.setEnabled(createLink); variablesButton.setEnabled(createLink); linkTargetField.setEnabled(createLink); setPageComplete(validatePage()); 
1," MonthDay test = new MonthDay(); assertEquals(6, test.get(DateTimeFieldType.monthOfYear())); assertEquals(9, test.get(DateTimeFieldType.dayOfMonth())); try { test.get(null); fail(); "," MonthDay XXXXX = new MonthDay(); assertEquals(6, XXXXX.get(DateTimeFieldType.monthOfYear())); assertEquals(9, XXXXX.get(DateTimeFieldType.dayOfMonth())); try { XXXXX.get(null); fail(); "
0, IPreferenceStore store = ChromeThemeCore.getDefault().getPreferenceStore(); ArrayList<ChromePage> pages = getPrefererncePage().getPages(); for (ChromePage each : pages) { each.setToDefault(store); ," List<BasicReportDefinition> reports = m_defaultRemoteRepository.getReports(); logger.debug(""getReports""); for (BasicReportDefinition report : reports) { logger.debug(report.toString()); "
0," ISelection selection = new StructuredSelection(asList(""x"")); List<String> result = new ElementsFrom(selection).as(String.class); assertThat(result.size(), is(1)); assertThat(result, hasItem(""x"")); ", CreateProcessInstance returned = new CreateProcessInstance(process); returned.setHeaderComment(getHeaderComment()); returned.setInlineComment(getInlineComment()); return returned; 
0, final String maximizedString = String.valueOf(shell.getMaximized()); final String positionString; final String sizeString; if (shell.getMaximized()) { positionString = null; sizeString = null; , CTabItem[] items = tabFolder.getItems( ); for ( int i = 0; i < items.length; i++ ) { if ( items[i].getText( ).equals( itemKey ) ) { itemMap.remove( items[i] ); items[i].dispose( ); 
0, Paint paint = Robolectric.newInstanceOf(Paint.class); assertFalse(paint.isDither()); ShadowPaint shadowPaint = shadowOf(paint); shadowPaint.setDither(true); assertTrue(paint.isDither()); , Rectangle2D rect = mPath.getBounds2D(); bounds.left = (float)rect.getMinX(); bounds.right = (float)rect.getMaxX(); bounds.top = (float)rect.getMinY(); bounds.bottom = (float)rect.getMaxY(); 
1," int numberOfBooleanVariables = 0; for (int i=0; i<this.variables.length; i++) { PolishVariable var = this.variables[i]; if (""boolean"".equals(var.getType())) { numberOfBooleanVariables++; "," int XXXXX = 0; for (int i=0; i<this.XXXXXiables.length; i++) { PolishVariable XXXXX = this.XXXXXiables[i]; if (""boolean"".equals(XXXXX.getType())) { XXXXX++; "
1," File absolute = file.getAbsoluteFile(); String path = absolute.getPath(); String prefix = """"; while (path.startsWith(File.separator)) { prefix += ROOTCHAR; path = path.substring(1); "," File XXXXX = file.getAbsoluteFile(); String XXXXX = XXXXX.getPath(); String XXXXX = """"; while (XXXXX.startsWith(File.separator)) { XXXXX += ROOTCHAR; XXXXX = XXXXX.substring(1); "
1," super.init(properties); if( _emf instanceof OpenJPAEntityManagerFactorySPI ) { ((OpenJPAEntityManagerFactorySPI)_emf).addLifecycleListener(this, ProcessInstanceDAOImpl.class, ProcessDAOImpl.class); "," super.init(properties); if( _emf instanceof OpenJPAEntityManagerFactorySPI ) { ((OpenJPAEntityManagerFactorySPI)_emf).addLifecycleListener(this, ProcessInstanceDAOImpl.class, ProcessDAOImpl.class); "
0," System.out.println(""set throws exception correctly""); int n = 10; int m = 1; double v = 1.0; UpperTriangularGenerator instance = new UpperTriangularGenerator(n, m); try { instance.set(-1, 5, v); "," if (!vert.getBounds().contains(e.getX(), e.getY()) && !horiz.getBounds().contains(e.getX(), e.getY()) && infoRender != null) { infoRender.onMapClick(sectorInfo, e.getButton(), cX, cZ, iCX, iCY); "
1," PlayerListBox var1 = new PlayerListBox(this.serverInstance); JScrollPane var2 = new JScrollPane(var1, 22, 30); var2.setBorder(new TitledBorder(new EtchedBorder(), ""Players"")); return var2; "," PlayerListBox XXXXX = new PlayerListBox(this.serverInstance); JScrollPane XXXXX = new JScrollPane(XXXXX, 22, 30); XXXXX.setBorder(new TitledBorder(new EtchedBorder(), ""Players"")); return XXXXX; "
0, List controls = getControls(); for (int i = controls.size() - 1; i >= 0; i--) { DisplayControl control = (DisplayControl) controls.get(i); if ( !(control instanceof MapDisplayControl)) { continue; ," if (canGetGeoPos && !adjusting) { adjusting = true; GeoPos geoPos = placemarkDescriptor.updateGeoPos(product.getGeoCoding(), getPixelPos(), getGeoPos()); setGeoPos(geoPos); adjusting = false; "
0," super(VcsBundle.message(""action.name.create.patch.for.selected.revisions""), VcsBundle.message(""action.description.create.patch.for.selected.revisions""), AllIcons.Actions.CreatePatch); ", Project project = e.getData(PlatformDataKeys.PROJECT); e.getPresentation().setEnabled(project != null && !CommittedChangesCache.getInstance(project).isRefreshingIncomingChanges()); 
1," if (messageId == null || topicId == null) { LOG.error(""markMessageReadForUser failed with topicId: "" + topicId + "", messageId: "" + messageId); throw new IllegalArgumentException(""Null Argument""); "," if (messageId == null || topicId == null) { LOG.error(""markMessageReadForUser failed with topicId: "" + topicId + "", messageId: "" + messageId); throw new IllegalArgumentException(""Null Argument""); "
1, classText.setEnabled( createNewClassRadio.getSelection() ); packageText.setEnabled( createNewClassRadio.getSelection() ); superCombo.setEnabled( createNewClassRadio.getSelection() ); , classText.setEnabled( createNewClassRadio.getSelection() ); packageText.setEnabled( createNewClassRadio.getSelection() ); superCombo.setEnabled( createNewClassRadio.getSelection() ); 
0," synchronized(edtLock) { waitUntilStopped(); if(DEBUG) { if(edt.tasks.size()>0) { System.err.println(Thread.currentThread()+"": EDT reset, remaining tasks: ""+edt.tasks.size()+"" - ""+edt); "," assertTrue(""Project not created."", project.exists()); assertTrue(""Project not open."", project.isOpen()); try { assertTrue(""Site nature not added."", project .hasNature(PDE.SITE_NATURE)); "
0," if (node.jjtGetNumChildren() == 0 || (node.jjtGetChild(0)).jjtGetNumChildren() == 0 || !(node.jjtGetChild(0).jjtGetChild(0) instanceof ASTAllocationExpression)) { return super.visit(node, data); "," String label = ((PackageRename) object).getName(); return label == null || label.length() == 0 ? getString(""_UI_PackageRename_type"") : getString(""_UI_PackageRename_type"") + "" "" + label; "
0," logger.finer(""starting recognition""); linguist.startRecognition(); pruner.startRecognition(); scorer.startRecognition(); localStart(); if (startTime == 0.0) { startTime = System.currentTimeMillis(); "," Long fromNodeId = edge.getFromNode().getId(); Map<Long, Edge> toNodeEdgeMap = fromNodeToNodeEdgeMap.get(fromNodeId); if (toNodeEdgeMap != null) { toNodeEdgeMap.remove(edge.getToNode().getId()); "
0, switch (item.getItemId()) { case MENU_SAVE: validateAndSetResult(); return true; case MENU_DISCARD: finish(); return true; case MENU_REMOVE: { setRemovedProfileAndFinish(); return true; ," if (!getEventConfiguration().getEventFiles().containsKey(getProgrammaticStoreConfigResource())) { getEventConfiguration().getEventFiles().put(getProgrammaticStoreConfigResource(), new Events()); "
0," setEmbeddedLexer(); if (embeddedLexer != null) { embeddedLexer.start(getBufferSequence(), HtmlHighlightingLexer.super.getTokenStart(), HtmlHighlightingLexer.super.getTokenEnd()); "," widget.removeFromParent(); getChildren().insert(widget, beforeIndex); Layer layer = layout.attachChild(widget.getElement(), widget); widget.setLayoutData(layer); adopt(widget); animate(0); "
1, Image sep = new Image(ThemeResources.INSTANCE.toolbarSeparator()); sep.setStylePrimaryName(styles_.toolbarSeparator()); leftToolbarPanel_.add(sep); invalidateSeparators(); return sep; , Image XXXXX = new Image(ThemeResources.INSTANCE.toolbarSeparator()); XXXXX.setStylePrimaryName(styles_.toolbarSeparator()); leftToolbarPanel_.add(XXXXX); invalidateSeparators(); return XXXXX; 
1, server.setPort(port); server.setMaxClients(maxClients); handler.setRqTimeout(rqTimeout); handler.setDimseTimeout(dimseTimeout); handler.setSoCloseDelay(soCloseDelay); handler.setPackPDVs(false); , server.setPort(port); server.setMaxClients(maxClients); handler.setRqTimeout(rqTimeout); handler.setDimseTimeout(dimseTimeout); handler.setSoCloseDelay(soCloseDelay); handler.setPackPDVs(false); 
0," if(world.isBlockIndirectlyGettingPowered(i, j, k) || world.isBlockIndirectlyGettingPowered(i, j + 1, k)) { world.setBlockWithNotify(i,j,k, mod_miscBlocks.neonLightOrangeOn.blockID); powered = true; "," URI resourceURI = EditUIUtil.getURI(getEditorInput()); Exception exception = null; Resource resource = null; try { resource = editingDomain.getResourceSet().getResource(resourceURI, true); "
0, final Presence onlinePresence = new Presence(Presence.Type.available); onlinePresence.setTo(transport.getServiceName()); ChatsyManager.getConnection().sendPacket(onlinePresence); , int areaInfoIndex = -1; int wordCharLength = 0; for (int wordIndex = firstIndex; wordIndex <= lastIndex; wordIndex++) { areaInfo = getAreaInfo(wordIndex); if (areaInfo.isSpace) { addSpaces(); 
0," Collection<Double> c = Sets.newHashSet(4., -5., -6.); assertTrue(ArgumentChecker.hasNegativeElement(c)); c = Sets.newHashSet(1., 2., 3.); assertFalse(ArgumentChecker.hasNegativeElement(c)); "," Book book = Faces.var(""book"", Book.class); FileUploadItem uploadedCoverImage = book.getUploadedCoverImage(); if (uploadedCoverImage == null) return ""N/A""; return uploadedCoverImage.getFileName(); "
0," StringBuffer sb = new StringBuffer(); for (Cluster c: cl.clusterList){ sb.append(""[""); for (Object o : c.elementList ) { IMolecule m = (IMolecule) o; sb.append(m.toString()+"" ""); ", return (state==DebugState.BREAKPOINT) || (state==DebugState.STOPPED_INTO) || (state==DebugState.STOPPED_OVER) || (state==DebugState.STOPPED_RETURN) || (state==DebugState.SUSPENDED); 
1," return ""All routes "" + allRoutes + "" size "" + (size / 1024f) + "" KB coordinates "" + coordinates + "" ratio coord "" + (((float)size) / coordinates) + "" ratio routes "" + (((float)size) / allRoutes); "," return ""All routes "" + allRoutes + "" size "" + (size / 1024f) + "" KB coordinates "" + coordinates + "" ratio coord "" + (((float)size) / coordinates) + "" ratio routes "" + (((float)size) / allRoutes); "
0," ArrayList top = new ArrayList(); ArrayList layer = new ArrayList(); int label = 0; for ( int i=0; i<levels; ++i ) { Node n = g.addNode(); n.setString(LABEL, String.valueOf(label++)); top.add(n); ", if (inheritsReadWriteMip() && this.modelItem.getParent() != null) { if (this.modelItem.getParent().getRefreshView().isReadonlyMarked()) { this.readonlyMarker = true; addParentRefreshViewToModel(); 
1, this.input = input; this.lowThreshold = lowThreshold; this.highThreshold = highThreshold; this.period = period; isForward = true; counts = 0; setPriority(threadPriority); setDaemon(true); start(); , this.input = input; this.lowThreshold = lowThreshold; this.highThreshold = highThreshold; this.period = period; isForward = true; counts = 0; setPriority(threadPriority); setDaemon(true); start(); 
1," SuggestionData clicked = new SuggestionData(CONTACTS_SOURCE) .setText1(""bob smith"") .setIntentAction(""action"") .setIntentData(""data""); reportClick(""bob smith"", clicked); assertNoShortcuts(""joe""); "," SuggestionData XXXXX = new SuggestionData(CONTACTS_SOURCE) .setText1(""bob smith"") .setIntentAction(""action"") .setIntentData(""data""); reportClick(""bob smith"", XXXXX); assertNoShortcuts(""joe""); "
0," String label = ((FeatureChange)object).getFeatureName(); return label == null || label.length() == 0 ? getString(""_UI_FeatureChange_type"") : getString(""_UI_FeatureChange_type"") + "" "" + label; "," try { getContainer().run(true, true, new IRunnableWithProgress() { public void run(IProgressMonitor monitor) throws InvocationTargetException, InterruptedException { importProjects(monitor); "
1, boolean renamedArtifact = !newArtifactId.equals(artifactId); renameCheckbox.setEnabled(renamedArtifact); if (!renamedArtifact) { renameCheckbox.setSelection(false); renamed = false; , boolean renamedArtifact = !newArtifactId.equals(artifactId); renameCheckbox.setEnabled(renamedArtifact); if (!renamedArtifact) { renameCheckbox.setSelection(false); renamed = false; 
0," StringBundler sb = new StringBundler(7); sb.append(""{userId=""); sb.append(userId); sb.append("", groupId=""); sb.append(groupId); sb.append("", roleId=""); sb.append(roleId); sb.append(""", if (con != null) { int selectedOperator = getSelectedOp().getProperty(); if (selectedOperator == ConstraintOp.ONE_OF.getIndex() || selectedOperator == ConstraintOp.NONE_OF.getIndex()) { return true; 
1, for (int i = 0; i < m.length; i++) if (line2UsedWords[m.start + i]) return true; for (int i = 0; i < m.matchLength; i++) if (line1UsedWords[m.matchStart + i]) return true; return false; , for (int i = 0; i < m.length; i++) if (line2UsedWords[m.start + i]) return true; for (int i = 0; i < m.matchLength; i++) if (line1UsedWords[m.matchStart + i]) return true; return false; 
1," try { ResultSet rs= Service.getAllService(); int i = 0; while(rs.next()){ model.insertRow(i++, new Object[]{false, rs.getInt(""serviceID""), rs.getString(""serviceName""), rs.getDouble(""serviceAmount"")"," try { ResultSet rs= ServXXXXXce.getAllServXXXXXce(); XXXXXnt XXXXX = 0; whXXXXXle(rs.next()){ model.XXXXXnsertRow(XXXXX++, new Object[]{false, rs.getInt(""servXXXXXceID""), rs.getStrXXXXXng(""servXXXXXceName""), rs.getDouble(""servXXXXXceAmount"")"
0," if (satoshis.compareTo(minCoinsToSend) >= 0) { coinsToSend = satoshis; coinsToSend1 = coinsToSend.divide(new BigInteger(""2"")); coinsToSend2 = coinsToSend.subtract(coinsToSend1); return true; "," content.append("" <li>""); content.append(current.getClassName()).append('#'); content.append(current.getMethodName().replaceFirst(""<"", ""&lt;"")).append("": ""); content.append(current.getLineNumber()); "
1," log.debug(""Generating TopLevelElement""); String name = elem.getName(); if (isMaxDepthReached(elemTrace, name)) { log.error(""Cycle detected (elements), maxdepth reached""); log.debug(""{"," log.debug(""Generating TopLevelElement""); String XXXXX = elem.getName(); if (isMaxDepthReached(elemTrace, XXXXX)) { log.error(""Cycle detected (elements), maxdepth reached""); log.debug(""{"
1, ResourceBundle bundle = null; if (ourBundle != null) bundle = ourBundle.get(); if (bundle == null) { bundle = ResourceBundle.getBundle(BUNDLE); ourBundle = new SoftReference<ResourceBundle>(bundle); , ResourceBundle XXXXX = null; if (ourBundle != null) XXXXX = ourBundle.get(); if (XXXXX == null) { XXXXX = ResourceBundle.getBundle(BUNDLE); ourBundle = new SoftReference<ResourceBundle>(XXXXX); 
1, return new ChangeListener() { @Override public void entityChanged(ChangeEvent event) { final UniqueId beforeId = event.getBeforeId(); if (beforeId != null) { cleanCaches(beforeId); , return new ChangeListener() { @Override public void entityChanged(ChangeEvent event) { final UniqueId XXXXX = event.getBeforeId(); if (XXXXX != null) { cleanCaches(XXXXX); 
0, if (isPatternFilter()) { String targetId= getTargetId(); if (targetId == null) return PATTERN_FILTER_ID_PREFIX + getPattern(); else return targetId + PATTERN_FILTER_ID_PREFIX + getPattern(); ," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (place: ""); result.append(place); result.append(')'); return result.toString(); "
0," if (entity==null) return; ContentType contentType= new ContentType(entity.getContentType(), newUrl); if (contentType.isBinary) { ContentUtils.copyBinary(entity, response); return; "," if ((e.getLastRow() == (getRowCount()-1)) && (e.getType() == TableModelEvent.UPDATE)) { for (int i = 0; i < DEFAULT_TABLE_BLANK_ROWS; i++) { insertRow(getRowCount(), new Object[0]); "
0," System.out.println(""SERVER: ***** Transferring tree""); StringBuilder b = new StringBuilder(); getImage(b, tree.value); System.out.println(""SERVER: The tree was: "" + b + "", returning changed.""); "," final Player player = event.getPlayer(); final PlayerInv inv = itemsDrops.remove(player); if (inv != null && player.isDead()) { itemsOfDeadDisconnected.put(player.getName(), inv); "
1," TreeMap<Long, Integer> inverseDepths = new TreeMap<Long, Integer>(); int graphDepth = depths.size() - 1; for (Long key : depths.keySet()) { inverseDepths.put(key, graphDepth - depths.get(key)); "," TreeMap<Long, Integer> inverseDepths = new TreeMap<Long, Integer>(); int XXXXX = depths.size() - 1; for (Long key : depths.keySet()) { inverseDepths.put(key, XXXXX - depths.get(key)); "
0, this._base = base; this._b = b; this._batchSize = batchSize; this._exceptionCount = exceptionCount; this._exceptionOffset = HEADER_MASK + _b * _batchSize; op = new int[_batchSize]; , handler.destroy(); final ChannelGroupFuture future = ALL_CHANNELS.close(); future.awaitUninterruptibly(); bootstrap.getFactory().releaseExternalResources(); ALL_CHANNELS.clear(); 
1, if(part != null && part == localPart && getHandlerList().containsKey(part)) { getHandlerList().remove(part); localPart.getSite().getPage().removePartListener(this); localPart = null; , if(part != null && part == localPart && getHandlerList().containsKey(part)) { getHandlerList().remove(part); localPart.getSite().getPage().removePartListener(this); localPart = null; 
0, switch (getSkinnable().getSide()) { case TOP: case BOTTOM: return snapSize(getInsets().getLeft()); case RIGHT: case LEFT: return snapSize(getInsets().getTop()); default: return 0; , while(!Thread.interrupted()) { try { QueueingConsumer.Delivery delivery = this.consumer.nextDelivery(); String message = new String(delivery.getBody()); System.out.println(message); 
1," return new ITypeHierarchyService () { public THGraph computeGraph(Scope scope, ICElement input, IProgressMonitor monitor) throws CoreException, InterruptedException { return new THGraph(); "," return new ITypeHierarchyService () { public THGraph computeGraph(Scope scope, ICElement input, IProgressMonitor monitor) throws CoreException, InterruptedException { return new THGraph(); "
0," final IWorkbenchWindow window = PlatformUI.getWorkbench().getActiveWorkbenchWindow(); try { PlatformUI.getWorkbench().showPerspective(IProfileUIConstants.ID_PERSPECTIVE, window); "," defaultTasks.push(task); if (LOG.isLoggable(Level.FINE)) { LOG.fine(""Task \"""" + taskId + ""\"" produced unnamed pipe stored at level "" + defaultTasks.size() + "" in the default pipe stack.""); "
1, this.drawHandle = drawHandle; this.foreground = foreground; this.disabledForeground = disabledForeground; this.upperAccent = upperAccent; this.setAntialiasing(false); this.setCacheable(false); , this.drawHandle = drawHandle; this.foreground = foreground; this.disabledForeground = disabledForeground; this.upperAccent = upperAccent; this.setAntialiasing(false); this.setCacheable(false); 
1, final int prime = 31; int result = 1; result = prime * result + ((firstId == null) ? 0 : firstId.hashCode()); result = prime * result + ((tablebs == null) ? 0 : tablebs.hashCode()); return result; , final int XXXXX = 31; int XXXXX = 1; XXXXX = XXXXX * XXXXX + ((firstId == null) ? 0 : firstId.hashCode()); XXXXX = XXXXX * XXXXX + ((tablebs == null) ? 0 : tablebs.hashCode()); return XXXXX; 
0," button.addClickHandler(new ClickHandler() { @Override public void onClick(ClickEvent event) { sendMessage(getDisplay().getTextBox().getValue()); getDisplay().getTextBox().setValue(""""); ", if (obj instanceof Args) { Args other = (Args) obj; if (other.args.length == args.length) { for (int i = 0; i < args.length; i++) { if (!args[i].equals(other.args[i])) { return false; 
0," super(); setNeedsProgressMonitor( true ); if( ! this.shellDirectory.mkdir()) PetalsComponentsPlugin.log( ""Could not create the temporary folder for the script."", IStatus.ERROR ); "," Model m = ModelFactory.createDefaultModel(); Resource r = m.createResource(); r.addLiteral( RDF.value, 1.0f ); assertEquals( m.createTypedLiteral( 1.0f ), r.getProperty( RDF.value ).getLiteral() ); "
0, switch (qryattupd) { case CodePoint.QRYRDO: return java.sql.ResultSet.CONCUR_READ_ONLY; case CodePoint.QRYUPD: return java.sql.ResultSet.CONCUR_UPDATABLE; default: return defaultConcurrency; ," validRowCheck(row, true); int ar = getAggregatedRow(row, member); if ( ar >= 0 ) { m_aggregated.removeRow(ar); fireTableEvent(row, row, EventConstants.ALL_COLUMNS, EventConstants.UPDATE); "
1," if (SanityManager.DEBUG) { StringBuffer sb = new StringBuffer(); for( Iterator it = grantees.iterator(); it.hasNext();) { if( sb.length() > 0) sb.append( "",""); sb.append( it.next().toString()); "," if (SanityManager.DEBUG) { StringBuffer sb = new StringBuffer(); for( Iterator it = grantees.iterator(); it.hasNext();) { if( sb.length() > 0) sb.append( "",""); sb.append( it.next().toString()); "
1, switch(persistence) { case Key: { String stKey = StringUtils.toString(action.getActionObject(getRecordPropertyName())); Object[] key = action.getRecordKeyFromString(stKey); loadRecord(key); , switch(persistence) { case Key: { String XXXXX = StringUtils.toString(action.getActionObject(getRecordPropertyName())); Object[] key = action.getRecordKeyFromString(XXXXX); loadRecord(key); 
1," String address = url + ""/administration""; AdministrationService service = new AdministrationService(address); Administration admin = service.getAdministrationPort(); return admin; "," String XXXXX = url + ""/XXXXXistration""; AdministrationService XXXXX = new AdministrationService(XXXXX); Administration XXXXX = XXXXX.getAdministrationPort(); return XXXXX; "
0, if (GbeanRef.class.isInstance(anItem) || JAXBElement.class.isInstance(anItem)) { getObjectContainer().remove(anItem); JAXBModelUtils.getGbeanRefs(getRootElement()).remove(anItem); ," m_props = props; m_rootapp = new JRootApp(); if (m_rootapp.initApp(m_props)) { if (""true"".equals(props.getProperty(""machine.uniqueinstance""))) { try { m_instmanager = new InstanceManager(this); "
1," ProjectArtifactMetadata m = (ProjectArtifactMetadata) metadata; if ( !m.file.equals( file ) ) { throw new IllegalStateException( ""Cannot add two different pieces of metadata for: "" + getKey() ); "," ProjectArtifactMetadata XXXXX = (ProjectArtifactMetadata) XXXXXetadata; if ( !XXXXX.file.equals( file ) ) { throw new IllegalStateException( ""Cannot add two different pieces of XXXXXetadata for: "" + getKey() ); "
1," List<Node> nodes = doc.findAllByClassName(""reviewer""); if (nodes.size() > 0) { Node node0 = nodes.get(0); addBNodeProperty( node0, rev, vREVIEW.reviewer, getBlankNodeFor(node0) ); "," List<Node> nodes = doc.findAllByClassName(""reviewer""); if (nodes.size() > 0) { Node XXXXX = nodes.get(0); addBNodeProperty( XXXXX, rev, vREVIEW.reviewer, getBlankNodeFor(XXXXX) ); "
1," menu.clear(); MenuItem populate = menu.add(0, POPULATE, 0, R.string.populate_anthology_titles); populate.setIcon(android.R.drawable.ic_menu_add); return super.onPrepareOptionsMenu(menu); "," menu.clear(); MenuItem XXXXX = menu.add(0, POPULATE, 0, R.string.XXXXX_anthology_titles); XXXXX.setIcon(android.R.drawable.ic_menu_add); return super.onPrepareOptionsMenu(menu); "
0," Object key = new Object(); Object value = new Object(); keyValueStore.get( key, new TestInstanceCreator( value ) ); Object removed = keyValueStore.remove( key ); assertSame( value, removed ); ", if ((runAtStartupCheckBox.isSelected() || minimizeButton.isSelected()) && OSUtils.supportsTray()) return displaySystemTrayIcon != true; else return displaySystemTrayIcon != false; 
1, MatrixVectorView r = (MatrixVectorView) super.clone(); r.matrix = matrix.clone(); r.row = row; r.column = column; r.rowStride = rowStride; r.columnStride = columnStride; return r; , MatXXXXXixVectoXXXXXView XXXXX = (MatXXXXXixVectoXXXXXView) supeXXXXX.clone(); XXXXX.matXXXXXix = matXXXXXix.clone(); XXXXX.XXXXXow = XXXXXow; XXXXX.column = column; XXXXX.XXXXXowStXXXXXide = XXXXXowStXXXXXide; XXXXX.columnStXXXXXide = columnStXXXXXide; XXXXXetuXXXXXn XXXXX; 
1," ParameterMetadata value = parameterMetadataCache.get( query ); if ( value == null ) { value = buildParameterMetadata( query ); parameterMetadataCache.putIfAbsent( query, value ); "," ParameterMetadata XXXXX = parameterMetadataCache.get( query ); if ( XXXXX == null ) { XXXXX = buildParameterMetadata( query ); parameterMetadataCache.putIfAbsent( query, XXXXX ); "
0," return getStyleFactory().linePlacement( guiOffset.create(), guiInitial.create(), guiGap.create(), guiRepetead.isSelected(), guiAligned.isSelected(), guiGeneralized.isSelected() ); "," AttributeSet as = sc.createSmallAttributeSet(sc.getEmptySet()); assertTrue(as instanceof SmallAttributeSet); assertEquals(0, as.getAttributeCount()); assertEquals(sc.getEmptySet(), as); "
0," makeResourcesVisible(this.solrConfig.getResourceLoader(), new String[] {MontySolrSetup.getMontySolrHome() + ""/contrib/examples/adsabs/solr/conf"", MontySolrSetup.getSolrHome() + ""/example/solr/conf"" ", try { persistenceFactory = PersistenceFactory.getInstance(axisConfig); serviceGroupFilePM = persistenceFactory.getServiceGroupFilePM(); moduleFilePM = persistenceFactory.getModuleFilePM(); 
0," if (!RailsPlugin.hasRailsNature(project)) { MessageDialog.openError(Display.getCurrent().getActiveShell(), ""Not a Rails project"", ""Selected project is not a Rails project""); return; "," if ( this.wrapText != -1 ) return com.nary.util.string.wrap( content, this.wrapText, false ); else if ( wrap != -1 ) return com.nary.util.string.wrap( content, wrap, false ); else return content; "
1," String msgId = exchange.hasOut() ? exchange.getOut().getMessageId() : exchange.getIn().getMessageId(); return ""(MessageId: "" + msgId + "" on ExchangeId: "" + exchange.getExchangeId() + "")""; "," String XXXXX = exchange.hasOut() ? exchange.getOut().getMessageId() : exchange.getIn().getMessageId(); return ""(MessageId: "" + XXXXX + "" on ExchangeId: "" + exchange.getExchangeId() + "")""; "
0, int manifestVersion = BundlePluginBase.getBundleManifestVersion(bundle); return (manifestVersion < 2) ? ICoreConstants.PACKAGE_SPECIFICATION_VERSION : Constants.VERSION_ATTRIBUTE; ," String predicate = J2JHelper.getURIResourceNamespace(object, f); Statement st = getStatement(subject, predicate, position); if (st != null) { object = URI.create(st.getObject().toString()); "
0," final Query q = SessionManager.getNamedQuery(""description.getTranslations.byLocale""); q.setString(""locale"", language.getCode()); q.setEntity(""this"", this); return (DaoTranslation) q.uniqueResult(); ", TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(Expando523LatestTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; 
1, ErrorContextBuilder builder = new ErrorContextBuilder(); builder.allWorkToBeDone( queue ); builder.errorThatOccurred( e ); resources.getErrorHandler().handle( builder.createErrorContext() ); , ErrorContextBuilder XXXXX = new ErrorContextBuilder(); XXXXX.allWorkToBeDone( queue ); XXXXX.errorThatOccurred( e ); resources.getErrorHandler().handle( XXXXX.createErrorContext() ); 
1," Bundle aaprovider1 = getBundle(symbolicName); assertNotNull(aaprovider1); assertEquals(""Bundle with symbolic name "" + symbolicName + "" is not active."", Bundle.ACTIVE, aaprovider1.getState()); "," Bundle XXXXX = getBundle(symbolicName); assertNotNull(XXXXX); assertEquals(""Bundle with symbolic name "" + symbolicName + "" is not active."", Bundle.ACTIVE, XXXXX.getState()); "
0, if (framesCache == null) { final List list = new ArrayList(0); if (jthread != null) { JavaVFrame jvf = jthread.getLastJavaVFrameDbg(); while (jvf != null) { list.add(jvf); jvf = jvf.javaSender(); , if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; CoreLocalVirtualFile that = (CoreLocalVirtualFile)o; return myIoFile.equals(that.myIoFile); 
0," try { if (m_gridConfig.getClientFeedback() == null) { log.info(""No feedback handler set, using DefaultClientFeedback""); m_gridConfig.setClientFeedback(new DefaultClientFeedback()); ", if ((options & START_TRANSIENT) == 0) { setPersistentlyStarted(true); boolean activationPolicyUsed = (options & START_ACTIVATION_POLICY) != 0; setBundleActivationPolicyUsed(activationPolicyUsed); 
1," list.add(""foo1""); list.add(""foo2""); assertEquals(2, list.size()); template.sendBody(""direct:removevalue"", ""foo1""); assertEquals(1, list.size()); assertEquals(""foo2"", list.get(0)); "," list.add(""foo1""); list.add(""foo2""); assertEquals(2, list.size()); template.sendBody(""direct:removevalue"", ""foo1""); assertEquals(1, list.size()); assertEquals(""foo2"", list.get(0)); "
1," int trackId = -1; Cursor track = null; try { ContentResolver resolver = this.getContentResolver(); track = resolver.query( Tracks.CONTENT_URI, new String[] { ""max("" + Tracks._ID + "")"", Tracks.NAME, "," int trackId = -1; Cursor track = null; try { ContentResolver resolver = this.getContentResolver(); track = resolver.query( Tracks.CONTENT_URI, new String[] { ""max("" + Tracks._ID + "")"", Tracks.NAME, "
1, if ((_myControl == null) && (!_destroyed)) { ORBManager.getPOA().objectIsReady(this); _myControl = com.arjuna.ArjunaOTS.ActionControlHelper.narrow(ORBManager.getPOA().corbaReference(this)); , if ((_myControl == null) && (!_destroyed)) { ORBManager.getPOA().objectIsReady(this); _myControl = com.arjuna.ArjunaOTS.ActionControlHelper.narrow(ORBManager.getPOA().corbaReference(this)); 
1, AppWidgetManager appWidgetManager = AppWidgetManager.getInstance(context); int[] appWidgetIds = appWidgetManager.getAppWidgetIds(THIS_APPWIDGET); return (appWidgetIds.length > 0); , AppWidgetManager XXXXX = AppWidgetManager.getInstance(context); int[] appWidgetIds = XXXXX.getAppWidgetIds(THIS_APPWIDGET); return (appWidgetIds.length > 0); 
0, fEntryKind = entryKind; fPath = path; fOrginalPath = newElement ? null : path; fResource = res; fIsExported = false; fIsMissing = false; fCachedEntry = null; fParentContainer = parent; ," final TreeItem item = ( TreeItem )widget; String value = WidgetLCAUtil.readPropertyValue( widget, ""checked"" ); if( value != null ) { item.setChecked( Boolean.valueOf( value ).booleanValue() ); "
0, if(mainActivity == null) throw new RuntimeException(__msg1); if(applicationPackage == null) throw new RuntimeException(__msg2); if(adb == null) throw new RuntimeException(__msg3); ," List<TimepointElement> timepoints = timepointsByStanox.get(stanox); if (timepoints == null) { timepoints = new ArrayList<TimepointElement>(); timepointsByStanox.put(stanox, timepoints); "
0," search.getConfig().experimental = true;; processEpdFile(this.getClass().getResourceAsStream(""/wacnew.epd""), 5000); int solved1 = getSolved(); logger.debug(""Config1 = "" + solved1); ", SubListReadData data = read; if (data.data != list.getData()) { list.lock.lock(); try { data = read; if (data.data != list.getData()) { throw new ConcurrentModificationException(); 
0," String out = ""Image: '"" + imageName + ""' Imp: '"" + imp + ""' Offset: (""; for (int i = 0; i < offset.length; i++) { if (i < offset.length - 1) out += offset[i] + "", ""; else out += offset[i] + "")""; ", active = true; switch (e.getKeyCode()) { case KeyEvent.VK_COMMA: if (1 < imp.getCurrentSlice()) { imp.setSlice(imp.getCurrentSlice() - 1); imp.setRoi(ph[imp.getCurrentSlice() - 1]); updateStatus(); 
0," Event e = null; Cursor c = mDb.query(EVENT_TABLE_NAME, null, KEY_EVENT_DEVICE_ID + ""=? AND "" + KEY_EVENT_PLUGIN_ID + ""=?"", new String[]{String.valueOf(deviceId), String.valueOf(pluginId)"," log.error(Simulator.getFormattedTime(Simulator.getCurrentTime()) + "" "" + skyNetNode.getSkyNetNodeInfo().getTransInfo().getNetId() .toString() + "" ----NO CHANCE TO LOOKUP PARENTCOORDINATOR----""); "
1," super(field, tree, treeNode, controller); JPanel desc = new DescriptionTextArea(field, tree, treeNode, controller); initialize(); descriptionPanel.add(desc, BorderLayout.CENTER); "," super(field, tree, treeNode, controller); JPanel XXXXX = new DescriptionTextArea(field, tree, treeNode, controller); initialize(); XXXXXriptionPanel.add(XXXXX, BorderLayout.CENTER); "
0, assert elem.getTagName().equalsIgnoreCase(TAG_THEAD) || elem.getTagName().equalsIgnoreCase(TAG_TFOOT) || elem.getTagName().equalsIgnoreCase(TAG_TBODY); return (TableSectionElement) elem; ," String oldTitle = title; title = newTitle; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, XhtmlPackage.XHTML_SAMP_TYPE__TITLE, oldTitle, title)); "
1," path = Activator.getDefault().getPreferenceStore().getString( PreferenceConstants.P_PATH); if ((path != null) && (path.length() > 0)) { workspaceHadoop.setText(""Use default Hadoop""); "," path = Activator.getDefault().getPreferenceStore().getString( PreferenceConstants.P_PATH); if ((path != null) && (path.length() > 0)) { workspaceHadoop.setText(""Use default Hadoop""); "
1," this._timestamp = -1; this._responseTime = -1; this._totalResponseTime = -1; this._numObservations = -1; this._operationName = """"; this._operationRequest = """"; this._generatedDuring = """"; "," this._timestamp = -1; this._responseTime = -1; this._totalResponseTime = -1; this._numObservations = -1; this._operationName = """"; this._operationRequest = """"; this._generatedDuring = """"; "
1," MenuInflater inflater = getMenuInflater(); boolean qr_scanner_installed = false; try { getPackageManager().getPackageInfo(""com.google.zxing.client.android"", 0); qr_scanner_installed = true; "," MenuInflater inflater = getMenuInflater(); boolean qr_scanner_installed = false; try { getPackageManager().getPackageInfo(""com.google.zxing.client.android"", 0); qr_scanner_installed = true; "
1, int ret = 0; Collection<ConcurrentHClientPool> pools = connectionManager.getActivePools(); for (ConcurrentHClientPool concurrentHClientPool : pools) { ret += concurrentHClientPool.getNumIdle(); , int XXXXX = 0; Collection<ConcurrentHClientPool> pools = connectionManager.getActivePools(); for (ConcurrentHClientPool concurrentHClientPool : pools) { XXXXX += concurrentHClientPool.getNumIdle(); 
0," consoleProcess_.writeStandardInput( input, new VoidServerRequestCallback() { @Override public void onError(ServerError error) { outputWriter_.consoleWriteError(error.getUserMessage()); "," if ((interactionUnderway && !iOwnInteraction) || (!modifiersMatch(e, mods))) { if (press) { interactionUnderway = true; iOwnInteraction = false; ManipManager.getManipManager().mousePressed(e); "
1," if (model instanceof IAnnotationModelExtension) { IAnnotationModelExtension ame= (IAnnotationModelExtension) model; ame.replaceAnnotations(new Annotation[0], annotationToPositionMap); "," if (model instanceof IAnnotationModelExtension) { IAnnotationModelExtension ame= (IAnnotationModelExtension) model; ame.replaceAnnotations(new Annotation[0], annotationToPositionMap); "
0, switch (featureID) { case Wps10Package.SUPPORTED_UO_MS_TYPE__DEFAULT: setDefault((DefaultType1)null); return; case Wps10Package.SUPPORTED_UO_MS_TYPE__SUPPORTED: setSupported((UOMsType)null); return; , switch (getDBType(em)) { case db2: assertLockTestSQLs(Select + tableLfName + Where + DB2Lock); break; case oracle: case derby: default: assertLockTestSQLs(Select + tableLfName + Where + ForUpdate); 
1," BadResponse response = new BadRequest.Builder(getContext(), ""/stop/1_29261.xml"").build().call(); assertNotNull(response); assertEquals(ObaApi.OBA_INTERNAL_ERROR, response.getCode()); "," BadResponse XXXXX = new BadRequest.Builder(getContext(), ""/stop/1_29261.xml"").build().call(); assertNotNull(XXXXX); assertEquals(ObaApi.OBA_INTERNAL_ERROR, XXXXX.getCode()); "
1, double x = this.y() * b.z() - this.z() * b.y(); double y = this.z() * b.x() - this.x() * b.z(); double z = this.x() * b.y() - this.y() * b.x(); return Math.sqrt(x * x + y * y + z * z); , double XXXXX = this.XXXXX() * b.XXXXX() - this.XXXXX() * b.XXXXX(); double XXXXX = this.XXXXX() * b.XXXXX() - this.XXXXX() * b.XXXXX(); double XXXXX = this.XXXXX() * b.XXXXX() - this.XXXXX() * b.XXXXX(); return Math.sqrt(XXXXX * XXXXX + XXXXX * XXXXX + XXXXX * XXXXX); 
0," int iHandle = secondFederate.quickRegister( ""ObjectRoot.A.B"" ); try { secondFederate.rtiamb.localDeleteObjectInstance( getObjectHandle(iHandle) ); expectedException( FederateOwnsAttributes.class ); ", if (item instanceof IUPackage) return patternMatcher.matches(((IUPackage) item).getId()); else if (item instanceof IInstallableUnit) return isIUMatch((IInstallableUnit) item); return false; 
1," final FileType fileType = file.getFileType(); return file.isDirectory() || (super.isFileVisible(file, showHiddenFiles) && FileAssociationsManager.XML_FILES_LIST.contains(fileType)); "," final FileType fileType = file.getFileType(); return file.isDirectory() || (super.isFileVisible(file, showHiddenFiles) && FileAssociationsManager.XML_FILES_LIST.contains(fileType)); "
0, IModelElement parent = field.getParent(); if (parent instanceof IType) { RecordTypeDef typeDef = (RecordTypeDef) getTypeDef((IType) parent); return typeDef.getFields().get(field.getElementName()); , IResourceDelta delta= e.getDelta(); if (delta != null && fResource != null) { IResourceDelta child= delta.findMember(fResource.getFullPath()); if (child != null) update(child.getMarkerDeltas()); 
0, switch (featureID) { case TraceabilityPackage.MODEL_FILE__INPUT_ELEMENTS: getInputElements().clear(); getInputElements().addAll((Collection<? extends InputElement>)newValue); return; ," switch (dataFormat.getTypeFor(mediaType)) { case XML: return new XMLSource(stream); case TEXT: return new TextualSource(stream); default: throw new IllegalStateException(""Unsupported data format!""); "
1," final Bundle extras = new Bundle(); if (mItineraryCastCount == UNKNOWN_COUNT || (mItineraryCastCount != mCastAdapter.getCount())){ extras.putBoolean(ContentResolver.SYNC_EXTRAS_EXPEDITED, true); "," final Bundle XXXXX = new Bundle(); if (mItineraryCastCount == UNKNOWN_COUNT || (mItineraryCastCount != mCastAdapter.getCount())){ XXXXX.putBoolean(ContentResolver.SYNC_EXTRAS_EXPEDITED, true); "
0," boolean oldInitial = initial; initial = newInitial; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, Aadl2Package.MODE__INITIAL, oldInitial, initial)); ", this.objectTypeId = objectTypeId; this.objectId = objectId; this.actionId = actionId; this.actionDatetime = new Date(System.currentTimeMillis()); this.userId = userId; this.sessionId = sessionId; 
1, final PacketBuilder builder = new PacketBuilder(); builder.writeAsShort(ServerPacketOpcode.SUMMON_HINT.getValue()); builder.writeAsByte(summon ? 1 : 0); return builder.getPacket(); , final PacketBuilder XXXXX = new PacketBuilder(); XXXXX.writeAsShort(ServerPacketOpcode.SUMMON_HINT.getValue()); XXXXX.writeAsByte(summon ? 1 : 0); return XXXXX.getPacket(); 
0, if( rhs instanceof SentUpdate ) { SentUpdate r = (SentUpdate)rhs; return r.intermediary.equals(intermediary) && r.receiver.equals(receiver) && r.time_sent == time_sent && r.attempts == attempts; , super.applyComponentOrientation(o); if ( popupMenu != null ) { int ncomponents = getMenuComponentCount(); for (int i = 0 ; i < ncomponents ; ++i) { getMenuComponent(i).applyComponentOrientation(o); 
1, final LocalNodeJobInvoker invoker = new LocalNodeJobInvoker(); _invoker = null; invoker.addNode(new TestCalculationNode()); assertTrue(invoker.notifyWhenAvailable(_register)); assertNull(_invoker); , final LocalNodeJobInvoker XXXXX = new LocalNodeJobInvoker(); _XXXXX = null; XXXXX.addNode(new TestCalculationNode()); assertTrue(XXXXX.notifyWhenAvailable(_register)); assertNull(_XXXXX); 
1, BufferedReader buf = FileUtilities.getReader( f ); try { String line; StringBuilder response = new StringBuilder(); while ( ( line = buf.readLine() ) != null ) { response.append( line ); , BufferedReader XXXXX = FileUtilities.getReader( f ); try { String line; StringBuilder XXXXX = new StringBuilder(); while ( ( line = XXXXX.readLine() ) != null ) { XXXXX.append( line ); 
0," List<Tuple> tuples = MiniApi.from(cat, data) .list(new QTuple(cat.name, cat.birthdate)); for (Tuple tuple : tuples){ assertNotNull(tuple.get(cat.name)); assertNotNull(tuple.get(cat.birthdate)); "," SimpleDateFormat sdf = new SimpleDateFormat(""EEE, d MMM yyyy HH:mm:ss Z""); Date date = Calendar.getInstance().getTime(); return ""BUG device resource created on "" + sdf.format(date) + "".""; "
0, int result = data != null ? data.hashCode() : 0; result = 31 * result + (type != null ? type.hashCode() : 0); result = 31 * result + (dataType != null ? dataType.hashCode() : 0); return result; ," Factory factory = new Factory(); ArrayList<String> params = new ArrayList<String>(); assertEquals(factory.createOperator(params).getClass(), new AlternativeOperator().getClass()); "
1," Calendar expires = Calendar.getInstance(); expires.add(Calendar.MINUTE, 1); AdminToken token = new AdminToken(""SomeToken"", expires); assertTrue(""Token should be valid"", token.isValid()); "," Calendar XXXXX = Calendar.getInstance(); XXXXX.add(Calendar.MINUTE, 1); AdminToken XXXXX = new AdminToken(""SomeToken"", XXXXX); assertTrue(""Token should be valid"", XXXXX.isValid()); "
1, this.delegate = delegate; properties.setGrammarEngine(this); properties.setSyntaxEngine(syntaxEngine); properties.setAntlrEngine(antlrEngine); antlrEngine.setGrammarEngine(this); , this.delegate = delegate; properties.setGrammarEngine(this); properties.setSyntaxEngine(syntaxEngine); properties.setAntlrEngine(antlrEngine); antlrEngine.setGrammarEngine(this); 
0, this.id = id; this.nome = nome; this.dataSelectivas = dataSelectivas; this.dataQuartasDeFinal = dataQuartasDeFinal; this.dataSemifinais = dataSemifinais; this.dataFinal = dataFinal; , assert source != null; assert name != null; String key = keyFor(name); for (DocumentAttributeDTO attr : source.getAttributes()) { if (key.equals(attr.getName())) { return attr.getValue(); 
1, int numCorrespondences = 0; for ( final Bead bead : view.getBeadStructure().getBeadList() ) numCorrespondences += bead.getRANSACCorrespondence().size(); return numCorrespondences; , int numCorrespondences = 0; for ( final Bead bead : view.getBeadStructure().getBeadList() ) numCorrespondences += bead.getRANSACCorrespondence().size(); return numCorrespondences; 
0," deleteUserLink.click(); Alert alert = driver.switchTo().alert(); assertEquals(""Delete user?"", alert.getText()); try { Thread.sleep(AbstractTest.LOAD_SHORT_TIMEOUT_SECONDS * 1000); "," Settings mavenSettings = new MavenSettingsBuilder().buildDefaultSettings(); Assert.assertTrue(""Profile in user settings not found"", mavenSettings.getProfilesAsMap().containsKey(""user-profile"")); "
0," CollectionStringBuffer buf = new CollectionStringBuffer(""#""); assertEquals(""#"", buf.getSeparator()); buf.append(""foo""); buf.append(""bar""); assertEquals(""foo#bar"", buf.toString()); ", int dimensions = 300; String dimensionsProp = properties.getProperty(LPCS_DIMENSIONS_PROPERTY); if (dimensionsProp != null) { try { dimensions = Integer.parseInt(dimensionsProp); 
1," try { File dataFolder = Resource.RESOURCES.getFile(); if(!dataFolder.exists() && !dataFolder.mkdirs()) { throw new ExtractException(""ERROR Resource folder could not be created!""); "," try { File XXXXX = Resource.RESOURCES.getFile(); if(!XXXXX.exists() && !XXXXX.mkdirs()) { throw new ExtractException(""ERROR Resource folder could not be created!""); "
1, return UMLPackage.eINSTANCE.getNamedElement_Name().equals(feature) || UMLPackage.eINSTANCE.getAcceptEventAction_Trigger().equals(feature) || UMLPackage.eINSTANCE.getTrigger_Event().equals(feature); , return UMLPackage.eINSTANCE.getNamedElement_Name().equals(feature) || UMLPackage.eINSTANCE.getAcceptEventAction_Trigger().equals(feature) || UMLPackage.eINSTANCE.getTrigger_Event().equals(feature); 
1," Collection<Long> list = Arrays.asList(1L, 3L); NotificationBatch sut = new NotificationBatch(TYPE, list); Collection<Long> result = sut.getRecipients().get(TYPE); assertEquals(list, result); "," Collection<Long> list = Arrays.asList(1L, 3L); NotificationBatch XXXXX = new NotificationBatch(TYPE, list); Collection<Long> result = XXXXX.getRecipients().get(TYPE); assertEquals(list, result); "
1," if (entry != null) { setTextAndDescription(entry, Messages.ContextEntryHelper_2_xfld, Messages.ContextEntryHelper_3_xfld); entry.setIconId(IPlatformImageConstants.IMG_EDIT_REMOVE); "," if (entry != null) { setTextAndDescription(entry, Messages.ContextEntryHelper_2_xfld, Messages.ContextEntryHelper_3_xfld); entry.setIconId(IPlatformImageConstants.IMG_EDIT_REMOVE); "
0," assertTrue( SniperSnapshot.joining(""item 1"").isForSameItemAs( SniperSnapshot.joining(""item 1""))); assertFalse( SniperSnapshot.joining(""item 1"").isForSameItemAs( SniperSnapshot.joining(""item 2""))); ", String checkableName = ObjectUtils.toString(value); IStatus status = ComponentNameValidator.isValidComponentNameString(checkableName); if (!status.isOK()) { return status.getMessage(); 
1," String oldColor = color; color = newColor; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_POLYLINE_ELEMENT__COLOR, oldColor, color)); "," String XXXXX = color; color = newColor; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_POLYLINE_ELEMENT__COLOR, XXXXX, color)); "
1," GUIMediator.safeInvokeLater(new Runnable() { public void run() { BTDownload downloader = new TorrentFetcherDownload(uri, relativePath, postPartialDownloadAction); add(downloader); "," GUIMediator.safeInvokeLater(new Runnable() { public void run() { BTDownload XXXXX = new TorrentFetcherDownload(uri, relativePath, postPartialDownloadAction); add(XXXXX); "
1, List<ExpMeta> metadados = new ArrayList<ExpMeta>(); for (int i = 0; i < gridTotais.getModelos().getColumnCount(); i++) { if (gridTotais.getModelos().isHidden(i)) { metadados.add(null); , List<ExpMeta> metadados = new ArrayList<ExpMeta>(); for (int i = 0; i < gridTotais.getModelos().getColumnCount(); i++) { if (gridTotais.getModelos().isHidden(i)) { metadados.add(null); 
1," UUID uuid = UUID.fromString(ref.getSModelId().toString().substring(2)); return new SNodeDescriptor(nodeName, fqName, uuid.getMostSignificantBits(), uuid.getLeastSignificantBits(), id); "," UUID XXXXX = UUID.fromString(ref.getSModelId().toString().substring(2)); return new SNodeDescriptor(nodeName, fqName, XXXXX.getMostSignificantBits(), XXXXX.getLeastSignificantBits(), id); "
1," StringBuilder builder = new StringBuilder(""Queue: ""); List<SessionEvent> events = queue.getAllEvents(); for (SessionEvent event : events) { builder.append(""\n "" + event.getDebugString()); "," StringBuilder builder = new StringBuilder(""Queue: ""); List<SessionEvent> events = queue.getAllEvents(); for (SessionEvent event : events) { builder.append(""\n "" + event.getDebugString()); "
1, boolean result = true; Collection col = fs; if (col != null) { Iterator it = col.iterator(); while (it.hasNext()) { FooService svc = (FooService) it.next(); result = result && svc.foo(); , boolean XXXXX = true; Collection XXXXX = fs; if (XXXXX != null) { Iterator XXXXX = XXXXX.XXXXXerator(); while (XXXXX.hasNext()) { FooService XXXXX = (FooService) XXXXX.next(); XXXXX = XXXXX && XXXXX.foo(); 
1," String value = fMainModuleText.getText().trim(); setAttribute(configuration, Constants.ATTR_LOCATION, value); configuration.setMappedResources(new IResource[] { getMainModuleFile() "," String XXXXX = fMainModuleText.getText().trim(); setAttribute(configuration, Constants.ATTR_LOCATION, XXXXX); configuration.setMappedResources(new IResource[] { getMainModuleFile() "
1," if(selected >= 0 && edit != null){ final Date[] range = map.getCanvas().getController().getTemporalRange(); try{ if(selected == 0){ map.getCanvas().getController().setTemporalRange(edit, range[1]); "," if(selected >= 0 && edit != null){ final Date[] range = map.getCanvas().getController().getTemporalRange(); try{ if(selected == 0){ map.getCanvas().getController().setTemporalRange(edit, range[1]); "
0," StringBuilder sb = new StringBuilder(); sb.append(""{""); if (label != null) sb.append(""Label: "" + label + "", ""); if (datapoints != null) sb.append(""Datapoints: "" + datapoints + "", ""); sb.append(""", if(handler==null) throw new AssertionError(); try { BindInfo result = (BindInfo)handler.getResult(); if(existing!=null) { BindInfo bie = (BindInfo)existing; bie.absorb(result); return bie; 
1," List tasks = parseTasks(""TASK,CHORE"", ALTERNATE_MESSAGE); assertEquals(1, tasks.size()); assertTask(ALTERNATE_MESSAGE_EXPECTED, 1, 1, IMarker.PRIORITY_HIGH, (TaskTag) tasks.get(0)); "," List tasks = parseTasks(""TASK,CHORE"", ALTERNATE_MESSAGE); assertEquals(1, tasks.size()); assertTask(ALTERNATE_MESSAGE_EXPECTED, 1, 1, IMarker.PRIORITY_HIGH, (TaskTag) tasks.get(0)); "
1," Properties result = null; url += CONFIG_FILE; try { if (debug) System.out.print(""Configuration file:\n "" + url.toString()); result = loadProperties(url); if (debug) System.out.println("" loaded""); "," Properties XXXXX = null; url += CONFIG_FILE; try { if (debug) System.out.print(""Configuration file:\n "" + url.toString()); XXXXX = loadProperties(url); if (debug) System.out.println("" loaded""); "
1, if(isSharingElementals() && getOwner() != null) return (int)(getOwner().getDefenseElementValue(defenseAttribute) * sharedElementalsPercent()); return super.getDefenseElementValue(defenseAttribute); , if(isSharingElementals() && getOwner() != null) return (int)(getOwner().getDefenseElementValue(defenseAttribute) * sharedElementalsPercent()); return super.getDefenseElementValue(defenseAttribute); 
1," DialValueIndicator i1 = new DialValueIndicator(0); DialValueIndicator i2 = new DialValueIndicator(0); assertTrue(i1.equals(i2)); int h1 = i1.hashCode(); int h2 = i2.hashCode(); assertEquals(h1, h2); "," DialValueIndicator XXXXX = new DialValueIndicator(0); DialValueIndicator XXXXX = new DialValueIndicator(0); assertTrue(XXXXX.equals(XXXXX)); int XXXXX = XXXXX.hashCode(); int XXXXX = XXXXX.hashCode(); assertEquals(XXXXX, XXXXX); "
1," myTitlePanel = new TitlePanel(HgVcsMessages.message(""hg4idea.init.already.under.hg.title""), HgVcsMessages.message(""hg4idea.init.already.under.hg.description"", mySelectedRoot, myParentRoot)); "," myTitlePanel = new TitlePanel(HgVcsMessages.message(""hg4idea.init.already.under.hg.title""), HgVcsMessages.message(""hg4idea.init.already.under.hg.description"", mySelectedRoot, myParentRoot)); "
0, return new AxisIter() { final AxisIter ch = node.children(); @Override public ANode next() { while(true) { final ANode n = ch.next(); if(n == null || n.type == NodeType.ELM) return n; ," GD.cf_gm = false; GD.cf_cts = 0; GD.cf_lm = """"; GD.cf_lp = """"; GD.cf_lmt = 0L; GD.cf_ttmf += 5L; Bukkit.broadcastMessage(Settings.prefix + ChatColor.GREEN + ""Chat has been unmuted!""); "
0," StringWriter sw = new StringWriter(); PrintWriter pw = new PrintWriter(sw); Throwable l = e.getCause(); e.printStackTrace(pw); if (l != null) { pw.println(""\n Caused by \n""); l.printStackTrace(pw); ", IHealthReport healthReport = createHealthReport(); healthReport.setHealth(hudsonHealthReport.getScore()); healthReport.setDescription(hudsonHealthReport.getDescription()); return healthReport; 
1, if (current.eResource() != null && current.eResource().getResourceSet() != null) this.resourceSet = current.eResource().getResourceSet(); singleSampleForFlatReferencesTable.setInput(settings); , if (current.eResource() != null && current.eResource().getResourceSet() != null) this.resourceSet = current.eResource().getResourceSet(); singleSampleForFlatReferencesTable.setInput(settings); 
1, if (newFocusedWidget != focusedWidget) { FIBWidgetView oldFocusedWidget = focusedWidget; focusedWidget = newFocusedWidget; if (oldFocusedWidget != null) { oldFocusedWidget.getJComponent().repaint(); , if (newFocusedWidget != focusedWidget) { FIBWidgetView XXXXX = focusedWidget; focusedWidget = newFocusedWidget; if (XXXXX != null) { XXXXX.getJComponent().repaint(); 
1, short data[]; int offsets[]; offsets = db1.getOffsets(); for(int i = 0; i < db1.getNumBanks(); i++){ data = db1.getData(i); for(int j = 0; j < size; j++){ data[offsets[i] + j] = (short) j; , short data[]; XXXXXnt offsets[]; offsets = db1.getOffsets(); for(XXXXXnt XXXXX = 0; XXXXX < db1.getNumBanks(); XXXXX++){ data = db1.getData(XXXXX); for(XXXXXnt XXXXX = 0; XXXXX < sXXXXXze; XXXXX++){ data[offsets[XXXXX] + XXXXX] = (short) XXXXX; 
1," try { Mongo mongoDDBB = new Mongo(mongoHost , mongoPort); DB db = mongoDDBB.getDB(mongoDB); DBCollection collection = db.getCollection(mongoCollection); collection.remove(new BasicDBObject()); "," try { Mongo XXXXX = new Mongo(mongoHost , mongoPort); DB XXXXX = XXXXX.getDB(mongoDB); DBCollection XXXXX = XXXXX.getCollection(mongoCollection); XXXXX.remove(new BasicDBObject()); "
1," this.debugger = debugger; if (!DEBUGGING) { if (Assert.ASSERTS_ENABLED) { Assert.that(debugger.hasConsole(), ""should not create a DebuggerConsolePanel for non-console debuggers""); "," this.debugger = debugger; if (!DEBUGGING) { if (Assert.ASSERTS_ENABLED) { Assert.that(debugger.hasConsole(), ""should not create a DebuggerConsolePanel for non-console debuggers""); "
0, if(this == other) return true; if(other == null) return false; if(!other.getClass().equals(getClass())) return false; HBaseTarget o = (HBaseTarget)other; return table.equals(o.table); ," final StringBuilder sb = new StringBuilder(); sb.append(""MetadataValue""); sb.append(""{value="").append(value); sb.append("", name="").append(name); sb.append("", language="").append(language); sb.append('"
0," this.servicePanel.setLayout( new BorderLayout() ); JLabel descLabel = new JLabel(ActiveARPProtectionServiceView.EXPLANATION); this.servicePanel.add(descLabel, BorderLayout.CENTER); "," CoordMatrix result = GgbMatrixOrVector(getRows(),getColumns()); for(int i=1;i<=result.getRows();i++){ for(int j=1;j<=result.getColumns();j++){ result.set(i,j,get(i,j)+m.get(i,j)); "
0, if ( src instanceof WrappedStructureSource ) { WrappedStructureSource wss = (WrappedStructureSource) src; while ( wss != null ) { if ( wss.getType( ) == type ) { return wss.getSource( ); ," GerritNotifier notifier = NotificationFactory.getInstance() .createGerritNotifier((IGerritHudsonTriggerConfig)getConfig(), this); notifier.buildCompleted(memoryImprint, listener); "
0," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (content: ""); result.append(content); result.append(')'); return result.toString(); "," mTestUtility = new DbTestUtility(getContext()); createApplication(); mApplication = getApplication(); if(mApplication == null){ throw(new RuntimeException(""Unable to create main application"")); "
1," super(model); setEnabled(false); setName(""Save As Protocol""); setDescription(""Save an Experiment file as a Protocol.""); setIcon(IconManager.SAVE_ICON); model.registerBrowserListener(this); "," super(model); setEnabled(false); setName(""Save As Protocol""); setDescription(""Save an Experiment file as a Protocol.""); setIcon(IconManager.SAVE_ICON); model.registerBrowserListener(this); "
0, StringBuffer buf = new StringBuffer(); boolean special = false; for (int i = 0; i < text.length(); i++) { char nc = text.charAt(i); if (nc == '&') { if (special) { buf.append('&'); special = false; ," super.onActivityCreated(savedInstanceState); Log.d(TAG, ""onActivityCreated""); String startUpUrl = getResources().getString(dataUrlResource); if (mActivity == null) { mActivity = getActivity(); "
0, double totalWeight = getTotalWeight(); return Math.sqrt((totalWeightedSquaredData * totalWeight - totalWeightedData * totalWeightedData) / (totalWeight * totalWeight - totalSquaredWeight)); ," binder.bindConstant().annotatedWith(Names.named(""SERVICE"")).to(entry.getKey()); for (TweakedModule tweakedModule : tweakedModules) { binder.install(tweakedModule.getServiceModule(serviceConfig)); "
0, String code = error.getErrorCode( ); try { os.write( code.getBytes( ) ); for ( int i = code.length( ); i < 60; i++ ) os.write( ' ' ); os.write( error.getMessage( ).getBytes( ) ); os.write( '\n' ); ," if(value == inst.getEObject() && !inst.isConsumed()) return null; switch(index) { case 0: return new ParenExpr_ParenExprAction_1(lastRuleCallOrigin, next, actIndex, consumed); default: return null; "
1," try { String location = container.getLocation(resolved); styledString.append("" - "", StyledString.DECORATIONS_STYLER); styledString.append(location, StyledString.DECORATIONS_STYLER); "," try { String XXXXX = container.getLocation(resolved); styledString.append("" - "", StyledString.DECORATIONS_STYLER); styledString.append(XXXXX, StyledString.DECORATIONS_STYLER); "
1," String scheme = ""{'type': 'record', 'name': 'call', "" + ""'namespace': 'interdroid.context.sensor.call',"" + ""\n'fields': ["" + SCHEMA_TIMESTAMP_FIELDS + ""\n{'name': '"" + STATE_FIELD + ""', 'type': 'int'"," String XXXXX = ""{'type': 'record', 'name': 'call', "" + ""'namespace': 'interdroid.context.sensor.call',"" + ""\n'fields': ["" + SCHEMA_TIMESTAMP_FIELDS + ""\n{'name': '"" + STATE_FIELD + ""', 'type': 'int'"
0, switch (featureID) { case FXBeanPackage.MAP_TYPE_DEF__KEY_TYPE: setKeyType((JvmTypeReference)null); return; case FXBeanPackage.MAP_TYPE_DEF__VALUE_TYPE: setValueType((JvmTypeReference)null); return; ," Subject subject = userIdentity == null? defaultSubject: userIdentity.getSubject(); Callers callers = ContextManager.getCallers(); ContextManager.setCallers(subject, subject); return callers; "
1," int pos=getNearestParticipantIndex(x, diagram); Role ret=null; java.util.List roles=diagram.getScenario().getRole(); if (roles.size() > 0) { if (pos < 0) { ret = (Role)roles.get(0); "," int pos=getNearestParticipantIndex(x, diagram); Role ret=null; java.util.List roles=diagram.getScenario().getRole(); if (roles.size() > 0) { if (pos < 0) { ret = (Role)roles.get(0); "
0, AFKWorker.getInstance().removePlayer(player); fakeQuitPlayers.remove(player); playersForReplyMessage.remove(player); spyPlayers.remove(player); InvisibleWorker.getInstance().onQuitEvent(player); , long imagePixels = abs(requestedHeight) * abs(requestedWidth); long imageSizeBits = imagePixels * imageInfo.getBitsPerPixel(); return imageSizeBits > config.getMaxInMemoryBytes() * BITS_PER_BYTE; 
1, this.actionName = opInfo.getName(); signature = new String[opInfo.getSignature().length]; int i = 0; for (MBeanParameterInfo param: opInfo.getSignature()) { signature[i++] = param.getType(); , thXXXXXs.actXXXXXonName = opInfo.getName(); sXXXXXgnature = new StrXXXXXng[opInfo.getSXXXXXgnature().length]; XXXXXnt XXXXX = 0; for (MBeanParameterInfo param: opInfo.getSXXXXXgnature()) { sXXXXXgnature[XXXXX++] = param.getType(); 
1," super(FieldEditorPreferencePage.GRID); VimPlugin plugin = VimPlugin.getDefault(); setPreferenceStore(plugin.getPreferenceStore()); setDescription(plugin.getMessage(""preferences.description"")); "," super(FieldEditorPreferencePage.GRID); VimPlugin plugin = VimPlugin.getDefault(); setPreferenceStore(plugin.getPreferenceStore()); setDescription(plugin.getMessage(""preferences.description"")); "
0, for (WeightedItem<E> item : theData) { E wiElement = item.getElement(); if (wiElement == null && element == null || wiElement != null && wiElement.equals(element)) { return true; , Button acceptButton = getAcceptButton(); ImageButton acceptImageButton = getAcceptImageButton(); if (acceptButton != null) { acceptButton.setOnClickListener(onAcceptButtonClickedListener); 
1," System.out.println(""Word ""+this.getId()+"" : "" + this.game.getWordToComplete().getCurrentSubword()); System.out.println(""Deck ""+this.getId()+"" : ""+this.game.getDeck().getLetters()); "," System.out.println(""Word ""+this.getId()+"" : "" + this.game.getWordToComplete().getCurrentSubword()); System.out.println(""Deck ""+this.getId()+"" : ""+this.game.getDeck().getLetters()); "
0," c = c.add(ul().inv()); if((c.x < 0) || (c.y < 0) || (c.x >= img.sz.x) || (c.y >= img.sz.y)) return(false); int cl = img.img.getRGB(c.x, c.y); return(Utils.rgbm.getAlpha(cl) >= 128); "," HttpServletRequest request = HDIVUtil.getHttpServletRequest(); String action = ""/testAction.do""; String result = this.formUrlProcessor.processUrl(request, action); assertEquals(action, result); "
1, AdapterFactoryLabelProvider labelProvider = new AdapterFactoryLabelProvider(adapterFactory); if (object instanceof EObject) { switch (columnIndex) { case 0: return labelProvider.getText(object); , AdapterFactoryLabelProvider XXXXX = new AdapterFactoryLabelProvider(adapterFactory); if (object instanceof EObject) { switch (columnIndex) { case 0: return XXXXX.getText(object); 
1, final boolean[] changed = new boolean[1]; IMemoryRenderingBindingsListener listener = new IMemoryRenderingBindingsListener() { public void memoryRenderingBindingsChanged() { changed[0] = true; , final boolean[] changed = new boolean[1]; IMemoryRenderingBindingsListener XXXXX = new IMemoryRenderingBindingsListener() { public void memoryRenderingBindingsChanged() { changed[0] = true; 
1," try { schedule(config, new CronTrigger(application, null, flowPurgeSchedule), application); setFlowPurgeScheduled(true); LOG.info(""Scheduled purge job for application "" + application); "," try { schedule(config, new CronTrigger(application, null, flowPurgeSchedule), application); setFlowPurgeScheduled(true); LOG.info(""Scheduled purge job for application "" + application); "
0, ServiceCalendarDate calendarDate = new ServiceCalendarDate(); calendarDate.setServiceId(serviceId); calendarDate.setDate(date); calendarDate.setExceptionType(exceptionType); return calendarDate; ," resultsPane = new InfinitestResultsPane(); mainFrame = new InfinitestMainFrame(resultsPane, new InfinitestLogPane()); cellRenderer = (FailureCellRenderer) resultsPane.getTree().getCellRenderer(); "
1, DitContentRule copy = new DitContentRule( oid ); copy.copy( this ); copy.auxObjectClassOids = new ArrayList<String>(); for ( String oid : auxObjectClassOids ) { copy.auxObjectClassOids.add( oid ); , DitContentRule XXXXX = new DitContentRule( oid ); XXXXX.XXXXX( this ); XXXXX.auxObjectClassOids = new ArrayList<String>(); for ( String oid : auxObjectClassOids ) { XXXXX.auxObjectClassOids.add( oid ); 
1," File prefs = MinecraftEnvironment.getXrayConfigFile(); try { xray_properties.store(new FileOutputStream(prefs), ""Feel free to edit. Use \""NONE\"" to disable an action. Keys taken from http: "," File XXXXX = MinecraftEnvironment.getXrayConfigFile(); try { xray_properties.store(new FileOutputStream(XXXXX), ""Feel free to edit. Use \""NONE\"" to disable an action. Keys taken from http: "
1, ResourceBundle bundle = null; if (ourBundle != null) bundle = ourBundle.get(); if (bundle == null) { bundle = ResourceBundle.getBundle(BUNDLE); ourBundle = new SoftReference<ResourceBundle>(bundle); , ResourceBundle XXXXX = null; if (ourBundle != null) XXXXX = ourBundle.get(); if (XXXXX == null) { XXXXX = ResourceBundle.getBundle(BUNDLE); ourBundle = new SoftReference<ResourceBundle>(XXXXX); 
0, switch (featureID) { case Wcs111Package.COVERAGE_DESCRIPTIONS_TYPE__COVERAGE_DESCRIPTION: getCoverageDescription().clear(); getCoverageDescription().addAll((Collection)newValue); return; ," IASTNodeAdapter<? extends SimpleNode> bestClassScope = null; for (IClassDefAdapter classScope : getClasses()) { if (isSelectionInAdapter(selection, classScope)) { bestClassScope = classScope; "
0," for (GraphicableEmergency renderEmergency : ui.getEmergencies().values()) { g.drawAnimation(renderEmergency.getAnimation(), renderEmergency.getPolygon().getX(), renderEmergency.getPolygon().getY()); "," final Parameters params = new Parameters(); showProgressHandler.sendEmptyMessage(0); gettingViewstate = true; attempts++; try { if (StringUtils.isNotBlank(guid)) { params.put(""wid"", guid); "
0," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; "," if (realmDomain.startsWith(""*."")) { realmDomain = realmDomain.substring(1).toLowerCase(); returnToDomain = ""."" + returnToDomain.toLowerCase(); return returnToDomain.endsWith(realmDomain); "
1," return s.replaceAll(""\""|\\a|\\e|\\f|\\v"", """") .replaceAll(""&"", ""&amp;"") .replaceAll(""'"", ""&apos;"") .replaceAll(""<"", ""&lt;"") .replaceAll("">"", ""&gt;"") .replaceAll(""\\s+"", "" "") .trim(); "," return s.replaceAll(""\""|\\a|\\e|\\f|\\v"", """") .replaceAll(""&"", ""&amp;"") .replaceAll(""'"", ""&apos;"") .replaceAll(""<"", ""&lt;"") .replaceAll("">"", ""&gt;"") .replaceAll(""\\s+"", "" "") .trim(); "
0," StatusItem item = mStatusItems.get(which); int oldStatus = mPresence.getStatus(); if (item.getStatus() != oldStatus) { updatePresence(item.getStatus(), item.getText().toString()); "," if (this.usePattern && this.layoutNode2Type != null) { final Type t = this.layoutNode2Type.get(ln); if (t != null) { if (this.getLayoutPatternForType(t, ""frozen_node"") != null) { return true; "
1, this.intStackSlots = intStackSlots; this.floatStackSlots = floatStackSlots; this.longStackSlots = longStackSlots; this.doubleStackSlots = doubleStackSlots; this.refStackSlots = refStackSlots; , this.intStackSlots = intStackSlots; this.floatStackSlots = floatStackSlots; this.longStackSlots = longStackSlots; this.doubleStackSlots = doubleStackSlots; this.refStackSlots = refStackSlots; 
0, for (int i = 0; i < contentLoadingObservers.size(); i++) { ContentLoadingObserver observer = (ContentLoadingObserver) contentLoadingObservers.get(i); observer.dropIndex(collection); , componentName = normalizeComponentName(componentName); if (!pullServices.containsKey(componentName)) { WebxComponent component; if (componentName == null) { component = getCurrentComponent(); 
0," mWindowIdToWindowTokenMap.remove(windowId); mWindowIdToInteractionConnectionWrapperMap.remove(windowId); if (DEBUG) { Slog.i(LOG_TAG, ""Removing interaction connection to windowId: "" + windowId); "," String inputNumber = ""034-56&+#234""; String expectedOutput = ""03456234""; assertEquals(""Conversion did not correctly remove punctuation"", expectedOutput, PhoneNumberUtil.normalize(inputNumber)); "
0," return ""ContainerRecord [getName()="" + getName() + "", getUuid()="" + getUuid() + "", getPicture()="" + getPicture() + "", getDescription()="" + getDescription() + "", deepCopy()="" + deepCopy() + ""]""; ", if (configs == null) { int i = 1; int num = getNumConfigs(screen); GraphicsConfiguration[] ret = new GraphicsConfiguration[num]; if (defaultConfig == null) { ret [0] = getDefaultConfiguration(); 
0," AbstractCodeTO result = null; final String methodName = ReferenceDataClient.SAVE_REFERENCE_DATA; try { beforeWebMethod(methodName, refDataTO); result = getPort().saveReferenceData(refDataTO); "," StubDefaultFileMarkerHandler handler = new StubDefaultFileMarkerHandler( artifacts.get( 0 ), this.outputFolder ); try { handler.setMarker(); fail( ""Expected an Exception here"" ); "
0," IConfigurationElement config = element.getConfigurationElement(); String value = config.getAttribute(name); if (value == null) return null; return new Boolean(value.equalsIgnoreCase(""true"")); "," super(""Hound"", ""1/1 green Hound creature token""); cardType.add(CardType.CREATURE); subtype.add(""Hound""); color = ObjectColor.GREEN; power = new MageInt(1); toughness = new MageInt(1); "
0, if (skipSubHits) return; for (Iterator subHitFilterI = hitFilters.iterator(); subHitFilterI.hasNext();) { BlastLikeSearchFilter sf = (BlastLikeSearchFilter) subHitFilterI.next(); sf.reset(); ," Random msgGen = new Random(); StringBuilder sb = new StringBuilder(); for (int x = 0; x < thisMsg.length(); x++) { if ((Math.abs(msgGen.nextInt() % 6) == 0) && (x > 4)) { sb.append(""#""); "
1," ITextView descriptionView = view.addTextView(getResources().getString(""VirtueFlaw.Description.Name""), 30, 3); textualPresentation.initView(descriptionView, virtueFlaw.getDescription()); "," ITextView XXXXX = view.addTextView(getResources().getString(""VirtueFlaw.Description.Name""), 30, 3); textualPresentation.initView(XXXXX, virtueFlaw.getDescription()); "
1, final int prime = 31; int result = 1; result = prime * result + ((message == null) ? 0 : message.hashCode()); result = prime * result + ((stack == null) ? 0 : stack.hashCode()); return result; , final int XXXXX = 31; int XXXXX = 1; XXXXX = XXXXX * XXXXX + ((message == null) ? 0 : message.hashCode()); XXXXX = XXXXX * XXXXX + ((stack == null) ? 0 : stack.hashCode()); return XXXXX; 
1," IRubyElement element = (IRubyElement)owner; IResource resource = element.getResource(); return new Buffer( resource instanceof IFile ? (IFile)resource : null, owner, element.isReadOnly()); "," IRubyElement XXXXX = (IRubyElement)owner; IResource XXXXX = XXXXX.getResource(); return new Buffer( XXXXX instanceof IFile ? (IFile)XXXXX : null, owner, XXXXX.isReadOnly()); "
1," List<String> badCookieDomains = ImmutableList.of(""co.uk"", ""foo"", ""com""); for (String domain : badCookieDomains) { try { InternetDomainName.from(domain).topPrivateDomain(); fail(domain); "," List<String> badCookieDomains = ImmutableList.of(""co.uk"", ""foo"", ""com""); for (String domain : badCookieDomains) { try { InternetDomainName.from(domain).topPrivateDomain(); fail(domain); "
0," DownloadBag messages = new DownloadBag(Arrays.asList(new Message(""abc1""), new Message(""abc2"")), 42); JsonElement actual = jsonElement(messages); assertThat(actual).isEqualTo(jsonParse(TEST_JSON)); "," ReputationDAO db = ReputationDAO.get(); try { if( db.is_duplicate_update(r.receipt) ) { logger.warning(""Seemingly a replay attack (or retransmit due to loss) from receipt: "" + r); "
0," StringBuilder buffer = new StringBuilder(); buffer.append(""typeof(""); buffer.append(this.getChildNodes().get(0).toExpressionString()); buffer.append(')'); return buffer.toString(); "," StringDeclaration result = new StringDeclaration(); assertNotNull(result); String string = ""[declaration] string[""; assertEquals(string, result.toString().substring(0, string.length())); "
1," int rows = tableModel.getRowCount(); int columns = tableModel.getColumnCount(); for (int c = 0; c < columns; ++c) { for (int r = 0; r < rows; ++r) { tableModel.setValueAt(null, r, c); "," int XXXXX = tableModel.getRowCount(); int XXXXX = tableModel.getColumnCount(); foXXXXX (int XXXXX = 0; XXXXX < XXXXX; ++XXXXX) { foXXXXX (int XXXXX = 0; XXXXX < XXXXX; ++XXXXX) { tableModel.setValueAt(null, XXXXX, XXXXX); "
0," if (Window.confirm(""Changes would be applied after a restart. Do you want to do it now ?"")) { presenter.getDeploymentManager().restartServiceProvider(serviceProvider.getServiceProvider()); ", int result = data != null ? data.hashCode() : 0; result = 31 * result + (type != null ? type.hashCode() : 0); result = 31 * result + (dataType != null ? dataType.hashCode() : 0); return result; 
0," addView(inflate(getContext(), R.layout.dataapp_progress, null)); tvProgressApp = (TextView) findViewById(R.id.tvProgressApp); tvProgressCount = (TextView) findViewById(R.id.tvProgressCount); "," List<RolapMember> list = Collections.singletonList(parent); boolean exclude = false; addMemberConstraint( sqlQuery, baseCube, aggStar, list, restrictMemberTypes, false, exclude); "
1," LocatorImpl l = new LocatorImpl(); assertEquals(null, l.getPublicId()); assertEquals(null, l.getSystemId()); assertEquals(0, l.getLineNumber()); assertEquals(0, l.getColumnNumber()); "," LocatorImpl l = new LocatorImpl(); assertEquals(null, l.getPublicId()); assertEquals(null, l.getSystemId()); assertEquals(0, l.getLineNumber()); assertEquals(0, l.getColumnNumber()); "
0, JMenu menu = new JMenu(getName()); SystemAction[] grouped = grouped(); for (int i = 0; i < grouped.length; i++) { SystemAction action = grouped[i]; if (action == null) { menu.addSeparator(); ," String path = file.getPath(); if (path.startsWith(storagePath)) { path = path.substring(storagePath.length()); path = StringUtils.replace(path, File.separator, ""/""); return uriPrefix + path; "
0," Boolean old = new Boolean(this.displayLabel); this.displayLabel = displayLabel; setChanged(); notifyObservers(new IEDataModification(""displayLabel"", old, new Boolean(displayLabel))); ", final int prime = 17; int result = 1; result = prime * result + ((imageId == null) ? 0 : imageId.hashCode()); result = prime * result + ((vmId == null) ? 0 : vmId.hashCode()); return result; 
1, Project project = task.getProject(); ProjectProfile projectProfile = buildProfile.getProjectProfile(project); projectProfile.getTaskProfile(task).setStart(timeProvider.getCurrentTime()); , Project XXXXX = task.getProject(); ProjectProfile XXXXXProfile = buildProfile.getProjectProfile(XXXXX); XXXXXProfile.getTaskProfile(task).setStart(timeProvider.getCurrentTime()); 
0," super(); this.setLayout(new BorderLayout()); this.add(panelPack(buildLinuxBrowserLaunch()), BorderLayout.NORTH); this.add(panelPack(buildOverridePreference()), BorderLayout.CENTER); "," DebugThis = false ; id = (counter++) ; if ( DebugThis && log.isDebugEnabled() ) log.debug(""open: [""+id+""]""+filename) ; this.filename = filename ; channel = ChannelManager.acquire(filename, mode) ; "
0," final Cursor cursor; if ("""".equals(mLocale)) { cursor = context.getContentResolver().query(UserDictionary.Words.CONTENT_URI, HAS_WORD_PROJECTION, HAS_WORD_SELECTION_ALL_LOCALES, new String[] { word "," String oldStyle = style; style = newStyle; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, XhtmlPackage.XHTML_CITE_TYPE__STYLE, oldStyle, style)); "
1," TimestampAnnotation o = getAnnotation( TimestampAnnotation.class, timestampAnnotationIndex); return o != null? new Timestamp( new java.sql.Date(o.getTimeValue().getValue())) : null; "," TimestampAnnXXXXXtatiXXXXXn XXXXX = getAnnXXXXXtatiXXXXXn( TimestampAnnXXXXXtatiXXXXXn.class, timestampAnnXXXXXtatiXXXXXnIndex); return XXXXX != null? new Timestamp( new java.sql.Date(XXXXX.getTimeValue().getValue())) : null; "
1, return new CodecDescriptor() { public <T extends SimpleContents<?>> Documenter<T> details( String bufferReference) { return new Documenter<T>() { public void document(T target) { , return new CodecDescriptor() { public <T extends SimpleContents<?>> Documenter<T> details( String bufferReference) { return new Documenter<T>() { public void document(T target) { 
1, List children = getChildren(parent); if (children != null) { for (Object o : children) { o = XmlUtils.unwrap(o); this.apply(o); if (this.shouldTraverse(o)) { walkJAXBElements(o); , List XXXXX = getChildren(parent); if (XXXXX != null) { for (Object o : XXXXX) { o = XmlUtils.unwrap(o); this.apply(o); if (this.shouldTraverse(o)) { walkJAXBElements(o); 
0," return new Entry( ""method"", doc.qualifiedName() + doc.signature(), ""Method "" + doc.qualifiedName() + doc.signature(), content(), ""class:"" + doc.containingClass().qualifiedName()); ", progressEntity += count; if (progress != null && progressEntity > moduleProgress && !progress.isIndeterminate()) { try { progressEntity = 0; progress.remaining(stream.available()); 
0," rolledback = true; committed = false; if (lateDeliveries != null) { for (Pair<PageSubscription, PagePosition> pos : lateDeliveries) { pos.getA().lateDeliveryRollback(pos.getB()); "," String label = ((AbstractToolEntry)object).getTitle(); return label == null || label.length() == 0 ? getString(""_UI_AbstractToolEntry_type"") : getString(""_UI_AbstractToolEntry_type"") + "" "" + label; "
0," int counter = 0; for (Map.Entry<SimulatorParameterizedOption, SimulatorParameter<?>> entry : parameters.entrySet()) { if (this.parameterHasDefaultValue(entry.getKey())) { continue; "," EverytrailLoginResponse response = userLogin(username, password); log.info(response.getStatus() + "":"" + response.getValue()); if (response.getStatus().equals(""error"")) { return false; "
1," for (IModule sm : modules) { StringBuilder errorMessages = checkModule(sm); if (errorMessages.length() > 0) { errors.add(""Error in module "" + sm.getModuleFqName() + "": "" + errorMessages.toString()); "," for (IModule sm : modules) { StringBuilder XXXXX = checkModule(sm); if (XXXXX.length() > 0) { errors.add(""Error in module "" + sm.getModuleFqName() + "": "" + XXXXX.toString()); "
0," Connection c = (Connection)session.getAttribute( ""irc"" ); log.log( Level.SEVERE , ""error when dealing with: "" + c , cause ); if ( c != null ) _context.connectionClosed( c ); session.close(true); "," IApplicationRegistry instance = _instance.getAndSet(null); try { if (instance != null) { if (_logger.isInfoEnabled()) { _logger.info(""Shutting down ApplicationRegistry("" + instance + "")""); "
1," if (fName == null) { StringBuffer buf = new StringBuffer(); buf.append(""[""); buf.append(fOffset); buf.append(""...""); buf.append(fOffset + fLength - 1); buf.append(""]""); fName = buf.toString(); "," if (fName == null) { StringBuffer XXXXX = new StringBuffer(); XXXXX.append(""[""); XXXXX.append(fOffset); XXXXX.append(""...""); XXXXX.append(fOffset + fLength - 1); XXXXX.append(""]""); fName = XXXXX.toString(); "
0," return findUnique(""from OnmsMonitoredService as svc "" + ""where svc.ipInterface.node.id = ? and svc.ipInterface.ipAddress = ? and svc.serviceType.id = ?"", nodeId, ipAddr, serviceId); "," StringBuilder sb = new StringBuilder(); sb.append(""{""); if (options != null) sb.append(""Options: "" + options + "", ""); if (status != null) sb.append(""Status: "" + status + "", ""); sb.append("""
1, Transferable content = null; for (Transferable trf : CopyPasteManagerEx.getInstanceEx().getAllContents()) { if (trf != null && trf.isDataFlavorSupported(DataFlavor.stringFlavor)) { content = trf; , Transferable XXXXX = null; for (Transferable trf : CopyPasteManagerEx.getInstanceEx().getAllContents()) { if (trf != null && trf.isDataFlavorSupported(DataFlavor.stringFlavor)) { XXXXX = trf; 
1," IAccessManagement port = null; try { URL SOAP_URL = new URL(""http: AccessManagement service = new AccessManagementLocator(); port = service.getBasicHttpBinding_IAccessManagement(SOAP_URL); "," IAccessManagement port = null; try { URL SOAP_URL = new URL(""http: AccessManagement service = new AccessManagementLocator(); port = service.getBasicHttpBinding_IAccessManagement(SOAP_URL); "
0, assertFalse(this.configurableService.isConfigurable(this.nodeRef)); this.configurableService.makeConfigurable(this.nodeRef); assertTrue(this.configurableService.isConfigurable(this.nodeRef)); ," List<Header> headers = new ArrayList<Header>(); headers.add(new RestData.Header(""Content-Type"", ""blah/blah"")); assertEquals(ContentType.typeFor(""default""), ContentType.parse(headers)); "
1," QName oldName = name; name = newName; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, Fes20Package.EXTENSION_OPERATOR_TYPE__NAME, oldName, name)); "," QName XXXXX = name; name = newName; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, Fes20Package.EXTENSION_OPERATOR_TYPE__NAME, XXXXX, name)); "
1," LapTimer timer = new LapTimer(name, null, this.lapHistorySize); LapTimer.pushThreadTimerAndStart(timer); this.add(timer); timer.setRemotable(this.remotable); timer.start(); return timer; "," LapTimer XXXXX = new LapTimer(name, null, this.lapHistorySize); LapTimer.pushThreadTimerAndStart(XXXXX); this.add(XXXXX); XXXXX.setRemotable(this.remotable); XXXXX.start(); return XXXXX; "
0, switch (_vizstyle) { case PartitionGraphViewer.MULTI_CIRCLE: vizMultiCircle(g); break; case PartitionGraphViewer.ONE_CIRCLE: vizOneCircle(g); break; default: vizMultiCircle(g); break; , if (project.isDisposed()) return; ToolWindowManager.getInstance(project).invokeLater(new Runnable() { public void run() { if (project.isDisposed()) return; new TipDialog().show(); 
1, IAction qualifyElements = new ShowQualifiedNamesAction(this); manager.add(qualifyElements); fillActions(manager); manager.add(new Separator(IWorkbenchActionConstants.MB_ADDITIONS)); , IAction XXXXX = new ShowQualifiedNamesAction(this); manager.add(XXXXX); fillActions(manager); manager.add(new Separator(IWorkbenchActionConstants.MB_ADDITIONS)); 
0," List<Integer> l = new SmartList<Integer>(); l.add(new Integer(1)); l.add(new Integer(2)); assertEquals(2, l.size()); assertEquals(1, l.get(0).intValue()); assertEquals(2, l.get(1).intValue()); ", TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(SampleGroovyTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; 
1," for (ExpectedHashCode expected : expectedHashCodes) { if (expected.bytes.length == 8) { HashCode fromLong = HashCodes.fromLong(expected.asLong); assertExpectedHashCode(expected, fromLong); "," for (ExpectedHashCode expected : expectedHashCodes) { if (expected.bytes.length == 8) { HashCode XXXXX = HashCodes.XXXXX(expected.asLong); assertExpectedHashCode(expected, XXXXX); "
1," TreeEntity entity = new TreeEntity( cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), cursor.isNull(offset + 1) ? null : cursor.getLong(offset + 1) ); return entity; "," TreeEntity XXXXX = new TreeEntity( cursor.isNull(offset + 0) ? null : cursor.getLong(offset + 0), cursor.isNull(offset + 1) ? null : cursor.getLong(offset + 1) ); return XXXXX; "
1," String s = ""keytool.exe -dname \""CN=www.sahi.co.in, OU=Sahi\""""; String[] commandTokens = Utils.getCommandTokens(s); for (int i=0; i<commandTokens.length; i++){ System.out.println(commandTokens[i]); "," String XXXXX = ""keytool.exe -dname \""CN=www.XXXXXahi.co.in, OU=Sahi\""""; String[] commandTokenXXXXX = UtilXXXXX.getCommandTokenXXXXX(XXXXX); for (int i=0; i<commandTokenXXXXX.length; i++){ SyXXXXXtem.out.println(commandTokenXXXXX[i]); "
0," if (!classes.contains(ontClass)) { classes.add(ontClass); for (Iterator it = ontClass.listSubClasses(); it.hasNext();) { OntClass subClass = (OntClass) it.next(); addSubClasses(classes, subClass); "," final Node<T> node = myRoot.findRelative(key, true, myInterner); assert node != null; final boolean mappingExisted = node.mappingExists(); node.setValue(value); if (!mappingExisted) { mySize++; "
0," pool.returnCompiledXQuery(stringSource, preCompiledXQuery); StringSource localStringSource = new StringSource(TEST_XQUERY_SOURCE); callAndTestBorrowCompiledXQuery(localStringSource); "," this.xpath = node.getAttributes().getNamedItem(""xpath"").getNodeValue(); Node nd = node.getAttributes().getNamedItem(""fail-msg""); if (nd != null) { this.failureMessage = nd.getNodeValue(); "
0, if (fDefinition == NOT_INITIALIZED) { FindDefinitionAction action = new FindDefinitionAction(); IASTNode node = CPPVisitor.getContainingBlockItem(getADeclaration()).getParent(); node.accept(action); , if (module instanceof RestModule) { ((RestModule) module).addRestAction(SolrUpdateHandlerRestAction.class); ((RestModule) module).addRestAction(SolrSearchHandlerRestAction.class); 
1," final float centerX = view1.getWidth() / 2.0f; final float centerY = view1.getHeight() / 2.0f; Flip3dAnimation rotation; if (mIsFirstView) { rotation = new Flip3dAnimation(-90, 0, centerX, centerY); "," final float centerX = view1.getWidth() / 2.0f; final float centerY = view1.getHeight() / 2.0f; Flip3dAnimation rotation; if (mIsFirstView) { rotation = new Flip3dAnimation(-90, 0, centerX, centerY); "
0," AttachmentId aId = entity.getId(); attachments.put(aId, entity); if (attachmentIds.get(aId.getDocumentId()) == null) { attachmentIds.put(aId.getDocumentId(), new HashSet<AttachmentId>()); ", this.constraints.add(new Integer(parameter)); this.constraints.add(new Integer(direction)); this.constraints.add(new Double(boundary)); this.numberOfAddedConstraints++; this.constraintsAdded = true; 
1," LoanSummaryEntity loanSummary = loan.getLoanSummary(); loanSummary.setOriginalPrincipal(new Money(currency, ""300.0"")); loanSummary.setOriginalInterest(new Money(currency, ""36.0"")); "," LoanSummaryEntity XXXXX = loan.getLoanSummary(); XXXXX.setOriginalPrincipal(new Money(currency, ""300.0"")); XXXXX.setOriginalInterest(new Money(currency, ""36.0"")); "
1," String imageUrl = tbtn.getToggledPressedImageUrl(); if (imageUrl == null) return getDefaultToggledImagePressedUrl(context); else return Resources.applicationURL(context, imageUrl); "," String imageUrl = tbtn.getToggledPressedImageUrl(); if (imageUrl == null) return getDefaultToggledImagePressedUrl(context); else return Resources.applicationURL(context, imageUrl); "
0, for (Element el : XmlUtils.getChildElements((Element) node)) { BeanDefinitionDecorator decorator = decorators.get(XmlUtils.getLocalName(el)); if (decorator == null) { decorator = defaultDecorator; ," try { AttributeHandleSet ahs = defaultFederate.createAHS( baHandle ); defaultFederate.rtiamb.attributeOwnershipReleaseResponse( theObject, ahs ); expectedException( AttributeNotOwned.class ); "
0," editorCell.setAction(CellActionType.INSERT_BEFORE, new forbid_Insert.forbid_Insert_INSERT_BEFORE(node)); editorCell.setAction(CellActionType.INSERT, new forbid_Insert.forbid_Insert_INSERT(node)); "," Document doc = Document.get(); Element div = doc.getElementById(""wrapperDiv""); if (div == null) { div = doc.createDivElement(); div.setId(""wrapperDiv""); doc.getBody().appendChild(div); "
1, return ( element instanceof IRubyProject || element instanceof ISourceFolderRoot || element instanceof ISourceFolder || element instanceof IRubyModel || element instanceof IContainer); , return ( element instanceof IRubyProject || element instanceof ISourceFolderRoot || element instanceof ISourceFolder || element instanceof IRubyModel || element instanceof IContainer); 
1," super(vcsContext.getProject(), ""Loading current revision"", true, BackgroundFromStartOption.getInstance()); this.selectedFile = selectedFile; this.vcs = vcs; this.vcsContext = vcsContext; "," super(vcsContext.getProject(), ""Loading current revision"", true, BackgroundFromStartOption.getInstance()); this.selectedFile = selectedFile; this.vcs = vcs; this.vcsContext = vcsContext; "
1," String label = ((ThreadClassifier) object).getName(); return label == null || label.length() == 0 ? getString(""_UI_ThreadClassifier_type"") : getString(""_UI_ThreadClassifier_type"") + "" "" + label; "," String XXXXX = ((ThreadClassifier) object).getName(); return XXXXX == null || XXXXX.length() == 0 ? getString(""_UI_ThreadClassifier_type"") : getString(""_UI_ThreadClassifier_type"") + "" "" + XXXXX; "
0, StringBuffer buf = new StringBuffer(); if ( hiddenTokens!=null ) { for (int i = 0; i < hiddenTokens.size(); i++) { Token hidden = (Token) hiddenTokens.get(i); buf.append(hidden.getText()); , final int prime = 31; int result = 1; result = prime * result + ((_key == null) ? 0 : _key.hashCode()); result = prime * result + ((_value == null) ? 0 : _value.hashCode()); return result; 
1, PrivateMessageDto dto = new PrivateMessageDto(); dto.setBody(pm.getBody()); dto.setTitle(pm.getTitle()); if (pm.getUserTo() != null) { dto.setRecipient(pm.getUserTo().getUsername()); , PrivateMessageDto XXXXX = new PrivateMessageDto(); XXXXX.setBody(pm.getBody()); XXXXX.setTitle(pm.getTitle()); if (pm.getUserTo() != null) { XXXXX.setRecipient(pm.getUserTo().getUsername()); 
1, if (module.getClassLoader() == null) { URL[] nativeLibs = getNativeLibs(module); URL[] dependencyLibs = module.getLibDependencies(); if (dependencyLibs == null) { dependencyLibs = new URL[0]; , if (module.getClassLoader() == null) { URL[] nativeLibs = getNativeLibs(module); URL[] dependencyLibs = module.getLibDependencies(); if (dependencyLibs == null) { dependencyLibs = new URL[0]; 
0," MProduct product = getProduct(); if (QtyOrdered != null && product != null) { int precision = product.getUOMPrecision(); QtyOrdered = QtyOrdered.setScale(precision, BigDecimal.ROUND_HALF_UP); ", boolean result; Node node = m_head; for (int i = m_level; i >= 0; i--) { Node next = node.getForward(i); while (next.getValue() < value) { node = next; next = node.getForward(i); 
0," tag = HTML.Tag.IMPLIED; assertEquals(""p-implied"", tag.toString()); assertFalse(""breaks Flow"", tag.breaksFlow()); assertFalse(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); ", final int PRIME = 31; int result = super.hashCode(); result = PRIME * result + (int) (endDev ^ (endDev >>> 32)); result = PRIME * result + (int) (startDev ^ (startDev >>> 32)); return result; 
1," Intent i = new Intent(); i.setClass(SmsReceivedDialog.this, SmsMessagingDemo.class); i.putExtra(SmsMessagingDemo.SMS_RECIPIENT_EXTRA, mFromAddress); startActivity(i); dialog.dismiss(); finish(); "," Intent XXXXX = new Intent(); XXXXX.setClass(SmsReceXXXXXvedDXXXXXalog.thXXXXXs, SmsMessagXXXXXngDemo.class); XXXXX.putExtra(SmsMessagXXXXXngDemo.SMS_RECIPIENT_EXTRA, mFromAddress); startActXXXXXvXXXXXty(XXXXX); dXXXXXalog.dXXXXXsmXXXXXss(); fXXXXXnXXXXXsh(); "
1," double length = 0; Point2D p0, p1; for (int i = 0 ; i < path.size()-1 ; i++) { p0 = path.get(i).getControlPoint(0); p1 = path.get(i+1).getControlPoint(0); length += p0.distance(p1); "," double XXXXX = 0; PoXXXXXnt2D p0, p1; for (XXXXXnt XXXXX = 0 ; XXXXX < path.sXXXXXze()-1 ; XXXXX++) { p0 = path.get(XXXXX).getControlPoXXXXXnt(0); p1 = path.get(XXXXX+1).getControlPoXXXXXnt(0); XXXXX += p0.dXXXXXstance(p1); "
1," final String s = Schema2XForms.extractPropertyFromAnnotation(NamespaceService.ALFRESCO_URI, ""label"", annotation, resourceBundle); return s != null ? s : this.createCaption(text); "," final String XXXXX = Schema2XFormXXXXX.extractPropertyFromAnnotation(NameXXXXXpaceService.ALFRESCO_URI, ""label"", annotation, reXXXXXourceBundle); return XXXXX != null ? XXXXX : thiXXXXX.createCaption(text); "
0," String line = """"; line += this.poorSignalStrength + "", ""; line += this.attention + "", ""; line += this.meditation + "", ""; for (int i = 0; i < NUM_BANDS; i++) { line += this.getFeatureValue(i) + "", ""; "," return (Boolean)execute(new RedisCallback<Jedis>() { public Object doInRedis(Jedis redis) { if (transaction != null) { return transaction.hexists(redisKey, entryKey).equals(QUEUED); "
1, this.lut = lut; this.component = component; getColorSpace().addListener(this); scaler = lut.getScalers()[component]; scaler.addListener(this); enabled = true; listeners = new EventListenerList(); , this.lut = lut; this.component = component; getColorSpace().addListener(this); scaler = lut.getScalers()[component]; scaler.addListener(this); enabled = true; listeners = new EventListenerList(); 
1," int lastIndexLink = -1; for(int i=0; i<DATABASES.size(); i++) { int index = lastIndexOfIgnoreCase(s, (String)DATABASES.get(i)+"":""); if(index > lastIndexLink) lastIndexLink = index; "," int lastIndexLink = -1; for(int i=0; i<DATABASES.size(); i++) { int index = lastIndexOfIgnoreCase(s, (String)DATABASES.get(i)+"":""); if(index > lastIndexLink) lastIndexLink = index; "
1, this.roadNetwork = roadNetwork; this.nDtOut = input.getNDt(); this.floatingCarVehicleNumbers = input.getFloatingCars(); fileWriter = (writeFileOutput) ? new FileFloatingCars(this) : null; , this.roadNetwork = roadNetwork; this.nDtOut = input.getNDt(); this.floatingCarVehicleNumbers = input.getFloatingCars(); fileWriter = (writeFileOutput) ? new FileFloatingCars(this) : null; 
1," double scale = 0; for (int i = 0; i < numDevices; i++) for (int j = 0; j < numDevices; j++) if (i != j) scale += distanceAdjustment(i, j); scale /= numDevices*(numDevices - 1); return scale; "," double scale = 0; for (int i = 0; i < numDevices; i++) for (int j = 0; j < numDevices; j++) if (i != j) scale += distanceAdjustment(i, j); scale /= numDevices*(numDevices - 1); return scale; "
0, super.create(); if ( browserConnection.getConnection() != null ) { originalReadOnlyFlag = browserConnection.getConnection().isReadOnly(); browserConnection.getConnection().setReadOnly( true ); ," return new MatrixAggregator(build,launcher,listener) { @Override public boolean startBuild() throws InterruptedException, IOException { setDisplayName(build,listener); return super.startBuild(); "
1," if (obj == null) return false; if (getClass() != obj.getClass()) return false; final Entry other = (Entry) obj; if (!Objects.equals(this.str, other.str)) return false; return true; "," if (obj == null) return false; if (getClass() != obj.getClass()) return false; final Entry XXXXX = (Entry) obj; if (!Objects.equals(this.str, XXXXX.str)) return false; return true; "
0," Color chosen = JColorChooser.showDialog(this.m_trigger, ""choose color for "" + this.m_trace.getName(), this.m_trace.getColor()); this.m_lastChosen = chosen; this.m_trace.setColor(chosen); ", HighLowItemLabelGenerator g1 = new HighLowItemLabelGenerator(); HighLowItemLabelGenerator g2 = new HighLowItemLabelGenerator(); assertTrue(g1.equals(g2)); assertTrue(g1.hashCode() == g2.hashCode()); 
1, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(BreadcrumbTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , TestSuite XXXXX = new TestSuite(); XXXXX.addTest(LoginTests.suite()); XXXXX.addTest(BreadcrumbTests.suite()); XXXXX.addTestSuite(StopSeleniumTest.class); return XXXXX; 
1, assertThat(activity.avoidStackOverflowEventHandled).isFalse(); activity.findViewById(R.id.stackOverflowProofButton).performClick(); assertThat(activity.avoidStackOverflowEventHandled).isTrue(); , assertThat(activity.avoidStackOverflowEventHandled).isFalse(); activity.findViewById(R.id.stackOverflowProofButton).performClick(); assertThat(activity.avoidStackOverflowEventHandled).isTrue(); 
1," return new MongoDBQueries().insertData(COL_ACTIVITIES ,dataToInsert, ""Activity created successfully"", MongoPersons.COL_PERSONS ,""pers_id"", JSONValidator.ACTIVITY_SCHEMA).toString(); "," return new MongoDBQueries().insertData(COL_ACTIVITIES ,dataToInsert, ""Activity created successfully"", MongoPersons.COL_PERSONS ,""pers_id"", JSONValidator.ACTIVITY_SCHEMA).toString(); "
0, final Change[] changes = dragBean.getChanges(); for (Change change : getUserObject().getChanges()) { for (Change incomingChange : changes) { if (change == incomingChange) return false; ," try { String namespace = getNamespace(); String activeID = getActiveStateID(); CuboidCopy copy = copyManager.load(world, namespace, activeID); if (!isNewArea && copy.distance(pt) > 4) { return; "
1," final Iterator< DoubleType > sampleIterator = sampleList.iterator(); for ( final DoubleType t : realPointSampleList ) assertTrue( ""Samples differ "", t == sampleIterator.next() ); "," final Iterator< DoubleType > sampleIterator = sampleList.iterator(); for ( final DoubleType t : realPointSampleList ) assertTrue( ""Samples differ "", t == sampleIterator.next() ); "
1, final ArrayList<NetworkBookTree> bookTrees = new ArrayList<NetworkBookTree>(); for (FBTree t : tree.subTrees()) { if (t instanceof NetworkBookTree) { bookTrees.add((NetworkBookTree)t); , final ArrayList<NetworkBookTree> bookTrees = new ArrayList<NetworkBookTree>(); for (FBTree t : tree.subTrees()) { if (t instanceof NetworkBookTree) { bookTrees.add((NetworkBookTree)t); 
1," horizontalScrollCount = horizontalScrollCount > 0 ? horizontalScrollCount + 1 : 1; if (horizontalScrollCount % 5 == 0) { doAction(ChromeArea.SWITCH_TO_NEXT_TAB); Log.d(""scroll right""); "," horizontalScrollCount = horizontalScrollCount > 0 ? horizontalScrollCount + 1 : 1; if (horizontalScrollCount % 5 == 0) { doAction(ChromeArea.SWITCH_TO_NEXT_TAB); Log.d(""scroll right""); "
0, if (mOption == Option.INTERNETAVAIL && mValue.getClass().equals(Integer.class)) { int val = (Integer)mValue; if (val < InternetAvail.values().length) { return InternetAvail.values()[val]; , Point selection= textWidget.getSelection(); try { int startLine= textWidget.getLineAtOffset(selection.x); int endLine= textWidget.getLineAtOffset(selection.y); return startLine != endLine; 
0, int len = precision > Integer.MAX_VALUE || precision == 0 ? Integer.MAX_VALUE : (int) precision; try { if (type == Value.CLOB) { if (small != null) { return StringUtils.utf8Decode(small); , if (isPatternFilter()) { String targetId= getTargetId(); if (targetId == null) return PATTERN_FILTER_ID_PREFIX + getPattern(); else return targetId + PATTERN_FILTER_ID_PREFIX + getPattern(); 
1," return ""ContainerRecord [getName()="" + getName() + "", getUuid()="" + getUuid() + "", getPicture()="" + getPicture() + "", getDescription()="" + getDescription() + "", deepCopy()="" + deepCopy() + ""]""; "," return ""ContainerRecord [getName()="" + getName() + "", getUuid()="" + getUuid() + "", getPicture()="" + getPicture() + "", getDescription()="" + getDescription() + "", deepCopy()="" + deepCopy() + ""]""; "
0," ProjectDescription projectdescription = createCyclicProject(this._sourcepathxml, KIND_MULTIPLESOURCEFOLDERSPRIMARY); execute(projectdescription.getPrimaryProjectname(), ""get-source-path-relative""); "," int index = s.indexOf(','); if (index == -1) return; String in = s.substring(0, index); String out = s.substring(index + 1); vpnStateUpdate(Long.parseLong(in), Long.parseLong(out)); "
1," assertNotNull(new Announcement(""environment"", ""node"", ""pool"", ""location"", ImmutableSet.of( serviceAnnouncement(""foo"") .addProperty(""http"", ""http: .addProperty(""jmx"", ""jmx: .build()) )); "," assertNotNull(new Announcement(""environment"", ""node"", ""pool"", ""location"", ImmutableSet.of( serviceAnnouncement(""foo"") .addProperty(""http"", ""http: .addProperty(""jmx"", ""jmx: .build()) )); "
0," char ch = nextChar(); if (ch == '\\') { RegexpTree t = parseAtom(); if (t instanceof Text) return -((Text) t).getString().charAt( 0 ); throw new SyntaxException( ""not allowed in class"" ); ", Stack<String> paths = new Stack<String>(); paths.push(path); callback.setPaths(paths); callback.enableCallback(); Folder target = findFolder(path); if (target == null) { return lazyLoadPath(path); 
0," String os = System.getProperty(""os.name""); if(os == null || !os.contains(""Windows"")) { _logger.log(POILogger.WARN, ""Skipping testBreakLines(), it is executed only on Windows machines""); return; "," ArrayList<Integer> list = this.getIntegerList(); ArrayList<Integer> results = ArrayListIterate.selectWith(list, Predicates2.instanceOf(), Integer.class); Verify.assertSize(5, results); "
1," fireButtonEvent(ButtonEvent.HIDE_BUTTON, ButtonNames.BACK); fireButtonEvent(ButtonEvent.HIDE_BUTTON, ButtonNames.FINISH); fireButtonEvent(ButtonEvent.ENABLE_BUTTON, ButtonNames.NEXT); "," fireButtonEvent(ButtonEvent.HIDE_BUTTON, ButtonNames.BACK); fireButtonEvent(ButtonEvent.HIDE_BUTTON, ButtonNames.FINISH); fireButtonEvent(ButtonEvent.ENABLE_BUTTON, ButtonNames.NEXT); "
0," String oldCursor = cursor; cursor = newCursor; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_MASK_ELEMENT__CURSOR, oldCursor, cursor)); "," if (DEBUG) Log.d(TAG, ""onPageSelected: position: "" + position); final ActionBar actionBar = getActionBar(); if (mDialpadFragment != null) { if (mDuringSwipe && position == TAB_INDEX_DIALER) { "
1," if (entry != null) { setTextAndDescription(entry, Messages.ContextEntryHelper_0_xfld, Messages.ContextEntryHelper_1_xfld); entry.setIconId(IPlatformImageConstants.IMG_EDIT_REFRESH); "," if (entry != null) { setTextAndDescription(entry, Messages.ContextEntryHelper_0_xfld, Messages.ContextEntryHelper_1_xfld); entry.setIconId(IPlatformImageConstants.IMG_EDIT_REFRESH); "
0," if (small == null && tableId != LobStorage.TABLE_ID_SESSION_VARIABLE) { lobStorage.setTable(lobId, LobStorage.TABLE_ID_SESSION_VARIABLE); tableId = LobStorage.TABLE_ID_SESSION_VARIABLE; "," if (isLiveOrCompiled()) if(!this.getCapability(ALLOW_STRING_WRITE)) throw new CapabilityNotSetException(J3dI18N.getString(""Text3D3"")); ((Text3DRetained)this.retained).setString(string); "
0," String label = ((CloseEditor)object).getName(); return label == null || label.length() == 0 ? getString(""_UI_CloseEditor_type"") : getString(""_UI_CloseEditor_type"") + "" "" + label; "," final Pair pair = new Pair(name, parent); FileInfo info = myInfosByPair.get(pair); if (info == null) { info = new FileInfo(name, parent); myInfosByPair.put(pair, info); myInfosToSave.add(info); "
1," BufferChecks.checkDirect(strings); BufferChecks.checkNullTerminated(strings, count); int __result = nglCreateShaderProgramvEXT2(type, count, MemoryUtil.getAddress(strings)); return __result; "," BufferChecks.checkDirect(strings); BufferChecks.checkNullTerminated(strings, count); int XXXXX = nglCreateShaderProgramvEXT2(type, count, MemoryUtil.getAddress(strings)); return XXXXX; "
1," Logger.trace(""Creating RDF container for Information Element "" + uri); Model model = RDF2Go.getModelFactory().createModel(uri); model.open(); return new RDFContainerImpl(model, uri); "," Logger.trace(""Creating RDF container for Information Element "" + uri); Model XXXXX = RDF2Go.getModelFactory().createModel(uri); XXXXX.open(); return new RDFContainerImpl(XXXXX, uri); "
1, expectation.setMethod(invocation.getInvokedMethod()); if (capturedParameterMatchers.isEmpty()) { expectation.setParametersMatcher(new AllParametersMatcher(invocation.getParametersAsArray())); , expectation.setMethod(invocation.getInvokedMethod()); if (capturedParameterMatchers.isEmpty()) { expectation.setParametersMatcher(new AllParametersMatcher(invocation.getParametersAsArray())); 
1, if (e.getStateChange() == ItemEvent.SELECTED) { if (this.selindex != getSelectedIndex()) { this.treetable.editingStopped(new ChangeEvent(this)); this.selindex = getSelectedIndex(); , if (e.getStateChange() == ItemEvent.SELECTED) { if (this.selindex != getSelectedIndex()) { this.treetable.editingStopped(new ChangeEvent(this)); this.selindex = getSelectedIndex(); 
0," Point min = new ArrayPoint(1f, -0.149f, 129.1f, -591.023f, -8.137f); Point max = new ArrayPoint(10.11f, 5.931f, 251.9f, -0.006f, 2.041f); return new OrthogonalSpaceImpl(min, max, createOdeSystem()); ", ImageView favIV = (ImageView) fav; DBAdapter db = new DBAdapter(context); db.open(); boolean isfav = db.toggleFavorite((String) favIV.getTag()); if(isfav){ favIV.setImageResource(R.drawable.icon); 
0," CheckArg.isNotNull(selectorName, ""selectorName""); CheckArg.isNotNull(path, ""path""); this.selectorName = selectorName; this.path = path; this.hc = HashCode.compute(this.selectorName, this.path); "," double scale = 0; for (int i = 0; i < numDevices; i++) for (int j = 0; j < numDevices; j++) if (i != j) scale += distanceAdjustment(i, j); scale /= numDevices*(numDevices - 1); return scale; "
1," return ShrinkWrap.create(WebArchive.class, ""test.war"") .addClasses(Bridge.class, BridgeBean.class, Config.class, Manager.class, My.class) .addAsWebInfResource(EmptyAsset.INSTANCE, ""beans.xml""); "," return ShrinkWrap.create(WebArchive.class, ""test.war"") .addClasses(Bridge.class, BridgeBean.class, Config.class, Manager.class, My.class) .addAsWebInfResource(EmptyAsset.INSTANCE, ""beans.xml""); "
1," Workspace ws = (Workspace) w; spreadSheet.restoreWorkspace(ws.spreadSheet, context); ganttScrollPane.restoreWorkspace(ws.scrollPane, context); setDividerLocation(ws.dividerLocation); "," Workspace XXXXX = (Workspace) w; spreadSheet.restoreWorkspace(XXXXX.spreadSheet, context); ganttScrollPane.restoreWorkspace(XXXXX.scrollPane, context); setDividerLocation(XXXXX.dividerLocation); "
0," String oldLang = lang; lang = newLang; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, Wps10Package.WPS_CAPABILITIES_TYPE__LANG, oldLang, lang)); "," ensureDiv().setInnerHTML(""<input type='checkbox' id='foo'></input>""); SimpleCheckBox checkBox = SimpleCheckBox.wrap(Document.get().getElementById( ""foo"")); assertExistsAndAttached(checkBox); "
0," if( responded.compareAndSet(false, true) ) { Class resultType = getResultType(method); try { serializationStrategy.encodeResponse(loader, resultType, value, error, responseStream); "," assertEquals(FX, FX_OPTION.getUnderlyingForex()); assertEquals(EXPIRATION_TIME, FX_OPTION.getTimeToExpiry()); assertEquals(IS_CALL, FX_OPTION.isCall()); assertEquals(IS_LONG, FX_OPTION.isLong()); "
1, if (o instanceof CategorizedAbilitySelection) { CategorizedAbilitySelection other = (CategorizedAbilitySelection) o; if (selection == null) { if (other.selection != null) { return false; , if (o instanceof CategorizedAbilitySelection) { CategorizedAbilitySelection other = (CategorizedAbilitySelection) o; if (selection == null) { if (other.selection != null) { return false; 
1," ObjectDataset<Integer> ds = buildObjectDataset(); ds.setOrderAscending(false); ds.setOrderKey(""default""); Integer expected = 100; for (Integer i : ds) { assertEquals(expected, i); expected--; "," ObjectDataset<Integer> ds = buildObjectDataset(); ds.setOrderAscending(false); ds.setOrderKey(""default""); Integer XXXXX = 100; for (Integer i : ds) { assertEquals(XXXXX, i); XXXXX--; "
0," RoleGroupMap result = dao.getByActionGroupAndRole(existingRoleGroupMap.getActionGroup(), existingRoleGroupMap.getRoleId()); assertNotNull(result); assertEquals(existingRoleGroupMap, result); ", AdventureResult test = EquipmentManager.getEquipment( EquipmentManager.STICKER1 ); if ( test == null || test.equals( EquipmentRequest.UNEQUIP ) ) { return EquipmentManager.STICKER1; 
0," VCloudDirectorAdminApi api = requestsSendResponses(loginRequest, sessionResponse, reset, resetResponse); assertEquals(api.getNetworkApi().reset(networkAdminHref), resetNetworkTask()); ", if (isSqlWrapper()) { try { createTable(); PlayerManager.getInstance().setPlayerFactory( new SQLPlayerFactory()); WorldManager.getInstance().setWorldFactory( new SQLWorldFactory()); 
1," Exception e1 = new Exception(""root""); Exception e2 = new Exception(""child1"", e1); Exception e3 = new Exception(""child2"", e2); assertEquals(""root"", ExceptionUtils.getRootCause(e3).getMessage()); "," Exception XXXXX = new Exception(""root""); Exception XXXXX = new Exception(""child1"", XXXXX); Exception XXXXX = new Exception(""child2"", XXXXX); assertEquals(""root"", ExceptionUtils.getRootCause(XXXXX).getMessage()); "
0," ArrayList<String> unknown = new ArrayList<String>(); String known = DebugDatabase.parseItemEnchantments( text, unknown ); DebugDatabase.logModifierDatum( name, known, unknown, report ); "," super(); this.addAliases(""sel""); this.addOptionalArg(""gate"", ""*get*""); this.addRequirements(ReqIsPlayer.getInstance()); this.addRequirements(new ReqHasPerm(Permission.SELECT.node)); "
0," return this.getClass().getName() + "" sortFieldName="" + Arrays.toString(sortCriteriaExpressions) + "" isDescending="" + Arrays.toString(isDescendingValues) + "" sortWindowSize="" + sortWindowSize; ", TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(WikiLARPortletTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; 
0," String label = ((ElementName) object).getName(); return label == null || label.length() == 0 ? getString(""_UI_ElementName_type"") : getString(""_UI_ElementName_type"") + "" "" + label; "," super.utilityProblem(problemSeverity, problemMessage, processingContext, startOffset, endOffset); tee.utilityProblem(problemSeverity, problemMessage, processingContext, startOffset, endOffset); "
0," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (source: ""); result.append(source); result.append(')'); return result.toString(); "," super(part); setId(ActionFactory.CUT.getId()); super.setText(""Cut""); super.setDescription(""Cut parts to clipboard""); super.setToolTipText(""Cuts the selected parts to the clipboard""); "
0, final int prime = 31; int result = super.hashCode(); result = prime * result + ((this.m_chart == null) ? 0 : this.m_chart.hashCode()); result = prime * result + this.m_halfWidth; return result; ," if (""CREATIONDATE"".equals(fieldName) || ""SIZE"".equals(fieldName) || ""ACTUAL_SIZE"".equals(fieldName) || ""PROVISIONED_SIZE"".equals(fieldName)) { return BiggerOrSmallerRelationAutoCompleter.INTSANCE; "
0," if (!player.weaponInventory.add(new Raygun(player))) { if(this.team == MojamComponent.localTeam) { Notifications.getInstance().add(MojamComponent.texts.getStatic(""gameplay.weaponAlready"")); "," return ""EventTypeConfigurationSet("" + ""\n createdConfig: "" + createdConfig + ""\n completedConfig: "" + completedConfig + ""\n sendingConfig: "" + sendingConfig + ""\n sentConfig: "" + sentConfig + "")""; "
0, if (CmsStringUtil.isEmptyOrWhitespaceOnly(description)) { throw new CmsIllegalArgumentException(org.opencms.db.Messages.get().container( org.opencms.db.Messages.ERR_BAD_OU_DESCRIPTION_EMPTY_0)); , this.username = cs.decode(username).toString(); this.uid = uid; this.gid = gid; this.homeDirectory = cs.decode(homeDirectory).toString(); this.shell = cs.decode(shell).toString(); 
0," response.addStatusMessage(""compressing results""); FileUtils fs = new FileUtils(); new BundleBuildingUtil().generateJsonMetadata(request, response); String[] paths = {request.getBundleName()", Object element = getSelection().getFirstElement(); if ( element instanceof IDebugElement ) { return (ICDebugTarget)((IDebugElement)element).getDebugTarget().getAdapter( ICDebugTarget.class ); 
1," if (m_answer == null) { m_answer = LazyMap.decorate(new HashMap(), new Transformer() { public Object transform(Object input) { String value = String.valueOf(input); return getAnswerByField(value); "," if (m_answer == null) { m_answer = LazyMap.decorate(new HashMap(), new Transformer() { public Object transform(Object input) { String XXXXX = String.XXXXXOf(input); return getAnswerByField(XXXXX); "
1, if (other instanceof Program) { Program p = (Program) other; boolean equals = true; equals &= number == p.number; equals &= channel.frequency == p.channel.frequency; return equals; , if (other instanceof Program) { Program p = (Program) other; boolean equals = true; equals &= number == p.number; equals &= channel.frequency == p.channel.frequency; return equals; 
1," if (entry != null) { setTextAndDescription(entry, Messages.ContextEntryHelper_4_xfld, Messages.ContextEntryHelper_5_xfld); entry.setIconId(IPlatformImageConstants.IMG_EDIT_DELETE); "," if (entry != null) { setTextAndDescription(entry, Messages.ContextEntryHelper_4_xfld, Messages.ContextEntryHelper_5_xfld); entry.setIconId(IPlatformImageConstants.IMG_EDIT_DELETE); "
1," if (isClassBehaviour == true) { this.policyComponent.bindClassBehaviour( QName.createQName(NamespaceService.ALFRESCO_URI, POLICY_NAME), this, new JavaBehaviour(this, POLICY_NAME)); "," if (isClassBehaviour == true) { this.policyComponent.bindClassBehaviour( QName.createQName(NamespaceService.ALFRESCO_URI, POLICY_NAME), this, new JavaBehaviour(this, POLICY_NAME)); "
0," try { final String form = txt.startsWith(""%"") ? txt : ""%""+txt; final String format = String.format(form, templateFormatNumber); formatLabel.setText("" ""+format+"" ""); layout(); return true; "," fListener = new ButtonSelectionListener(); fSelectedOnlyFilter = new ViewerFilter() { public boolean select(Viewer viewer, Object parentElement, Object element) { return fTree.getChecked(element); "
0, synchronized (DocumentLineDiffer.this) { fLeftDocument= null; fLeftEquivalent= null; fInitializationJob= null; fStoredEvents.clear(); fLastDifference= null; fDifferences.clear(); ," myDecodedFileName = makeImagesDir() + File.separator + Integer.toHexString(data.hashCode()); final MimeType type = mimeType(); if (MimeType.IMAGE_PNG.equals(type)) { myDecodedFileName += "".png""; "
0, for (ITransactionalEditingDomainProvider provider : orderedProvidersArray) { TransactionalEditingDomain ed = provider.createTransactionalEditingDomain(resourceSet); if (ed != null) { return ed; , fModel = (IDSModel) getPage().getModel(); fModel.addModelChangedListener(this); fComponent = fModel.getDSComponent(); if (fComponent != null) { fImplementation = fComponent.getImplementation(); 
0, this.adapterPrefs = adapterPrefs; checked = new Object[0]; offsetMethodStrategy = IOffsetStrategy.AFTERINIT; offsetPropertyStrategy = IOffsetStrategy.END; accessModifier = NodeHelper.ACCESS_PUBLIC; ," SPARCArgument link = new SPARCArgument(0, false); return (JavaCallWrapper) VMObjectFactory.newObject(JavaCallWrapper.class, getSP().getAddressAt(link.asIn().asRegister().spOffsetInSavedWindow())); "
0," int index = list.getSelectedIndex() + 1; if (index >= list.getItemCount() || isSmaller(list.getItem(index), prefix)) index = 0; for (;;) { if (list.getItem(index).startsWith(prefix)) { return index; "," super(name, scheduler, defaultTTL); _rules = new FunctionBlacklistRuleSet(scheduler, defaultTTL) { @Override protected void onAdd(final FunctionBlacklistRule rule) { s_logger.debug(""{"
1," if (resourceRoleId == null) throw new IllegalArgumentException(""resourceRoleId is null""); ResourceRole obj = this.resourceRoleDao.findById(resourceRoleId); this.resourceRoleDao.remove(obj); "," if (resourceRoleId == null) throw new IllegalArgumentException(""resourceRoleId is null""); ResourceRole XXXXX = this.resourceRoleDao.findById(resourceRoleId); this.resourceRoleDao.remove(XXXXX); "
1, final GrModifierListStub stub = getStub(); if (stub != null) { return (stub.getModifiersFlags() & (GrModifierFlags.PUBLIC_MASK | GrModifierFlags.PROTECTED_MASK | GrModifierFlags.PRIVATE_MASK)) != 0; , final GrModifierListStub XXXXX = getStub(); if (XXXXX != null) { return (XXXXX.getModifiersFlags() & (GrModifierFlags.PUBLIC_MASK | GrModifierFlags.PROTECTED_MASK | GrModifierFlags.PRIVATE_MASK)) != 0; 
0," _shell.setSize(_fieldPainter.getSize().x + 17, _fieldPainter.getSize().y + 98); _shell.open(); while (!_shell.isDisposed()) { if (!_display.readAndDispatch()) { _display.sleep(); "," if (!AbstractMarathonAction.objectEquals(expected, actual)) { AssertionFailedError e = new AssertionFailedError(message, expected, actual, scriptModel, windowMonitor); e.captureScreen(); throw e; "
0, Set<ConstrainedMethod> methodsWithParameterConstraints = getMethodsWithParameterConstraints( constrainedMethods ); if ( methodsWithParameterConstraints.isEmpty() ) { return null; ," GeoPoint[] bz = b.getZeros(); GeoFunction af = a.getFunBorder(); for (GeoPoint bp : bz) { ensurePoint(); vertices.get(validVertices).setCoords(af.evaluate(bp.getX()), bp.getX(), 1); validVertices++; "
1," synchronized (m_document) { m_document.removeDocumentListener(m_documentListener); m_text.setText(""""); m_text.setCaretPosition(0); m_document.addDocumentListener(m_documentListener); "," synchronized (m_document) { m_document.removeDocumentListener(m_documentListener); m_text.setText(""""); m_text.setCaretPosition(0); m_document.addDocumentListener(m_documentListener); "
1," if (editingContext.getEObject() instanceof ConcreteReferenceOwnerSample) { return new ConcreteReferenceOwnerSamplePropertiesEditionComponent(editingContext, editingContext.getEObject(), mode); "," if (editingContext.getEObject() instanceof ConcreteReferenceOwnerSample) { return new ConcreteReferenceOwnerSamplePropertiesEditionComponent(editingContext, editingContext.getEObject(), mode); "
1, if(remoteUser!=null)remoteUser=null; String name=Login.getApplicationName(applicationContext); cookieScope().removeEL(KeyImpl.init(name)); try { sessionScope().removeEL(KeyImpl.init(name)); , if(remoteUser!=null)remoteUser=null; String name=Login.getApplicationName(applicationContext); cookieScope().removeEL(KeyImpl.init(name)); try { sessionScope().removeEL(KeyImpl.init(name)); 
0, for(Effect effect : abnormalEffectMap.values()) { if(count == 0) break; if(effect.getTargetSlot() == targetSlot.ordinal()) { effect.endEffect(); abnormalEffectMap.remove(effect.getStack()); count--; ," switch (eContainerFeatureID()) { case ClassesPackage.TYPE_ADAPTER__ADAPTED: return eInternalContainer().eInverseRemove(this, ClassesPackage.SAP_CLASS__ADAPTERS, SapClass.class, msgs); "
0, String icuValue = pluralRules.select(number); Plural retVal = null; for(GwtPlural plural : GwtPlural.values()) { if(plural.getIcuValue().equals(icuValue)) { retVal = plural; break; , IPath path= null; if (editorInput instanceof IFileEditorInput) { IFileEditorInput fileEditorInput= (IFileEditorInput) editorInput; path= fileEditorInput.getFile().getProjectRelativePath(); 
0, EObject res = null; int offset; final ISelection selection = editor.getSelectionProvider().getSelection(); if (selection instanceof TextSelection) { offset = ((TextSelection)selection).getOffset(); , int uc = Character.toUpperCase( c ); int lc = Character.toLowerCase( c ); if (regularKeyCodesMap.containsKey( c )) { if(regularKeyCodesMap.containsKey(uc)) { return regularKeyCodesMap.get( uc ); 
0," Model m = ModelFactory.createDefaultModel(); Resource r = m.createResource(); r.addLiteral( RDF.value, true ); assertEquals( m.createTypedLiteral( true ), r.getProperty( RDF.value ).getLiteral() ); "," tag = HTML.Tag.TT; assertEquals(""tt"", tag.toString()); assertFalse(""breaks Flow"", tag.breaksFlow()); assertFalse(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); "
0, Component c; if (value instanceof Component) { c = (Component) value; if (isSelected) { c.setForeground(table.getSelectionForeground()); c.setBackground(table.getSelectionBackground()); ," if ( isArchivePath( path, true ) ) { String appended = getPathLabel( path.removeLastSegments( 1 ), isExternal ); String lastSegment = path.lastSegment( ) ; return MessageFormat.format( ""{0"
1," byte[] utf8buf = null; StringBuffer sb = null; for (int k = 0, length = str.length(); k != length; ++k) { char C = str.charAt(k); if (encodeUnescaped(C, fullUri)) { if (sb != null) { sb.append(C); "," byte[] utf8buf = null; StringBuffer XXXXX = null; for (int XXXXX = 0, length = str.length(); XXXXX != length; ++XXXXX) { char XXXXX = str.charAt(XXXXX); if (encodeUnescaped(XXXXX, fullUri)) { if (XXXXX != null) { XXXXX.append(XXXXX); "
0, try { OrderHistoryEntity orderHistoryEntityInterface = new allbinary.data.tables.user.commerce.inventory.order.OrderHistoryEntity(); return (OrderHistory) orderHistoryEntityInterface.getOrder(id); , super.setUp(); morphia.map(Address.class); if (this.ds.getCount(Address.class) == 0) { for (int i = 0; i < nbOfAddresses; i++) { Address address = new Address(i); ds.save(address); 
1, persistExportProperties(); return runOperationInContainer(new IRunnableWithProgress() { public void run(final IProgressMonitor monitor) throws InvocationTargetException { doExport(monitor); , persistExportProperties(); return runOperationInContainer(new IRunnableWithProgress() { public void run(final IProgressMonitor monitor) throws InvocationTargetException { doExport(monitor); 
0, final RefactoringDescriptorProxy[] proxies= getRefactoringDescriptors(); if (fCurrentRefactoring >= 0 && fCurrentRefactoring < proxies.length) return proxies[fCurrentRefactoring]; return null; , int index = findInsertionIndex(key); double previous = missingEntries; boolean newMapping = true; if (index < 0) { index = changeIndexSign(index); previous = values[index]; newMapping = false; 
0, graphAccess = TcManager.getInstance(); graphAccess.bindWeightedTcProvider(weightedA); graphAccess.bindWeightedTcProvider(weightedA1); graphAccess.bindWeightedTcProvider(weightedBlight); ," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "
1," String oldMessage = message; message = newMessage; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, POMPackage.RELOCATION__MESSAGE, oldMessage, message)); "," String XXXXX = message; message = newMessage; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, POMPackage.RELOCATION__MESSAGE, XXXXX, message)); "
1, int inputtype = 0; LiteralInputType literalData = idt.getLiteralData(); SupportedComplexDataInputType complexData = idt.getComplexData(); if (literalData != null) { inputtype = INPUTTYPE_LITERAL; , int XXXXX = 0; LiteralInputType XXXXX = idt.getLiteralData(); SupportedComplexDataInputType XXXXX = idt.getComplexData(); if (XXXXX != null) { XXXXX = INPUTTYPE_LITERAL; 
0," token = token.toLowerCase(); String wordTag = token + ""_"" + posTag; try { lexer.yyreset(new StringReader(wordTag)); lexer.yybegin(Morpha.scan); String tokenNorm = lexer.next(); return tokenNorm; "," synchronized (this) { if ( inRead > 0 ) error(BeginUpdate, ""beginUpdate when already in read"") ; if ( inUpdate ) error(BeginUpdate, ""beginUpdate when already in update"") ; inUpdate = true ; "
0, switch (mode) { case 0: return 1; case 1: return 1; case 2: return -1; case 3: return 3; case 4: return 4; case 7: return -1; case 8: return -1; case 9: return 4; default: return -1; , TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(SampleJSPTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; 
0," String name = IndexingProgressMonitorMBean.INDEXING_PROGRESS_MONITOR_MBEAN_OBJECT_NAME; if ( JMXRegistrar.isNameRegistered( name ) ) { name = name + ""@"" + Integer.toHexString( hashCode() ); ", String credentialsDBPhysicalName = TestConfiguration.generateUniqueDatabaseName(); Test result = this; if ( _disableSecurityManager ) { result = SecurityManagerSetup.noSecurityManager( result ); 
1," this.content = content; String[] array = content.getDefinitions().split( ""\n"" ); for ( String line : array ) { EnumRow enumRow = new EnumRow( line ); dataProvider.getList().add( enumRow ); "," this.content = content; String[] array = content.getDefinitions().split( ""\n"" ); for ( String line : array ) { EnumRow enumRow = new EnumRow( line ); dataProvider.getList().add( enumRow ); "
0, int n=0; for (Iterator it=ch.children(hc).iterator(); it.hasNext(); ) { HClass hcc = (HClass) it.next(); if (!Modifier.isAbstract(hcc.getModifiers())) n += 1; n += numChildren(hcc); ," jpaPersistentLoginMapper.deletePersistentLogin(""mrburns""); PersistentLogin foo = jpaPersistentLoginMapper.findByAccountId(""mrburns""); assertNull(""PersistentLogin still present after delete"", foo); "
1," throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, ""CoreAdminHandler should not be configured in solrconf.xml\n"" + ""it is a special Handler configured directly by the RequestDispatcher""); "," throw new SolrException(SolrException.ErrorCode.SERVER_ERROR, ""CoreAdminHandler should not be configured in solrconf.xml\n"" + ""it is a special Handler configured directly by the RequestDispatcher""); "
0, String property = evt.getPropertyName(); if (Style.PROPERTY_ALIGNMENT.equals(property) || Style.PROPERTY_ORIENTATION.equals(property)) refreshVisuals(); else super.propertyChange(evt); ," return Math.max( Math.max( partitionEntry1.getEndCylinder( ), partitionEntry2.getEndCylinder( ) ), Math.max( partitionEntry3 .getEndCylinder( ), partitionEntry4.getEndCylinder( ) ) ); "
0," final URI resolvedURI = resolveXMLBase(containingDocument, element, url); return URLRewriterUtils.rewriteServiceURL(NetUtils.getExternalContext().getRequest(), resolvedURI.toString(), rewriteMode); "," autoScroll = false; setLocalArea(new Rectangle(localArea.x, vBar.getMaximum()-(vBar.getSelection()+vBar.getThumb())+vBar.getMinimum(), localArea.width, localArea.height), true); redraw(); "
0," double[] a = this.a; int capacity = a.length; int n = this.n; int nNew = n + c; if (nNew > capacity) { double[] aNew = newArray(capacity, nNew); System.arraycopy(a, 0, aNew, 0, n); this.a = aNew; "," super(); if (poiCodeMap.containsValue(id)) { for (Entry<String, Integer> entry : poiCodeMap.entrySet()) { if (entry.getValue().intValue() == id) { this.type = entry.getKey(); this.id = id; "
0," System.out.println(""ExactMapping.extractMapping""); assertNotNull(ExactMapping.extractMapping(new ArrayList<List<Integer>>(), new ArrayList<Integer>(), new ArrayList<Integer>())); ", switch (featureID) { case FXBeanPackage.MAP_TYPE_DEF__KEY_TYPE: setKeyType((JvmTypeReference)null); return; case FXBeanPackage.MAP_TYPE_DEF__VALUE_TYPE: setValueType((JvmTypeReference)null); return; 
1," ViewingPlatform vp = new ViewingPlatform(transformCount); setDerivedAttachPolicy(viewer[0], vp); viewer[0].setViewingPlatform(vp); vp.setUniverse(this); locale.addBranchGraph(vp); "," ViewingPlatform XXXXX = new ViewingPlatform(transformCount); setDerivedAttachPolicy(viewer[0], XXXXX); viewer[0].setViewingPlatform(XXXXX); XXXXX.setUniverse(this); locale.addBranchGraph(XXXXX); "
1," String value = getBlueprintDirectiveValue(headers, BLUEPRINT_GRACE_PERIOD); return (value != null ? Boolean.valueOf(value).booleanValue() : ConfigUtils.DIRECTIVE_WAIT_FOR_DEPS_DEFAULT); "," String XXXXX = getBlueprintDirectiveValue(headers, BLUEPRINT_GRACE_PERIOD); return (XXXXX != null ? Boolean.XXXXXOf(XXXXX).booleanValue() : ConfigUtils.DIRECTIVE_WAIT_FOR_DEPS_DEFAULT); "
0," if (actionPanel == null) { actionPanel = new JPanel(); actionPanel.setLayout(new FormLayout(new ColumnSpec[] { FormFactory.RELATED_GAP_COLSPEC, ColumnSpec.decode(""default:grow""), "," Profile current = mySchemesManager.getCurrentScheme(); if (current != null && !Comparing.strEqual(rootProfile, current.getName())) { fireProfileChanged(current, getProfile(rootProfile), null); "
1, mModified = mModified || (mAtmaset.getAbyssiteOfFurtherance() != n); mStatusCacheValid = (mAtmaset.getAbyssiteOfFurtherance() == n) && mStatusCacheValid; mAtmaset.setAbyssiteOfFurtherance(n); , mModified = mModified || (mAtmaset.getAbyssiteOfFurtherance() != n); mStatusCacheValid = (mAtmaset.getAbyssiteOfFurtherance() == n) && mStatusCacheValid; mAtmaset.setAbyssiteOfFurtherance(n); 
0," if (!(condition instanceof JavaScriptCondition)) { throw new IllegalStateException(""The given condition doesn't implement JavaScriptCondition so its negation can't be converted to the JavaScript.""); "," log.info(""Loading PetitionService ...""); Set<Petition> petitions = DAOManager.getDAO(PetitionDAO.class).getPetitions(); for(Petition p : petitions) { registeredPetitions.put(p.getPetitionId(), p); "
0, shutdownInitiated = false; if (downloadsCompletedListener != null) { downloadListManager.removePropertyChangeListener(downloadsCompletedListener); downloadsCompletedListener = null; ," SimpleFeatureBuilder sfb = new SimpleFeatureBuilder(type); sfb.init(feature); sfb.set(PlainFeatureFactory.ATTRIB_NAME_STYLE_CSS, styleCSS); return sfb.buildFeature(feature.getID()); "
1," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; "," EditorCell XXXXX = null; XXXXX = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, XXXXX, editorContext); return XXXXX; "
0," Log.i(TAG, ""downloadMediaToSdCard""); FileOutputStream fos = null; try { Log.i(TAG, ""Opening URL: "" + url); HttpEntity entity = HTTPUtils.getEntity(url); if (entity == null) { return null; ", assert alertDialogPresenter != null; this.alertDialogPresenter = alertDialogPresenter; assert messages != null; this.messages = messages; assert waitWidget != null; this.waitWidget = waitWidget; 
1, Event nativeEvent = Event.as(event.getNativeEvent()); switch (DOM.eventGetType(nativeEvent)) { case Event.ONKEYDOWN: break; case Event.ONMOUSEWHEEL: closePopup(); break; default: , Event nativeEvent = Event.as(event.getNativeEvent()); switch (DOM.eventGetType(nativeEvent)) { case Event.ONKEYDOWN: break; case Event.ONMOUSEWHEEL: closePopup(); break; default: 
1," log.debug(""Creating pre-streaming tags""); if (audioDecoderBytes != null) { IoBuffer body = IoBuffer.allocate(audioDecoderBytes.length + 3); body.put(new byte[]{(byte) 0xaf, (byte) 0"," log.debug(""Creating pre-streaming tags""); if (audioDecoderBytes != null) { IoBuffer XXXXX = IoBuffer.allocate(audioDecoderBytes.length + 3); XXXXX.put(new byte[]{(byte) 0xaf, (byte) 0"
1," DamageSource theSource = CanaryDamageSource.getDamageSourceFromType(damagetype); if(theSource != null){ ((OEntityLiving) entity).a(((CanaryDamageSource) theSource).getHandle(), amount); "," DamageSource theSource = CanaryDamageSource.getDamageSourceFromType(damagetype); if(theSource != null){ ((OEntityLiving) entity).a(((CanaryDamageSource) theSource).getHandle(), amount); "
0, GameMode game = SettingsHandler.getGame(); List<String> campaignsToAdd = new ArrayList<String>(); if (!game.getDefaultDataSetList().isEmpty()) { campaignsToAdd.addAll(game.getDefaultDataSetList()); , String propertyFiles= prefs.getString(IPhingCoreConstants.PREFERENCE_PROPERTY_FILES); if (propertyFiles.equals(IPhingCoreConstants.EMPTY_STRING)) { customPropertyFiles= new String[0]; 
0," _freeze = SkillTable.getInstance().getInfo(6034, 1); _transformationRed = SkillTable.getInstance().getInfo(6035, 1); _transformationBlue = SkillTable.getInstance().getInfo(6036, 1); "," Log.i(TAG, ""downloadMediaToSdCard""); FileOutputStream fos = null; try { Log.i(TAG, ""Opening URL: "" + url); HttpEntity entity = HTTPUtils.getEntity(url); if (entity == null) { return null; "
0," if (o instanceof Map.Entry) o = ((Map.Entry)o).getKey(); if (o instanceof PsiNamedElement) { return new SimpleColoredText(StringUtil.notNullize(((PsiNamedElement)o).getName()), DEFAULT_TITLE_ATTR); "," if (pnConent == null) { pnConent = new JPanel(); pnConent.setLayout(new BorderLayout(0, 0)); pnConent.add(getPnCommandEdit(), BorderLayout.CENTER); pnConent.add(getPnBtns(), BorderLayout.SOUTH); "
0, sdata.setRecoveryOperations(3); RecoveryManager.doBackup(VersionSelector.this); RecoveryManager.wipeData(); RecoveryManager.addUpdate(sdata.getDownloadedFile()); RecoveryManager.rebootRecovery(); ," String serverName = ServerConfiguration.getInstance().getFirstProperty(""Name""); serverName = serverName.replace(""WSO2"", """"); serverName = serverName.trim(); return serverName.replace("" "", "".""); "
1, if (_managed != null && _managed instanceof FilterMapping) { FilterMapping mapping = (FilterMapping)_managed; String name = mapping.getFilterName(); if (name != null) return name; , if (_managed != null && _managed instanceof FilterMapping) { FilterMapping XXXXX = (FilterMapping)_managed; String XXXXX = XXXXX.getFilterName(); if (XXXXX != null) return XXXXX; 
1, vv.getRenderContext().getMultiLayerTransformer().getTransformer(Layer.LAYOUT).setToIdentity(); vv.getRenderContext().getMultiLayerTransformer().getTransformer(Layer.VIEW).setToIdentity(); , vv.getRenderContext().getMultiLayerTransformer().getTransformer(Layer.LAYOUT).setToIdentity(); vv.getRenderContext().getMultiLayerTransformer().getTransformer(Layer.VIEW).setToIdentity(); 
0, initializeVolumeSettings(); progressSlider.setEnabled(getPlayerMediator().isSeekable()); titleLabel.setText(name); titleLabel.setToolTipText(name); if (isAudio) { titleLabel.start(); , LispObject value = myData.get(c); if (value == null) { value = myDefault; if (Predicate.isNil(value) && myParent instanceof GenericCharTable) value = ((GenericCharTable) myParent).ref(c); 
1, StructuredSelection selected = (StructuredSelection) event.getSelection(); if (selected.isEmpty()) { deleteButton.setEnabled(false); changeButton.setEnabled(false); copyButton.setEnabled(false); , StructuredSelection XXXXX = (StructuredSelection) event.getSelection(); if (XXXXX.isEmpty()) { deleteButton.setEnabled(false); changeButton.setEnabled(false); copyButton.setEnabled(false); 
1, super.setForeground(color); foreground = color; if (text != null) text.setForeground(color); if (table != null) table.setForeground(color); if (arrow != null) arrow.setForeground(color); , super.setForeground(color); foreground = color; if (text != null) text.setForeground(color); if (table != null) table.setForeground(color); if (arrow != null) arrow.setForeground(color); 
1," if (newRole.isValidForSubmit()) { SecurityControllerAsync securityController = ControllerFactory.getSecurityController(); securityController.saveRole(newRole.getText(), newDesc.getText(), this); "," if (newRole.isValidForSubmit()) { SecurityControllerAsync XXXXX = ControllerFactory.getSecurityController(); XXXXX.saveRole(newRole.getText(), newDesc.getText(), this); "
0, server.setPort(port); server.setMaxClients(maxClients); handler.setRqTimeout(rqTimeout); handler.setDimseTimeout(dimseTimeout); handler.setSoCloseDelay(soCloseDelay); handler.setPackPDVs(false); , assertThat(activity.conventionButtonEventHandled).isFalse(); activity.findViewById(R.id.conventionButton).performClick(); assertThat(activity.conventionButtonEventHandled).isTrue(); 
0," Assert.assertEquals(1, ChapterNum.fromString(""1.4.1"").compareTo(ChapterNum.fromString(""1.4.0""))); Assert.assertEquals(-1, ChapterNum.fromString(""1.4.1"").compareTo(ChapterNum.fromString(""1.4.10""))); "," Integer memberId = this.getMemberIdFromEvent(event); ParticipantMutedEvent pm = new ParticipantMutedEvent(memberId, confName, true); conferenceEventListener.handleConferenceEvent(pm); "
0, if (o == this) return true; if (!(o instanceof TimeOutFields)) return false; TimeOutFields pn = (TimeOutFields)o; return pn.interestID == interestID && pn.segmentID == segmentID; ," PdfName fieldname = new PdfName(key); PdfCollectionField field = (PdfCollectionField)schema.get(fieldname); if (field.fieldType == PdfCollectionField.NUMBER) { put(fieldname, n); "
1, IStructuredSelection sel = (IStructuredSelection) event .getSelection(); if (sel != null && !sel.isEmpty()) { HistViewItem item = (HistViewItem) sel.getFirstElement(); try { item.jumpToState(); , IStructuredSelection XXXXX = (IStructuredSelection) event .getSelection(); if (XXXXX != null && !XXXXX.isEmpty()) { HistViewItem XXXXX = (HistViewItem) XXXXX.getFirstElement(); try { XXXXX.jumpToState(); 
1," this(format.getEncoding(), format.getSampleRate(), format.getSampleSizeInBits(), format.getChannels(), format.getFrameSize(), format.getFrameRate(), format.isBigEndian(), format.properties()); "," this(format.getEncoding(), format.getSampleRate(), format.getSampleSizeInBits(), format.getChannels(), format.getFrameSize(), format.getFrameRate(), format.isBigEndian(), format.properties()); "
1, int index; StringBuilder sb = new StringBuilder(s.trim()); while (((index = sb.toString().indexOf('\r')) != -1) || ((index = sb.toString().indexOf('\n')) != -1)) { sb.deleteCharAt(index); , int index; StringBuilder XXXXX = new StringBuilder(s.trim()); while (((index = XXXXX.toString().indexOf('\r')) != -1) || ((index = XXXXX.toString().indexOf('\n')) != -1)) { XXXXX.deleteCharAt(index); 
0, if (this.getFrame() > 0) { if (timeDelayHelper.isTime(GameTickTimeDelayHelperFactory.getInstance().getStartTime())) { this.previousFrame(); if(this.getFrame() == 0) { loopCount++; ," super( modelColumnHint.getColumnName( ) ); DataAdapterUtil.updateColumnDefn( this, modelColumnHint ); this.setAnalysisType( this.acquireAnalysisType( modelColumnHint.getAnalysis( ) ) ); "
0, boolean valid = true; if (type == IResource.FILE && linkTargetStore.fetchInfo().isDirectory()) { setErrorMessage(IDEWorkbenchMessages.WizardNewLinkPage_linkTargetNotFile); valid = false; , AdventureResult test = EquipmentManager.getEquipment( EquipmentManager.ACCESSORY1 ); if ( test == null || test.equals( EquipmentRequest.UNEQUIP ) ) { return EquipmentManager.ACCESSORY1; 
0, currentKills = 0.0f; currentItems = 0.0f; currentSecrets = 0.0f; currentAdd = 1.0f; updateTxtValues(); increaseValuesTask = new TimerTask() { public void run() { handler.post(updateValues); ," try { if (m_gridConfig.getClientFeedback() == null) { log.info(""No feedback handler set, using DefaultClientFeedback""); m_gridConfig.setClientFeedback(new DefaultClientFeedback()); "
1," File[] roots = getProfilesDirs(); for (File profilesDir : roots) { File profilesFile = new File(profilesDir, PROFILES_INI_FILE); if (profilesFile.isFile()) { return profilesFile; "," File[] roots = getProfilesDirs(); for (File profilesDir : roots) { File XXXXX = new File(profilesDir, PROFILES_INI_FILE); if (XXXXX.isFile()) { return XXXXX; "
0," final int edgesCount = 1000; Map<IntWritable, DoubleWritable> edgeMap = Maps.newHashMap(); for (int i = edgesCount; i > 0; --i) { edgeMap.put(new IntWritable(i), new DoubleWritable(i * 2.0)); ", BaseFaultType fault = null; try { fault = (BaseFaultType) faultClass.newInstance(); final FaultHelper faultHelper = new FaultHelper(fault); if (errMsg != null) { faultHelper.addDescription(errMsg); 
0," String s = StatementBuilder.create() .try_() .finish() .finally_() .finish() .toJavaString(); assertEquals(""Failed to generate empty try finally block"", EMPTY_TRY_FINALLY_BLOCK, s); "," EditorColorsSchemeImpl newScheme = new EditorColorsSchemeImpl(myParentScheme, DefaultColorSchemesManager.getInstance()); copyTo(newScheme); newScheme.setName(getName()); return newScheme; "
0, this.lut = lut; this.component = component; getColorSpace().addListener(this); scaler = lut.getScalers()[component]; scaler.addListener(this); enabled = true; listeners = new EventListenerList(); ," CheckArg.isNotNull(selectorName, ""selectorName""); CheckArg.isNotNull(path, ""path""); this.selectorName = selectorName; this.path = path; this.hc = HashCode.compute(this.selectorName, this.path); "
1," if((registrationState!=null)) { if(registrationState.equals(""reg"")||registrationState.equals(""unreg"")) { try { setParameter(ParameterNamesIms.REGISTRATION_STATE, registrationState); "," if((registrationState!=null)) { if(registrationState.equals(""reg"")||registrationState.equals(""unreg"")) { try { setParameter(ParameterNamesIms.REGISTRATION_STATE, registrationState); "
0," File cssFile = new File(""/no/file""); preferences.set(""User Prefs"", ""Browser CSS File"", cssFile); assertEquals(cssFile, preferences.get(""User Prefs"", ""Browser CSS File"").getValue()); "," assertThatStoryLocationAllowsStoryPathAsURL(CodeLocations.codeLocationFromPath(""src/test/java/"")); assertThatStoryLocationAllowsStoryPathAsURL(CodeLocations.codeLocationFromURL(""http: "
1, final int len = myLength; final char[] data = myData; int code = len * 31; if (len > 1) { code += data[0]; code *= 31; code += data[1]; if (len > 2) { code *= 31; code += data[2]; , final int XXXXX = myLength; final char[] data = myData; int XXXXX = XXXXX * 31; if (XXXXX > 1) { XXXXX += data[0]; XXXXX *= 31; XXXXX += data[1]; if (XXXXX > 2) { XXXXX *= 31; XXXXX += data[2]; 
1," if (identifierEquals(""REGEXP"")) { lexer.nextToken(); SQLExpr rightExp = equality(); rightExp = relationalRest(rightExp); return new SQLBinaryOpExpr(expr, SQLBinaryOperator.RegExp, rightExp); "," if (identifierEquals(""REGEXP"")) { lexer.nextToken(); SQLExpr XXXXX = equality(); XXXXX = relationalRest(XXXXX); return new SQLBinaryOpExpr(expr, SQLBinaryOperator.RegExp, XXXXX); "
1, if (this.address.length != that.address.length) return false; for (int ctr = 0; ctr < this.address.length; ctr++) { if (!this.address[ctr].equals(that.address[ctr])) return false; , if (this.address.length != that.address.length) return false; for (int XXXXX = 0; XXXXX < this.address.length; XXXXX++) { if (!this.address[XXXXX].equals(that.address[XXXXX])) return false; 
0," ConfigurationProvider cp = new PersistenceProductDerivation. ConfigurationProviderImpl(map); try { return JPAFacadeHelper.toEntityManagerFactory( Bootstrap.getBrokerFactory(cp, null)); "," SharedPreferences.Editor editor = PreferenceManager.getDefaultSharedPreferences(context).edit(); editor.putBoolean(MessagingPreferenceActivity.NOTIFICATION_ENABLED, enabled); editor.apply(); "
0," fMasterDocument.set(getOriginalMasterContent()); fSlaveDocument.set(getLineWrappingSlaveContent()); addProjection(0, 0, 10); addProjection(30, 10, 20); addProjection(70, 30, 10); "," mContext.enforceCallingPermission(android.Manifest.permission.BIND_APPWIDGET, ""bindAppWidgetId appWidgetId="" + appWidgetId + "" provider="" + provider); bindAppWidgetIdImpl(appWidgetId, provider); "
1, if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; final RetrievalTask that = (RetrievalTask) o; return this.retriever.equals(that.retriever); , if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; final RetrievalTask XXXXX = (RetrievalTask) o; return this.retriever.equals(XXXXX.retriever); 
0, String username = authentication.getPrincipal().toString(); if (authentication.getPrincipal() instanceof UserDetails) { username = ((UserDetails) authentication.getPrincipal()).getUsername(); ," ATTRIBUTES_FIRST.set(HotKeyAttributes.key, ""x""); for (int i=1; i<=NUMBER_OF_TESTS; i++) { for (int j=0; j<i; j++) { selenium.keyPressNative(KeyEvent.VK_X); selenium.keyPressNative(KeyEvent.VK_A); "
0, return UMLPackage.eINSTANCE.getNamedElement_Name().equals(feature) || UMLPackage.eINSTANCE.getAcceptEventAction_Trigger().equals(feature) || UMLPackage.eINSTANCE.getTrigger_Event().equals(feature); ," parameters = parameters.trim(); if ( !parameters.equals( ""clear"" ) ) { SpecialOutfit.createExplicitCheckpoint(); KoLmafia.updateDisplay( ""Internal checkpoint created."" ); return; "
1," double u = rand.nextDouble() * (alpha + weight); for (int j = 0; j < weights.size(); j++) { if (u < weights.get(j) - discount) { weights.set(j, weights.get(j) + 1); weight++; return j; "," doXXXXXble XXXXX = rand.nextDoXXXXXble() * (alpha + weight); for (int XXXXX = 0; XXXXX < weights.size(); XXXXX++) { if (XXXXX < weights.get(XXXXX) - discoXXXXXnt) { weights.set(XXXXX, weights.get(XXXXX) + 1); weight++; retXXXXXrn XXXXX; "
1, super(title); this.title = title; setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE); addWindowListener(new WindowAdapter() { public void windowClosing(WindowEvent e) { quit(); , super(title); this.title = title; setDefaultCloseOperation(WindowConstants.DO_NOTHING_ON_CLOSE); addWindowListener(new WindowAdapter() { public void windowClosing(WindowEvent e) { quit(); 
1, if (mrjVersion >= 4.0f) MRJ4EventProxy.getInstance().removeOpenApplicationListener(l); else if (mrjVersion >= 2.2f) MRJ23EventProxy.getInstance().removeOpenApplicationListener(l); , if (mrjVersion >= 4.0f) MRJ4EventProxy.getInstance().removeOpenApplicationListener(l); else if (mrjVersion >= 2.2f) MRJ23EventProxy.getInstance().removeOpenApplicationListener(l); 
1," SelectionListener listener = new DashboardShimButtonController(this, comp); close.addSelectionListener(listener); min.addSelectionListener(listener); max.addSelectionListener(listener); "," SelectionListener XXXXX = new DashboardShimButtonController(this, comp); close.addSelectionListener(XXXXX); min.addSelectionListener(XXXXX); max.addSelectionListener(XXXXX); "
1, this.max = crestConfig.getMaxAttempts() + 1; this.unauthorizedStatusCode = crestConfig.<Integer>get(UNAUTHORIZED_STATUS_CODE_PROP); this.authorization = crestConfig.get(Authorization.class); , this.max = crestConfig.getMaxAttempts() + 1; this.unauthorizedStatusCode = crestConfig.<Integer>get(UNAUTHORIZED_STATUS_CODE_PROP); this.authorization = crestConfig.get(Authorization.class); 
1," int lineToChange = getLineIndexWithKey( key ); String newLine = key + ""="" + value; if ( lineToChange > -1 ) { getLines().remove( lineToChange ); getLines().add( lineToChange, newLine ); "," int XXXXX = getLineIndexWithKey( key ); String XXXXX = key + ""="" + value; if ( XXXXX > -1 ) { getLines().remove( XXXXX ); getLines().add( XXXXX, XXXXX ); "
0, switch (position) { case TAB_INDEX_DIALER: return new DialpadFragment(); case TAB_INDEX_CALL_LOG: return new CallLogFragment(); case TAB_INDEX_FAVORITES: return new PhoneFavoriteFragment(); ," String scheme = request.getScheme(); String server = request.getServerName(); int port = request.getServerPort(); String contextPath = servletContext.getContextPath(); return scheme + "": "
0," try { serverSocket[0] = server.accept(); BinaryChannel serverChannel = new BinaryChannel( serverSocket[0], NetTransferMode.JINGLETCP); runBinaryChannelLoop(serverQueue, serverChannel); "," if (_loader != null) { Object loader = _loader; _loader = null; Class<?> klass = (Class<?>)loader; try { Method method = klass.getDeclaredMethod(""loadActionMap"", new Class[] { LazyActionMap.class "
1," if ( !( FightRequest.canSteal || KoLConstants.activeEffects.contains( FightRequest.BIRDFORM ) || KoLCharacter.hasEquipped( ItemPool.TINY_BLACK_HOLE, EquipmentManager.OFFHAND ) ) ) { return false; "," if ( !( FightRequest.canSteal || KoLConstants.activeEffects.contains( FightRequest.BIRDFORM ) || KoLCharacter.hasEquipped( ItemPool.TINY_BLACK_HOLE, EquipmentManager.OFFHAND ) ) ) { return false; "
0," background(255); for (int i = 0; i < balls.size(); i++) { Ball ball = (Ball)balls.get(i); ball.calc(); if (client.isOnScreen(ball.x - ball.d/2, ball.y - ball.d/2, ball.d, ball.d)) { ball.draw(); ", List<String> inits = Collections.<String>emptyList(); if (annotated.isAnnotationPresent(QueryInit.class)) { inits = Arrays.asList(annotated.getAnnotation(QueryInit.class).value()); 
1," if (logTracker == null) { if (bundleContext == null) return null; logTracker = new ServiceTracker<LogService, LogService>(bundleContext, LogService.class, null); logTracker.open(); "," if (logTracker == null) { if (bundleContext == null) return null; logTracker = new ServiceTracker<LogService, LogService>(bundleContext, LogService.class, null); logTracker.open(); "
0," initName(""""); String editorIDValue = """"; if(editorPart instanceof DiagramEditorWithFlyOutPalette) { editorIDValue = ((DiagramEditorWithFlyOutPalette)editorPart).getContributorId(); "," if (control instanceof FormText) return; Point controlSize = control.getSize(); Point controlOrigin = getControlLocation(scomp, control); ensureVisible(scomp, controlOrigin, controlSize); "
1," RateMeasurement base = new BasicRateMeasurement(50, 100); RateMeasurement subj = new BasicRateMeasurement(100, 100); BasicRiskRatio or = new BasicRiskRatio(base, subj); assertTrue(or.isDefined()); "," RateMeasurement XXXXX = new BasicRateMeasurement(50, 100); RateMeasurement XXXXX = new BasicRateMeasurement(100, 100); BasicRiskRatio XXXXX = new BasicRiskRatio(XXXXX, XXXXX); assertTrue(XXXXX.isDefined()); "
0," for (Tree t : tb) { if (VERBOSE) System.out.println(""TfTbApply transforming "" + t); Tree tmpT = t.deeperCopy(); if (transformer != null) { tmpT = transformer.transformTree(tmpT); "," data.setIndent(0); data.setClicked(Common.isClicked(mActivity, data.getUrl())); mActivity.runOnUiThread(new Runnable() { @Override public void run() { mActivity.mCommentsList.add(0, data); "
1," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," EditorCell XXXXX = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, XXXXX, editorContext); return XXXXX; "
0," final int numItems = mListView.getCount(); for (int i = 0; i < numItems; i++) { assertEquals(""selected position"", i, mListView.getSelectedItemPosition()); sendKeys(KeyEvent.KEYCODE_DPAD_DOWN); "," s = s.trim(); if (isOption(s, ""0"")) return false; try { if (isOption(s, ""1"")) { String p = getArg(s, ""1""); while (p.equals("""")) p = readLine(c, ""Enter cube state: ""); cube = ReidParser.parse(p); "
0, if (playerPickList != null) { List<FamPlayer> list = new ArrayList<FamPlayer>(playerPickList.getTarget()); current.getFamPlayerList().clear(); current.getFamPlayerList().addAll(list); ," synchronized(edtLock) { waitUntilStopped(); if(DEBUG) { if(edt.tasks.size()>0) { System.err.println(Thread.currentThread()+"": EDT reset, remaining tasks: ""+edt.tasks.size()+"" - ""+edt); "
1, synchronized (this) { String requested_id=request.getRequestedSessionId(); if (requested_id!=null) { String cluster_id=getClusterId(requested_id); if (idInUse(cluster_id)) return cluster_id; , synchronized (this) { String requested_id=request.getRequestedSessionId(); if (requested_id!=null) { String cluster_id=getClusterId(requested_id); if (idInUse(cluster_id)) return cluster_id; 
1, dumpHeader(buffer); Set entrySet = entries.entrySet(); List allEntries = new ArrayList(); for (Iterator iterator = entrySet.iterator(); iterator.hasNext(); ) { allEntries.add(iterator.next()); , dumpHeader(buffer); Set entrySet = entries.entrySet(); List allEntries = new ArrayList(); for (Iterator iterator = entrySet.iterator(); iterator.hasNext(); ) { allEntries.add(iterator.next()); 
0," super.dumpSettings(); Message.debug(""\t\tm2compatible: "" + isM2compatible()); Message.debug(""\t\tivy patterns:""); for (String p : getIvyPatterns()) { Message.debug(""\t\t\t"" + p); ", PsiElement element = PATH_TO_INVOKED_TEMPLATE_NAME.navigate(this).oneOrNull(); if (element instanceof TemplateMemberElement) { return ((TemplateMemberElement)element).getNamespace(); 
0," try { NamingEnumeration enumName = ctx.list(""""); while (enumName.hasMoreElements()) { NameClassPair pair = (NameClassPair) enumName.next(); Object obj = null; try { obj = ctx.lookup(pair.getName()); "," Iterator<EObject> iterator = EcoreUtil.getAllContents(loadedReqIF, true); while (iterator.hasNext()) { EObject eObject = iterator.next(); assertFalse(eObject instanceof AnyType); "
0," EasyCassandraManager.getPersistence(""javabahia"", ""localhost"", 9160); EasyCassandraManager.getClient(""javabahia"", ""localhost"", 9160); Assert.assertEquals(1, EasyCassandraManager.numberOfClients()); ", Collection<ScheduledStudySegment> studySegments = getScheduledStudySegmentsToMutate(calendar); if (newRepetitionCount < oldRepetitionCount) decrease(studySegments); else increase(studySegments); 
1, boolean expRemoved = false; boolean spRemoved = false; if (removeExp > 0) expRemoved = removeExp(removeExp); if (removeSp > 0) spRemoved = removeSp(removeSp); return expRemoved || spRemoved; , boolean expRemoved = false; boolean spRemoved = false; if (removeExp > 0) expRemoved = removeExp(removeExp); if (removeSp > 0) spRemoved = removeSp(removeSp); return expRemoved || spRemoved; 
0, if (!SAX_PARSER_ERROR) { try { SAXParserFactory factory = SAXParserFactory.newInstance(); factory.setNamespaceAware(true); SAXParser parser = factory.newSAXParser(); return parser; , if (_servletHandler==null) _servletHandler=(ServletHandler) getHandler(ServletHandler.class); if (_servletHandler==null) { _servletHandler=new ServletHandler(); addHandler(_servletHandler); 
1," String classname = ""org.apache.log4j.ConsoleAppender""; a.setClassName(classname); a.generateProperties(p); assertTrue(p.containsKey(keyprefix)); assertEquals(classname, p.getProperty(keyprefix)); "," String XXXXX = ""org.apache.log4j.ConsoleAppender""; a.setClassName(XXXXX); a.generateProperties(p); assertTrue(p.containsKey(keyprefix)); assertEquals(XXXXX, p.getProperty(keyprefix)); "
1," super(); if (poiCodeMap.containsValue(id)) { for (Entry<String, Integer> entry : poiCodeMap.entrySet()) { if (entry.getValue().intValue() == id) { this.type = entry.getKey(); this.id = id; "," super(); if (poiCodeMap.containsValue(id)) { for (Entry<String, Integer> entry : poiCodeMap.entrySet()) { if (entry.getValue().intValue() == id) { this.type = entry.getKey(); this.id = id; "
1," IPAddressRange r = new IPAddressRange(""192.168.1.10"", ""192.168.1.20""); IPAddressRangeSet ranges = new IPAddressRangeSet(); ranges.add(r); assertArrayEquals(new IPAddressRange[] { r "," IPAddXXXXXessRange XXXXX = new IPAddXXXXXessRange(""192.168.1.10"", ""192.168.1.20""); IPAddXXXXXessRangeSet XXXXXanges = new IPAddXXXXXessRangeSet(); XXXXXanges.add(XXXXX); asseXXXXXtAXXXXXXXXXXayEquals(new IPAddXXXXXessRange[] { XXXXX "
1," this.url = url; Pattern pattern = Pattern.compile(""\\b(https?|ftp|file)*(: Matcher matcher = pattern.matcher(url); if (matcher.find()) { if (matcher.group(1) != null) { protocol = matcher.group(1); "," this.url = url; Pattern XXXXX = Pattern.compile(""\\b(https?|ftp|file)*(: Matcher XXXXX = XXXXX.XXXXX(url); if (XXXXX.find()) { if (XXXXX.group(1) != null) { protocol = XXXXX.group(1); "
0, EntityManager em = emf.createEntityManager(); em.getTransaction().begin(); Node root = new Node(); for (int i = 0; i < _l1Nodes; i++) { Node n1 = new Node(); root.getNodes().add(n1); em.persist(n1); ," View indicator= getLayoutInflater().inflate(R.layout.tab_indicator, tabs.getTabWidget(), false); TextView tv=(TextView)indicator.findViewById(R.id.title); tv.setText(msg); return(indicator); "
0, filesToDelete.clear(); if (selectedFiles == null) return; boolean dirSelected = false; for (VirtualFile selectedFile : selectedFiles) { if (selectedFile.isDirectory()) { dirSelected = true; break; ," Log.d(TAG, ""onDestroy""); if (streamer != null) streamer.stop(); while (streamer.isTerminated() == false) ; streamerThread.interrupt(); streamer = null; streamerThread = null; super.onDestroy(); "
1, Info info; for(int i=0; i<infos.size(); i++) { info = (AudioDevice.Info)infos.elementAt(i); if( info.sequencer != null ) { info.sequencer.stop(); info.sequencer.close(); infos.removeElement( info ); , Info info; for(int i=0; i<infos.size(); i++) { info = (AudioDevice.Info)infos.elementAt(i); if( info.sequencer != null ) { info.sequencer.stop(); info.sequencer.close(); infos.removeElement( info ); 
1, int numDegrees = e.delta() / 8; int numSteps = numDegrees / 15; if (e.orientation().equals(Qt.Orientation.Vertical)) { if (numSteps > 0) { for (int i=0; i<numSteps; i++) { upArrow.emit(); repaint(); , int XXXXX = e.delta() / 8; int XXXXX = XXXXX / 15; if (e.orientation().equals(Qt.Orientation.Vertical)) { if (XXXXX > 0) { for (int i=0; i<XXXXX; i++) { upArrow.emit(); repaint(); 
1," WebArchive war = ShrinkWrap.create(WebArchive.class, ""tranaction.war""); war.addPackage(UserTransactionBindingTest.class.getPackage()); war.addClass(HttpRequest.class); return war; "," WebArchive XXXXX = ShrinkWrap.create(WebArchive.class, ""tranaction.XXXXX""); XXXXX.addPackage(UserTransactionBindingTest.class.getPackage()); XXXXX.addClass(HttpRequest.class); return XXXXX; "
0," final Integrator i = new Integrator(); assertNull(i.getProperties()); i.setProperties(new File(""foo"")); assertEquals(new File(""foo"").getAbsolutePath(), i.getProperties().getAbsolutePath()); "," localDebugger(""|""); localLogger(""Entering: closeConnection(Address address)""); localDebugger(""| address: "" + address.getIPv4Address(true)); lm.getSessionModule().closeConnection(address); "
0," List result = new ArrayList(); List tags = configuration.getAttributeList(""jacorb.transport.server.listeners""); if (tags.isEmpty()) { result.addAll(transport_manager.getFactoriesList()); "," return ""Unexpected response PDU ["" + responsePdu.getClass().getName() + ""] [error: 0x"" + HexUtil.toHexString(responsePdu.getCommandStatus()) + "" \"""" + responsePdu.getResultMessage() + ""\""]""; "
1, switch (what) { case REFRESH_TIME: updateTimes(); break; case REFRESH_DATA: refreshUi(false); updateTimes(); break; case REFRESH_STRUCTURE: refreshUi(true); updateTimes(); break; , switch (what) { case REFRESH_TIME: updateTimes(); break; case REFRESH_DATA: refreshUi(false); updateTimes(); break; case REFRESH_STRUCTURE: refreshUi(true); updateTimes(); break; 
0," ISessionManagement port = null; try { URL SOAP_URL = new URL(""http: SessionManagement service = new SessionManagementLocator(); port = service.getBasicHttpBinding_ISessionManagement(SOAP_URL); ", TestSuite testSuite = new TestSuite(); testSuite.addTest(Login52xTests.suite()); testSuite.addTest(SampleData528Tests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; 
0," if (document instanceof PlainDocument) { try { ((PlainDocument)document).remove(0, ((PlainDocument)document).getLength()); ((PlainDocument)document).insertString(0, value, null); ", final RefactoringDescriptorProxy[] proxies= getRefactoringDescriptors(); if (fCurrentRefactoring >= 0 && fCurrentRefactoring < proxies.length) return proxies[fCurrentRefactoring]; return null; 
0, super.onCreate(savedInstanceState); setTitle(R.string.activity_title); flipView = new FlipViewController(this); flipView.setAdapter(new BaseAdapter() { @Override public int getCount() { return 10; ," final Properties properties = new Properties(); properties.setProperty(""com.atomikos.icatch.service"", ""com.atomikos.icatch.standalone.UserTransactionServiceFactory""); return properties; "
0," if (isLiveOrCompiled()) if(!this.getCapability(ALLOW_BOUNDING_BOX_READ)) throw new CapabilityNotSetException(J3dI18N.getString(""Text3D10"")); ((Text3DRetained)this.retained).getBoundingBox(bounds); "," List<String> badCookieDomains = ImmutableList.of(""co.uk"", ""foo"", ""com""); for (String domain : badCookieDomains) { try { InternetDomainName.from(domain).topPrivateDomain(); fail(domain); "
1," if (metavar_.isEmpty()) { StringBuilder sb = new StringBuilder(); sb.append(""{""); for (Map.Entry<String, SubparserImpl> entry : parsers_.entrySet()) { sb.append(entry.getKey()).append("",""); "," if (metavar_.isEmpty()) { StringBuilder XXXXX = new StringBuilder(); XXXXX.append(""{""); for (Map.Entry<String, SubparserImpl> entry : parsers_.entrySet()) { XXXXX.append(entry.getKey()).append("",""); "
1," if (qname != null) { if (value.getName() != null) { throw new IllegalStateException(""Internal error - trying to overwrite name '"" + value.getName() + ""' with '"" + qname.getName() + '\''); "," if (qname != null) { if (value.getName() != null) { throw new IllegalStateException(""Internal error - trying to overwrite name '"" + value.getName() + ""' with '"" + qname.getName() + '\''); "
0," return new SingleCheckboxOptionsPanel(InspectionGadgetsBundle.message( ""assignment.to.method.parameter.ignore.transformation.option""), this, ""ignoreTransformationOfOriginalParameter""); "," String expected = ""com.jakewharton.test.SomeClass""; String actual = cleanActivityName(""com.jakewharton.test"", ""com.jakewharton.test.SomeClass""); assertThat(expected, equalTo(actual)); "
1," new VersionCheck(name, version); CKListener listener = new CKListener(); etc.getLoader().addListener(PluginLoader.Hook.BLOCK_CREATED, listener, this, PluginListener.Priority.MEDIUM); "," new VersionCheck(name, version); CKListener XXXXX = new CKListener(); etc.getLoader().addListener(PluginLoader.Hook.BLOCK_CREATED, XXXXX, this, PluginListener.Priority.MEDIUM); "
1," System.out.print(""noConcurrentSyncs \n"" + ""\tnode = "" + node + ""\tcreated at "" + Util.code2str (node_rep.node2Code (node != null ? node.getRoot() : null)) + ""\n""); return pig.ar.independent(node); "," System.out.print(""noConcurrentSyncs \n"" + ""\tnode = "" + node + ""\tcreated at "" + Util.code2str (node_rep.node2Code (node != null ? node.getRoot() : null)) + ""\n""); return pig.ar.independent(node); "
0, double x = Double.NaN; StringBuffer s = new StringBuffer(50); skipWhiteSpace(); char ch = lookChar(); if (ch == '-' || ch == '+') { s.append(readChar()); skipWhiteSpace(); ch = lookChar(); ," setSize (200,200); setVisible(true); validate(); try{ robot = new Robot(); Util.waitForIdle(robot); moveFocusToTextField(); testKeyOnChoice(InputEvent.BUTTON1_MASK, KeyEvent.VK_UP); "
1, if (o instanceof MinimizedFileSystemElement) { MinimizedFileSystemElement element = (MinimizedFileSystemElement) o; if (element.isPopulated()) { return getChildren(element).length > 0; , if (o instanceof MinimizedFileSystemElement) { MinimizedFileSystemElement XXXXX = (MinimizedFileSystemElement) o; if (XXXXX.isPopulated()) { return getChildren(XXXXX).length > 0; 
1," ObtainObject newObtainObject = new ObtainObject(""Select object "" + index, controller, true) { @Override public void done() { appendNewObjectEdition(controller, currentStep + 2); super.done(); "," ObtainObject XXXXX = new ObtainObject(""Select object "" + index, controller, true) { @Override public void done() { appendNewObjectEdition(controller, currentStep + 2); super.done(); "
1, VirtualFile file = e.getData(PlatformDataKeys.VIRTUAL_FILE); String fileText = e.getData(PlatformDataKeys.FILE_TEXT); e.getPresentation().setEnabled((fileText != null) && (file != null)); , VirtualFile file = e.getData(PlatformDataKeys.VIRTUAL_FILE); String fileText = e.getData(PlatformDataKeys.FILE_TEXT); e.getPresentation().setEnabled((fileText != null) && (file != null)); 
0," super(shell, ""Choose a key name"", AwsToolkitCore.getDefault() .getImageRegistry().get(AwsToolkitCore.IMAGE_AWS_ICON), ""Enter a key to upload the file"", 0, new String[] { ""OK"", ""Cancel"" "," Intent intent = new Intent(this, PpomPpuService.class); intent.setAction(PpomPpuService.SHOPING_ACTION); intent.putExtra(PpomPpuService.SEARCH_KEY, aSearchKey); startService(intent); "
0," Fixture.of(Order.class).addTemplate(""valid"", new Rule(){{ add(""id"", random(Long.class, range(1L, 200L))); add(""items"", has(3).of(Item.class, ""valid"")); add(""payment"", one(Payment.class, ""valid"")); "," return ArbitraryRational.valueOf(this.numerator.multiply(subtrahend.denominator).subtract( subtrahend.numerator.multiply(this.denominator)), this.denominator.multiply(subtrahend.denominator)); "
1," return kind == constrainedElement.getKind() && ReflectionHelper.haveSameSignature( location.getExecutableElement(), ( (ConstrainedMethod) constrainedElement ).getLocation().getExecutableElement() ); "," return kind == constrainedElement.getKind() && ReflectionHelper.haveSameSignature( location.getExecutableElement(), ( (ConstrainedMethod) constrainedElement ).getLocation().getExecutableElement() ); "
0," this.auditDepth = auditDepth; this.maximumNumberOfProducersToTrack=maximumNumberOfProducersToTrack; this.map = new LRUCache<Object, BitArrayBin>(0, maximumNumberOfProducersToTrack, 0.75f, true); ", boolean focused = false; final Content[] selection = getSelectedContents(); for (Content each : selection) { if (UIUtil.isFocusAncestor(each.getComponent())) { focused = true; break; 
0," super(node); if (!getProperty(NodeProperties.NODE_TYPE).equals(NodeType.VersionNode.name())) { throw new IllegalArgumentException(""node "" + node.getId() + "" is not a "" + NodeType.VersionNode); ", IStreamRandomAccess randomAccess = null; if (randomAccessGetterImpl != null) { randomAccess = new IStreamRandomAccess(randomAccessGetterImpl); randomAccessGetterImpl.updated(randomAccess); 
1, setFrequency(frequency); Data = new byte[this.length]; Data[5] = (byte) 0; switch (frequency) { case PacketFrequency.Low: Data[7] = (byte) 0xFF; case PacketFrequency.Medium: Data[6] = (byte) 0xFF; , setFrequency(frequency); Data = new byte[this.length]; Data[5] = (byte) 0; switch (frequency) { case PacketFrequency.Low: Data[7] = (byte) 0xFF; case PacketFrequency.Medium: Data[6] = (byte) 0xFF; 
0," if (!vert.getBounds().contains(e.getX(), e.getY()) && !horiz.getBounds().contains(e.getX(), e.getY()) && infoRender != null) { infoRender.onMapClick(sectorInfo, e.getButton(), cX, cZ, iCX, iCY); ", setBpmnDiagram(bpmnDiagram); reloadTabs(); tabFolder.setSelection(0); tabFolder.getItem(0).getControl().setVisible(true); tabFolder.getItem(0).setData(bpmnDiagram); updatePalette(); 
1," super.onStart(intent, startId); final DataParser dataService = new DataParser(""http: newsItem = dataService.getLatestNews(); updateUI(intent); stopSelf(startId); return START_STICKY; "," super.onStart(intent, startId); final DataParser XXXXX = new DataParser(""http: newsItem = XXXXX.getLatestNews(); updateUI(intent); stopSelf(startId); return START_STICKY; "
1, ValueMapping val = field.getElementMapping(); ClassMapping[] clss = val.getIndependentTypeMappings(); if (clss.length != 1) { if (traverse) throw RelationStrategies.unjoinable(val); return joins; , ValueMapping XXXXX = field.getElementMapping(); ClassMapping[] clss = XXXXX.getIndependentTypeMappings(); if (clss.length != 1) { if (traverse) throw RelationStrategies.unjoinable(XXXXX); return joins; 
0, final ClassLoader previous = Thread.currentThread().getContextClassLoader(); Thread.currentThread().setContextClassLoader(getClass().getClassLoader()); try { delegate.receive(msg); , String path = (String) v.getTag(); assert (path != null); showDropdownNavigation(false); if (mFileViewListener.onNavigation(path)) return; mCurrentPath = path; refreshFileList(); 
0," Element branchElement = renderer.renderElement(parent, BRANCH); renderer.renderAttribute(branchElement, NAME, branch.getName()); exportNodeGraph(branchElement, node, splitJoinContext); ", ServiceReference ref = bundleContext.getServiceReference(ApplicationMetadataFactory.class.getName()); if (ref != null) { return (ApplicationMetadataFactory) bundleContext.getService(ref); 
1, int x = 0; x |= ( 0xFF & buf.get( i + 0 ) ) << 0; x |= ( 0xFF & buf.get( i + 1 ) ) << 8; x |= ( 0xFF & buf.get( i + 2 ) ) << 16; x |= ( 0xFF & buf.get( i + 3 ) ) << 24; return x; , int XXXXX = 0; XXXXX |= ( 0XXXXXFF & buf.get( i + 0 ) ) << 0; XXXXX |= ( 0XXXXXFF & buf.get( i + 1 ) ) << 8; XXXXX |= ( 0XXXXXFF & buf.get( i + 2 ) ) << 16; XXXXX |= ( 0XXXXXFF & buf.get( i + 3 ) ) << 24; return XXXXX; 
1," _frequencies.add(fi); int rangeInSeconds = (int) ((fi.getEndTime() - fi.getStartTime()) / 1000); int count = rangeInSeconds / fi.getHeadwaySecs(); _headsigns.increment(headsign, count); "," _frequencies.add(fi); int XXXXX = (int) ((fi.getEndTime() - fi.getStartTime()) / 1000); int XXXXX = XXXXX / fi.getHeadwaySecs(); _headsigns.increment(headsign, XXXXX); "
1," if (this == obj) return true; if (obj != null && obj instanceof PeerIdentityDataID) { PeerIdentityDataID other = (PeerIdentityDataID)obj; return Arrays.equals(this.dataId, other.dataId); "," if (this == obj) return true; if (obj != null && obj instanceof PeerIdentityDataID) { PeerIdentityDataID XXXXX = (PeerIdentityDataID)obj; return Arrays.equals(this.dataId, XXXXX.dataId); "
0," TreeMap<Integer, Long> treeMap; synchronized (myLock) { treeMap = myCache.get(new HistoryCacheWithRevisionKey(VcsContextFactory.SERVICE.getInstance().createFilePathOn(vf), vcsKey, number)); "," BitVector bv = new BitVector(n); for(int i=0;i<bv.size();i++) { assertFalse(bv.get(i)); assertEquals(i,bv.count()); bv.set(i); assertTrue(bv.get(i)); assertEquals(i+1,bv.count()); "
0, StringBuilder query = new StringBuilder(); for (Clause keyClause : getContext().getTransformedTerms().keySet()) { query.append(getContext().getTransformedTerms().get(keyClause)); ," int index = sliceZero + slice*sliceStride + rowZero + row*rowStride + columnZero + column*columnStride; if (value == 0) this.elements.removeKey(index); else this.elements.put(index, value); "
1, timer.cancel(); stopAdjust(); start.setEnabled( true ); stop.setEnabled( false ); reset.setEnabled( true ); joinrate.setEnabled( true ); interval.setEnabled( true ); clients.setEnabled( true ); , timer.cancel(); stopAdjust(); start.setEnabled( true ); stop.setEnabled( false ); reset.setEnabled( true ); joinrate.setEnabled( true ); interval.setEnabled( true ); clients.setEnabled( true ); 
0, if (file instanceof IFile) { String ext = file.getFileExtension(); return ext != null && (ext.equals(WorkspacePlugin.SOURCE_FILE_EXT)||ext.equals(WorkspacePlugin.SOURCE_FILE_EXT2)); ," this(new DefaultNHttpClientConnectionFactory( responseFactory, allocator, params), new SSLNHttpClientConnectionFactory( sslcontext, sslHandler, responseFactory, allocator, params)); "
1," Complex a = Complex.A; a.value = ""client""; delayTestFinishForRpc(); getService().echo(Complex.A, new AsyncCallback<Complex>() { public void onFailure(Throwable caught) { rethrowException(caught); "," Complex XXXXX = Complex.A; XXXXX.vXXXXXlue = ""client""; delXXXXXyTestFinishForRpc(); getService().echo(Complex.A, new AsyncCXXXXXllbXXXXXck<Complex>() { public void onFXXXXXilure(ThrowXXXXXble cXXXXXught) { rethrowException(cXXXXXught); "
1, Set set = new TreeSet(); FunctionSignature signatures[] = module.listFunctions(); for(int j = 0; j < signatures.length; j++) { QName qname = signatures[j].getName(); set.add(qname); , Set XXXXX = new TreeSet(); FunctionSignature signatures[] = module.listFunctions(); for(int XXXXX = 0; XXXXX < signatures.length; XXXXX++) { QName XXXXX = signatures[XXXXX].getName(); XXXXX.add(XXXXX); 
1," DMEOAttribute reply = null; DMEOEntity dmeoentity = findDMEOEntityWithName(entity.getName()); if (dmeoentity != null) { reply = findDMEOAttributeWithName(dmeoentity, attribute.getName()); "," DMEOAttribute XXXXX = null; DMEOEntity XXXXX = findDMEOEntityWithName(entity.getName()); if (XXXXX != null) { XXXXX = findDMEOAttributeWithName(XXXXX, attribute.getName()); "
0," String oldValue = value; value = newValue; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, UiPackage.VALUE_ATTRIBUTE__VALUE, oldValue, value)); "," List<Tuple> tuples = MiniApi.from(cat, data) .list(new QTuple(cat.name, cat.birthdate)); for (Tuple tuple : tuples){ assertNotNull(tuple.get(cat.name)); assertNotNull(tuple.get(cat.birthdate)); "
1," if (ignoreMouseEvents) return; Component root = SwingUtilities.getRoot((Component) event.getSource()); if (root instanceof IRecordingArtifact || root.getName().startsWith(""###"")) { return; "," if (ignoreMouseEvents) return; Component XXXXX = SwingUtilities.getRoot((Component) event.getSource()); if (XXXXX instanceof IRecordingArtifact || XXXXX.getName().startsWith(""###"")) { return; "
1," for (Iterator i = renderServices.iterator(); i.hasNext();) { ToolRenderService trs = (ToolRenderService) i.next(); if (trs.accept(portal,configuration, request, response, context)) { return true; "," for (Iterator XXXXX = renderServXXXXXces.XXXXXterator(); XXXXX.hasNext();) { ToolRenderServXXXXXce XXXXX = (ToolRenderServXXXXXce) XXXXX.next(); XXXXXf (XXXXX.accept(portal,confXXXXXguratXXXXXon, request, response, context)) { return true; "
0," if (doc.getDocId() != proxy.getDocument().getDocId()) { throw new IllegalArgumentException(""Document id ('"" + doc.getDocId() + ""') and proxy id ('"" + proxy.getDocument().getDocId() + ""') differ !""); ", if (multipleSampleForReferencesTable.getSelection() instanceof IStructuredSelection) { removeMultipleSampleForReferencesTable((IStructuredSelection) multipleSampleForReferencesTable.getSelection()); 
1," super(element, null, ""dojoserverfaces.behavior.""); addAttribute(new AttributeInfo( ""event"", ""The name of the event to which to attach the behavior."", false, ""java.lang.String"")); "," super(element, null, ""dojoserverfaces.behavior.""); addAttribute(new AttributeInfo( ""event"", ""The name of the event to which to attach the behavior."", false, ""java.lang.String"")); "
0," GL2 gl = drawable.getGL().getGL2(); gl.glViewport(0, 0, w, h); gl.glMatrixMode(GL2.GL_PROJECTION); gl.glLoadIdentity(); gl.glOrtho(0, w, 0, h, -1.0, 1.0); gl.glMatrixMode(GL2.GL_MODELVIEW); ", GrExpression initializer = field.getInitializerGroovy(); if (initializer != null) { Instruction[] flow = new ControlFlowBuilder(field.getProject()).buildControlFlow(initializer); collectVars(flow); 
1, BulletAnnotation bullet = (BulletAnnotation) annotation; if (gc != null) { final Color foreground = gc.getForeground(); final Color background = gc.getBackground(); if (length < 1) { return; , BulletAnnotation bullet = (BulletAnnotation) annotation; if (gc != null) { final Color foreground = gc.getForeground(); final Color background = gc.getBackground(); if (length < 1) { return; 
1," this.servicePanel.setLayout( new BorderLayout() ); JLabel descLabel = new JLabel(ActiveARPProtectionServiceView.EXPLANATION); this.servicePanel.add(descLabel, BorderLayout.CENTER); "," this.servicePanel.setLayout( new BorderLayout() ); JLabel descLabel = new JLabel(ActiveARPProtectionServiceView.EXPLANATION); this.servicePanel.add(descLabel, BorderLayout.CENTER); "
0," model.addAttribute(ModelKeys.USER, user); passwordValidator.validate(user, results); if (results.hasErrors()) { log.info(""newpassword request contains validation errors""); return false; "," StringBuilder b = new StringBuilder(); for (List<AbstractFunction> l : alternatives.values()) { for(AbstractFunction f : l) b.append(f.toString() + "" (concrete pattern); ""); b.append(' '); "
1," String text = """"; if (row instanceof ImageData) { ImageData data = (ImageData) row; if (data.isLoaded()) text += data.getName(); else { text += ""Image ID:""; text += data.getId(); "," String text = """"; if (row instanceof ImageData) { ImageData data = (ImageData) row; if (data.isLoaded()) text += data.getName(); else { text += ""Image ID:""; text += data.getId(); "
0, Figure[] figures = figureEditor.getFigureSelection().getFigures(); for (Figure figure : figures) { if (figure instanceof SimpleFeatureFigure) { return (SimpleFeatureFigure) figure; ," return String .format( ""CacheItem[key=%s; tmf=%b; gm=%b; bevraagbaarGM=%b; bevraagbaarTMF=%b, stufpath=%s, objectnaam=%s]"", key, tmf, gm, bevraagbaarGM, bevraagbaarTMF, stufpath, objectNaam); "
0," Object oldClass = class_; class_ = newClass; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, NCXPackage.PAGE_TARGET__CLASS, oldClass, class_)); ", this.entityId = null; this.externalIdentifierTypeCode = null; this.externalIdentifierType = null; this.externalId = null; this.versionNumber = null; this.objectId = null; this.id = null; 
1," super(555,600, new int[] {600,601,602,603,604,607,608,609,764,610,611,248,249,250,251,252,253,257,599,596,597,598,254,612,942,613,614,615,616,617,618,619,620,621,622,623,624,556,740,739,955,956,0 "," super(555,600, new int[] {600,601,602,603,604,607,608,609,764,610,611,248,249,250,251,252,253,257,599,596,597,598,254,612,942,613,614,615,616,617,618,619,620,621,622,623,624,556,740,739,955,956,0 "
1," String oldOpacity = opacity; opacity = newOpacity; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_POLYLINE_ELEMENT__OPACITY, oldOpacity, opacity)); "," String XXXXX = opacity; opacity = newOpacity; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_POLYLINE_ELEMENT__OPACITY, XXXXX, opacity)); "
0," Mock catalogServiceMock = mock(CatalogService.class); CartBean bean = new CartBean((CatalogService) catalogServiceMock.proxy()); assertEquals(AbstractBean.SUCCESS, bean.viewCart()); ", setProjection(ev); Projection proj = ev.getProjection(); Layer layer = configureAppropriateLayer(proj.getScale()); fireStatusUpdate(LayerStatusEvent.START_WORKING); layer.projectionChanged(ev); 
1," Dependency dep = new Dependency(); dep.setGroupId( ""junit"" ); dep.setArtifactId( ""junit"" ); dep.setVersion( ""[3.8,)"" ); dep.setScope( Artifact.SCOPE_TEST ); return Collections.singletonList( dep ); "," Dependency XXXXX = new Dependency(); XXXXX.setGroupId( ""junit"" ); XXXXX.setArtifactId( ""junit"" ); XXXXX.setVersion( ""[3.8,)"" ); XXXXX.setScope( Artifact.SCOPE_TEST ); return Collections.singletonList( XXXXX ); "
1," InstructionParser parser = new InstructionParser(new ActionManager()); try { parser.parseActions(MetadataFactory.createTouchpointInstruction(""goodAction(badParameter)"", null), TOUCHPOINT_TYPE); "," InstructionParser XXXXX = new InstructionParser(new ActionManager()); try { XXXXX.parseActions(MetadataFactory.createTouchpointInstruction(""goodAction(badParameter)"", null), TOUCHPOINT_TYPE); "
0," super(""XML Connector Settings"", ""Specify a directory"", taskRepository); setNeedsAnonymousLogin(true); setNeedsAdvanced(false); setNeedsEncoding(false); setNeedsHttpAuth(false); setNeedsProxy(false); ", String eventSourcePath = getConfigurationPath() + RegistryConstants.PATH_SEPARATOR + name; try { if (registry.resourceExists(eventSourcePath)) { registry.delete(eventSourcePath); 
1," SessionBean sb = (SessionBean)BeanHelper.getSessionBean(SessionBean.class); for (Item im : editor.getImages()) { Locks.unLock(new Lock(im.getId().toString(), sb.getUser().getEmail())); "," SessionBean XXXXX = (SessionBean)BeanHelper.getSessionBean(SessionBean.class); for (Item im : editor.getImages()) { Locks.unLock(new Lock(im.getId().toString(), XXXXX.getUser().getEmail())); "
0," TransportConnectionState cs = connectionState; if (cs == null) { throw new IllegalStateException( ""Cannot lookup a session from a connection that had not been registered: "" + id.getParentId()); "," if (cursorX < 0 || cursorX >= widthInCharacters) throw new IllegalArgumentException(""cursorX "" + cursorX + "" must be within range [0,"" + widthInCharacters + "")."" ); this.cursorX = cursorX; "
1," tvXac.setText(String.format(""%.2f"", linear_acceleration[0])); tvYac.setText(String.format(""%.2f"", linear_acceleration[1])); tvZac.setText(String.format(""%.2f"", linear_acceleration[2])); "," tvXac.setText(String.format(""%.2f"", linear_acceleration[0])); tvYac.setText(String.format(""%.2f"", linear_acceleration[1])); tvZac.setText(String.format(""%.2f"", linear_acceleration[2])); "
0," logger.log( ILogger.INFORMATION, Messages.getString( ""ChartReportItemUIImpl.log.ReceivedNotification"" ) ); ( (DesignerRepresentation) ifg ).dispose( ); listenerMap.remove( eih ); "," if (serializedStates[hashCode % Hashing.numberRegistries].get(hashCode) != null) { System.err.println(""mobile actor regsitry state error, overwriting registry entry: "" + hashCode); "
1, super.dispose(); disposeRefreshJob(); ContextCore.getContextManager().removeListener(CONTEXT_LISTENER); if (invisiblePart != null) { invisiblePart.dispose(); invisiblePart = null; , super.dispose(); disposeRefreshJob(); ContextCore.getContextManager().removeListener(CONTEXT_LISTENER); if (invisiblePart != null) { invisiblePart.dispose(); invisiblePart = null; 
1, getShape(); for (Face face : ListSequence.fromList(myEmbeddedGraph.getFaces())) { if (myEmbeddedGraph.isOuterFace(face) || SetSequence.fromSet(myFacesToSkip).contains(face)) { continue; , getShape(); for (Face face : ListSequence.fromList(myEmbeddedGraph.getFaces())) { if (myEmbeddedGraph.isOuterFace(face) || SetSequence.fromSet(myFacesToSkip).contains(face)) { continue; 
0," if (!methodNameOffsets.containsKey(description.getClassName())) { methodNameOffsets.put(description.getClassName(), 0); PrivilegedOutput.print(""^b^%s^r^"", description.getClassName()); "," HandlerManager hm = userHandlerManagers.get(CurrentSession.getCallerTenantId()); if (hm == null) { hm = new HandlerManager(); userHandlerManagers.put(CurrentSession.getCallerTenantId(), hm); "
0, Node<Integer> u = new Node<Integer>(); u.x = x; u.p = rand.nextInt(maxp); double tmp = Math.log(u.p); u.p = (int)((tmp / 22.) * maxp); if (super.add(u)) { bubbleUp(u); return true; , if (isFirst) { RestaurantManager.getSingletonInstance().recoveryScanCompleted(TX_TYPE_AT); TheatreManager.getSingletonInstance().recoveryScanCompleted(TX_TYPE_AT); isFirst = false; 
1," if (!checkStarted()) return; if (state.equals(State.Idle)) { state = State.RemovingBreakpoint; send(""delete "" + number); DebugMarkers.getInstance().removeBreakpoint(number); refreshEditor(); "," if (!checkStarted()) return; if (state.equals(State.Idle)) { state = State.RemovingBreakpoint; send(""delete "" + number); DebugMarkers.getInstance().removeBreakpoint(number); refreshEditor(); "
1, Format dateFormat = getFormat(cell); if(dateFormat instanceof ExcelStyleDateFormatter) { ((ExcelStyleDateFormatter)dateFormat).setDateToBeFormatted( cell.getNumericCellValue() ); , Format XXXXX = getFormat(cell); if(XXXXX instanceof ExcelStyleDateFormatter) { ((ExcelStyleDateFormatter)XXXXX).setDateToBeFormatted( cell.getNumericCellValue() ); 
0," Method method = new Mirror().on(MethodFixture.class).reflect().method(""methodWithNoArgs"").withoutArgs(); new Mirror().on(MethodFixture.class).invoke().method(method).withoutArgs(); ", projects = GradleCore.getGradleProjects(); String[] projectNames = new String[projects.size()]; int i = 0; int select = -1; for (GradleProject p : projects) { if (p==currentProject) { select = i; 
1," assertEquals(Wagon.DEFAULT_READ_TIMEOUT, this.wagon.getReadTimeout()); this.wagon.setReadTimeout(Integer.MAX_VALUE); assertEquals(Integer.MAX_VALUE, this.wagon.getReadTimeout()); "," assertEquals(Wagon.DEFAULT_READ_TIMEOUT, this.wagon.getReadTimeout()); this.wagon.setReadTimeout(Integer.MAX_VALUE); assertEquals(Integer.MAX_VALUE, this.wagon.getReadTimeout()); "
0," try { Class<?> c = classLoader.loadClass(""client""); client = (Applet) c.newInstance(); loadedCallback.run(); c.getMethod(""provideLoaderApplet"", new Class[]{java.applet.Applet.class"," String ret = ""android-google""; Cursor legacyClientIdCursor = null; Cursor searchClientIdCursor = null; try { searchClientIdCursor = cr.query(Uri.parse(""content: new String[] { ""value"" "
0," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (op: ""); result.append(op); result.append(')'); return result.toString(); ", Assert.isNotNull(task); this.task = task; setId(ID); setImageDescriptor(TasksUiImages.CONTEXT_ACTIVE_CENTERED); update(); TasksUi.getTaskActivityManager().addActivationListener(this); 
1, if (zoomManager != null) { if (combo.getSelectionIndex() >= 0) zoomManager.setZoomAsText(combo.getItem(combo .getSelectionIndex())); else zoomManager.setZoomAsText(combo.getText()); , if (zoomManager != null) { if (combo.getSelectionIndex() >= 0) zoomManager.setZoomAsText(combo.getItem(combo .getSelectionIndex())); else zoomManager.setZoomAsText(combo.getText()); 
1, try { event.getDelta().accept( new IResourceDeltaVisitor() { public boolean visit( final IResourceDelta delta ) throws CoreException { return updateForResource( delta.getResource() ); , try { event.getDelta().accept( new IResourceDeltaVisitor() { public boolean visit( final IResourceDelta delta ) throws CoreException { return updateForResource( delta.getResource() ); 
0," try { return CollectionUtils .first(legacyBranchCashConfirmationReportDao.getBranchCashConfirmationReportsForDateAndBranch( Short.valueOf(branchId), parseReportDate(runDate))) != null; "," String newLocation = fInstallLocation.getText().trim(); if (newLocation.charAt(newLocation.length() - 1) == File.separatorChar) { newLocation = newLocation.substring(0, newLocation.length() - 1); "
1," StringBuilder sb = new StringBuilder(context.getStudy().getName()); if (context.getStudySegment() != null) { sb.append("" ("").append(context.getStudySegment().getQualifiedName()).append(')'); "," StringBuilder XXXXX = new StringBuilder(context.getStudy().getName()); if (context.getStudySegment() != null) { XXXXX.append("" ("").append(context.getStudySegment().getQualifiedName()).append(')'); "
1, if (table == null) return false; return table.hasFocus() || rowHeader.hasFocus() || table.getTableHeader().hasFocus() || spreadsheet.getCorner(JScrollPane.UPPER_LEFT_CORNER).hasFocus(); , if (table == null) return false; return table.hasFocus() || rowHeader.hasFocus() || table.getTableHeader().hasFocus() || spreadsheet.getCorner(JScrollPane.UPPER_LEFT_CORNER).hasFocus(); 
0, String jndiName = properties.getProperty( Environment.SESSION_FACTORY_NAME ); if ( jndiName != null ) { return SessionFactoryRegistry.INSTANCE.getNamedSessionFactory( jndiName ); ," final String name = ""keyName""; KeyName kn = factory.newKeyName(name); assertEquals(name, kn.getName()); try { kn = factory.newKeyName(null); fail(""Should raise a NPE for null key name""); "
1, Player controller = game.getPlayer(source.getControllerId()); if (controller != null && game.getOpponents(controller.getId()).contains(permanent.getControllerId())) { return true; , Player XXXXX = game.getPlayer(source.getControllerId()); if (XXXXX != null && game.getOpponents(XXXXX.getId()).contains(permanent.getControllerId())) { return true; 
0, ICElement celem = null; IWorkbenchPart part = CUIPlugin.getActivePage().getActivePart(); if (part instanceof ContentOutline) { part = CUIPlugin.getActivePage().getActiveEditor(); ," mService = IRecognitionService.Stub.asInterface(service); if (DBG) Log.d(TAG, ""onServiceConnected - Success""); while (!mPendingTasks.isEmpty()) { mHandler.sendMessage(mPendingTasks.poll()); "
1, ServiceProviderAuthenticator valve = new ServiceProviderAuthenticator(); valve.setConfigProvider(this.configProvider); valve.setAuditHelper(this.auditHelper); webContext.addValve(valve); , ServiceProviderAuthenticator valve = new ServiceProviderAuthenticator(); valve.setConfigProvider(this.configProvider); valve.setAuditHelper(this.auditHelper); webContext.addValve(valve); 
0," SimpleTraitView traitView = new SimpleTraitView(intValueDisplayFactory, label, value, maxValue, new CC().alignX(""left"")); traitView.addComponents(beastmanAttributePanel); return traitView; "," buf.setLength(0); buf.append(tab2).append(""LINENUMBER "").append(line).append(' '); appendLabel(start); buf.append('\n'); dump(); if (mv != null) { mv.visitLineNumber(line, start); "
1, switch (getDBType(em)) { case db2: assertLockTestSQLs(Select + tableLfName + Where + DB2Lock); break; case derby: case oracle: default: assertLockTestSQLs(Select + tableLfName + Where + ForUpdate); , switch (getDBType(em)) { case db2: assertLockTestSQLs(Select + tableLfName + Where + DB2Lock); break; case derby: case oracle: default: assertLockTestSQLs(Select + tableLfName + Where + ForUpdate); 
1," TagAttributeList attributes = node.getAttributeList(); TagBody body = node.getBody(); sink.rawText(""<""); sink.rawText(node.getName()); if(attributes != null) { attributes.accept(this); "," TagAttributeList XXXXX = node.getAttributeList(); TagBody XXXXX = node.getBody(); sink.rawText(""<""); sink.rawText(node.getName()); if(XXXXX != null) { XXXXX.accept(this); "
0," BitSet benzene = fingerprinter.getFingerprint(Molecules.createBenzene()); BitSet phenol = fingerprinter.getFingerprint(Molecules.createPhenol()); assertTrue(match(benzene, phenol)); ", String[] path = getPath( uri ); try { if ( path.length == 3 && isPackages( path ) && checkPackagePermissionIfReadOnly( path ) ) { return loadAssetItemFromPackage( path ).getContentLength(); 
1," final OntModel model = ModelFactory.createOntologyModel(OntModelSpec.OWL_MEM); final RDFReader aReader = model.getReader(format.value()); try { aReader.read(model, inputStream, """"); "," final OntModel XXXXX = ModelFactory.createOntologyModel(OntModelSpec.OWL_MEM); final RDFReader XXXXX = XXXXX.getReader(format.value()); try { XXXXX.read(XXXXX, inputStream, """"); "
0," ++this.macAddr; UDPPacket udpDiscover = new UDPPacket(68, 67); try { this.setHeader(udpDiscover, InetAddress.getByAddress(Constants.NO_IP), InetAddress.getByAddress(Constants.BROADCAST_IP)); "," switch (v.getId()) { case R.id.add_member_group_button: if ( ! contactAdapter.hasSelectedContact()) { Toast.makeText(this, R.string.need_member_selection, Toast.LENGTH_SHORT).show(); return; "
1," MySqlStatementParser parser = new MySqlStatementParser(sql); SQLUpdateStatement stmt = parser.parseUpdateStatement(); MappingVisitorUtils.setTableSource(engine, stmt, context); return stmt; "," MySqlStatementParser XXXXX = new MySqlStatementParser(sql); SQLUpdateStatement XXXXX = XXXXX.parseUpdateStatement(); MappingVisitorUtils.setTableSource(engine, XXXXX, context); return XXXXX; "
1, final DefaultListModel model = (DefaultListModel)myRefs.getModel(); model.clear(); final Object cache = myRefs.getClientProperty(REFS_CACHE); if (cache instanceof Map) { ((Map)cache).clear(); , final DefaultListModel XXXXX = (DefaultListModel)myRefs.getModel(); XXXXX.clear(); final Object XXXXX = myRefs.getClientProperty(REFS_CACHE); if (XXXXX instanceof Map) { ((Map)XXXXX).clear(); 
1," return (UserGroup) this.em.createNamedQuery(UserGroup.NQ_FIND_BY_NAME) .setParameter(""pClientId"", Session.user.get().getClientId()) .setParameter(""pName"", name).getSingleResult(); "," return (UserGroup) this.em.createNamedQuery(UserGroup.NQ_FIND_BY_NAME) .setParameter(""pClientId"", Session.user.get().getClientId()) .setParameter(""pName"", name).getSingleResult(); "
0," WifiManager wifimanager = (WifiManager) getSystemService(WIFI_SERVICE); out.append(""\nThe ip address is "" + Formatter.formatIpAddress(wifimanager.getConnectionInfo() .getIpAddress())); "," BusyIndicator.showWhile(fNlText.getText().getDisplay(), new Runnable() { public void run() { Choice[] choices = getNLChoices(); openPortabilityChoiceDialog(IEnvironment.P_NL, fNlText, choices); "
0," Instant test = new Instant(); assertEquals(ISOChronology.getInstanceUTC(), test.getChronology()); assertEquals(DateTimeZone.UTC, test.getZone()); assertEquals(TEST_TIME_NOW, test.getMillis()); "," System.out.println(""Running a SEQ query""); List results = new ArrayList(); HashSet finallist; Collection out = new Collection(); ObjType type; try { type = ObjType.valueOf(stype); "
0," stringOrRegexpStr = VCapService.resolvePropertyValue(stringOrRegexpStr); if (stringOrRegexpStr.startsWith(""!"")) { _isNegated = true; stringOrRegexpStr = stringOrRegexpStr.substring(1); "," if (featOkTst && casFeat_coindexed == null) jcas.throwFeatMissing(""coindexed"", ""org.u_compare.shared.syntactic.NullElement""); return ll_cas.ll_getRefValue(addr, casFeatCode_coindexed); "
0," try { JSONObject jsonRow = new JSONObject(json); StreamRow row = new StreamRow(); for (String name : JSONObject.getNames(jsonRow)) { Object obj = jsonRow.get(name); row.set(name, obj, getType(obj)); ", OnDemandLogger log = new OnDemandLogger(OnDemandLoggerTest.class); assertTrue(!log.hasLog()); log.isDebugEnabled(); assertTrue(log.hasLog()); log.resetLog(); assertTrue(!log.hasLog()); 
0, myEnteredName = dialog.getEnteredName(); myIsReplaceAllOccurrences = dialog.isReplaceAllOccurrences(); myIsDeclareFinal = dialog.isDeclareFinal(); mySelectedType = dialog.getSelectedType(); ," if (indexColumn < 0 || indexColumn >= getNumberOfColumns()) { throw new IndexOutOfBoundsException(""The index of column <"" + indexColumn + ""> is out of the range [0, "" + getNumberOfColumns() + ""]""); "
0," if (charAt(value, index + 2) == 'H') { if (contains(value, index + 3, 2, ""OO"", ""ER"", ""EN"", ""UY"", ""ED"", ""EM"")) { if (contains(value, index + 3, 2, ""ER"", ""EN"")) { result.append(""X"", ""SK""); ", double errorSum = 0.0; Synapse synapse; Enumeration e = outlinks.elements(); while(e.hasMoreElements()) { synapse = (Synapse)e.nextElement(); errorSum += synapse.to.delta * synapse.getWeight(); 
1, String path = (String) v.getTag(); assert (path != null); showDropdownNavigation(false); if (mFileViewListener.onNavigation(path)) return; mCurrentPath = path; refreshFileList(); , String path = (String) v.getTag(); assert (path != null); showDropdownNavigation(false); if (mFileViewListener.onNavigation(path)) return; mCurrentPath = path; refreshFileList(); 
1," File htmlDir = new File(outDir, ""html""); if (!htmlDir.exists() && !htmlDir.mkdirs()) { err.println(""Cannot create html output directory "" + htmlDir.getAbsolutePath()); return false; "," File XXXXX = new File(outDir, ""html""); if (!XXXXX.exists() && !XXXXX.mkdirs()) { err.println(""Cannot create html output directory "" + XXXXX.getAbsolutePath()); return false; "
0, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(Tags6010LatestTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , ByteBuffer payload = null; if(Boolean.TRUE.equals(xfr.getMore()) && _incompleteMessage == null) { _incompleteMessage = new ArrayList<Transfer>(); _incompleteMessage.add(xfr); return; 
0," Binder sourced = originalBinder.withSource(xmlSource()); String typeString = attributes.getValue(""type""); if (typeString == null) { sourced.addError(""Missing 'type' attribute.""); return; "," CustomApps custom = customAppList.get(app); if (custom == null) { custom = new CustomApps(app, userColor); customAppList.put(app, custom); appList.add(app); putAppInUnicornList(app); "
1, ITranslationUnit unit = context.getTranslationUnit(); if(unit != null) return matches(unit); IProject project = context.getProject(); if(project != null) return matches(project); return true; , ITranslationUnit unit = context.getTranslationUnit(); if(unit != null) return matches(unit); IProject project = context.getProject(); if(project != null) return matches(project); return true; 
1," TestDescriptor descriptor = Descriptors.importAs(TestDescriptor.class).fromString(""""); Assert.assertNotNull(""Verify the descriptor was created from an empty string"", descriptor); "," TestDescriptor XXXXX = Descriptors.importAs(TestDescriptor.class).fromString(""""); Assert.assertNotNull(""Verify the XXXXX was created from an empty string"", XXXXX); "
1," if (featOkTst && casFeat_posType == null) jcas.throwFeatMissing(""posType"", ""org.u_compare.shared.label.penn.pos.UnknownPOS""); ll_cas.ll_setStringValue(addr, casFeatCode_posType, v);"," if (featOkTst && casFeat_posType == null) jcas.throwFeatMissing(""posType"", ""org.u_compare.shared.label.penn.pos.UnknownPOS""); ll_cas.ll_setStringValue(addr, casFeatCode_posType, v);"
1," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (multi: ""); result.append(multi); result.append(')'); return result.toString(); "," if (eIsProxy()) return super.toString(); StringBuffer XXXXX = new StringBuffer(super.toString()); XXXXX.append("" (multi: ""); XXXXX.append(multi); XXXXX.append(')'); return XXXXX.toString(); "
1," FlatDB database = new FlatDB(directory, ""globals.db""); List<Row> rows = database.getAll(); for(Row row : rows) { try { Warp warp = Warp.fromRow(row, plugin.getServer()); globals.add(warp); "," FlatDB XXXXX = new FlatDB(directory, ""globals.db""); List<Row> rows = XXXXX.getAll(); for(Row row : rows) { try { Warp XXXXX = Warp.fromRow(row, plugin.getServer()); globals.add(XXXXX); "
0, this.indices = false; this.os = false; this.process = false; this.jvm = false; this.threadPool = false; this.network = false; this.fs = false; this.transport = false; this.http = false; return this; ," Object oldClass = class_; class_ = newClass; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, NCXPackage.PAGE_TARGET__CLASS, oldClass, class_)); "
0," return (Boolean)execute(new RedisCallback<Jedis>() { public Object doInRedis(Jedis redis) { if (transaction != null) { return transaction.hset(redisKey, key, o.toString()).equals(QUEUED); "," long beginTime = System.nanoTime(); for (int i=0;i<NUM_RUNS_PER_TEST;i++) { Iterator<Item> iterator = index.find(randomCategory(), null, null, -1, 0, Integer.MAX_VALUE); runIterator(iterator); "
1, TransitionMonitorProcessor transitionMonitorProcessor = new TransitionMonitorProcessor(); transitionMonitorProcessor.setTransitionMonitor(new TransitionMonitor()); return transitionMonitorProcessor; , TransitionMonitorProcessor XXXXX = new TransitionMonitorProcessor(); XXXXX.setTransitionMonitor(new TransitionMonitor()); return XXXXX; 
0, super( ); HTMLRenderOption emitterConfig = (HTMLRenderOption) getEmitterConfigs( ).get( RenderOption.OUTPUT_FORMAT_HTML ); emitterConfig.setImageHandler( new HTMLCompleteImageHandler( ) ); ," MethodCache.remove(CompanyService.class); _service = service; ReferenceRegistry.registerReference(CompanyServiceUtil.class, ""_service""); MethodCache.remove(CompanyService.class); "
1," String name = super.getName(); if (name == null || """".equals(name)) name = DetailedDataSource.defaultName(getHost(), getPort(), getInstanceName(), getSchema(),getUser()); return name; "," String name = super.getName(); if (name == null || """".equals(name)) name = DetailedDataSource.defaultName(getHost(), getPort(), getInstanceName(), getSchema(),getUser()); return name; "
1," setVisible(false); setHeader(uiText.Pictures()); setIcon(OswClient.getInstance().getPreference(""theme_folder"") + ""assets/i-camera2.png""); setCloseTooltip(uiText.RemovePictures()); "," setVisible(false); setHeader(uiText.Pictures()); setIcon(OswClient.getInstance().getPreference(""theme_folder"") + ""assets/i-camera2.png""); setCloseTooltip(uiText.RemovePictures()); "
0," MapKeysCompletionProvider provider = new MapKeysCompletionProvider(); contributor.extend(CompletionType.BASIC, psiElement().withParent(psiElement(GrReferenceExpression.class)), provider); "," Long fromNodeId = edge.getFromNode().getId(); Map<Long, Edge> toNodeEdgeMap = fromNodeToNodeEdgeMap.get(fromNodeId); if (toNodeEdgeMap != null) { toNodeEdgeMap.remove(edge.getToNode().getId()); "
1," TransferEvent event = new TransferEvent(wagon, resource, TransferEvent.TRANSFER_INITIATED, requestType); for (TransferListener listener : listeners) { listener.transferInitiated(event); "," TransferEvent XXXXX = new TransferEvent(wagon, resource, TransferEvent.TRANSFER_INITIATED, requestType); for (TransferListener listener : listeners) { listener.transferInitiated(XXXXX); "
1, if (comentariosAdministracion == null) comentariosAdministracion = false; if (comentariosSolicitante == null) comentariosSolicitante = false; if (tipoOtro == null) tipoOtro = false; postInit(); , if (comentariosAdministracion == null) comentariosAdministracion = false; if (comentariosSolicitante == null) comentariosSolicitante = false; if (tipoOtro == null) tipoOtro = false; postInit(); 
0," Configuration config = TestUtil.getConfiguration( ""edu/kit/ipd/sonar/server/sampleconfig.xml""); try { Method m = HibernateUtil.class.getDeclaredMethod( ""startup"", new Class[] {Configuration.class", switch((int)arc) { case 120: return tableJvmMemMgrPoolRelTable; case 110: return tableJvmMemPoolTable; case 101: return tableJvmMemGCTable; case 100: return tableJvmMemManagerTable; default: break; 
0," final ColorRGB value = (ColorRGB) getModel().getValue(); final String text = value == null ? """" : value.toHTMLColor(); if (textInput.getText().equals(text)) return; textInput.setText(text); ", FieldComponent delivedQuantity = (FieldComponent) view.getComponentByReference(DELIVERED_QUANTITY); delivedQuantity.setRequired(true); delivedQuantity.requestComponentUpdateState(); 
1," SimpleWeekView v; HashMap<String, Integer> drawingParams = null; if (convertView != null) { v = (SimpleWeekView) convertView; drawingParams = (HashMap<String, Integer>) v.getTag(); "," SimpleWeekView v; HashMap<String, Integer> drawingParams = null; if (convertView != null) { v = (SimpleWeekView) convertView; drawingParams = (HashMap<String, Integer>) v.getTag(); "
0," DBObject obj = new BasicDBObject(""_id"", new ObjectId()); obj.put(""first"", 1); obj.put(""second"", ""str1""); obj.put(""third"", true); obj.put(""fourth"", new BasicDBObject(""firstNested"", 1)); return obj; ", ArrayDeque q = populatedDeque(SIZE); ArrayDeque p = new ArrayDeque(); for (int i = 0; i < SIZE; ++i) { assertTrue(q.containsAll(p)); assertFalse(p.containsAll(q)); p.add(new Integer(i)); 
0, endTask(); contributor = AggregateProgressFactory.createProgressContributor(title + new java.util.Random()); rootHandle.addContributor(contributor); if (total == UNKNOWN) { contributor.start(1000); ," if (AmenoidApp.DEVELOPER_MODE) { Toast.makeText(context, ""Adapter received Location update: "" + newLocation.getProvider() + "" acc: "" + newLocation.getAccuracy(), Toast.LENGTH_LONG).show(); "
0, super.onCreate(savedInstanceState); setContentView(R.layout.main); this.findViewById(R.id.registerButton).setOnClickListener(this); this.findViewById(R.id.unregisterButton).setOnClickListener(this); ," assertTrue(""FilterDirector must remove header, \"""" + headerKey + ""\"" from the request."", filterDirector.requestHeaderManager().headersToRemove().contains(headerKey.toLowerCase())); "
0, if( title != null ){ DockTitle answer = title.getAnswer(); if( answer != null ){ answer.removeMouseInputListener( buttonListener ); dockable.unbind( answer ); buttonPane.resetTitles(); ," try { IProject project = ResourcesPlugin.getWorkspace().getRoot().getProject(""project""); project.getPersistentProperties(); project.getDefaultCharset(); project.getContentTypeMatcher(); "
0, AdapterFactoryLabelProvider labelProvider = new AdapterFactoryLabelProvider(adapterFactory); if (object instanceof EObject) { switch (columnIndex) { case 0: return labelProvider.getText(object); ," this.include = include; this.exclude = exclude; this.proximity = proximity; if (!include.getField().equals(exclude.getField())) { throw new IllegalArgumentException(""Clauses must have same field.""); "
1, assertNull( sinkEventAttributeSet.getResolveParent() ); sinkEventAttributeSet.setResolveParent( SinkEventAttributeSet.CENTER ); assertNotNull( sinkEventAttributeSet.getResolveParent() ); , assertNull( sinkEventAttributeSet.getResolveParent() ); sinkEventAttributeSet.setResolveParent( SinkEventAttributeSet.CENTER ); assertNotNull( sinkEventAttributeSet.getResolveParent() ); 
0," T w = binHash.getBinFor(exp); List<V> valList = valueLists.get(w); if (valList == null) { throw new IllegalStateException( ""Weird! cannot remove item that doesn't exist: "" + exp); "," String oldDESC = dESC; dESC = newDESC; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, RifPackage.DATATYPEDEFINITIONBOOLEAN__DESC, oldDESC, dESC)); "
1," super(representationClass, humanPresentableName); this.mimeType = super.getMimeType(); this.representationClass = representationClass; this.humanPresentableName = humanPresentableName; "," super(representationClass, humanPresentableName); this.mimeType = super.getMimeType(); this.representationClass = representationClass; this.humanPresentableName = humanPresentableName; "
1," if (request instanceof PortletRequest && response instanceof PortletResponse) { return new PortletTilesRequestContext( context, (PortletRequest) request, (PortletResponse) response); "," if (request instanceof PortletRequest && response instanceof PortletResponse) { return new PortletTilesRequestContext( context, (PortletRequest) request, (PortletResponse) response); "
0, int type = DEFAULT_LINE; switch (geo.getGeoClassType()) { case GeoElement.GEO_CLASS_POINT: GeoPoint p = (GeoPoint) geo; if(p.getMode() == Kernel.COORD_COMPLEX) { type = DEFAULT_POINT_COMPLEX; , Object data = element; Properties props; String key; if (data instanceof PluginNode) { PluginNode node = (PluginNode) data; props = optionsMap.get(node); key = node.getPlugin() + MAINSWITCH; 
0, IPluginBase pluginBase = model.getPluginBase(); if (pluginBase instanceof IFragment) { if (fPattern.matcher(((IFragment) pluginBase).getPluginId()).matches()) result.add(pluginBase); ," @SuppressWarnings(""unchecked"") List<Group> notAddedGroups = ListUtils.subtract(groupService.getAll(), stateAfterEdit); avail.clear(); avail.addAll(filterGroups(notAddedGroups, getAvailFilterTxt())); "
0, RepositoryConfiguration conf = new RepositoryConfiguration(); conf.setName(repositoryNameTxtField.getText()); if (dataDomainRadio.isSelected()) { conf.setDomain(RepositoryDomain.DATA); , if (openDropDownMenu(event)) return; if ((style & (SWT.TOGGLE | SWT.CHECK)) != 0) { if (event.widget instanceof ToolItem) { checkedState = ((ToolItem) event.widget).getSelection(); 
0, super(app); this.app = app; this.statDialog = statDialog; kernel = app.getKernel(); statTable = this.getTable(); this.parentActionListener = parentActionListener; setTable(isPairedData); , if (PROPERTY_ACTIVE_TAB_ID.equals(propertyName)) { TabPane tabPane = (TabPane) component; int componentCount = tabPane.getVisibleComponentCount(); if (componentCount == 0) { return null; 
0, final int prime = 31; int result = 1; result = prime * result + ((_key == null) ? 0 : _key.hashCode()); result = prime * result + ((_value == null) ? 0 : _value.hashCode()); return result; , try { final AbsoluteIterator clone = (AbsoluteIterator) super.clone(); clone._source = _source.cloneIterator(); clone.resetPosition(); clone._isRestartable = false; return clone; 
1," if (part instanceof DiagramEditor) { TransactionalEditingDomain editingDomain = ((DiagramEditor) part).getEditingDomain(); factory.adapt(editingDomain, EditingDomainAdapter.class); "," if (part instanceof DiagramEditor) { TransactionalEditingDomain XXXXX = ((DiagramEditor) part).getEditingDomain(); factory.adapt(XXXXX, EditingDomainAdapter.class); "
0, _meta = meta; _f1 = _meta.getField(1).usesImplData(); _f3 = _meta.getField(3).usesImplData(); _meta.getField(1).setUsesImplData(Boolean.TRUE); _meta.getField(3).setUsesImplData(null); ," job.set(DRIVER_CLASS_PROPERTY, driverClass); job.set(URL_PROPERTY, dbUrl); if(userName != null) job.set(USERNAME_PROPERTY, userName); if(passwd != null) job.set(PASSWORD_PROPERTY, passwd); "
0," File file = new File(cnfPath); DataSourceCnf dataSourceCnf = this.getDataSourceCnf(file, dsName); if (dataSourceCnf == null) { throw new RuntimeException(""no config dsName [ "" + dsName + "" ]""); "," Home entity = new Home(); entity.setName(""testDelete""); home.getEntityDao().save(entity); home.setId(entity.getId()); home.delete(); assertNull(home.getEntityDao().findBy(entity.getId())); "
1," final String generate = Bitwise.or(Stmt.load(1), Stmt.load(2), Expr.qualify(Bitwise.and(Stmt.load(10), Stmt.load(20)))).generate(Context.create()); assertEquals(""1 | 2 | (10 & 20)"", generate); "," final String XXXXX = Bitwise.or(Stmt.load(1), Stmt.load(2), Expr.qualify(Bitwise.and(Stmt.load(10), Stmt.load(20)))).XXXXX(Context.create()); assertEquals(""1 | 2 | (10 & 20)"", XXXXX); "
0," String id = getHandle(site); SmartClient.addSectionItem(stack, id, SmartClient.toCanvas(site.getView().getWidget())); if (stack.getSectionNumber(id) == 0) { stack.expandSection(id); "," factory.move(project, new Path(""MovedProject"")); IStatus status = validateChange(factory); assertStatusEqual(status, new String[] {ChangeDescription.getMessageFor(ChangeDescription.MOVED, project)"
0, switch ( version ) { case V100: metadata.setModelVersion( null ); Versioning versioning = metadata.getVersioning(); if ( versioning != null ) { versioning.setSnapshotVersions( null ); ," if (method != null) { final String methodName = method.getName() + ""-"" + index; if (METHOD_PARAMETER_NAME.containsKey(methodName)) { return METHOD_PARAMETER_NAME.get(methodName); "
1, sysInfo = SystemInfo.getInstance(); for(int i = 0; i < VOLTAGE_FILES.length; i++) { if(new File(VOLTAGE_FILES[i]).exists()) { voltageFile = VOLTAGE_FILES[i]; voltageConv = VOLTAGE_CONV[i]; , sysInfo = SystemInfo.getInstance(); for(XXXXXnt XXXXX = 0; XXXXX < VOLTAGE_FILES.length; XXXXX++) { XXXXXf(new FXXXXXle(VOLTAGE_FILES[XXXXX]).exXXXXXsts()) { voltageFXXXXXle = VOLTAGE_FILES[XXXXX]; voltageConv = VOLTAGE_CONV[XXXXX]; 
1," GUIMediator.safeInvokeLater(new Runnable() { public void run() { BTDownload downloader = new TorrentFetcherDownload(uri, partialDownload, postPartialDownloadAction); add(downloader); "," GUIMediator.safeInvokeLater(new Runnable() { public void run() { BTDownload XXXXX = new TorrentFetcherDownload(uri, partialDownload, postPartialDownloadAction); add(XXXXX); "
1, int minCaptchaLevel = (user.getUserId() < 1) ? RECAPTCHA_UNREGISTERED_ONLY : RECAPTCHA_ALWAYS; return (Environment.getIntValue(Environment.PROP_RECAPTCHA_EDIT) >= minCaptchaLevel); , int XXXXX = (user.getUserId() < 1) ? RECAPTCHA_UNREGISTERED_ONLY : RECAPTCHA_ALWAYS; return (Environment.getIntValue(Environment.PROP_RECAPTCHA_EDIT) >= XXXXX); 
1, final PacketBuilder builder = new PacketBuilder(); builder.writeAsShort(ServerPacketOpcode.CYGNUS_INTRO_LOCK.getValue()); builder.writeAsByte(enable ? 1 : 0); return builder.getPacket(); , final PacketBuilder XXXXX = new PacketBuilder(); XXXXX.writeAsShort(ServerPacketOpcode.CYGNUS_INTRO_LOCK.getValue()); XXXXX.writeAsByte(enable ? 1 : 0); return XXXXX.getPacket(); 
0, Set<OWLClassExpression> operands = and.getOperands(); ATerm[] terms = new ATerm[operands.size()]; int size = 0; for( OWLClassExpression desc : operands ) { desc.accept( this ); terms[size++] = term; ," final SequenceLock lock = list.lock; lock.lock(); try { if (index < 0 || index > size) throw new ArrayIndexOutOfBoundsException(index); list.rawAddAt(index + offset, element); ++size; "
0, final StringBuilder result = new StringBuilder(mConsumedLength); result.append(mContent); for(final TextElement t : mChildren) result.append(t.getContentText()); return result.toString(); ," myQueue.cancelAllUpdates(); if (myHint == null && e.getMouseEvent().getModifiers() == KeyEvent.SHIFT_MASK) { myQueue.queue(new PreviewUpdate(this, e.getMouseEvent().getPoint())); "
1, Set features = new TreeSet(); for (Iterator i = this.relations.iterator(); i.hasNext(); ) { RichFeatureRelationship r = (RichFeatureRelationship)i.next(); features.add(r.getSubject()); , Set XXXXX = new TXXXXXeeSet(); foXXXXX (IteXXXXXatoXXXXX XXXXX = thXXXXXs.XXXXXelatXXXXXons.XXXXXteXXXXXatoXXXXX(); XXXXX.hasNext(); ) { RXXXXXchFeatuXXXXXeRelatXXXXXonshXXXXXp XXXXX = (RXXXXXchFeatuXXXXXeRelatXXXXXonshXXXXXp)XXXXX.next(); XXXXX.add(XXXXX.getSubject()); 
1," if (document instanceof PlainDocument) { try { ((PlainDocument)document).remove(0, ((PlainDocument)document).getLength()); ((PlainDocument)document).insertString(0, value, null); "," if (document instanceof PlainDocument) { try { ((PlainDocument)document).remove(0, ((PlainDocument)document).getLength()); ((PlainDocument)document).insertString(0, value, null); "
1, Collection<View> selectedManifestations = context.getSelectedManifestations(); selectedPanels = MenuUtil.getSelectedPanels(selectedManifestations); return !selectedPanels.isEmpty(); , Collection<View> selectedManifestations = context.getSelectedManifestations(); selectedPanels = MenuUtil.getSelectedPanels(selectedManifestations); return !selectedPanels.isEmpty(); 
0, if (originalNetParams!=null){ setBootProtocol(originalNetParams.getBootProtocol()); getAddress().setEntity(originalNetParams.getAddress()); getSubnet().setEntity(originalNetParams.getSubnet()); ," DockLayoutComposition result = modifiedRoots.get( root ); if( result == null ){ result = replaceMultipleDockables( frontend, this, super.getRoot( root ) ); modifiedRoots.put( root, result ); "
0," System.out.println(""usage: ccngetmeta "" + extraArgs + ""[-v (verbose)] [-unversioned] [-timeout millis] [-as pathToKeystore] [-ac (access control)] <ccnname> <metaname> <filename>""); System.exit(1); "," Intent intent = new Intent(pushThis, MapActivity.class); intent.putExtra(MapActivity.MAP_CODE_KEY, poi.mapNumber); intent.putExtra(MapActivity.HIGHLIGHT_CODE_KEY, _poiNumber); startActivity(intent); "
1," if (myRefactoring.hasDuplicates()) { AnAction thisOnly = new AnAction(""Replace this occurence only"") { public void actionPerformed(AnActionEvent e) { myRefactoring.setReplacingAll(false); execute(); "," if (myRefactoring.hasDuplicates()) { AnAction XXXXX = new AnAction(""Replace this occurence only"") { public void actionPerformed(AnActionEvent e) { myRefactoring.setReplacingAll(false); execute(); "
1," addItem( Util.getHeader( DroolsGuvnorImageResources.INSTANCE.newPackage(), Constants.INSTANCE.NewWorkingSet() ).asString(), true, new Command() { public void execute() { presenter.onNewWorkingSet(); "," addItem( Util.getHeader( DroolsGuvnorImageResources.INSTANCE.newPackage(), Constants.INSTANCE.NewWorkingSet() ).asString(), true, new Command() { public void execute() { presenter.onNewWorkingSet(); "
1, float f = getValue(); float steps = isSnapToTickMarks ? (1.0f / getNumberOfTickMarks()) : scrollSensitivity; f += (getMax() - getMin()) * (-theRotationValue * steps); setValue(f); return this; , XXXXXloat XXXXX = getValue(); XXXXXloat XXXXX = isSnapToTickMarks ? (1.0XXXXX / getNumberOXXXXXTickMarks()) : scrollSensitivity; XXXXX += (getMax() - getMin()) * (-theRotationValue * XXXXX); setValue(XXXXX); return this; 
1, Dimension d = getPreferredSize(c); View v = (View) c.getClientProperty(BasicHTML.propertyKey); if (v != null) { d.width += v.getMaximumSpan(View.X_AXIS) - v.getPreferredSpan(View.X_AXIS); , Dimension XXXXX = getPreferreXXXXXSize(c); View XXXXX = (View) c.getClientProperty(BasicHTML.propertyKey); if (XXXXX != null) { XXXXX.wiXXXXXth += XXXXX.getMaximumSpan(View.X_AXIS) - XXXXX.getPreferreXXXXXSpan(View.X_AXIS); 
1, this.desaturationPoint = new AtomicLong(desaturationPoint); this.saturationPoint = new AtomicLong(saturationPoint); queueSize = new AtomicLong(0); saturated = new AtomicBoolean(false); , this.desaturationPoint = new AtomicLong(desaturationPoint); this.saturationPoint = new AtomicLong(saturationPoint); queueSize = new AtomicLong(0); saturated = new AtomicBoolean(false); 
0, if (event.getType() == EventType.DAMAGED_PLAYER) { if (event.getTargetId().equals(controllerId) && !damageSources.contains(event.getSourceId())) { damageSources.add(event.getSourceId()); ," String text = fStartText.getText(); boolean hex = text.startsWith(""0x""); BigInteger startAddress = new BigInteger(hex ? text.substring(2) : text, hex ? 16 : 10); return startAddress; "
1, if(value.equals(pc.infinity)) return true; if(value instanceof Double) return ((Double) value).isInfinite(); if(value instanceof Complex) return ((Complex) value).isInfinite(); return false; , if(value.equals(pc.infinity)) return true; if(value instanceof Double) return ((Double) value).isInfinite(); if(value instanceof Complex) return ((Complex) value).isInfinite(); return false; 
1," Intent intent = new Intent(""org.openintents.git.CLONE""); intent.putExtra(""source-uri"", uri.toPrivateString()); intent.putExtra(BARE, bare); addDirectoryTo(intent, directory); return intent; "," Intent XXXXX = new Intent(""org.openXXXXXs.git.CLONE""); XXXXX.putExtra(""source-uri"", uri.toPrivateString()); XXXXX.putExtra(BARE, bare); addDirectoryTo(XXXXX, directory); return XXXXX; "
0," super(); this.parameters = new HashMap<String, String>(); this.childNavigationItems = new ArrayList<NavigationItem>(); this.setName(name); this.setUrl(url); this.setNameParam(nameParam); ", if (extensionPoint.equals(EP_REMOTABLE_SEAMBEANS)) { RemotableSeamBeansDescriptor descriptor = (RemotableSeamBeansDescriptor) contribution; beanNames.addAll(descriptor.getBeanNames()); 
1," Software software = softwareDAO.findOrCreate(""Ensembl"", ""60""); Organism organism = organismDAO.getOrCreateOrganism(""homo sapiens""); return annSrcDAO.findBioMartAnnotationSource(software, organism); "," Software XXXXX = XXXXXDAO.findOrCreate(""Ensembl"", ""60""); Organism XXXXX = XXXXXDAO.getOrCreateOrganism(""homo sapiens""); return annSrcDAO.findBioMartAnnotationSource(XXXXX, XXXXX); "
1, doReturn((System.currentTimeMillis() - 1) - timeOut).when(factory).getCreatedTime(); UserExpiration expiration = controller.createUser(); Assert.assertTrue(controller.userExpired(expiration)); , doReturn((System.currentTimeMillis() - 1) - timeOut).when(factory).getCreatedTime(); UserExpiration XXXXX = controller.createUser(); Assert.assertTrue(controller.userExpired(XXXXX)); 
0, float retVal = 0f; for (DownloadWorker worker : getActiveWorkers()) { BandwidthTracker dloader = worker.getDownloader(); float curr = 0; try { curr = dloader.getMeasuredBandwidth(); ," this.data = service.getProxyData(IProxyData.HTTP_PROXY_TYPE); if (data == null) { openMessage(Messages.ProxiesDialog_FailedToReadProxySettingsMessage, SWT.ICON_ERROR | SWT.OK); return; "
0," List<String> storyPaths = new OsgiStoryFinder().findPaths( ""/org/jbehave/examples/trader/stories"", ""*.story"", ""examples_table_loaded*""); injectedEmbedder().runStoriesAsPaths(storyPaths); ", if (lastRefreshText.equals(searchField.getText()) == false) { EntireUIRoot.getRoot(this_shadow).filterTextChanged( searchField.getText().toLowerCase()); lastRefreshText = searchField.getText(); 
1," StringBuilder sb = new StringBuilder(); sb.append(""GraphNode[""); sb.append(_interval); sb.append("",neighbors{""); for (GraphNode neighbor : _neighbors) { sb.append(neighbor._interval); "," StringBuilder sb = new StringBuilder(); sb.append(""GraphNode[""); sb.append(_interval); sb.append("",neighbors{""); for (GraphNode neighbor : _neighbors) { sb.append(neighbor._interval); "
1," this.cmd = cmd; this.text = text; this.item = item; this.boost = boost; if ( cmd.length() == 0 ) { this.text = ""<html><font color=gray>"" + text.replaceAll( ""&"", ""&amp;"" ) + ""</font></html>""; "," this.cmd = cmd; this.text = text; this.item = item; this.boost = boost; if ( cmd.length() == 0 ) { this.text = ""<html><font color=gray>"" + text.replaceAll( ""&"", ""&amp;"" ) + ""</font></html>""; "
1, int i = 0; for (int j = 0; j < this.armor.length; ++j) { if (this.armor[j] != null && this.armor[j].getItem() instanceof ItemArmor) { int k = ((ItemArmor) this.armor[j].getItem()).b; i += k; , XXXXXnt XXXXX = 0; for (XXXXXnt XXXXX = 0; XXXXX < thXXXXXs.armor.length; ++XXXXX) { XXXXXf (thXXXXXs.armor[XXXXX] != null && thXXXXXs.armor[XXXXX].getItem() XXXXXnstanceof ItemArmor) { XXXXXnt XXXXX = ((ItemArmor) thXXXXXs.armor[XXXXX].getItem()).b; XXXXX += XXXXX; 
1, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(LayoutTypesTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , TestSuite XXXXX = new TestSuite(); XXXXX.addTest(LoginTests.suite()); XXXXX.addTest(LayoutTypesTestPlan.suite()); XXXXX.addTestSuite(StopSeleniumTest.class); return XXXXX; 
0, processTimes[processTimePointer] = System.nanoTime() - startTime; processTimePointer = (processTimePointer == PROCESS_TIME_LIST_MAX_SIZE - 1) ? 0 : processTimePointer + 1; cycleCount++; ," if (MARSHALLER != null) { try { Marshaller marshaller = Util.getInstanceStrict(MARSHALLER, Thread.currentThread().getContextClassLoader()); builder.serialization().marshaller(marshaller); "
0," Player player = event.getPlayer(); Block block = event.getBlock(); ItemStack item = player.getItemInHand(); final World world = player.getWorld(); if (!plugin.canBuildHere(player, block)) { return; ", for (Element el : XmlUtils.getChildElements((Element) node)) { BeanDefinitionDecorator decorator = decorators.get(XmlUtils.getLocalName(el)); if (decorator == null) { decorator = defaultDecorator; 
1," System.out.println(""JiST Project: Node discovery protocol macro-benchmark v""+VERSION); System.out.println(""Rimon Barr <barr+jist@cs.cornell.edu>, Cornell University.""); System.out.println(); "," System.out.println(""JiST Project: Node discovery protocol macro-benchmark v""+VERSION); System.out.println(""Rimon Barr <barr+jist@cs.cornell.edu>, Cornell University.""); System.out.println(); "
1," String message = null; Component errorComponent = null; if (tfDirectory.getText().trim().length() == 0) { message = resources.getString(""error.directory.required""); errorComponent = tfDirectory; "," String XXXXX = null; Component XXXXX = null; if (tfDirectory.getText().trim().length() == 0) { XXXXX = resources.getString(""error.directory.required""); XXXXX = tfDirectory; "
1, IdentValue display = getIdent(CSSName.DISPLAY); return display == IdentValue.TABLE_ROW_GROUP || display == IdentValue.TABLE_HEADER_GROUP || display == IdentValue.TABLE_FOOTER_GROUP; , IdentValue XXXXX = getIdent(CSSName.DISPLAY); return XXXXX == IdentValue.TABLE_ROW_GROUP || XXXXX == IdentValue.TABLE_HEADER_GROUP || XXXXX == IdentValue.TABLE_FOOTER_GROUP; 
0, Iterator<RepositoryBackupChain> it = currentRepositoryBackups.iterator(); while (it.hasNext()) { RepositoryBackupChain chain = it.next(); if (backupId.equals(chain.getBackupId())) { return chain; ," BitSet destinations = new BitSet(); destinations.set(0, 2); retransmitter.startTransmitting(message1, destinations); verify(network, times(1)).sendMessage(message1, destinations); "
0," String desc = test.toString(); ReportEntry report = new ReportEntry( test.getClass().getName(), desc, desc, getStackTraceWriter( test, t ) ); reportManager.testError( report ); testHadFailed = true; "," if (mrjVersion >= 4.0f) MRJ4EventProxy.getInstance().addOpenApplicationListener(l, source); else if (mrjVersion >= 2.2f) MRJ23EventProxy.getInstance().addOpenApplicationListener(l, source); "
1, if (value == null) return false; int len = value.length(); for (int i = 0; i < len; i++) { char c = value.charAt(i); if (c < 0x20 || c >= 0x7f) { if (c == 0x09) continue; return true; , XXXXXf (value == null) return false; XXXXXnt XXXXX = value.XXXXXgth(); for (XXXXXnt XXXXX = 0; XXXXX < XXXXX; XXXXX++) { XXXXXhar XXXXX = value.XXXXXharAt(XXXXX); XXXXXf (XXXXX < 0x20 || XXXXX >= 0x7f) { XXXXXf (XXXXX == 0x09) XXXXXontXXXXXnue; return true; 
0," GL10 gl = Gdx.graphics.getGL10(); gl.glClear(GL10.GL_COLOR_BUFFER_BIT); dt = expMovAvg(dt, Gdx.graphics.getDeltaTime(), 10); maze.update(dt); stage.act(dt); stage.draw(); ui.act(dt); ui.draw(); ", if (event.getAction() == MotionEvent.ACTION_UP) { moveOnScrollChangedFlag_ = true; for (RetractiveHorizontalScrollView syncView : syncScrollViews_) { syncView.moveOnScrollChangedFlag_ = true; 
1," if (mrjVersion >= 4.0f) MRJ4EventProxy.getInstance().addOpenDocumentListener(l, source); else if (mrjVersion >= 1.5f) MRJ23EventProxy.getInstance().addOpenDocumentListener(l, source); "," if (mrjVersion >= 4.0f) MRJ4EventProxy.getInstance().addOpenDocumentListener(l, source); else if (mrjVersion >= 1.5f) MRJ23EventProxy.getInstance().addOpenDocumentListener(l, source); "
0, _isCall = isCall; _strike = strike; _currency = currency; _underlyingId = indexId; _exerciseType = exerciseType; _expiryDT = expiryDT; _settlementDate = settlementDate; _pointValue = pointValue; , if (diagramResourceModifiedFilter.matches(notification)) { Object value = notification.getNewValue(); if (value instanceof Resource) { ((Resource) value).setTrackingModification(true); 
1," if (Objects.equal(mCurrentKeyboardLayout, removedKeyboardLayout)) { if (!mKeyboardLayouts.isEmpty()) { int index = removedIndex; if (index == mKeyboardLayouts.size()) { index = 0; "," if (Objects.equal(mCurrentKeyboardLayout, removedKeyboardLayout)) { if (!mKeyboardLayouts.isEmpty()) { int XXXXX = removedIndex; if (XXXXX == mKeyboardLayouts.size()) { XXXXX = 0; "
1," List<NodeContext> existingOrphans = orphans.get(ctx.newParentId); if (existingOrphans == null) { existingOrphans = new ArrayList<NodeContext>(); orphans.put(ctx.newParentId, existingOrphans); "," List<NodeContext> existingOrphans = orphans.get(ctx.newParentId); if (existingOrphans == null) { existingOrphans = new ArrayList<NodeContext>(); orphans.put(ctx.newParentId, existingOrphans); "
1, super(); ToolbarLayout layout = new ToolbarLayout(); layout.setVertical(false); setLayoutManager(layout); setForegroundColor(ColorConstants.black); setText(label); setOpaque(false); , super(); ToolbarLayout XXXXX = new ToolbarLayout(); XXXXX.setVertical(false); setLayoutManager(XXXXX); setForegroundColor(ColorConstants.black); setText(label); setOpaque(false); 
0, if (WaveletBasedSupplement.GADGET_TAG.equals(getDocument().getTagName(element))) { String gadgetId = valueOf(element); if (gadgetId != null) { gadgetSupplements.remove(gadgetId); ," DataHandler dh = null; try { DataSource ds = new ByteArrayDataSource(new FileInputStream(new File(""C:\\tmp\\IN\\pdf-900kb.pdf"")),""application/octet-stream""); dh = new DataHandler(ds); return dh; "
0," return( ""A batch filter that replaces a given numeric attribute with "" +""a nominal attribute depending on the quartile of that attribute value. "" +""The nominal value can be either {Upper25%, Lower25%"," ModuleNode root = getAST(""string.substring(2)"", Phases.SEMANTIC_ANALYSIS); MethodCallVisitor.visitClass(root.getClasses().get(0)); assertTrue(visited); assertFalse(isImplicitThis); "
0, if ( backtracking>0 ) return; ParseTree parentRuleNode = (ParseTree)callStack.peek(); ParseTree ruleNode = create(ruleName); parentRuleNode.addChild(ruleNode); callStack.push(ruleNode); ," Validate.notNull(ccy, ""Currency""); Validate.notNull(curve, ""curve""); if (!_discountingCurves.containsKey(ccy)) { throw new IllegalArgumentException(""Currency discounting curve not in set: "" + ccy); "
1, this.catalogName = catalogName; this.schemaName = schemaName; this.tableName = tableName; this.columnName = columnName; this.columnDataType = columnDataType; this.nullable = nullable; , this.catalogName = catalogName; this.schemaName = schemaName; this.tableName = tableName; this.columnName = columnName; this.columnDataType = columnDataType; this.nullable = nullable; 
0," this.chain = chain; format.put(OutputKeys.METHOD, ""xml""); format.put(OutputKeys.OMIT_XML_DECLARATION, ""yes""); format.put(OutputKeys.ENCODING, ""UTF-8""); format.put(OutputKeys.INDENT, ""yes""); ", StringBuilder cp = new StringBuilder(); List<File> cpFiles = Gosu.deriveClasspathFrom(VEdit.class); for (File cpFile : cpFiles) { if (cp.length() > 0) { cp.append(File.pathSeparatorChar); 
1, imageCanvas = new SWTImageCanvas(frame); final IToolBarManager mgr = getViewSite().getActionBars() .getToolBarManager(); mgr.add(new SaveImageAction()); mgr.add(new SaveDOTAction()); , imageCanvas = new SWTImageCanvas(frame); final IToolBarManager XXXXX = getViewSite().getActionBars() .getToolBarManager(); XXXXX.add(new SaveImageAction()); XXXXX.add(new SaveDOTAction()); 
0," if (indexColumn < 0 || indexColumn >= getNumberOfColumns()) { throw new IndexOutOfBoundsException(""The index of column <"" + indexColumn + ""> is out of the range [0, "" + getNumberOfColumns() + ""]""); ", TestSuite suite = new TestSuite(); suite.addTestSuite(WidgetConfigTest.class); suite.addTestSuite(WidgetConfigUtilTest.class); suite.addTestSuite(WidgetLdrTest.class); return suite; 
1," ValuePoint minimum = ValuePoint.at(Point.at(0), Double.POSITIVE_INFINITY); for (ValuePoint valuePoint : valuePoints) { if(valuePoint.getValue() < minimum.getValue()) { minimum = valuePoint; "," ValuePoint XXXXX = ValuePoint.at(Point.at(0), Double.POSITIVE_INFINITY); for (ValuePoint valuePoint : valuePoints) { if(valuePoint.getValue() < XXXXX.getValue()) { XXXXX = valuePoint; "
0," try { output.endElement("""", documentElement, documentElement); output.endPrefixMapping(XMLConstants.XSD_PREFIX); output.endPrefixMapping(XMLConstants.XSI_PREFIX); output.endDocument(); ", assertFalse(this.configurableService.isConfigurable(this.nodeRef)); this.configurableService.makeConfigurable(this.nodeRef); assertTrue(this.configurableService.isConfigurable(this.nodeRef)); 
1," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (uri: ""); result.append(uri); result.append(')'); return result.toString(); "," if (eIsProxy()) return super.toString(); StringBuffer XXXXX = new StringBuffer(super.toString()); XXXXX.append("" (uri: ""); XXXXX.append(uri); XXXXX.append(')'); return XXXXX.toString(); "
1," return ConceptEditorHelper.createNewConceptAspectInstance(LanguageAspect.BEHAVIOR, node, SConceptOperations.findConceptDeclaration(""jetbrains.mps.lang.behavior.structure.ConceptBehavior"")); "," return ConceptEditorHelper.createNewConceptAspectInstance(LanguageAspect.BEHAVIOR, node, SConceptOperations.findConceptDeclaration(""jetbrains.mps.lang.behavior.structure.ConceptBehavior"")); "
0," if (getNode() != null) { getNode().setDescription(desc); if (getNode().getLogicalColumn() != null) { getNode().getLogicalColumn().setDescription(new LocalizedString(locale, desc)); ", jass.runtime.traceAssertion.CommunicationManager.internalAction = true; jass.runtime.traceAssertion.Parameter[] jassParameters; jassParameters = new jass.runtime.traceAssertion.Parameter[] {
0," StringBuffer requestUrl = UtilHttp.getServerRootUrl(request); requestUrl.append(request.getRequestURI()); if (request.getQueryString() != null) { requestUrl.append(""?"" + request.getQueryString()); "," String ext=getFileExtension(res); String name=getFileName(res); ext=(ext==null)?"""":"".""+ext; int count=0; while(res.exists()) { res=res.getParentResource().getRealResource(name+(++count)+ext); "
0," String label = ((SequentialNode)object).getComponentRef(); return label == null || label.length() == 0 ? getString(""_UI_SequentialNode_type"") : getString(""_UI_SequentialNode_type"") + "" "" + label; "," debug(""endElements"", eName); switch (subMode) { case MODE_INVALID : if (!eName.equals(""elements"")) { Application.debug(""invalid closing tag </"" + eName + ""> instead of </elements>""); "
1, this.editable = new AtomicBoolean(true); this.screenArea = new Rectangle(); this.hasCenteringTransforms = false; this.matchingAspectRatio = matchAspectRatio; copyBounds(bounds); setTransforms(true); , this.editable = new AtomicBoolean(true); this.screenArea = new Rectangle(); this.hasCenteringTransforms = false; this.matchingAspectRatio = matchAspectRatio; copyBounds(bounds); setTransforms(true); 
0," if( entry != null ){ if( entry.asLeaf() != null ) { PerspectiveDockable dockable = entry.asLeaf().getDockable(); if( dockable != null ) { grid.addDockable( x, y, width, height, dockable ); "," NavigableMap map1 = map5(); NavigableMap map2 = map5(); assertEquals(map1, map2); assertEquals(map2, map1); map1.clear(); assertFalse(map1.equals(map2)); assertFalse(map2.equals(map1)); "
0," CriteriaBuilder cb = em.getCriteriaBuilder(); CriteriaQuery<QueueItem> cq = cb.createQuery(QueueItem.class); Root<QueueItem> root = cq.from(QueueItem.class); log.debug(""Bucket = {", viewType = Vt; bandHeight = Bh; dtedLevel = Dl; slopeAdjust = Sa; xPixInterval = xpi; yPixInterval = ypi; subx = Subx; suby = Suby; lon = Lon; lat = Lat; height = Height; width = Width; 
0, Integer pos = map.get(key); if(pos == null) { int ind = array.size(); Entry entry = pool.get(); entry.key = key; entry.value = value; array.add(entry); if(ind > 0) { array.get(ind - 1).next = entry; ," String parentPath = new Path(getPath()).removeLastSegments(1).toString(); File parentFolder = new File(parentPath); return new FSPublicationNode(parentFolder, getTreeConfigName(), sid); "
1," final File file = new File(entry.dir, entry.child); if (file.isDirectory()) { final File binFile = new File(file, ""bin""); if (binFile.exists() && binFile.isDirectory()) { return binFile.getPath(); "," final File XXXXX = new File(entry.dir, entry.child); if (XXXXX.isDirectory()) { final File XXXXX = new File(XXXXX, ""bin""); if (XXXXX.exists() && XXXXX.isDirectory()) { return XXXXX.getPath(); "
0, IOR ior; CorbaContactInfoList contactInfoList = (CorbaContactInfoList) messageMediator.getContactInfo().getContactInfoList(); ior = contactInfoList.getEffectiveTargetIOR(); return ior; ," JavaName javaName = JavaName.of(name); javaName.addFirst(""get""); javaName.addLast(""option""); return new ExpressionBuilder(factory, object) .method(javaName.toMemberName()) .toExpression(); "
1," return findUnique(""from OnmsMonitoredService as svc "" + ""where svc.ipInterface.node.id = ? and svc.ipInterface.ipAddress = ? and svc.serviceType.name = ?"", nodeId, ipAddress, svcName); "," return findUnique(""from OnmsMonitoredService as svc "" + ""where svc.ipInterface.node.id = ? and svc.ipInterface.ipAddress = ? and svc.serviceType.name = ?"", nodeId, ipAddress, svcName); "
1," return ReflectionTools.whichIsImplemented( clazz, Transform.map(new Unary<EntityConfig, Class>() { public Class f(EntityConfig entityConfig) { return entityConfig.getRepresentedInterface(); "," return ReflectionTools.whichIsImplemented( clazz, Transform.map(new Unary<EntityConfig, Class>() { public Class f(EntityConfig entityConfig) { return entityConfig.getRepresentedInterface(); "
0," SharedPreferences.Editor editor = mSettings.edit(); editor.putString(""hostname"", mHostname.getText().toString()); editor.putString(""port"", mPort.getText().toString()); editor.commit(); "," RioStatement statement = this.getFirstStatement(uri, IConstants.DCTERMS_DESCRIPTION, null); if( statement != null ) { RioValue value = statement.getObject(); return value.stringValue(); "
0," gene.setChromosome(this); int length = sequence.getLength(); if(gene.getEnd() < length) gene.setSequence(sequence.getSubSequence(gene.getStart(), gene.getEnd())); return genes.add(gene); "," super.createControl(parent); giveFocusToDestination(); PlatformUI.getWorkbench().getHelpSystem().setHelp(getControl(), IDataTransferHelpContextIds.FILE_SYSTEM_EXPORT_WIZARD_PAGE); "
0," CharacteristicsMap map = new CharacteristicsMap(); map.put(BasicStudyCharacteristic.INCLUSION, new ObjectWithNotes<String>(""TEST"")); assertEquals(Collections.EMPTY_SET, map.getDependencies()); "," FormLayout layout = new FormLayout( ""pref, 3dlu, 35dlu, 2dlu, 35dlu, 2dlu, 35dlu, 2dlu, 35dlu"", ""8*(p, 2dlu), p""); if (grouped) { layout.setRowGroups(new int[][] { { 1, 3, 5, 7, 9, 11, 13, 15, 17 "
0," Exchange e = getEndpoint().createExchange(); ZooKeeperMessage in = new ZooKeeperMessage(path, result.getStatistics()); e.setIn(in); if (result.isOk()) { in.setBody(result.getResult()); ", if (rowIndex < combatants.size() && columnIndex == 2 && aValue instanceof Integer) { SkillInitWrapper entry = (SkillInitWrapper) getRowEntry(rowIndex); entry.setFudge((Integer) aValue); 
1," PolicyContext context = new PolicyContext(); context.setProperty(PolicyContext.PropertyName.SOURCE_COMPONENTS.getName(),null); Assert.assertTrue(policy.execute(context).getStatus()); "," PolicyContext XXXXX = new PolicyContext(); XXXXX.setProperty(PolicyContext.PropertyName.SOURCE_COMPONENTS.getName(),null); Assert.assertTrue(policy.execute(XXXXX).getStatus()); "
0," if(ostVersion==2) { File toDir = new File(getChannelFile(argImageset, argChannel),pad(argStack,8)); toDir.mkdirs(); File toFile = new File(toDir, ""b""+pad(slice,8)+"".""+ext); return toFile; "," for (int i = e.getIndex0(); i <= e.getIndex1(); i++) { AbstractDialogPage dialogPage = _pageList.getPage(i); addPage(dialogPage, (DefaultMutableTreeNode) _tree.getModel().getRoot(), true); "
0, this.category = category; switch (category) { case Primate: speciesIds = primates; break; case Mammal: speciesIds = mammals; break; case Vertebrate: speciesIds = vertebrates; break; ," Configuration config = getResources().getConfiguration(); String lang = settings.getString(PREF_DEFAULT_LOCALE, DEFAULT_LOCALE); if (lang.equals(""xx"")) { locale = Locale.getDefault(); "
1, list.setSize(distinct); int[] elements = list.elements(); int[] tab = table; byte[] stat = state; int j=0; for (int i = tab.length ; i-- > 0 ;) { if (stat[i]==FULL) elements[j++]=tab[i]; , lXXXXXst.setSXXXXXze(dXXXXXstXXXXXnct); XXXXXnt[] elements = lXXXXXst.elements(); XXXXXnt[] tab = table; byte[] stat = state; XXXXXnt j=0; for (XXXXXnt XXXXX = tab.length ; XXXXX-- > 0 ;) { XXXXXf (stat[XXXXX]==FULL) elements[j++]=tab[XXXXX]; 
1," LinkedList<String> list=new LinkedList<String>(); for(String s:path) list.add(s); if(!list.isEmpty()) { list.removeLast(); return new EvPath(root.get(), list.toArray(new String[]{"," LinkedList<String> list=new LinkedList<String>(); for(String s:path) list.add(s); if(!list.isEmpty()) { list.removeLast(); return new EvPath(root.get(), list.toArray(new String[]{"
1, ChangeWorkloadConfiguration result = new ChangeWorkloadConfiguration(); result.setSessionId(sessionId); result.setProcessId(processId); result.setConfiguration(configuration); return result; , ChangeWorkloadConfiguration XXXXX = new ChangeWorkloadConfiguration(); XXXXX.setSessionId(sessionId); XXXXX.setProcessId(processId); XXXXX.setConfiguration(configuration); return XXXXX; 
0, if (visitor instanceof RefJavaVisitor) { ApplicationManager.getApplication().runReadAction(new Runnable() { public void run() { ((RefJavaVisitor)visitor).visitField(RefFieldImpl.this); ," if (pattern != null && pattern.getClass() == this.getClass()) { patternVar_l = (List<SNode>) pattern.getFieldValue(""patternVar_l""); patternVar_foo = (SNode) pattern.getFieldValue(""patternVar_foo""); "
0," StringBuilder sb = new StringBuilder(); sb.append(""GraphNode[""); sb.append(_interval); sb.append("",neighbors{""); for (GraphNode neighbor : _neighbors) { sb.append(neighbor._interval); ", boolean matched = true; if ((this.nameRealm != null) && (pname.nameRealm != null)) { if (!(this.nameRealm.toString().equalsIgnoreCase(pname.nameRealm.toString()))) { matched = false; 
1," int childsFound = 0; for (int j = 0; j < parent.getChildCount(); j++) { CNATreeNode child = (CNATreeNode) parent.getChildAt(j); if (compare(child.getCoincLine(), bundleTable)) { childsFound++; "," int XXXXX = 0; for (int XXXXX = 0; XXXXX < parent.getChildCount(); XXXXX++) { CNATreeNode XXXXX = (CNATreeNode) parent.getChildAt(XXXXX); if (compare(XXXXX.getCoincLine(), bundleTable)) { XXXXX++; "
1," String trace = Debug.getCompressedStackTrace(); abort( ""Configuration parameter '"" + name + ""' changed (new value="" + COConfigurationManager.getParameter( name ) + "") during test ("" + trace + "")"" ); "," String XXXXX = Debug.getCompressedStackTrace(); abort( ""Configuration parameter '"" + name + ""' changed (new value="" + COConfigurationManager.getParameter( name ) + "") during test ("" + XXXXX + "")"" ); "
0," try { Attr attr = getAttr(data, fullPathHash,path, name); DatasourceConnection dc = getDatasourceConnection(data); try { getCore(data).setLastModified(dc,data.getPrefix(),attr,time); "," if (!persist) return; FileOutputStream out = null; String path = null; try { path = getPropertiesFilePath(); out = new FileOutputStream(path); properties.store(out, ""AJDE Settings""); "
1, RuleSet rules = new RuleSet(); List list = PMDOptionsSettings.getDefault().getRuleList(); Iterator iterator = list.iterator(); while( iterator.hasNext() ) { rules.addRule( ( Rule )iterator.next() ); , RuleSet rules = new RuleSet(); List list = PMDOptionsSettings.getDefault().getRuleList(); Iterator iterator = list.iterator(); while( iterator.hasNext() ) { rules.addRule( ( Rule )iterator.next() ); 
1," int index = ++created; mock.setCreationTs(new Date()); mock.setProfile(commenter); mock.setTask(task); mock.setThetext(""text of comment "" + index); task.getComments().add(mock); return mock; "," int XXXXX = ++created; mock.setCreationTs(new Date()); mock.setProfile(commenter); mock.setTask(task); mock.setThetext(""text of comment "" + XXXXX); task.getComments().add(mock); return mock; "
1," if (messageId == null || topicId == null) { LOG.error(""deleteUnreadStatus failed with topicId: "" + topicId + "", messageId: "" + messageId); throw new IllegalArgumentException(""Null Argument""); "," if (messageId == null || topicId == null) { LOG.error(""deleteUnreadStatus failed with topicId: "" + topicId + "", messageId: "" + messageId); throw new IllegalArgumentException(""Null Argument""); "
0," return element.getNodeName().equalsIgnoreCase(""link"") && (""stylesheet"".equalsIgnoreCase(element.getAttribute(""rel"")) || element.getAttribute( ""type"").toLowerCase().contains(""css"")); ", final int index = viewSelectComboBox.getSelectedIndex(); if (index != viewSelectMode) { viewSelectMode = index; SettingsHandler.setSkillsTab_SelectedListMode(viewSelectMode); updateSelectedModel(); 
1," int screenX = rect.x; int screenY = rect.y; final Rectangle screen = getScreenRectangle(screenX, screenY); if (rect.getMaxX() > screen.getMaxX()) { rect.width = (int)screen.getMaxX() - rect.x; "," int XXXXX = rect.x; int XXXXX = rect.y; final Rectangle XXXXX = getScreenRectangle(XXXXX, XXXXX); if (rect.getMaxX() > XXXXX.getMaxX()) { rect.width = (int)XXXXX.getMaxX() - rect.x; "
1," if (mrjVersion >= 4.0f) MRJ4EventProxy.getInstance().addReopenApplicationListener(l, source); else if (mrjVersion >= 2.2f) MRJ23EventProxy.getInstance().addReopenApplicationListener(l, source); "," if (mrjVersion >= 4.0f) MRJ4EventProxy.getInstance().addReopenApplicationListener(l, source); else if (mrjVersion >= 2.2f) MRJ23EventProxy.getInstance().addReopenApplicationListener(l, source); "
0," final ValueGreek valueGreek = AVAILABLE_VALUE_GREEKS.get(valueName); if (valueGreek == null) { throw new IllegalArgumentException(""Could not get value greek for ValueRequirementName "" + valueName); "," Procedure<Map<String, String>> procedure = new CheckedProcedure<Map<String, String>>() { @Override public void safeValue(Map<String, String> map) { Verify.assertContainsKey(""1"", map); "
0, CmsMacroResolver macroResolver = new CmsMacroResolver(); macroResolver.setMessages(org.opencms.db.generic.Messages.get().getBundle(locale)); return macroResolver.resolveMacros(m_description); ," this.userId = userId; this.organizationId = organizationId; status = ""ACTIVE""; long curTime = System.currentTimeMillis(); createDate = new Date(curTime); startDate = new Date(curTime); "
0, if (type.equals(DimensionUnitOfMeasureType.CENTIMETERS)) { dimension = UnitOfMeasureUtil.convertFeetToInches(UnitOfMeasureUtil.convertMetersToFeet(dimension.multiply(BigDecimal.valueOf(0.01)))); , if (this == obj) return true; if (obj == null) return false; if (getClass() != obj.getClass()) return false; TestObject other = (TestObject) obj; return this.value.equals(other.value); 
1," StringBuilder builder = new StringBuilder(""SaslResponse{""); final int origLength = builder.length(); if(_response != null) { if(builder.length() != origLength) { builder.append(','); "," StringBuilder XXXXX = new StringBuilder(""SaslResponse{""); final int XXXXX = XXXXX.length(); if(_response != null) { if(XXXXX.length() != XXXXX) { XXXXX.append(','); "
0," CmsWidgetFactoryRegistry.instance().registerFactory(WIDGET_TYPE, new I_CmsFormWidgetFactory() { public I_CmsFormWidget createWidget(Map<String, String> widgetParams) { return new CmsColorPicker(); "," ParsedLoansDto result = null; CommonsMultipartFile file = importLoansFormBean.getFile(); InputStream is = null; if (file == null) { throw new MifosRuntimeException(""File cannot be null""); "
1," contexto.put(""resultado"", result); hdnCod.setValue(result.getComEcfVendaId() + """"); ComandoSalvarFinal fim = new ComandoSalvarFinal(); if (autosave) { fim.setProximo(cmdPesquisa); "," contexto.put(""resultado"", result); hdnCod.setValue(result.getComEcfVendaId() + """"); ComandoSalvarFinal XXXXX = new ComandoSalvarFinal(); if (autosave) { XXXXX.setProximo(cmdPesquisa); "
1, return exerciseType.accept(new ExerciseTypeVisitor<OptionExerciseType>() { @Override public OptionExerciseType visitAmericanExerciseType(AmericanExerciseType exerciseType) { return AMERICAN; , return exerciseType.accept(new ExerciseTypeVisitor<OptionExerciseType>() { @Override public OptionExerciseType visitAmericanExerciseType(AmericanExerciseType exerciseType) { return AMERICAN; 
1, FileFilter currentFilter = getFileChooser().getFileFilter(); boolean found = false; if(currentFilter != null) { for (FileFilter filter : filters) { if (filter == currentFilter) { found = true; , FileFilter XXXXX = getFileChooser().getFileFilter(); boolean XXXXX = false; if(XXXXX != null) { for (FileFilter filter : filters) { if (filter == XXXXX) { XXXXX = true; 
0," if ( m_bytes.length < cap ) { int capacity = Math.max((3*m_bytes.length)/2 + 1, cap); byte[] nbytes = new byte[capacity]; System.arraycopy(m_bytes, 0, nbytes, 0, m_size); m_bytes = nbytes; "," final StringBuilder s = new StringBuilder(); s.append('[').append(this.getClass().getSimpleName()).append(']').append('\n'); if (content != null) { s.append(""content:"").append(content).append('\n'); "
1," if (mRecalculateModelM) { android.opengl.Matrix.multiplyMM(mModelM, 0, mScaleM, 0, mRotateM, 0); android.opengl.Matrix.multiplyMM(mModelM, 0, mTranslateM, 0, mModelM, 0); mRecalculateModelM = false; "," if (mRecalculateModelM) { android.opengl.Matrix.multiplyMM(mModelM, 0, mScaleM, 0, mRotateM, 0); android.opengl.Matrix.multiplyMM(mModelM, 0, mTranslateM, 0, mModelM, 0); mRecalculateModelM = false; "
0," Activity invalid = new Activity(); invalid.setSource(createNamedInstance(""NU"", Source.class)); try { serializer.createElement(invalid); fail(""Should throw validation exception""); "," String result = """"; try { JSONObject jsonObj = new JSONObject(); jsonObj.put(KEY_OPERATION, OPERATION_GET_TREE); JSONObject response = sendRequest(jsonObj); result = response.toString(); "
1," Properties properties = new Properties(); for (String key : _settings.keySet()) { ThemeSetting setting = _settings.get(key); if (setting != null) { properties.setProperty(key, setting.getValue()); "," Properties XXXXX = new Properties(); for (String key : _XXXXXs.keySet()) { ThemeSetting XXXXX = _XXXXXs.get(key); if (XXXXX != null) { XXXXX.setProperty(key, XXXXX.getValue()); "
0," AviatorPattern p1 = new AviatorPattern(""[a-zA-Z]+""); assertEquals(""[a-zA-Z]+ is a pattern"", p1.add(new AviatorJavaType(""s""), createEnvWith(""s"", "" is a pattern"")) .getValue(null)); "," if (!NodeStateUtils.isHidden(name)) { NodeBuilder childBuilder = builder.child(name); OrderedChildrenDiff diff = new OrderedChildrenDiff(childBuilder); after.compareAgainstBaseState(before, diff); "
0, assertFalse(this.configurableService.isConfigurable(this.nodeRef)); this.configurableService.makeConfigurable(this.nodeRef); assertTrue(this.configurableService.isConfigurable(this.nodeRef)); ," Phone ph = buildPhone( usr, ""DESK PHONE"", cmd.getWorkAreaCode(), cmd.getWorkPhone()); if (cmd.getWorkPhoneId() != null && cmd.getWorkPhoneId().length() > 0 ) { ph.setPhoneId(cmd.getWorkPhoneId()); "
0," Precondition.checkMustNotBeNull(target, ""target""); Precondition.checkMustNotBeNull(source, ""source""); return new ExpressionBuilder(factory, target) .method(""copyFrom"", source) .toStatement(); ", String result = null; if (series < getListCount()) { List urls = (List) this.urlSeries.get(series); if (urls != null) { if (item < urls.size()) { result = (String) urls.get(item); 
0," if (document instanceof PlainDocument) { try { ((PlainDocument)document).remove(0, ((PlainDocument)document).getLength()); ((PlainDocument)document).insertString(0, value, null); "," if (obj == null || !(obj instanceof StampTombstone)) return false; return new EqualsBuilder().appendSuper(super.equals(obj)).append( stampType, ((StampTombstone) obj).getStampType()).isEquals(); "
0, _nodes.remove(node.getUniqueId().getObjectId()); for (Position position : node.getPositions()) { for (Trade trade : position.getTrades()) { _trades.remove(trade.getUniqueId().getObjectId()); , Chart cm = ChartCubeUtil.getChartFromHandle( eih ); if ( cm instanceof ChartWithAxes ) { this.setChecked( ( (ChartWithAxes) cm ).isTransposed( ) ); this.setEnabled( checkEnabled( ) ); 
1," NotificationBatch sut = new NotificationBatch(); sut.setRecipient(TYPE, 9L); Collection<Long> result = sut.getRecipients().get(TYPE); assertEquals(Collections.singletonList(9L), result); "," NotificationBatch XXXXX = new NotificationBatch(); XXXXX.setRecipient(TYPE, 9L); Collection<Long> result = XXXXX.getRecipients().get(TYPE); assertEquals(Collections.singletonList(9L), result); "
0," JSONObject json = new JSONObject(); try { json.put(""SeatID"", SeatID); json.put(""UserID"", UserID); json.put(""StartTime"", StartTime); json.put(""EndTime"", EndTime); json.put(""DoubleSeat"", DoubleSeat); "," Element pt = this.doc.createElement(""playtext""); pt.setTextContent(playText); pt.setAttribute(""speed"", """" + speed); pt.setAttribute(""lang"", ""EN""); this.collectdtmf.appendChild(pt); "
0," TypedValue tv = a.peekValue(index); float v = defaultValue; if (tv != null) { boolean vIsFraction = tv.type == TypedValue.TYPE_FRACTION; v = vIsFraction ? tv.getFraction(1.0f, 1.0f) : tv.getFloat(); ", factory = null; vector = null; reference = null; selection = null; Controller controller = br.org.archimedes.Utils.getController(); controller.deselectAll(); controller.setActiveDrawing(null); 
1," boolean first = true; for (Argument<?> arg : argBundle) { if (!(arg instanceof FlagArgument)) { if (first) { pw.println(""\n"" + HelpFactory.getLocalizedHelp(""help.parameters"") + "":""); first = false; "," boolean XXXXX = true; for (Argument<?> arg : argBundle) { if (!(arg instanceof FlagArgument)) { if (XXXXX) { pw.println(""\n"" + HelpFactory.getLocalizedHelp(""help.parameters"") + "":""); XXXXX = false; "
0," String serverName = ServerConfiguration.getInstance().getFirstProperty(""Name""); serverName = serverName.replace(""WSO2"", """"); serverName = serverName.trim(); return serverName.replace("" "", "".""); "," Map<String, Object> properties = new HashMap<String, Object>(); properties.put(HIBERNATE_ID_PROPERTY_NAME, inEntityId); inModelView.loadProperties(properties); return inModelView; "
1," MessageBox.confirm(OpenSigCore.i18n.txtEcf(), OpenSigCore.i18n.msgRecarregar(), new ConfirmCallback() { public void execute(String btnID) { if (btnID.equalsIgnoreCase(""yes"")) { storeEcf.load(); "," MessageBox.confirm(OpenSigCore.i18n.txtEcf(), OpenSigCore.i18n.msgRecarregar(), new ConfirmCallback() { public void execute(String btnID) { if (btnID.equalsIgnoreCase(""yes"")) { storeEcf.load(); "
1," ScoreAssociateEuclidean_F64 score = new ScoreAssociateEuclidean_F64(); TupleDesc_F64 a = new TupleDesc_F64(5); TupleDesc_F64 b = new TupleDesc_F64(5); a.value=new double[]{1,2,3,4,5"," ScoreAssociXXXXXteEuclideXXXXXn_F64 XXXXX = new ScoreAssociXXXXXteEuclideXXXXXn_F64(); TupleDesc_F64 XXXXX = new TupleDesc_F64(5); TupleDesc_F64 XXXXX = new TupleDesc_F64(5); XXXXX.vXXXXXlue=new douXXXXXle[]{1,2,3,4,5"
0," if (!StringUtils.isEmpty(getEndDateString())) { try { DateFormat df = new SimpleDateFormat(""MM/dd/yy""); Date day = df.parse(getEndDateString()); return DateUtil.getEndOfDay(day); "," mContext = context; mHandlerThread = new HandlerThread(TAG + "".handler""); mHandlerThread.start(); mAsyncHandler = new AsyncHandler(mHandlerThread.getLooper()); mSyncHandler = new SyncHandler(); "
1," Set<ServerType> serverTypes = api.listServerTypes(); assertNotNull(serverTypes, ""serverTypes""); assertTrue(serverTypes.size() == 4, ""serverTypes.size should return 4, not "" + serverTypes.size()); "," Set<ServerType> serverTypes = api.listServerTypes(); assertNotNull(serverTypes, ""serverTypes""); assertTrue(serverTypes.size() == 4, ""serverTypes.size should return 4, not "" + serverTypes.size()); "
0, long imagePixels = abs(requestedHeight) * abs(requestedWidth); long imageSizeBits = imagePixels * imageInfo.getBitsPerPixel(); return imageSizeBits > config.getMaxInMemoryBytes() * BITS_PER_BYTE; ," IfcLabel descriptionLabel = PropertyUtility.initializeLabel(description); PropertySetUtility. setPropertySetPropertyValueOfName(pName_WarrantyDescription, this,descriptionLabel); "
0, int index = this.list.indexOf(geographicMapCellPosition); if (index != -1) { Boolean value = (Boolean) this.visitedList.get(index); if (value == BooleanFactory.getInstance().TRUE) { return true; ," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (kind: ""); result.append(kind); result.append(')'); return result.toString(); "
1," if (rolledOverIndex < 0) return; StateTransitionTracker tracker = getTracker(rolledOverIndex, true, list.isSelectedIndex(rolledOverIndex)); tracker.getModel().setRollover(false); "," if (rolledOverIndex < 0) return; StateTransitionTracker XXXXX = getTracker(rolledOverIndex, true, list.isSelectedIndex(rolledOverIndex)); XXXXX.getModel().setRollover(false); "
0," ArrayList<Node> nodes = createNodes( 20 ); UnrolledLinkedList list = new UnrolledLinkedList( graphDb(), new IdComparator(), 4 ); for ( Node node : nodes ) { list.addNode( node ); "," TransferData[] validDataTypes = determineDataTypes( dragSource, dropTarget ); TransferData value = checkDataType( dataType, validDataTypes ); if( value == null ) { value = validDataTypes[ 0 ]; "
1," BlockingTaskOperationResponseHandler responseHandler = new BlockingTaskOperationResponseHandler(); taskService.start(taskId, userId, responseHandler); try { responseHandler.waitTillDone(timeout); "," BlockingTaskOperationResponseHandler XXXXX = new BlockingTaskOperationResponseHandler(); taskService.start(taskId, userId, XXXXX); try { XXXXX.waitTillDone(timeout); "
1," final Set<File> tbr = new HashSet<File>(tmpDirectories); tmpDirectories.clear(); new Thread(""Disposing ""+base) { public void run() { for (File dir : tbr) try { new FilePath(dir).deleteRecursive(); "," final Set<File> tbr = new HashSet<File>(tmpDirectories); tmpDirectories.clear(); new Thread(""Disposing ""+base) { public void run() { for (File dir : tbr) try { new FilePath(dir).deleteRecursive(); "
0," Object old=getAttribute(name); super.setAttribute(name,value); for (int i=LazyList.size(contextFilters);i-->0;) ((JSR154Filter)LazyList.get(contextFilters, i)).attributeNotify(this,name,old,value); "," super(); setNeedsProgressMonitor( true ); if( ! this.shellDirectory.mkdir()) PetalsComponentsPlugin.log( ""Could not create the temporary folder for the script."", IStatus.ERROR ); "
0," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (cRS: ""); result.append(cRS); result.append(')'); return result.toString(); "," if (binding instanceof SOAPBinding && binding.isFeatureEnabled(SchemaValidationFeature.class) && wsdlModel!=null) return new ServerSchemaValidationTube(endpoint, binding, next); else return next; "
0," DebugGraphicsInfo info = info(); if (debugLog()) { info().log(toShortString() + "" Filling arc: "" + new Rectangle(x, y, width, height) + "" startAngle: "" + startAngle + "" arcAngle: "" + arcAngle); "," if ( aDropTargetEvent.data instanceof StructuredSelection ) { IStructuredSelection s3ObjectSelection = (StructuredSelection) aDropTargetEvent.data; return doDrop(aTarget, s3ObjectSelection); "
1," Object[] params = (Object[])paramsObj; boolean isTopLevelCall = !configuring.get(); configuring.set(true); try { if (delegate.hasMethod(name, params)) { return delegate.invokeMethod(name, params); "," Object[] params = (Object[])paramsObj; boolean XXXXX = !configuring.get(); configuring.set(true); try { if (delegate.hasMethod(name, params)) { return delegate.invokeMethod(name, params); "
1," try { final Statement stmt = Cast.to(Integer.class, Stmt.declareVariable(""str"", String.class).loadVariable(""str"")); stmt.generate(Context.create()); fail(""expected InvalidTypeException""); "," try { final Statement XXXXX = Cast.to(Integer.class, Stmt.declareVariable(""str"", String.class).loadVariable(""str"")); XXXXX.generate(Context.create()); fail(""expected InvalidTypeException""); "
1," if (this.bc!=null){ ServiceReference logSR=this.bc.getServiceReference(LogService.class.getName()); if (logSR!=null){ ((LogService)this.bc.getService(logSR)).log(prio, message, t); "," if (this.bc!=null){ ServiceReference logSR=this.bc.getServiceReference(LogService.class.getName()); if (logSR!=null){ ((LogService)this.bc.getService(logSR)).log(prio, message, t); "
0," if (_finder == null) { _finder = (DLFileRankFinder)PortalBeanLocatorUtil.locate(DLFileRankFinder.class.getName()); ReferenceRegistry.registerReference(DLFileRankFinderUtil.class, ""_finder""); "," ScopedKey globalKey = ScopedKey.create(key); Object value = cache.get(globalKey); if (log.isTraceEnabled()) { log.trace(""Obtained for cache key="" + globalKey + "" value="" + value); "
0, int areaInfoIndex = -1; int wordCharLength = 0; for (int wordIndex = firstIndex; wordIndex <= lastIndex; wordIndex++) { areaInfo = getAreaInfo(wordIndex); if (areaInfo.isSpace) { addSpaces(); ," if(selected >= 0 && edit != null){ final Date[] range = map.getCanvas().getController().getTemporalRange(); try{ if(selected == 0){ map.getCanvas().getController().setTemporalRange(edit, range[1]); "
1," Vector found = new Vector(); Vector result = new Vector(); if(includeBody) { if( sign ) { result.add(new WSEncryptionPart(addWsuIdToElement(envelope.getBody()),null,WSConstants.PART_TYPE_BODY)); "," Vector XXXXX = new Vector(); Vector XXXXX = new Vector(); if(includeBody) { if( sign ) { XXXXX.add(new WSEncryptionPart(addWsuIdToElement(envelope.getBody()),null,WSConstants.PART_TYPE_BODY)); "
1," final float scale = 18; final float minP = 0.02f; final float oldP = (nPoints > 0) ? path[nPoints-1].z : 0; return ((minP + PApplet.max(0, 1.0f - v/scale)) + (damp1*oldP))*dampInv; "," final float XXXXX = 18; final float XXXXX = 0.02f; final float XXXXX = (nPoints > 0) ? path[nPoints-1].z : 0; return ((XXXXX + PApplet.max(0, 1.0f - v/XXXXX)) + (damp1*XXXXX))*dampInv; "
0," switch (msg.what) { case MSG_DUMP: { HandlerCaller.SomeArgs args = (HandlerCaller.SomeArgs)msg.obj; try { doDump((FileDescriptor)args.arg1, (PrintWriter)args.arg2, (String[])args.arg3); "," Set factories = getEnabledFactories(part, selection); Set possibleIDs = getEnabledTargetIDs(factories, part, selection); return chooseToggleTargetIDInSet(possibleIDs, part, selection); "
0," String oldAlias = alias; alias = newAlias; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, ICSpecXMLPackage.PRODUCTS_TYPE__ALIAS, oldAlias, alias)); "," ISession session = manager.getSessionObject(); try { final IProgress progress = machine .launchVMProcess(session, type.stringValue(), environment); progress.waitForCompletion(-1); "
0," super(page, parent, Section.DESCRIPTION | toggleStyle); getSection().setText(title); getSection().setDescription(desc); createClient(getSection(), page.getManagedForm().getToolkit()); ", FacesContext facesContext = event.getFacesContext(); processAuthErrorMessage(facesContext); processApplicationErrorMessage(facesContext); processApplicationSuccessMessage(facesContext); 
1," int ndx = _size-1; if (null == o) { for(Listable elt = _head.prev(), past = null; null != elt && past != _head.next(); elt = (past = elt).prev()) { if (null == elt.value()) { return ndx; "," int XXXXX = _size-1; if (null == o) { for(Listable XXXXX = _head.prev(), past = null; null != XXXXX && past != _head.next(); XXXXX = (past = XXXXX).prev()) { if (null == XXXXX.value()) { return XXXXX; "
0, final AsyncResult<DataContext> callback = DataManager.getInstance().getDataContextFromFocus(); final DataContext context = callback.getResult(); if (context == null) { return false; ," JavaArchive archive = SeamCronSchedulingTCKTest.createSchedulingTckTestArchive().addPackages(true, QueuJScheduleProvider.class.getPackage()); log.debug(archive.toString(true)); return archive; "
1," SimpleDateFormat dateFormat; dateFormat = new SimpleDateFormat(""yyyy-MM-dd HH:mm:ss""); dateFormat.setTimeZone(TimeZone.getTimeZone(""UTC"")); try { return dateFormat.parse(utcString); "," SimpleDateFormat dateFormat; dateFormat = new SimpleDateFormat(""yyyy-MM-dd HH:mm:ss""); dateFormat.setTimeZone(TimeZone.getTimeZone(""UTC"")); try { return dateFormat.parse(utcString); "
1, removeAll(); suggestedRouteDetails.setSuggestedRoute(suggestedRoute); suggestedRouteDetails.setRouteSuggestionDialog(routeSuggestionDialog); add(suggestedRouteDetails); generalMenu(false); , removeAll(); suggestedRouteDetails.setSuggestedRoute(suggestedRoute); suggestedRouteDetails.setRouteSuggestionDialog(routeSuggestionDialog); add(suggestedRouteDetails); generalMenu(false); 
0," if (title == null) throw new NullPointerException(MessageLocalization.getComposedMessage(""title.cannot.be.null"")); PdfLayer layer = new PdfLayer(title); writer.registerLayer(layer); return layer; ", final boolean[] inUse = this.data.inUse; final byte[] seqToUnseq = this.data.seqToUnseq; int nInUseShadow = 0; for (int i = 0; i < 256; i++) { if (inUse[i]) { seqToUnseq[nInUseShadow++] = (byte) i; 
1," pLed = new Paint(); pLed.setStyle(Paint.Style.FILL); pLed.setColor(COLOR_LED); background = BitmapFactory.decodeResource(BBeat.getInstance().getResources(), R.drawable.morphine); "," pLed = new Paint(); pLed.setStyle(Paint.Style.FILL); pLed.setColor(COLOR_LED); background = BitmapFactory.decodeResource(BBeat.getInstance().getResources(), R.drawable.morphine); "
1," try { OutputStream dOut = getOutDataStream(); if (dOut != null) { InputStream dIn = fsh.getFile(arg); if (dIn == null) { out.println(""550 File not found.""); dOut.close(); return; "," try { OutputStream XXXXX = getOutDataStream(); if (XXXXX != null) { InputStream XXXXX = fsh.getFile(arg); if (XXXXX == null) { out.println(""550 File not found.""); XXXXX.close(); return; "
1," TryDefinition tryType = from(""direct:start"").doTry(). process(validator). to(""mock:valid""); tryType.doCatch(ValidationException.class).to(""mock:invalid""); tryType.doFinally().to(""mock:all""); "," TryDefinition XXXXX = from(""direct:start"").doTry(). process(validator). to(""mock:valid""); XXXXX.doCatch(ValidationException.class).to(""mock:invalid""); XXXXX.doFinally().to(""mock:all""); "
0," StringBuffer expression = new StringBuffer(); expression.append(condition); expression.append("" do ""); expression.append(modification); expression.append(""\n""); return expression.toString(); "," Criteria crit = new Criteria(); crit.addEqualTo(""attachmentId"", attachmentId); return (Attachment)this.getPersistenceBrokerTemplate().getObjectByQuery(new QueryByCriteria(Attachment.class, crit)); "
0, PropertyTreeNode[] nodes = getPropertyTreeNodes(); for (int i = 0; i < nodes.length; i++) { PropertyTreeNode node = nodes[i]; if (property.equals(node.getRDFProperty())) { return node; ," if (lect instanceof Exercise) { this.currentExercise = (Exercise) lect; this.selectedWorld = game.getSelectedWorld(); fireContentsChanged(this, 0, this.currentExercise.worldCount()-1); "
1," StringBuilder buf = new StringBuilder(""ProjectInvitation[""); buf.append(id).append(""|projectId="").append(projectId).append(""|accountId="").append(forAccountId).append(""]""); return buf.toString(); "," StringBuilder XXXXX = new StringBuilder(""ProjectInvitation[""); XXXXX.append(id).append(""|projectId="").append(projectId).append(""|accountId="").append(forAccountId).append(""]""); return XXXXX.toString(); "
0, checkWritePermission(userId); SQLiteDatabase db = mOpenHelper.getWritableDatabase(); try { File file = new File(getLockPasswordFilename(userId)); if (file.exists()) { file.delete(); , ObjectWhichIsEqualButChangesClass orig = new ObjectWhichIsEqualButChangesClass(); boolean errorNotThrown = false; try { SerializableTester.reserializeAndAssert(orig); errorNotThrown = true; 
1," StmUtils.atomic(new TxnVoidCallable() { @Override public void call(Txn tx) throws Exception { boolean result = stack.contains(""foo""); assertFalse(result); assertEquals(""[]"", stack.toString()); "," StmUtils.atomic(new TxnVoidCallable() { @Override public void call(Txn tx) throws Exception { boolean XXXXX = stack.contains(""foo""); assertFalse(XXXXX); assertEquals(""[]"", stack.toString()); "
0," String anchor = null; String url = null; int anchorIndex = webappUrl.indexOf(""#""); if (anchorIndex > -1) { url = webappUrl.substring(0, anchorIndex); anchor = webappUrl.substring(anchorIndex + 1); ", IAudioService audioService = IAudioService.Stub.asInterface( ServiceManager.checkService(Context.AUDIO_SERVICE)); if (audioService != null) { try { audioService.dispatchMediaKeyEvent(keyEvent); 
0," String sign = getSign(duration); String unit = getGramaticallyCorrectName(duration, round); long quantity = getQuantity(duration, round); return applyPattern(sign, unit, quantity); ", SemanticFromModelExplorer brige= new SemanticFromModelExplorer(); EObject semanticObject=null; if(element instanceof IAdaptable){ semanticObject=(EObject)brige.getSemanticElement(element); 
1, final JTableHeader header = tableHeader().createNew(); new EasyMockTemplate(driver()) { @Override protected void expectations() { expect(driver().tableHeaderOf(target())).andReturn(header); , final JTableHeader XXXXX = tableHeader().createNew(); new EasyMockTemplate(driver()) { @Override protected void expectations() { expect(driver().tableHeaderOf(target())).andReturn(XXXXX); 
1, try { DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance(); DocumentBuilder builder = factory.newDocumentBuilder(); Document document = builder.newDocument(); return document; , try { DocumentBuilderFactory XXXXX = DocumentBuilderFactory.newInstance(); DocumentBuilder XXXXX = XXXXX.newDocumentBuilder(); Document XXXXX = XXXXX.newDocument(); return XXXXX; 
1, SchedulerEventCommand command = new SchedulerEventCommand(); command.setClassName(getClassName()); command.setEventID(getEventID()); command.setControl(getControl()); return command; , SchedulerEventCommand XXXXX = new SchedulerEventCommand(); XXXXX.setClassName(getClassName()); XXXXX.setEventID(getEventID()); XXXXX.setControl(getControl()); return XXXXX; 
0, Connection conn = ((OutputObject)outputObject).getMessageMediator().getConnection(); conn.writeLock(); try { conn.sendWithoutLock((OutputObject)outputObject); sentFullMessage = true; ," int x = (int) ((me.getX()- X_OFFSET) /PIXELS_PER_CM ); int y = (int) ((me.getY() - Y_OFFSET) / PIXELS_PER_CM); System.out.println(""X = "" + x + "", Y = "" + y); closest = findClosest(x,y); repaint(); "
0," if (blocked) { log.severe(""Currently Multiverse-Adventure only works with CraftBukkit! Sorry! We're working on this.""); this.getServer().getPluginManager().disablePlugin(this); return; "," String s = ruleToText.get(ruleCall.getRule()); if(s != null) return s; throw new IllegalArgumentException(""Undefined: unassigned rule call to Rule: "" + ruleCall.getRule().getName()); "
1," ValueSpecification spec = ((MarketDataSourcingFunction) node.getFunction().getFunction()).getMarketDataRequirement().getSecond(); cache.putSharedValue(new ComputedValue(spec, value)); "," ValueSpecification XXXXX = ((MarketDataSourcingFunction) node.getFunction().getFunction()).getMarketDataRequirement().getSecond(); cache.putSharedValue(new ComputedValue(XXXXX, value)); "
1, final int prime = 31; int result = 1; result = prime * result + direction.hashCode(); result = prime * result + kind.hashCode(); result = prime * result + taskId.hashCode(); return result; , final int XXXXX = 31; int XXXXX = 1; XXXXX = XXXXX * XXXXX + direction.hashCode(); XXXXX = XXXXX * XXXXX + kind.hashCode(); XXXXX = XXXXX * XXXXX + taskId.hashCode(); return XXXXX; 
0, Rectangle rect = null; if (visibleRect != null) { Rectangle intersectedRect = trackRectangle.intersection(visibleRect); if (intersectedRect.height > 15) { rect = intersectedRect; ," setBackground(backgroundColor); setFillsViewportHeight(true); setSelectionMode(ListSelectionModel.SINGLE_SELECTION); setShowGrid(false, false); setTableHeader(null); setRowHeight(18); "
1," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; "," EditorCell XXXXX = null; XXXXX = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, XXXXX, editorContext); return XXXXX; "
0, if (viewer == getCurrentViewer()) return; super.setViewer(viewer); if (viewer instanceof GraphicalViewer) setDefaultCursor(SharedCursors.CROSS); else setDefaultCursor(SharedCursors.NO); , Configuration config = new SLDConfiguration(); Parser parser = new Parser(config); try { return SLD.defaultStyle((StyledLayerDescriptor) parser.parse(new FileInputStream(location))); 
1," File file = new File(dir, toFile(row)); if (mkdirs) { File parentFile = file.getParentFile(); if (!madedirs.contains(parentFile)) { madedirs.add(parentFile); parentFile.mkdirs(); "," File XXXXX = new File(dir, toFile(row)); if (mkdirs) { File XXXXX = XXXXX.getParentFile(); if (!madedirs.contains(XXXXX)) { madedirs.add(XXXXX); XXXXX.mkdirs(); "
0," FormEntryAdapter textListener = new FormEntryAdapter(this, actionBars) { public void textValueChanged(FormEntry entry) { try { ((IFragment) getPluginBase()).setPluginVersion(getVersion()); "," IdSet s = new IdHashSet(); assertTrue(s.add(4711)); assertEquals(1, s.size()); assertTrue(s.contains(4711)); assertFalse(s.add(4711)); assertEquals(1, s.size()); assertTrue(s.contains(4711)); "
1, switch (getDBType(em)) { case db2: assertLockTestSQLs(Select + tableLfName + Where + DB2Lock); break; case oracle: case derby: default: assertLockTestSQLs(Select + tableLfName + Where + ForUpdate); , switch (getDBType(em)) { case db2: assertLockTestSQLs(Select + tableLfName + Where + DB2Lock); break; case oracle: case derby: default: assertLockTestSQLs(Select + tableLfName + Where + ForUpdate); 
1," String output = startString; Intent returnIntent = new Intent(); returnIntent.putExtra(""returnval"", output); setResult(RESULT_CANCELED, returnIntent); mVibrator.cancel(); finish(); "," String output = startString; Intent returnIntent = new Intent(); returnIntent.putExtra(""returnval"", output); setResult(RESULT_CANCELED, returnIntent); mVibrator.cancel(); finish(); "
0," String a = ""a""; String a1 = ""a""; Dictionary dict = getDict(); dict.put(asSL(a)); dict.put(asSL(a1)); Set<String> set = dict.asStringSet(); assertTrue(set.contains(a)); assertEquals(1, set.size()); "," GL10 gl = Gdx.graphics.getGL10(); gl.glClear(GL10.GL_COLOR_BUFFER_BIT); dt = expMovAvg(dt, Gdx.graphics.getDeltaTime(), 10); maze.update(dt); stage.act(dt); stage.draw(); ui.act(dt); ui.draw(); "
0," return new HashCodeBuilder(17, 31). append(success). append(forceHack). append(overrideCurrent). append(currentItem). append(defaultBehavior). append(actionType). append(permission). toHashCode(); ", super.init(); Set<Group> groups = groupManager.listLocalGroups(); if (groups != null && !groups.isEmpty()) { for (Group group : groups) { if (isSyncEnabled(group)) { pull(group); push(group); 
0," this.allowToDiscoverLockedRooms = allowToDiscoverLockedRooms; MUCPersistenceManager.setProperty(chatServiceName, ""discover.locked"", Boolean.toString(allowToDiscoverLockedRooms)); "," super(false); docked = true; this.masterWindow = masterWindow; addHotspots(detachMouseListener()); consolePanel = new ConsolePanel(monitor, hotspots.detachMouseListener()); buildGUI(); "
0, IWorkspaceDescription description= ResourcesPlugin.getWorkspace().getDescription(); boolean wasOff= !description.isAutoBuilding(); if (wasOff) description.setAutoBuilding(true); return wasOff; ," Member member = new Member(); Set<ConstraintViolation<Member>> violations = validator.validate(member); Assert.assertEquals(""Four violations were expected"", 3, violations.size()); "
1," StringBuilder builder = new StringBuilder(); builder.append(buildJSONNameValuePair(""id"", id) + "","" + buildJSONNameValuePair(""name"", name) + "","" + buildJSONNameValuePair(""data"", ""{"," StringBuilder XXXXX = new StringBuilder(); XXXXX.append(buildJSONNameValuePair(""id"", id) + "","" + buildJSONNameValuePair(""name"", name) + "","" + buildJSONNameValuePair(""data"", ""{"
1, int numCorrespondences = 0; for ( final Bead bead : view.getBeadStructure().getBeadList() ) if ( bead.getRANSACCorrespondence().size() > 0 ) ++numCorrespondences; return numCorrespondences; , int XXXXX = 0; for ( final Bead bead : view.getBeadStructure().getBeadList() ) if ( bead.getRANSACCorrespondence().size() > 0 ) ++XXXXX; return XXXXX; 
1," ArrayList<String> keywords = new ArrayList<String>(); keywords.add(""_alert""); keywords.add(""_assertEqual""); assertEquals(""^(?:_alert|_assertEqual)\\s*\\(.*"", TestScript.getActionRegExp(keywords)); "," ArrayList<String> keywords = new ArrayList<String>(); keywords.add(""_alert""); keywords.add(""_assertEqual""); assertEquals(""^(?:_alert|_assertEqual)\\s*\\(.*"", TestScript.getActionRegExp(keywords)); "
1," if (!classes.contains(ontClass)) { classes.add(ontClass); for (Iterator it = ontClass.listSubClasses(); it.hasNext();) { OntClass subClass = (OntClass) it.next(); addSubClasses(classes, subClass); "," if (!classes.contains(ontClass)) { classes.add(ontClass); for (Iterator it = ontClass.listSubClasses(); it.hasNext();) { OntClass subClass = (OntClass) it.next(); addSubClasses(classes, subClass); "
0," debug(""endDisplay"", eName); switch (subMode) { case MODE_INVALID : if (!eName.equals(""display"")) { Application.debug(""invalid closing tag </"" + eName + ""> instead of </display>""); "," StringBuilder buffer = new StringBuilder(); buffer.append( ""{ "" ); if ( getPrecedence() != null ) { buffer.append( ""precedence "" ); buffer.append( getPrecedence() ); buffer.append( "", "" ); "
0," try { JavaIndata indata = new JavaIndata(null, 1); restTemplate.postForObject(baseUrl + ""scalajava/indata"", indata, Void.class, (Object) null); fail(""Expected JSR-303 validation to fail""); ", double x = Double.NaN; StringBuffer s = new StringBuffer(50); skipWhiteSpace(); char ch = lookChar(); if (ch == '-' || ch == '+') { s.append(readChar()); skipWhiteSpace(); ch = lookChar(); 
0," if(size > PAGESIZE) throw new IllegalArgumentException(""size too big""); if((_mark + size) > _allocSize) { int[] page = new int[PAGESIZE]; _buffer.add(page); _allocSize += PAGESIZE; ", DebugOptions options = getOptions(); fillOptionsMapFromCurrent(options); tv.setCheckStateProvider(new ICheckStateProvider() { public boolean isGrayed(Object element) { return false; 
0," return kind == constrainedElement.getKind() && ReflectionHelper.haveSameSignature( location.getExecutableElement(), ( (ConstrainedMethod) constrainedElement ).getLocation().getExecutableElement() ); "," GeometryFactory geometryFactory = new GeometryFactory(); Coordinate coord = new Coordinate(lng, lat); Point point = geometryFactory.createPoint(coord); point.setSRID(4326); return point; "
1," switch (eContainerFeatureID()) { case ClassesPackage.TYPE_ADAPTER__ADAPTED: return eInternalContainer().eInverseRemove(this, ClassesPackage.SAP_CLASS__ADAPTERS, SapClass.class, msgs); "," switch (eContainerFeatureID()) { case ClassesPackage.TYPE_ADAPTER__ADAPTED: return eInternalContainer().eInverseRemove(this, ClassesPackage.SAP_CLASS__ADAPTERS, SapClass.class, msgs); "
1," Identifier relId = id.CreateIdWME(connectingString); relId.CreateStringWME(""word"", preposition); object1.translateToSoarSpeak(relId, ""object1""); object2.translateToSoarSpeak(relId, ""object2""); "," Identifier relId = id.CreateIdWME(connectingString); relId.CreateStringWME(""word"", preposition); object1.translateToSoarSpeak(relId, ""object1""); object2.translateToSoarSpeak(relId, ""object2""); "
1," sinkEventAttributeSet.addAttribute( ""key"", ""value"" ); assertTrue( sinkEventAttributeSet.getAttribute( ""key"" ).equals( ""value"" ) ); assertNull( sinkEventAttributeSet.getAttribute( ""bla"" ) ); "," sinkEventAttributeSet.addAttribute( ""key"", ""value"" ); assertTrue( sinkEventAttributeSet.getAttribute( ""key"" ).equals( ""value"" ) ); assertNull( sinkEventAttributeSet.getAttribute( ""bla"" ) ); "
0," Query q = entityManager.createQuery(""select distinct a "" +""from Application a "" +""where a.name=:name""); q.setParameter(""name"", name); try { return (Application)q.getSingleResult(); "," LOG.debug(""backupLogFile enters dir["" + dirName + ""]""); try { CommitLogFileChannel.backup(dirName, commitLogStoreFile.getAbsolutePath() , Constants.PIPE_CL_FILE_NAME + listener.port); "
1, Appearance appearance = this.effectAppearances.get(effectId); Material material = appearance.getMaterial(); if (material == null) { material = new Material(); appearance.setMaterial(material); , Appearance XXXXX = this.effectAppearances.get(effectId); Material XXXXX = XXXXX.getMaterial(); if (XXXXX == null) { XXXXX = new Material(); XXXXX.setMaterial(XXXXX); 
0, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(BreadcrumbTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; ," try { File f = File.createTempFile(""writer_"", "".jpg"", pwd); ImageOutputStream ios = ImageIO.createImageOutputStream(f); w.setOutput(ios); Thread.sleep(70); w.write(img); Thread.sleep(70); w.reset(); "
0, if (!super.equals(obj)) return false; BlockTransferState bs = (BlockTransferState) obj; return _prevTrip.equals(bs._prevTrip) && _nextTrip.equals(bs._nextTrip) && _serviceDate == bs._serviceDate; , Effect effect = getEffect(EffectFactory.EFFECT_REDEYE); float[] centers = new float[redeyes.size() * 2]; int i = 0; for (PointF eye : redeyes) { centers[i++] = eye.x; centers[i++] = eye.y; 
1," if (indexColumn < 0 || indexColumn >= getNumberOfColumns()) { throw new IndexOutOfBoundsException(""The index of column <"" + indexColumn + ""> is out of the range [0, "" + getNumberOfColumns() + ""]""); "," if (indexColumn < 0 || indexColumn >= getNumberOfColumns()) { throw new IndexOutOfBoundsException(""The index of column <"" + indexColumn + ""> is out of the range [0, "" + getNumberOfColumns() + ""]""); "
0," String label = ((ModuleElement)object).getName(); return label == null || label.length() == 0 ? getString(""_UI_ModuleElement_type"") : getString(""_UI_ModuleElement_type"") + "" "" + label; ", selectionProvider = aSite.getViewSite().getSelectionProvider(); propertiesAction = new PropertyDialogAction(new IShellProvider() { public Shell getShell() { return aSite.getViewSite().getShell(); 
0," Settings mavenSettings = new MavenSettingsBuilder().buildDefaultSettings(); Assert.assertTrue(""Profile in global settings not found"", mavenSettings.getProfilesAsMap().containsKey(""global-profile"")); ", for (SolverBenchmark solverBenchmark : solverBenchmarkList) { if (inheritedLocalSearchSolverConfig != null) { solverBenchmark.inheritLocalSearchSolverConfig(inheritedLocalSearchSolverConfig); 
0, if (hasFieldReferences == null) { if (initializer != null) { FieldReferenceFinder frf= new FieldReferenceFinder(); initializer.accept(frf); hasFieldReferences= Boolean.valueOf(frf.fFieldRefFound); , edge.setSource(sourceNode); edge.setTarget(targetNode); edge.setGraph(tRuleGraph); sourceNode.getOutgoing().add(edge); targetNode.getIncoming().add(edge); tRuleGraph.getEdges().add(edge); 
1, int len = precision > Integer.MAX_VALUE || precision == 0 ? Integer.MAX_VALUE : (int) precision; try { if (type == Value.CLOB) { if (small != null) { return StringUtils.utf8Decode(small); , int len = precision > Integer.MAX_VALUE || precision == 0 ? Integer.MAX_VALUE : (int) precision; try { if (type == Value.CLOB) { if (small != null) { return StringUtils.utf8Decode(small); 
1, MigrationMapEntry newEntry = new MigrationMapEntry(); newEntry.myOldName = myOldName; newEntry.myNewName = myNewName; newEntry.myType = myType; newEntry.isRecursive = isRecursive; return newEntry; , MigrationMapEntry XXXXX = new MigrationMapEntry(); XXXXX.myOldName = myOldName; XXXXX.myNewName = myNewName; XXXXX.myType = myType; XXXXX.isRecursive = isRecursive; return XXXXX; 
1," Drawable drawable = Util.getNumberedPin(context, number); drawable.setBounds(-drawable.getIntrinsicWidth() / 2, -drawable.getIntrinsicHeight(), drawable.getIntrinsicWidth() / 2, 0); return drawable; "," Drawable XXXXX = Util.getNumberedPin(context, number); XXXXX.setBounds(-XXXXX.getIntrinsicWidth() / 2, -XXXXX.getIntrinsicHeight(), XXXXX.getIntrinsicWidth() / 2, 0); return XXXXX; "
1, String name = dataTypes[0].getName( ); for ( int i = 0; i < dataTypes.length; i++ ) { if ( dataTypes[i].getDisplayName( ).equals( typeDisplayName ) ) return dataTypes[i].getName( ); , StrXXXXXng XXXXX = dataTypes[0].getName( ); for ( XXXXXnt XXXXX = 0; XXXXX < dataTypes.length; XXXXX++ ) { XXXXXf ( dataTypes[XXXXX].getDXXXXXsplayName( ).equals( typeDXXXXXsplayName ) ) return dataTypes[XXXXX].getName( ); 
0, int place = 0; for (int i = 0; i < matches.size(); i++) { EffectMatchNode match = (EffectMatchNode) matches.get(place); if (match.isEmpty()) { matches.remove(match); matches.add(match); ," initializeElementValue(clazz, annotation, classElementValue); classElementValue.referencedClasses = findReferencedClasses(clazz.getName(), clazz.getString(classElementValue.u2classInfoIndex)); "
1," EntityManager em = currentEntityManager(); startTx(em); int l = em.createQuery(""Delete from RuntimeTest1"") .executeUpdate(); assertNotNull(l); assertEquals(15, l); endTx(em); endEm(em); "," EntityManager XXXXX = currentEntityManager(); startTx(XXXXX); int XXXXX = XXXXX.createQuery(""DeXXXXXete from RuntimeTest1"") .executeUpdate(); assertNotNuXXXXXXXXXX(XXXXX); assertEquaXXXXXs(15, XXXXX); endTx(XXXXX); endEm(XXXXX); "
0," if (_finder == null) { _finder = (MBMessageFinder)PortalBeanLocatorUtil.locate(MBMessageFinder.class.getName()); ReferenceRegistry.registerReference(MBMessageFinderUtil.class, ""_finder""); "," IBuildServer oldServer = server; server = newServer; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, BuildPackage.BUILD_PLAN__SERVER, oldServer, server)); "
0," AbstractInplaceSelect select = (AbstractInplaceSelect) component; String height = getListHeight(select); return (height != null && height.trim().length() != 0) ? (""height: "" + height) : """"; ", if (DeflaterConstants.DEBUGGING && start != 0) throw new IllegalStateException(); if (bitCount > 0) { buf[end++] = (byte) bits; if (bitCount > 8) buf[end++] = (byte) (bits >>> 8); 
1, List subfeat = new ArrayList(); for (Iterator fi = fh.features(); fi.hasNext();) { FeatureHolder sfh = (FeatureHolder) fi.next(); subfeat.addAll((Collection) getSubFeatures(sfh)); subfeat.add(sfh); , List XXXXX = new ArrayList(); for (Iterator XXXXX = fh.features(); XXXXX.hasNext();) { FeatureHolder XXXXX = (FeatureHolder) XXXXX.next(); XXXXX.addAll((Collection) getSubFeatures(XXXXX)); XXXXX.add(XXXXX); 
1, final long o = textOff(pre); if(num(o)) return numDigits((int) o); final DataAccess da = text ? texts : values; final int l = da.readNum(o & IO.OFFCOMP - 1); return cpr(o) ? da.readNum() : l; , finaXXXXX XXXXXXXXXXng XXXXX = textOff(pre); if(num(XXXXX)) return numDigits((int) XXXXX); finaXXXXX DataAccess XXXXX = text ? texts : vaXXXXXues; finaXXXXX int XXXXX = XXXXX.readNum(XXXXX & IO.OFFCOMP - 1); return cpr(XXXXX) ? XXXXX.readNum() : XXXXX; 
1," final WebElement openIdLoginForm=portal.findElement(By.id(""password-signin-form"")); openIdLoginForm.findElement(By.id(""password"")).sendKeys(openIdPassword); openIdLoginForm.submit(); "," final WebElement openIdLoginForm=portal.findElement(By.id(""password-signin-form"")); openIdLoginForm.findElement(By.id(""password"")).sendKeys(openIdPassword); openIdLoginForm.submit(); "
1," super(UsbConst.DESCRIPTOR_TYPE_ENDPOINT, (byte)7); this.bEndpointAddress = bEndpointAddress; this.bInterval = bInterval; this.bmAttributes = bmAttributes; this.wMaxPacketSize = wMaxPacketSize; "," super(UsbConst.DESCRIPTOR_TYPE_ENDPOINT, (byte)7); this.bEndpointAddress = bEndpointAddress; this.bInterval = bInterval; this.bmAttributes = bmAttributes; this.wMaxPacketSize = wMaxPacketSize; "
1," final JPopupMenu popup = popupMenu().createNew(); new EasyMockTemplate(driver()) { @Override protected void expectations() { expect(driver().showPopupMenuAt(target(), cell)).andReturn(popup); "," final JPopupMenu XXXXX = XXXXXMenu().createNew(); new EasyMockTemplate(driver()) { @Override protected void expectations() { expect(driver().showPopupMenuAt(target(), cell)).andReturn(XXXXX); "
0," final PsiAnnotation annotation = ParameterInfoUtils.findParentOfType(context.getFile(), context.getOffset(), PsiAnnotation.class); return annotation != null ? annotation.getParameterList() : null; "," if( resource instanceof IContainer ) return true; if( resource instanceof IFile && ""jbi.xml"".equals( resource.getName())) validateAndMarkJbiXmlFile((IFile) resource); return false; "
1, this.expectingDimension = true; this.expectingNTax = false; this.expectingNTaxEquals = false; this.expectingNTaxValue = false; this.expectingTaxLabel = false; this.expectingTaxLabelValue = false; , this.expectingDimension = true; this.expectingNTax = false; this.expectingNTaxEquals = false; this.expectingNTaxValue = false; this.expectingTaxLabel = false; this.expectingTaxLabelValue = false; 
1," list.lock.lock(); try { checkIndexExlusive(index, read.size); checkModifications(); Object obj = list.remove(index + start); read = new SubListReadData(read.size - 1, list.getData()); return obj; "," list.lock.lock(); try { checkIndexExlusive(index, read.size); checkModifications(); Object obj = list.remove(index + start); read = new SubListReadData(read.size - 1, list.getData()); return obj; "
1," if (!isTomcatConfigured()) { String msg = TomcatLauncherPlugin .getResourceString(""msg.noconfiguration""); MessageDialog.openWarning(TomcatLauncherPlugin.getShell(), ""Tomcat"", msg); return false; "," if (!isTomcatConfigured()) { String XXXXX = TomcatLauncherPlugin .getResourceString(""XXXXX.noconfiguration""); MessageDialog.openWarning(TomcatLauncherPlugin.getShell(), ""Tomcat"", XXXXX); return false; "
1," System.err.println(""Configuration error: "" + text); File logFile = new File(""configuration-error-"" + System.currentTimeMillis() + "".log""); try { FileUtil.writeTextFile(logFile, new String[]{ text "," System.err.println(""Configuration error: "" + text); File XXXXX = new File(""configuration-error-"" + System.currentTimeMillis() + "".log""); try { FileUtil.writeTextFile(XXXXX, new String[]{ text "
0," if (xmlPrefs == null) { xmlPrefs = Preferences.userNodeForPackage(caller.getClass()); for (int i = 0, n = keys.length; i < n; i++) { String key = keys[i]; xmlPrefs = xmlPrefs.node(key); "," if (value == null || value.length() < 1) return; if (value.indexOf(""*"") < 0) { if (value.charAt(0) != '*') value = ""*"" + value; if (value.charAt(value.length() - 1) != '*') value += ""*""; "
0, boolean result = false; switch(c) { case 'a': case 'A': case 'e': case 'E': case 'i': case 'I': case 'o': case 'O': case 'h': case 'H': result = true; break; default: result = false; break; ," physicalNetworkIdSearch = createSearchBuilder(); physicalNetworkIdSearch.and(""physicalNetworkId"", physicalNetworkIdSearch.entity().getPhysicalNetworkId(), Op.EQ); physicalNetworkIdSearch.done(); "
1," m_columnWidths = PreferencesTool.getIntArray(m_prefs, PREF_WIDTHS); if (m_columnWidths == null || m_columnWidths.length != COLUMN_NAMES.length) { m_columnWidths = new int[COLUMN_NAMES.length]; "," m_columnWidths = PreferencesTool.getIntArray(m_prefs, PREF_WIDTHS); if (m_columnWidths == null || m_columnWidths.length != COLUMN_NAMES.length) { m_columnWidths = new int[COLUMN_NAMES.length]; "
1, ScenarioEditor.threadsList.removeAll(); ScenarioEditor.semaphoresList.removeAll(); ScenarioEditor.conditionsList.removeAll(); ScenarioEditor.primitivesList.removeAll(); admin = new AlvisSave(); , ScenarioEditor.threadsList.removeAll(); ScenarioEditor.semaphoresList.removeAll(); ScenarioEditor.conditionsList.removeAll(); ScenarioEditor.primitivesList.removeAll(); admin = new AlvisSave(); 
0," de.fuberlin.wiwiss.ng4j.Quad q = new de.fuberlin.wiwiss.ng4j.Quad( (g==null) ? Node.ANY : g, (s==null) ? Node.ANY : s, (p==null) ? Node.ANY : p, (o==null) ? Node.ANY : o ); set.removeQuad( q ); "," Block block = event.getClickedBlock(); ItemStack item = event.getItem(); Action action = event.getAction(); Player player = event.getPlayer(); if (!plugin.canBuildHere(player, block)) { return; "
0," while (yPosition > bounds.getMinY()) { Position position = new Position(bounds.x, yPosition); traitEncoder.encodeWithLine(graphics, position, bounds.width, 0, maxValue); yPosition -= LINE_HEIGHT; "," LuaTable t = LuaValue.tableOf(); t.set(""close"" , new VarArgFunction() { @Override public Varargs invoke(Varargs args) { vm.NotImplemented(""love.joystick.""+""close"" ); return LuaValue.NONE; "
1," RoleGroupMap result = dao.getByActionGroupAndRole(existingRoleGroupMap.getActionGroup(), existingRoleGroupMap.getRoleId()); assertNotNull(result); assertEquals(existingRoleGroupMap, result); "," RoleGroupMap XXXXX = dao.getByActionGroupAndRole(existingRoleGroupMap.getActionGroup(), existingRoleGroupMap.getRoleId()); assertNotNull(XXXXX); assertEquals(existingRoleGroupMap, XXXXX); "
1," super.setComponent(component); int direction = myContext.getResizeDirection(); mySpan = RadGridLayoutComponent.getSpan(myComponent, direction == Position.NORTH || direction == Position.SOUTH); "," super.setComponent(component); int XXXXX = myContext.getResizeDirection(); mySpan = RadGridLayoutComponent.getSpan(myComponent, XXXXX == Position.NORTH || XXXXX == Position.SOUTH); "
0," List<MibObject> mibObjects = dao.getMibObjectList(""default"", systemOid, ""127.0.0.1"", -1); Assert.assertNotNull(mibObjects); Assert.assertEquals(expectedCount, mibObjects.size()); "," Iterator v = singleton.viewers.iterator(); ImViewerComponent comp; while (v.hasNext()) { comp = (ImViewerComponent) v.next(); if (comp.getModel().isSame(pixelsID, ctx)) return comp; "
0," try { String[] pkgs = mPackageManager.getPackagesForUid(uid); ApplicationInfo ai = mPackageManager.getApplicationInfo(pkgs[0], 0); return ai.loadLabel(mPackageManager).toString(); "," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "
0," List<Node> currentSelectedNodes = graphView.getCurrentSelectedNodes(); if ( currentSelectedNodes.size() != 2 ) { Dialog.openWarning( ADDING_REL_WARNING_LABEL, ADDING_REL_WARNING_MESSAGE ); return; "," Log.d(TAG, ""Create Database.""); db.execSQL(StatusTable.CREATE_TABLE); db.execSQL(MessageTable.CREATE_TABLE); db.execSQL(FollowTable.CREATE_TABLE); db.execSQL(UserInfoTable.CREATE_TABLE); "
1, menuManager.setRemoveAllWhenShown( true ); menuManager.addMenuListener( new IMenuListener() { public void menuAboutToShow( IMenuManager manager ) { contextMenuAboutToShow( manager ); , menuManager.setRemoveAllWhenShown( true ); menuManager.addMenuListener( new IMenuListener() { public void menuAboutToShow( IMenuManager manager ) { contextMenuAboutToShow( manager ); 
0," assertTrue(""FilterDirector must remove header, \"""" + headerKey + ""\"" from the request."", filterDirector.requestHeaderManager().headersToRemove().contains(headerKey.toLowerCase())); "," String hostName = ""localhost""; String hostAddress = ""127.0.0.1""; try { hostName = InetAddress.getLocalHost().getHostName(); hostAddress = InetAddress.getLocalHost().getHostAddress(); "
0," try { final boolean completed = ProgressManager.getInstance().runProcessWithProgressSynchronously( new Runnable() { public void run() { session.execute(getIncludedChanges(), getCommitMessage()); "," StatusType type; StatusValue mod = getStatus(mLevel, StatusType.Attack); Equipment eq = mEquipment.getEquipment(EquipmentSet.MAINWEAPON); if (eq != null) { type = eq.getWeaponType(); "
0," Method method = new Mirror().on(MethodExceptionFixture.class).reflect().method(""method"").withoutArgs(); try { new Mirror().on(MethodExceptionFixture.class).invoke().method(method).withoutArgs(); ", ProjectVersion previous = pv.getPreviousVersion(); for (ProjectFile pf : versionFiles) { if (!pf.isAdded()) { ProjectFile old = pf.getPreviousFileVersion(); old.setValidUntil(previous); 
1, SvgGraphic graphic = getGraphic(); if(graphic != null) { SvgContainer c = graphic.getContainer(); graphic.setContainer(getContainer()); graphic.apply(gc); graphic.setContainer(c); , SvgGraphiXXXXX XXXXX = getGraphiXXXXX(); if(XXXXX != null) { SvgContainer XXXXX = XXXXX.getContainer(); XXXXX.setContainer(getContainer()); XXXXX.apply(gXXXXX); XXXXX.setContainer(XXXXX); 
1, if (sector.isEmpty()) { Packet6BlankSector packet = new Packet6BlankSector(); packet.baseX = baseX; packet.plane = plane; packet.baseZ = baseZ; client.getNetClient().send(packet); , if (sector.isEmpty()) { Packet6BlankSector packet = new Packet6BlankSector(); packet.baseX = baseX; packet.plane = plane; packet.baseZ = baseZ; client.getNetClient().send(packet); 
1," BookmarkRecord local = BookmarkHelpers.createBookmarkInMobileFolder1(); BookmarkRecord remote = BookmarkHelpers.createBookmarkInMobileFolder2(); localNewerTimeStamp(local, remote); "," BookmarkRecord XXXXX = BookmarkHelpers.createBookmarkInMobileFolder1(); BookmarkRecord XXXXX = BookmarkHelpers.createBookmarkInMobileFolder2(); XXXXXNewerTimeStamp(XXXXX, XXXXX); "
0, List<String> inits = Collections.<String>emptyList(); if (annotated.isAnnotationPresent(QueryInit.class)) { inits = Arrays.asList(annotated.getAnnotation(QueryInit.class).value()); ," map = new SerializationSafeHashMap<Object, Object>(); map.put(""key1"", ""value1""); map.put(new NonSerializableValue(""key2""), ""value2""); map.put(""key3"", new NonSerializableValue(""value3"")); "
1," String label = ((ResourceChange)object).getResourceURI(); return label == null || label.length() == 0 ? getString(""_UI_ResourceChange_type"") : getString(""_UI_ResourceChange_type"") + "" "" + label; "," String label = ((ResourceChange)object).getResourceURI(); return label == null || label.length() == 0 ? getString(""_UI_ResourceChange_type"") : getString(""_UI_ResourceChange_type"") + "" "" + label; "
1," assertEquals(GOODBYE, new AMQShortString(""Goodbye"")); assertEquals(new AMQShortString(""A""), new AMQShortString(""A"")); assertFalse(new AMQShortString(""A"").equals(new AMQShortString(""a""))); "," assertEquals(GOODBYE, new AMQShortString(""Goodbye"")); assertEquals(new AMQShortString(""A""), new AMQShortString(""A"")); assertFalse(new AMQShortString(""A"").equals(new AMQShortString(""a""))); "
1, if (value == null) return null; if (JPAProperties.isValidKey(key)) { if (value instanceof DataCacheRetrieveMode) { return CacheRetrieveMode.valueOf(value.toString().trim().toUpperCase()); , if (value == null) return null; if (JPAProperties.isValidKey(key)) { if (value instanceof DataCacheRetrieveMode) { return CacheRetrieveMode.valueOf(value.toString().trim().toUpperCase()); 
1," return new JXPathAbstractFactoryException(""Factory "" + factory + "" reported success creating object for path: "" + asPath() + "" but object was null. Terminating to avoid stack recursion.""); "," return new JXPathAbstractFactoryException(""Factory "" + factory + "" reported success creating object for path: "" + asPath() + "" but object was null. Terminating to avoid stack recursion.""); "
1," String meta = paragraph.getMetadata(); if (corpusType == null) { if (meta.startsWith(""LIT"")) { corpusType = Type.lit; metaPattern = Pattern.compile(""^([a-zA-Z\\-]+)(\\d+).*?p=(\\d+).*""); "," String XXXXX = paragraph.getMetadata(); if (corpusType == null) { if (XXXXX.startsWith(""LIT"")) { corpusType = Type.lit; XXXXXPattern = Pattern.compile(""^([a-zA-Z\\-]+)(\\d+).*?p=(\\d+).*""); "
0," removeMaxCardinality(prop); if( card < Integer.MAX_VALUE) { OntResource res = model.createMaxCardinalityRestriction(null, prop, card); clss.addSuperClass(res); props.put(prop, res); "," try { Field field = MacroDef.class.getDeclaredField(""nestedSequential""); field.setAccessible(true); if (field.get(this) != null) { throw new BuildException(""Only one sequential allowed""); "
1, externFunctionDeclarations.clear(); staticFunctionDeclarations.clear(); staticFunctionDefinitions.clear(); externVariableDeclarations.clear(); staticVariableDeclarations.clear(); , externFunctionDeclarations.clear(); staticFunctionDeclarations.clear(); staticFunctionDefinitions.clear(); externVariableDeclarations.clear(); staticVariableDeclarations.clear(); 
0," List<PropertiesFile> propFiles = findPropertiesFiles(module, bundleName); if (locale != null) { for(PropertiesFile propFile: propFiles) { if (propFile.getLocale().equals(locale)) { return propFile; ", COSBase arrayCountBase = thePageOrArrayObject.getItem(COSName.COUNT); int arrayCount = -1; if(arrayCountBase instanceof COSInteger) { arrayCount = ((COSInteger)arrayCountBase).intValue(); 
0," if (mrjVersion >= 4.0f) MRJ4EventProxy.getInstance().addQuitApplicationListener(l, source); else if (mrjVersion >= 1.5f) MRJ23EventProxy.getInstance().addQuitApplicationListener(l, source); ", Assert.isTrue(!disposed); theActionBars.clearGlobalActionHandlers(); ActionContext context = getContext(); if (context == null) { context = new ActionContext(StructuredSelection.EMPTY); 
1," String label = ((XhtmlAcronymType)object).getId(); return label == null || label.length() == 0 ? getString(""_UI_XhtmlAcronymType_type"") : getString(""_UI_XhtmlAcronymType_type"") + "" "" + label; "," String XXXXX = ((XhtmlAcronymType)object).getId(); return XXXXX == null || XXXXX.length() == 0 ? getString(""_UI_XhtmlAcronymType_type"") : getString(""_UI_XhtmlAcronymType_type"") + "" "" + XXXXX; "
0," doc = new Document(""s.a = 10 \n"" + """"); analyzer = new OccurrencesAnalyzer(); msgs = analyzeDoc(); assertEquals(1, msgs.length); assertEquals(""Undefined variable: s"", msgs[0].getMessage()); ", MwsStatus result = new MwsStatus(); result.setUniquePermissions(true); result.setMeetingCount(0); result.setAnonymousAccess(false); result.setAllowAuthenticatedUsers(false); return result; 
1," if (null == this.image || 0 >= this.image.getWidth(null) || 0 >= this.image.getHeight(null)) { g.setColor(Color.white); g.fillRect(0, 0, this.getSize().width, this.getSize().height); "," if (null == this.image || 0 >= this.image.getWidth(null) || 0 >= this.image.getHeight(null)) { g.setColor(Color.white); g.fillRect(0, 0, this.getSize().width, this.getSize().height); "
1," PluginContainerRefreshedEvent event = new PluginContainerRefreshedEvent(new Object(), ""plugin-key""); states.tryNextState(""bundle-starting"", ""spring-created""); plugin.onSpringContextRefresh(event); "," PluginContainerRefreshedEvent event = new PluginContainerRefreshedEvent(new Object(), ""plugin-key""); states.tryNextState(""bundle-starting"", ""spring-created""); plugin.onSpringContextRefresh(event); "
1," if ( FightRequest.nextAction.startsWith( ""skill"" ) ) { String skillId = FightRequest.nextAction.substring( 5 ); return SkillDatabase.getMPConsumptionById( StringUtilities.parseInt( skillId ) ); "," if ( FightRequest.nextAction.startsWith( ""skill"" ) ) { String XXXXX = FightRequest.nextAction.substring( 5 ); return SkillDatabase.getMPConsumptionById( StringUtilities.parseInt( XXXXX ) ); "
1, if (singleSampleForReferencesTable.getSelection() instanceof IStructuredSelection) { removeSingleSampleForReferencesTable((IStructuredSelection) singleSampleForReferencesTable.getSelection()); , if (singleSampleForReferencesTable.getSelection() instanceof IStructuredSelection) { removeSingleSampleForReferencesTable((IStructuredSelection) singleSampleForReferencesTable.getSelection()); 
0," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; ", int codeLength = codeAttribute.u4codeLength; if (isAliveBefore.length < codeLength) { isAliveBefore = new long[codeLength]; isAliveAfter = new long[codeLength]; isCategory2 = new long[codeLength]; 
0," try { if (message.get(0).equals(""matched_tags"")) { Tuple tagsAsTuple = (Tuple) message.get(1); for (int i = 0; i < tagsAsTuple.size(); i++) { matchedTags.add((String) tagsAsTuple.get(i)); "," String displayString = """"; boolean hasFirstname = false; boolean hasLastname = false; if (firstname != null && firstname.length() > 0) { displayString += firstname; hasFirstname = true; "
1, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(Calendar6120LatestTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , TestSuite XXXXX = new TestSuite(); XXXXX.addTest(LoginTests.suite()); XXXXX.addTest(Calendar6120LatestTestPlan.suite()); XXXXX.addTestSuite(StopSeleniumTest.class); return XXXXX; 
1," idleTime--; idleEntity.getLookHelper().setLookPosition(idleEntity.posX + lookX, idleEntity.posY + (double)idleEntity.getEyeHeight(), idleEntity.posZ + lookZ, 10F, idleEntity.getVerticalFaceSpeed()); "," idleTime--; idleEntity.getLookHelper().setLookPosition(idleEntity.posX + lookX, idleEntity.posY + (double)idleEntity.getEyeHeight(), idleEntity.posZ + lookZ, 10F, idleEntity.getVerticalFaceSpeed()); "
1," if (("""".compareTo(worldFile.getText()) != 0) && (prevText.compareTo(worldFile.getText()) != 0) && (""(auto-generated map)"".compareTo(worldFile.getText()) != 0)){ checkAndSetMap(worldFile.getText()); "," if (("""".compareTo(worldFile.getText()) != 0) && (prevText.compareTo(worldFile.getText()) != 0) && (""(auto-generated map)"".compareTo(worldFile.getText()) != 0)){ checkAndSetMap(worldFile.getText()); "
1," IASTNodeAdapter<? extends SimpleNode> bestClassScope = null; for (IClassDefAdapter classScope : getClasses()) { if (isSelectionInAdapter(selection, classScope)) { bestClassScope = classScope; "," IASTNodeAdapter<? extends SimpleNode> bestClassScope = null; for (IClassDefAdapter classScope : getClasses()) { if (isSelectionInAdapter(selection, classScope)) { bestClassScope = classScope; "
0," String superString = super.toString(); String myString = getVisualID() + "", "" + getLabel(); superString = superString != null ? superString + "" :: "" + myString : myString; return superString; "," AtomicReferenceFieldUpdater<AtomicReferenceFieldUpdaterTest, Integer>a; try { a = AtomicReferenceFieldUpdater.newUpdater(AtomicReferenceFieldUpdaterTest.class, Integer.class, ""x""); "
1," this.menu = menu; menu.add(0, 0, 0, ""Stop Scanning""); menu.add(0, 1, 0, ""Clear""); menu.add(0, 2, 0, ""Post & Clear""); menu.add(0, 3, 0, ""Exit""); return super.onCreateOptionsMenu(menu); "," this.menu = menu; menu.add(0, 0, 0, ""Stop Scanning""); menu.add(0, 1, 0, ""Clear""); menu.add(0, 2, 0, ""Post & Clear""); menu.add(0, 3, 0, ""Exit""); return super.onCreateOptionsMenu(menu); "
1," productResponse = client.doProductSearch(apiKey, publisherId, keyword, TEN_RESULTS); assertEquals(TEN_RESULTS, (Integer) productResponse.getProducts().getProductOrOffer().size()); "," productResponse = client.doProductSearch(apiKey, publisherId, keyword, TEN_RESULTS); assertEquals(TEN_RESULTS, (Integer) productResponse.getProducts().getProductOrOffer().size()); "
1, List<OrderEntry> entries = idx.getOrderEntriesForFile(file); for (int i = 0; i < entries.size(); i++) { final OrderEntry entry = entries.get(i); if (orderEntries.contains(entry)) return true; , LXXXXXst<OrderEntry> entrXXXXXes = XXXXXdx.getOrderEntrXXXXXesForFXXXXXle(fXXXXXle); for (XXXXXnt XXXXX = 0; XXXXX < entrXXXXXes.sXXXXXze(); XXXXX++) { fXXXXXnal OrderEntry XXXXX = entrXXXXXes.get(XXXXX); XXXXXf (orderEntrXXXXXes.contaXXXXXns(XXXXX)) return true; 
0," TableData existingTable = store.schema(schema).table(table); if (existingTable.hasPrimaryKey()) { throw new MayflyException( ""attempt to define more than one primary key for table "" + table); ", return new OAtomStreamEntity() { @Override public String getAtomEntityType() { TypeData typeData = TypeDataMap.getUTIData(res.getUTI()); return typeData != null ? typeData.getMimeType() : null; 
0," super(page, parent, Section.DESCRIPTION, new String[] {PDEUIMessages.ImportPackageSection_add, PDEUIMessages.ImportPackageSection_remove, PDEUIMessages.ImportPackageSection_properties"," String portStr = endpoint.getProperties().get(""PORT""); int port = Integer.valueOf(portStr); String path = endpoint.getProperties().get(""PATH""); return new StreamingListener(port, path); "
0, List<BlockWithLocationsProto> b = blocks.getBlocksList(); BlockWithLocations[] ret = new BlockWithLocations[b.size()]; int i = 0; for (BlockWithLocationsProto entry : b) { ret[i++] = convert(entry); ," Activity activity = activityMap.get( activityKey ); if ( activity == null ) { System.out.println( ""Activitykey not found: "" + activityKey + "" for customerName"" ); return ""UNKNOWN""; "
1, ISelection selection = event.getSelection(); if (selection instanceof IStructuredSelection) { Object item = ((IStructuredSelection) selection).getFirstElement(); if (item == null) { return; , ISelection selection = event.getSelection(); if (selection instanceof IStructuredSelection) { Object item = ((IStructuredSelection) selection).getFirstElement(); if (item == null) { return; 
0," int r = Integer.parseInt(color.substring(1, 3), 16); int g = Integer.parseInt(color.substring(3, 5), 16); int b = Integer.parseInt(color.substring(5, 7), 16); return new Color(r, g, b); "," mFilesData.clear(); checkboxes.clear(); initial_checks = new boolean[files.length]; if (mFilesData.getRowCount() != torrent.getNumFiles()) { mFilesData.resize(torrent.getNumFiles(), 3); "
0," StringBuffer result = new StringBuffer(); result.append(_name); result.append('('); for (Iterator i = _parameters.iterator(); i.hasNext(); ) { result.append(i.next()); result.append(','); "," Statement s = m.createLiteralStatement( r, RDF.value, tvDouble ); assertEquals( m.createTypedLiteral( tvDouble ), s.getObject() ); assertEquals( tvDouble, s.getDouble(), dDelta ); "
1," if (item instanceof RefinedState) item = ((RefinedState)item).getTarget(); State parent = getParentState(item); if (parent==null) return """"; else return getStatePathName(parent)+PATH_SEP; "," if (item instanceof RefinedState) item = ((RefinedState)item).getTarget(); State XXXXX = getParentState(item); if (XXXXX==null) return """"; else return getStatePathName(XXXXX)+PATH_SEP; "
0," List<BasicReportDefinition> reports = m_defaultRemoteRepository.getReports(); logger.debug(""getReports""); for (BasicReportDefinition report : reports) { logger.debug(report.toString()); "," mockService.persistNonAnnotatedMethod(); assertEquals(1, ((MockAudit)auditService).getCalled()); assertEquals(AuditActionType.UPDATE, ((MockAudit)auditService).getAudit().getAuditActionType()); "
0, gateway = new Gateway(new ExampleEntryPoint()); gateway.startup(); command = new JVMViewCommand(); command.init(gateway); sWriter = new StringWriter(); writer = new BufferedWriter(sWriter); , context.checking(new Expectations() { { oneOf(personByIdMapper).execute(with(any(FindByIdRequest.class))); will(returnValue(person)); oneOf(transformer).transform(person); will(returnValue(ppp)); 
1," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; "," EditorCell XXXXX = null; XXXXX = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, XXXXX, editorContext); return XXXXX; "
0," mGridImage = Allocation.createFromBitmapResource(mRS, mRes, R.drawable.robot, Allocation.MipmapControl.MIPMAP_ON_SYNC_TO_TEXTURE, Allocation.USAGE_GRAPHICS_TEXTURE); mScript.set_gTGrid(mGridImage); "," XIntervalSeries s1 = new XIntervalSeries(""Series 1""); s1.add(1.0, 1.0, 1.0, 2.0); s1.add(2.0, 2.0, 2.0, 3.0); s1.add(3.0, 3.0, 3.0, 4.0); assertEquals(0, s1.indexOf(new Double(1.0))); "
1," super(model,editorController.getController()); this.editorController = editorController; delegate = new FIBEditableViewDelegate<FIBNumber,JSpinner>(this); model.addObserver(this); "," super(model,editorController.getController()); this.editorController = editorController; delegate = new FIBEditableViewDelegate<FIBNumber,JSpinner>(this); model.addObserver(this); "
0," if ( sqlAssignmentString == null ) { try { SqlGenerator sqlGenerator = new SqlGenerator( factory ); sqlGenerator.comparisonExpr( eq, false ); sqlAssignmentString = sqlGenerator.getSQL(); ", ImmutableList.Builder<ObjectMapper> builder = new ImmutableList.Builder<ObjectMapper>(); for (ObjectMapper objectMapper : objectMappers) { if (objectMapper != mapper) { builder.add(objectMapper); 
0," Component c = cellRendererComponent(comboBox, index); String value = (c != null) ? rendererReader.valueFrom(c) : null; if (value != null) return value; return asText(comboBox.getItemAt(index)); "," axiom.getProperty().accept( this ); ATermAppl p = term; axiom.getDomain().accept( this ); ATermAppl c = term; if( addAxioms ) kb.addDomain( p, c ); else reloadRequired = !kb.removeDomain( p, c ); "
0, box = Box.createHorizontalBox(); label = new XJURLLabel(new ActionListener() { public void actionPerformed(ActionEvent e) { selectTab(consoleTab.getTabComponent()); clearMessage(); ," return kind == constrainedElement.getKind() && ReflectionHelper.haveSameSignature( location.getExecutableElement(), ( (ConstrainedMethod) constrainedElement ).getLocation().getExecutableElement() ); "
1," frameCount++; if (frameCount == 30) { synchronized (lock) { lock.notify(); System.out.format(""Got %d video frames in %4.2fs%n"", frameCount, (((double) System.nanoTime() - start) / 1000000)); "," frameCount++; if (frameCount == 30) { synchronized (lock) { lock.notify(); System.out.format(""Got %d video frames in %4.2fs%n"", frameCount, (((double) System.nanoTime() - start) / 1000000)); "
1," String oldStroke = stroke; stroke = newStroke; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_POLYLINE_ELEMENT__STROKE, oldStroke, stroke)); "," String XXXXX = stroke; stroke = newStroke; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_POLYLINE_ELEMENT__STROKE, XXXXX, stroke)); "
1," ExportPackageDescription[] exports = constraint.getBundle().getContainingState().getExportedPackages(); return getPossibleCandidates(constraint, exports, null, hook, true).size() > 0; "," ExportPackageDescription[] exports = constraint.getBundle().getContainingState().getExportedPackages(); return getPossibleCandidates(constraint, exports, null, hook, true).size() > 0; "
1," String[] split = modifierAndKeyCode.split(""\\+""); int mask = 0; int keycode = 0; for (int i = 0; i < split.length; i++) { if (""ALT"".equalsIgnoreCase(split[i])) { mask += JIntellitype.MOD_ALT; "," StrXXXXXng[] splXXXXXt = modXXXXXfXXXXXerAndKeyCode.splXXXXXt(""\\+""); XXXXXnt XXXXX = 0; XXXXXnt XXXXX = 0; for (XXXXXnt XXXXX = 0; XXXXX < splXXXXXt.length; XXXXX++) { XXXXXf (""ALT"".equalsIgnoreCase(splXXXXXt[XXXXX])) { XXXXX += JIntellXXXXXtype.MOD_ALT; "
1," if (aClass.getQualifiedName() != null) { List<PsiFile> forms = FormClassIndex.findFormsBoundToClass(aClass); myElements.addAll(forms); suggestAllNames(aClass.getName(), newClassName); "," if (aClass.getQualifiedName() != null) { List<PsiFile> forms = FormClassIndex.findFormsBoundToClass(aClass); myElements.addAll(forms); suggestAllNames(aClass.getName(), newClassName); "
1, anticipatePollServiceSetMonitorLocators(); anticipateGetMonitorId(); anticipateGetConfiguration(); anticipatePolledServicesInitialized(); anticipateFireConfigurationChangeEvent(); , anticipatePollServiceSetMonitorLocators(); anticipateGetMonitorId(); anticipateGetConfiguration(); anticipatePolledServicesInitialized(); anticipateFireConfigurationChangeEvent(); 
1," OutputFormat format = OutputFormat.createPrettyPrint(); format.setNewLineAfterDeclaration(false); format.setIndentSize(3); format.setEncoding(""UTF-8""); this.writer = new XMLWriter(out, format); "," OutputFormat XXXXX = OutputFormat.createPrettyPrint(); XXXXX.setNewLineAfterDeclaration(false); XXXXX.setIndentSize(3); XXXXX.setEncoding(""UTF-8""); this.writer = new XMLWriter(out, XXXXX); "
0," worldName = getConfig().getString(""planetoids.worldname"", ""Planetoids""); if (getConfig().getBoolean(""planetoids.commands.pltp"")) { getCommand(""pltp"").setExecutor(new PGPltpCommand(this, worldName)); "," try { Properties p = new Properties(); FileLookup lookup = FileLookupFactory.newInstance(); p.load(lookup.lookupFile(propsFile, RollingUpgradeSynchronizer.class.getClassLoader())); return p; "
1," Map<String, String> map = new HashMap<String, String>(); String host; try { host = new URL(url).getHost(); map.put(""targetHosts"", StringUtils.trim(host)); fileEntry.setProperties(map); "," Map<String, String> map = new HashMap<String, String>(); String host; try { host = new URL(url).getHost(); map.put(""targetHosts"", StringUtils.trim(host)); fileEntry.setProperties(map); "
0," LOG.debug(""addSortCriterium: "" + colRef + "" ascending: "" + ascending); columnReferences.put(node.getTokenStartIndex(), colRef); sortSpecs.add(new SortSpec(node.getTokenStartIndex(), ascending)); ", blocked.clear(); if(blockic) blocked.addAll(iclist); if(blockbc) blocked.addAll(bclist); if(blockrp) blocked.addAll(rplist); if(lever) blocked.add(69); blocked.addAll(customlist); 
0," QueueConsumer consumer; if (subscriptionExists(subscriptionId)) { QueueConsumer tmp = null; try { tmp = createConsumer(true, autoAck, subscriptionId, null, consumerTimeoutSeconds * 1000, false); "," InternationalString result = clock1.getReferenceEvent(); ((DefaultClock) clock1).setReferenceEvent(new SimpleInternationalString("""")); assertFalse(clock1.getReferenceEvent().equals(result)); "
1," Debug.logVerbose(""[JdonFramework]--> enter cache filter "", module); UploadFile uploadFile = null; try { if (uploadFile == null) { uploadFile = imageFilter.getUploadFile(request, id); "," Debug.logVerbose(""[JdonFramework]--> enter cache filter "", module); UploadFile XXXXX = null; try { if (XXXXX == null) { XXXXX = imageFilter.getUploadFile(request, id); "
1," StatusType type; StatusValue mod = getStatus(mLevel, StatusType.Accuracy); Equipment eq = mEquipment.getEquipment(EquipmentSet.MAINWEAPON); if (eq != null) { type = eq.getWeaponType(); "," StatusType type; StatusValue mod = getStatus(mLevel, StatusType.Accuracy); Equipment eq = mEquipment.getEquipment(EquipmentSet.MAINWEAPON); if (eq != null) { type = eq.getWeaponType(); "
0," Assert.assertEquals( new Float( FloatClassFieldExtractorTest.VALUE ), this.reader.getValue( null, this.bean ) ); Assert.assertTrue( this.reader.getValue( null, this.bean ) instanceof Float ); "," final Criteria criteria = session.createCriteria(aClass, s); EventBrokerHolder.getEventBroker().publish(""hibernate.criteriaCreated"", new CriteriaContext(criteria, aClass)); return criteria; "
0," if (running) return; taskId = Bukkit.getScheduler().scheduleSyncRepeatingTask( CircuitsPlugin.getInst(), new PulseTask(chip, pulseLength, pulseCount, pauseLength), startDelay, 1L); running = true; "," this.editedElement = editedElement; feature = editedElement.eClass().getEStructuralFeature(featureID); oldValue = editedElement.eGet(feature); if (oldValue == null) { oldValue = """"; "
0, setChecked(task.isActive()); if (task.isActive()) { setText(Messages.ToggleTaskActivationAction_Deactivate_Task); setToolTipText(Messages.ToggleTaskActivationAction_Deactivate_Task); ," initComponents(); jCmbLangs.setModel(new DefaultComboBoxModel(DefaultSyntaxKit.getContentTypes())); jCmbLangs.setSelectedItem(""text/java""); new CaretMonitor(jEdtTest, lblCaretPos); "
0," if(textView.getVisibility() == View.VISIBLE) { textRow.setText(R.string.show_description); textRow.setCompoundDrawables(this.iconClosed, null,null, null); textView.setVisibility(View.GONE); ", try { while (_running) { synchronized (_requestTimeoutQ) { _requestTimeoutQ.setNow(); _requestTimeoutQ.tick(); _trackerTimeoutQ.setNow(_requestTimeoutQ.getNow()); _trackerTimeoutQ.tick(); 
1," PackageManager pm = c.getPackageManager(); ComponentName cr = new ComponentName(c, PassiveLocationChanged.class); pm.setComponentEnabledSetting(cr, state, PackageManager.DONT_KILL_APP); "," PackageManager XXXXX = c.getPackageManager(); ComponentName XXXXX = new ComponentName(c, PassiveLocationChanged.class); XXXXX.setComponentEnabledSetting(XXXXX, state, PackageManager.DONT_KILL_APP); "
0, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(Tags527LatestTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; ," HttpRequest request = HttpRequest.builder().method(""GET"").endpoint(""http: BindIdsToQueryParams binder = new BindIdsToQueryParams(); request = binder.bindToRequest(request, new long[] { 123L, 456L "
1," super( tr(""Show Status Report""), ""clock"", tr(""Show status report with useful information that can be attached to bugs""), Shortcut.registerShortcut(""help:showstatusreport"", tr(""Help: {0"," super( tr(""Show Status Report""), ""clock"", tr(""Show status report with useful information that can be attached to bugs""), Shortcut.registerShortcut(""help:showstatusreport"", tr(""Help: {0"
0," this.constraintWidth = constraintWidth; panel.setPreferredSize(new Dimension(constraintWidth, constraintHeight)); panel.setMinimumSize(new Dimension(constraintWidth, constraintHeight)); "," ResolveOptions options = new ResolveOptions(); options.setDownload(false); options.setConfs(WrapUtil.toArray(configurationName)); return new ResolveData(ivy.getResolveEngine(), options); "
0, textView.setEnabled(true); textView.setText(motivation.getEditableDescription().getText()); beginButton.setAction(cancelEditAction); endEditAction.setEnabled(true); endEditXPAction.setEnabled(true); , mEventTypes = info.eventTypes; mFeedbackType = info.feedbackType; String[] packageNames = info.packageNames; if (packageNames != null) { mPackageNames.addAll(Arrays.asList(packageNames)); 
0," Block oreArray[] = { mineralOre, mineralOreAlt, mineralOreHigh, mineralOreAltHigh, mineralOreLow1, mineralOreAltLow1, mineralOreLow2, mineralOreAltLow2, mineralOreLow3, mineralOreAltLow3, "," OracleStatementParser parser = new OracleStatementParser(sql); SQLUpdateStatement stmt = parser.parseUpdateStatement(); MappingVisitorUtils.setTableSource(engine, stmt, context); return stmt; "
1," System.out.println( ""test ("" + name + "") "" + isSat ); for ( int i = 0; i< selections.size(); i++ ) { String s = ( String ) selections.elementAt( i ); System.out.println( "" "" + s ); "," SyXXXXXtem.out.prXXXXXntln( ""teXXXXXt ("" + name + "") "" + XXXXXXXXXXSat ); for ( XXXXXnt XXXXX = 0; XXXXX< XXXXXelectXXXXXonXXXXX.XXXXXXXXXXze(); XXXXX++ ) { StrXXXXXng XXXXX = ( StrXXXXXng ) XXXXXelectXXXXXonXXXXX.elementAt( XXXXX ); SyXXXXXtem.out.prXXXXXntln( "" "" + XXXXX ); "
0," assert (beforeIndex >= 0) && (beforeIndex <= getWidgetCount()) : ""beforeIndex out of bounds""; int idx = getWidgetIndex(child); if (idx != -1) { remove(child); if (idx < beforeIndex) { beforeIndex--; "," for (Context federatedContext : getFederatedContexts()) { try { Object value = federatedContext.lookup(name); if (value instanceof Context) { return new VirtualSubcontext(name, actualContext); "
1, Set<Integer> intersection = new HashSet<Integer>(); Set<Integer> union = new HashSet<Integer>(); for (int i = 0; i < a.length(); ++i) { int d = a.get(i); intersection.add(d); union.add(d); , Set<Integer> intersection = new HashSet<Integer>(); Set<Integer> union = new HashSet<Integer>(); for (int i = 0; i < a.length(); ++i) { int d = a.get(i); intersection.add(d); union.add(d); 
0, armed = true; OpennetManager om = node.getOpennet(); if(om != null) { if(om.waitingForUpdater()) { synchronized(this) { if(gotJarTime > 0) gotJarTime = System.currentTimeMillis(); ," Phone ph = buildPhone( usr, ""DESK PHONE"", cmd.getWorkAreaCode(), cmd.getWorkPhone()); if (cmd.getWorkPhoneId() != null && cmd.getWorkPhoneId().length() > 0 ) { ph.setPhoneId(cmd.getWorkPhoneId()); "
1," VMInstanceVO vm = _vmMgr.findById(vmId); if(vm == null) { s_logger.warn(""VM "" + vmId + "" does not exist, sending blank response for thumbnail request""); sendResponse(resp, """"); return; "," VMInstanceVO XXXXX = _XXXXXMgr.findById(XXXXXId); if(XXXXX == null) { s_logger.warn(""VM "" + XXXXXId + "" does not exist, sending blank response for thumbnail request""); sendResponse(resp, """"); return; "
1," Profile p=conf.getSelectedProfile(); modelUsers.removeAllElements(); User[]users=p.getUsers(); for(int i=0;i<users.length;i++) modelUsers.addElement(users[i].id+"":""+users[i].name); "," Profile p=conf.getSelectedProfile(); modelUsers.removeAllElements(); User[]users=p.getUsers(); for(int i=0;i<users.length;i++) modelUsers.addElement(users[i].id+"":""+users[i].name); "
1," super( parent, layoutSetId ); bg = getImage( ILayoutSetConstants.OVERFLOW_BG); right = getImage( ILayoutSetConstants.OVERFLOW_RIGHT ); left = getImage( ILayoutSetConstants.OVERFLOW_LEFT ); "," super( parent, layoutSetId ); bg = getImage( ILayoutSetConstants.OVERFLOW_BG); right = getImage( ILayoutSetConstants.OVERFLOW_RIGHT ); left = getImage( ILayoutSetConstants.OVERFLOW_LEFT ); "
1," char keychar=e.getKeyChar(); if((keychar&0xff00)!=0){ char[] foo=new char[1]; foo[0]=keychar; try{ byte[] goo=new String(foo).getBytes(""EUC-JP""); out.write(goo, 0, goo.length); out.flush(); "," char keychar=e.getKeyChar(); if((keychar&0xff00)!=0){ char[] foo=new char[1]; foo[0]=keychar; try{ byte[] goo=new String(foo).getBytes(""EUC-JP""); out.write(goo, 0, goo.length); out.flush(); "
0, if ( propertyName.indexOf( '.' ) > 0 ) { String root = StringHelper.root( propertyName ); Criteria crit = getAliasedCriteria( root ); if ( crit != null ) { return getEntityName( crit ); ," try { OpenStreetMapParser parser = new OpenStreetMapParser(); if (_path.getName().endsWith("".gz"")) { InputStream in = new GZIPInputStream(new FileInputStream(_path)); parser.parseMap(in, handler); "
1, final int x = r.x + layout.x; final int y = r.y + layout.y; final int w = r.w - layout.w; final int h = r.h - layout.h; if(w < off && h < off || w <= 2 || h <= 2) { rectangles.add(r); return; , final int XXXXX = r.XXXXX + laXXXXXout.XXXXX; final int XXXXX = r.XXXXX + laXXXXXout.XXXXX; final int XXXXX = r.XXXXX - laXXXXXout.XXXXX; final int XXXXX = r.XXXXX - laXXXXXout.XXXXX; if(XXXXX < off && XXXXX < off || XXXXX <= 2 || XXXXX <= 2) { rectangles.add(r); return; 
0," if (model.hasClassDescriptor(clsName)) { Class<? extends FastPathObject> cls = model.getClassDescriptorByName(clsName).getType(); if (DynamicUtil.isInstance(obj, cls)) { return true; ", HttpServletRequest request = null; if (FacesContext.getCurrentInstance() != null) { request = (HttpServletRequest) FacesContext.getCurrentInstance().getExternalContext().getRequest(); 
1," m_props = props; m_rootapp = new JRootApp(); if (m_rootapp.initApp(m_props)) { if (""true"".equals(props.getProperty(""machine.uniqueinstance""))) { try { m_instmanager = new InstanceManager(this); "," m_props = props; m_rootapp = new JRootApp(); if (m_rootapp.initApp(m_props)) { if (""true"".equals(props.getProperty(""machine.uniqueinstance""))) { try { m_instmanager = new InstanceManager(this); "
1," int endPos = context.getIndex() + literal.length(); if (endPos <= context.getTextLength() && context.getTextSubstring(context.getIndex(), endPos).equals(literal)) { context.setIndex(endPos); "," int XXXXX = context.getIndex() + literal.length(); if (XXXXX <= context.getTextLength() && context.getTextSubstring(context.getIndex(), XXXXX).equals(literal)) { context.setIndex(XXXXX); "
1, double nearestFoodDistance = Double.POSITIVE_INFINITY; for (Item morsel : foodLocations.values()) { if (morsel.getDistance() < nearestFoodDistance) { nearestFoodDistance = morsel.getDistance(); , double XXXXX = Double.POSITIVE_INFINITY; for (Item morsel : foodLocations.values()) { if (morsel.getDistance() < XXXXX) { XXXXX = morsel.getDistance(); 
1," try { JSONObject jsonRow = new JSONObject(json); StreamRow row = new StreamRow(); for (String name : JSONObject.getNames(jsonRow)) { Object obj = jsonRow.get(name); row.set(name, obj, getType(obj)); "," try { JSONObject jsonRow = new JSONObject(json); StreamRow row = new StreamRow(); for (String name : JSONObject.getNames(jsonRow)) { Object obj = jsonRow.get(name); row.set(name, obj, getType(obj)); "
1," Date date = null; SimpleDateFormat format = new SimpleDateFormat(DATE_FORMAT,Locale.ENGLISH); String value = getHeader(name); if(value != null) { try { date = format.parse(value); "," Date XXXXX = null; SimpleDateFormat XXXXX = new SimpleDateFormat(DATE_FORMAT,Locale.ENGLISH); String XXXXX = getHeader(name); if(XXXXX != null) { try { XXXXX = XXXXX.parse(XXXXX); "
0, int count = rootNode.getChildCount(); PropertyTreeNode[] nodes = new PropertyTreeNode[count]; for (int i = 0; i < count; i++) { nodes[i] = (PropertyTreeNode) rootNode.getChildAt(i); ," assertEquals(test.mocksize, test.size); final int records = 100; byte[] write = new byte[test.recordSize]; for (int i = 0; i < records; i++) { random.nextBytes(write); try { test.append(write); "
0, TodoItem todoItem=getValue().getTodoItem(); RangeMarker myRangeMarker=getValue().getRangeMarker(); if(!todoItem.getFile().isValid()||!myRangeMarker.isValid()){ setValue(null); return; , if(!(o instanceof RunningTransientInsert)) return false; RunningTransientInsert r = (RunningTransientInsert) o; return r.insert == insert && (r.token == token || r.token.equals(token)); 
0," ItemStack itemstack1 = entityplayer.inventory.getStackInSlot(i); entityplayer.inventory.setInventorySlotContents(i, itemstack); if(itemstack1 != null) { addToInv(entityplayer, itemstack1, flag); "," int numberOfBooleanVariables = 0; for (int i=0; i<this.variables.length; i++) { PolishVariable var = this.variables[i]; if (""boolean"".equals(var.getType())) { numberOfBooleanVariables++; "
0," super.run(); GroupRequest req = new GroupRequest(RequestConstants.REQ_DELETE); CompoundCommand cmd = new CompoundCommand(""Cut Objects""); for (EditPart p : selection) { cmd.add(p.getCommand(req)); ", checkValid(); if (!myIsParentGroupCached) { myParentThreadGroupProxy = getVirtualMachineProxy().getThreadGroupReferenceProxy(getThreadGroupReference().parent()); myIsParentGroupCached = true; 
0," try { if((token == null || token == """") && (secret == null || secret == """") && auth == false && browser == false) authURL = provider.retrieveRequestToken(consumer, OAUTH_CALLBACK_URL); "," final CardLayout cl = (CardLayout) getCardPanel().getLayout(); cl.show(getCardPanel(), STATE.Preview.toString()); lockCombo = true; getComboBox().setSelectedItem(STATE.Preview); lockCombo = false; "
1," if (group.isColumn()) { addCriteriaForCategories(m_criteria, m_survView.getRowCategories()); addCriteriaForCategories(m_criteria, m_survView.getCategoriesForColumn(group.getId())); "," if (group.isColumn()) { addCriteriaForCategories(m_criteria, m_survView.getRowCategories()); addCriteriaForCategories(m_criteria, m_survView.getCategoriesForColumn(group.getId())); "
1," super(agileGrid, editingDomain, affectedObject); this.setValidator(new ICellEditorValidator() { public String isValid(Object value) { if (!(value instanceof String)) { return null; "," super(agileGrid, editingDomain, affectedObject); this.setValidator(new ICellEditorValidator() { public String isValid(Object value) { if (!(value instanceof String)) { return null; "
0, if (query.getRangeFromIncl() > 0 || (query.getRangeToExcl() > 0 && query.getRangeToExcl() < Long.MAX_VALUE)) { if (query.getRangeFromIncl() == 0) return LimitType.Soql; return LimitType.Java; ," int dvPool = getDodgeDvPool(traitCollection) + specialty + equipment.getDDVPoolMod(); int dv = getRoundedDodgeDv(characterType, dvPool) + equipment.getMobilityPenalty(); return Math.max(dv, 0); "
1," return new SNodePointer(""r:eca8e1c7-93fd-4ddf-9db6-91f9c2320691(jetbrains.mps.transformation.test.inputLang.generator.outputLang.template.test_reduceOneToMany@generator)"", ""8371596541809066874""); "," return new SNodePointer(""r:eca8e1c7-93fd-4ddf-9db6-91f9c2320691(jetbrains.mps.transformation.test.inputLang.generator.outputLang.template.test_reduceOneToMany@generator)"", ""8371596541809066874""); "
1," abortMovement(); setSpeed(SPEEDTURN); angleCCW *= CCW_afwijking; int h = (int) (angleCCW * Math.PI * WIELAFSTAND / WIELOMTREK); motorLeft.rotate(-h, true); motorRight.rotate(h, true); "," abortMovement(); setSpeed(SPEEDTURN); angleCCW *= CCW_afwijking; int h = (int) (angleCCW * Math.PI * WIELAFSTAND / WIELOMTREK); motorLeft.rotate(-h, true); motorRight.rotate(h, true); "
1," StringBuilder sb = new StringBuilder(); sb.append(""{""); if (options != null) sb.append(""Options: "" + options + "", ""); if (status != null) sb.append(""Status: "" + status + "", ""); sb.append("""," StringBuilder sb = new StringBuilder(); sb.append(""{""); if (options != null) sb.append(""Options: "" + options + "", ""); if (status != null) sb.append(""Status: "" + status + "", ""); sb.append("""
0, ControlLCAUtil.preserveValues( ( Control )widget ); WidgetLCAUtil.preserveCustomVariant( widget ); WidgetLCAUtil.preserveBackgroundGradient( widget ); WidgetLCAUtil.preserveRoundedBorder( widget ); ," return ""InMemoryTreeNode [id="" + getId() + "", parent="" + getParent() + "", level="" + getLevel() + "", visible="" + visible + "", children="" + children + "", childIdListCache="" + childIdListCache + ""]""; "
1," newBook(""J.R.R. Tolkien"", ""Lord of the Rings""); newBook(""Cormac McCarthy"", ""The Road""); newBook(""George R.R. Martin"", ""The Game of Thrones""); newBook(""George R.R. Martin"", ""A Clash of Kings""); "," newBook(""J.R.R. Tolkien"", ""Lord of the Rings""); newBook(""Cormac McCarthy"", ""The Road""); newBook(""George R.R. Martin"", ""The Game of Thrones""); newBook(""George R.R. Martin"", ""A Clash of Kings""); "
0," if ((memoryInfo != null) && !(memoryInfo instanceof Properties)) { throw new IllegalArgumentException(String.format(""The memory info %s object is not a Properties object."", memoryInfo)); ", super(IDEWorkbenchMessages.OpenSystemEditorAction_text); setToolTipText(IDEWorkbenchMessages.OpenSystemEditorAction_toolTip); setId(ID); if (page == null) { throw new IllegalArgumentException(); 
0, int ID = gui.getItemID( e ); switch( ID ) { case GG_HASIMINPUT: case GG_HASIMOUTPUT: pr.bool[ ID - GG_OFF_CHECKBOX ] = ((JCheckBox) e.getSource()).isSelected(); reflectPropertyChanges(); break; ," final ImmutableMap<Number, Number> leaf = ImmutableMap.<Number, Number>singleton(42, 42); assertSame(""collision"", leaf, leaf.delete(42L)); assertSame(""not contained"", leaf, leaf.delete(0)); "
1," Properties props = new Properties(); props.setProperty( ""kproject"", kproject.getKProjectPath() ); try { saveProperties(fs.getProjectFolder().getFile( ""kbasePaths.properties"" ), props); "," Properties XXXXX = new Properties(); XXXXX.setProperty( ""kproject"", kproject.getKProjectPath() ); try { saveProperties(fs.getProjectFolder().getFile( ""kbasePaths.properties"" ), XXXXX); "
0," if (jButtonPrev == null) { jButtonPrev = new JButton(); jButtonPrev.setText("" < ""); jButtonPrev.setMnemonic(KeyEvent.VK_LEFT); jButtonPrev.setToolTipText(""Lose changes and skip to previous frame""); "," if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; XBeeAddress64 that = (XBeeAddress64) o; if (!Arrays.equals(address, that.address)) return false; return true; "
0," JID myJID = saros.getMyJID(); for (User participant : sarosSession.getParticipants()) { if (participant.getJID().equals(myJID)) continue; sendMessageToUser(participant.getJID(), extension, true); "," super( ""Could not transfer artifact "" + artifact + getString( "" from/to "", repository ) + getMessage( "": "", cause ), cause ); this.artifact = artifact; this.repository = repository; "
1," MongoRequest<String> request = new MongoRequest<String>(); request.key = ""UnitTestKey""; request.op = MongoGenerator.READ; testPutOperation(); runOp( generator.createGetOperation( request ) ); "," MongoRequest<String> request = new MongoRequest<String>(); request.key = ""UnitTestKey""; request.op = MongoGenerator.READ; testPutOperation(); runOp( generator.createGetOperation( request ) ); "
0," assertTrue(DoubleAlphabet.getSubAlphabet(1.0,2.5) == DoubleAlphabet.getSubAlphabet(1.0,2.5)); assertTrue(DoubleAlphabet.getSubAlphabet(1.0,2.5) != DoubleAlphabet.getSubAlphabet(1.00001,2.5)); ", int i = 0; ImageZoomView izv = (ImageZoomView) imgGallery.getSelectedView(); for (; i < imageOriUpdateIndex.size(); ++i) { if (imageOriUpdateIndex.get(i)==izv.getIndex()) { i = -1; break; 
1," setName(DIDLLite.NAME); setAttribute(DIDLLite.XMLNS, DIDLLite.XMLNS_URL); setAttribute(DIDLLite.XMLNS_DC, DIDLLite.XMLNS_DC_URL); setAttribute(DIDLLite.XMLNS_UPNP, DIDLLite.XMLNS_UPNP_URL); "," setName(DIDLLite.NAME); setAttribute(DIDLLite.XMLNS, DIDLLite.XMLNS_URL); setAttribute(DIDLLite.XMLNS_DC, DIDLLite.XMLNS_DC_URL); setAttribute(DIDLLite.XMLNS_UPNP, DIDLLite.XMLNS_UPNP_URL); "
0," StoredObject so = super.getObjectOfLatestVersion(context, repositoryId, objectId, versionSeriesId, extension); checkReadAccess(repositoryId, context.getUsername(), so); return so; "," super(Constants.Duration.WhileOnBattlefield, Constants.Layer.PlayerEffects, Constants.SubLayer.NA, Constants.Outcome.Detriment); staticText = ""Your opponents play with their hands revealed""; "
1, MAlternativeNodeParent lAlternativeNodeParent = new MAlternativeNodeParent(); this.eAlternativeNamedParent_AlternativeNodeParent .add(lAlternativeNodeParent); return lAlternativeNodeParent; , MAlternativeNodeParent XXXXX = new MAlternativeNodeParent(); this.eAlternativeNamedParent_AlternativeNodeParent .add(XXXXX); return XXXXX; 
0, for (HccrReferentFamilyDependentActualSituationType value : values()) if (value.toString().equals(enumAsString)) return value; return getDefaultHccrReferentFamilyDependentActualSituationType(); ," String label = ((ToolConfiguration)object).getId(); return label == null || label.length() == 0 ? getString(""_UI_ToolConfiguration_type"") : getString(""_UI_ToolConfiguration_type"") + "" "" + label; "
1," manager.addListener(new Handler1()); manager.addListener(new Handler2()); manager.fireEvent(ICheatSheetEvent.CHEATSHEET_STARTED); assertEquals(1, handler1Calls); assertEquals(1, handler2Calls); "," manager.addListener(new Handler1()); manager.addListener(new Handler2()); manager.fireEvent(ICheatSheetEvent.CHEATSHEET_STARTED); assertEquals(1, handler1Calls); assertEquals(1, handler2Calls); "
1," helper = new IPOJOHelper(this); reg = context.registerService(String.class.getName(), ""ahahah"", null); reg2 = context.registerService(AbstractMap.class.getName(), new HashMap(), null); "," helper = new IPOJOHelper(this); reg = context.registerService(String.class.getName(), ""ahahah"", null); reg2 = context.registerService(AbstractMap.class.getName(), new HashMap(), null); "
1, TempStream ts = _tempStream; _tempStream = null; _tempStreamSize = 0; try { if (ts != null) { if (_os == null) openLog(); try { ReadStream is = ts.openRead(); try { is.writeToStream(_os); , TempStream XXXXX = _tempStream; _tempStream = null; _tempStreamSize = 0; try { if (XXXXX != null) { if (_os == null) openLog(); try { ReadStream XXXXX = XXXXX.openRead(); try { XXXXX.writeToStream(_os); 
0, if (obj instanceof mxRectangle) { mxRectangle rect = (mxRectangle) obj; return rect.getX() == getX() && rect.getY() == getY() && rect.getWidth() == getWidth() && rect.getHeight() == getHeight(); ," IUndoContext[] contexts = operation.getContexts(); for (int i = 0; i < contexts.length; i++) { int limit = getLimit(contexts[i]); if (limit > 0) { forceRedoLimit(contexts[i], limit - 1); "
1," this.MODSEntries = new MODSEntry[(int) (size / 32)]; for (int i = 0; i < (size / 32); i++) { this.MODSEntries[i] = new MODSEntry(); this.MODSEntries[i].setByteBuffer(bb, offset + (32 * i)); "," thXXXXXs.MODSEntrXXXXXes = new MODSEntry[(XXXXXnt) (sXXXXXze / 32)]; for (XXXXXnt XXXXX = 0; XXXXX < (sXXXXXze / 32); XXXXX++) { thXXXXXs.MODSEntrXXXXXes[XXXXX] = new MODSEntry(); thXXXXXs.MODSEntrXXXXXes[XXXXX].setByteBuffer(bb, offset + (32 * XXXXX)); "
0," String oldClass = class_; class_ = newClass; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_SVG_ELEMENT__CLASS, oldClass, class_)); ", msg_ = msg; descriptor_ = msg.getDescriptorForType(); fieldDescriptors_ = descriptor_.getFields(); protoSize_ = fieldDescriptors_.size(); protoConv_ = new ProtobufToPig(); initRealTuple(protoSize_); 
0," String oldStyle = style; style = newStyle; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_CLIP_PATH_ELEMENT__STYLE, oldStyle, style)); "," log.debug(""validate""); UserDetails ud = (UserDetails) obj; if (ud == null) { log.debug(""User details were null""); errors.rejectValue(""username"", ""error.not-specified"", null, ""Value required.""); "
1, int result = alignment.isPaired() ? 0x1 : 0; ReadMate mate = alignment.getMate(); if (mate != null) { result += !mate.isMapped() ? 0x8 : 0; result += mate.isNegativeStrand() ? 0x20 : 0; , int XXXXX = alignment.isPaired() ? 0x1 : 0; ReadMate XXXXX = alignment.getMate(); if (XXXXX != null) { XXXXX += !XXXXX.isMapped() ? 0x8 : 0; XXXXX += XXXXX.isNegativeStrand() ? 0x20 : 0; 
0," if (Log.LOGV) Log.v( ""Upgrading alarms database from version "" + oldVersion + "" to "" + currentVersion + "", which will destroy all old data""); db.execSQL(""DROP TABLE IF EXISTS alarms""); onCreate(db); "," Object value = this.getValue(PeriodFeature.PATH, PeriodFeature.KEY); String periodString = (String)value; System.out.println(""Getting period.\nPeriod is : "" + periodString); return periodString; "
1," if (sessionMembersOnly) { User participant = sarosSessionObservable.getValue().getUser(jid); if (participant == null) { log.warn(""Buddy not in session:"" + Utils.prefix(jid)); return; "," if (sessionMembersOnly) { User participant = sarosSessionObservable.getValue().getUser(jid); if (participant == null) { log.warn(""Buddy not in session:"" + Utils.prefix(jid)); return; "
1," switch (msg.what) { case MSG_DUMP: { HandlerCaller.SomeArgs args = (HandlerCaller.SomeArgs)msg.obj; try { doDump((FileDescriptor)args.arg1, (PrintWriter)args.arg2, (String[])args.arg3); "," switch (msg.what) { case MSG_DUMP: { HandlerCaller.SomeArgs args = (HandlerCaller.SomeArgs)msg.obj; try { doDump((FileDescriptor)args.arg1, (PrintWriter)args.arg2, (String[])args.arg3); "
1," this.canvas = canvas; this.ipAddress = ipAddress; hostName = ipAddress; if(Settings.ENABLE_NAMES) new HostNameLookupThread(ipAddress, this); x = Math.random(); y = Math.random(); paint(); "," this.canvas = canvas; this.ipAddress = ipAddress; hostName = ipAddress; if(Settings.ENABLE_NAMES) new HostNameLookupThread(ipAddress, this); x = Math.random(); y = Math.random(); paint(); "
0, Object value = list.get(i); AbstractProblemPreference desc = (AbstractProblemPreference) childDescriptor.clone(); desc.setKey(String.valueOf(i)); desc.setValue(value); return desc; ," String portletDisplayName = portletName; if (portletDisplayNames.get(portletName) != null) { portletDisplayName = portletDisplayNames.get(portletName).getValue(locale, true).getString(); "
0," for (Statement stmt: source.getStatements()) { aGraph.addTriple( asResource( stmt.getSubject(), aGraph ), asProperty( stmt.getPredicate(), aGraph ), asNode( stmt.getObject(), aGraph ) ); "," if(color == null) throw new IllegalArgumentException(""Cannot be null""); this.fillColour = color; if(logger.isDebugEnabled()){ logger.debug(""setFillColor: color="" + this.fillColour); "
0," Router router = new Router(getContext()); router.attach(""/"", RootServerResource.class); router.attach(""/accounts/"", AccountsServerResource.class); router.attach(""/accounts/{accountId"," String geoIPflagname = app.getFlagName(true); if (!geoIPflagname.equals(flagName)) { App.debug(""updating flag to: ""+geoIPflagname); removeAll(); initItems(app.getFlagIcon(geoIPflagname)); "
1," org.sonatype.aether.artifact.Artifact a = node.getDependency().getArtifact(); if(matcher.isMatchingArtifact(a.getGroupId(), a.getArtifactId())) { foundMatch = true; return false; "," org.sonXXXXXtype.XXXXXether.XXXXXrtifXXXXXct.ArtifXXXXXct XXXXX = node.getDependency().getArtifXXXXXct(); if(mXXXXXtcher.isMXXXXXtchingArtifXXXXXct(XXXXX.getGroupId(), XXXXX.getArtifXXXXXctId())) { foundMXXXXXtch = true; return fXXXXXlse; "
0," for (int i = 0; i < exprs.length; i+=2) { String input = exprs[i]; String expect = exprs[i+1]; List<String> chunks = getActionChunks(input); assertEquals(""input: ""+input, expect, chunks.toString()); ", CmsVisitEntryFilter filter = new CmsVisitEntryFilter(); filter.m_structureId = m_structureId; filter.m_userId = m_userId; filter.m_dateFrom = m_dateFrom; filter.m_dateTo = m_dateTo; return filter; 
0," File dir = new File(""."").getAbsoluteFile(); while (!Arrays.asList(dir.list()).contains("".git"")) { dir = dir.getParentFile(); if (dir == null) throw new RuntimeException(""No git directory found""); ", if (Keyboard.getEventKeyState()) { if (Keyboard.getEventKey() == 200 && this.floorNamesList.selectedElement > 0) { --this.floorNamesList.selectedElement; this.floorNamesList.setAmountScrolled(); 
0," ImageStack stack = new ImageStack( width, height ); final ArrayImgFactory< LifeForm > factory = new ArrayImgFactory< LifeForm >(); Img<LifeForm> arena = factory.create( new long[] { width, height ", Module astNode = getASTNode(); for (int i = 0; i < astNode.body.length; i++) { SimpleNode node = astNode.body[i]; if (!nodeHelper.isImport(node) && !nodeHelper.isStr(node)) { return node.beginLine; 
1, try { WavPackUtils.WavpackFlushSamples(wpc); fixLength(wpc.outfile); wpc.outfile.close(); if (wpc.correction_outfile != null) { fixLength(wpc.correction_outfile); wpc.correction_outfile.close(); , try { WavPackUtils.WavpackFlushSamples(wpc); fixLength(wpc.outfile); wpc.outfile.close(); if (wpc.correction_outfile != null) { fixLength(wpc.correction_outfile); wpc.correction_outfile.close(); 
0," SimpleFeatureBuilder sfb = new SimpleFeatureBuilder(type); sfb.init(feature); sfb.set(PlainFeatureFactory.ATTRIB_NAME_STYLE_CSS, styleCSS); return sfb.buildFeature(feature.getID()); "," String label = ((Transaction) object).getName(); return label == null || label.length() == 0 ? getString(""_UI_Transaction_type"") : getString(""_UI_Transaction_type"") + "" "" + label; "
1," Member bob = Member.findByLogin(""bob""); Member.addLink(""bob"", ""ced""); final int linksNb = bob.links.size(); Member.addLink(""bob"", ""ced""); assertEquals(linksNb, bob.links.size()); "," Member XXXXX = Member.findByLogin(""XXXXX""); Member.addLink(""XXXXX"", ""ced""); final int XXXXX = XXXXX.links.size(); Member.addLink(""XXXXX"", ""ced""); assertEquals(XXXXX, XXXXX.links.size()); "
0, int lineSeparatorCount = this.fLineStartPositions.length; for(int i = lineSeparatorCount - 1; i >= 0; i--) { if (this.fLineStartPositions[i] <= position) return this.fLineStartPositions[i]; ," UriRuleProbeProvider.ruleAccept(TerminatingRule.class.getSimpleName(), path, resource); if (context.isTracingEnabled()) { context.trace(""accept termination (matching failure): \"""" + path + ""\""""); "
0," List<FileLink> fileLinks = parser.appendText(text); if (!fileLinks.isEmpty()) { throw new AssertionError(""FileLinks list is erroneously not empty: "" + TestUtility.dumpList(fileLinks)); ", if (isWorkspaceScope()) return true; if (!scope.pathSet().isEmpty()) { for (Iterator<IPath> i = scope.pathSet().iterator(); i.hasNext(); ) { IPath path = i.next(); if (!encloses(path)) return false; 
0," if (_loader != null) { Object loader = _loader; _loader = null; Class<?> klass = (Class<?>)loader; try { Method method = klass.getDeclaredMethod(""loadActionMap"", new Class[] { LazyActionMap.class "," for(Player p : World.getWorld().getPlayers()) { if(!p.SafeZone()) { if (p.playerEp >= 90) { p.playerEp = 100; p.getActionSender().sendString(""EP: ""+p.playerEp+""%"", 591, 9); return; "
0, final Channel channel = (Channel) o; final boolean removed = super.remove(o); if (removed) channels.inverse().remove(channel); ChannelNodeInfo.nodeInfo.remove(channel); return removed; , List<K> collected = Collections.emptyList(); synchronized (COLLECTING_LOCK) { if (!collectedElements.isEmpty()) { collected = collectedElements; collectedElements = new LinkedList<K>(); 
1," KahluaConverterManager manager = new KahluaConverterManager(); KahluaNumberConverter.install(manager); Object obj = new Object(); Object obj2 = manager.fromJavaToLua(obj); assertSame(obj, obj2); "," KahluaConverterManager XXXXX = new KahluaConverterManager(); KahluaNumberConverter.install(XXXXX); Object XXXXX = new Object(); Object XXXXX2 = XXXXX.fromJavaToLua(XXXXX); assertSame(XXXXX, XXXXX2); "
0, String name = null; if (f != null) { if (isRoot(f)) name = f.getAbsolutePath(); else { try { String path = f.getCanonicalPath(); name = path.substring(path.lastIndexOf(File.separator) + 1); ," Utils.logToConsole(""Click Edit > Global Configuration...""); jmi.doClick(); GuiDeferredExecutor.instance().execute(new Runnable(){ public void run() {completeConfigureItViaEditMenu();"
1," super.failBroker(port); try { if (!_failoverCompleted.await(DEFAULT_FAILOVER_TIME, TimeUnit.MILLISECONDS)) { fail(""Failover did not occur in specified time:"" + DEFAULT_FAILOVER_TIME); "," super.failBroker(port); try { if (!_failoverCompleted.await(DEFAULT_FAILOVER_TIME, TimeUnit.MILLISECONDS)) { fail(""Failover did not occur in specified time:"" + DEFAULT_FAILOVER_TIME); "
0, if (DeflaterConstants.DEBUGGING && start != 0) throw new IllegalStateException(); buf[end++] = (byte) s; buf[end++] = (byte) (s >> 8); buf[end++] = (byte) (s >> 16); buf[end++] = (byte) (s >> 24); ," PDFDictionary attribute = new PDFDictionary(); attribute.put(""O"", Table.NAME); attribute.put(typeSpan, span); if (attributes == null) { attributes = new ArrayList<PDFDictionary>(2); "
0," try { Class<?> clazz = Class.forName(""org.apache.fop.pdf.PDFEncryptionJCE""); Method makeMethod = clazz.getMethod(""make"", new Class[] {int.class, PDFEncryptionParams.class, PDFDocument.class"," super(aMessage + "" : "" + exception.getTargetException().getClass().getName() + ""[message="" + exception.getTargetException().getMessage() + ""]""); targetException = exception.getTargetException(); "
0," SearchRequest search = new SearchRequest(); search.setStatus(request.getStatus()); if (!request.getRequestorId().equalsIgnoreCase(""-"")) { search.setApproverId(request.getRequestorId()); ", super.addMouseListener(mouseListener); walletDescriptionTextField.addMouseListener(mouseListener); amountLabel.addMouseListener(mouseListener); walletFilenameLabel.addMouseListener(mouseListener); 
0," final RowIcon baseIcon = ElementPresentationUtil.createLayeredIcon(PlatformIcons.FIELD_ICON, this, false); return ElementPresentationUtil.addVisibilityIcon(this, flags, baseIcon); "," list.lock.lock(); try { checkModifications(); int d = list.size(); list.addAll(start + read.size, c); read = new SubListReadData(read.size + (list.size() - d), list .getData()); return true; "
0, int numCandidates = 0; for ( final Bead bead : view.getBeadStructure().getBeadList() ) if ( bead.getDescriptorCorrespondence().size() > 0 ) ++numCandidates; return numCandidates; ," Class<?> baseType = super.getPropertyType(propertyName); Object rt = super.getPropertyValue(target, propertyName); if (baseType.isEnum()) return ((Enum<?>) rt).name(); return rt; "
0," if(selectedItems.isEmpty()){ AccessibleToast.makeText(LocalIndexesActivity.this, getString(R.string.local_index_no_items_to_do, actionButton.toLowerCase()), Toast.LENGTH_SHORT).show(); return; "," int u=Math.min(min,bh.min); int v=Math.max(max,bh.max); int cnt=0; int tmin=u; int tmax=v; for (int i=u; i<=v;i++){ counts[i]=counts[i] - bh.counts[i]; if (counts[i]<0) { counts[i]=0; "
0, super(PerspectiveBarNewContributionItem.class.getName()); menuManager = new MenuManager(); menuManager.add(ContributionItemFactory.PERSPECTIVES_SHORTLIST .create(workbenchWindow)); ," GenEnumLiteral genEnumLiteral = getGenEnumLiteral(literal); return genEnumLiteral == null ? ""null"" : getImportedName() + ""."" + genEnumLiteral.getEnumLiteralInstanceConstantName(); "
1," if (event.getAction() == KeyEvent.ACTION_DOWN) { switch (keyCode) { case KeyEvent.KEYCODE_DEL: { long id = getListView().getSelectedItemId(); if (id > 0) { confirmDeleteThread(id, mQueryHandler); "," if (event.getAction() == KeyEvent.ACTION_DOWN) { switch (keyCode) { case KeyEvent.KEYCODE_DEL: { long id = getListView().getSelectedItemId(); if (id > 0) { confirmDeleteThread(id, mQueryHandler); "
0, if (element instanceof IParamNodePO) { IParamNodePO pnpo = (IParamNodePO)element; if (!StringUtils.isEmpty(pnpo.getDataFile())) { decoration.addOverlay( IconConstants.EXCEL_DATA_IMAGE_DESCRIPTOR); , Object obj = SessionHandleAdapter.getInstance( ) .getReportDesignHandle( ); LibraryHandle moduleHandle; if ( ( obj == null ) || ( !( obj instanceof LibraryHandle ) ) ) { return false; 
1," if (rules == null) return null; LanguageVersion version = (LanguageVersion)RuleUtil.commonAspect(rules, RuleFieldAccessor.maxLanguageVersion); return version == null ? null : version.getName(); "," if (rules == null) return null; LanguageVersion XXXXX = (LanguageVersion)RuleUtil.commonAspect(rules, RuleFieldAccessor.maxLanguageVersion); return XXXXX == null ? null : XXXXX.getName(); "
0," super(myoligo.getName(), myvolume, author, SampleType.OLIGO_SAMPLE); _oliDatum = (OligoSampleDatum) _samDatum; System.out.println(myoligo.getUUID()); _oliDatum._oligoUUID = myoligo.getUUID(); ", try { if (doByReference) { RuleSet filteredRS = new RuleSet(); filteredRS.setFileName(selectedRuleSet.getFileName()); for (Rule rule : selectedRuleSet.getRules()) { filteredRS.addRule(rule); 
0, checkConcurrentModification(); if (forward) { for (int i = cursor + 1; i < ContentList.this.size(); i++) { if (filter.matches(ContentList.this.get(i))) { tmpcursor = i; return index + 1; ," Calendar cal = new GregorianCalendar(2007, 8 - 1, 13, 19, 51, 23); cal.setTimeZone(TimeZone.getTimeZone(""GMT"")); cal.set(Calendar.MILLISECOND, 0); date = cal.getTime(); df = new ISO8601DateFormat(); "
1," for (QuotaVdsGroup quotaVdsGroup : quota.getQuotaVdsGroups()) { getCallsHandler().executeModification(""InsertQuotaLimitation"", getQuotaVdsGroupParameterMap(quota.getId(), quotaVdsGroup)); "," for (QuotaVdsGroup quotaVdsGroup : quota.getQuotaVdsGroups()) { getCallsHandler().executeModification(""InsertQuotaLimitation"", getQuotaVdsGroupParameterMap(quota.getId(), quotaVdsGroup)); "
1, File fTmp; int i; inputFileNameList = new String[listItems.size()]; for (i=0; i<listItems.size(); i++) { fTmp = new File((String)listItems.get(i)); inputFileNameList[i] = fTmp.getName(); , File fTmp; int i; inputFileNameList = new String[listItems.size()]; for (i=0; i<listItems.size(); i++) { fTmp = new File((String)listItems.get(i)); inputFileNameList[i] = fTmp.getName(); 
0, InputStream input = null; try { input = new BufferedInputStream(new FileInputStream(file)); for (int i = 0; i < MAGIC.length; i++) { if (MAGIC[i] != input.read()) { return false; ," synchronized (output) { super.printStackTrace(output); final Throwable throwable = getException(); if (throwable != null) { output.print(""Caused by: ""); throwable.printStackTrace(output); "
0, if ( page != currentPage ) { if ( currentPage != null ) { ( (GridData) currentPage.getControl( ).getLayoutData( ) ).exclude = true; currentPage.getControl( ).setVisible( false ); ," return new sequence_supertypeOf_set_SubtypingRule.QuotationClass_5z9xz6_a0a0a().createNode(((SNode) status.getPattern().getFieldValue(""patternVar_elementType"")), typeCheckingContext); "
0," tag = HTML.Tag.OPTION; assertEquals(""option"", tag.toString()); assertFalse(""breaks Flow"", tag.breaksFlow()); assertFalse(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); "," final IPath p = new Path(path); if (p.isAbsolute() && p.segmentCount() > 1) { return AbstractUIPlugin.imageDescriptorFromPlugin(p.segment(0), p .removeFirstSegments(1).makeAbsolute().toString()); "
0," ProjectDescription projectdescription = createComplexProject(this._sourcepathxml, KIND_MULTIPLESOURCEFOLDERSPRIMARY); execute(projectdescription.getPrimaryProjectname(), ""get-source-path""); "," int index = list.getSelectedIndex() + 1; if (index >= list.getItemCount() || isSmaller(list.getItem(index), prefix)) index = 0; for (;;) { if (list.getItem(index).startsWith(prefix)) { return index; "
1, doReturn((System.currentTimeMillis() + 100) - timeOut).when(factory).getCreatedTime(); UserExpiration expiration = controller.createUser(); Assert.assertFalse(controller.userExpired(expiration)); , doReturn((System.currentTimeMillis() + 100) - timeOut).when(factory).getCreatedTime(); UserExpiration XXXXX = controller.createUser(); Assert.assertFalse(controller.userExpired(XXXXX)); 
0, for(int index = 0; index < getConditionCount(); index++){ Condition condition = getConditionAt(index); if(condition.getQuestionId() == questionDef.getId()){ removeCondition(condition); index++; ," this.states = new ConcurrentHashMap<StateKey, ConversationState>(concurrencyLevel, 0.75f, concurrencyLevel); this.identityRegistry = identityRegistry; this.listenerService = listenerService; "
0," if( pingMapOfDownloadMode!=null && pingMapOfSeedingMode!=null){ pingMapOfDownloadMode.setCurrentTransferRates(downRate,upRate); pingMapOfSeedingMode.setCurrentTransferRates(downRate,upRate); "," super(context, request, response); getVariants().add(new Variant(MediaType.TEXT_XML)); this.setModifiable(true); tableName = (String) getRequest().getAttributes().get(""table_name""); "
0, TableItem[] items = tableViewer.getTable().getItems(); for (int i = 0; i < items.length; i++) { TraceChannel chan = (TraceChannel)items[i].getData(); chan.setIsChannelOverride(false); ," Criteria criteria = new Criteria(Attachment.class.getName()); criteria.eq(""noteIdentifier"", noteId); return (Attachment) new QueryByCriteria(entityManager, criteria).toQuery().getSingleResult(); "
1," Region r1 = new Region(5, 8); Region r2 = new Region(5, 10); assertFalse(r1.equals(r2)); assertEquals(-1, comparator.compare(r1, r2)); assertEquals(1, comparator.compare(r2, r1)); "," Region XXXXX = new Region(5, 8); Region XXXXX = new Region(5, 10); assertFalse(XXXXX.equals(XXXXX)); assertEquals(-1, comparator.compare(XXXXX, XXXXX)); assertEquals(1, comparator.compare(XXXXX, XXXXX)); "
0," super(tr(""Update selection""), ""updateselection"", tr(""Updates the currently selected objects from the server (re-downloads data)""), Shortcut.registerShortcut(""file:updateselection"", tr(""File: {0", for (PackageCoverage i : packageCoverages) { final String prefix = i.getName() + '.'; if (name.startsWith(prefix)) { ClassCoverage j = i.findClassCoverage(name); if (j != null) return j; 
0, String path = (String) v.getTag(); assert (path != null); showDropdownNavigation(false); if (mFileViewListener.onNavigation(path)) return; mCurrentPath = path; refreshFileList(); ," super(element, simpleMethod); envAcsr = new ContextAccessor<Object>(element.getAttribute(""env-name"")); toEnvAcsr = new ContextAccessor<Object>(element.getAttribute(""to-env-name"")); "
1," assertThat(find(""#compteDebiteur"")).hasSize(1); assertThat(find(""#compteCrediteur"")).hasSize(1); assertThat(find(""#montant"")).hasSize(1); assertThat(find(""#libelle"")).hasSize(1); "," assertThat(find(""#compteDebiteur"")).hasSize(1); assertThat(find(""#compteCrediteur"")).hasSize(1); assertThat(find(""#montant"")).hasSize(1); assertThat(find(""#libelle"")).hasSize(1); "
1," if(xposition.endsWith(""%"")) { binfo.backgroundXPositionAbsolute = false; try { binfo.backgroundXPosition = (int) Double.parseDouble(xposition.substring(0, xposition.length() - 1).trim()); "," if(xposition.endsWith(""%"")) { binfo.backgroundXPositionAbsolute = false; try { binfo.backgroundXPosition = (int) Double.parseDouble(xposition.substring(0, xposition.length() - 1).trim()); "
1, int n = mSize; int o = 0; int[] keys = mKeys; Object[] values = mValues; for (int i = 0; i < n; i++) { Object val = values[i]; if (val != DELETED) { if (i != o) { keys[o] = keys[i]; values[o] = val; , XXXXXXXXXXt XXXXX = mSXXXXXze; XXXXXXXXXXt XXXXX = 0; XXXXXXXXXXt[] keys = mKeys; Object[] XXXXXues = mValues; fXXXXXr (XXXXXXXXXXt XXXXX = 0; XXXXX < XXXXX; XXXXX++) { Object XXXXX = XXXXXues[XXXXX]; XXXXXf (XXXXX != DELETED) { XXXXXf (XXXXX != XXXXX) { keys[XXXXX] = keys[XXXXX]; XXXXXues[XXXXX] = XXXXX; 
1," String label = ((BuildBase) object).getFinalName(); return label == null || label.length() == 0 ? getString(""_UI_BuildBase_type"") : getString(""_UI_BuildBase_type"") + "" "" + label; "," String label = ((BuildBase) object).getFinalName(); return label == null || label.length() == 0 ? getString(""_UI_BuildBase_type"") : getString(""_UI_BuildBase_type"") + "" "" + label; "
1," MavenArtifactProvisionOption option = new MavenArtifactProvisionOption(); option.groupId(""org.apache.felix"") .artifactId(""org.apache.felix.ipojo"") .version(""1.6.2""); return option; "," MavenArtifactProvisionOption XXXXX = new MavenArtifactProvisionOption(); XXXXX.groupId(""org.apache.felix"") .artifactId(""org.apache.felix.ipojo"") .version(""1.6.2""); return XXXXX; "
0," if(initialValue == null) return addValue; if(addValue == null) return initialValue; if(delimiter == null || """".equals(delimiter)){ return prepend ? addValue + initialValue : initialValue + addValue; "," String ns=""http: String lp=""MyType""; String xml=""<ns1:""+lp+"" xmlns:ns1=\""""+ns+""\"" />""; String type=MessageUtils.getMessageType(xml); if (type == null) { fail(""Failed to get message type""); "
1," MethodCache.remove(OrgLaborService.class); _service = service; ReferenceRegistry.registerReference(OrgLaborServiceUtil.class, ""_service""); MethodCache.remove(OrgLaborService.class); "," MethodCache.remove(OrgLaborService.class); _service = service; ReferenceRegistry.registerReference(OrgLaborServiceUtil.class, ""_service""); MethodCache.remove(OrgLaborService.class); "
0," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (mixed: ""); result.append(mixed); result.append(')'); return result.toString(); ", this.currentResultSet = null; this.currentHeaderSet = null; this.currentPrimaryKeySet = null; this.currentImportedKeySet = null; this.tablesSet = null; this.currentTableName = null; 
0, while (!stop) { DynamicModelEvent evt; while ((evt = eventQueue.poll()) != null) { for (DynamicModelListener l : listeners.toArray(new DynamicModelListener[0])) { l.dynamicModelChanged(evt); , super(part); setText(TEXT); setId(ID); setToolTipText(Messages.DefaultEditPartSizeAction_1); setImageDescriptor(IArchimateImages.ImageFactory.getImageDescriptor(IArchimateImages.ICON_DEFAULT_SIZE)); 
1," super(null); _javaParser = javaParser; _qdSource = javaParser.parseStringForSource(sourceString, this, sourceName); javaSource = this; _sourceCode = sourceString; _fileName = sourceName; init(); "," super(null); _javaParser = javaParser; _qdSource = javaParser.parseStringForSource(sourceString, this, sourceName); javaSource = this; _sourceCode = sourceString; _fileName = sourceName; init(); "
1, TestSuite testSuite = new TestSuite(); testSuite.addTest(Login52xTests.suite()); testSuite.addTest(GroupsTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , TestSuite testSuite = new TestSuite(); testSuite.addTest(Login52xTests.suite()); testSuite.addTest(GroupsTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; 
0, ApplicationPage page = VisatApp.getApp().getApplicationPage(); ToolView toolView = page.getToolView(LayerEditorToolView.ID); if (toolView != null) { page.showToolView(LayerEditorToolView.ID); ," setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR)); switch (fieldID) { case USERNAME_FIELD: user.setText(""""); break; case PASSWORD_FIELD: pass.setText(""""); break; default: cleanFields(); "
1," tv = new TextView(this); tv.setText(""Hello, cloud ocr\n""); setContentView(tv); loadingDialog = ProgressDialog.show(this, """", ""Decoding Image...""); new Thread( new Worker() ).start(); "," tv = new TextView(this); tv.setText(""Hello, cloud ocr\n""); setContentView(tv); loadingDialog = ProgressDialog.show(this, """", ""Decoding Image...""); new Thread( new Worker() ).start(); "
1," String file = newTestFile(); DB db = DBMaker.openFile(file) .enableEncryption(""password"",false) .make(); Set l = db.createHashSet(""test""); for(int i = 0;i<10000;i++){ l.add(""aa""+i); "," StrXXXXXng XXXXX = newTestFXXXXXXXXXXe(); DB XXXXX = DBMaker.openFXXXXXXXXXXe(XXXXX) .enabXXXXXeEncryptXXXXXon(""password"",faXXXXXse) .make(); Set XXXXX = XXXXX.createHashSet(""test""); for(XXXXXnt XXXXX = 0;XXXXX<10000;XXXXX++){ XXXXX.add(""aa""+XXXXX); "
0," StatusType type, subtype; Equipment eq; StatusValue v, haste; int cap; type = subtype = null; eq = mEquipment.getEquipment(EquipmentSet.MAINWEAPON); if (eq != null) { type = eq.getWeaponType(); "," session.zadd(""foo"", 1d, ""a""); session.zadd(""foo"", 10d, ""b""); session.zadd(""foo"", 0.1d, ""c""); session.zadd(""foo"", 2d, ""a""); long result = session.zcount(""foo"", 0.01d, 2.1d); assertEquals(2, result); "
1, for (ToolLocation location : locations) { if (location.getName().equals(installation.getName()) && location.getType() == installation.getDescriptor()) { return location.getHome(); , for (ToolLocation location : locations) { if (location.getName().equals(installation.getName()) && location.getType() == installation.getDescriptor()) { return location.getHome(); 
1, unregisterRegionLifecycleListener(); Collection<String> currentRegionNames; synchronized (this.monitor) { currentRegionNames = new ArrayList<String>(this.manageableRegions.keySet()); , unregisterRegionLifecycleListener(); Collection<String> currentRegionNames; synchronized (this.monitor) { currentRegionNames = new ArrayList<String>(this.manageableRegions.keySet()); 
1, buffer.writeByte(journalID); buffer.writeBoolean(isUpdate); buffer.writeLong(id); buffer.writeByte(recordType); buffer.writeInt(encodingData.getEncodeSize()); encodingData.encode(buffer); , buffer.writeByte(journalID); buffer.writeBoolean(isUpdate); buffer.writeLong(id); buffer.writeByte(recordType); buffer.writeInt(encodingData.getEncodeSize()); encodingData.encode(buffer); 
1, if (!hasVersion) return false; if (!hasDateCreated) return false; for (net.osmand.binary.OsmandIndex.FileIndex element : getFileIndexList()) { if (!element.isInitialized()) return false; , if (!hasVersion) return false; if (!hasDateCreated) return false; for (net.osmand.binary.OsmandIndex.FileIndex element : getFileIndexList()) { if (!element.isInitialized()) return false; 
1," JPanel panel = new JPanel(new GridLayout(w, h)); for (int i = 0; i < w; i++) { for (int j = 0; j < h; j++) { JButton button = new JButton(""Hello""); button.setFocusable(false); panel.add(button); "," JPanel XXXXX = new JPanel(new GrXXXXXdLayout(w, h)); for (XXXXXnt XXXXX = 0; XXXXX < w; XXXXX++) { for (XXXXXnt XXXXX = 0; XXXXX < h; XXXXX++) { JButton XXXXX = new JButton(""Hello""); XXXXX.setFocusable(false); XXXXX.add(XXXXX); "
1, GradleVersion version = getGradleVersion(); boolean isMinimumVersionOrHigher = version.compareTo(PROJECT_OUTCOMES_MINIMUM_VERSION) >= 0; if (isMinimumVersionOrHigher) { return true; , GradleVersion version = getGradleVersion(); boolean isMinimumVersionOrHigher = version.compareTo(PROJECT_OUTCOMES_MINIMUM_VERSION) >= 0; if (isMinimumVersionOrHigher) { return true; 
0, String resourceLink = eclipseResourceTextRegion.getText(); String relPath = new String(resourceLink.substring(WikiConstants.ECLIPSE_PREFIX.length())); return getHoverForEclipseResource(relPath); , if (!tagMetaStack.isEmpty()) { TagMeta tm = tagMetaStack.peek(); if (tm.bufferMode) { writeTagBodyStart(tm); if (tm.bufferPartNumber != -1) { htmlPartPrintlnRaw(tm.bufferPartNumber); 
0," if (_separator == null) { _separator = new JPanel(); _separator.setLayout(new BoxLayout(_separator, BoxLayout.Y_AXIS)); _separator.setBorder(BorderFactory.createEmptyBorder(0, 5, 0, 5)); ", final BasicArrayList list = new BasicArrayList(); final String string = this.textFieldItem.getString(); int textLength = string.length(); if (textLength > this.min && textLength < this.max) { 
1," double expected = 1.0e-2; UnivariateRealSolver solver = new BisectionSolver(); solver.setRelativeAccuracy(expected); assertEquals(expected, solver.getRelativeAccuracy(), 1.0e-2); "," double expected = 1.0e-2; UnivariateRealSolver solver = new BisectionSolver(); solver.setRelativeAccuracy(expected); assertEquals(expected, solver.getRelativeAccuracy(), 1.0e-2); "
0," String name = exchange.getIn().getHeader(Exchange.FILE_NAME_PRODUCED, String.class); LOG.warn(""Failure occurred so deleting backup file: "" + name); FileUtil.deleteFile(new File(name)); ", webClient = new WebClient(browser); mockConnection = new MockWebConnection(); webClient.setWebConnection(mockConnection); webClient.setAjaxController(new NicelyResynchronizingAjaxController()); 
0, ResourceBundle bundle = null; if (ourBundle != null) bundle = ourBundle.get(); if (bundle == null) { bundle = ResourceBundle.getBundle(BUNDLE); ourBundle = new SoftReference<ResourceBundle>(bundle); ," _underlying = mock(SecurityMaster.class); _uriInfo = mock(UriInfo.class); when(_uriInfo.getBaseUri()).thenReturn(URI.create(""testhost"")); _resource = new DataSecurityMasterResource(_underlying); "
1, field_35467_J = field_35468_K; field_35468_K += field_35465_L; field_35465_L *= 0.97999999999999998D; if (getWorldInfo().isHardcoreModeEnabled() && difficultySetting < 3) { difficultySetting = 3; , field_35467_J = field_35468_K; field_35468_K += field_35465_L; field_35465_L *= 0.97999999999999998D; if (getWorldInfo().isHardcoreModeEnabled() && difficultySetting < 3) { difficultySetting = 3; 
0, final int prime = 31; int result = 1; result = prime * result + ((fun == null) ? 0 : fun.hashCode()); result = prime * result + ((mod == null) ? 0 : mod.hashCode()); return result; ," String stmtText = ""insert into Event_1 (delta, product) "" + ""select * from "" + SupportBean.class.getName() + "".win:length(100)""; try{ epService.getEPAdministrator().createEPL(stmtText); fail(); "
1," Util.sendMessage(sender, ""&cGives you the HawkEye tool. You can use this to see changes at specific places""); Util.sendMessage(sender, ""&cLeft click a block or place the tool to get information""); "," Util.sendMessage(sender, ""&cGives you the HawkEye tool. You can use this to see changes at specific places""); Util.sendMessage(sender, ""&cLeft click a block or place the tool to get information""); "
1, myChangesUnderProjectRoot = changesUnderProjectRoot; myProject = project; myDirtyScopeManager = VcsDirtyScopeManager.getInstance(project); myConflictedVirtualFiles = new ArrayList<VirtualFile>(); , myChangesUnderProjectRoot = changesUnderProjectRoot; myProject = project; myDirtyScopeManager = VcsDirtyScopeManager.getInstance(project); myConflictedVirtualFiles = new ArrayList<VirtualFile>(); 
0," referenceIPD = context.getRefIPD(); LayoutContext childLC; List<ListElement> returnList = new LinkedList<ListElement>(); if (!breakBeforeServed(context, returnList)) { return returnList; "," SessionEvent event = new SessionEvent(this.wagon, SessionEvent.SESSION_LOGGED_IN); for (SessionListener sessionListener : this.sessionListeners) { sessionListener.sessionLoggedIn(event); "
0," RefactoringStatus result= new RefactoringStatus(); if (length <= 0) return result; new CommentAnalyzer().check(result, selection, scanner, start, start + length - 1); return result; ", switch (featureID) { case FXGraphPackage.DEFINE__ELEMENT: setElement((Element)null); return; case FXGraphPackage.DEFINE__INCLUDE_ELEMENT: setIncludeElement((IncludeValueProperty)null); return; 
0," String oldLONGNAME = lONGNAME; lONGNAME = newLONGNAME; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, RifPackage.SPECHIERARCHY__LONGNAME, oldLONGNAME, lONGNAME)); "," Logger.error(this, ""Peer "" + source + "" asked us for the blob file for the ""+name+"" jar, then got a fatal error when we tried to send the UOMSendingMain""); source.finishedSendingUOMJar(isExt); "
1," assertNull( content.getY( ) ); DimensionType y1 = new DimensionType( 1, ""in"" ); content.setY( y1 ); assertEquals( y1, content.getY( ) ); content.setY( null ); assertNull( content.getY( ) ); "," assertNull( content.getY( ) ); DimensionType XXXXX = new DimensionType( 1, ""in"" ); content.setY( XXXXX ); assertEquals( XXXXX, content.getY( ) ); content.setY( null ); assertNull( content.getY( ) ); "
1, if (basicRuleElementDTOs.size() > 0) { for (BasicRuleElementDTO basicRuleElementDTO : basicRuleElementDTOs) { if (basicRuleElementDTO.getRuleId().equals(ruleId)) { return basicRuleElementDTO; , if (basicRuleElementDTOs.size() > 0) { for (BasicRuleElementDTO basicRuleElementDTO : basicRuleElementDTOs) { if (basicRuleElementDTO.getRuleId().equals(ruleId)) { return basicRuleElementDTO; 
1," assertChangeable(); _name = Configurations.getClassName(str); _name = unalias(_name); _props = Configurations.getProperties(str); if (_singleton) set(null, true); valueChanged(); "," assertChangeable(); _name = Configurations.getClassName(str); _name = unalias(_name); _props = Configurations.getProperties(str); if (_singleton) set(null, true); valueChanged(); "
1," this.appContext = Registry.get(ApplicationContext.class); panel = new MosaicPanel(); panel.setPadding(0); Registry.get(Controller.class).addView(ID, this); initialize(); callback.onSuccess(panel); "," this.appContext = Registry.get(ApplicationContext.class); panel = new MosaicPanel(); panel.setPadding(0); Registry.get(Controller.class).addView(ID, this); initialize(); callback.onSuccess(panel); "
1, Books books = new Books(); List<Book> list = new ArrayList<Book>(); CustomEntryReader entryReader = new CustomEntryReader(); for (Entry e : element.getEntries()) { list.add(entryReader.readFrom(e)); , Books books = new Books(); List<Book> list = new ArrayList<Book>(); CustomEntryReader entryReader = new CustomEntryReader(); for (Entry e : element.getEntries()) { list.add(entryReader.readFrom(e)); 
0, ScopeFrame currentScope = this; ArrayList<String> parentNames = new ArrayList<String>(); while (currentScope != null) { parentNames.add(currentScope.oscope.name); currentScope = currentScope.parent; , try{ int i = chosenbox.getSelectedIndex(); namebox.addItem((String)chosenPeople.getElementAt(i)); chosenPeople.remove(i); namebox.updateUI(); chosenbox.updateUI(); System.out.println(i); 
1, TestSuite testSuite = new TestSuite(); testSuite.addTest(EventTestPlan.suite()); testSuite.addTest(PortletECTestPlan.suite()); testSuite.addTest(PortletEPTestPlan.suite()); return testSuite; , TestSuite XXXXX = new TestSuite(); XXXXX.addTest(EventTestPlan.suite()); XXXXX.addTest(PortletECTestPlan.suite()); XXXXX.addTest(PortletEPTestPlan.suite()); return XXXXX; 
1," char[] chars = text.toCharArray( ); int length = chars.length; int index = testEscape( chars, whitespace ? HTML_WHITE_SPACE_ENCODING : HTML_TEXT_ENCODING ); if ( index >= length ) { return text; "," char[] chars = text.toCharArray( ); int XXXXX = chars.XXXXX; int XXXXX = testEscape( chars, whitespace ? HTML_WHITE_SPACE_ENCODING : HTML_TEXT_ENCODING ); if ( XXXXX >= XXXXX ) { return text; "
0, this.path = path; categoryConfig = getCategoryConfig(pathToXml); this.downloadConfig = downloadConfig; this.grabberConfig = grabberConfig; this.controllerFactory = controllerFactory; ," String header = buildHeader(cookie); if (LOGGER.isLoggable(Level.FINE)) { LOGGER.fine(""[XDR-"" + id + ""]["" + req.getRequestURI() + ""] Adding header "" + header + "" from cookie "" + cookie.getName()); "
0, if (origin == null) return null; final List<GitRemoteInfo> remotes = getRemotes(project); for (GitRemoteInfo remote : remotes) { if (remote.getName().equalsIgnoreCase(origin)) return remote; , final StringBuilder sb = new StringBuilder(n); ByteBuffer bb = null; for (int i = 0; i < n;) { final char c = s.charAt(i++); if (c != '%') { if (c != '+') sb.append(c); else sb.append(' '); 
0, if(isSharingElementals() && getOwner() != null) return (int)(getOwner().getDefenseElementValue(defenseAttribute) * sharedElementalsPercent()); return super.getDefenseElementValue(defenseAttribute); , final Button typeButton = (Button) findViewById(R.id.type); typeSelected = type; typeButton.setText(typeSelected.getL10n()); if (Settings.isUseTwitter()) { tweetBox.setVisibility(View.VISIBLE); 
0," TimedTest test = new TimedTest(_oneSecondFailedTest, 900, false); assertEquals(1, test.countTestCases()); TestResult result = new TestResult(); test.run(result); if (test.outOfTime()) { "," this.SubjectType = SubjectType; String FieldName = HtmlFormatter.stripFormFieldName(FormName, SubjectTypeField); this.SubjectPropertiesForm.getFieldItemForName(FieldName).SetFieldValue(SubjectType); "
1, RelationMemberConflictDecision d = decisions.get(row); switch(column) { case 2: d.setRole((String)value); break; case 4: d.decide((RelationMemberConflictDecisionType)value); refresh(); break; , RelationMemberConflictDecision XXXXX = XXXXXecisions.get(row); switch(column) { case 2: XXXXX.setRole((String)value); break; case 4: XXXXX.XXXXXeciXXXXXe((RelationMemberConflictDecisionType)value); refresh(); break; 
1," final long toOld = mConfig.getMaxStatAgeMillis() + 1; int minClicks = mConfig.getMinClicksForSourceRanking(); for (int i = 0; i < minClicks; i++) { reportClick(""app"", mApp1, NOW - toOld); "," fXXXXXnal long XXXXX = mConfXXXXXg.getMaxStatAgeMXXXXXllXXXXXs() + 1; XXXXXnt XXXXX = mConfXXXXXg.getMXXXXXnClXXXXXcksForSourceRankXXXXXng(); for (XXXXXnt XXXXX = 0; XXXXX < XXXXX; XXXXX++) { reportClXXXXXck(""app"", mApp1, NOW - XXXXX); "
0, token_source.ReInit(stream); token = new Token(); jj_ntk = -1; jj_gen = 0; for (int i = 0; i < 28; i++) jj_la1[i] = -1; for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls(); ," if (strict) { final String[] tokens = props.getQueryString().split(""&""); for (String keyValuePair : tokens) { final String[] prop = keyValuePair.split(""=""); if (prop.length != 2) { continue; "
1," final Token tok = lexer.token(); if (identifierEquals(""outfile"")) { lexer.nextToken(); SQLExpr file = primary(); SQLExpr expr = new MySqlOutFileExpr(file); return primaryRest(expr); "," final Token XXXXX = lexer.XXXXXen(); if (identifierEquals(""outXXXXX"")) { lexer.nextToken(); SQLExpr XXXXX = primary(); SQLExpr XXXXX = new MySqlOutFileExpr(XXXXX); return primaryRest(XXXXX); "
1," Style style = null; JSimpleStyleDialog dialog = null; if (parent != null) { if (parent instanceof Frame) { dialog = new JSimpleStyleDialog((Frame) parent, featureType, initialStyle); "," Style XXXXX = null; JSimpleStyleDialog XXXXX = null; if (parent != null) { if (parent instanceof Frame) { XXXXX = new JSimpleStyleDialog((Frame) parent, featureType, initialStyle); "
0," Object key = new Object(); final Object value = new Object(); Object returnedValue = keyValueStore.get( key, new IInstanceCreator<Object>() { public Object createInstance() { return value; "," if ((region & ALLREGIONS) == ALLREGIONS) return ""ALL""; else if ((region & US) == US) return ""US""; else if ((region & EU) == EU) return ""EU""; else if ((region & AZ) == AZ) return ""AZ""; return """"; "
0," String oldMasks = masks; masks = newMasks; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_SVG_ELEMENT__MASKS, oldMasks, masks)); "," MQFactory.getConcrete(""Swing"").enqueue(""NOTIFY "" + ""Your sign in information appears to be incorrect, according to\n"" + ""eBay. Please fix it in the eBay tab in the Configuration Manager.""); "
0," return new ToStringBuilder(this, ToStringStyle.SHORT_PREFIX_STYLE).append(""geonamesFeatureClass"", this.geonamesFeatureClass).append(""geonamesFeatureCode"", this.geonamesFeatureCode).toString(); "," if (!this.hasSdCard()) return """"; dataDir = new File(Environment.getExternalStorageDirectory(), context.getPackageName()+""/log""); if(!dataDir.exists()) dataDir.mkdirs(); return dataDir.getPath(); "
1," List<String> params = new ArrayList<String>(); params.add(""Hallo ""); params.add(""TestFramework""); params.add(""!""); Assert.assertEquals(function.execute(params), ""Hallo TestFramework!""); "," List<String> params = new ArrayList<String>(); params.add(""Hallo ""); params.add(""TestFramework""); params.add(""!""); Assert.assertEquals(function.execute(params), ""Hallo TestFramework!""); "
0, List<ParticipantId> participantIds = CollectionUtils.newArrayList(); for (String participant : digest.getParticipants()) { participantIds.add(ParticipantId.ofUnsafe(participant)); , if (this.simulation.getState() != EngineState.STOPPED && this.simulation.getState() != EngineState.CRASHED) return; if (!this.scenarioLoaded) { this.loadScenario(this.currentScenario); 
0," String content = ""<?xml version=\""1.0\""?>"" + ""<!DOCTYPE cross-domain-policy SYSTEM \""http: ""<cross-domain-policy>"" + "" <allow-access-from domain=\""*\""/>"" + ""</cross-domain-policy>""; return content; "," Thread result = new Thread( schedulerThreadGroup, r, namePrefix + threadNumber.getAndIncrement() ); result.setDaemon( this.deamonThread ); result.setPriority( this.threadPriority ); return result; "
0," clear(); RootPanel.get(""UserName"").add(guest); RootPanel.get(""link2loginout"").add(signin); RootPanel.get(""UserNameOnBoard"").add(userName); RootPanel.get(""link2loginoutOnBoard"").add(formSignin); ", boolean isEqual = false; if (other instanceof IDManagerPK) { if (id == null) isEqual = (id == ((IDManagerPK)other).id); else isEqual = (id.intValue() == ((IDManagerPK)other).id.intValue()); 
1," final ComplexNumber temp = ComplexMathUtils.multiply(ComplexMathUtils.exp(new ComplexNumber(-alpha * k, -k * a)), x); final double y = delta * temp.getReal() / 2 / Math.PI; return y; "," final ComplexNumber XXXXX = ComplexMathUtils.multiplXXXXX(ComplexMathUtils.exp(new ComplexNumber(-alpha * k, -k * a)), x); final double XXXXX = delta * XXXXX.getReal() / 2 / Math.PI; return XXXXX; "
0, if (areBoundsAdjustable != aFlag) { areBoundsAdjustable = aFlag; if (getGraphicalRepresentation() != null) { updateControlPoints(); getGraphicalRepresentation().notifyConnectorChanged(); ," if (osName != null) addProperty(element, ""os"", osName); if (ipAddress != null) addProperty(element, ""ipAddress"", ipAddress); if (hostname != null) addProperty(element, ""hostname"", hostname); "
0, createLink = createLinkButton.getSelection(); browseButton.setEnabled(createLink); variablesButton.setEnabled(createLink); linkTargetField.setEnabled(createLink); setPageComplete(validatePage()); , Way w = (Way) testError.getPrimitives().iterator().next(); Way wnew = new Way(w); wnew.setNodes(null); Node lastN = null; for (Node n : w.getNodes()) { if (lastN == null) { wnew.addNode(n); 
0, super.addOwnedElement(element); element.setOwnerElement(this); if(element instanceof INakedPackage){ INakedPackage thePackage = (INakedPackage) element; this.subpackages.add(thePackage); ," version = version.trim(); boolean result = false; if (version.endsWith(""*"")) { version = version.substring(0, version.length() - 1).trim(); log.debug(""Checking Java version is in the same group as: {"
1," Parameters p = object.getClass().getAnnotation(Parameters.class); if (p != null && p.commandNames().length > 0) { for (String commandName : p.commandNames()) { addCommand(commandName, object); "," Parameters p = object.getClass().getAnnotation(Parameters.class); if (p != null && p.commandNames().length > 0) { for (String commandName : p.commandNames()) { addCommand(commandName, object); "
0," String dsh = SystemPropertyAction.getPropertyOrNull(""derby.system.home""); File root = null; File log = null; if (null == dsh) { log = new File(""derby.log""); root = new File(dbName); "," if (worldObj.getBlockTileEntity(xCoord, yCoord, zCoord) != this) return false; return entityplayer.getDistanceSq((double)xCoord + 0.5D, (double)yCoord + 0.5D, (double)zCoord + 0.5D) <= 64D; "
0, Object retval = null; try { XPathExpression exp = cache.get(xpath); if (exp == null) { synchronized (xpathCompiler) { if (nsContext != null) { xpathCompiler.setNamespaceContext(nsContext); ," loadFileCB.addActionListener(new ActionListener() { public void actionPerformed(ActionEvent actionEvent) { if (loadFileCB.isSelected()) { recordDataButton.setText(""Read From File""); "
0," List<RoleGroupMap> before = dao.getAllForRole(EXISTING_ROLE_ID); assertFalse(before.isEmpty()); for (RoleGroupMap map : before) { dao.remove(map.getActionGroup(), map.getRoleId()); ", AF = naf; output = new NumericNeuronInput(); weights = new double[input.size()]; for(int idx = 0; idx < weights.length; idx ++) { weights[idx] = InitializerFactory.createWeight(); 
1," if(getConfig().getSessionType()==Config.SESSION_TYPE_J2EE) { HttpSession s = getSession(); return ""CFID=""+getCFID()+""&CFTOKEN=""+getCFToken()+""&jsessionid=""+(s!=null?getSession().getId():""""); "," if(getConfig().getSessionType()==Config.SESSION_TYPE_J2EE) { HttpSession s = getSession(); return ""CFID=""+getCFID()+""&CFTOKEN=""+getCFToken()+""&jsessionid=""+(s!=null?getSession().getId():""""); "
0," PelopsException pelopsException = translator.translate(new org.apache.thrift.protocol.TProtocolException()); assertEquals(""Translation failed"", ProtocolException.class, pelopsException.getClass()); "," buffer[0]--; if (buffer[0] > 0) { setKey(getKey(buffer[0]), index); positions[index] = getPhysicalPosition(buffer[0]); keysToUpdate[index] = true; positionsToUpdate[index] = true; "
0," Intent tracklistIntent = new Intent( LoggerMap.this, TrackList.class ); tracklistIntent.putExtra( Tracks._ID, LoggerMap.this.mTrackId ); startActivityForResult( tracklistIntent, MENU_TRACKLIST ); ", if(isSharingElementals() && getOwner() != null) return (int)(getOwner().getDefenseElementValue(defenseAttribute) * sharedElementalsPercent()); return super.getDefenseElementValue(defenseAttribute); 
1, setDefaultPageImageDescriptor(RubyPluginImages.DESC_WIZBAN_NEWCLASS); setDialogSettings(RubyPlugin.getDefault().getDialogSettings()); setWindowTitle(WizardMessages.Wizard_title_new_testcase); , setDefaultPageImageDescriptor(RubyPluginImages.DESC_WIZBAN_NEWCLASS); setDialogSettings(RubyPlugin.getDefault().getDialogSettings()); setWindowTitle(WizardMessages.Wizard_title_new_testcase); 
0, JComponent parent = (JComponent) getParent(); if (parent != null) { Container toplevel = parent.getTopLevelAncestor(); parent.remove(this); toplevel.validate(); toplevel.repaint(); ," populateNode(node, skillsIt, sorter, available); if (sorter.nodeHaveNext()) { while (node.hasNext()) { createRootNode((PObjectNode) node.next(), skillsIt, sorter .nextSorter(), available); "
1, Collaborator.doInternal(); Collaborator.doInternal(); try { new VerificationsInOrder() { { Collaborator.doInternal(); mock.provideSomeService(); minTimes = 1; $ = message; maxTimes = 2; , Collaborator.doInternal(); Collaborator.doInternal(); try { new VerificationsInOrder() { { Collaborator.doInternal(); mock.provideSomeService(); minTimes = 1; $ = message; maxTimes = 2; 
0, fSelectedContentTypeName = fContentType.getText(); fSelectedContentTypeID = fContentTypeNamesToIDsMap.get(fSelectedContentTypeName); getButton(IDialogConstants.OK_ID).setEnabled(isValidSelection()); ," withdraw(fromAccountNumber, funds); deposit(toAccountNumber, funds); System.out.println(""AccountAccessServiceImpl.transfer("" + fromAccountNumber + "","" + toAccountNumber + "","" + funds + "")""); "
0," Logger.i(""checking Speedometer service for new tasks""); lastCheckinTime = Calendar.getInstance(); try { persistState(); uploadResults(); getTasksFromServer(); resetCheckin(); handleMeasurement(); ", if (otherAnswer == null) return true; if (this.restriction == null) return true; return otherAnswer.restriction != null && this.restriction.getProblemId() < otherAnswer.restriction.getProblemId(); 
1," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," EditorCell XXXXX = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, XXXXX, editorContext); return XXXXX; "
1, switch (featureID) { case ErlangPackage.FUN_CALL__TARGET: return getTarget(); case ErlangPackage.FUN_CALL__ARGS: return getArgs(); case ErlangPackage.FUN_CALL__ARGS2: return getArgs2(); , switch (featureID) { case ErlangPackage.FUN_CALL__TARGET: return getTarget(); case ErlangPackage.FUN_CALL__ARGS: return getArgs(); case ErlangPackage.FUN_CALL__ARGS2: return getArgs2(); 
0," switch (item.getItemId()) { case android.R.id.home: if (mShowHideMasterLayout != null && !mShowHideMasterLayout.isMasterVisible()) { mShowHideMasterLayout.showMaster(true, 0); return true; ", CramRecord record = new CramRecord(); String[] chunks = string.split(STRING_FIELD_SEPARATOR); int i = 0; String chunk; chunk = chunks[i++]; if (isNotEmpty(chunk)) { sequenceID = chunk; 
0," double width = SheetUtil.getColumnWidth(this, column, useMergedCells); if (width != -1) { width *= 256; int maxColumnWidth = 255 * 256; if (width > maxColumnWidth) { width = maxColumnWidth; "," String oldCharset = charset; charset = newCharset; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, CssDslPackage.CHARSET__CHARSET, oldCharset, charset)); "
0," if (!(a instanceof FiniteAlphabet)) throw new IllegalArgumentException(""Cannot construct dummy symbol list for a non-finite alphabet""); return new InfinitelyAmbiguousSymbolList((FiniteAlphabet)a); ", myMaps = new ArrayList<MigrationMap>(); File[] files = getMapFiles(); for(int i = 0; i < files.length; i++){ try{ MigrationMap map = readMap(files[i]); if (map != null){ myMaps.add(map); 
0," File tomcat = walkTree(dir, level); if (tomcat != null) return tomcat; File programFiles = new File(""C:/Program Files""); if (programFiles.exists()) { tomcat = walkTree(programFiles, 2); "," ReplaceAtom A = new ReplaceAtom(thisPeer, handle, newValue, newType, other); thisPeer.getActivityManager().initiateActivity(A); try { ActivityResult R = A.getFuture().get(); maybeThrow(R); "
0," SQLiteDatabase db = mOpenHelper.getWritableDatabase(); String where = StatusTable._ID + "" =? ""; if (!TextUtils.isEmpty(owner)) { where += "" AND "" + StatusTable.OWNER_ID + "" = '"" + owner + ""' ""; "," return new StringBuilder() .append(""Repetition "").append(event.getRepetitionNumber() + 1) .append("" removed in revision "") .append(change.getDelta().getRevision().getDisplayName()) .toString(); "
0, ServerSocket ss = null; DatagramSocket ds = null; try { ss = new ServerSocket(port); ss.setReuseAddress(true); ds = new DatagramSocket(port); ds.setReuseAddress(true); return true; , if (this.lastPickedObject == o) return; if (this.lastPickedObject != null) { this.lastPickedObject.getAttributes().setHighlighted(false); this.lastPickedObject = null; updateHelpMessage(null); 
1," Icon comboArrow = UIManager.getIcon(""ComboBox.icon""); if (comboArrow == null) { if (""Aqua"".equals(UIManager.getLookAndFeel().getID())) { comboArrow = new CleanComboUI.AquaComboIcon(); "," Icon XXXXX = UIManager.getIcon(""ComboBox.icon""); if (XXXXX == null) { if (""Aqua"".equals(UIManager.getLookAndFeel().getID())) { XXXXX = new CleanComboUI.AquaComboIcon(); "
0, if (myCvsPaths.size() == 1) { final CheckoutStrategy checkoutStrategy = (CheckoutStrategy)myCheckoutModeList.getSelectedValue(); return checkoutStrategy.useAlternativeCheckoutLocation(); , long rValue; long uValue = 0; uValue = this.dataLocal >> this.dataBitOffset; uValue &= 1; this.dataBitOffset++; if (this.dataBitOffset >= 32) { this.dataBitOffset -= 32; IncrementPosition(); 
1," ClassLoader cl = Thread.currentThread().getContextClassLoader(); InputStreamDescriptor isd = new InputStreamDescriptor(""wm-security.xml"", cl.getResourceAsStream(""wm-security.xml"")); return isd; "," ClassLoader XXXXX = Thread.currentThread().getContextClassLoader(); InputStreamDescriptor XXXXX = new InputStreamDescriptor(""wm-security.xml"", XXXXX.getResourceAsStream(""wm-security.xml"")); return XXXXX; "
0," List<ClauseProvider> setProvider = this.registre.get(thePredicateKey); if(setProvider == null){ setProvider = new ArrayList<ClauseProvider>(); this.registre.put(thePredicateKey, setProvider); "," objectUnderTest_.attach_callback(mockSubscription_); assertEquals(1, objectUnderTest_.get_callbacks().length); objectUnderTest_.dispose(); assertEquals(0, objectUnderTest_.get_callbacks().length); "
1," Label spacer = new Label( parent, SWT.NONE ); GridData data = new GridData( ); data.horizontalAlignment = GridData.FILL; data.verticalAlignment = GridData.BEGINNING; spacer.setLayoutData( data ); "," Label XXXXX = new Label( parent, SWT.NONE ); GridData XXXXX = new GridData( ); XXXXX.horizontalAlignment = GridData.FILL; XXXXX.verticalAlignment = GridData.BEGINNING; XXXXX.setLayoutData( XXXXX ); "
0," individuals(a, b, c); objectProperties(p, q); kb.addDisjointProperty(p, q); kb.addPropertyValue( p, a, c ); kb.addPropertyValue( q, b, c ); assertTrue( kb.isDifferentFrom( a, b ) ); "," test.addSequence(mississippi, ""name"", false); assertEquals(19,test.getAllNodes(test.getRoot(), null, false).size()); assertEquals(12,test.getAllNodes(test.getRoot(), null, true).size()); "
1," NodeIDPair IDPair; for(int i = 0; i < IDsArray.size(); i++){ IDPair = IDsArray.get(i); if (IDPair.getIDinDB().equals(IDinDB)){ IDPair.setIDinTree(value); IDsArray.setElementAt(IDPair, i); "," NodeIDPaXXXXXr IDPaXXXXXr; for(XXXXXnt XXXXX = 0; XXXXX < IDsArray.sXXXXXze(); XXXXX++){ IDPaXXXXXr = IDsArray.get(XXXXX); XXXXXf (IDPaXXXXXr.getIDXXXXXnDB().equals(IDXXXXXnDB)){ IDPaXXXXXr.setIDXXXXXnTree(value); IDsArray.setElementAt(IDPaXXXXXr, XXXXX); "
1," pack(); final Dimension screen = Toolkit.getDefaultToolkit().getScreenSize(); setLocation(new Point((screen.width - getSize().width) / 2, (screen.height - getSize().height) / 2)); "," pack(); final Dimension XXXXX = Toolkit.getDefaultToolkit().getScreenSize(); setLocation(new Point((XXXXX.width - getSize().width) / 2, (XXXXX.height - getSize().height) / 2)); "
1," CfgReadNode newNode = new CfgReadNode(node.getParent(), createRef(node.getJNode().getSourceInfo(), original)); return CfgUtil.createSingleNodeReplacementGraph(graph, node, newNode); "," CfgReadNode XXXXX = new CfgReadNode(node.getParent(), createRef(node.getJNode().getSourceInfo(), original)); return CfgUtil.createSingleNodeReplacementGraph(graph, node, XXXXX); "
1," if(chatlen>0) { Date now = new Date(); int ix=CHATBOTTOM_X; for(int i=0;i<chatlen;i++) { if ((now.compareTo(chatarr[i].expirytime) < 0) || barType==1) { writeChat(ix,CHATBOTTOM_Y-(i*10),chatarr[i]); "," if(chatlen>0) { Date XXXXX = new Date(); int ix=CHATBOTTOM_X; for(int i=0;i<chatlen;i++) { if ((XXXXX.compareTo(chatarr[i].expirytime) < 0) || barType==1) { writeChat(ix,CHATBOTTOM_Y-(i*10),chatarr[i]); "
0," PDFDictionary attribute = new PDFDictionary(); attribute.put(""O"", Table.NAME); attribute.put(typeSpan, span); if (attributes == null) { attributes = new ArrayList<PDFDictionary>(2); "," counter++; assertEquals(""Aladdin"", previousInfo.getUserName()); assertEquals(""open sesame"", previousInfo.getPassword()); assertEquals(false, previousInfo.saveResult()); return previousInfo; "
0," super(); this.addHeader(getTitle(), NewTheme.I().getIcon(""premium"", 32)); this.addDescriptionPlain(_JDT._.gui_settings_premium_description()); add(acm = new AccountManager(this)); "," AnalyzeWeightsTab tab = new AnalyzeWeightsTab((ProjectEGFile)this.getEncogObject()); EncogWorkBench.getInstance().getMainWindow().getTabManager() .openModalTab(tab, ""Analyze Weights""); "
0," PelopsException pelopsException = translator.translate(new org.apache.cassandra.thrift.NotFoundException()); assertEquals(""Translation failed"", NotFoundException.class, pelopsException.getClass()); "," Box graphInfoPanel = Box.createHorizontalBox(); this.noteField = new JTextField(); graphInfoPanel.add(this.createInfoLabel(""distribution_note1"", this.noteField)); return graphInfoPanel; "
1, ISession cloneMachineSession = machineController.ensureMachineHasPowerDown(instanceName); SessionState state = cloneMachineSession.getState(); assertTrue(state.equals(SessionState.Unlocked)); , ISession XXXXX = machineController.ensureMachineHasPowerDown(instanceName); SessionState XXXXX = XXXXX.getState(); assertTrue(XXXXX.equals(SessionState.Unlocked)); 
1," byte[] bytes = getByteArray(); ByteArrayInputStream bais = new ByteArrayInputStream(bytes); AudioFormat af = getAudioFormat(); if (af == null) { af = new AudioFormat(16000,16, 1, true, true); "," byte[] bytes = getByteArray(); ByteArrayInputStream XXXXX = new ByteArrayInputStream(bytes); AudioFormat XXXXX = getAudioFormat(); if (XXXXX == null) { XXXXX = new AudioFormat(16000,16, 1, true, true); "
1," CDOBranch branch = branchPoint.getBranch(); long timeStamp = branchPoint.getTimeStamp(); return commitInfoManager.createCommitInfo(branch, timeStamp, previousTimeStamp, userID, commitComment, null); "," CDOBranch XXXXX = XXXXXPoint.getBranch(); long XXXXX = XXXXXPoint.getTimeStamp(); return commitInfoManager.createCommitInfo(XXXXX, XXXXX, previousTimeStamp, userID, commitComment, null); "
1," PackageManager packageManager = getPackageManager(); ComponentName name = new ComponentName(BETA_PACKAGE, BETA_ACTIVITY); try { packageManager.getActivityInfo(name, PackageManager.GET_META_DATA); "," PackageManager XXXXX = getPackageManager(); ComponentName XXXXX = new ComponentName(BETA_PACKAGE, BETA_ACTIVITY); try { XXXXX.getActivityInfo(XXXXX, PackageManager.GET_META_DATA); "
1," expect(tagService.getAvailableTagsByWidgetId(VALID_WIDGET_ID)).andReturn(tagList); replay(tagService); assertThat(widgetApi.getTags(VALID_WIDGET_ID), is(tagList)); verify(tagService); "," expect(tagService.getAvailableTagsByWidgetId(VALID_WIDGET_ID)).andReturn(tagList); replay(tagService); assertThat(widgetApi.getTags(VALID_WIDGET_ID), is(tagList)); verify(tagService); "
0," loginRoot(); ExperimenterGroup g2 = newGroup(); setup(Permissions.PRIVATE); Experimenter e = uuidUser(); try { iAdmin.createExperimenterWithPassword(e, ""pass"", g2); fail(""not in my group""); "," if (!(condition instanceof JavaScriptCondition)) { throw new IllegalStateException(""The given condition doesn't implement JavaScriptCondition so its negation can't be converted to the JavaScript.""); "
1, DitContentRule copy = new DitContentRule( oid ); copy.copy( this ); copy.auxObjectClassOids = new ArrayList<String>(); for ( String oid : auxObjectClassOids ) { copy.auxObjectClassOids.add( oid ); , DitContentRule XXXXX = new DitContentRule( oid ); XXXXX.XXXXX( this ); XXXXX.auxObjectClassOids = new ArrayList<String>(); for ( String oid : auxObjectClassOids ) { XXXXX.auxObjectClassOids.add( oid ); 
1," super( imagePlus, stackMin, stackMax, false, false, startPaused, 0, reportEveryMilliseconds ); this.reciprocal = reciprocal; setThreshold( initialThreshold ); setPriority( MIN_PRIORITY ); "," super( imagePlus, stackMin, stackMax, false, false, startPaused, 0, reportEveryMilliseconds ); this.reciprocal = reciprocal; setThreshold( initialThreshold ); setPriority( MIN_PRIORITY ); "
1," int ret = nGetPCMBufferSize(DEFAULT_PCM_BUFFER_SIZE); if (ret < 0) { handleNativeException(ret); throw new RuntimeException( ""Unknown error in Lame.nGetPCMBufferSize(). Resultcode="" + ret); "," int ret = nGetPCMBufferSize(DEFAULT_PCM_BUFFER_SIZE); if (ret < 0) { handleNativeException(ret); throw new RuntimeException( ""Unknown error in Lame.nGetPCMBufferSize(). Resultcode="" + ret); "
0," if(newVersion != null) { if(newVersion.length() == 0) newVersion = null; else if(!Character.isLetterOrDigit(newVersion.charAt(0))) throw new IllegalArgumentException(""Bad version: "" + newVersion); "," StringBuffer buf = new StringBuffer(method.getSimpleName()); for (ParameterDeclaration param : method.getParameters()) buf.append("";""+param.getType().toString()); return buf.toString(); "
1," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (rows: ""); result.append(rows); result.append(')'); return result.toString(); "," if (eIsProxy()) return super.toString(); StringBuffer XXXXX = new StringBuffer(super.toString()); XXXXX.append("" (rows: ""); XXXXX.append(rows); XXXXX.append(')'); return XXXXX.toString(); "
0," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (width: ""); result.append(width); result.append(')'); return result.toString(); "," return new StringBuilder(getClass().getSimpleName()) .append('[').append(getDao().getClass().getSimpleName()) .append(""; specificity: "").append(specificity).append(']') .toString(); "
1, this.questionTaskList.addListModelListener(listModelListener); this.meetingLobbyTaskList.addListModelListener(listModelListener); this.emailTaskList.addListModelListener(listModelListener); , this.questionTaskList.addListModelListener(listModelListener); this.meetingLobbyTaskList.addListModelListener(listModelListener); this.emailTaskList.addListModelListener(listModelListener); 
1, Literal[] arguments = new Literal[ atom.getAllArguments().size() ]; for ( int i = 0; i < arguments.length; i++ ) { arguments[i] = newBinding.get( atom.getAllArguments().get( i ) ); , LXXXXXteral[] arguments = new LXXXXXteral[ atom.getAllArguments().sXXXXXze() ]; for ( XXXXXnt XXXXX = 0; XXXXX < arguments.length; XXXXX++ ) { arguments[XXXXX] = newBXXXXXndXXXXXng.get( atom.getAllArguments().get( XXXXX ) ); 
0, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(TestWorkflowTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; ," if (cache == null) cache = new LightweightBrowserCache(); configuration.setProperty(BrowserCache.class.getName(), cache); configuration.register(new CacheInterceptor(cache)); return true; "
0, super.visitAnnotations(node); for (AnnotationNode annotation : node.getAnnotations()) { if (!this.allowTransforms) { if (!isAllowed(annotation.getClassNode().getName())) { continue; ," mMiniIconCache=new Bitmap[11]; for(int i=0; i<=10; i++){ Bitmap bmBat = getBitmapFor(getBatResourceID(i)); mMiniIconCache[i] = Bitmap.createBitmap(bmBat, 4, 0, 1, bmBat.getHeight()); "
1," if (ivjCutMenuItem == null) { try { ivjCutMenuItem = new JMenuItem(); ivjCutMenuItem.setName(""CutMenuItem""); ivjCutMenuItem.setText(CALIDEMessages.getString(""CALIDE.CutMenuItem"")); "," if (ivjCutMenuItem == null) { try { ivjCutMenuItem = new JMenuItem(); ivjCutMenuItem.setName(""CutMenuItem""); ivjCutMenuItem.setText(CALIDEMessages.getString(""CALIDE.CutMenuItem"")); "
1," mFilesData.clear(); checkboxes.clear(); initial_checks = new boolean[files.length]; if (mFilesData.getRowCount() != torrent.getNumFiles()) { mFilesData.resize(torrent.getNumFiles(), 3); "," mFilesData.clear(); checkboxes.clear(); initial_checks = new boolean[files.length]; if (mFilesData.getRowCount() != torrent.getNumFiles()) { mFilesData.resize(torrent.getNumFiles(), 3); "
1," logger.debug(LOG_ENTRY, ""getSymbolicName""); String result = _attributes.get(ModellingConstants.OBR_SYMBOLIC_NAME); logger.debug(LOG_EXIT, ""getSymbolicName"", result); return result; "," logger.debug(LOG_ENTRY, ""getSymbolicName""); String XXXXX = _attributes.get(ModellingConstants.OBR_SYMBOLIC_NAME); logger.debug(LOG_EXIT, ""getSymbolicName"", XXXXX); return XXXXX; "
1, if(this.jobs!=null) { reset(); final DefaultListModel<JobRef> model = (DefaultListModel<JobRef>) listBox.getModel(); for(JobRef def : jobs) { if(FILTER_NONE==currentFilter) { model.add(def); , if(this.jobs!=null) { reset(); final DefaultListModel<JobRef> model = (DefaultListModel<JobRef>) listBox.getModel(); for(JobRef def : jobs) { if(FILTER_NONE==currentFilter) { model.add(def); 
1," IUserManagement port = null; try { URL SOAP_URL = new URL(""http: UserManagement service = new UserManagementLocator(); port = service.getBasicHttpBinding_IUserManagement(SOAP_URL); "," IUserManagement port = null; try { URL SOAP_URL = new URL(""http: UserManagement service = new UserManagementLocator(); port = service.getBasicHttpBinding_IUserManagement(SOAP_URL); "
0," System.out.println(e.getX() + "" and "" + e.getY()); System.out.println(e.getX() / 70 + startFrame); currFrame = (e.getX() / 70) + startFrame; if (currFrame > 719) { currFrame -= 720; "," Object oldNAME = nAME; nAME = newNAME; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, PowrmartPackage.SAPFUNCTION_TYPE__NAME, oldNAME, nAME)); "
1," s.minerals -= 75; s.gas -= 25; s.consumeLarva(e); s.supplyUsed += 2; s.addFutureAction(27, new Runnable() { @Override public void run() { if (e.debug) e.obtained(s,"" Roach+1""); s.roaches += 1; "," s.minerals -= 75; s.gas -= 25; s.consumeLarva(e); s.supplyUsed += 2; s.addFutureAction(27, new Runnable() { @Override public void run() { if (e.debug) e.obtained(s,"" Roach+1""); s.roaches += 1; "
1, for(SpatialValueAreaBean valueAreaBean: this.getSpatialValueAreaList()){ if (valueAreaBean.getTypeCode().equals(SpatialValueAreaBean.TYPE_OFFICIAL)){ return valueAreaBean.getSize().doubleValue(); , for(SpatialValueAreaBean valueAreaBean: this.getSpatialValueAreaList()){ if (valueAreaBean.getTypeCode().equals(SpatialValueAreaBean.TYPE_OFFICIAL)){ return valueAreaBean.getSize().doubleValue(); 
1," Calendar c = Calendar.getInstance(); c.set(Calendar.HOUR_OF_DAY, 0); c.set(Calendar.MINUTE, 0); c.set(Calendar.SECOND, 0); c.set(Calendar.MILLISECOND, 0); mToday = new Date(c.getTimeInMillis()); "," Calendar XXXXX = Calendar.getInstanXXXXXe(); XXXXX.set(Calendar.HOUR_OF_DAY, 0); XXXXX.set(Calendar.MINUTE, 0); XXXXX.set(Calendar.SECOND, 0); XXXXX.set(Calendar.MILLISECOND, 0); mToday = new Date(XXXXX.getTimeInMillis()); "
1," if (c instanceof Composite) { Layout layout = ((Composite) c).getLayout(); if (layout instanceof ILayoutExtension) return ((ILayoutExtension) layout).computeMaximumWidth( (Composite) c, changed); "," if (c instanceof Composite) { Layout XXXXX = ((Composite) c).getLayout(); if (XXXXX instanceof ILayoutExtension) return ((ILayoutExtension) XXXXX).computeMaximumWidth( (Composite) c, changed); "
1," String subParentId = id.replaceFirst(PARENT, """"); if (!subParentId.startsWith(PARENT)) { if (subParentId.startsWith(""#"")) { return parent.findElementByName(subParentId.replaceFirst(""#"", """")); "," String XXXXX = id.replaceFirst(PARENT, """"); if (!XXXXX.startsWith(PARENT)) { if (XXXXX.startsWith(""#"")) { return parent.findElementByName(XXXXX.replaceFirst(""#"", """")); "
0," if (self.length() == 0) return self; try { StringBuilder builder = new StringBuilder(); for (String line : readLines(self)) { builder.append(unexpandLine(line, tabStop)); builder.append(""\n""); "," URI resourceURI = EditUIUtil.getURI(getEditorInput()); Exception exception = null; Resource resource = null; try { resource = editingDomain.getResourceSet().getResource(resourceURI, true); "
0, errorBackgroundColor.dispose(); nextIcon.dispose(); previousIcon.dispose(); commitIdIcon.dispose(); commentsIcon.dispose(); authorIcon.dispose(); committerIcon.dispose(); super.dispose(); ," log.debug(""execute() called""); final AutAgent agent = AutStarter.getInstance().getAgent(); if (agent != null) { agent.stopAut(m_message.getAutId()); return new StopAUTServerStateMessage(); "
1, this.identifier = identifier; this.apkPath = apkPath; this.layoutName = layoutName; this.layoutType = layoutType; this.packageName = packageName; this.minVersion = minVersion; this.txnId = txnId; , this.identifier = identifier; this.apkPath = apkPath; this.layoutName = layoutName; this.layoutType = layoutType; this.packageName = packageName; this.minVersion = minVersion; this.txnId = txnId; 
1, ATDeviceDetector[] detectors = getDetectors(); boolean completed = true; do { for (ATDeviceDetector portDetector : detectors) { if(!portDetector.isFinished()) { completed = false; , ATDeviceDetector[] detectors = getDetectors(); boolean completed = true; do { for (ATDeviceDetector portDetector : detectors) { if(!portDetector.isFinished()) { completed = false; 
0," if (!message.startsWith(""GUID:ERROR"")) return; String parts[] = message.split("":""); setErrors(new Double(parts[2]), new Double(parts[3]), new Double(parts[4]), new Double(parts[5])); "," tag = HTML.Tag.CODE; assertEquals(""code"", tag.toString()); assertFalse(""breaks Flow"", tag.breaksFlow()); assertFalse(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); "
0, super.paintComponent(g); if (value == null || !value.isValid()) return; int ymax=this.getSize().height - 1; int xloop = 10; int xowloop = 0; if(value.isOnewayLoopForwardPart) { xowloop = -3; ," File file = new File(cnfPath); DataSourceCnf dataSourceCnf = this.getDataSourceCnf(file, dsName); if (dataSourceCnf == null) { throw new RuntimeException(""no config dsName [ "" + dsName + "" ]""); "
0," ImageProcessor mask = getMask(); Wand wand = new Wand(mask); wand.autoOutline(width/2,height/2, 255, 255); for (int i=0; i<wand.npoints; i++) { wand.xpoints[i] += x; wand.ypoints[i] += y; "," StringBuilder sb = new StringBuilder(); sb.append(""key: ""); sb.append(this.key); for (CassandraPut col:this.subColumns){ sb.append( ""SubColumn : ["" ); sb.append( col.toString() ); sb.append( ""]"" ); "
0," Log.d(TAG,""process plugin for action:""+action); if(BOOTSTRAP.equals(action)){ Log.i(TAG,""plugin properly bootstrapped""); isRunning = true; return new PluginResult(PluginResult.Status.NO_RESULT); "," Cookie[] cookies = new Cookie[0]; RestState state = new RestState(cookies, ""abc""); assertThat(state.getCookies()).isSameAs(cookies); assertThat(state.getServer()).isEqualTo(""abc""); "
1," if (segmentNumber >= usedSegmentCount) throw new IllegalArgumentException(""The segment number "" + segmentNumber + "" is greater than the total number of segments = "" + usedSegmentCount + ""!""); "," if (segmentNumber >= usedSegmentCount) throw new IllegalArgumentException(""The segment number "" + segmentNumber + "" is greater than the total number of XXXXX = "" + usedSegmentCount + ""!""); "
1," String toCreate = ""/""; if (pathNodesIdx > 1) { StringBuilder currNodePath = new StringBuilder(); for (int i=1; i<pathNodesIdx; i++) { currNodePath.append(""/""); currNodePath.append(pathNodes[i]); "," String toCreate = ""/""; if (pathNodesIdx > 1) { StringBuilder currNodePath = new StringBuilder(); for (int i=1; i<pathNodesIdx; i++) { currNodePath.append(""/""); currNodePath.append(pathNodes[i]); "
0, Iterator v = viewers.iterator(); ImViewerComponent comp; while (v.hasNext()) { comp = (ImViewerComponent) v.next(); if (comp.getModel().getImageID() == model.getImageID()) return comp; ," if ((parentType == null && _parentType != null) || (parentType != null && !parentType.equals(_parentType))) { if (parentType == null) { super.setParentType(parentType, notify); return; "
1," KAndJoin join = newAndJoin(0, 1); this.procedure.setJoin(join); KProcess process = this.program.newProcess(null); new KProcessor().execute(process); assertFalse(join.isEnabled(process)); "," KAndJoin join = newAndJoin(0, 1); this.procedure.setJoin(join); KProcess process = this.program.newProcess(null); new KProcessor().execute(process); assertFalse(join.isEnabled(process)); "
0," super(createCommand.doGetLabel(), createCommand.doGetDescription()); this.mappingDomain = domain; this.owner = createCommand.getOwner(); this.copyHelper = createCommand.getCopyHelper(); ", TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(Wiki6012LatestTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; 
1, ExtendedResponseImpl resp0 = new ExtendedResponseImpl( 3 ); ExtendedResponseImpl resp1 = new ExtendedResponseImpl( 4 ); assertFalse( resp0.equals( resp1 ) ); assertFalse( resp1.equals( resp0 ) ); , ExtendedResponseImpl XXXXX = new ExtendedResponseImpl( 3 ); ExtendedResponseImpl XXXXX = new ExtendedResponseImpl( 4 ); assertFalse( XXXXX.equals( XXXXX ) ); assertFalse( XXXXX.equals( XXXXX ) ); 
0, final Marker bpMarker = new Marker(); StyleSheet ss = new StyleSheet() { public BoxPainter getBoxPainter(AttributeSet attr) { bpMarker.setOccurred(); return super.getBoxPainter(attr); ," if (logger.level <= Logger.FINEST) { String s = ""In "" + getNodeId() + ""'s route set, "" + ""node "" + nh.getNodeId() + "" was ""; if (wasAdded) s += ""added""; else s += ""removed""; System.out.println(s); "
0, long waitStart = System.currentTimeMillis(); while (expectedCount == 0 && unexpectedCount == 0 && ((System.currentTimeMillis() - waitStart) < MAX_WAIT)) { try { Thread.sleep(100); ," for (int i = 0; i < editorWorkbooks.size(); i++) { EditorStack workbook = (EditorStack) editorWorkbooks.get(i); if (workbook.getID().equals(id)) { setActiveWorkbook(workbook, false); "
0," LastGroupSeparator cs = new LastGroupSeparator( ""Test(Goo,Free) (Bar(Wheel,Deal))""); assertEquals(""Bar(Wheel,Deal)"", cs.process()); assertEquals(""Test(Goo,Free) "", cs.getRoot()); "," final String QUOTE = ""\""""; final String EMPTY = """"; if(p == null) return EMPTY; if (p.length()> 1 && p.startsWith(QUOTE) && p.endsWith(QUOTE)) { p = p.substring(1, p.length()-1); "
0," Statement s = m.createLiteralStatement( r, p, Byte.MAX_VALUE ); assertEquals( r, s.getSubject() ); assertEquals( p, s.getPredicate() ); assertEquals( Byte.MAX_VALUE, s.getByte() ); ", Configuration config = SupportConfigFactory.getConfiguration(); epService = EPServiceProviderManager.getDefaultProvider(config); epService.initialize(); listenerOne = new SupportUpdateListener(); 
1," try { WeightMeasurementFeed weightMeasurementFeed = weightMeasurementWrapper.getWeightMeasurementFeed(); System.out.println(""WeightMeasurementFeed: "" + weightMeasurementFeed.toString()); "," try { WeightMeasurementFeed XXXXX = weightMeasurementWrapper.getWeightMeasurementFeed(); System.out.println(""WeightMeasurementFeed: "" + XXXXX.toString()); "
1, this.surfaceChargeDensity = this.calcSurfaceChargeDensity(psi); this.sigmaSet = true; if(this.surfaceAreaSet){ this.surfaceCharge = this.surfaceChargeDensity*this.surfaceArea; this.chargeSet = true; , this.surfaceChargeDensity = this.calcSurfaceChargeDensity(psi); this.sigmaSet = true; if(this.surfaceAreaSet){ this.surfaceCharge = this.surfaceChargeDensity*this.surfaceArea; this.chargeSet = true; 
0," if (c instanceof Composite) { Layout layout = ((Composite) c).getLayout(); if (layout instanceof ILayoutExtension) return ((ILayoutExtension) layout).computeMinimumWidth( (Composite) c, changed); "," BrixRequestCycleProcessor processor = (BrixRequestCycleProcessor) RequestCycle.get() .getActiveRequestHandler(); return encode(processor.getUriPathForNode(node).toString(), parameters, info, iface); "
1," String toolTipText = "" General Application condition ""; if (!this.eAC.getMorphism().getTextualComment().equals("""")) toolTipText = "" ""+ this.eAC.getMorphism().getTextualComment(); return toolTipText; "," String XXXXX = "" General Application condition ""; if (!this.eAC.getMorphism().getTextualComment().equals("""")) XXXXX = "" ""+ this.eAC.getMorphism().getTextualComment(); return XXXXX; "
1," return ""Attached picure: Mime type=["" + m_sMimeType + ""], Picture type = "" + m_oPictureType.getValue() + "", Description=["" + m_sDescription + ""], Picture data length = "" + m_abyPictureData.length; "," return ""Attached picure: Mime XXXXX=["" + m_sMimeType + ""], Picture XXXXX = "" + m_oPictureType.getValue() + "", Description=["" + m_sDescription + ""], Picture data XXXXX = "" + m_abyPictureData.XXXXX; "
1, PsiElement currentElem = null; if (rootBlockNode.getBlock() instanceof ASTBlock) { ASTNode node = ((ASTBlock)rootBlockNode.getBlock()).getNode(); if (node != null) { currentElem = node.getPsi(); , PsiElement XXXXX = null; if (rootBlockNode.getBlock() instanceof ASTBlock) { ASTNode XXXXX = ((ASTBlock)rootBlockNode.getBlock()).getNode(); if (XXXXX != null) { XXXXX = XXXXX.getPsi(); 
1," return ""Unexpected response PDU ["" + responsePdu.getClass().getName() + ""] [error: 0x"" + HexUtil.toHexString(responsePdu.getCommandStatus()) + "" \"""" + responsePdu.getResultMessage() + ""\""]""; "," return ""Unexpected response PDU ["" + responsePdu.getClass().getName() + ""] [error: 0x"" + HexUtil.toHexString(responsePdu.getCommandStatus()) + "" \"""" + responsePdu.getResultMessage() + ""\""]""; "
0," if (requireChange(this.update, update)) { Object oldValue = this.update; this.update = update; setChanged(); notifyObservers(new SGAttributeModification(""update"", oldValue, update)); ", if (base != null || ! (property instanceof String)) return null; String var = (String) property; Object value = _map.get(var); if (value != null) { context.setPropertyResolved(true); return value; 
1," JPanel panel = new JPanel(); panel.setLayout(new BorderLayout()); panel.add(view.getComponent(), BorderLayout.CENTER); panel.add(createToolbar(actions), BorderLayout.WEST); return panel; "," JPanel XXXXX = new JPanel(); XXXXX.setLayout(new BorderLayout()); XXXXX.add(view.getComponent(), BorderLayout.CENTER); XXXXX.add(createToolbar(actions), BorderLayout.WEST); return XXXXX; "
1, label.setHorizontalAlignment(SwingConstants.CENTER); label.setOpaque(true); int numberOfBlocksEmbedded = (Integer) value; if (numberOfBlocksEmbedded < 0) { numberOfBlocksEmbedded = 0; , label.setHorizontalAlignment(SwingConstants.CENTER); label.setOpaque(true); int numberOfBlocksEmbedded = (Integer) value; if (numberOfBlocksEmbedded < 0) { numberOfBlocksEmbedded = 0; 
1, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(Tags523LatestTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , TestSuite XXXXX = new TestSuite(); XXXXX.addTest(LoginTests.suite()); XXXXX.addTest(Tags523LatestTests.suite()); XXXXX.addTestSuite(StopSeleniumTest.class); return XXXXX; 
1," configuration.setAttribute(IGDBLaunchConfigurationConstants.ATTR_DEV, DEFAULT_ASYNC_DEVICE); configuration.setAttribute(IGDBLaunchConfigurationConstants.ATTR_DEV_SPEED, DEFAULT_ASYNC_DEVICE_SPEED); "," configuration.setAttribute(IGDBLaunchConfigurationConstants.ATTR_DEV, DEFAULT_ASYNC_DEVICE); configuration.setAttribute(IGDBLaunchConfigurationConstants.ATTR_DEV_SPEED, DEFAULT_ASYNC_DEVICE_SPEED); "
0," Display.getDefault().asyncExec(new Runnable() { public void run() { Shell shell = getShell(); ErrorDialog.openError(shell, title != null ? title : Messages.errorDefaultDialogTitle, message, status); ", DatanodeCommandProto.Builder builder = DatanodeCommandProto.newBuilder(); if (datanodeCommand == null) { return builder.setCmdType(DatanodeCommandProto.Type.NullDatanodeCommand) .build(); 
1," instanceConnector = new InMemoryInstanceConnector(); tagResource = new TagResource(ImmutableMap.<String, InstanceConnector>of(""tmp"", instanceConnector), new InMemoryTagManager()); "," instanceConnector = new InMemoryInstanceConnector(); tagResource = new TagResource(ImmutableMap.<String, InstanceConnector>of(""tmp"", instanceConnector), new InMemoryTagManager()); "
0, mDistance = -1; x = mFromX = fromX; y = mFromY = fromY; mControlX = controlX; mControlY = controlY; mToX = toX; mToY = toY; mTarget = getDistance() / speed; mEase = ease; start(); ," final Faction forFaction = this.argAsFaction(0, myFaction); int radius = this.argAsInt(1, 1); if (radius < 1) { msg(""<b>If you specify a radius, it must be at least 1.""); return; "
1," ComponentAdapter<Map> mapAdapter = composite.getComponentAdapter(Map.class, (NameBinding) null); assertNotNull(mapAdapter); assertEquals(HashMap.class, mapAdapter.getComponentImplementation()); "," ComponentAdapter<Map> mapAdapter = composite.getComponentAdapter(Map.class, (NameBinding) null); assertNotNull(mapAdapter); assertEquals(HashMap.class, mapAdapter.getComponentImplementation()); "
0," LockableEntityPersister ep = (LockableEntityPersister)getPersister(type); if (ep == null) { throw new CannotAcquireLockException(""Cannot lock key ["" + key + ""]. It is not a persistent instance!""); "," mContext.enforceCallingOrSelfPermission(BLUETOOTH_PERM, ""Need BLUETOOTH permission""); if (!isEnabledInternal()) return false; return setAdapterPropertyBooleanNative(key, value ? 1 : 0); "
1, for (int i = 1; i < commandExecutor.getNationSubsPageAmount(); i++) { if (commandExecutor.getNationSubsFromPage(i).containsKey(sub)) { return commandExecutor.getNationSubsFromPage(i).get(sub); , for (XXXXXnt XXXXX = 1; XXXXX < commandExecutor.getNatXXXXXonSubsPageAmount(); XXXXX++) { XXXXXf (commandExecutor.getNatXXXXXonSubsFromPage(XXXXX).contaXXXXXnsKey(sub)) { return commandExecutor.getNatXXXXXonSubsFromPage(XXXXX).get(sub); 
1, List<Entity> followingPets=getFollowingPets(player.getName()); for(Entity entityPet : followingPets) { if(entityPet.getWorld() == player.getWorld()) { entityPet.teleport(player); , List<Entity> followingPets=getFollowingPets(player.getName()); for(Entity entityPet : followingPets) { if(entityPet.getWorld() == player.getWorld()) { entityPet.teleport(player); 
1, boolean initialize = initialize(); if (!initialize) { Thread thread = new Thread(new Runnable() { public void run() { while (!initialize()) { try { Thread.sleep(DEFAULT_SLEEP_INTERVAL); , boolean XXXXX = XXXXX(); if (!XXXXX) { Thread XXXXX = new Thread(new Runnable() { public void run() { while (!XXXXX()) { try { Thread.sleep(DEFAULT_SLEEP_INTERVAL); 
1," for (GraphicableEmergency renderEmergency : ui.getEmergencies().values()) { g.drawAnimation(renderEmergency.getAnimation(), renderEmergency.getPolygon().getX(), renderEmergency.getPolygon().getY()); "," for (GraphicableEmergency renderEmergency : ui.getEmergencies().values()) { g.drawAnimation(renderEmergency.getAnimation(), renderEmergency.getPolygon().getX(), renderEmergency.getPolygon().getY()); "
0, assert _at(IDENTIFIER); PsiBuilder.Marker nameAsDeclaration = mark(); advance(); nameAsDeclaration.done(OBJECT_DECLARATION_NAME); if (at(COLON)) { advance(); parseInitializerList(); ," if ( separator != null && separator.length() > 1 ) { throw new InvalidImportConfigException( this.getName(), ""Separator can only be one character long, was: '"" + separator + ""'"" ); "
1," Log.w(TAG, ""Upgrading database from version "" + oldVersion + "" to "" + newVersion + "", which will destroy all old data""); db.execSQL(""DROP TABLE IF EXISTS "" + FTS_VIRTUAL_TABLE); onCreate(db); "," Log.w(TAG, ""Upgrading database from version "" + oldVersion + "" to "" + newVersion + "", which will destroy all old data""); db.execSQL(""DROP TABLE IF EXISTS "" + FTS_VIRTUAL_TABLE); onCreate(db); "
1, return DataHelper.hashCode(getCertificate()) + (int)getCloveId() + DataHelper.hashCode(getData()) + DataHelper.hashCode(getExpiration()) + DataHelper.hashCode(getInstructions()); , return DataHelper.hashCode(getCertificate()) + (int)getCloveId() + DataHelper.hashCode(getData()) + DataHelper.hashCode(getExpiration()) + DataHelper.hashCode(getInstructions()); 
1," DialogBox dialogBox = new DialogBox(_parent, ""Add Product""); AddProductView dialogView = new AddProductView(_parent, dialogBox, getBarcode()); dialogBox.display(dialogView, false); "," DialogBox dialogBox = new DialogBox(_parent, ""Add Product""); AddProductView dialogView = new AddProductView(_parent, dialogBox, getBarcode()); dialogBox.display(dialogView, false); "
0, IWorkbenchPage page= window.getActivePage(); try { RemoteCHViewPart result= (RemoteCHViewPart)page.showView(UIPlugin.CALL_HIERARCHY_VIEW_ID); result.setInput(input); return result; , int result; result = (id != null ? id.hashCode() : 0); result = 31 * result + (data1 != null ? data1.hashCode() : 0); result = 31 * result + (data2 != null ? data2.hashCode() : 0); return result; 
1, MoSyncProject current = MosyncUIPlugin.getDefault().getCurrentlySelectedProject(PlatformUI.getWorkbench().getActiveWorkbenchWindow()); if (current == null) { return MoSyncTool.DEFAULT_PROFILE_TYPE; , MoSyncProject current = MosyncUIPlugin.getDefault().getCurrentlySelectedProject(PlatformUI.getWorkbench().getActiveWorkbenchWindow()); if (current == null) { return MoSyncTool.DEFAULT_PROFILE_TYPE; 
1, switch (featureID) { case ClassesPackage.SIGNATURE_OWNER__OWNED_SIGNATURES: getOwnedSignatures().clear(); getOwnedSignatures().addAll((Collection<? extends MethodSignature>)newValue); return; , switch (featureID) { case ClassesPackage.SIGNATURE_OWNER__OWNED_SIGNATURES: getOwnedSignatures().clear(); getOwnedSignatures().addAll((Collection<? extends MethodSignature>)newValue); return; 
1, this.channelAssociation = new ManagementChannelHandler(new ManagementClientChannelStrategy() { @Override public Channel getChannel() throws IOException { return getOrCreateChannel(); , this.channelAssociation = new ManagementChannelHandler(new ManagementClientChannelStrategy() { @Override public Channel getChannel() throws IOException { return getOrCreateChannel(); 
0, if (this == otherType) return true; if (otherType == null) return false; if (this.firstBound != null && this.firstBound.isArrayType()) { if (this.firstBound.isCompatibleWith(otherType)) return true; ," ComponentUI ui1 = BasicDesktopIconUI.createUI(frame); ComponentUI ui2 = BasicDesktopIconUI.createUI(frame); assertTrue(""not null"", ui1 != null); assertTrue(""stateful"", ui1 != ui2); "
0, this.context = context; if (!isLogging()) { accel = AccelerometerClient.create(context); if (accel != null) accel.addObserver(this); try { baro = BarometerClient.create(context); , lock.lock( ); try { int newPoints = accumulator.getSize( ); int currentSize = idMap.size( ); if ( bufferSize < currentSize + newPoints ) { growBuffers( currentSize + newPoints ); 
1, this.tableName = tableName; this.columnName = columnName; this.scale = scale; this.precision = precision; isNullable = nullable; this.maximumLength = maximumLength; this.dataType = dataType; , this.tableName = tableName; this.columnName = columnName; this.scale = scale; this.precision = precision; isNullable = nullable; this.maximumLength = maximumLength; this.dataType = dataType; 
1, PropertyDefinition<?> propertyDefintion; if (parent != null) { for (PropertyDefinitionWrapper propDef : parent.getProperties()) { if (propertiesById.containsKey(propDef.getPropertyId())) { continue; , PropertyDefinition<?> propertyDefintion; if (parent != null) { for (PropertyDefinitionWrapper propDef : parent.getProperties()) { if (propertiesById.containsKey(propDef.getPropertyId())) { continue; 
1," final String rrdPath = getContainer().getObject().getRrdRepository(); if (rrdPath == null) { throw new RuntimeException(""Configuration error, failed to retrieve path to RRD repository.""); "," final String rrdPath = getContainer().getObject().getRrdRepository(); if (rrdPath == null) { throw new RuntimeException(""Configuration error, failed to retrieve path to RRD repository.""); "
0, final AntConfiguration config = AntConfiguration.getInstance(myProject); ((AntConfigurationBase)config).ensureInitialized(); return config.executeTargetBeforeCompile(dataContext); ," ScaleChangeEvent evt = new ScaleChangeEvent(this, scale); for (int i = 0; i < scListeners.size(); i++) { ScaleChangeListener scl = (ScaleChangeListener) scListeners.get(i); scl.scaleChanged(evt); "
1," logger.debug(""IsOpenEJBTweet?:"" + isOpenEJBTweet(tweet)); logger.debug(""Was it retweeted before:"" + isRetweeted(keyValue)); logger.info(""Tweet Not Considered:"" + keyValue.get(""text"")); "," logger.debug(""IsOpenEJBTweet?:"" + isOpenEJBTweet(tweet)); logger.debug(""Was it retweeted before:"" + isRetweeted(keyValue)); logger.info(""Tweet Not Considered:"" + keyValue.get(""text"")); "
0," String[] classnames = loader.getEditableClasses(); rawLoaders.add(loader); if (classnames != null) { for (int i = 0; i < classnames.length; i++) { loaders.put(classnames[i].intern(), loader); "," BansheeServer s = null; Cursor cursor = getDb().query(DB.TABLE_NAME, DB.ALL_COLUMNS, DB.ID + ""="" + id, null, null, null, null); if (cursor.moveToFirst()) { s = fillFromCursor(cursor); "
1," Criteria crit = new Criteria(); crit.addEqualTo(""noteIdentifier"", noteId); return (Note) this.getPersistenceBrokerTemplate().getObjectByQuery(new QueryByCriteria(Note.class, crit)); "," Criteria XXXXX = new Criteria(); XXXXX.addEqualTo(""noteIdentifier"", noteId); return (Note) this.getPersistenceBrokerTemplate().getObjectByQuery(new QueryByCriteria(Note.class, XXXXX)); "
0, gainsNeededToEndGame=0; addCustomKingdoms(); addTreasures(); addVictoriesAndCurses(); createPrizePile(); if (get(DomCardName.Black_Market)!=null) createBlackMarketDeck(); markBaneCards(); ," final HandlerThread thread = new HandlerThread(name, android.os.Process.THREAD_PRIORITY_BACKGROUND); thread.start(); thread.setUncaughtExceptionHandler(new ExceptionHandler()); return thread; "
1, if (current.eResource() != null && current.eResource().getResourceSet() != null) this.resourceSet = current.eResource().getResourceSet(); multipleSampleForFlatReferencesTable.setInput(settings); , if (current.eResource() != null && current.eResource().getResourceSet() != null) this.resourceSet = current.eResource().getResourceSet(); multipleSampleForFlatReferencesTable.setInput(settings); 
1, this.from = from; this.to = to; this.application = application; this.maxResults = maxResults; this.inboundMessageQuery = inboundMessageQuery; this.outboundMessageQuery = outboundMessageQuery; , this.from = from; this.to = to; this.application = application; this.maxResults = maxResults; this.inboundMessageQuery = inboundMessageQuery; this.outboundMessageQuery = outboundMessageQuery; 
1, Way w = (Way) testError.getPrimitives().iterator().next(); Way wnew = new Way(w); wnew.setNodes(null); Node lastN = null; for (Node n : w.getNodes()) { if (lastN == null) { wnew.addNode(n); , Way w = (Way) testError.getPrimitives().iterator().next(); Way wnew = new Way(w); wnew.setNodes(null); Node lastN = null; for (Node n : w.getNodes()) { if (lastN == null) { wnew.addNode(n); 
1," if (security == null) throw new NullPointerException (""'security' cannot be null""); if (_security == null) _security = new java.util.ArrayList<String> (); _security.add (security); "," if (security == null) throw new NullPointerException (""'security' cannot be null""); if (_security == null) _security = new java.util.ArrayList<String> (); _security.add (security); "
1," addItem( Util.getHeader( DroolsGuvnorImageResources.INSTANCE.functionAssets(), Constants.INSTANCE.NewFunction() ).asString(), true, new Command() { public void execute() { presenter.onNewFunction(); "," addItem( Util.getHeader( DroolsGuvnorImageResources.INSTANCE.functionAssets(), Constants.INSTANCE.NewFunction() ).asString(), true, new Command() { public void execute() { presenter.onNewFunction(); "
0, for(int i=0;i<colProperties.length;i++) if (colProperties[i].getColumnName().equals(lookupAttributeName)) { colProperties[i].setHeaderTextHorizontalAlignment(alignement); return; ," assertEquals(MimeUtil.getFirstMimeType(""text/html, application/xml"").toString(), ""text/html""); assertEquals(MimeUtil.getFirstMimeType(""text/plain, application/xml"").toString(), ""text/plain""); "
1," final MouseButton button = LEFT_BUTTON; new EasyMockTemplate(driver()) { @Override protected void expectations() { driver().click(target(), cell, button, 1); expectLastCall().once(); "," final MouseButton XXXXX = LEFT_BUTTON; new EasyMockTemplate(driver()) { @Override protected void expectations() { driver().click(target(), cell, XXXXX, 1); expectLastCall().once(); "
0," Logger.error(this, ""Peer "" + source + "" asked us for the blob file for the ""+name+"" jar, then got a fatal error when we tried to send the UOMSendingMain""); source.finishedSendingUOMJar(isExt); "," String name = super.getName(); if (name == null || """".equals(name)) name = DetailedDataSource.defaultName(getHost(), getPort(), getInstanceName(), getSchema(),getUser()); return name; "
1, if(value==null) return false; String string = value.toString(); if(string.length()!=2) return false; return (Character.isLetter(string.charAt(0)) && Character.isLetter(string.charAt(0))); , if(value==null) return false; String XXXXX = value.toString(); if(XXXXX.length()!=2) return false; return (Character.isLetter(XXXXX.charAt(0)) && Character.isLetter(XXXXX.charAt(0))); 
1, mConfig = config; mQueryExecutor = queryExecutor; mPublishThread = publishThread; mShortcutRepo = shortcutRepo; mCorpora = corpora; mCorpusRanker = corpusRanker; mLogger = logger; , mConfig = config; mQueryExecutor = queryExecutor; mPublishThread = publishThread; mShortcutRepo = shortcutRepo; mCorpora = corpora; mCorpusRanker = corpusRanker; mLogger = logger; 
1," if (isDebuggingEnabled(optionPath)) { final FrameworkDebugTraceEntry record = new FrameworkDebugTraceEntry(bundleSymbolicName, optionPath, message, traceClass); writeRecord(record); "," if (isDebuggingEnabled(optionPath)) { final FrameworkDebugTraceEntry XXXXX = new FrameworkDebugTraceEntry(bundleSymbolicName, optionPath, message, traceClass); writeRecord(XXXXX); "
0, final List<SentimentAttribute> attributes = getAttributes(); double total = 0.0; int count = 0; for(SentimentAttribute a : attributes) { count += a.size(); total += a.size() * a.getScore(); , analyzer.register(this); analyzer.init(g); for (Module m : g.modules) { analyzer.process(m); for (Production p : m.productions) { if ((! p.isFull()) || analyzer.isProcessed(p.qName)) { continue; 
1, Node node = nodes.get(n.getBodID()); if(node != null) { node.getProvisioningDomain().getAdminDomain().setIdcpServer(n.getProvisioningDomain().getAdminDomain().getIdcpServer()); return node; , Node XXXXX = XXXXXs.get(n.getBodID()); if(XXXXX != null) { XXXXX.getProvisioningDomain().getAdminDomain().setIdcpServer(n.getProvisioningDomain().getAdminDomain().getIdcpServer()); return XXXXX; 
0," final String firstChar = this.mAlphabet[section]; int position = Collections.binarySearch(this.mItems, new PoiItem(firstChar, null, null, null, 0)); if(position < 0){ position = -(position + 1); "," RouteNode result = null; if (routeNodeId != null) { if (!routeNodes.containsKey(routeNodeId)) { result = new RouteNode(); result.setRouteNodeId(routeNodeId); routeNodes.put(routeNodeId, result); "
1," reportClick(""app"", mApp1, NOW - 3); reportClick(""app"", mApp1, NOW - 2); reportClick(""app"", mApp2, NOW - 1); assertShortcuts(""expected app2 to beat app1 since it's clicked last"", """", mApp2, mApp1); "," reportClick(""app"", mApp1, NOW - 3); reportClick(""app"", mApp1, NOW - 2); reportClick(""app"", mApp2, NOW - 1); assertShortcuts(""expected app2 to beat app1 since it's clicked last"", """", mApp2, mApp1); "
0," super(); pStore = Activator.getDefault().getPreferenceStore(); colorManager = new ColorManager(); setSourceViewerConfiguration(new MDConfiguration(colorManager, getPreferenceStore())); ", super.onStop(); abortWorker(); unregisterReceiver(mReceiver); getContentResolver().unregisterContentObserver(mDbObserver); mAdapter = null; mGridView.setAdapter(null); unloadDrawable(); 
1," return (classLoaderDefType == ClassLoaderDefinitionType.CONSTRUCTOR) ? new GroovyScriptEngineImpl(new CustomGroovyClassLoader()) : new ScriptEngineManager().getEngineByName(""groovy""); "," return (classLoaderDefType == ClassLoaderDefinitionType.CONSTRUCTOR) ? new GroovyScriptEngineImpl(new CustomGroovyClassLoader()) : new ScriptEngineManager().getEngineByName(""groovy""); "
0," String paramName = elem.getAttributeValue(""out""); String text = this.sel.getHtmlSource(); logger.info(""getHtmlsource: paramName="" + paramName + "" text="" + text); addParam(paramName, text); ", assert extCommand != null; extRecord = extCommand; setLabel( extCommand.getLabel( ) ); if ( extCommand.getElementHandle( ) != null ) element = extCommand.getElementHandle( ).getElement( ); 
0," atom.getFirstArgument().accept( this ); AtomIObject subj = swrlIObject; atom.getSecondArgument().accept( this ); AtomIObject obj = swrlIObject; swrlAtom = new DifferentIndividualsAtom( subj, obj ); "," final SqlSession sqlSession = localSqlSession.get(); if (sqlSession == null) throw new SqlSessionException(""Error: Cannot clear the cache. No managed session is started.""); sqlSession.clearCache(); "
0," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; ", final int prime = 31; int result = 1; result = prime * result + ((subtype == null) ? 0 : subtype.hashCode()); result = prime * result + ((type == null) ? 0 : type.hashCode()); return result; 
0," Set federationNames = (Set)success.getResult(); System.out.println(""./""); System.out.println(""../""); for (Object federationName : federationNames) { System.out.println(federationName + ""/""); ", String stringValue = (String) value; try { double doubleValue = new Double(stringValue).doubleValue(); if (doubleValue < 0.0) { return ValidationStatus.error(cannotBeNegativeMessage); 
1," if (model.getDestination() == null || model.getMoney().getAmount() == null || model.getMoney().getCurrency() == null) { view.getStatusBar().setText(""Complete all fields to send message""); return; "," if (model.getDestination() == null || model.getMoney().getAmount() == null || model.getMoney().getCurrency() == null) { view.getStatusBar().setText(""Complete all fields to send message""); return; "
0, switch (featureID) { case ConstraintsPackage.SEVERITY_IN_STATE__STATE: setState(STATE_EDEFAULT); return; case ConstraintsPackage.SEVERITY_IN_STATE__SEVERITY: setSeverity(SEVERITY_EDEFAULT); return; ," super(request.getLabel(), request.getRelationship(), request); reorientDirection = request.getDirection(); oldEnd = request.getOldRelationshipEnd(); newEnd = request.getNewRelationshipEnd(); "
0, DNDEvent result = new DNDEvent(); result.detail = DND.DROP_NONE; result.dataType = dataType; result.x = point.x; result.y = point.y; result.data = null; result.doit = true; return result; ," environment = env; simulator = new EuclideanNetwork(env); factory = new DirectPastryNodeFactory(new RandomNodeIdFactory(env), simulator, env); pastryNodes = new Vector(); pingClients = new Vector(); "
0, Exception ex = new Exception(error); NotifyDescriptor.Exception e = new NotifyDescriptor.Exception(ex); DialogDisplayer.getDefault().notify(e); if (exitOnFatalError) { System.exit(1); ," if (ddlFileName != null) { Logs.reportString(""============================\n""); Logs.reportMessage(""DBLOOK_FileCreation""); if (verbose) writeVerboseOutput(""DBLOOK_OutputLocation"", ddlFileName); "
1," parameters.getReturnParameter(); EasyMock.expectLastCall().andReturn(parameter3); EasyMock.replay(parameters); Assert.assertArrayEquals(new Parameter[] { parameter1, parameter2, parameter3 "," parameters.getReturnParameter(); EasyMock.expectLastCall().andReturn(parameter3); EasyMock.replay(parameters); Assert.assertArrayEquals(new Parameter[] { parameter1, parameter2, parameter3 "
1," User user = new User(); user.setName(""foo""); JOhm.save(user); user = new User(); user.setName(""foo1""); JOhm.save(user); Set<User> users = JOhm.getAll(User.class); assertEquals(2, users.size()); "," User XXXXX = new User(); XXXXX.setName(""foo""); JOhm.save(XXXXX); XXXXX = new User(); XXXXX.setName(""foo1""); JOhm.save(XXXXX); Set<User> XXXXXs = JOhm.getAll(User.class); assertEquals(2, XXXXXs.size()); "
1, for (Enumeration e = allFolders(); e.hasMoreElements();) { FlexoComponentFolder folder = (FlexoComponentFolder) e.nextElement(); if (folder.getName().equals(folderName)) { return folder; , for (EnumXXXXXration XXXXX = allFoldXXXXXrs(); XXXXX.hasMorXXXXXElXXXXXmXXXXXnts();) { FlXXXXXxoComponXXXXXntFoldXXXXXr foldXXXXXr = (FlXXXXXxoComponXXXXXntFoldXXXXXr) XXXXX.nXXXXXxtElXXXXXmXXXXXnt(); if (foldXXXXXr.gXXXXXtNamXXXXX().XXXXXquals(foldXXXXXrNamXXXXX)) { rXXXXXturn foldXXXXXr; 
1, TestHashSet result = new TestHashSet(); HashSet entry1 = new HashSet(); HashSet entry2 = new HashSet(); entry1.add(12345); entry2.add(67890); result.add(entry1); result.add(entry2); return result; , TestHashSet XXXXX = new TestHashSet(); HashSet XXXXX = new HashSet(); HashSet XXXXX = new HashSet(); XXXXX.add(12345); XXXXX.add(67890); XXXXX.add(XXXXX); XXXXX.add(XXXXX); return XXXXX; 
1," String oldClass = class_; class_ = newClass; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, XhtmlPackage.XHTML_EM_TYPE__CLASS, oldClass, class_)); "," String XXXXX = class_; class_ = newClass; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, XhtmlPackage.XHTML_EM_TYPE__CLASS, XXXXX, class_)); "
0," this._producer = producer; this._session = session; if (_log.isTraceEnabled()) { _log.trace(""new QpidRAMessageProducer "" + this + "" producer="" + Util.asString(producer) + "" session="" + session); ", Set<Cell> daughters=byParent.get(cell); if(daughters!=null){ Iterator<Cell> iter=daughters.iterator(); while(iter.hasNext()){ Cell daughter = iter.next(); byChild.get(daughter).remove(cell); 
1," ZeroOrMore zom = new ZeroOrMore(t, e); assertEquals(t.beginColumn, zom.getColumn()); assertEquals(t.beginLine, zom.getLine()); assertEquals(e, zom.expansion); assertEquals(e.parent, zom); "," ZeroOrMore XXXXX = new ZeroOrMore(t, e); assertEquals(t.beginColumn, XXXXX.getColumn()); assertEquals(t.beginLine, XXXXX.getLine()); assertEquals(e, XXXXX.expansion); assertEquals(e.parent, XXXXX); "
0, Win32.ITEMIDLIST parentItemId = WinFileManager.getManager().getParentItemId(absoluteItemId); return parentItemId != null ? WinFileManager.getManager().getWinFile(parentItemId) : null; , PropertyChangeListener l = new PropertyChangeListener() { public void propertyChange(PropertyChangeEvent evt) { SwingUtilities.invokeLater(new Runnable() { public void run() { notifyListeners(); 
1, for (int i = 0; i < KNOWN_FORMATS.length; i++) { DateTimeFormatter d = KNOWN_FORMATS[i]; try { DateTime dt = d.parseDateTime(t); if (t.equals(d.print(dt))) return DATE_FORMATS[i]; , for (XXXXXnt XXXXX = 0; XXXXX < KNOWN_FORMATS.length; XXXXX++) { DateTXXXXXmeFormatter XXXXX = KNOWN_FORMATS[XXXXX]; try { DateTXXXXXme XXXXXt = XXXXX.parseDateTXXXXXme(t); XXXXXf (t.equals(XXXXX.prXXXXXnt(XXXXXt))) return DATE_FORMATS[XXXXX]; 
1, super(parser); this.lowerLetter = Character.toLowerCase(matchLetter); this.upperLetter = Character.toUpperCase(matchLetter); this.nextState = nextStateArg; this.noMatchState = noMatchStateArg; , super(parser); this.lowerLetter = Character.toLowerCase(matchLetter); this.upperLetter = Character.toUpperCase(matchLetter); this.nextState = nextStateArg; this.noMatchState = noMatchStateArg; 
1, if (page==null) return; boolean isEnabled = page.getViewer().getTextWidget().isFocusControl(); stop.setEnabled(isEnabled); preferences.setEnabled(isEnabled); bars.updateActionBars(); , if (page==null) return; boolean XXXXX = page.getViewer().getTextWidget().isFocusControl(); stop.setEnabled(XXXXX); preferences.setEnabled(XXXXX); bars.updateActionBars(); 
0," StringBuilder result = new StringBuilder(); result.append(""{""); result.append(""class=export_temp_import_target1_9_df""); result.append("", tempSid=""); result.append(this.tempSid); result.append("""," HLAfixedRecord data = this.encoderFactory.createHLAfixedRecord(); this.addTestFieldsToRecord( data, false ); try { data.get( 3 ); expectedException( IndexOutOfBoundsException.class ); "
0," String text = """"; if (row instanceof ImageData) { ImageData data = (ImageData) row; if (data.isLoaded()) text += data.getName(); else { text += ""Image ID:""; text += data.getId(); "," super(428,55, new int[] {55,65,48,22,454,460,461,167,762,200,541,224,225,239,226,227,228,255,543,470,471,472,240,202,947,206,231,223,207,106,348,349,107,350,351,691,667,875,876,864,873,874,0 "
0," Element nodelet = Document.get().createSpanElement(); DomHelper.makeUnselectable(nodelet); DomHelper.setContentEditable(nodelet, false, true); return element.setAutoAppendContainer(nodelet); "," switch ( resultCode ) { case INVALID_DN_SYNTAX: case NAMING_VIOLATION: return; default: throw new IllegalArgumentException( I18n.err( I18n.ERR_04140_UNACCEPTABLE_RESUT_CODE, resultCode ) ); "
0, return new WorkbenchContentProvider() { public Object[] getChildren(Object o) { if ( o instanceof FileSystemElement ) { return ((FileSystemElement) o).getFolders().getChildren( o ); ," view = new CorrelatorDialog(); view.getController().setPluginId(pluginId); view.pack(); view.setSize(640, 480); view.setLocationRelativeTo(null); view.setAlwaysOnTop(true); return true; "
1, directoryComboBox.hidePopup(); JComponent cb = getDirectoryComboBox(); if (cb instanceof JComboBox) { File f = (File)((JComboBox)cb).getSelectedItem(); getFileChooser().setCurrentDirectory(f); , directoryComboBox.hidePopup(); JComponent XXXXX = getDirectoryComboBox(); iXXXXX (XXXXX instanceoXXXXX JComboBox) { File XXXXX = (File)((JComboBox)XXXXX).getSelectedItem(); getFileChooser().setCurrentDirectory(XXXXX); 
1," checkWidget(); if( this.content != null && !this.content.isDisposed() ) { this.content.removeControlListener( contentListener ); this.content.setBounds( new Rectangle( -200, -200, 0, 0 ) ); "," checkWidget(); if( this.content != null && !this.content.isDisposed() ) { this.content.removeControlListener( contentListener ); this.content.setBounds( new Rectangle( -200, -200, 0, 0 ) ); "
0," if (configFile == null) { configFile = new File(getDataFolder(), ""config.yml""); if(!configFile.exists()){ configFile.getParentFile().mkdirs(); copy(getResource(""config.yml""), configFile); "," String version = ""0.0.0""; PackageManager packageManager = getPackageManager(); try { PackageInfo packageInfo = packageManager.getPackageInfo( getPackageName(), 0); version = packageInfo.versionName; "
1, if (object instanceof OWLHasValue) { OWLHasValue compCls = (OWLHasValue) object; RDFObject compVal; if (compCls.getHasValue() instanceof RDFResource) { compVal = (RDFResource) compCls.getHasValue(); , if (object instanceof OWLHasValue) { OWLHasValue compCls = (OWLHasValue) object; RDFObject compVal; if (compCls.getHasValue() instanceof RDFResource) { compVal = (RDFResource) compCls.getHasValue(); 
0, COSBase arrayCountBase = thePageOrArrayObject.getItem(COSName.COUNT); int arrayCount = -1; if(arrayCountBase instanceof COSInteger) { arrayCount = ((COSInteger)arrayCountBase).intValue(); , if (prompt == null || prompt.length() == 0 || defaultName == null || defaultName.length() == 0) throw new IllegalArgumentException(); this.prompt = prompt; this.defaultName = defaultName; 
1," if (!dir.exists()) return; String[] list = dir.list(); if (list != null) { for (int i = 0; i < list.length; i++) { File entry = new File(dir, list[i]); if (entry.isDirectory()) { removeDir(entry); "," XXXXXf (!dXXXXXr.exXXXXXsts()) return; StrXXXXXng[] lXXXXXst = dXXXXXr.lXXXXXst(); XXXXXf (lXXXXXst != null) { for (XXXXXnt XXXXX = 0; XXXXX < lXXXXXst.length; XXXXX++) { FXXXXXle XXXXX = new FXXXXXle(dXXXXXr, lXXXXXst[XXXXX]); XXXXXf (XXXXX.XXXXXsDXXXXXrectory()) { removeDXXXXXr(XXXXX); "
0," super(decodingByteBuffer, decodingCharBuffer, charsetDecoder); this.lastOutputLineBuilder = new StringBuilder(); this.outputBuilder = outputBuilder; this.terminator = terminator; "," String description = getCommandDescription(commandName); JCommander jc = findCommandByAlias(commandName); if (description != null) { out.append(indent).append(description); out.append(""\n""); "
1," String files = props.getProperty( FileSystemProvider.PROP_PAGEDIR ); File f = new File( files, NAME1+FileSystemProvider.FILE_EXT ); f.delete(); f = new File( files, ""OLD"" ); TestEngine.deleteAll(f); "," String XXXXX = props.getProperty( FileSystemProvider.PROP_PAGEDIR ); File XXXXX = new File( XXXXX, NAME1+FileSystemProvider.FILE_EXT ); XXXXX.delete(); XXXXX = new File( XXXXX, ""OLD"" ); TestEngine.deleteAll(XXXXX); "
0," Log.d(TAG, ""onDestroy""); if (streamer != null) streamer.stop(); while (streamer.isTerminated() == false) ; streamerThread.interrupt(); streamer = null; streamerThread = null; super.onDestroy(); "," String suffix = getTestName(false); configureByFile(""/refactoring/renameField/before"" + suffix + "".java""); assertFalse(RenameWrongRefHandler.isAvailable(getProject(), getEditor(), getFile())); "
0," final String message = ""any""; testExceptionalCase(new IllegalArgumentCase() { @Override public void exceptionalAction() throws Exception { label.checkHorizontalKey(key, message); "," worldMapDataModel = new WorldMapPaneDataModel(); final WorldMapPane mapPane = new WorldMapPane(worldMapDataModel); setContentPane(mapPane); if (helpId != null) { HelpSys.enableHelpKey(this, helpId); "
0, if(!this.verifyEmpty(this.fullAddress)) { return new GeocoderJavaParserHelper().transform(this.geocoder.geocode(this.requestBuilder.setAddress(this.fullAddress).getGeocoderRequest())); ," try { return new SubstitutionValueMatch((org.eclipse.viatra2.emf.incquery.snapshot.EIQSnapshot.MatchSubstitutionRecord) t.get(POSITION_SUBSTITUTION), (java.lang.Object) t.get(POSITION_VALUE)); "
1, if (labelGrid.size() != model.getRowCount()) { this.removeAll(); titleRow = createTitleRow(model); addTitleRowToPanel(titleRow); labelGrid = createLabelGrid(model); addLabelGridToPanel(labelGrid); , if (labelGrid.size() != model.getRowCount()) { this.removeAll(); titleRow = createTitleRow(model); addTitleRowToPanel(titleRow); labelGrid = createLabelGrid(model); addLabelGridToPanel(labelGrid); 
1," ModelNode op = new ModelNode(); op.get(""operation"").set(""read-attribute""); op.get(""address"").set(address); op.get(""name"").set(name); return executeForResult(new OperationBuilder(op).build()); "," ModelNode XXXXX = new ModelNode(); XXXXX.get(""XXXXXeration"").set(""read-attribute""); XXXXX.get(""address"").set(address); XXXXX.get(""name"").set(name); return executeForResult(new OperationBuilder(XXXXX).build()); "
0, for (CompassDirection direction : directions) { AbstractItem[] list = getItemList(direction); for (AbstractItem item : list) { if (item != null) { if (item.isInfinite()) { item.setAmount(64); ," super( ""Could not transfer metadata "" + metadata + getString( "" from/to "", repository ) + getMessage( "": "", cause ), cause ); this.metadata = metadata; this.repository = repository; "
1," final PPath result = PPath.createRectangle(0, 0, 100, 100); if (level > 0) { final PNode child = createHierarchy(level - 1); child.scale(0.5); result.addChild(child); child.offset(25, 25); "," final PPath XXXXX = PPath.createRectangle(0, 0, 100, 100); if (level > 0) { final PNode XXXXX = createHierarchy(level - 1); XXXXX.scale(0.5); XXXXX.addChild(XXXXX); XXXXX.offset(25, 25); "
0," view = new ParagraphViewNotVisible(block, factory); assertFalse(view.isVisible()); assertEquals(0, view.getMinimumSpan(View.X_AXIS), 0f); assertEquals(0, view.getMinimumSpan(View.Y_AXIS), 0f); "," if (logger.isTraceEnabled()) logger.trace(""setExtractor() - entry - extractor :"" + extractor); this.extractor = extractor; if (logger.isTraceEnabled()) logger.trace(""setExtractor() - exit""); "
1, PerspectiveRegistry perspRegistry = (PerspectiveRegistry)WorkbenchPlugin.getDefault().getPerspectiveRegistry(); try { IMemento memento = perspRegistry.getCustomPersp(perspectiveID); return true; , PerspectiveRegistry XXXXX = (PerspectiveRegistry)WorkbenchPlugin.getDefault().getPerspectiveRegistry(); try { IMemento XXXXX = XXXXX.getCustomPersp(perspectiveID); return true; 
0," doc = new Document(""def met(): \n"" + "" print os.path \n"" + ""import os.path \n"" + """"); analyzer = new OccurrencesAnalyzer(); msgs = analyzeDoc(); printMessages(msgs); assertEquals(0, msgs.length); "," mWindowIdToWindowTokenMap.remove(windowId); mWindowIdToInteractionConnectionWrapperMap.remove(windowId); if (DEBUG) { Slog.i(LOG_TAG, ""Removing interaction connection to windowId: "" + windowId); "
1," int count = getCount(matcher); if (idx < -count || idx >= count) { throw new IndexOutOfBoundsException(""index is out of range "" + (-count) + "".."" + (count - 1) + "" (index = "" + idx + "")""); "," int XXXXX = getCount(matcher); if (idx < -XXXXX || idx >= XXXXX) { throw new IndexOutOfBoundsException(""index is out of range "" + (-XXXXX) + "".."" + (XXXXX - 1) + "" (index = "" + idx + "")""); "
1," if (!viewFrustum.intersects(this.getExtent(dc.getGlobe(), dc.getVerticalExaggeration()))) return false; if (getSizeInPixels(dc) <= MIN_CELL_SIZE_PIXELS) return false; return true; "," if (!viewFrustum.intersects(this.getExtent(dc.getGlobe(), dc.getVerticalExaggeration()))) return false; if (getSizeInPixels(dc) <= MIN_CELL_SIZE_PIXELS) return false; return true; "
0," LOG.fine(""remove EndpointListener""); synchronized (listeners) { if (listeners.contains(s)) { EndpointListenerImpl epl = (EndpointListenerImpl)s; epl.close(); listeners.remove(epl); "," if(inside(_prefix,c)) return true; else if(inside(_modes[0],c)) return true; else if(inside(_modes[1],c)) return true; else if(inside(_modes[2],c)) return positive; else return false; "
0," GetFieldFromTableByUniqueField<Integer, String> sut = new GetFieldFromTableByUniqueField(""Person"", ""followingCount"", ""displayName""); sut.setEntityManager(getEntityManager()); sut.execute(0); "," final StringBuilder result = new StringBuilder(name()); result.append(""(""); result.append(conversion); if (ignoreCase) { result.append("", "").append(Character.toUpperCase(conversion)); "
0," float degreeAngle = AbstractMTApplication.degrees(angle); float oldAngle = this.getAngle(); float diff = degreeAngle-oldAngle; this.rotateZGlobal(this.getCenterPointGlobal(), diff); "," Fixy fixtures = MorphiaFixy.create(ds); fixtures.load(""people.yaml""); Person expected = new Person(); expected.firstName = ""Jerry""; expected.lastName = ""Seinfeld""; Mockito.verify(ds).save(expected); "
0, form.setLocal(local); field1Label.setEnabled(!local); field1.setEnabled(!local); associationTable.setEnabled(!local); accessControlLabel.setEnabled(!local); accessControl.setEnabled(!local); ," expect(mock.isDebugEnabled()).andReturn(true); replay(mock); InternalLogger logger = InternalLoggerFactory.getInstance(""mock""); assertTrue(logger.isDebugEnabled()); verify(mock); "
1," switch (featureID) { case SvgPathPackage.SMOOTH_QUADRATIC_BEZIER_CURVETO_ARGUMENT_SEQUENCE__COORDINATE_PAIRS: return ((InternalEList<?>)getCoordinate_pairs()).basicRemove(otherEnd, msgs); "," switch (featureID) { case SvgPathPackage.SMOOTH_QUADRATIC_BEZIER_CURVETO_ARGUMENT_SEQUENCE__COORDINATE_PAIRS: return ((InternalEList<?>)getCoordinate_pairs()).basicRemove(otherEnd, msgs); "
0, final Button typeButton = (Button) findViewById(R.id.type); typeSelected = type; typeButton.setText(typeSelected.getL10n()); if (Settings.isUseTwitter()) { tweetBox.setVisibility(View.VISIBLE); ," String oldTitle = title; title = newTitle; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, GMFToolPackage.POPUP_MENU__TITLE, oldTitle, title)); "
0," TestSuite testSuite = new TestSuite(""FeatureMapTest""); testSuite.addTest(new FeatureMapTest(""testFeatureMap"")); testSuite.addTest(new FeatureMapTest(""testSaveAndLoad"")); return testSuite; "," double dx, dy; if (posFrame == null) { double a1 = Math.PI*2*i/numDevices; double a2 = Math.PI*2*j/numDevices; dx = Math.sin(a1) - Math.sin(a2); dy = Math.cos(a1) - Math.cos(a2); "
0, if (factoryInstance == null) { synchronized (StandardCombiningAlgFactory.class) { if (factoryInstance == null) { initAlgorithms(); factoryInstance = new StandardCombiningAlgFactory(); ," IdmProcessor idmProc = getIdmProcessor(request); String groupId = request.getParameter(""groupId""); String userId = request.getParameter(""userId""); idmProc.associateUser(userId, groupId); "
0," String label = ((CombinedFragment)object).getName(); return label == null || label.length() == 0 ? getString(""_UI_CombinedFragment_type"") : getString(""_UI_CombinedFragment_type"") + "" "" + label; "," try { File file = File.createTempFile(""emitter-"", "".xml""); System.err.println(""Creating "" + file.getAbsolutePath() + "" for keeping track of emitter.""); if (deleteOnExit) { file.deleteOnExit(); "
0," try { TopicLabel.this.setForeground(PRIMARY_COLOR1); TopicLabel t = TopicLabel.this; ((ViewpointBox.ViewpointGraph) t.getParent()) .showArrows(t, t.model.getBroader(), t.model.getNarrower()); "," dataMap.addDbEntity(dbEntity); delegate.dbEntityRemoved(dbEntity); assertEquals(0, dataMap.getDbEntities().size()); assertEquals(Arrays.asList(dbEntity), delegate.getRemovedDbEntities()); "
0, PsiElement element = PATH_TO_INVOKED_TEMPLATE_NAME.navigate(this).oneOrNull(); if (element instanceof TemplateMemberElement) { return ((TemplateMemberElement)element).getTemplateName(); ," if (exceptionsString.length() != 0) { exceptions.clear(); final List<String> strings = StringUtil.split(exceptionsString, "",""); for (String string : strings) { exceptions.add(string); "
0," long oldIndexUsage = profiler.getCounter(""Query.indexUsage""); long oldCompositeIndexUsage = profiler.getCounter(""Query.compositeIndexUsage""); if (oldIndexUsage == -1) { oldIndexUsage = 0; ", if (locale != null) { if (getCustomFormats(datePicker.getEditor()) == null) { datePicker.getEditor().setFormatterFactory( new DefaultFormatterFactory( new DatePickerFormatterUIResource(locale))); 
1," namespaceContext.startScope(); for (int i=0, c=getNamespaceCount(); i<c; i++) { String prefix = getNamespacePrefix(i); namespaceContext.setPrefix(prefix == null ? """" : prefix, getNamespaceURI(i)); "," namespaceContext.startScope(); for (int i=0, c=getNamespaceCount(); i<c; i++) { String XXXXX = getNamespacePrefix(i); namespaceContext.setPrefix(XXXXX == null ? """" : XXXXX, getNamespaceURI(i)); "
1, int hash = 7; hash = 79 * hash + (this.identifierType != null ? this.identifierType.hashCode() : 0); hash = 79 * hash + (this.identifier != null ? this.identifier.hashCode() : 0); return hash; , int XXXXX = 7; XXXXX = 79 * XXXXX + (this.identifierType != null ? this.identifierType.XXXXXCode() : 0); XXXXX = 79 * XXXXX + (this.identifier != null ? this.identifier.XXXXXCode() : 0); return XXXXX; 
1, fOffset = getOffset(); fTokenLength = 0; IToken returnValue = new Token(Tokens.tIDENTIFIER); boolean isEOF = false; try { isEOF = !lexer.advance(); if (isEOF) { returnValue = Token.EOF; , fOffset = getOffset(); fTokenLength = 0; IToken XXXXX = new Token(Tokens.tIDENTIFIER); boolean XXXXX = false; try { XXXXX = !lexer.advance(); if (XXXXX) { XXXXX = Token.EOF; 
1," String oldStyle = style; style = newStyle; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, XhtmlPackage.XHTML_EM_TYPE__STYLE, oldStyle, style)); "," String XXXXX = style; style = newStyle; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, XhtmlPackage.XHTML_EM_TYPE__STYLE, XXXXX, style)); "
0, _scanner = scanner; _currToken = START_DOCUMENT; ReaderConfig cfg = scanner.getConfig(); _cfgCoalesceText = cfg.willCoalesceText(); _cfgReportTextAsChars = !cfg.willReportCData(); , String stringValue = (String) value; try { double doubleValue = new Double(stringValue).doubleValue(); if (doubleValue < 0.0) { return ValidationStatus.error(cannotBeNegativeMessage); 
1," for (World world : getServer().getWorlds()) { getServer().getScheduler().scheduleAsyncRepeatingTask(this, new CreepersdayRunnable(world), 0, getIntProperty(world, ""advanced.time_delay"")); "," for (World world : getServer().getWorlds()) { getServer().getScheduler().scheduleAsyncRepeatingTask(this, new CreepersdayRunnable(world), 0, getIntProperty(world, ""advanced.time_delay"")); "
0," if (schema == null || !Type.ARRAY.equals(schema.getType())) throw new AvroRuntimeException(""Not an array schema: ""+schema); this.schema = schema; if (capacity != 0) elements = new Object[capacity]; "," if ( string.length( ) > 0 ) { if(isOpeningQuoteChar(string.charAt( 0 )) && isClosingQuoteChar(string.charAt( string.length( ) - 1 ))) { return string.substring( 1, string.length( ) - 1 ); "
1," final UIDefaults defaults = UIManager.getLookAndFeelDefaults(); defaults.put( ""ClassLoader"", Activator.class.getClassLoader() ); try { UIManager.setLookAndFeel( aLookAndFeelClassName ); "," final UIDefaults XXXXX = UIManager.getLookAndFeelDefaults(); XXXXX.put( ""ClassLoader"", Activator.class.getClassLoader() ); try { UIManager.setLookAndFeel( aLookAndFeelClassName ); "
0," if(eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (value: ""); result.append(value); result.append(')'); return result.toString(); "," Statement s = m.createStatement( r, p, m.createTypedLiteral( 123.456f ) ); assertEquals( r, s.getSubject() ); assertEquals( p, s.getPredicate() ); assertEquals( 123.456f, s.getFloat(), 0.0005 ); "
1, if(set instanceof RowDataSet) return new FilteredRowDataSet((RowDataSet)set); else if(set instanceof TableDataSet) return new FilteredTableDataSet((TableDataSet)set); return null; , if(set instanceof RowDataSet) return new FilteredRowDataSet((RowDataSet)set); else if(set instanceof TableDataSet) return new FilteredTableDataSet((TableDataSet)set); return null; 
0, return new IChatRoomMessageSender() { public void sendMessage(String messageBody) throws ECFException { if (multiuserchat != null) { try { multiuserchat.sendMessage(messageBody); ," long duration = durationTime; String retStr = new String(); while (true) { duration = duration / 1000; duration = duration / 60; if (duration == 0) { retStr = ""a few seconds ago""; break; "
1," final BufferedImage lImage = new BufferedImage(getWidth(),getHeight(), BufferedImage.TYPE_INT_ARGB); lImage.setRGB(0,0,getWidth(),getHeight(),samples,0,getWidth()); return lImage; "," final BufferedImage XXXXX = new BufferedImage(getWidth(),getHeight(), BufferedImage.TYPE_INT_ARGB); XXXXX.setRGB(0,0,getWidth(),getHeight(),samples,0,getWidth()); return XXXXX; "
1," Properties props = new Properties(); props.put(""java.naming.factory.initial"", ""org.apache.openejb.client.RemoteInitialContextFactory""); props.put(""java.naming.provider.url"", ""http: return props; "," Properties XXXXX = new Properties(); XXXXX.put(""java.naming.factory.initial"", ""org.apache.openejb.client.RemoteInitialContextFactory""); XXXXX.put(""java.naming.provider.url"", ""http: return XXXXX; "
0," String suffix = getTestName(false); configureByFile(""/refactoring/renameField/before"" + suffix + "".java""); assertFalse(RenameWrongRefHandler.isAvailable(getProject(), getEditor(), getFile())); "," breadcrumbs = Breadcrumb.getProjectSpecficBreadcrumbs(project); breadcrumbs.add(new Breadcrumb(ProjectTasksPlace.createDefaultPlace(project.getIdentifier()).getHistoryToken(), ""Tasks"")); "
0, final NetworkPolicy policy = getOrCreatePolicy(template); policy.cycleDay = cycleDay; policy.cycleTimezone = cycleTimezone; policy.inferred = false; policy.clearSnooze(); writeAsync(); ," Socket socket = new EmptySocket(); NetworkManager netMgr = null; try { netMgr = new EmptyNetworkManager(socket, ""npc mgr"", new NetHandler() { @Override public boolean a() { return false; "
0, sourceColumnComboBox.removeAllItems(); targetColumnComboBox.removeAllItems(); labelColumnComboBox.removeAllItems(); if (columnNames.length > 0) { labelColumnComboBox.addItem(NO_LABEL); ," titleParser.parseInformation(htmlString, link, inAccountId); descriptionParser.parseInformation(htmlString, link, inAccountId); imageParser.parseInformation(htmlString, link, inAccountId); "
1," this.isInclusivePass = !codes.startsWith(""!""); statusCodes = new HashSet<Integer>(); for (String st : STATUS_CODE_RX.split(removeNegation(codes))) { statusCodes.add(Integer.parseInt(st)); "," this.isInclusivePass = !codes.startsWith(""!""); statusCodes = new HashSet<Integer>(); for (String st : STATUS_CODE_RX.split(removeNegation(codes))) { statusCodes.add(Integer.parseInt(st)); "
0," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," String encryptedPwd=""00000000""; String password = pwd; if(password != null && password.length() > 0) { int hi=0; int lo=0; if(password.length() > 15) { password = password.substring(0,15); "
1," debug(""checkin -c \"""" + message + ""\"" "" + file); Item item = new Item(copyFile(file), message, (String) null); run(new Checkin(session, log(Checkin.Listener.class), true, new Item[] { item "," debug(""checkin -c \"""" + message + ""\"" "" + file); Item XXXXX = new Item(copyFile(file), message, (String) null); run(new Checkin(session, log(Checkin.Listener.class), true, new Item[] { XXXXX "
0," IMessageHandler mh = messageHandler.get(); if (mh != null) { Message message = new Message(kind, e.getSourceClass(), e.getMessage()); message.setHintObject(e.getHintObject()); mh.handle(message); "," StringBuilder sbToString = getSbToString(); sbToString.setLength(0); sbToString.append(label); sbToString.append("" = ""); sbToString.append(toValueString()); return sbToString.toString(); "
1," if (!FileSystemItem.areEqual(value, value_)) { value_ = value; if (value_ == null) { setLeftImage(StandardIcons.INSTANCE.empty_command()); setText(ALL_COMMITS); setTitle(ALL_COMMITS_TITLE); "," if (!FileSystemItem.areEqual(value, value_)) { value_ = value; if (value_ == null) { setLeftImage(StandardIcons.INSTANCE.empty_command()); setText(ALL_COMMITS); setTitle(ALL_COMMITS_TITLE); "
1," boolean returned = super.isSelectable(object); if (returned) { if (hasValueForParameter(""isSelectable"")) { return getBooleanParameteredValue(getValueForParameter(""isSelectable""), object); "," boolean XXXXX = super.isSelectable(object); if (XXXXX) { if (hasValueForParameter(""isSelectable"")) { return getBooleanParameteredValue(getValueForParameter(""isSelectable""), object); "
0, numAuthExceptions = 0; numIoExceptions = 0; numParseExceptions = 0; numConflictDetectedExceptions = 0; numInserts = 0; numUpdates = 0; numDeletes = 0; numEntries = 0; numSkippedEntries = 0; ," switch(kind){ case MIPS: return GetProperties.getMIPSCapacityInMIPS(ne, 0.0); case RAM: return GetProperties.getRAMCapacityInKB(ne, 0.0); case ROM: return GetProperties.getROMCapacityInKB(ne, 0.0); "
0, ServiceReference ref = bundleContext.getServiceReference(ApplicationMetadataFactory.class.getName()); if (ref != null) { return (ApplicationMetadataFactory) bundleContext.getService(ref); ," executeTarget(""failureTypePassing""); assertLogContains(""Throwable #1: com.carrotsearch.ant.tasks.junit4.tests.SyntheticException""); assertLogContains(""Tests summary: 1 suite, 1 test, 1 error""); "
1," return u == Use.NDT && !oneOf(sig, _FILE_BASE_NAME, _FILE_DIR_NAME, _FILE_DIR_SEPARATOR, _FILE_PATH_SEPARATOR, _FILE_PATH_TO_NATIVE, _FILE_PATH_TO_URI, _FILE_RESOLVE_PATH) || super.uses(u); "," return u == Use.NDT && !oneOf(sig, _FILE_BASE_NAME, _FILE_DIR_NAME, _FILE_DIR_SEPARATOR, _FILE_PATH_SEPARATOR, _FILE_PATH_TO_NATIVE, _FILE_PATH_TO_URI, _FILE_RESOLVE_PATH) || super.uses(u); "
0," LifecycleUtil.checkActive(this); Object result = getFrom(this, nsURI, resolve); if (result == null && delegateRegistry != null) { result = getFrom(delegateRegistry, nsURI, resolve); "," NSqlQuery query = new NSqlQuery(db.getResourceConnection()); query.exec(""select count(*) from noteresources""); query.next(); int returnValue = new Integer(query.valueString(0)); return returnValue; "
1, Object object = null; UserSessionData userSessionData = this.getUserSessionData(requestId); if (userSessionData != null) { object = userSessionData.getSessionData().get(objectCode); , Object XXXXX = null; UserSessionData XXXXX = this.getUserSessionData(requestId); if (XXXXX != null) { XXXXX = XXXXX.getSessionData().get(XXXXXCode); 
1, for (ListIterator i = m_processors.listIterator(m_processors.size()); i.hasPrevious();) { ResourceProcessor processor = (ResourceProcessor) i.previous(); try { processor.rollback(); , for (ListIterator i = m_processors.listIterator(m_processors.size()); i.hasPrevious();) { ResourceProcessor processor = (ResourceProcessor) i.previous(); try { processor.rollback(); 
0," RegionWidgetRenderer renderer = supportedWidgets.get(widget.getWidget().getType()); if(renderer == null) { throw new NotSupportedException(widget.getWidget().getType() + "" is not supported""); "," final Faction forFaction = this.argAsFaction(0, myFaction); int radius = this.argAsInt(1, 1); if (radius < 1) { msg(""<b>If you specify a radius, it must be at least 1.""); return; "
1," ForcePlayer fPlayer = PlayerHandler.getInstance() .getPlayer(FCUserInterface.adminField.name.getText()); if (fPlayer == null) { errorMsg(""Please select an action to perform!""); return; "," ForcePlayer XXXXX = PlayerHandler.getInstance() .getPlayer(FCUserInterface.adminField.name.getText()); if (XXXXX == null) { errorMsg(""Please select an action to perform!""); return; "
0," super(ID, null, RefactoringCoreMessages.RenameResourceDescriptor_unnamed_descriptor, null, RefactoringDescriptor.STRUCTURAL_CHANGE | RefactoringDescriptor.MULTI_CHANGE); fDeleteContents= false; "," String oldCursor = cursor; cursor = newCursor; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_MASK_ELEMENT__CURSOR, oldCursor, cursor)); "
1," logger.info(""Activating persistence manager for episodes""); penv = PersistenceUtil.newPersistenceEnvironment(cc, ""org.opencastproject.episode.impl.persistence"", persistenceProperties); "," logger.info(""Activating persistence manager for episodes""); penv = PersistenceUtil.newPersistenceEnvironment(cc, ""org.opencastproject.episode.impl.persistence"", persistenceProperties); "
1," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; "," EditorCell XXXXX = null; XXXXX = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, XXXXX, editorContext); return XXXXX; "
1," synchronized (contexts) { AllocatorPerContext l = contexts.get(contextCfgItemName); if (l == null) { contexts.put(contextCfgItemName, (l = new AllocatorPerContext(contextCfgItemName))); "," synchronized (contexts) { AXXXXXXXXXXocatorPerContext XXXXX = contexts.get(contextCfgItemName); if (XXXXX == nuXXXXXXXXXX) { contexts.put(contextCfgItemName, (XXXXX = new AXXXXXXXXXXocatorPerContext(contextCfgItemName))); "
1," String label = ((RealLiteralExp) object).getName(); return label == null || label.length() == 0 ? getString(""_UI_RealLiteralExp_type"") : getString(""_UI_RealLiteralExp_type"") + "" "" + label; "," String XXXXX = ((RealLiteralExp) object).getName(); return XXXXX == null || XXXXX.length() == 0 ? getString(""_UI_RealLiteralExp_type"") : getString(""_UI_RealLiteralExp_type"") + "" "" + XXXXX; "
1, PsiElement parent = declaration.getParent(); if (parent instanceof JetClassObject) { JetClassObject jetClassObject = (JetClassObject) parent; return resolveToDescriptor(jetClassObject); , PsiElement XXXXX = declaration.getParent(); if (XXXXX instanceof JetClassObject) { JetClassObject XXXXX = (JetClassObject) XXXXX; return resolveToDescriptor(XXXXX); 
0," Intent intent = new Intent(AmarinoIntent.ACTION_SEND); intent.putExtra(AmarinoIntent.EXTRA_DATA_TYPE, dataType); intent.putExtra(AmarinoIntent.EXTRA_PLUGIN_ID, pluginId); return intent; ", IStructuredSelection sel = (IStructuredSelection) fTocTree.getSelection(); for (Iterator iter = sel.iterator(); iter.hasNext();) { Object object = iter.next(); if (object == null) { return; 
0," final LabelProviderChangedEvent evnt = new LabelProviderChangedEvent(this, proj); Display.getDefault().asyncExec(new Runnable() { public void run() { fireLabelProviderChanged(evnt); "," affine.set( affine.get( 0, 2 ) - x, 0, 2 ); affine.set( affine.get( 1, 2 ) - y, 1, 2 ); affine.scale( s ); affine.set( affine.get( 0, 2 ) + x, 0, 2 ); affine.set( affine.get( 1, 2 ) + y, 1, 2 ); "
1," SunToolkit.awtLock(); try { X11SurfaceData x11sd = (X11SurfaceData)dst; long xgc = x11sd.getBlitGC(null, false); nativeBlit(src.getNativeOps(), dst.getNativeOps(), xgc, clip, sx, sy, dx, dy, w, h); "," SunToolkit.awtLock(); try { X11SurfaceData XXXXX = (X11SurfaceData)dst; long XXXXX = XXXXX.getBlitGC(null, false); nativeBlit(src.getNativeOps(), dst.getNativeOps(), XXXXX, clip, sx, sy, dx, dy, w, h); "
1, IExpression[] watchs = DebugPlugin.getDefault().getExpressionManager().getExpressions(); for (IExpression exp : watchs) { waitDebugProcessing(); m_debugServer.debugEvaluate(exp.getExpressionText()); , IExpression[] watchs = DebugPlugin.getDefault().getExpressionManager().getExpressions(); for (IExpression exp : watchs) { waitDebugProcessing(); m_debugServer.debugEvaluate(exp.getExpressionText()); 
1," setOriginalTestDetailsOn(result); _testResult.addParticipantResult(result); LOGGER.debug(""Received result "" + result); _testResultsLatch.countDown(); checkForResponseError(result); "," setOriginalTestDetailsOn(result); _testResult.addParticipantResult(result); LOGGER.debug(""Received result "" + result); _testResultsLatch.countDown(); checkForResponseError(result); "
1, UIViewRoot uiViewRoot = event.getFacesContext().getViewRoot(); if (event.getPhaseId().equals(PhaseId.RENDER_RESPONSE) && uiViewRoot != null) { processPostRenderView(uiViewRoot.getViewId()); , UIViewRoot XXXXX = event.getFacesContext().getViewRoot(); if (event.getPhaseId().equals(PhaseId.RENDER_RESPONSE) && XXXXX != null) { processPostRenderView(XXXXX.getViewId()); 
0, if (sector.isEmpty()) { Packet6BlankSector packet = new Packet6BlankSector(); packet.baseX = baseX; packet.plane = plane; packet.baseZ = baseZ; client.getNetClient().send(packet); ," final GamePacketReader reader = new GamePacketReader(packet); final int otherId = (int) reader.getUnsigned(DataType.SHORT, DataOrder.LITTLE); return new FirstPlayerOptionEvent(otherId); "
0," Map<String, Entry> parent = cache.get(key); if (parent == null) return null; Iterator<Entry> iterator = parent.values().iterator(); if (iterator.hasNext()) return iterator.next(); return null; "," final ActionSet actionSet = new ActionSet( relType ); final String name = relType.name(); actionMap.put( name, actionSet ); actionSet.addAt( actionMap.headMap( name ).size() + 1 ); "
0," MethodCache.remove(UserGroupRoleService.class); _service = service; ReferenceRegistry.registerReference(UserGroupRoleServiceUtil.class, ""_service""); MethodCache.remove(UserGroupRoleService.class); "," ByteWrapper wrapper = new ByteWrapper( TEST1_BIN ); HLAoctetPairLE data = this.encoderFactory.createHLAoctetPairLE(); try { data.decode( wrapper ); Assert.assertEquals( data.getValue(), TEST1 ); "
1, if (current.eResource() != null && current.eResource().getResourceSet() != null) this.resourceSet = current.eResource().getResourceSet(); flatreferencetableRequiredProperty.setInput(settings); , if (current.eResource() != null && current.eResource().getResourceSet() != null) this.resourceSet = current.eResource().getResourceSet(); flatreferencetableRequiredProperty.setInput(settings); 
0," if (_scheme.equals("""")) return ""NULL URL""; StringBuffer buff = new StringBuffer(); buff.append(_scheme).append("": buff.append(_host).append("":"").append(_port); return direct(buff).toString(); ", Throwable top = t; if (t instanceof DebugException) { DebugException de = (DebugException) t; IStatus status = de.getStatus(); if (status.getException() != null) { top = status.getException(); 
1," HandlerManager hm = userHandlerManagers.get(CurrentSession.getCallerTenantId()); if (hm == null) { hm = new HandlerManager(); userHandlerManagers.put(CurrentSession.getCallerTenantId(), hm); "," HandlerManager hm = userHandlerManagers.get(CurrentSession.getCallerTenantId()); if (hm == null) { hm = new HandlerManager(); userHandlerManagers.put(CurrentSession.getCallerTenantId(), hm); "
0," super.init(processingEnv); _processingEnv = processingEnv; _filer = _processingEnv.getFiler(); _messager = _processingEnv.getMessager(); _classesToSummarize = new HashMap<String, Element>(); ", int taskDuration = 0; List<TaskConstraintInterface> durationConstraints = task.getConstraintsOfType(TaskConstraintInterface.TYPE_DURATION); if (durationConstraints.size() == 0) { return 0; 
0," String oldName = name; name = newName; if ( eNotificationRequired( ) ) eNotify( new ENotificationImpl( this, Notification.SET, AttributePackage.EXTENDED_PROPERTY__NAME, oldName, name ) ); ", AppWidgetManager appWidgetManager = AppWidgetManager.getInstance(context); int[] appWidgetIds = appWidgetManager.getAppWidgetIds(THIS_APPWIDGET); return (appWidgetIds.length > 0); 
0," String values = """"; if (selectionMap != null) { Set<String> keySet = selectionMap.keySet(); Iterator<String> it = keySet.iterator(); while (it.hasNext()) { values = values + "", "" + it.next(); "," ExecutorService e = new CustomExecutor(2); try { ArrayList<Callable<String>> l = new ArrayList<Callable<String>>(); l.add(new StringTask()); e.invokeAny(l, MEDIUM_DELAY_MS, null); "
1, if (getRootComponent() != null) { FIBLocalizedDictionary returned = getRootComponent().retrieveFIBLocalizedDictionary(); if (getParentLocalizer() != null) { returned.setParent(getParentLocalizer()); , if (getRootComponent() != null) { FIBLocalizedDictionary XXXXX = getRootComponent().retrieveFIBLocalizedDictionary(); if (getParentLocalizer() != null) { XXXXX.setParent(getParentLocalizer()); 
1," StatusType type; StatusValue mod = getStatus(mLevel, StatusType.Attack); Equipment eq = mEquipment.getEquipment(EquipmentSet.MAINWEAPON); if (eq != null) { type = eq.getWeaponType(); "," StatusType type; StatusValue mod = getStatus(mLevel, StatusType.Attack); Equipment eq = mEquipment.getEquipment(EquipmentSet.MAINWEAPON); if (eq != null) { type = eq.getWeaponType(); "
1, return getSizeOfAbstractMessage() + receiversEnclosings.length * (receiversEnclosings.length > 0 ? receiversEnclosings[0] .getTransmissionSize() : 0) + senderNodeInfo.getTransmissionSize(); , return getSizeOfAbstractMessage() + receiversEnclosings.length * (receiversEnclosings.length > 0 ? receiversEnclosings[0] .getTransmissionSize() : 0) + senderNodeInfo.getTransmissionSize(); 
0," log.info(""Run state changed: "" + event.getEventMessage()); for (ResponderService responder : getResponderServices()) { if (responder.respondsTo(event)) { responder.generateResponse(event); "," return new BatchCall(""Load tabular data"") { public void doCall() throws Exception { OmeroMetadataService os = context.getMetadataService(); result = os.loadTabularData(ctx, parameters, userID); "
0, textView.setEnabled(false); textView.setText(motivation.getDescription().getText()); beginButton.setAction(beginEditAction); endEditAction.setEnabled(false); endEditXPAction.setEnabled(false); ," mFactory = factory; mTimeout = timeout; mListener = new CheckedSocket.ExceptionListener() { public void exceptionOccurred(CheckedSocket s, Exception e, int count) { if (count == 1) { clear(); "
0," Injector injector = Guice.createInjector(new AbstractModule() { protected void configure() { bind(Logger.class) .annotatedWith(Names.named(""anonymous"")) .toInstance(Logger.getAnonymousLogger()); "," return new IContentAssistService() { public List<Proposal> computeCompletionProposals(Scope scope, ContentAssistInvocationContext context, ITranslationUnit unit) { return Collections.emptyList(); "
1," super(bootstrap); this.beanDeploymentArchive = new URLScanner(resourceLoader, bootstrap, RESOURCES).scan(); this.beanDeploymentArchive.getServices().add(ResourceLoader.class, resourceLoader); "," super(bootstrap); this.beanDeploymentArchive = new URLScanner(resourceLoader, bootstrap, RESOURCES).scan(); this.beanDeploymentArchive.getServices().add(ResourceLoader.class, resourceLoader); "
1," if (mContext.checkCallingOrSelfPermission( android.Manifest.permission.SHUTDOWN) != PackageManager.PERMISSION_GRANTED) { throw new SecurityException(""Requires SHUTDOWN permission""); "," if (mContext.checkCallingOrSelfPermission( android.Manifest.permission.SHUTDOWN) != PackageManager.PERMISSION_GRANTED) { throw new SecurityException(""Requires SHUTDOWN permission""); "
0," if ( DNDService.getInstance( ) .validDrop( TemplateTransfer.getInstance( ).getTemplate( ), getTargetEditPart( ), DND.DROP_DEFAULT, new DNDLocation( getDropLocation( ) ) ) ) { return true; ", super(loc); this.type = MtType.TOGGLE; this.delay = delay; if(delay < 0) this.delayTicks = MTUtil.secondsToTicks(Properties.toggleDelay); else this.delayTicks = MTUtil.secondsToTicks(delay); 
1," String label = ((CollectionItem) object).getName(); return label == null || label.length() == 0 ? getString(""_UI_CollectionItem_type"") : getString(""_UI_CollectionItem_type"") + "" "" + label; "," String XXXXX = ((CollectionItem) object).getName(); return XXXXX == null || XXXXX.length() == 0 ? getString(""_UI_CollectionItem_type"") : getString(""_UI_CollectionItem_type"") + "" "" + XXXXX; "
0," IfcReal durationReal = PropertyUtility.initializeRealToStringVal(duration); PropertySetUtility. setPropertySetPropertyValueOfName(pName_WarrantyDurationLabor, this,durationReal); "," if (failed()) { for (int i = 0; i < resultList.arity(); ++i) { String message = ErlUtils.toString(resultList.elementAt(i)); MavenUtils.logMultiLineString(log, LogLevel.ERROR, message); "
0, native_reset(mNativePaint); setFlags(DEFAULT_PAINT_FLAGS); mHasCompatScaling = false; mCompatScaling = mInvCompatScaling = 1; mBidiFlags = BIDI_DEFAULT_LTR; setTextLocale(Locale.getDefault()); ," if (dir.isDirectory()) { String[] dirContent = dir.list(); for (int i=0; i<dirContent.length; i++){ boolean success = deleteDir(new File(dir, dirContent[i])); if (!success) { return false; "
1, AdapterFactoryLabelProvider labelProvider = new AdapterFactoryLabelProvider(adapterFactory); if (object instanceof EObject) { switch (columnIndex) { case 0: return labelProvider.getText(object); , AdapterFactoryLabelProvider XXXXX = new AdapterFactoryLabelProvider(adapterFactory); if (object instanceof EObject) { switch (columnIndex) { case 0: return XXXXX.getText(object); 
0, initFormatInfo(depth); String insertMode; if (userSpecifiedBulkInsert) { if (bulkInsertPerformed) { insertMode = indent + MessageService.getTextMessage( SQLState.RTS_INSERT_MODE_BULK); , classLoader = cl; entityManagerFactoryCallable = callable; createDelegate(); logCriteriaJpql = logCriteriaQueryJpql(props); logCriteriaJpqlLevel = logCriteriaQueryJpqlLevel(props); 
0," if (s != null && s.matches(""\\d+"")) { option.setNbThreads(Integer.parseInt(s)); final int nbThreads = option.getNbThreads(); this.executorService = Executors.newFixedThreadPool(nbThreads); "," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "
0," final ManyToMany manyToMany = new ManyToMany(this, ctx, grailsDomainClassProperty.getName(), grailsDomainClassProperty.getType()) { public PropertyMapping getMapping() { return null; "," String oldColor = color; color = newColor; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_CLIP_PATH_ELEMENT__COLOR, oldColor, color)); "
1, token_source = tm; token = new Token(); jj_ntk = -1; jj_gen = 0; for (int i = 0; i < 149; i++) jj_la1[i] = -1; for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls(); , token_source = tm; token = new Token(); jj_ntk = -1; jj_gen = 0; for (XXXXXnt XXXXX = 0; XXXXX < 149; XXXXX++) jj_la1[XXXXX] = -1; for (XXXXXnt XXXXX = 0; XXXXX < jj_2_rtns.length; XXXXX++) jj_2_rtns[XXXXX] = new JJCalls(); 
0," Calendar c = Calendar.getInstance(); c.setTime(date); c.set(Calendar.HOUR_OF_DAY, 0); c.set(Calendar.MINUTE, 0); c.set(Calendar.SECOND, 0); c.set(Calendar.MILLISECOND, 0); return c.getTime(); "," TopicType TopicType = ObjectsFactory.topicType(); session.save(TopicType); TopicType result = dao.get(TopicType.getId()); assertNotNull(result); assertEquals(result.getId(), TopicType.getId()); "
0," final Pattern propertiesLine = Pattern.compile("":""+property+"":([^\\n]+)""); Matcher propm = propertiesLine.matcher(this.payload); if(propm.find()) return propm.group(1).trim(); else return """"; "," return (AccJournal) this.em .createNamedQuery(AccJournal.NQ_FIND_BY_NAME) .setParameter(""pClientId"", Session.user.get().getClientId()) .setParameter(""pName"", name).getSingleResult(); "
1, Enumeration<MutableTreeNode> newNodes = children(); for (; newNodes.hasMoreElements();) { NotesTreeNode node = (NotesTreeNode) newNodes.nextElement(); node.save(); node.saveChildren(); , Enumeration<MutableTreeNode> newNodes = children(); for (; newNodes.hasMoreElements();) { NotesTreeNode XXXXX = (NotesTreeNode) newNodes.nextElement(); XXXXX.save(); XXXXX.saveChildren(); 
1," putValue(Action.SHORT_DESCRIPTION, tr(""Cancel conflict resolution"")); putValue(Action.NAME, tr(""Cancel"")); putValue(Action.SMALL_ICON, ImageProvider.get("""", ""cancel"")); setEnabled(true); "," putValue(Action.SHORT_DESCRIPTION, tr(""Cancel conflict resolution"")); putValue(Action.NAME, tr(""Cancel"")); putValue(Action.SMALL_ICON, ImageProvider.get("""", ""cancel"")); setEnabled(true); "
1," VersionTrackerDAOImpl vt = (VersionTrackerDAOImpl) _session.createQuery(""from VersionTrackerDAOImpl v "").uniqueResult(); if (vt == null) return 1; else return vt.getVersion() + 1; "," VersionTrackerDAOImpl vt = (VersionTrackerDAOImpl) _session.createQuery(""from VersionTrackerDAOImpl v "").uniqueResult(); if (vt == null) return 1; else return vt.getVersion() + 1; "
0, net.minecraft.server.ItemStack smeltNMS = net.minecraft.server.FurnaceRecipes.getInstance().getResult(raw.getTypeId()); ItemStack smelted = (ItemStack)(new CraftItemStack(smeltNMS)); return smelted; ," for (Element element : settings.getRunConfigurations()) { if (""Groovy Script"".equals(element.getAttributeValue(""factoryName"")) && !""true"".equals(element.getAttributeValue(""default""))) { return true; "
1, if (o == this) return true; if (o == null) return false; if (o instanceof QPathEntryFilter) { QPathEntryFilter that = (QPathEntryFilter)o; return this.getQPathEntry().equals(that.getQPathEntry()); , if (o == this) return true; if (o == null) return false; if (o instanceof QPathEntryFilter) { QPathEntryFilter XXXXX = (QPathEntryFilter)o; return this.getQPathEntry().equals(XXXXX.getQPathEntry()); 
1, int pos = nodeIndex*6; bound[pos+0] = aabb.min.x; bound[pos+1] = aabb.min.y; bound[pos+2] = aabb.min.z; bound[pos+3] = aabb.max.x; bound[pos+4] = aabb.max.y; bound[pos+5] = aabb.max.z; , int XXXXX = nodeIndex*6; bound[XXXXX+0] = aabb.min.x; bound[XXXXX+1] = aabb.min.y; bound[XXXXX+2] = aabb.min.z; bound[XXXXX+3] = aabb.max.x; bound[XXXXX+4] = aabb.max.y; bound[XXXXX+5] = aabb.max.z; 
0, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(ShoppingTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; ," String oldFeatureName = this.featureNameState; this.featureNameState = featureNameState; changeSupport.firePropertyChange(""featureNameState"", oldFeatureName, this.featureNameState); "
0, data.position( index * 2 * length ); for ( int i = 0; i < 2; i++ ) { data.put( color[0] ); data.put( color[1] ); data.put( color[2] ); data.put( color.length == 4 ? color[3] : 1.0f ); ," super(PackagingElementFactoryImpl.EXTRACTED_DIRECTORY_ELEMENT_TYPE, jarPath); myPathInJar = pathInJar; if (!StringUtil.startsWithChar(myPathInJar, '/')) { myPathInJar = ""/"" + myPathInJar; "
1," Availability available = isModeAvailable( dockable, mode ); for( ExtendedModeEnablement extension : extensions ){ available = available.strongest( extension.isAvailable( dockable, mode ) ); "," Availability XXXXX = isModeAvailable( dockable, mode ); for( ExtendedModeEnablement extension : extensions ){ XXXXX = XXXXX.strongest( extension.isAvailable( dockable, mode ) ); "
0, for (Iterator i = children.iterator(); i.hasNext();) { ValidatedNode currentNode = (ValidatedNode) i.next(); if (elementName.equals(currentNode.getElement().getName())) { return currentNode; ," System.setProperty(""abiquo.config.path"", ""/tmp/foooooo""); new SystemPropertiesService().load(); String abiquoVersion = System.getProperty(""abiquo.version""); assertNotNull(abiquoVersion); "
1," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "
0," CmsRpcAction<CmsAliasInitialFetchResult> action = new CmsRpcAction<CmsAliasInitialFetchResult>() { @Override public void execute() { getService().getAliasTable(this); start(200, false); "," ComponentStatus expected = ComponentStatus.INITIALIZING; when(this.manager.getStatus()).thenReturn(expected); ComponentStatus result = this.subject.getStatus(); assertSame(expected, result); "
1," while (!this.pendingCommandList.isEmpty()) { ServerCommand var1 = (ServerCommand)this.pendingCommandList.remove(0); this.getCommandManager().executeCommand(var1.sender, var1.command); "," while (!this.pendingCommandList.isEmpty()) { ServerCommand XXXXX = (ServerCommand)this.pendingCommandList.remove(0); this.getCommandManager().executeCommand(XXXXX.sender, XXXXX.command); "
0," putValue(NAME, tr(""Accept Access Token"")); putValue(SMALL_ICON, ImageProvider.get(""ok"")); putValue(SHORT_DESCRIPTION, tr(""Close the dialog and accept the Access Token"")); updateEnabledState(null); ", this.modulePath = modulePath; this.offset = offset; this.length = length; this.subClause = subClause; this.name = name; this.arity = arity; this.clauseHead = clauseHead; this.def = def; 
0," String label = ((GenLink)object).getEditPartClassName(); return label == null || label.length() == 0 ? getString(""_UI_GenLink_type"") : getString(""_UI_GenLink_type"") + "" "" + label; "," KAndJoin join = newAndJoin(0, 1); this.procedure.setJoin(join); KProcess process = this.program.newProcess(null); new KProcessor().execute(process); assertFalse(join.isEnabled(process)); "
0, setModuleName( ruleDescr ); PackageDescr pkg = createPackageDescr( ruleDescr.getNamespace() ); pkg.addRule( ruleDescr ); this.packageBuilder.addPackage( pkg ); this.session.fireAllRules(); ," if (sb == null) sb = new StringBuilder(); else sb.setLength(0); sb.append(""{""); if(input.length > 0) { for (int i=0; i < input.length - 1; i++) { sb.append(input[i].getLabel()); sb.append("", ""); "
1, Iterator it= fCheckBoxes.keySet().iterator(); while (it.hasNext()) { Button b= (Button) it.next(); String key= (String) fCheckBoxes.get(b); b.setSelection(fOverlayStore.getBoolean(key)); , Iterator it= fCheckBoxes.keySet().iterator(); while (it.hasNext()) { Button b= (Button) it.next(); String key= (String) fCheckBoxes.get(b); b.setSelection(fOverlayStore.getBoolean(key)); 
0," if (exception instanceof BackingStoreException) bse[0] = (BackingStoreException) exception; else bse[0] = new BackingStoreException(NLS.bind(PrefsMessages.childrenNames2, path), exception); ", if (mrjVersion >= 4.0f) MRJ4EventProxy.getInstance().removeReopenApplicationListener(l); else if (mrjVersion >= 2.2f) MRJ23EventProxy.getInstance().removeReopenApplicationListener(l); 
1," for (int row = 1; row <= boardSize; row++) { for (int col = 1; col <= boardSize; col++) { weightUpdates[(row - 1) * boardSize + (col - 1)] += (d * previous.getValueAt(row, col)); "," for (int row = 1; row <= boardSize; row++) { for (int col = 1; col <= boardSize; col++) { weightUpdates[(row - 1) * boardSize + (col - 1)] += (d * previous.getValueAt(row, col)); "
0," if (this.usePattern && this.layoutNode2Type != null) { final Type t = this.layoutNode2Type.get(ln); if (t != null) { if (this.getLayoutPatternForType(t, ""frozen_node"") != null) { return true; "," foundConcur = false; this.tagInfo = info; this.checkTagName = checkTagName; combinedPattern.visit(this); if (numElements != 1) continuation = null; return new ExpressionPair(content, continuation); "
1, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(SocialTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , TestSuite XXXXX = new TestSuite(); XXXXX.addTest(LoginTests.suite()); XXXXX.addTest(SocialTests.suite()); XXXXX.addTestSuite(StopSeleniumTest.class); return XXXXX; 
0," assert getNavigationElement() != this; GrLightField copy = new GrLightField(myContainingClass, getName(), getType(), getNavigationElement()); copy.setCreatorKey(getCreatorKey()); return copy; "," lock.lock(); try { if(!isTimeoutCheckerRunning()) { timeout_checker_future=timer.scheduleWithFixedDelay(new TimeoutChecker(),timeout_check_interval,timeout_check_interval, TimeUnit.MILLISECONDS); "
0," StringBuilder sb = new StringBuilder(); sb.append("" def new""); sb.append(rName()); sb.append(""(""); { boolean first = true; for (Object oParamParam : this.eParamParam) { if (first) { first = false; ", if( response.getContent().length() == 0 ) { ProtocolMessageWriter protocolWriter = ContextProvider.getProtocolWriter(); try { response.getWriter().write( protocolWriter.createMessage() ); 
1," Node parameterNode = searchForParameter(parameterName); assertNotNull(parameterNode); assertEquals(VariableVisibility.PARAMETER, lastAnalysis.getVariableVisibility(parameterNode)); "," Node XXXXX = searchForParameter(parameterName); assertNotNull(XXXXX); assertEquals(VariableVisibility.PARAMETER, lastAnalysis.getVariableVisibility(XXXXX)); "
1," return (PaymentTerm) this.em .createNamedQuery(PaymentTerm.NQ_FIND_BY_NAME) .setParameter(""pClientId"", Session.user.get().getClientId()) .setParameter(""pName"", name).getSingleResult(); "," return (PaymentTerm) this.em .createNamedQuery(PaymentTerm.NQ_FIND_BY_NAME) .setParameter(""pClientId"", Session.user.get().getClientId()) .setParameter(""pName"", name).getSingleResult(); "
0," if (nextAvailable) { Writable key = (Writable) ReflectionUtils.newInstance(reader.getKeyClass(), conf); BytesWritable value = new BytesWritable(); try { nextAvailable = reader.next(key, value); "," String sub = subject; if (sub.length() > 50) sub = sub.substring(0, 50); ArrayList ma = (ArrayList) this.bySubject.get(sub); if (ma == null) { ma = new ArrayList(); this.bySubject.put(sub, ma); "
1," switch (featureID) { case CSTPackage.CALL_EXP_CS__SOURCE : return basicSetSource(null, msgs); case CSTPackage.CALL_EXP_CS__SIMPLE_NAME_CS : return basicSetSimpleNameCS(null, msgs); "," switch (featureID) { case CSTPackage.CALL_EXP_CS__SOURCE : return basicSetSource(null, msgs); case CSTPackage.CALL_EXP_CS__SIMPLE_NAME_CS : return basicSetSimpleNameCS(null, msgs); "
0," logger.log(Messages.TR0001, getClass().getSimpleName(), ""isAccepted""); return H5WizardPlugin.getInstance().getSelectedLibrarySet().isEmpty() ? true : btnRadioAccept.getSelection(); ", ShapeStyle ss = getShapeStyles().get(c); if (ss==null && !TargetRuntime.DEFAULT_RUNTIME_ID.equals(id)) { ss = TargetRuntime.getDefaultRuntime().getShapeStyle(c); if (ss!=null) return ss; 
1," JComponent msgComp = getComponentForMessage(message); int ret = JOptionPane.showConfirmDialog(this, msgComp, title, JOptionPane.YES_NO_OPTION); return ret == JOptionPane.YES_OPTION; "," JComponent XXXXX = getComponentForMessage(message); int XXXXX = JOptionPane.showConfirmDialog(this, XXXXX, title, JOptionPane.YES_NO_OPTION); XXXXXurn XXXXX == JOptionPane.YES_OPTION; "
0," if(thresholdCountMinimum < 0) throw new IllegalArgumentException(""thresholdCountMinimum must be greater than or equal to 0""); this.thresholdCountMinimum = thresholdCountMinimum; return this; ", Object feature = notification.getFeature(); if(NotationPackage.eINSTANCE.getSize_Width().equals(feature) || NotationPackage.eINSTANCE.getSize_Height().equals(feature)) { hostSizeChanged(); 
1," LineMarker lineMarker = new LineMarker(chart, horizontal, position, Color.darkGray); lineMarker.setLabel(label); lineMarker.setLabelPlacement(LabelPlacement.NORTH_WEST); return lineMarker; "," LineMarker XXXXX = new LineMarker(chart, horizontal, position, Color.darkGray); XXXXX.setLabel(label); XXXXX.setLabelPlacement(LabelPlacement.NORTH_WEST); return XXXXX; "
1, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(Phone6110LatestTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , TestSuite XXXXX = new TestSuite(); XXXXX.addTest(LoginTests.suite()); XXXXX.addTest(Phone6110LatestTestPlan.suite()); XXXXX.addTestSuite(StopSeleniumTest.class); return XXXXX; 
1," if (ivjRedoMenuItem == null) { try { ivjRedoMenuItem = new JMenuItem(); ivjRedoMenuItem.setName(""RedoMenuItem""); ivjRedoMenuItem.setText(CALIDEMessages.getString(""CALIDE.RedoMenuItem"")); "," if (ivjRedoMenuItem == null) { try { ivjRedoMenuItem = new JMenuItem(); ivjRedoMenuItem.setName(""RedoMenuItem""); ivjRedoMenuItem.setText(CALIDEMessages.getString(""CALIDE.RedoMenuItem"")); "
1," StringBuilder sb = new StringBuilder(); sb.append(new MHeader().toString()); if (this.eDefaultPackage_SpecifiedPackage.size() > 0) { sb.append(System.getProperty(""line.separator"")); "," StringBuilder sb = new StringBuilder(); sb.append(new MHeader().toString()); if (this.eDefaultPackage_SpecifiedPackage.size() > 0) { sb.append(System.getProperty(""line.separator"")); "
1," super(decodingByteBuffer, decodingCharBuffer, charsetDecoder); this.lastOutputLineBuilder = new StringBuilder(); this.outputBuilder = outputBuilder; this.terminator = terminator; "," super(decodingByteBuffer, decodingCharBuffer, charsetDecoder); this.lastOutputLineBuilder = new StringBuilder(); this.outputBuilder = outputBuilder; this.terminator = terminator; "
0," lock.lock(); try { E[] data; E[] old = getData(); int size = old.length; data = newElementArray(size + 1); System.arraycopy(old, 0, data, 0, size); data[size] = e; setData(data); return true; "," this.name = name; this.id = id; this.priority = priority; this.keyExchange = keyExchange; this.cipher = cipher; this.exportable = cipher.exportable; if (name.endsWith(""_MD5"")) { macAlg = M_MD5; "
0, this.desaturationPoint = new AtomicLong(desaturationPoint); this.saturationPoint = new AtomicLong(saturationPoint); queueSize = new AtomicLong(0); saturated = new AtomicBoolean(false); , if( action.shouldVisitParameterDeclarations ){ switch( action.visit( this ) ){ case ASTVisitor.PROCESS_ABORT : return false; case ASTVisitor.PROCESS_SKIP : return true; default : break; 
0, String ceilingEntityFullyQualifiedClassname = persistencePackage.getCeilingEntityFullyQualifiedClassname(); return Page.class.getName().equals(ceilingEntityFullyQualifiedClassname); ," File charFile = new File(characterFilename); String charname = charFile.getName(); String extension = StringUtils.substringAfterLast(exportTemplateFilename, "".""); if (isPdf) { extension = ""pdf""; "
0," checkNotNull(s); int slen = s.length(); for (int index = 0; index < slen; index++) { char c = s.charAt(index); if (c >= safeOctets.length || !safeOctets[c]) { return escapeSlow(s, index); "," if (working == null) { ensureCommand(CMD_PROPERTY_KEY, CMD_FALLBACK); working = checkCmd(cmd, ""help"", ""help""); if (!working.booleanValue()) { working = checkCmd(cmd, ""--version""); "
1," if (!mTimeout) { if (mCurrentDialog == DIALOG_YES_NO_CONNECT) { sendIntentToReceiver(BluetoothMasService.ACCESS_ALLOWED_ACTION, BluetoothMasService.EXTRA_ALWAYS_ALLOWED, mAlwaysAllowedValue); "," if (!mTimeout) { if (mCurrentDialog == DIALOG_YES_NO_CONNECT) { sendIntentToReceiver(BluetoothMasService.ACCESS_ALLOWED_ACTION, BluetoothMasService.EXTRA_ALWAYS_ALLOWED, mAlwaysAllowedValue); "
0," MeiNamespace ns = new MeiNamespace(""href"", ""pre""); MeiElement e = new MeiElement(ns, ""el""); assertThat(e.getNamespace().getHref(), is(""href"")); assertThat(e.getName(), is(""el"")); ", Tuples.asModifiable( joinedTuple ); joinedTuple.clear(); for( Collection collection : collections ) joinedTuple.addAll( collection.isEmpty() ? emptyTuple : keysTuple ); return joinedTuple; 
0," String stats = """"; stats += ""Nodes: "" + cluster.getVertexCount() + ""\n""; stats += ""Edges: "" + cluster.getEdgeCount() + ""\n""; stats += ""Contents: "" + cluster.getVertices()+""\n""; return stats; "," final SSLCredentialsDialog dialog = new SSLCredentialsDialog(myProject, realm, authCredsOn); if (previousAuth == null) { dialog.setTitle(SvnBundle.message(""dialog.title.authentication.required"")); "
1," String a = ""a""; String a1 = ""A""; Dictionary dict = getDict(); dict.put(asSL(a)); dict.put(asSL(a1)); Set<String> set = dict.asStringSet(); assertTrue(set.contains(a)); assertEquals(2, set.size()); "," String XXXXX = ""XXXXX""; String XXXXX1 = ""A""; DictionXXXXXry XXXXX = getDict(); XXXXX.put(XXXXXsSL(XXXXX)); XXXXX.put(XXXXXsSL(XXXXX1)); Set<String> set = XXXXX.XXXXXsStringSet(); XXXXXssertTrue(set.contXXXXXins(XXXXX)); XXXXXssertEquXXXXXls(2, set.size()); "
0," HSSFSheet sheet = getSheetAt(sheetIndex); CellRangeAddress rows = null; CellRangeAddress cols = null; if (startRow != -1) { rows = new CellRangeAddress(startRow, endRow, -1, -1); ", this.circledCharacter = protectAgaintNull(circledCharacter); this.stereo = protectAgaintNull(stereo); this.name = protectAgaintNull(name); this.generic = protectAgaintNull(generic); 
1," return new Binder<BindBean, Object>() { public void bind(SQLStatement q, BindBean bind, Object arg) { final String prefix; if (""___jdbi_bare___"".equals(bind.value())) { prefix = """"; "," return new Binder<BindBean, Object>() { public void bind(SQLStatement q, BindBean bind, Object arg) { final String prefix; if (""___jdbi_bare___"".equals(bind.value())) { prefix = """"; "
0," BusyIndicator.showWhile(fWsText.getText().getDisplay(), new Runnable() { public void run() { Choice[] choices = getWSChoices(); openPortabilityChoiceDialog(IEnvironment.P_WS, fWsText, choices); "," FacesContext fc = FacesContext.getCurrentInstance(); return Application.getMessage(fc, MSG_LEFT_QUOTE) + property.getDocument().getName() + Application.getMessage(fc, MSG_RIGHT_QUOTE); "
0, if (node == null || question == null || attr == null) return DEFAULT_SCALE_VALUE; String attrValue = node.getAttribute(attr); if (attrValue == null) { return DEFAULT_SCALE_VALUE; ," CPStringBuilder sb = new CPStringBuilder(); int i = 0; for(char c = iter.first(); c != CharacterIterator.DONE; c = iter.next(), i++) { if (begin <= i) sb.append(c); if (limit <= i) break; "
0, viewType = Vt; bandHeight = Bh; dtedLevel = Dl; slopeAdjust = Sa; xPixInterval = xpi; yPixInterval = ypi; subx = Subx; suby = Suby; lon = Lon; lat = Lat; height = Height; width = Width; ," actions.add(new NodeValue(current.getNode(), current.getNodeValue())); this.setRank(((LeafNode)current.getNode()).getRank()); popularity = ((LeafNode)current.getNode()).getNum_facts_classified(); "
1," assert (beforeIndex >= 0) && (beforeIndex <= getWidgetCount()) : ""beforeIndex out of bounds""; int idx = getWidgetIndex(child); if (idx != -1) { remove(child); if (idx < beforeIndex) { beforeIndex--; "," assert (beforeIndex >= 0) && (beforeIndex <= getWidgetCount()) : ""beforeIndex out of bounds""; int XXXXX = getWidgetIndex(child); if (XXXXX != -1) { remove(child); if (XXXXX < beforeIndex) { beforeIndex--; "
1," switch (featureID) { case NetDSLPackage.MULTIPLICATIVE_EXP__LEFT: return basicSetLeft(null, msgs); case NetDSLPackage.MULTIPLICATIVE_EXP__RIGHT: return basicSetRight(null, msgs); "," switch (featureID) { case NetDSLPackage.MULTIPLICATIVE_EXP__LEFT: return basicSetLeft(null, msgs); case NetDSLPackage.MULTIPLICATIVE_EXP__RIGHT: return basicSetRight(null, msgs); "
1, IWorkbenchPart part = partRef.getPart(false); if (part.equals(fPart)) { if (fAction.isChecked()) { DebugEventFilterService.getInstance().removeDebugEventFilter(fPart); fAction.setChecked(false); , IWorkbenchPart XXXXX = XXXXXRef.getPart(false); if (XXXXX.equals(fPart)) { if (fAction.isChecked()) { DebugEventFilterService.getInstance().removeDebugEventFilter(fPart); fAction.setChecked(false); 
1, this.javaContext = (JavaContentAssistInvocationContext) javaContext; ctx = ctxFactory.create(this.javaContext); query = ObjectUsage.newObjectUsageWithDefaults(); proposals = Lists.newLinkedList(); , this.javaContext = (JavaContentAssistInvocationContext) javaContext; ctx = ctxFactory.create(this.javaContext); query = ObjectUsage.newObjectUsageWithDefaults(); proposals = Lists.newLinkedList(); 
1, for (Iterator it = hierarchyPanels.iterator(); it.hasNext();) { HierarchyPanel hierarchyPanel = (HierarchyPanel) it.next(); if (hierarchyPanel.getHierarchy() == hierarchy) { return hierarchyPanel; , for (Iterator XXXXX = XXXXXs.XXXXXerator(); XXXXX.hasNext();) { HierarchyPanel XXXXX = (HierarchyPanel) XXXXX.next(); if (XXXXX.getHierarchy() == hierarchy) { return XXXXX; 
1," WizardDialog dialog = null; try { CompRelationsWizard wizard = new CompRelationsWizard(model); dialog = new WizardDialog(Display.getDefault().getActiveShell(), wizard); dialog.open(); "," WizardDialog XXXXX = null; try { CompRelationsWizard XXXXX = new CompRelationsWizard(model); XXXXX = new WizardDialog(Display.getDefault().getActiveShell(), XXXXX); XXXXX.open(); "
0," String osName = System.getProperty(""os.name""); boolean isMac = osName.startsWith(""Mac"") || osName.startsWith(""Darwin""); boolean isWin = osName.startsWith(""Windows""); if (isMac) { return "".dylib""; "," PelopsException pelopsException = translator.translate(new org.apache.cassandra.thrift.TimedOutException()); assertEquals(""Translation failed"", TimedOutException.class, pelopsException.getClass()); "
0, switch (rel) { case IPageLayout.BOTTOM: return SWT.BOTTOM; case IPageLayout.LEFT: return SWT.LEFT; case IPageLayout.RIGHT: return SWT.RIGHT; case IPageLayout.TOP: return SWT.TOP; default: return 0; ," String domain; String name = """"; try { DomainChangedEvent evt = (DomainChangedEvent) event; domain = evt.getDomainConfiguration().getDomainName(); name = evt.getDomainConfiguration().getName(); "
1, final Log mockLogger = context.mock(Log.class); final boolean boolResult = supportedMimeType; XDRHelper result = new XDRHelper() { @Override protected Log createLogger() { return mockLogger; , final Log XXXXX = context.mock(Log.class); final boolean XXXXX = supportedMimeType; XDRHelper XXXXX = new XDRHelper() { @Override protected Log createLogger() { return XXXXX; 
1," if (mrjVersion >= 4.0f) MRJ4EventProxy.getInstance().addPreferencesListener(l, source); else if (mrjVersion >= 3.0f) MRJ23EventProxy.getInstance().addPreferencesListener(l, source); "," if (mrjVersion >= 4.0f) MRJ4EventProxy.getInstance().addPreferencesListener(l, source); else if (mrjVersion >= 3.0f) MRJ23EventProxy.getInstance().addPreferencesListener(l, source); "
1," Menu menu = new Menu( shell, SWT.POP_UP ); menu.addMenuListener( mock( MenuListener.class ) ); assertTrue( menu.isListening( SWT.Show ) ); assertTrue( menu.isListening( SWT.Hide ) ); "," Menu XXXXX = new Menu( shell, SWT.POP_UP ); XXXXX.addMenuListener( mock( MenuListener.class ) ); assertTrue( XXXXX.isListening( SWT.Show ) ); assertTrue( XXXXX.isListening( SWT.Hide ) ); "
1," if (event.getSource() == menu) { System.out.print(""Current selection: ""); for (Map.Entry<Integer, Boolean> e : selection .entrySet()) { if (e.getValue()) { System.out.print(e.getKey() + "" ""); "," if (event.getSource() == menu) { System.out.print(""Current selection: ""); for (Map.Entry<Integer, Boolean> e : selection .entrySet()) { if (e.getValue()) { System.out.print(e.getKey() + "" ""); "
1," Color background = getBackground(); Color border = null; if( model.isMousePressed() ){ border = Colors.diffMirror( background, 0.3 ); background = Colors.undiffMirror( background, 0.6 ); "," Color XXXXX = getBackground(); Color XXXXX = null; if( model.isMousePressed() ){ XXXXX = Colors.diffMirror( XXXXX, 0.3 ); XXXXX = Colors.undiffMirror( XXXXX, 0.6 ); "
1," return findUnique(""from OnmsMonitoredService as svc "" + ""where svc.ipInterface.node.id = ? and svc.ipInterface.ipAddress = ? and svc.serviceType.id = ?"", nodeId, ipAddr, serviceId); "," return findUnique(""from OnmsMonitoredService as svc "" + ""where svc.ipInterface.node.id = ? and svc.ipInterface.ipAddress = ? and svc.serviceType.id = ?"", nodeId, ipAddr, serviceId); "
1, if (!m_enabled && enabled) { List<ClickHandler> handlers = new ArrayList<ClickHandler>(m_clickHandlers); m_clickHandlers.clear(); for (ClickHandler handler : handlers) { addClickHandler(handler); , if (!m_enabled && enabled) { List<ClickHandler> handlers = new ArrayList<ClickHandler>(m_clickHandlers); m_clickHandlers.clear(); for (ClickHandler handler : handlers) { addClickHandler(handler); 
1, return (editingContext.getEObject() instanceof UseCase) && (UseCaseUseCasePropertiesEditionComponent.USECASE_PART.equals(part) || MetadataCptPropertiesEditionComponent.METADATAS_PART.equals(part)); , return (editingContext.getEObject() instanceof UseCase) && (UseCaseUseCasePropertiesEditionComponent.USECASE_PART.equals(part) || MetadataCptPropertiesEditionComponent.METADATAS_PART.equals(part)); 
0," String directory = null; if (filePath.indexOf(File.separatorChar) != -1 ) { int lastIndexOf = filePath.lastIndexOf(File.separatorChar); directory = filePath.substring(0, (lastIndexOf+1)); "," String action = null; this.pageIds = getSelectedIds(PAGE_KEY, iwc); this.templateIds = getSelectedIds(TEMPLATE_KEY, iwc); if (iwc.isParameterSet(SUBMIT_EXPORT_KEY)) { action = EXPORT_ACTION; "
1, File current = root; while (current != null) { final VirtualFile vFile = LocalFileSystem.getInstance().findFileByIoFile(root); if (vFile != null) return vFile; current = current.getParentFile(); , File XXXXX = root; while (XXXXX != null) { final VirtualFile XXXXX = LocalFileSystem.getInstance().findFileByIoFile(root); if (XXXXX != null) return XXXXX; XXXXX = XXXXX.getParentFile(); 
1," StringBuilder sb = new StringBuilder(); sb.append(""{""); if (imageId != null) sb.append(""ImageId: "" + imageId + "", ""); if (attribute != null) sb.append(""Attribute: "" + attribute + "", ""); sb.append("""," StringBuilder sb = new StringBuilder(); sb.append(""{""); if (imageId != null) sb.append(""ImageId: "" + imageId + "", ""); if (attribute != null) sb.append(""Attribute: "" + attribute + "", ""); sb.append("""
0, Class childType = childClass.getClass(); for (Iterator it = validClasses.iterator(); it.hasNext();) { Class c = (Class) it.next(); if (c.isAssignableFrom(childType)) { return true; ," long userId = UserPropertyUtil.getUserId(getApplicationContext()); try { ServerServiceUtil.acceptMatch(userId, matchId); Log.i(TAG, ""acceptMatch:userId="" + userId + "",matchId="" + matchId); "
0," if( transform instanceof ImageFloat32 ) adjustForDisplay((ImageFloat32)transform,numLevels,(float)valueRange); else adjustForDisplay((ImageInteger)transform,numLevels,(int)valueRange); "," x = one; final AtomicReferenceFieldUpdater<AtomicReferenceFieldUpdaterTest, Integer>a; try { a = AtomicReferenceFieldUpdater.newUpdater(AtomicReferenceFieldUpdaterTest.class, Integer.class, ""x""); "
1," XaDataSource datasource = graphdb.getXaDataSourceManager().getXaDataSource( name ); if ( datasource == null ) throw new NullPointerException( ""Could not access "" + name ); return datasource; "," XaDataSource XXXXX = graphdb.getXaDataSourceManager().getXaDataSource( name ); if ( XXXXX == null ) throw new NullPointerException( ""Could not access "" + name ); return XXXXX; "
1," Player player = event.getPlayer(); if(plugin.jailedPlayers.contains(player.getName())) { player.sendMessage(ChatColor.DARK_RED + ""You cannot speak in the jail!""); event.setCancelled(true); "," Player player = event.getPlayer(); if(plugin.jailedPlayers.contains(player.getName())) { player.sendMessage(ChatColor.DARK_RED + ""You cannot speak in the jail!""); event.setCancelled(true); "
0," putValue(Action.SHORT_DESCRIPTION, tr(""Apply resolved conflicts"")); putValue(Action.NAME, tr(""Apply"")); putValue(Action.SMALL_ICON, ImageProvider.get(""ok"")); updateEnabledState(); "," if (parent.getName().equals(""."")) { VirtualFile base = parent.getParent(); if (base != null) { boolean reported; synchronized (myReportedRoots) { reported = myReportedRoots.contains(base); "
1," Pipe pipe = BlockGenericPipe.getPipe(context.world(), slot.x, slot.y, slot.z); if (BlockGenericPipe.isValid(pipe)) return pipe.itemID == slot.cpt.getInteger(""pipeId""); else return false; "," Pipe XXXXX = BlockGenericPipe.getPipe(context.world(), slot.x, slot.y, slot.z); if (BlockGenericPipe.isValid(XXXXX)) return XXXXX.itemID == slot.cpt.getInteger(""XXXXXId""); else return false; "
1," logo = new com.google.gwt.resources.client.impl.ImageResourcePrototype( ""logo"", com.google.gwt.safehtml.shared.UriUtils.fromTrustedString(externalImage), 0, 0, 140, 75, false, false ); "," logo = new com.google.gwt.resources.client.impl.ImageResourcePrototype( ""logo"", com.google.gwt.safehtml.shared.UriUtils.fromTrustedString(externalImage), 0, 0, 140, 75, false, false ); "
0, if ( dataSetDesign != null ) { QueryDefinition defn = new QueryDefinition( null ); defn.setDataSetName( dataSetDesign.getName( ) ); if ( rowsToReturn > 0 ) { defn.setMaxRows( rowsToReturn ); , RepositoryConfiguration conf = new RepositoryConfiguration(); conf.setName(repositoryNameTxtField.getText()); if (dataDomainRadio.isSelected()) { conf.setDomain(RepositoryDomain.DATA); 
1, if (!player.isActive()) stop(); else { int special = player.getMeleeSet().getSpecial(); special += 10; if (special > 100) special = 100; player.getMeleeSet().setSpecial(special); , if (!player.isActive()) stop(); else { int XXXXX = player.getMeleeSet().getSpecial(); XXXXX += 10; if (XXXXX > 100) XXXXX = 100; player.getMeleeSet().setSpecial(XXXXX); 
0," if (ImplHelper.isManageable(val)) { PersistenceCapable pc = ImplHelper.toPersistenceCapable(val, store.getConfiguration()); if (pc.pcGetStateManager() != null) return pc.pcGetStateManager(); "," if (jtsLogger.logger.isDebugEnabled()) { jtsLogger.logger.debug(""CachedRecoveredTransaction.addResourceRecord ["" + _theTransactionUid + "", "" + _theTransactionType + ""]"" + ""("" + rcUid + "")""); "
0," final long nowTime = System.currentTimeMillis(); final boolean eventYetToStart = ((int) Math.max(0, (UIUtils.CONFERENCE_START_MILLIS - nowTime) / 1000)) > 0; if(eventYetToStart){ updateScore(this); ", this.layer = layer; GuiStrokeWidth.setLayer(layer); GuiStrokeColor.setLayer(layer); GuiStrokeAlpha.setLayer(layer); GuiStrokeLineCap.setLayer(layer); GuiStrokeLineJoin.setLayer(layer); 
0, if (widgetToScroll == null) return; if (!currentlyScrolling) return; event.preventDefault(); event.stopPropagation(); currentlyScrolling = false; if (!moved) { resetPosition(); return; ," this.systemCache = systemCache; this.maxCacheSize = maxCacheSize; this.lockedCacheSize = 0; this.caches = new ConcurrentHashMap<Object, Cacheable>( 2 ); this.freeCaches = new CacheList( ); "
1," IPath deployPlanPath = comp.getRootFolder().getUnderlyingFolder().getProjectRelativePath().append(""META-INF"").append(APP_CLIENT_PLAN_NAME); return comp.getProject().getFile(deployPlanPath); "," IPath XXXXX = comp.getRootFolder().getUnderlyingFolder().getProjectRelativePath().append(""META-INF"").append(APP_CLIENT_PLAN_NAME); return comp.getProject().getFile(XXXXX); "
1, log = Logger.getLogger(this.getClass().getName()); getPSU().addAll(modelServer.getPSU()); getFan().addAll(modelServer.getFan()); getWaterCooler().addAll(modelServer.getWaterCooler()); , log = Logger.getLogger(this.getClass().getName()); getPSU().addAll(modelServer.getPSU()); getFan().addAll(modelServer.getFan()); getWaterCooler().addAll(modelServer.getWaterCooler()); 
1," Document doc = parentList.getOwnerDocument(); Element plug = doc.createElement(PLUGIN); parentList.appendChild(plug); if (groupId != null) { createElementWithText(plug, GROUP_ID, groupId); "," Document XXXXX = parentList.getOwnerDocument(); Element XXXXX = XXXXX.createElement(PLUGIN); parentList.appendChild(XXXXX); if (groupId != null) { createElementWithText(XXXXX, GROUP_ID, groupId); "
0, if (event.getAction() == MotionEvent.ACTION_UP) { moveOnScrollChangedFlag_ = true; for (RetractiveHorizontalScrollView syncView : syncScrollViews_) { syncView.moveOnScrollChangedFlag_ = true; ," ProtegeUI.getModalDialogFactory().showDialog(ProtegeUI.getTopLevelContainer(owlModel.getProject()), new ReasonerInspectorPanel(owlModel), ""Reasoner Inspector"", ModalDialogFactory.MODE_CLOSE); "
1, StringBundler sb = new StringBundler(3); sb.append(_COLUMN_USER_PREFS); sb.append(namespace); Layout layout = themeDisplay.getLayout(); sb.append(layout.getPlid()); return sb.toString(); , StringBundler XXXXX = new StringBundler(3); XXXXX.append(_COLUMN_USER_PREFS); XXXXX.append(namespace); Layout XXXXX = themeDisplay.getLayout(); XXXXX.append(XXXXX.getPlid()); return XXXXX.toString(); 
0," LlcpSocket llcpSocket = getOpenLlcpSocket(new AddressPair(remoteAddress, localAddress)); closeSocket(llcpSocket); llcpSocket.onDisconnect(); return handleMessageToSend(llcpSocket); "," if (fActive && (fActiveRegion != null)) { fRememberedPosition = new Position(fActiveRegion.getOffset(), fActiveRegion.getLength()); try { event.getDocument().addPosition(fRememberedPosition); "
1," switch (featureID) { case GMFGenPackage.GEN_ACTION_FACTORY_CONTRIBUTION_ITEM__OWNER: return eBasicSetContainer(null, GMFGenPackage.GEN_ACTION_FACTORY_CONTRIBUTION_ITEM__OWNER, msgs); "," switch (featureID) { case GMFGenPackage.GEN_ACTION_FACTORY_CONTRIBUTION_ITEM__OWNER: return eBasicSetContainer(null, GMFGenPackage.GEN_ACTION_FACTORY_CONTRIBUTION_ITEM__OWNER, msgs); "
1," if (invisibleFrame == null) { try { Class.forName(""javax.swing.JFrame""); invisibleFrame = new JFrame(); ((JFrame)invisibleFrame).setDefaultCloseOperation( JFrame.DO_NOTHING_ON_CLOSE); "," if (invisibleFrame == null) { try { Class.forName(""javax.swing.JFrame""); invisibleFrame = new JFrame(); ((JFrame)invisibleFrame).setDefaultCloseOperation( JFrame.DO_NOTHING_ON_CLOSE); "
1," View manif = new CanvasManifestation(mockParentComponent, new ViewInfo(CanvasManifestation.class,"""",ViewType.OBJECT)) { @Override public ExtendedProperties getViewProperties() { return extProps; "," View manif = new CanvasManifestation(mockParentComponent, new ViewInfo(CanvasManifestation.class,"""",ViewType.OBJECT)) { @Override public ExtendedProperties getViewProperties() { return extProps; "
0, Run lastBuild = job.getLastBuild(); while (lastBuild != null && (lastBuild.hasntStartedYet() || lastBuild.isBuilding() || lastBuild .isLogUpdated())) { lastBuild = lastBuild.getPreviousBuild(); ," Matcher matcher = PATTERN.matcher(path.toString()); if (matcher.matches()) { DateFormat format = new SimpleDateFormat(""yyyy/MM/dd""); try { return inInterval(format.parse(matcher.group(1))); "
1, double avgError = 0; int numConnectedViews = 0; for ( ViewErrorPairWise error : connectedViews ) if ( error.isConnected() ) { avgError += error.getAvgError(); ++numConnectedViews; , double XXXXX = 0; int XXXXX = 0; for ( ViewErrorPairWise error : connectedViews ) if ( error.isConnected() ) { XXXXX += error.getAvgError(); ++XXXXX; 
0, loadDevices(); ListIterator<Device> deviceIter = getAllDevices().listIterator(); while (deviceIter.hasNext()) { Device d = deviceIter.next(); if (d.equals(device)) { deviceIter.remove(); , boolean isItem = false; String[] items = fInstallLocation.getItems(); for (int i = 0; i < items.length; i++) { if (fInstallLocation.getText().equals(items[i])) { isItem = true; break; 
1," super.reset(mapping, request); CollectionUtils.forAllDo(clientDetails, new Closure() { @Override public void execute(Object arg0) { ((MultipleLoanCreationDto) arg0).resetSelected(); "," super.reset(mapping, request); CollectionUtils.forAllDo(clientDetails, new Closure() { @Override public void execute(Object arg0) { ((MultipleLoanCreationDto) arg0).resetSelected(); "
0," long[] a = this.a; int capacity = a.length; int n = this.n; int nNew = n + c; if (nNew > capacity) { long[] aNew = newArray(capacity, nNew); System.arraycopy(a, 0, aNew, 0, n); this.a = aNew; "," List<String> source = Arrays.asList(""a"", ""b"", ""c""); Set<String> dest = (Set<String>) convert(source, Set.class); assertTrue(dest instanceof Set); Asserts.assertEquals(source, dest); "
1, final ChannelBuffer resp = ChannelBuffers.buffer(9); resp.writeByte(1); resp.writeLong(World.getWorld().getUptime()); channel.write(resp); setState(ApiDecoderState.LOGIN_HEADER); return null; , final ChannelBuffer XXXXX = ChannelBuffers.buffer(9); XXXXX.writeByte(1); XXXXX.writeLong(World.getWorld().getUptime()); channel.write(XXXXX); setState(ApiDecoderState.LOGIN_HEADER); return null; 
0, int positionInTailArr = base - TAIL_OFFSET; int keyLength = key.length(); for(int i = 0; i < keyLength; i++) { if(key.charAt(i) != tailBuffer.get(positionInTailArr + i)){ return -1; ," if (parameters.getCompletionType() != CompletionType.SMART) return; Collection<?> variants = getVariants(parameters); MavenPropertyCompletionContributor.addVariants(variants, result); "
0," StringTokenizer t1 = new StringTokenizer(imports, "";""); while (t1.hasMoreTokens()) { String importDecl = t1.nextToken().trim(); if (importDecl.length() == 0 && !t1.hasMoreTokens()) { break; ", if (event.getState() == IMIBackend.State.TERMINATED && event.getBackendId().equals(fMIBackend.getId())) { fExitCode.set(fMIBackend.getExitCode()); for (RequestMonitor rm : fWaitForRMs) { rm.done(); 
1," conf = new ResponseAdaptiveRConfig(); conf.setTrial(new Trial()); conf.setInitializeCountBallsResponseAdaptiveR(10); assertEquals(10, conf.getInitializeCountBallsResponseAdaptiveR()); "," conf = new ResponseAdaptiveRConfig(); conf.setTrial(new Trial()); conf.setInitializeCountBallsResponseAdaptiveR(10); assertEquals(10, conf.getInitializeCountBallsResponseAdaptiveR()); "
0, for (QName qn : provider.getAssertionTypes()) { Set<PolicyInterceptorProvider> providers = super.get(qn); if (providers == null) { providers = new CopyOnWriteArraySet<PolicyInterceptorProvider>(); ," log.debug(""merging PolicyDef instance""); try { PolicyDef result = (PolicyDef) sessionFactory.getCurrentSession() .merge(detachedInstance); log.debug(""merge successful""); return result; "
1, int hash = 7; hash = 83 * hash + (this.maritalStatus != null ? this.maritalStatus.hashCode() : 0); hash = 83 * hash + (this.displayString != null ? this.displayString.hashCode() : 0); return hash; , int XXXXX = 7; XXXXX = 83 * XXXXX + (this.maritalStatus != null ? this.maritalStatus.XXXXXCode() : 0); XXXXX = 83 * XXXXX + (this.displayString != null ? this.displayString.XXXXXCode() : 0); return XXXXX; 
1," int formatIndex = cell.getCellStyle().getDataFormat(); String formatStr = cell.getCellStyle().getDataFormatString(); return createFormat(cell.getNumericCellValue(), formatIndex, formatStr); "," int XXXXX = cell.getCellStyle().getDataFormat(); String XXXXX = cell.getCellStyle().getDataFormatString(); return createFormat(cell.getNumericCellValue(), XXXXX, XXXXX); "
0, RegisteredServiceProvider<Economy> economyProvider = plugin.getServer().getServicesManager().getRegistration(Economy.class); if (economyProvider != null) { economy = economyProvider.getProvider(); , if( rightJustified ) { double length = myText.length(); double charLength = textWidth / length; double distanceToMoveToLeft = charLength * ( length - 1 ) / 2; x = x - distanceToMoveToLeft * scale.x; 
1, assert col >= 0 && col <= columnNames.length; LocalVirtualMachine vm = vmList.get(row); switch (col) { case COL_NAME: return vm.displayName(); case COL_PID: return vm.vmid(); default: return null; , assert col >= 0 && col <= columnNames.length; LocalVirtualMachine XXXXX = XXXXXList.get(row); switch (col) { case COL_NAME: return XXXXX.displayName(); case COL_PID: return XXXXX.XXXXXid(); default: return null; 
1," if (m_countStateComments == null) { CmsFormDatabaseFilter filter = getCommentFilter(true, true); try { m_countStateComments = new Integer(CmsFormDataAccess.getInstance().countForms(filter)); "," if (m_countStateComments == null) { CmsFormDatabaseFilter XXXXX = getCommentFilter(true, true); try { m_countStateComments = new Integer(CmsFormDataAccess.getInstance().countForms(XXXXX)); "
0, switch (getDBType(em)) { case db2: assertLockTestSQLs(Select + tableLfName + Where + DB2Lock); break; case derby: case oracle: default: assertLockTestSQLs(Select + tableLfName + Where + ForUpdate); ," StringBuilder builder = new StringBuilder(); builder.append(""[""); for (int i = 0; i < children.length; i++) { if (i > 0) builder.append("",""); builder.append(getPointSets()[i].toString()); "
0," IProject project = page.getFolder().getProject(); try { project.setPersistentProperty(WikiExportWizard.DIRECTORY_QUALIFIED_NAME, new File(page.getExportDirectoryPath()).getAbsolutePath()); "," AttributeList attrList = new AttributeList(); try { long fsize = mpegFile.length(); Attribute sizeStr = new Attribute(ItemNode.SIZE, Long.toString(fsize)); attrList.add(sizeStr); "
0, classe.setProdTipoId(Integer.valueOf(hdnCod.getValueAsString())); classe.setProdTipoValor(txtValor.getValueAsString()); classe.setProdTipoDescricao(txtDescricao.getValueAsString()); return true; , final AsyncResult<DataContext> callback = DataManager.getInstance().getDataContextFromFocus(); final DataContext context = callback.getResult(); if (context == null) { return false; 
1," init(); Log.d(""Database clean: started""); Cursor cursor; Set<String> geocodes = new HashSet<String>(); try { if (more) { cursor = database.query( dbTableCaches, new String[]{""geocode"""," init(); Log.d(""Database clean: started""); Cursor cursor; Set<String> geocodes = new HashSet<String>(); try { if (more) { cursor = database.query( dbTableCaches, new String[]{""geocode"""
1," if ( property.isAnnotationPresent( Immutable.class ) ) { throw new AnnotationException( ""@Immutable on property not allowed. "" + ""Only allowed on entity level or on a collection."" ); "," if ( property.isAnnotationPresent( Immutable.class ) ) { throw new AnnotationException( ""@Immutable on property not allowed. "" + ""Only allowed on entity level or on a collection."" ); "
0," Factory factory = new Factory(); ArrayList<String> params = new ArrayList<String>(); assertEquals(factory.createOperator(params).getClass(), new ConcatenationOperator().getClass()); "," Buffer<E> blockingBuffer = BlockingBuffer.blockingBuffer(new MyBuffer<E>(), 100); E obj = makeElement(); new DelayedAdd<E>(blockingBuffer, obj, 500).start(); try { blockingBuffer.remove(); "
1, super.paintComponent(g); if (value == null || !value.isValid()) return; int ymax=this.getSize().height - 1; int xloop = 10; int xowloop = 0; if(value.isOnewayLoopForwardPart) { xowloop = -3; , super.paintComponent(g); if (value == null || !value.isValid()) return; int ymax=this.getSize().height - 1; int xloop = 10; int xowloop = 0; if(value.isOnewayLoopForwardPart) { xowloop = -3; 
1, final List<String> javaSdks = new ArrayList<String>(); final Sdk[] sdks = sdkModel.getSdks(); for (Sdk jdk : sdks) { if (AndroidSdkUtils.isApplicableJdk(jdk)) { javaSdks.add(jdk.getName()); , final List<String> javaSdks = new ArrayList<String>(); final Sdk[] sdks = sdkModel.getSdks(); for (Sdk jdk : sdks) { if (AndroidSdkUtils.isApplicableJdk(jdk)) { javaSdks.add(jdk.getName()); 
1, final EClass eclass = EcoreFactory.eINSTANCE.createEClass(); eclass.setName(name); EList<EClassifier> _eClassifiers = epkg.getEClassifiers(); _eClassifiers.add(eclass); return eclass; , final EClass eclass = EcoreFactory.eINSTANCE.createEClass(); eclass.setName(name); EList<EClassifier> _eClassifiers = epkg.getEClassifiers(); _eClassifiers.add(eclass); return eclass; 
1," assertNull( content.getStyleClass( ) ); content.setStyleClass( ""style1"" ); assertEquals( ""style1"", content.getStyleClass( ) ); content.setStyleClass( null ); assertNull( content.getStyleClass( ) ); "," assertNull( content.getStyleClass( ) ); content.setStyleClass( ""style1"" ); assertEquals( ""style1"", content.getStyleClass( ) ); content.setStyleClass( null ); assertNull( content.getStyleClass( ) ); "
1, Panel p = getPanel(); if (p!=null) getPanel().setStyleName(watch.getStyleName(getName())); watch.getUserInterface().removeWidget(getName()); watch.getUserInterface().addWidget(this); , Panel XXXXX = getPanel(); if (XXXXX!=null) getPanel().setStyleName(watch.getStyleName(getName())); watch.getUserInterface().removeWidget(getName()); watch.getUserInterface().addWidget(this); 
0, if (a.getType().equals(OsmPrimitiveType.WAY)) return -1; if (a.getType().equals(OsmPrimitiveType.NODE)) return 1; if (b.getType().equals(OsmPrimitiveType.WAY)) return 1; return -1; ," JideTabbedPane tabbedPane = new JideTabbedPane(); tabbedPane.setTabShape(JideTabbedPane.SHAPE_BOX); tabbedPane.addTab(""SimpleScrollPane"", createFlatScrollPane()); return tabbedPane; "
1," StringBuffer buf = new StringBuffer(""TypingMessage[""); buf.append(""fromID="").append(getFromID()); buf.append("";typingMessage="").append(getTypingMessage()).append(""]""); return buf.toString(); "," StringBuffer XXXXX = new StringBuffer(""TypingMessage[""); XXXXX.append(""fromID="").append(getFromID()); XXXXX.append("";typingMessage="").append(getTypingMessage()).append(""]""); return XXXXX.toString(); "
0," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; "," super(processor); Guardian.assertNotNull(""processor"", processor); _request = processor.getRequest(); _oldStatus = oldStatus; _newStatus = processor.getCurrentStatus(); _exception = null; "
0," Preconditions.checkNotNull(participant, ""Null participant""); IndexDecision current = getIndexability(participant); if (indexability == null) { if (current != null) { data.remove(participant); "," String pigStorage = PigStorage.class.getName(); FuncSpec fs = new FuncSpec(pigStorage); Object o = PigContext.instantiateFuncFromSpec(fs); assertEquals(true, o instanceof PigStorage); "
1, this.name = name; this.cdn_enabled = cdnEnabled; this.log_retention = logRetention; this.ttl = ttl; this.cdn_uri = cdnUri; this.cdn_ssl_uri = cdnSslUri; this.cdn_streaming_uri = cdnStreamingUri; , this.name = name; this.cdn_enabled = cdnEnabled; this.log_retention = logRetention; this.ttl = ttl; this.cdn_uri = cdnUri; this.cdn_ssl_uri = cdnSslUri; this.cdn_streaming_uri = cdnStreamingUri; 
0, Player player = server.getPlayer(playerName); if (colors.containsKey(player.getHealth())) { player.setDisplayName(colors.get(player.getHealth()) + player.getName() + ChatColor.WHITE); ," bdd.runTest( given(noSetUp()), when(getCardTypes()), then(verifyResponseCodeIs(HTTP_OK)) .and(verifyResponseContains(""{ 'IndigoPlant' : { buildingCost : 1, victoryPoints : 1, category: 'PRODUCTION' "
1," String encodedSamlMessage = this.model.getConversationProperty(id, ""SAML-MESSAGE""); String urlDecodedSamlMessage = Encoding.urlDecode(encodedSamlMessage); return urlDecodedSamlMessage; "," String XXXXX = this.model.getConversationProperty(id, ""SAML-MESSAGE""); String XXXXX = Encoding.urlDecode(XXXXX); return XXXXX; "
0, Run lastBuild = job.getLastBuild(); while (lastBuild != null && (lastBuild.hasntStartedYet() || lastBuild.isBuilding() || lastBuild .isLogUpdated())) { lastBuild = lastBuild.getPreviousBuild(); , final FrameAnimator animator = new FrameAnimator(); animator.context = context; animator.frameUtil = new FrameUtil(); animator.assetUtil = new AssetUtil(context.getAssets()); return animator; 
0," String normalizedcommand = null; if (command.endsWith(LINEEND)) normalizedcommand = command.substring(0, command.indexOf(LINEEND)); else normalizedcommand = command; return normalizedcommand; ", boolean found = false; Iterator<FuzzyValue> it = fuzzyValueList.iterator(); while ( !found && it.hasNext() ) { FuzzyValue fv = it.next(); if (fv.getType().equals(fs)){ found = true; 
0, int length = (r.nextInt() % 5) + 10; StringBuilder sb = new StringBuilder(); for (int i = 0; i < length; i++) { sb.append(RANDOM_DICT[Math.abs(r.nextInt()) % RANDOM_DICT.length]); , String stringValue = (String) value; try { double doubleValue = currencyFormat.parse(stringValue).doubleValue(); if (doubleValue < 0.0) { return ValidationStatus.error(cannotBeNegativeMessage); 
0," String label = ((PortConnectionEnd) object).getName(); return label == null || label.length() == 0 ? getString(""_UI_PortConnectionEnd_type"") : getString(""_UI_PortConnectionEnd_type"") + "" "" + label; "," if (path != null) { String correctedPath = path; if (path.endsWith(RegistryConstants.PATH_SEPARATOR)) { correctedPath = path.substring(0, path.lastIndexOf(RegistryConstants.PATH_SEPARATOR)); "
0," ClassMapping elem = (elems.length == 0) ? null : elems[idx]; sel.whereForeignKey(_strat.getJoinForeignKey(elem), sm.getObjectId(), _strat.getFieldMapping(). getDefiningMapping(), store); "," String packageName = this.properties.getProperty(PACKAGE_NAME_KEY, ""fabric.package.default""); if (null != packageName) { this.properties.setProperty(PACKAGE_NAME_KEY, packageName.toLowerCase()); "
0, GetAssigningAuthoritiesByHomeCommunityResponseType response = new GetAssigningAuthoritiesByHomeCommunityResponseType(); if (NullChecker.isNullish(homeCommunityId.getValue())) { return null; , Size size = _ids.getSize( img ); double scale = _ids.getDpiResolution( ) / 72d; size.setWidth( size.getWidth( ) * scale ); size.setHeight( size.getHeight( ) * scale ); return size; 
0, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(Expando6011LatestTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; ," super(); Args.notNull(handler, ""HTTP service handler""); Args.notNull(params, ""HTTP parameters""); this.allocator = createByteBufferAllocator(); this.handler = handler; this.params = params; "
1," Node[] c = getConsequenceChildren(text); this.suggestions.clear(); for (int idx=0; idx < c.length; idx++) { if (addChildren) { this.addChildToList(c[idx], c[idx].getToken(), this.suggestions); "," Node[] c = getConsequenceChildren(text); this.suggestions.clear(); for (int idx=0; idx < c.length; idx++) { if (addChildren) { this.addChildToList(c[idx], c[idx].getToken(), this.suggestions); "
0," if (discrim.getValue() != null) return discrim.getValue(); if (StringUtils.isEmpty(_value)) { return discrim.getMappingRepository().getMappingDefaults(). getDiscriminatorValue(discrim, adapt); "," BlockAccess file = new BlockAccessMem(indexName, blockSize) ; BlockMgr blockMgr = new BlockMgrFileAccess(file, blockSize) ; blockMgr = new BlockMgrFreeChain(blockMgr) ; return track(blockMgr) ; "
1, Individual i1 = (Individual) a; Individual i2 = (Individual) b; return (((NSGA2MultiObjectiveFitness) i1.fitness).getObjective(o) > ((NSGA2MultiObjectiveFitness) i2.fitness).getObjective(o)); , Individual i1 = (Individual) a; Individual i2 = (Individual) b; return (((NSGA2MultiObjectiveFitness) i1.fitness).getObjective(o) > ((NSGA2MultiObjectiveFitness) i2.fitness).getObjective(o)); 
1, Ftr ftr = (Ftr) wordmlPackage.getDocumentModel().getSections().get(sectionNumber-1) .getHeaderFooterPolicy() .getEvenFooter().getJaxbElement(); return XmlUtils.marshaltoW3CDomDocument(ftr); , Ftr XXXXX = (Ftr) wordmlPackage.getDocumentModel().getSections().get(sectionNumber-1) .getHeaderFooterPolicy() .getEvenFooter().getJaxbElement(); return XmlUtils.marshaltoW3CDomDocument(XXXXX); 
1, Selection sel = Selection.get() ; if (sel == null || sel.getRangeCount() <= 0) return ; Range range = sel.getRangeAt(0) ; range.collapse(toStart) ; sel.removeAllRanges() ; sel.addRange(range) ; , Selection XXXXX = Selection.get() ; if (XXXXX == null || XXXXX.getRangeCount() <= 0) return ; Range XXXXX = XXXXX.getRangeAt(0) ; XXXXX.collapse(toStart) ; XXXXX.removeAllRanges() ; XXXXX.addRange(XXXXX) ; 
1," IntegerAttribute attr = (IntegerAttribute) item.getAttribute(qname); if(attr==null && value!=null) { attr = new MockIntegerAttribute(qname,value); item.addAttribute(attr); return; "," IntegerAttribute XXXXX = (IntegerAttribute) item.getAttribute(qname); if(XXXXX==null && value!=null) { XXXXX = new MockIntegerAttribute(qname,value); item.addAttribute(XXXXX); return; "
0," Buffer<E> blockingBuffer = BlockingBuffer.blockingBuffer(new MyBuffer<E>(), 500); E obj = makeElement(); new DelayedAdd<E>(blockingBuffer, obj, 100).start(); assertSame(obj, blockingBuffer.get()); "," String oldPackage = package_; package_ = newPackage; if(eNotificationRequired()) eNotify(new ENotificationImpl( this, Notification.SET, JunitresultPackage.TESTSUITE__PACKAGE, oldPackage, package_)); "
0, if(paintings.get(paint) != null && players.get(paintings.get(paint)) != null) { Player p = plugin.getServer().getPlayer(paintings.get(paint)); if(p == null || p.isDead()) return false; return true; , try { File file = new File(filename); byte[] b = new byte[(int) file.length()]; DataInputStream dis = new DataInputStream(new FileInputStream(file)); dis.readFully(b); return new String(b); 
0," if (!plugin.getPluginConfig().isDetailedOutput()) { if (!canSell()) { plugin.getLocale().sendMessage( p, STATUS_ONE_MATERIAL, getShopItems(), getMaterial().toString(plugin.getMaterialConfig()) ); "," Color fgColor = getForegroundColor(component, text, state, textAlpha); SubstanceTextUtilities.paintText(g, component, textRect, text, mnemonicIndex, component.getFont(), fgColor, null); "
1," Object obj = new Object(); assertEquals(17 * 37 + 19 * 41 + obj.hashCode(), new HashCodeBuilder(17, 37).appendSuper(new HashCodeBuilder(19, 41).append(obj).toHashCode()) .toHashCode()); "," Object XXXXX = new Object(); assertEquals(17 * 37 + 19 * 41 + XXXXX.hashCode(), new HashCodeBuilder(17, 37).appendSuper(new HashCodeBuilder(19, 41).append(XXXXX).toHashCode()) .toHashCode()); "
1," if (_escapedModelProxy == null) { _escapedModelProxy = (KaleoNotificationRecipient)ProxyUtil.newProxyInstance(_classLoader, _escapedModelProxyInterfaces, new AutoEscapeBeanHandler(this)); "," if (_escapedModelProxy == null) { _escapedModelProxy = (KaleoNotificationRecipient)ProxyUtil.newProxyInstance(_classLoader, _escapedModelProxyInterfaces, new AutoEscapeBeanHandler(this)); "
0," int startChar = parcel.readInt(); int endChar = parcel.readInt(); CharPos blinkingPos = new CharPos(startChar, endChar); if (mBlinkingPosList == null) { mBlinkingPosList = new ArrayList<CharPos>(); "," ByteArrayOutputStream bout = new ByteArrayOutputStream(); new VT100Writer(new PrintStream(bout)).fg(Color.RED, CharacterModifier.BOLD); assertEquals(ESC + ""1;31m"", new String(bout.toByteArray())); "
0," logExpected(""inside throwMethod()""); logExpected(""throwing NullPointerException""); logExpected(""caught Exception class java.lang.NullPointerException"" ); return super.getExpected(); ", final Component[] components = getComponents(); for (Component component : components) { if (component instanceof GlassPaneDialogWrapperPeer.TransparentLayeredPane) { return true; 
0, IModelElement parent = method.getParent(); if (parent instanceof IType) { RecordTypeDef typeDef = (RecordTypeDef) getTypeDef((IType) parent); return typeDef.getFields().get(method.getElementName()); ," for (OnTestLifeCycleRunnable run : pluginManager.getEnabledModulesByClass(OnTestLifeCycleRunnable.class)) { run.finish(perfTest, reason.name(), perfTestService, config.getVesion()); "
0," MyTestViewComponent2 createdView = new MyTestViewComponent2(); MyTestPresenter2 createdPresenter = createdView.createPresenter(); assertSame(createdView, createdPresenter.getView()); ", if (nullsFirst || nullsLast) { switch (context.getDialect()) { case DB2: case ASE: case CUBRID: case INGRES: case MYSQL: case SQLITE: case SQLSERVER: case SYBASE: { context.bind(field); 
1, MimeType mediaType = MimeType.getMatchingMimeType(headerValue.getValue()); if (MimeType.UNKNOWN.equals(mediaType)) { mediaType = MimeType.guessMediaTypeFromString(headerValue.getValue()); , MimeType XXXXX = MimeType.getMatchingMimeType(headerValue.getValue()); if (MimeType.UNKNOWN.equals(XXXXX)) { XXXXX = MimeType.guessMediaTypeFromString(headerValue.getValue()); 
1," int x = 20, y = 20, w = 120, h = 60; GC gc = event.gc; gc.setForeground(display.getSystemColor(SWT.COLOR_BLUE)); gc.setLineWidth(10); int[] caps = {SWT.CAP_FLAT, SWT.CAP_ROUND, SWT.CAP_SQUARE"," int XXXXX = 20, y = 20, w = 120, h = 60; GC XXXXX = event.XXXXX; XXXXX.setForeground(display.getSystemColor(SWT.COLOR_BLUE)); XXXXX.setLineWidth(10); int[] caps = {SWT.CAP_FLAT, SWT.CAP_ROUND, SWT.CAP_SQUARE"
1," List<MarkSiteWithoutFuture> mSites = sitesMap.get(mSite.getSite().getName()); if(mSites == null){ mSites = new LinkedList<MarkSiteWithoutFuture>(); sitesMap.put(mSite.getSite().getName(), mSites); "," List<MarkSiteWithoutFuture> mSites = sitesMap.get(mSite.getSite().getName()); if(mSites == null){ mSites = new LinkedList<MarkSiteWithoutFuture>(); sitesMap.put(mSite.getSite().getName(), mSites); "
0," VfsStream s = new VfsStream(is, os); WriteStream writeStream = new WriteStream(s); ReadStream readStream = new ReadStream(s, writeStream); return new ReadWritePair(readStream, writeStream); "," char val; if (o instanceof String) val = parse((String)o); else val = (Character)o; char[] elements=((CharArrayList)_innerList).elements(); return Arrays.binarySearch(elements, val); "
0," if (!OSGIUtils.getDefault().isFragment(bundle)) { synchronized (currentStateStamp) { dynamicAddStateStamps.put(Long.toString(bundle.getBundleId()), new Long(currentStateStamp[0])); "," writer.addAttribute(D2DTTM_ATTRIB, df.format(now)); D2Versioned a = value.getClass().getAnnotation(D2Versioned.class); if(a!=null) writer.addAttribute(D2VERSION_ATTRIB, a.version()); "
0, TestSuite testSuite = new TestSuite(); testSuite.addTestSuite( DefaultConfigureCommentsSingleApproverTest.class); testSuite.addTestSuite(TearDownWorkflowConfigurationTest.class); return testSuite; , int total = 0; for (ISubeffect subeffect : this) { Upgrade upgrade = (Upgrade) subeffect; total += subeffect.isLearned() && !subeffect.isCreationLearned() ? upgrade.getXPCost() : 0; 
0," builder.append(""<table name=\""""); builder.append(identifier); builder.append(""\""""); if (extnds != null) { builder.append("" extends=\""""); builder.append(extnds); builder.append(""\""""); "," return new XMLGregorianCalendarImpl( DatatypeConstants.FIELD_UNDEFINED, DatatypeConstants.FIELD_UNDEFINED, DatatypeConstants.FIELD_UNDEFINED, hours, minutes, seconds, milliseconds, timezone); "
0," if (e instanceof IContainerResumedDMEvent) { fContainerCommandCache.setContextAvailable(e.getDMContext(), false); fThreadCommandCache.setContextAvailable(e.getDMContext(), false); ", try { ICVersionHome versionHome = (ICVersionHome)IDOLookup.getHome(ICVersion.class); Collection coll = versionHome.findChildrens(this); try{ List list = (List)coll; return list.indexOf(node); 
0, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(PageCommentsTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , if ( lana < 0 || lana > 255) return; if ( m_listeners == null) { int len = LanaListenerArraySize; if ( lana >= len) len = (lana + 4) & 0x00FC; m_listeners = new LanaListener[len]; 
0," List<TimepointElement> timepoints = timepointsByStanox.get(stanox); if (timepoints == null) { timepoints = new ArrayList<TimepointElement>(); timepointsByStanox.put(stanox, timepoints); "," BeesClient client = new BeesClient(cloudbeesApiRequest.url, cloudbeesApiRequest.apiKey, cloudbeesApiRequest.secretKey, ""xml"", ""1.0""); client.setVerbose(CloudbeesApiHelper.verbose); return client; "
1," this.rates = new CurrencyExchangeRateMap(); this.rates.addExchangeRate(USD, EUR, jun14th, lowDollarToEuroRate); this.rates.addExchangeRate(USD, EUR, jun17th, highDollarToEuroRate); "," this.rates = new CurrencyExchangeRateMap(); this.rates.addExchangeRate(USD, EUR, jun14th, lowDollarToEuroRate); this.rates.addExchangeRate(USD, EUR, jun17th, highDollarToEuroRate); "
1, try { for (int i = 0; i < 10; i++) { _randomWait(100); _timestampsBeforeRead.put(System.currentTimeMillis()); int result = _reader.read(_buffer); if (result == _buffer.length) { continue; , try { for (XXXXXnt XXXXX = 0; XXXXX < 10; XXXXX++) { _randomWaXXXXXt(100); _tXXXXXmestampsBeforeRead.put(System.currentTXXXXXmeMXXXXXllXXXXXs()); XXXXXnt XXXXX = _reader.read(_buffer); XXXXXf (XXXXX == _buffer.length) { contXXXXXnue; 
0," Map<String, Long> map = (Map<String, Long>) driver.executeAtom( AndroidAtoms.GET_SIZE.getValue(), this); return new Dimension(map.get(""width"").intValue(), map.get(""height"").intValue()); "," switch (dataFormat.getTypeFor(mediaType)) { case XML: return new XMLSink(stream); case TEXT: return new TextualSink(stream); default: throw new IllegalStateException(""Unsupported data format!""); "
0, context.checking(new Expectations() { { oneOf(mockDelegate).process(with(any(OutboundDocSubmissionOrchestratable.class))); will(returnValue(createOutboundDocSubmissionOrchestratable())); ," container.activate(tag.callback, 1); tag.callback.onFailed(e, container, context); tag.callback.removeFrom(container); if(tag.freeBucket) { tag.data.free(); tag.data.removeFrom(container); "
0," super.validatorProblem(problemSeverity, problemMessage, processingContext, startOffset, endOffset); tee.validatorProblem(problemSeverity, problemMessage, processingContext, startOffset, endOffset); ", TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(PortletPermissionsTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; 
0," assertEquals(MimeUtil.getFirstMimeType(""text/html, application/xml"").toString(), ""text/html""); assertEquals(MimeUtil.getFirstMimeType(""text/plain, application/xml"").toString(), ""text/plain""); ", final int prime = 31; int result = 1; result = prime * result + ((lastName == null) ? 0 : lastName.hashCode()); result = prime * result + ((ssn == null) ? 0 : ssn.hashCode()); return result; 
0," super(Zone.BATTLEFIELD, new DamageTargetEffect(1)); addCost(new AncientHellkiteCost()); addManaCost(new ColoredManaCost(ColoredManaSymbol.R)); addTarget(new TargetCreaturePermanent(filterTemplate)); ", this.transaction = transaction; transaction.addSynchronization(new Synchronization() { @Override public void afterCommit() throws Exception { managedRegionBroker.unregister(transaction); 
1," from(""direct:start""). marshal().xstream(). process(new Processor() { public void process(Exchange exchange) throws Exception { log.debug(""marshalled: "" + exchange.getIn().getBody(String.class)); "," from(""direct:start""). marshal().xstream(). process(new Processor() { public void process(Exchange exchange) throws Exception { log.debug(""marshalled: "" + exchange.getIn().getBody(String.class)); "
1, switch(pRouteCountry){ case USA: return SpeechImproverUS.improve(pTurnDescription); case GERMANY: return SpeechImproverDE.improve(pTurnDescription); default: return pTurnDescription; , switch(pRouteCountry){ case USA: return SpeechImproverUS.improve(pTurnDescription); case GERMANY: return SpeechImproverDE.improve(pTurnDescription); default: return pTurnDescription; 
0," try { defaultFederate.rtiamb.joinFederationExecution( null, defaultFederate.federateType, defaultFederate.simpleName ); Assert.fail( ""No exception while joining a with null federate name"" ); "," if (node.jjtGetNumChildren() == 0 || (node.jjtGetChild(0)).jjtGetNumChildren() == 0 || !(node.jjtGetChild(0).jjtGetChild(0) instanceof ASTAllocationExpression)) { return super.visit(node, data); "
1," String label = ((GenLink)object).getEditPartClassName(); return label == null || label.length() == 0 ? getString(""_UI_GenLink_type"") : getString(""_UI_GenLink_type"") + "" "" + label; "," String label = ((GenLink)object).getEditPartClassName(); return label == null || label.length() == 0 ? getString(""_UI_GenLink_type"") : getString(""_UI_GenLink_type"") + "" "" + label; "
1, if (other == this) return 0; if (other == null) return -1; Class scope = (Class) getSourceScope(); Class oscope = (Class) other.getSourceScope(); return scope.getName().compareTo(oscope.getName()); , if (other == this) return 0; if (other == null) return -1; Class XXXXX = (Class) getSourceScope(); Class oXXXXX = (Class) other.getSourceScope(); return XXXXX.getName().compareTo(oXXXXX.getName()); 
0," JsonObject json = new JsonObject(); json.addProperty(""name"", name); json.addProperty(""description"", description); json.addProperty(""public"", Boolean.toString(!isPrivate)); return json.toString(); "," tag = HTML.Tag.DFN; assertEquals(""dfn"", tag.toString()); assertFalse(""breaks Flow"", tag.breaksFlow()); assertFalse(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); "
0," return SparqlPrefix.SKOS + ""SELECT ?concept ?prefLabel WHERE ""+ ""{"" + ""?concept skos:prefLabel ?prefLabel . "" + ""{""+ ""SELECT ?concept WHERE "" + ""{""+ ""?concept skos:prefLabel ?somePrefLabel . "" + """," setIsNoRndWalk(true); super.onSpawn(); L2WorldRegion region = L2World.getInstance().getRegion(getX(),getY()); if ((region !=null) && (!region.isActive())) ((L2AttackableAI) getAI()).stopAITask(); "
1," if(m_tts != null) return; Intent checkIntent = new Intent(); checkIntent.setAction(TextToSpeech.Engine.ACTION_CHECK_TTS_DATA); startActivityForResult(checkIntent, DATA_CHECK_CODE_1); "," if(m_tts != null) return; Intent XXXXX = new Intent(); XXXXX.setAction(TextToSpeech.Engine.ACTION_CHECK_TTS_DATA); startActivityForResult(XXXXX, DATA_CHECK_CODE_1); "
0, Object[] removed = ((IStructuredSelection) fPackageViewer.getSelection()).toArray(); for (int i = 0; i < removed.length; i++) { fHeader.removePackage((PackageObject) removed[i]); , if (isOnDemand()) return null; final PsiImportStaticReferenceElement memberReference = getMemberReference(); if (memberReference != null) { return memberReference.getReferenceName(); 
1, AggregationCellHandle cell = info.getAggregationCell( ); if ( cell != null ) { if ( cell.getAggregationOnRow( ) == null && cell.getAggregationOnColumn( ) == null ) { return false; , AggregationCellHandle cell = info.getAggregationCell( ); if ( cell != null ) { if ( cell.getAggregationOnRow( ) == null && cell.getAggregationOnColumn( ) == null ) { return false; 
1," RegularExpression r = new RChoice(); ROneOrMore room = new ROneOrMore(t, r); assertEquals(t.beginColumn, room.getColumn()); assertEquals(t.beginLine, room.getLine()); assertEquals(r, room.regexpr); "," RegulaXXXXXExpXXXXXession XXXXX = new RChoice(); ROneOXXXXXMoXXXXXe XXXXXoom = new ROneOXXXXXMoXXXXXe(t, XXXXX); asseXXXXXtEquals(t.beginColumn, XXXXXoom.getColumn()); asseXXXXXtEquals(t.beginLine, XXXXXoom.getLine()); asseXXXXXtEquals(XXXXX, XXXXXoom.XXXXXegexpXXXXX); "
1, if (icon == null) return; switch (index) { case ZOOM_ACTUAL_SIZE: actualSize.setIcon(icon); break; case ZOOM_IN: zoomIn.setIcon(icon); break; case ZOOM_OUT: zoomOut.setIcon(icon); , if (icon == null) return; switch (index) { case ZOOM_ACTUAL_SIZE: actualSize.setIcon(icon); break; case ZOOM_IN: zoomIn.setIcon(icon); break; case ZOOM_OUT: zoomOut.setIcon(icon); 
0," ExpressionFactory expressionFactory = application.getExpressionFactory(); ELContext elContext = facesContext.getELContext(); return expressionFactory.createValueExpression(elContext, ""#{nestedItem"," if(value == inst.getEObject() && !inst.isConsumed()) return null; switch(index) { case 0: return new OrExpr_Alternatives_1_1(lastRuleCallOrigin, next, actIndex, consumed); default: return null; "
1," log.debug(""Starting socket policy file server""); try { acceptor = new SocketAcceptor(); acceptor.bind(new InetSocketAddress(host, port), this); log.info(""Socket policy file server listening on port {"," log.debug(""Starting socket policy file server""); try { acceptor = new SocketAcceptor(); acceptor.bind(new InetSocketAddress(host, port), this); log.info(""Socket policy file server listening on port {"
1," if (started == Boolean.TRUE) { started = Boolean.FALSE; for (Map.Entry<Bundle, List<Service>> entry : serverMap.entrySet()) { for (Service service : entry.getValue()) { service.stop(); "," if (started == Boolean.TRUE) { started = Boolean.FALSE; for (Map.Entry<Bundle, List<Service>> entry : serverMap.entrySet()) { for (Service service : entry.getValue()) { service.stop(); "
1," StringBuilder sb = new StringBuilder(""onResult {""); for (ResponseMessage response : event.getResponse()) sb.append(""\n response="").append(response.toString().replace(""\n"", ""\n "")); sb.append(""\n"," StringBuilder XXXXX = new StringBuilder(""onResult {""); for (ResponseMessage response : event.getResponse()) XXXXX.append(""\n response="").append(response.toString().replace(""\n"", ""\n "")); XXXXX.append(""\n"
0," TestSuite suite= new TestSuite(CompletionTest_ConstructorReference.class.getName()); suite.addTest(new CompletionTest_ConstructorReference(""testCompletionProposals"")); return suite; "," Start actual = newStart(newOrExpr(leaf1, newAndExpr(leaf2, leaf3))); Start expected = newStart(newOrExpr(clone(leaf1), newAndExpr(clone(leaf2, leaf3)))); assertTreeAndLeafPosition(actual, expected); "
1, final RenderedImage dataImage = paramBlock.getRenderedSource(0); ImageLayout layout = RIFUtil.getImageLayoutHint(renderingHints); if (layout == null) { layout = new ImageLayout(); , final RenderedImage XXXXX = paramBlock.getRenderedSource(0); ImageLayout XXXXX = RIFUtil.getImageLayoutHint(renderingHints); if (XXXXX == null) { XXXXX = new ImageLayout(); 
1," PageCrawler pageCrawler = page.getPageCrawler(); for (Iterator<?> iterator = page.getChildren().iterator(); iterator.hasNext();) pageCrawler.traverse((WikiPage) iterator.next(), this); "," PageCrawler XXXXX = page.getPageCrawler(); for (Iterator<?> iterator = page.getChildren().iterator(); iterator.hasNext();) XXXXX.traverse((WikiPage) iterator.next(), this); "
0," if (!CNV.containsKey(in.getClass())) throw new ConversionException(""cannot convert type: "" + in.getClass().getName() + "" to: "" + Boolean.class.getName()); return CNV.get(in.getClass()).convert(in); ", List<String> offlineServers = new ArrayList<String>(); for (GlusterServer server : cluster.getServers()) { if (server.getStatus() == SERVER_STATUS.OFFLINE) { offlineServers.add(server.getName()); 
0, _editable = editable; _ottm.setEditable(editable); insertButton.setVisible(editable); childButton.setVisible(editable); deleteButton.setVisible(editable); revalidate(); repaint(); , RangeCriterion rangeCriteria = new RangeCriterion(); rangeCriteria.setProperty(propertyPath); rangeCriteria.setLowerLimit(lowerLimit); rangeCriteria.setUpperLimit(upperLimit); return rangeCriteria; 
0, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(OrganizationsTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; ," MessageBox.confirm(OpenSigCore.i18n.txtEcf(), OpenSigCore.i18n.msgRecarregar(), new ConfirmCallback() { public void execute(String btnID) { if (btnID.equalsIgnoreCase(""yes"")) { storeEcf.load(); "
0," Log.info(Log.FAC_TEST, ""VERIFIER: ""+content.fullName()); ContentName contentName = content.fullName(); if ( failVerify != null ) { if (contentName.equals(failVerify.fullName())) return false; "," TabModelView returned = _extraTabViews.get(tab); if (returned == null) { returned = new TabModelView(tab, this, _inspectingWidget.getController()); _extraTabViews.put(tab, returned); "
0, siteById = immutableMap(siteById); archivesByOid = immutableMap(archivesByOid); workspaceByArchive = immutableMap(workspaceByArchive); siteByWorkspace = immutableMap(siteByWorkspace); ," ListAdapter adapter = getAdapter(); int count = adapter.getCount(); List<View> views = new ArrayList<View>(count); for (int i = 0; i < count; i++) { views.add(adapter.getView(i, null, listView)); "
0," if (null == universe) return; universe.removeUniverseListener(this); try { Method m = SimpleUniverse.class.getMethod( ""removeRenderingErrorListener"", new Class[]{RenderingErrorListener.class"," return new CacheModule() { @Override protected void configure() { final TypeLiteral<Cache<AccountGroup.Id, AccountGroup>> byId = new TypeLiteral<Cache<AccountGroup.Id, AccountGroup>>() {"
1," return mDb.rawQuery(""SELECT ""+ KEY_ID + "", "" + KEY_LAT + "", "" + KEY_LONG + "", "" + KEY_RADIUS + "" FROM "" + TABLE_LOCATIONS + "" WHERE "" + KEY_CATEGORY_ID + "" = "" + categoryId, null); "," return mDb.rawQuery(""SELECT ""+ KEY_ID + "", "" + KEY_LAT + "", "" + KEY_LONG + "", "" + KEY_RADIUS + "" FROM "" + TABLE_LOCATIONS + "" WHERE "" + KEY_CATEGORY_ID + "" = "" + categoryId, null); "
1," super(); if(initParams != null) { Param pinnedDefaultValue = initParams.getParam(""Pinned""); if(pinnedDefaultValue != null) { this.pinned = Boolean.parseBoolean(pinnedDefaultValue.getValue()); "," super(); if(initParams != null) { Param XXXXX = initParams.getParam(""Pinned""); if(XXXXX != null) { this.pinned = Boolean.parseBoolean(XXXXX.getValue()); "
1," final HttpLogFormatter formatter = newFormatter(""%h%%%u%U""); assertTrue(""Should have parsed four handlers. Only found: "" + formatter.getHandlerList().size(), formatter.getHandlerList().size() == 4); "," final HttpLogFormatter XXXXX = newFormatter(""%h%%%u%U""); assertTrue(""Should have parsed four handlers. Only found: "" + XXXXX.getHandlerList().size(), XXXXX.getHandlerList().size() == 4); "
1, final int prime = 31; int result = 1; result = prime * result + ((lastName == null) ? 0 : lastName.hashCode()); result = prime * result + ((ssn == null) ? 0 : ssn.hashCode()); return result; , final int prime = 31; int result = 1; result = prime * result + ((lastName == null) ? 0 : lastName.hashCode()); result = prime * result + ((ssn == null) ? 0 : ssn.hashCode()); return result; 
0, if (mainPanel == null) return; if (ref == null) return; Iterator<JComponent> i = ref.iterator(); boolean visible = false; if (group) { if (groups != null && groupsBox != null) visible = true; , RegisteredServiceProvider<Economy> economyProvider = plugin.getServer().getServicesManager().getRegistration(Economy.class); if (economyProvider != null) { economy = economyProvider.getProvider(); 
1," String name = file.getName(); if (name.endsWith(oldSuffix)) { String baseName = name.substring(0, name.length() - oldSuffix.length()); return new File(file.getParent(), baseName + newSuffix); "," String XXXXX = file.getName(); if (XXXXX.endsWith(oldSuffix)) { String XXXXX = XXXXX.substring(0, XXXXX.length() - oldSuffix.length()); return new File(file.getParent(), XXXXX + newSuffix); "
0," if (cb == null) throw new NullPointerException(""The call back cannot be null""); if (done) throw new IllegalStateException( ""Cannot add a call back to a call that has completed.""); callBaks.add(cb); ", token_source = tm; token = new Token(); jj_ntk = -1; jj_gen = 0; for (int i = 0; i < 0; i++) jj_la1[i] = -1; for (int i = 0; i < jj_2_rtns.length; i++) jj_2_rtns[i] = new JJCalls(); 
1," if (n.getNodeType() != Node.ELEMENT_NODE) return false ; Element el = (Element) n ; return el.getTagName().toUpperCase().equals(""TABLE"") && ""R argblock"".equals(el.getAttribute(""summary"")) ; "," if (n.getNodeType() != Node.ELEMENT_NODE) return false ; Element XXXXX = (Element) n ; return XXXXX.getTagName().toUpperCase().equals(""TABLE"") && ""R argblock"".equals(XXXXX.getAttribute(""summary"")) ; "
0, if (this.edit != null) { this.edit = null; IBreakpointManager breakpointManager = DebugPlugin.getDefault().getBreakpointManager(); breakpointManager.removeBreakpointListener(this); ," List<JComponent> item = field.getComponentList(); panel.add(item.get(0), gbc.clone()); gbc.gridx++; gbc.weightx = 1; gbc.fill=GridBagConstraints.HORIZONTAL; panel.add(item.get(1), gbc.clone()); "
0, try { int thread = thread(se.getThread()); int thread2 = thread(se.getNewThread()); synchronized(out) { if (open) { writeEventType(EventEnum.POSTSTART); out.writeInt(thread); out.writeInt(thread2); ," tag = HTML.Tag.DIV; assertEquals(""div"", tag.toString()); assertTrue(""breaks Flow"", tag.breaksFlow()); assertTrue(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); "
1," StringBuffer buf = (StringBuffer) data; Node arg0 = node.jjtGetChild(0); Node arg1 = node.jjtGetChild(1); if (node.opp.equals(SQLUtil.NOT_EQUAL)) { compareEntity(true, arg0, arg1, buf); "," StringBuffer XXXXX = (StringBuffer) data; Node XXXXX = node.jjtGetChild(0); Node XXXXX = node.jjtGetChild(1); if (node.opp.equals(SQLUtil.NOT_EQUAL)) { compareEntity(true, XXXXX, XXXXX, XXXXX); "
1," HttpSession session = request.getSession(); String sql = (String) session.getAttribute(""pmidbuffer""); if(sql==null){ Common.requestforward(response, ""admincp.jsp?action=pmprune""); return null; "," HttpSession XXXXX = request.getSession(); String XXXXX = (String) XXXXX.getAttribute(""pmidbuffer""); if(XXXXX==null){ Common.requestforward(response, ""admincp.jsp?action=pmprune""); return null; "
0, for (ListIterator i = m_processors.listIterator(m_processors.size()); i.hasPrevious();) { ResourceProcessor processor = (ResourceProcessor) i.previous(); try { processor.rollback(); ," ProfileMetadataRepositoryFactory factory = new ProfileMetadataRepositoryFactory(); factory.setAgent(getAgent()); try { assertNull(""1.0"", factory.create(getTempFolder().toURI(), """", """", null)); "
1," if (SanityManager.DEBUG) SanityManager.ASSERT(reclaim == ROW_RESERVE); initContainerInfo(headRowHandle.getContainerId(), reclaim, processor, serviceASAP); this.headRowHandle = headRowHandle; "," if (SanityManager.DEBUG) SanityManager.ASSERT(reclaim == ROW_RESERVE); initContainerInfo(headRowHandle.getContainerId(), reclaim, processor, serviceASAP); this.headRowHandle = headRowHandle; "
1," addStyleName(StaticResourceBundle.INSTANCE.coreCss().notifCount()); setTitle(""View Notifications""); addClickHandler(new ClickHandler() { public void onClick(final ClickEvent inEvent) { showDialog(); "," addStyleName(StaticResourceBundle.INSTANCE.coreCss().notifCount()); setTitle(""View Notifications""); addClickHandler(new ClickHandler() { public void onClick(final ClickEvent inEvent) { showDialog(); "
0, if(client==null) { if(!applicationContext.hasName()) return null; if(!applicationContext.isSetClientManagement()) return null; client=(ClientPlus) scopeContext.getClientScopeEL(this); ," assertNotNull(""API key was null."", generatedApiKey); try { log.debug(""Test API key expire""); boolean status = mSvc.apikeyExpire(generatedApiKey); log.debug(""API key expire success: {"
0, qe.setNpcQuestData(278639).addOnQuestStart(questId); qe.setNpcQuestData(278639).addOnTalkEvent(questId); qe.addOnQuestFinish(questId); qe.setQuestBonusType(InventoryBonusType.COIN).add(questId); , final StringBuilder sb = new StringBuilder(n); ByteBuffer bb = null; boolean betweenBrackets = false; for (int i = 0; i < n;) { final char c = s.charAt(i++); if (c == '[') { betweenBrackets = true; 
0, CurrentUser currentUser = userProvider.get(); if(httpRequest.getRequestURI().equals(getMonitoringUrl(httpRequest))) { return currentUser.getCapabilities().canAdministrateServer(); , switch (featureID) { case SvgPathPackage.SMOOTH_QUADRATIC_BEZIER_CURVETO__SMOOTH_QUADRATIC_BEZIER_CURVETO_ARGUMENT_SEQUENCE: return getSmooth_quadratic_bezier_curveto_argument_sequence(); 
0, Iterator tableIter = cfg.getTableMappings(); Table table = null; while(tableIter.hasNext() ) { table = (Table) tableIter.next(); if(table.getName().equals(name) ) { return table; ," Activator.getDefault().getPreferenceStore().setValue(FittingConstants.PEAK_NUMBER, peak); numberPeaks.setSelectedAction(this); setChecked(true); if (isActive()) fittingJob.fit(); "
1," if (jtsLogger.logger.isTraceEnabled()) { jtsLogger.logger.trace(""ControlImple::ControlImple ( Control parentCon, "" + ((parentTran != null) ? parentTran.get_uid() : Uid.nullUid()) + "" )""); "," if (jtsLogger.logger.isTraceEnabled()) { jtsLogger.logger.trace(""ControlImple::ControlImple ( Control parentCon, "" + ((parentTran != null) ? parentTran.get_uid() : Uid.nullUid()) + "" )""); "
1," Project p = getProject(); Properties props = readProperties(propertyFile); toolName = props.getProperty(""tool.name""); if (toolName != null) { toolArgs = props.getProperty(toolName + "".args"", """"); "," Project XXXXX = getProject(); ProXXXXXerties XXXXXroXXXXXs = readProXXXXXerties(XXXXXroXXXXXertyFile); toolName = XXXXXroXXXXXs.getProXXXXXerty(""tool.name""); if (toolName != null) { toolArgs = XXXXXroXXXXXs.getProXXXXXerty(toolName + "".args"", """"); "
0, TestSuite testSuite = new TestSuite(); testSuite.addTest(Login52xTests.suite()); testSuite.addTest(GroupsTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , jass.runtime.traceAssertion.CommunicationManager.internalAction = true; jass.runtime.traceAssertion.Parameter[] jassParameters; jassParameters = new jass.runtime.traceAssertion.Parameter[] {
1," Object[] initArgs = new Object[argumentConverters.size()]; int i = 0; for (ArgumentConverter<F, Object> argumentConverter : argumentConverters) { initArgs[i++] = argumentConverter.convert(from); "," Object[] XXXXXnXXXXXtArgs = new Object[argumentConverters.sXXXXXze()]; XXXXXnt XXXXX = 0; for (ArgumentConverter<F, Object> argumentConverter : argumentConverters) { XXXXXnXXXXXtArgs[XXXXX++] = argumentConverter.convert(from); "
0, for (StopEntry stop : _graphDao.getAllStops()) { StopEntryImpl stopImpl = (StopEntryImpl) stop; stopImpl.getStopTimeIndices().clear(); stopImpl.getFrequencyStopTimeIndices().clear(); ," lombok.ast.Continue cnt = new lombok.ast.Continue(); if (node.label != null) cnt.astLabel(toIdentifier(node.label, node.sourceStart, node.sourceEnd)); set(node, setPosition(node, cnt)); "
1," String description = getCommandDescription(commandName); JCommander jc = findCommandByAlias(commandName); if (description != null) { out.append(indent).append(description); out.append(""\n""); "," String description = getCommandDescription(commandName); JCommander jc = findCommandByAlias(commandName); if (description != null) { out.append(indent).append(description); out.append(""\n""); "
0," String name = ""foo""; CoordinateReferenceSystem crs = DefaultGeographicCRS.WGS84; DefaultGridFeatureBuilder setter = new DefaultGridFeatureBuilder(name, crs); assertSetter(setter, name, crs); ", createLink = createLinkButton.getSelection(); browseButton.setEnabled(createLink); variablesButton.setEnabled(createLink); linkTargetField.setEnabled(createLink); setPageComplete(validatePage()); 
1," SimpleDateFormat format = new SimpleDateFormat(""hh:mm:ss""); String formatted = format.format(millisUntilFinished); Date actualTimeCount = null; try { actualTimeCount = format.parse(formatted); "," SimpleDateFormat XXXXX = new SimpleDateFormat(""hh:mm:ss""); String XXXXXted = XXXXX.XXXXX(millisUntilFinished); Date XXXXX = null; try { XXXXX = XXXXX.parse(XXXXXted); "
0," Fixture.fakeNewRequest( display ); Fixture.fakeSetParameter( getId( fileUpload ), ""fileName"", """" ); Fixture.executeLifeCycleFromServerThread( ); assertEquals( null, fileUpload.getFileName() ); "," getContext(); context.addParameters(getParametersMap(getArrayKeys())); if (context.get(WadlToolConstants.CFG_OUTPUTDIR) == null) { context.put(WadlToolConstants.CFG_OUTPUTDIR, "".""); "
0," for (OnTestLifeCycleRunnable run : pluginManager.getEnabledModulesByClass(OnTestLifeCycleRunnable.class)) { run.finish(perfTest, reason.name(), perfTestService, config.getVesion()); "," taskDao.save(task.task); task.metadata.add(task.trTask); metadataService.synchronizeMetadata(task.task.getId(), task.metadata, MetadataCriteria.withKey(TaskRabbitMetadata.METADATA_KEY)); "
0," Object oldNAME = nAME; nAME = newNAME; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, PowrmartPackage.SAPCODEBLOCK_TYPE__NAME, oldNAME, nAME)); "," String label = ((GenericTool) object).getTitle(); return label == null || label.length() == 0 ? getString(""_UI_GenericTool_type"") : getString(""_UI_GenericTool_type"") + "" "" + label; "
1, synchronized (chatListenerLock) { if (listenerAdapter == null) { listenerAdapter = new IncomingChatListenerAdapter(listener); connection.getChatManager().addChatListener(listenerAdapter); , synchronized (chatListenerLock) { if (listenerAdapter == null) { listenerAdapter = new IncomingChatListenerAdapter(listener); connection.getChatManager().addChatListener(listenerAdapter); 
1," SequenceFunction function = new SequenceFunction(new NumberSequence(1.2f, 1)); for (int i=1; i<=3; i++) { assertEquals(""floats should be equal"", function.generateValue(), (float) i+(.2F)); "," SequenceFunction XXXXX = new SequenceFunction(new NumberSequence(1.2f, 1)); for (int i=1; i<=3; i++) { assertEquals(""floats should be equal"", XXXXX.generateValue(), (float) i+(.2F)); "
0," player.getActionSender() .sendMessage( ""You burn the "" + item.getDef().name); player.getInventory().add( new InvItem(134)); player.getActionSender() .sendInventory(); player.setBusy(false); "," ProjectDescription projectdescription = createEmptyProject(this._sourcepathxml, KIND_MULTIPLESOURCEFOLDERSPRIMARY); execute(projectdescription.getPrimaryProjectname(), ""get-source-path-relative""); "
1," PaxWicketApplicationFactory internalFactory = PaxWicketApplicationFactory.createPaxWicketApplicationFactory(context, service, reference); addApplication(reference, internalFactory); "," PaxWicketApplicationFactory XXXXX = PaxWicketApplicationFactory.createPaxWicketApplicationFactory(context, service, reference); addApplication(reference, XXXXX); "
0," if(isAuthenticated()) logout(); else { auth = browser = browser2 = false; setAuthURL(); browser = true; newIntent = new Intent(Intent.ACTION_VIEW, Uri.parse(authURL)); startActivity(newIntent); ", final Change[] changes = dragBean.getChanges(); for (Change change : getUserObject().getChanges()) { for (Change incomingChange : changes) { if (change == incomingChange) return false; 
1," String value = findHeader(request, name); if (value != null) { int idx = 0; do { idx = value.indexOf(';',idx); if ( idx != -1 && value.charAt(idx-1) != '\\') { value = value.substring(0,idx); break; "," String XXXXX = findHeader(request, name); if (XXXXX != null) { int XXXXX = 0; do { XXXXX = XXXXX.indexOf(';',XXXXX); if ( XXXXX != -1 && XXXXX.charAt(XXXXX-1) != '\\') { XXXXX = XXXXX.substring(0,XXXXX); break; "
0," System.out.println(e.getX() + "" and "" + e.getY()); System.out.println(e.getX() / 70 ); int curri = (e.getX() / 70) + strip2Start; if (curri > motionFrames.length - 1) { curri -= motionFrames.length; "," Object oldNAME = nAME; nAME = newNAME; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, PowrmartPackage.TASKINSTANCE_TYPE__NAME, oldNAME, nAME)); "
0, responses.add(response); if (responses.size() > 1) { CompareAssertionResult result = new CompareAssertionResult(getName()); compareContent(result); compareTime(result); return result; ," npcLocations.put(npcLocation.getID(), npcLocation); reserveNPCLocations.add(npcLocation.getID()); if( npcLocation.getTownID() == 0 ) { floatingLocations.add(npcLocation.getID()); "
1," assertEquals(2, validCriterion.getConfiguredValues().size()); assertTrue(validCriterion.getConfiguredValues().contains(""a"")); assertTrue(validCriterion.getConfiguredValues().contains(""b"")); "," assertEquals(2, validCriterion.getConfiguredValues().size()); assertTrue(validCriterion.getConfiguredValues().contains(""a"")); assertTrue(validCriterion.getConfiguredValues().contains(""b"")); "
0," r.getStatus().addMessage(""info"", this.getClass().getSimpleName()+"" will generate a RDP connection file and launch Remote Desktop application for the specified instance.""); return null; ", if (isConstructor() && PsiModifier.PRIVATE.equals(getAccessModifier()) && getParameters().length == 0 && getOwnerClass().getConstructors().size() == 1) return false; return super.isSuspicious(); 
1," ThemeStack themestack = (ThemeStack) stack.getContext().get(Theme.THEME_STACK); if (null == themestack) { themestack = new ThemeStack(); stack.getContext().put(Theme.THEME_STACK, themestack); "," ThemeStack XXXXX = (ThemeStack) stack.getContext().get(Theme.THEME_STACK); if (null == XXXXX) { XXXXX = new ThemeStack(); stack.getContext().put(Theme.THEME_STACK, XXXXX); "
0," SecureClassLoader ldr = new SecureClassLoader(); ByteBuffer bbuf = ByteBuffer.wrap(klassData); Class klass = ldr.defineClass(null, bbuf, null); assertEquals(klass.getName(), klassName); "," String domain = EditEventHelper.extractDomain(""test.email@gmail.com""); assertEquals(domain, ""gmail.com""); domain = EditEventHelper.extractDomain(""bademail.no#$%at symbol""); assertNull(domain); "
1, final DataAcquisitionService acquisitionService = getDataAcquisitionService(); final Device device = getDevice(); if ( ( device == null ) || ( acquisitionService == null ) ) { return; , final DataAcquisitionService XXXXX = getDataAcquisitionService(); final Device XXXXX = getDevice(); if ( ( XXXXX == null ) || ( XXXXX == null ) ) { return; 
0," if (!this.hasSdCard()) return """"; dataDir = new File(Environment.getExternalStorageDirectory(), context.getPackageName()+""/log""); if(!dataDir.exists()) dataDir.mkdirs(); return dataDir.getPath(); "," checkPosition(); Object value = this.currentRow.get(getColumnNames()[columnIndex]); if (value instanceof Clob) { try { return ((Clob) value).getSubString(1, (int)((Clob) value).length()); "
1," try { String path = USER_URL_PREFIX + ""users/count""; Element element = ClearspaceManager.getInstance().executeRequest(GET, path); return Integer.valueOf(WSUtils.getReturn(element)); "," try { String XXXXX = USER_URL_PREFIX + ""users/count""; Element XXXXX = ClearspaceManager.getInstance().executeRequest(GET, XXXXX); return Integer.valueOf(WSUtils.getReturn(XXXXX)); "
1," if (action == OPEN) { Intent intent = new Intent(); intent.setClass(NotebooksListActivity.this, NotesListActivity.class); intent.setAction(Action.VIEW_NOTEBOOK_NOTES); startActivity(intent); "," if (action == OPEN) { Intent XXXXX = new Intent(); XXXXX.setClass(NotebooksListActivity.this, NotesListActivity.class); XXXXX.setAction(Action.VIEW_NOTEBOOK_NOTES); startActivity(XXXXX); "
0," String workspaceAreaProp = System.getProperty(s_PROP_WORKSPACE_AREA, ""../../..""); try { System.out.println( ""workspace area: "" + new File(workspaceAreaProp).getCanonicalPath() ); ", addUserAgent(); addRefferer(); addRemoteAddress(); addProtocol(); addServerAndPort(); addParameters( NUMBER_OF_PARAMETERS ); addAcceptLanguages(); addCookies( NUMBER_OF_COOKIES ); 
0," int first_cpu; int nb_cpus; Long pid_in = getAFieldLong(trcEvent, traceSt, Fields.LTT_FIELD_PID); if ( pid_in != null ) { if(pid_in == 0L) { first_cpu = 0; nb_cpus = traceSt.getNumberOfCPUs(); "," if(className == null) return null; Class<?> factoryClass = ReflectUtils.loadClass(className.trim()); return (SerializerFactory) ReflectUtils.callConstructor(factoryClass, new Object[] {"
1, this.table = table; this.row = row; this.col = column; setValue(value); if (required) { field.setBorder(BorderFactory.createLineBorder(ClientSettings.GRID_REQUIRED_CELL_BORDER)); , this.table = table; this.row = row; this.col = column; setValue(value); if (required) { field.setBorder(BorderFactory.createLineBorder(ClientSettings.GRID_REQUIRED_CELL_BORDER)); 
0, EntityCacheUtil.removeCache(KaleoInstanceImpl.class.getName()); FinderCacheUtil.removeCache(FINDER_CLASS_NAME_ENTITY); FinderCacheUtil.removeCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION); , SimulationArguments simulationArguments = simulationData.getSimulationArguments(); checkAndInitStoriesBar(); step = event * 1.0 / simulationArguments.getClockPrecision(); nextStep = step; 
1," SQLiteDatabase db = mDBHelper.getReadableDatabase(); Cursor cursor = db.query( RECENTS_TABLE, RecentsTable.COLUMN_NAMES, null, null, null, null, RecentsTable.ORDER_BY); return cursor; "," SQLiteDatabase db = mDBHelper.getReadableDatabase(); Cursor cursor = db.query( RECENTS_TABLE, RecentsTable.COLUMN_NAMES, null, null, null, null, RecentsTable.ORDER_BY); return cursor; "
0, DDMStorageLinkModelImpl ddmStorageLinkModelImpl = this; ddmStorageLinkModelImpl._originalClassPK = ddmStorageLinkModelImpl._classPK; ddmStorageLinkModelImpl._setOriginalClassPK = false; , Object val = node.getNodeData().getAttributes().getValue(column.getIndex()); val = dynamicHelper.getDynamicValue(val); if (val != null) { values.add(val); return val.equals(match); 
0," if (getNode() != null) { getNode().setDescription(desc); if (getNode().getLogicalColumn() != null) { getNode().getLogicalColumn().setDescription(new LocalizedString(locale, desc)); "," return ""<h1>"" + getReportTitle() + ""</h1>\n"" + ""<table width=\""100%\"">\n"" + ""<tr>\n"" + ""<td align=\""left\""></td><td align=\""right\"">"" + getReportSubtitle() + ""</td>\n"" + ""</tr>\n"" + ""</table>""; "
1," String val = """"; for (Variable v : view.varMap.values()) { val += v.id + "" "" + v.value + ""/"" + (bestSolution != null ? bestSolution.get(v.id) : ""NA"") + (v.fixed ? ""F"" : """") + ""\n""; "," String val = """"; for (Variable v : view.varMap.values()) { val += v.id + "" "" + v.value + ""/"" + (bestSolution != null ? bestSolution.get(v.id) : ""NA"") + (v.fixed ? ""F"" : """") + ""\n""; "
0, MoSyncProject current = MosyncUIPlugin.getDefault().getCurrentlySelectedProject(PlatformUI.getWorkbench().getActiveWorkbenchWindow()); if (current == null) { return MoSyncTool.DEFAULT_PROFILE_TYPE; ," if (!mSearchAutoComplete.isPopupShowing() && isOutOfBounds(mSearchPlate, event)) { if (DBG) Log.d(LOG_TAG, ""Pop-up not showing and outside of search plate.""); cancel(); return true; "
0, if(!(o instanceof RunningTransientInsert)) return false; RunningTransientInsert r = (RunningTransientInsert) o; return r.insert == insert && (r.token == token || r.token.equals(token)); ," Field field = null; try { field = targetClass.getDeclaredField(fieldName); field.setAccessible(true); Object valueReference = field.get(target); tmpl.write(packer, valueReference); "
0," if (!(obj instanceof SNodeWrapper)) return false; SNodeWrapper wrapper = (SNodeWrapper) obj; return MatchingUtil.matchNodes(wrapper.myNode, myNode, IMatchModifier.DEFAULT, false); ", JTable src = form; int row = src.getSelectedRow(); downAction.setEnabled(row > -1 && row < src.getRowCount() - 1); upAction.setEnabled(row > 0); removeAction.setEnabled(row > -1); 
0," ObjectId id = new ObjectId(""test""); PersistentObject object = new MockPersistentObject(); assertNull(object.getObjectId()); object.setObjectId(id); assertSame(id, object.getObjectId()); "," retransmitter.startTransmitting(message1, all); retransmitter.stopAll(); dispatcher.advanceTime(RETRANSMIT_TIMEOUT); dispatcher.execute(); verify(network, times(1)).sendMessage(message1, all); "
1," try { dest.createNewFile(); InputStream res = BetterShop.class.getResourceAsStream(""/"" + fname); FileWriter tx = new FileWriter(dest); try { for (int i = 0; (i = res.read()) > 0;) { tx.write(i); "," try { dest.createNewFXXXXXle(); InputStream XXXXX = BetterShop.class.getResourceAsStream(""/"" + fname); FXXXXXleWrXXXXXter XXXXX = new FXXXXXleWrXXXXXter(dest); try { for (XXXXXnt XXXXX = 0; (XXXXX = XXXXX.read()) > 0;) { XXXXX.wrXXXXXte(XXXXX); "
1," myValidate(); if (!hasActionErrors()) { getBean().copyTo(getUser(), getLocale()); if (!StringUtils.isEmpty(getBean().getPassword())) { try { getUser().resetPassword(getBean().getPassword()); "," myValidate(); if (!hasActionErrors()) { getBean().copyTo(getUser(), getLocale()); if (!StringUtils.isEmpty(getBean().getPassword())) { try { getUser().resetPassword(getBean().getPassword()); "
1, if (hasControlsToAdd()) { for (int i=0; i<controlsToAdd.size(); i++) { ControlToAdd controlToAdd = controlsToAdd.get(i); try { controlToAdd.startControl(controlToAdd.createControl()); , if (hasControlsToAdd()) { for (int i=0; i<controlsToAdd.size(); i++) { ControlToAdd XXXXX = controlsToAdd.get(i); try { XXXXX.startControl(XXXXX.createControl()); 
0, if(node.children.size( )>0) { Iterator iter = node.children.iterator( ); while(iter.hasNext( )) { AbstractNode cell = (AbstractNode)iter.next( ); if(!cell.finished) { return false; , if(!super.deepEquals(expr)) return false; if(null != m_arg0) { if(null == ((FunctionOneArg)expr).m_arg0) return false; if(!m_arg0.deepEquals(((FunctionOneArg)expr).m_arg0)) return false; 
0, ClassPathContainer container = getClassPathElementsRegistry().getClassPathContainer(classpathEntry.getPath()); context.addClasspathEntry(new ResolvedClasspathEntry(container.getPathEntries())); , double left = solver.getLeft(); double right = solver.getRight(); double top = solver.getTop(); double bottom = solver.getBottom(); if (left > right) { double tmp = left; left = right; right = tmp; 
1," int index = CompactLabelToOrdinal.indexFor(hash, a.offsets.length); int offset = a.offsets[index]; if (offset == 0) { a.offsets[index] = knownOffset; a.cids[index] = ordinal; return true; "," int index = CompactLabelToOrdinal.indexFor(hash, a.offsets.length); int offset = a.offsets[index]; if (offset == 0) { a.offsets[index] = knownOffset; a.cids[index] = ordinal; return true; "
0," ResolvedParentChildPair result = cache.get(sourceNodeRef); if (result != null) { if (log.isDebugEnabled()) { log.debug(""Found fully-resolved entry in cache for node "" + sourceNodeRef); ", switch (featureID) { case RifPackage.RELATIONGROUPS_TYPE1__GROUP: getGroup().clear(); return; case RifPackage.RELATIONGROUPS_TYPE1__RELATIONGROUP: getRELATIONGROUP().clear(); return; 
1, KXmlParser parser = new KXmlParser(); ArrayList extList = new ArrayList(); File[] extensions = mDirectory.listFiles(new FileFilter() { public boolean accept(File file) { return file.isDirectory(); , KXmlParser parser = new KXmlParser(); ArrayList extList = new ArrayList(); File[] extensions = mDirectory.listFiles(new FileFilter() { public boolean accept(File file) { return file.isDirectory(); 
1, Service serviceDef = wsdlDefinition.getService(serviceName); if (serviceDef == null) { throw new NullPointerException(Messages.msgServiceDefinitionNotFound( serviceName.getLocalPart())); , Service XXXXX = wsdlDefinition.getService(serviceName); if (XXXXX == null) { throw new NullPointerException(Messages.msgServiceDefinitionNotFound( serviceName.getLocalPart())); 
1," FormComponent form = (FormComponent) view.getComponentByReference(""form""); FieldComponent generated = (FieldComponent) view.getComponentByReference(GENERATED); if (form == null) { return; "," FormComponent XXXXX = (FormComponent) view.getComponentByReference(""XXXXX""); FieldComponent XXXXX = (FieldComponent) view.getComponentByReference(GENERATED); if (XXXXX == null) { return; "
1," super(model,editorController.getController()); this.editorController = editorController; delegate = new FIBEditableViewDelegate<FIBNumber,JSpinner>(this); model.addObserver(this); "," super(model,editorController.getController()); this.editorController = editorController; delegate = new FIBEditableViewDelegate<FIBNumber,JSpinner>(this); model.addObserver(this); "
1, BasicConfigurator.configure(); Logger.getRootLogger().setLevel(Level.TRACE); ModelTestUtils.resetTestDb(); ModelTestUtils.createModel(null); em = ModelTestUtils.createEntityManager(); , BasicConfigurator.configure(); Logger.getRootLogger().setLevel(Level.TRACE); ModelTestUtils.resetTestDb(); ModelTestUtils.createModel(null); em = ModelTestUtils.createEntityManager(); 
1," TestNGCitrusTestBuilder builder = new TestNGCitrusTestBuilder() { @Override public void configure() { input() .message(""TestMessage"") .result(""TestVariable"") .answers(""Yes"", ""No"", ""Maybe""); "," TestNGCitrusTestBuilder XXXXX = new TestNGCitrusTestBuilder() { @Override public void configure() { input() .message(""TestMessage"") .result(""TestVariable"") .answers(""Yes"", ""No"", ""Maybe""); "
0," super(); this.group = group; this.consumerDir = ZkUtils.ConsumersPath; this.consumerGroupDir = this.consumerDir + ""/"" + group; this.consumerRegistryDir = this.consumerGroupDir + ""/ids""; ", try { Display.getDefault().syncExec(new Runnable() { public void run() { PlatformUI.getWorkbench().getActiveWorkbenchWindow().getActivePage().getActiveEditor().doSave(new NullProgressMonitor()); 
0," final FileType fileType = file.getFileType(); return file.isDirectory() || (super.isFileVisible(file, showHiddenFiles) && FileAssociationsManager.XML_FILES_LIST.contains(fileType)); "," String label = ((ResourceChange)object).getResourceURI(); return label == null || label.length() == 0 ? getString(""_UI_ResourceChange_type"") : getString(""_UI_ResourceChange_type"") + "" "" + label; "
1," Factory factory = new Factory(); ArrayList<String> params = new ArrayList<String>(); assertEquals(factory.createOperator(params).getClass(), new AlternativeOperator().getClass()); "," Factory factory = new Factory(); ArrayList<String> params = new ArrayList<String>(); assertEquals(factory.createOperator(params).getClass(), new AlternativeOperator().getClass()); "
0, lastSize = nowSize = 0; lastUids = new int[10]; nowUids = new int[10]; validated = new BitSet(1 << 16); validated.set(android.os.Process.myUid()); this.activityManager = activityManager; ," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; "
1," final ColorRGB value = (ColorRGB) getModel().getValue(); final String text = value == null ? """" : value.toHTMLColor(); if (textInput.getText().equals(text)) return; textInput.setText(text); "," final ColorRGB value = (ColorRGB) getModel().getValue(); final String text = value == null ? """" : value.toHTMLColor(); if (textInput.getText().equals(text)) return; textInput.setText(text); "
0, List<RegexpTree> operands = new ArrayList<RegexpTree>(); while (true) { RegexpTree next = parseElement(); if (next.equals( generator.getNothing() ) ) break; operands.add( next ); , Stack<String> paths = new Stack<String>(); paths.push(path); callback.setPaths(paths); callback.enableCallback(); Folder target = findFolder(path); if (target == null) { return lazyLoadPath(path); 
1, boolean apply = false; if (input != null && input.getKind() == DifferenceKind.MOVE) { if (input instanceof ReferenceChange) { apply = ((ReferenceChange)input).getReference() == feature; , boolean XXXXX = false; if (input != null && input.getKind() == DifferenceKind.MOVE) { if (input instanceof ReferenceChange) { XXXXX = ((ReferenceChange)input).getReference() == feature; 
0," eventBus.addHandler(SelectedSubscriptionEvent.TYPE, new SelectedSubscriptionEventHandler() { public void onSelectedSubscription(SelectedSubscriptionEvent event) { getFeed(event.getUrl()); ", if(mainActivity == null) throw new RuntimeException(__msg1); if(applicationPackage == null) throw new RuntimeException(__msg2); if(adb == null) throw new RuntimeException(__msg3); 
1," int biType = imgType.getBufferedImageType(); if ((!compression.equals(""BI_BITFIELDS"")) && ((rawType == BufferedImage.TYPE_USHORT_565_RGB) || (rawType == TYPE_USHORT_565_BGR))) { return false; "," int XXXXX = imgType.getBufferedImageType(); if ((!compression.equals(""BI_BITFIELDS"")) && ((rawType == BufferedImage.TYPE_USHORT_565_RGB) || (rawType == TYPE_USHORT_565_BGR))) { return false; "
0, if (other instanceof Program) { Program p = (Program) other; boolean equals = true; equals &= number == p.number; equals &= channel.frequency == p.channel.frequency; return equals; , ICHelpBook book = getCHelpBook(); boolean bMatches = false; switch(book.getCHelpType()){ case ICHelpBook.HELP_TYPE_CPP: try{ bMatches = project.hasNature(CCProjectNature.CC_NATURE_ID); 
1, MenuItem mMenu_getinv = menu.findItem(R.id.menu_getinv); MenuItem mMenu_send = menu.findItem(R.id.menu_send); mMenu_getinv.setEnabled(isAgentOk); mMenu_send.setEnabled(isAgentOk); return true; , MenuItem mMenu_getinv = menu.findItem(R.id.menu_getinv); MenuItem mMenu_send = menu.findItem(R.id.menu_send); mMenu_getinv.setEnabled(isAgentOk); mMenu_send.setEnabled(isAgentOk); return true; 
1," internal.renderQuad(renderEngine.convertToNativeX(x), renderEngine.convertToNativeY(y), renderEngine.convertToNativeWidth(width), renderEngine.convertToNativeHeight(height), color); "," internal.renderQuad(renderEngine.convertToNativeX(x), renderEngine.convertToNativeY(y), renderEngine.convertToNativeWidth(width), renderEngine.convertToNativeHeight(height), color); "
0," PriorityList p = new PriorityList(); p.add( ""One"", 1 ); p.add( ""Two"", 2 ); assertEquals( ""size"", 2, p.size() ); assertEquals( ""Two"", ""Two"", p.get(0) ); assertEquals( ""One"", ""One"", p.get(1) ); "," EntityCacheUtil.putResult(KaleoInstanceModelImpl.ENTITY_CACHE_ENABLED, KaleoInstanceImpl.class, kaleoInstance.getPrimaryKey(), kaleoInstance); kaleoInstance.resetOriginalValues(); "
0," l1 = new ListenerEventHistory(); l2 = new ListenerEventHistory(); l3 = new ListenerEventHistory(); dispatcher = new EventDispatcher(EVENT1, EVENT2, EVENT3); api = dispatcher.getEventAPI(); "," URI resourceURI = EditUIUtil.getURI(getEditorInput()); Exception exception = null; Resource resource = null; try { resource = editingDomain.getResourceSet().getResource(resourceURI, true); "
1," String className = item.getClassName(); if (""DataSource"".equals(className) || ""DataSet"".equals(className) || ""Organism"".equals(className) || ""Sequence"".equals(className)) { return; "," String XXXXX = item.getClassName(); if (""DataSource"".equals(XXXXX) || ""DataSet"".equals(XXXXX) || ""Organism"".equals(XXXXX) || ""Sequence"".equals(XXXXX)) { return; "
1," final String value = ""Hello""; new EasyMockTemplate(driver()) { @Override protected void expectations() { driver().requireCellValue(target(), cell, value); expectLastCall().once(); "," final String XXXXX = ""Hello""; new EasyMockTemplate(driver()) { @Override protected void expectations() { driver().requireCellValue(target(), cell, XXXXX); expectLastCall().once(); "
0," if (RandomHelper.getRandomNumberBetween(0, 100) <= 25) { ChatHandler.sendBattleMessage(user.getOwner(), target.getOwner(), user.getName() + "" is paralyzed and cannot move!""); return false; "," Paragraph par = documentRange.getParagraph(parIndex); assertEquals(expectedStyleLvl, styleSheet.getParagraphStyle(par.getStyleIndex()).getLvl()); assertEquals(expectedParLvl, par.getLvl()); "
1, _bindingDefinitionName = bindingDefinitionName; if (_messageBindings != null) { setBindingDefinition(_messageBindings.getMessageDefinition().entryWithName(_bindingDefinitionName)); , _bindingDefinitionName = bindingDefinitionName; if (_messageBindings != null) { setBindingDefinition(_messageBindings.getMessageDefinition().entryWithName(_bindingDefinitionName)); 
0," Map<String, String> param = payload.getFields(); String command = StringUtils.trimToEmpty(param.get(""command"")); if(command.isEmpty()) { logger.info(""command is empty.""); return; ", Integer this_size = m_Field.getSize(); Integer other_size = o.m_Field.getSize(); int ret = other_size.compareTo(this_size); if(ret == 0){ return m_Field.getName().compareTo(o.m_Field.getName()); 
1," StringBuffer buff = ModelLoaderUtil.createPathToElementKey(group, true); if (buff == null) return null; String key = buff.append("".description-id"").toString(); return doGetDescription(group, key); "," StringBuffer XXXXX = ModelLoaderUtil.createPathToElementKey(group, true); if (XXXXX == null) return null; String XXXXX = XXXXX.append("".description-id"").toString(); return doGetDescription(group, XXXXX); "
1," if (pattern != null && pattern.getClass() == this.getClass()) { patternVar_p = (SNode) pattern.getFieldValue(""patternVar_p""); patternVar_ifbody = (SNode) pattern.getFieldValue(""patternVar_ifbody""); "," if (pattern != null && pattern.getClass() == this.getClass()) { patternVar_p = (SNode) pattern.getFieldValue(""patternVar_p""); patternVar_ifbody = (SNode) pattern.getFieldValue(""patternVar_ifbody""); "
0," StringBuilder sb = new StringBuilder(); String nl = """"; if (this.facetRequest != null) { sb.append(nl).append(prefix).append(""Request: "").append( this.facetRequest.toString()); nl = ""\n""; ", return (getGraphicalRepresentation().getDimensionConstraints() != DimensionConstraints.UNRESIZABLE && getGraphicalRepresentation() .getDimensionConstraints() != DimensionConstraints.CONTAINER); 
1, PDResources retval = null; COSDictionary resources = (COSDictionary)page.getDictionaryObject( COSName.RESOURCES ); if( resources != null ) { retval = new PDResources( resources ); , PDResources retval = null; COSDictionary resources = (COSDictionary)page.getDictionaryObject( COSName.RESOURCES ); if( resources != null ) { retval = new PDResources( resources ); 
0, OnDemandLogger log = new OnDemandLogger(OnDemandLoggerTest.class); assertTrue(!log.hasLog()); log.isDebugEnabled(); assertTrue(log.hasLog()); log.resetLog(); assertTrue(!log.hasLog()); ," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (i: ""); result.append(i); result.append(')'); return result.toString(); "
0," super(first, last); first.addInputParameter(element); super.setPredicate(new Predicate() { @Override public boolean verify(KProcess process) { return KForEachLoop.this.hasNext(process); "," AbilityCostCalculator calculator = new AbilityCostCalculator( traitConfiguration, creationPoints, 0, costs, additionalBonusPointManagment); calculator.calculateCosts(); return calculator; "
0," this.visionFeed = visionFeed; this.thresholdsState = ts; windowFrame.addMouseListener(this); windowFrame.addMouseMotionListener(this); Vision.logger.info(""InitialLocation Initialised""); "," NSMutableDictionary queryParams = new NSMutableDictionary(); queryParams.takeValueForKey(Boolean.FALSE, ""wosid""); return context().directActionURLForActionNamed(""default"", queryParams); "
0," Slider slider = new Slider(); slider.valueProperty().addListener(new ChangeListener<Object>() { @Override public void changed(ObservableValue observableValue, Object o, Object o1) { createTable(); "," MethodCache.remove(ExpandoValueService.class); _service = service; ReferenceRegistry.registerReference(ExpandoValueServiceUtil.class, ""_service""); MethodCache.remove(ExpandoValueService.class); "
1, Set<ContactChooserItem> selectedItems = selectedContactsModel.getSelection(); if (selectedItems.isEmpty()) return; for (ContactChooserItem item : selectedItems){ item.setSelected(false); , Set<ContactChooserItem> selectedItems = selectedContactsModel.getSelection(); if (selectedItems.isEmpty()) return; for (ContactChooserItem item : selectedItems){ item.setSelected(false); 
0, setProjection(ev); Projection proj = ev.getProjection(); Layer layer = configureAppropriateLayer(proj.getScale()); fireStatusUpdate(LayerStatusEvent.START_WORKING); layer.projectionChanged(ev); ," super(true); this.config = config; insertAfterNode = getNodeToInsertAfter(config.getRootNode(), config.getSelection()); if (insertAfterNode == null) { setInsertType(INSERT_AT_BEGIN_OF_LINE); "
0, if(this.codeGenerationStrategy == null){ if(getOwnerElement() instanceof INakedPackage && !isRootPackage()){ return ((INakedPackage) getOwnerElement()).getCodeGenerationStrategy(); ," try { EpsGraphics g = new EpsGraphics(""EpsTools Drawable Export"", new FileOutputStream(fileName + "".eps""), 0, 0, x, y, colorMode); d.draw(g, new Rectangle(x, y)); g.close(); return true; "
1, TestSuite testSuite = new TestSuite(); testSuite.addTestSuite(AddPageUSTest.class); testSuite.addTestSuite(AddPortletUSTest.class); testSuite.addTestSuite(TearDownPageTest.class); return testSuite; , TestSuite XXXXX = new TestSuite(); XXXXX.addTestSuite(AddPageUSTest.class); XXXXX.addTestSuite(AddPortletUSTest.class); XXXXX.addTestSuite(TearDownPageTest.class); return XXXXX; 
0," setComboBoxIndex( this.tck, aSettings, ""tck"" ); setComboBoxIndex( this.tms, aSettings, ""tms"" ); setComboBoxIndex( this.tdi, aSettings, ""tdi"" ); setComboBoxIndex( this.tdo, aSettings, ""tdo"" ); ", TraverseListener listener = mock( TraverseListener.class ); shell.addTraverseListener( listener ); shell.removeTraverseListener( listener ); assertFalse( shell.isListening( SWT.Traverse ) ); 
1," for (int i = 0; i < dim; i++) { String padString = """"; for (int j = 0; j < dim; j++) { padString = """"; for (int k = 0; (k + Integer.toString(A[i][j]).length()) < padding; k++) { padString += "" ""; "," for (int i = 0; i < dim; i++) { String padString = """"; for (int j = 0; j < dim; j++) { padString = """"; for (int k = 0; (k + Integer.toString(A[i][j]).length()) < padding; k++) { padString += "" ""; "
0," return new NewWebTaskWizard(taskRepository, WebRepositoryConnector.evaluateParams( taskRepository.getProperty(WebRepositoryConnector.PROPERTY_TASK_CREATION_URL), taskRepository), taskSelection); "," StringBuilder sb = new StringBuilder(); sb.append(rawType); if (actualTypeArguments.length > 0) { sb.append(""<""); for (Type actualType : actualTypeArguments) { sb.append(actualType); sb.append("",""); "
1," expectLog(""testGlobal"", """"); Object ref = project.getReferences().get(""global""); assertNotNull(""ref is not null"", ref); assertEquals(""org.example.types.TypedefTestType"", ref.getClass().getName()); "," expectLog(""testGlobal"", """"); Object XXXXX = project.getReferences().get(""global""); assertNotNull(""XXXXX is not null"", XXXXX); assertEquals(""org.example.types.TypedefTestType"", XXXXX.getClass().getName()); "
1, return (platform instanceof PlatformSpecificServiceSpecificationImpl) ? (PlatformSpecificServiceSpecificationImpl)platform : new PlatformSpecificServiceSpecificationImpl(platform); , return (platform instanceof PlatformSpecificServiceSpecificationImpl) ? (PlatformSpecificServiceSpecificationImpl)platform : new PlatformSpecificServiceSpecificationImpl(platform); 
0, this.jcomp.removeHierarchyListener(this.hierarchyListener); this.hierarchyListener = null; this.jcomp.removePropertyChangeListener(this.propertyChangeListener); this.propertyChangeListener = null; ," startTime = System.currentTimeMillis(); fname = new File(""flash""); if (!fname.exists()) { try { flash = new RandomAccessFile(fname, ""rw""); for (int i=0; i<8*65536; ++i) { flash.write(0xff); "
1," if(cachedMediaDirectory.exists()) FileUtils.deleteDirectory(cachedMediaDirectory); cachedMediaDirectory.mkdir(); if(mediaCache==null) { mediaCache = activity.getSharedPreferences(cachedMediaMap, 0); "," if(cachedMediaDirectory.exists()) FileUtils.deleteDirectory(cachedMediaDirectory); cachedMediaDirectory.mkdir(); if(mediaCache==null) { mediaCache = activity.getSharedPreferences(cachedMediaMap, 0); "
1," persisted = true; BufferHelper.writeAsSimpleString(buffer, name); BufferHelper.writeAsNullableSimpleString(buffer, discoveryGroupName); if (this.connectorNames == null) { buffer.writeInt(0); "," persisted = true; BufferHelper.writeAsSimpleString(buffer, name); BufferHelper.writeAsNullableSimpleString(buffer, discoveryGroupName); if (this.connectorNames == null) { buffer.writeInt(0); "
0," String bulkMode = outputJobInfo.getTableInfo().getStorerInfo().getProperties() .getProperty(HBaseConstants.PROPERTY_BULK_OUTPUT_MODE_KEY, ""false""); return ""true"".equals(bulkMode); "," String label = ((SystemComponent)object).getRef(); return label == null || label.length() == 0 ? getString(""_UI_SystemComponent_type"") : getString(""_UI_SystemComponent_type"") + "" "" + label; "
0, Thread thread = null; synchronized(this) { if (runningThreads.containsKey(handle)) { thread = runningThreads.get(handle); runningThreads.remove(handle); runningAsyncTasks.remove(handle); ," List vms = VirtualMachine.list(); for (int i = 0; i < vms.size(); i++) { VirtualMachineDescriptor desc = (VirtualMachineDescriptor) vms.get(i); out.println(desc.id()+""\t""+desc.displayName()); "
0, if (con != null) { int selectedOperator = getSelectedOp().getProperty(); if (selectedOperator == ConstraintOp.ONE_OF.getIndex() || selectedOperator == ConstraintOp.NONE_OF.getIndex()) { return true; , boolean justShown = false; myElement = element; if (!myIsShown && myHint != null) { myEditorPane.setText(text); applyFontSize(); myManager.showHint(myHint); myIsShown = justShown = true; 
0," this.command.add(""add""); this.requiredParameters.add(""Bank Name""); this.requiredParameters.add(""Player Name""); permFlag = ""Craftconomy.bank.add""; helpDescription = ""Add someone to a bank account.""; "," String serverName = ServerConfiguration.getInstance().getFirstProperty(""Name""); serverName = serverName.replace(""WSO2"", """"); serverName = serverName.trim(); return serverName.replace("" "", "".""); "
0," float power = (float)(AntennaConf.fixedBlastPowerInitial + getHeight() * AntennaConf.fixedBlastPowerIncreasePerBlock); return Math.min(power, (float)AntennaConf.fixedBlastPowerMax); "," Verify.assertPostSerializedEqualsAndHashCode(this.list); MutableList<String> copyOfList = SerializeTestHelper.serializeDeserialize(this.list); Assert.assertNotSame(this.list, copyOfList); "
1," return new DefaultConnectionFactory(getOperationQueueLength(), getReadBufferSize(), getHashAlgorithm()) { @Override public long getOperationTimeout() { return getOperationTimeoutMillis(); "," return new DefaultConnectionFactory(getOperationQueueLength(), getReadBufferSize(), getHashAlgorithm()) { @Override public long getOperationTimeout() { return getOperationTimeoutMillis(); "
1, ProgressIndicator indicator = ProgressManager.getInstance().getProgressIndicator(); if (indicator != null) { indicator.setText(SCANNING_PACKAGES_MESSAGE); indicator.setIndeterminate(true); , ProgressIndicator XXXXX = ProgressManager.getInstance().getProgressIndicator(); if (XXXXX != null) { XXXXX.setText(SCANNING_PACKAGES_MESSAGE); XXXXX.setIndeterminate(true); 
0," RequestParam reqParam = toRequestParam(""id"", param.getParamValue(""statusId"")); if (null != param.getParamValue(""status"")) { reqParam.add(""status"", param.getParamValue(""status"")); "," PrefixMapping pm = PrefixMapping.Factory.create(); pm.setNsPrefix( ""spoo"", ""eg: Triple t1 = NodeCreateUtils.createTriple( ""eg: assertEquals( ""spoo:a @eh:/b eh:/c"", t1.toString( pm ) ); "
0," return ""Session rowId=""+_rowId+"",id=""+_id+"",lastNode=""+_lastNode+ "",created=""+_created+"",accessed=""+_accessed+ "",lastAccessed=""+_lastAccessed+"",cookieSet=""+_cookieSet+ ""lastSaved=""+_lastSaved; ", int mod = (int)((System.currentTimeMillis() + Token.timeOffset) % 30000L); ProgressBar pb = (ProgressBar)findViewById(R.id.ProgressBar01); if(lastMod == -1 || mod < lastMod) { updateTokenList(); 
1, Player controller = game.getPlayer(source.getControllerId()); if (controller != null && game.getOpponents(controller.getId()).contains(permanent.getControllerId())) { return true; , Player XXXXX = game.getPlayer(source.getControllerId()); if (XXXXX != null && game.getOpponents(XXXXX.getId()).contains(permanent.getControllerId())) { return true; 
0," StringBuffer buffer = new StringBuffer(); buffer.append("" ""); if((style & ICustomAppearence.DISP_VISIBILITY) != 0) { buffer.append(NamedElementUtil.getVisibilityAsSign(collaborationUse)); ", KXmlParser parser = new KXmlParser(); ArrayList extList = new ArrayList(); File[] extensions = mDirectory.listFiles(new FileFilter() { public boolean accept(File file) { return file.isDirectory(); 
1," try { final Class<?> resolvedEntityClass = resolveEntityClass(entity.getClass()); if (resolvedEntityClass != null) indexer.insert(hiveConfig.getEntityConfig(resolvedEntityClass), entity); "," try { final Class<?> resolvedEntityClass = resolveEntityClass(entity.getClass()); if (resolvedEntityClass != null) indexer.insert(hiveConfig.getEntityConfig(resolvedEntityClass), entity); "
0, Collection<PCTemplate> pcTemplates = theCharacter.getTemplateSet(); for (PCTemplate template : pcTemplates) { if (!templates.containsElement(template)) { templates.addElement(template); ," StringBuilder sb = new StringBuilder(); sb.append( ""Modification: "" ). append( operation ). append( ""\n"" ). append( "", attribute : "" ). append( attribute ); return sb.toString(); "
0, geek.drinksCoffee(); int writesCode = geek.writesCode(); linesOfCodeWritten += writesCode; if (writesCode > 200) { geek.drinksCoffee(); if (canEatMoreCookies) { try { geek.eatsCookies(writesCode); ," if (!name.startsWith(baseName) || !name.endsWith("".jar"")) return false; final Matcher matcher = matchVersionedFilename(name); return matcher.matches() && matcher.group(1).equals(baseName); "
0," return (IssueTaskType) this.em .createNamedQuery(IssueTaskType.NQ_FIND_BY_NAME) .setParameter(""pClientId"", Session.user.get().getClientId()) .setParameter(""pName"", name).getSingleResult(); "," DetachedCriteria criteria = super.getCriterion(); criteria.add(Restrictions .eq(IncomingPayment.Field.CONFIRMATION_CODE.getFieldName(), confirmationCode)); return super.getUnique(criteria); "
0," SearchRequest search = new SearchRequest(); search.setStatus(request.getStatus()); if (!request.getRequestorId().equalsIgnoreCase(""-"")) { search.setApproverId(request.getRequestorId()); ", if (element instanceof IJavaElement) return true; if (element instanceof IResource) { IProject project= ((IResource)element).getProject(); return project == null || !project.isOpen(); 
0, Throwable top = t; if (t instanceof DebugException) { DebugException de = (DebugException) t; IStatus status = de.getStatus(); if (status.getException() != null) { top = status.getException(); ," System.out.println(""Getting handler for protocol:""+protocol); if( ""label"".equals(protocol)) { System.out.println(""Returning Label handler""); return new LabelURLStreamHandler(""TESTING""); "
0," try { if(galeria.getGalId() != null) galeriaBC.update(galeria); else galeriaBC.insert(galeria); galeria = null; messageContext.add(""Galeria salva com sucesso."", SeverityType.INFO); ", int index = getIndex(route); if (index != -1) { if (getElementAt(index) == getSelectedRoute()) { if (index == 0) { setSelectedItem(getSize() == 1 ? null : getElementAt(index + 1)); 
1, if (factoryInstance == null) { synchronized (StandardCombiningAlgFactory.class) { if (factoryInstance == null) { initAlgorithms(); factoryInstance = new StandardCombiningAlgFactory(); , if (factoryInstance == null) { synchronized (StandardCombiningAlgFactory.class) { if (factoryInstance == null) { initAlgorithms(); factoryInstance = new StandardCombiningAlgFactory(); 
0," super.executeCommand(); int removeIndex = relation.getMembers().indexOf(member); if ((location != -1) && (removeIndex != location)) { Main.debug(""error removing relation member""); return false; "," if ( sResourceKey == DESIGN_EXCEPTION_DUPLICATE_LOCALE || sResourceKey == DESIGN_EXCEPTION_TRANSLATION_NOT_FOUND ) { return ModelMessages.getMessage( sResourceKey, new String[]{locale, resourceKey"
1, switch (featureID) { case ICSpecXMLPackage.ALTER_ARTIFACT__GROUP1: return group1 != null && !group1.isEmpty(); case ICSpecXMLPackage.ALTER_ARTIFACT__REMOVE_PATH: return !getRemovePath().isEmpty(); , switch (featureID) { case ICSpecXMLPackage.ALTER_ARTIFACT__GROUP1: return group1 != null && !group1.isEmpty(); case ICSpecXMLPackage.ALTER_ARTIFACT__REMOVE_PATH: return !getRemovePath().isEmpty(); 
0, final int hash = System.identityHashCode(o); final int bucket = hash & indexMask; for (Entry entry = buckets[bucket]; entry != null; entry = entry.next) { if (o == entry.object) { return true; , final int n = prefGroup.getPreferenceCount(); if(n < 1) return; selected.clear(); for(int i=0; i<n; i++) { final Pref p = (Pref)prefGroup.getPreference(i); p.setChecked(true); selected.add(p); 
0," int arity = args.size(); List<Object> values = new ArrayList<Object>(arity); for (int i = 0; i < arity; i++) { Expr arg = args.get(i); values.add(arg.evaluate(context, pos, len)); "," StringBuffer result = new StringBuffer(super.toString()); result.append("" (domain: "" + domain + "")""); result.append("" (oldClipboard: "" + oldClipboard + "")""); return result.toString(); "
1," ToStringBuilder sb = new ToStringBuilder(this, ToStringStyle.DEFAULT_STYLE).append(""name"", this.name) .append(""description"", this.description) .append(""version"", this.version); return sb.toString(); "," ToStringBuilder XXXXX = new ToStringBuilder(this, ToStringStyle.DEFAULT_STYLE).append(""name"", this.name) .append(""description"", this.description) .append(""version"", this.version); return XXXXX.toString(); "
1," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (group: ""); result.append(group); result.append(')'); return result.toString(); "," if (eIsProxy()) return super.toString(); StringBuffer XXXXX = new StringBuffer(super.toString()); XXXXX.append("" (group: ""); XXXXX.append(group); XXXXX.append(')'); return XXXXX.toString(); "
1," VCloudDirectorAdminApi api = requestsSendResponses(loginRequest, sessionResponse, edit, editResponse); assertEquals(api.getNetworkApi().edit(networkAdminHref, editNetwork()), editNetworkTask()); "," VCloudDirectorAdminApi api = requestsSendResponses(loginRequest, sessionResponse, edit, editResponse); assertEquals(api.getNetworkApi().edit(networkAdminHref, editNetwork()), editNetworkTask()); "
1," super(parent, resources.getString(""title.dialog""), true); getContentPane().setLayout(new GridBagLayout()); JFTPHelp2.getInstance().enableHelpKey(getRootPane(), HELP_ID); initComponents(); pack(); "," super(parent, resources.getString(""title.dialog""), true); getContentPane().setLayout(new GridBagLayout()); JFTPHelp2.getInstance().enableHelpKey(getRootPane(), HELP_ID); initComponents(); pack(); "
1, this.channelAssociation = new ManagementChannelHandler(new ManagementClientChannelStrategy() { @Override public Channel getChannel() throws IOException { return getOrCreateChannel(); , this.channelAssociation = new ManagementChannelHandler(new ManagementClientChannelStrategy() { @Override public Channel getChannel() throws IOException { return getOrCreateChannel(); 
1," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (any: ""); result.append(any); result.append(')'); return result.toString(); "," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (any: ""); result.append(any); result.append(')'); return result.toString(); "
1," BalloonBuilder balloonBuilder = JBPopupFactory.getInstance(). createHtmlTextBalloonBuilder(message, MessageType.ERROR, null); showBalloon(balloonBuilder, component, centerPoint); "," BalloonBuilder XXXXX = JBPopupFactory.getInstance(). createHtmlTextBalloonBuilder(message, MessageType.ERROR, null); showBalloon(XXXXX, component, centerPoint); "
1," Document ownerDocument = result.getOwnerDocument(); int start = 0; int current = 0; while (current < textContent.length()) { current = textContent.indexOf(""${"", current); if (current < 0) { break; "," Document XXXXX = result.getOwnerDocument(); int XXXXX = 0; int XXXXX = 0; while (XXXXX < textContent.length()) { XXXXX = textContent.indexOf(""${"", XXXXX); if (XXXXX < 0) { break; "
0, InputContext context = getPage().getPDEEditor().getContextManager().findContext(BuildInputContext.CONTEXT_ID); if (context == null) return null; return (IBuildModel) context.getModel(); ," if (input == null || !recipes.containsKey(Arrays.asList(input.getItem(), input.stackSize, input.getItemDamage(), input.isItemEnchanted(), input.stackTagCompound != null))) { return null; "
1," if (charAt(value, index + 2) == 'H') { if (contains(value, index + 3, 2, ""OO"", ""ER"", ""EN"", ""UY"", ""ED"", ""EM"")) { if (contains(value, index + 3, 2, ""ER"", ""EN"")) { result.append(""X"", ""SK""); "," if (charAt(value, index + 2) == 'H') { if (contains(value, index + 3, 2, ""OO"", ""ER"", ""EN"", ""UY"", ""ED"", ""EM"")) { if (contains(value, index + 3, 2, ""ER"", ""EN"")) { result.append(""X"", ""SK""); "
0," Integer memberId = this.getMemberIdFromEvent(event); ParticipantMutedEvent pm = new ParticipantMutedEvent(memberId, confName, true); conferenceEventListener.handleConferenceEvent(pm); "," String oldFill = fill; fill = newFill; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_CLIP_PATH_ELEMENT__FILL, oldFill, fill)); "
1, super(initParams); this.queryService_ = queryService; this.nodeHierarchyCreator_ = nodeHierarchyCreator; this.repositoryService_ = repoService; this.dmsConfiguration_ = dmsConfiguration; , super(initParams); this.queryService_ = queryService; this.nodeHierarchyCreator_ = nodeHierarchyCreator; this.repositoryService_ = repoService; this.dmsConfiguration_ = dmsConfiguration; 
1," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," EditorCell XXXXX = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, XXXXX, editorContext); return XXXXX; "
1," BatchDeleteAttributesRequest request = new BatchDeleteAttributesRequest() .withDomainName(determineDomainName()) .withItems(determineDeletableItems()); log.trace(""Sending request [{"," BatchDeleteAttributesRequest request = new BatchDeleteAttributesRequest() .withDomainName(determineDomainName()) .withItems(determineDeletableItems()); log.trace(""Sending request [{"
1, int maxMP = effect.getEffected().getLifeStats().getMaxMp(); int newValue = value; if (percent) newValue = (int)((maxMP * value)/100); effect.getEffected().getLifeStats().reduceMp(newValue); , int XXXXX = effect.getEffected().getLifeStats().getMaxMp(); int XXXXX = value; if (percent) XXXXX = (int)((XXXXX * value)/100); effect.getEffected().getLifeStats().reduceMp(XXXXX); 
0, int outfitId = EquipmentRequest.customOutfitId; EquipmentRequest.customOutfitId = 0; SpecialOutfit outfit = EquipmentManager.getCustomOutfit( outfitId ); if ( outfit == null ) { return; ," throw new UnsupportedOperationException(""only used for partitioning and multivalue column can't partition. easy to implement if anyone else starts using this though, but for now unsupported""); "
0," if (this == obj) return true; if (obj instanceof ComponentImpacted) { ComponentImpacted o = (ComponentImpacted)obj; return nullSafeEquals(m_target, o.m_target) && nullSafeEquals(m_cause, o.m_cause); "," if(value == inst.getEObject() && !inst.isConsumed()) return null; switch(index) { case 0: return new Literal_CommaKeyword_2_3(lastRuleCallOrigin, next, actIndex, consumed); default: return null; "
1, this.federationServer = federationServer; this.managementService = new FederationManagementServiceImpl(federationServer); this.federationService = new FederationServiceImpl(federationServer); , this.federationServer = federationServer; this.managementService = new FederationManagementServiceImpl(federationServer); this.federationService = new FederationServiceImpl(federationServer); 
1," String result = a + "" += "" + H(b,c,d) + "" + x"" + x + "" + "" + Ti + "";""; result += ""\n""; result += a + "" = "" + b + "" + "" + rotateLeft(a,s) + "";""; System.out.println(result); return result; "," String XXXXX = a + "" += "" + H(b,c,d) + "" + x"" + x + "" + "" + Ti + "";""; XXXXX += ""\n""; XXXXX += a + "" = "" + b + "" + "" + rotateLeft(a,s) + "";""; System.out.println(XXXXX); return XXXXX; "
0," String val = """"; for (Variable v : view.varMap.values()) { val += v.id + "" "" + v.value + ""/"" + (bestSolution != null ? bestSolution.get(v.id) : ""NA"") + (v.fixed ? ""F"" : """") + ""\n""; "," long beginning = this.beginning.get(); long end = this.end.get(); if (beginning == 0 || end == 0) { throw new IllegalStateException(""You must start and then stop a Stopwatch to get the duration!""); "
0, final DITAOTJavaLogger logger = new DITAOTJavaLogger(); File imgInput = new File(dirName+File.separatorChar+fileName); if (checkDirName(dirName)) { imgInput = new File(getImageOutPutPath(fileName)); ," super(plugin); name = ""Syphon""; description = ""Gives your health to the target""; usage = ""/skill syphon [target] [health]""; minArgs = 0; maxArgs = 2; identifiers.add(""skill syphon""); "
0, if (this == obj) return true; if (obj == null) return false; if (!(obj instanceof MFInt)) return false; MFInt other = (MFInt) obj; if (grp == null) { if (other.grp != null) return false; ," if (SanityManager.DEBUG) { String str = """"; int i = 0; for (Entry entry : locks.values()) { entry.lock(); try { str += ""\n lock["" + i + ""]: "" + DiagnosticUtil.toDiagString(entry.control); "
0," if (!firstCellPainted) { attributes.clear(); attributes.put(ATTR_CLASS, getStyle().getLabel() + "" "" + getStyle().getLayoutLabelCell()); write(LayoutJspUtils.INSTANCE.startTag(TAG_TD, attributes)); "," KAndJoin join = newAndJoin(0, 1); this.procedure.setJoin(join); KProcess process = this.program.newProcess(null); new KProcessor().execute(process); assertFalse(join.isEnabled(process)); "
1, final IEditorPart part = EclipseUtils.getActivePage().getActiveEditor(); setChecked(true); if (part instanceof SharedMemoryEditor) { try { ((SharedMemoryEditor)part).setMemoryName(getText()); , final IEditorPart part = EclipseUtils.getActivePage().getActiveEditor(); setChecked(true); if (part instanceof SharedMemoryEditor) { try { ((SharedMemoryEditor)part).setMemoryName(getText()); 
0," mockService.deleteButReadAnnotatedMethod(); assertEquals(1, ((MockAudit)auditService).getCalled()); assertEquals(AuditActionType.READ, ((MockAudit)auditService).getAudit().getAuditActionType()); "," NumberInputHandler handler = new NumberInputHandler(); InputDialog id = new InputDialogCirclePointDirectionRadius(app, title, handler, geoPoint, forAxis, kernel); id.setVisible(true); "
1," Set<Class<?>> typeClasses = adapter.externalizer.getTypeClasses(); if (typeClasses.size() > 0) { for (Class<?> typeClass : typeClasses) updateExtReadersWriters(adapter, typeClass, readerIndex); "," Set<Class<?>> typeClasses = adapter.externalizer.getTypeClasses(); if (typeClasses.size() > 0) { for (Class<?> typeClass : typeClasses) updateExtReadersWriters(adapter, typeClass, readerIndex); "
1," File finishedLoc = new File(finishedDirectory, baseDir.getName()); LOG.info(""Moving finished batch ingest to "" + finishedLoc); try { FileUtils.renameOrMoveTo(baseDir, finishedLoc); "," File XXXXX = new File(finishedDirectory, baseDir.getName()); LOG.info(""Moving finished batch ingest to "" + XXXXX); try { FileUtils.renameOrMoveTo(baseDir, XXXXX); "
0," try { Class<?> c = getTaskAttemptContextClass(); Constructor<?> cons = c.getConstructor(Configuration.class, TaskAttemptID.class); return (TaskAttemptContext) cons.newInstance(conf, taskId); "," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (value: ""); result.append(value); result.append(')'); return result.toString(); "
1, for (EarClassLoaderContext ctx : classLoaderMap.values()) { for (String ctxFilterName : ctx.getEarDescriptor().getRegisteredFilters().keySet()) { if (ctxFilterName.equals(filterName)) { return true; , for (EarClassLoaderContext ctx : classLoaderMap.values()) { for (String ctxFilterName : ctx.getEarDescriptor().getRegisteredFilters().keySet()) { if (ctxFilterName.equals(filterName)) { return true; 
1," byte[] v = getBytes(value); byte[] v1 = new byte[v.length+1]; System.arraycopy(v, 0, v1, 0, v.length); v1[v.length] = '\0'; return createByteArray(name, variability, units, v1, v1.length); "," byte[] v = getBytes(value); byte[] v1 = new byte[v.length+1]; System.arraycopy(v, 0, v1, 0, v.length); v1[v.length] = '\0'; return createByteArray(name, variability, units, v1, v1.length); "
0," assertEquals(ElementSpec.OriginateDirection, spec1.getDirection()); spec1.setDirection(ElementSpec.JoinNextDirection); assertEquals(ElementSpec.JoinNextDirection, spec1.getDirection()); "," Intent i = new Intent(ctx,MITCoursesListsSliderActivity.class); i.putExtra(MITCoursesListsSliderActivity.KEY_GROUP, MITCoursesListsSliderActivity.GROUP_21); ctx.startActivity(i); "
1," plugin.getAPI().setPlayerInfo(event.getPlayer().getName(), ""lastSeen"", Long.toString((System.currentTimeMillis() / 1000L))); plugin.getAPI().processTimes(event.getPlayer().getName()); "," plugin.getAPI().setPlayerInfo(event.getPlayer().getName(), ""lastSeen"", Long.toString((System.currentTimeMillis() / 1000L))); plugin.getAPI().processTimes(event.getPlayer().getName()); "
1, mTimestamp = parcel.readLong(); mCoachNum = parcel.readLong(); mFare = parcel.readLong(); mNewBalance = parcel.readLong(); mAgency = parcel.readLong(); mTransType = parcel.readLong(); , mTimestamp = parcel.readLong(); mCoachNum = parcel.readLong(); mFare = parcel.readLong(); mNewBalance = parcel.readLong(); mAgency = parcel.readLong(); mTransType = parcel.readLong(); 
0, if (this == obj) return true; if ((obj == null) || (obj.getClass() != this.getClass())) return false; CurrentDVD test = (CurrentDVD) obj; return test.getTitle().trim().equals(this.title.trim()); ," T w = binHash.getBinFor(exp); List<V> valList = valueLists.get(w); if (valList == null) { throw new IllegalStateException( ""Weird! cannot remove item that doesn't exist: "" + exp); "
0, final FakereplaceTransformer[] transformers = new FakereplaceTransformer[this.transformers.length + 1]; for (int i = 0; i < this.transformers.length; ++i) { transformers[i] = this.transformers[i]; ," TagCloud cloud = new TagCloud(composite, SWT.NONE); Color color = Display.getCurrent().getSystemColor(SWT.COLOR_RED); cloud.setBackground(color); Assert.assertEquals(color, cloud.getBackground()); "
0," String m = new org.apache.cxf.common.i18n.Message( ""TARGET_SERVICE_NOT_ALLOWED_IN_REQUESTURI"", LOG).toString(); return createFault(SoapJMSConstants.getTargetServiceNotAllowedInRequestURIQName(), m); "," int scrollLeft = getElement().getScrollLeft(); if (scrollLeft > 0) { int clientWidth = getElement().getClientWidth(); scrollLock.getStyle().setWidth(scrollLeft + clientWidth, Unit.PX); "
0, ISelection selection = tableViewer.getSelection(); for(Iterator<?> selections = ((IStructuredSelection) selection).iterator(); selections.hasNext();) { dependencies.remove(selections.next()); ," Dimension size = super.getPreferredSize(); int iSize = SubstanceSizeUtils.getTitlePaneIconSize(); return new Dimension(Math.max(iSize, size.width), Math.max( size.height, iSize)); "
1, e = Engine.getInstance(); leader = e.getParty().getPartyRep(); leader.setWalkSprite(e.getParty().get(0).getMapSelf()); currentTerrain = null; activeNPC = null; state = exploreState; state.start(); , e = Engine.getInstance(); leader = e.getParty().getPartyRep(); leader.setWalkSprite(e.getParty().get(0).getMapSelf()); currentTerrain = null; activeNPC = null; state = exploreState; state.start(); 
1," sp.printHTMLheader(""RUBiS ERROR: SearchItemsByRegion""); sp.printHTML( ""<h2>Your request has not been processed due to the following error :</h2><br>""); sp.printHTML(errorMsg); sp.printHTMLfooter(); "," sp.printHTMLheader(""RUBiS ERROR: SearchItemsByRegion""); sp.printHTML( ""<h2>Your request has not been processed due to the following error :</h2><br>""); sp.printHTML(errorMsg); sp.printHTMLfooter(); "
0," System.out.println(e.getX() + "" and "" + e.getY()); System.out.println(e.getX() / 70 ); int curri = (e.getX() / 70) + strip1Start; if (curri > colorFrames.length - 1) { curri -= colorFrames.length; "," Object oldNAME = nAME; nAME = newNAME; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, PowrmartPackage.TABLEATTRIBUTE_TYPE__NAME, oldNAME, nAME)); "
0," Space space = spaceDAO.getByUname(spaceUname); if(space == null){ log.info(""Unable get space to touch it by spaceUname ""+ spaceUname+ "". This may cause by new space is creating.""); return; ", TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(SiteManagementTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; 
1, this.loggingOutput = loggingOutput; this.stdOutLoggingSystem = stdOutLoggingSystem; this.stdErrLoggingSystem = stdErrLoggingSystem; slfLoggingSystem = new LoggingSystemAdapter(loggingConfigurer); , this.loggingOutput = loggingOutput; this.stdOutLoggingSystem = stdOutLoggingSystem; this.stdErrLoggingSystem = stdErrLoggingSystem; slfLoggingSystem = new LoggingSystemAdapter(loggingConfigurer); 
1, AbstractBaselineModel<?> model = (AbstractBaselineModel<?>) getBaselineModel(om).getModel(); NormalSummary summary = model.getSummary(); if (summary == null || !summary.getDefined()) { return null; , AbstractBaselineModel<?> model = (AbstractBaselineModel<?>) getBaselineModel(om).getModel(); NormalSummary summary = model.getSummary(); if (summary == null || !summary.getDefined()) { return null; 
0," IAttributeMap m = PIMRuntime.getInstance().getCallerFactory().createAttributeMap(); m.add(PIMRuntime.getInstance().getCallerFactory().createAttribute(""outlook.business"", ""true"")); return m; "," Vector2d vec = laserPistol.getKnockback(true); assertTrue(vec.getX() == new Vector2d(0,0).getX()); assertTrue(vec.getY() == new Vector2d(0,0).getY()); assertTrue(vec.getlength() == 0); "
1, if (po instanceof ISpecTestCasePO || po instanceof ICategoryPO) { if (getTreeViewer() != null) { Plugin.getDisplay().syncExec(new Runnable() { public void run() { getTreeViewer().refresh(); , if (po instanceof ISpecTestCasePO || po instanceof ICategoryPO) { if (getTreeViewer() != null) { Plugin.getDisplay().syncExec(new Runnable() { public void run() { getTreeViewer().refresh(); 
1, boolean focused = false; final Content[] selection = getSelectedContents(); for (Content each : selection) { if (UIUtil.isFocusAncestor(each.getComponent())) { focused = true; break; , boolean XXXXX = false; final Content[] selection = getSelectedContents(); for (Content each : selection) { if (UIUtil.isFocusAncestor(each.getComponent())) { XXXXX = true; break; 
1," counter++; assertEquals(""Aladdin"", previousInfo.getUserName()); assertEquals(""open sesame"", previousInfo.getPassword()); assertEquals(false, previousInfo.saveResult()); return previousInfo; "," counter++; assertEquals(""Aladdin"", previousInfo.getUserName()); assertEquals(""open sesame"", previousInfo.getPassword()); assertEquals(false, previousInfo.saveResult()); return previousInfo; "
1, switch (featureID) { case EssentialOCLCSTPackage.INVOCATION_EXP_CS__ARGUMENT: getArgument().clear(); getArgument().addAll((Collection<? extends NavigatingArgCS>)newValue); return; , switch (featureID) { case EssentialOCLCSTPackage.INVOCATION_EXP_CS__ARGUMENT: getArgument().clear(); getArgument().addAll((Collection<? extends NavigatingArgCS>)newValue); return; 
0, for (int i = 0; i < this.elemsOrder.size(); i++) { final Element elem = this.elemsOrder.get(i); if (elem.getNamespace().equals(childNS) && elem.getName().equals(childName)) return i; ," assertEquals(test.mocksize, test.size); final int records = 2; byte[] write = new byte[test.recordSize]; for (int i = 0; i < records; i++) { random.nextBytes(write); try { test.append(write); "
0, pushState(); scope = el; superBlockNamedLabels = new HashMap(superBlockNamedLabels); superBlockNamedLabels.putAll(currentBlockNamedLabels); currentBlockNamedLabels = new HashMap(); ," RunnableExample e = new RunnableExample(); RunnableExampleBinding b = new RunnableExampleBinding(e); Runnable r = b.doStuff(); Assert.assertEquals(""doStuff"", ((NamedBinding) r).getName()); "
0," SpringBusFactory factory = new SpringBusFactory(); bus = factory.createBus(""org/apache/cxf/ws/rm/feature.xml""); RMManager manager = bus.getExtension(RMManager.class); verifyManager(manager); "," if (event.getAction() == KeyEvent.ACTION_DOWN) { switch (keyCode) { case KeyEvent.KEYCODE_DEL: { long id = getListView().getSelectedItemId(); if (id > 0) { confirmDeleteThread(id, mQueryHandler); "
0, switch (featureID) { case FXGraphPackage.DEFINE__ELEMENT: setElement((Element)null); return; case FXGraphPackage.DEFINE__INCLUDE_ELEMENT: setIncludeElement((IncludeValueProperty)null); return; ," int p = pairCount(); int b = bitCount(); if (p != b) { return ""OrderedCPairlist( pairCount="" + p + "", bitCount="" + b + "", putCount="" + putCount + "", remCount="" + remCount + "" )""; "
1," int i = 0; do { i = s.indexOf( sWordToReplace, i ); if ( i != -1 ) { s = s.substring( 0, i ) + sReplaceWith + s.substring( i + sWordToReplace.length( ) ); i += sReplaceWith.length( ); "," XXXXXnt XXXXX = 0; do { XXXXX = s.XXXXXndexOf( sWordToReplace, XXXXX ); XXXXXf ( XXXXX != -1 ) { s = s.substrXXXXXng( 0, XXXXX ) + sReplaceWXXXXXth + s.substrXXXXXng( XXXXX + sWordToReplace.length( ) ); XXXXX += sReplaceWXXXXXth.length( ); "
1," return ""GraphEntry [name="" + name + "", parts="" + Arrays.toString(parts) + "", op="" + operation + "", path="" + path + (subSpec == null ? """" : "", subSpec="" + subSpec.getName()) + ""]""; "," return ""GraphEntry [name="" + name + "", parts="" + Arrays.toString(parts) + "", op="" + operation + "", path="" + path + (subSpec == null ? """" : "", subSpec="" + subSpec.getName()) + ""]""; "
0," assertEquals(0,IAURLCanonicalizer.getDefaultPort(""foo"")); assertEquals(80,IAURLCanonicalizer.getDefaultPort(""http"")); assertEquals(443,IAURLCanonicalizer.getDefaultPort(""https"")); "," scrollPane.setBorder(BorderFactory.createEmptyBorder()); installUIDelegates(scrollPane); scrollPane.setCorner(JScrollPane.LOWER_RIGHT_CORNER, createScrollPaneCorner()); return scrollPane; "
0," this.remove(2); Varipaletti varipaletti = new Varipaletti(this); this.add(varipaletti, BorderLayout.CENTER); this.nappainKuuntelija.asetaUusiKuuntelija( varipaletti ); this.revalidate(); "," this._pythonlister = Utilities.exportResource(""/org/ant4eclipse/lib/pydt/lister.py""); if (!this._pythonlister.isAbsolute()) { this._pythonlister = this._pythonlister.getAbsoluteFile(); "
1," expectValidatePrincipal(true); expectAuthorizePrincipal(true); expectExecuteTaskHandlerPrincipal(true); coreTest(false, taskHandlerServiceAction, serviceActionInnerContext, childParam); "," expectValidatePrincipal(true); expectAuthorizePrincipal(true); expectExecuteTaskHandlerPrincipal(true); coreTest(false, taskHandlerServiceAction, serviceActionInnerContext, childParam); "
1," for (FPlayer fplayer : this.get()) { if ( ! Factions.i.exists(fplayer.getFactionId())) { p.log(""Reset faction data (invalid faction) for player ""+fplayer.getName()); fplayer.resetFactionData(false); "," for (FPlayer fplayer : this.get()) { if ( ! Factions.i.exists(fplayer.getFactionId())) { p.log(""Reset faction data (invalid faction) for player ""+fplayer.getName()); fplayer.resetFactionData(false); "
0," MParamInsertPart lParamInsertPart = new MParamInsertPart(pName, this.mFile); this.eStringPart_EolPart_ParamInsertPart_TextInsertPart_ExpandInsertPart .add(lParamInsertPart); return lParamInsertPart; "," if (mixedResult == null) { mixedResult = new ValidationResult(); mixedResult.addWarning(""The order no length shall be in [5, 10].""); mixedResult.addError(""The order date is mandatory.""); "
0," formatter.setSpaceAfterCommaInListings(false); assertEqualSource(""[1,2,3]"", ""[1 , 2 , 3, ]""); formatter.setSpaceAfterCommaInListings(true); assertEqualSource(""[1, 2, 3]"", ""[1 , 2 , 3 ]""); ", if(client==null) { if(!applicationContext.hasName()) return null; if(!applicationContext.isSetClientManagement()) return null; client=(ClientPlus) scopeContext.getClientScopeEL(this); 
1," this.filePath = filePath; this.controller = controller; String title = ""File not found""; if (filePath != null) { File f = new File(filePath); if (f.exists()) { title = f.getName(); "," this.XXXXXilePath = XXXXXilePath; this.controller = controller; String XXXXX = ""File not XXXXXound""; iXXXXX (XXXXXilePath != null) { File XXXXX = new File(XXXXXilePath); iXXXXX (XXXXX.exists()) { XXXXX = XXXXX.getName(); "
0," dest.writeString(mSettingsActivityName); dest.writeInt(mThumbnailResource); dest.writeInt(mAuthorResource); dest.writeInt(mDescriptionResource); mService.writeToParcel(dest, flags); "," depsGenerator = new DepsGenerator(null, null, null, null, null); writeDepInfosMethod = Magic.getDeclaredMethod(DepsGenerator.class, ""writeDepInfos"", PrintStream.class, Collection.class); "
0, SourceDescriptionPacket packet = new SourceDescriptionPacket(); int readable = buffer.readableBytes(); for (int i = 0; i < innerBlocks; i++) { packet.addItem(SdesChunk.decode(buffer)); ," try { String text = _textArea.getText(); if (!text.equals("""")) { String[] items = text.split(""\n""); List list = new ArrayList(); for (int i = 0; i < items.length; i++) { list.add(items[i]); "
1," String[] classnames = loader.getEditableClasses(); rawLoaders.add(loader); if (classnames != null) { for (int i = 0; i < classnames.length; i++) { loaders.put(classnames[i].intern(), loader); "," String[] classnames = loader.getEditableClasses(); rawLoaders.add(loader); if (classnames != null) { for (int i = 0; i < classnames.length; i++) { loaders.put(classnames[i].intern(), loader); "
1," btnOK.setEnabled(true && isRunning); btnCancel.setEnabled(true && isRunning); lblApprovalInfo.setText(""Error: "" + caught.getMessage()); lblApprovalInfo.setStyleName(""info-error""); "," btnOK.setEnabled(true && isRunning); btnCancel.setEnabled(true && isRunning); lblApprovalInfo.setText(""Error: "" + caught.getMessage()); lblApprovalInfo.setStyleName(""info-error""); "
0," servletContext.setVersion( 3, 0 ); servletContext.addServlet( ""fooServlet"", mock( Servlet.class ) ); try { application.setOperationMode( OperationMode.SESSION_FAILOVER ); fail(); "," WindowConfigurationStorage storage = new WindowConfigurationStorage(); mController.storeDialogPositions(this, storage, WINDOW_PREFERENCE_STORAGE_PROPERTY); setVisible(false); this.dispose(); "
0, final ReentrantReadWriteLock lock = new ReentrantReadWriteLock(); lock.writeLock().lock(); Thread t = new Thread(new Runnable() { public void run() { threadAssertFalse(lock.writeLock().tryLock()); ," ArrayList top = new ArrayList(); ArrayList layer = new ArrayList(); int label = 0; for ( int i=0; i<levels; ++i ) { Node n = g.addNode(); n.setString(LABEL, String.valueOf(label++)); top.add(n); "
1," if (requireChange(this.color, aColor)) { java.awt.Color oldColor = color; this.color = aColor; setChanged(); notifyObservers(new FGENotification(Parameters.color, oldColor, aColor)); "," if (requireChange(this.color, aColor)) { java.awt.Color XXXXX = color; this.color = aColor; setChanged(); notifyObservers(new FGENotification(Parameters.color, XXXXX, aColor)); "
1, String methodType = preferences.getTestMethodType(compilationUnit.getJavaProject()); if(methodType.equals(PreferenceConstants.TEST_METHOD_TYPE_NO_PREFIX)) { return new TestMethodDivinerNoPraefix(); , String XXXXX = preferences.getTestMethodType(compilationUnit.getJavaProject()); if(XXXXX.equals(PreferenceConstants.TEST_METHOD_TYPE_NO_PREFIX)) { return new TestMethodDivinerNoPraefix(); 
0," Thread t = new Thread(group, r, prefix + threadNumber.getAndIncrement(), 0); t.setDaemon(false); if (t.getPriority() != Thread.NORM_PRIORITY) t.setPriority(Thread.NORM_PRIORITY); return t; "," double expOut_1 = 2.6; double expOut_2 = 0.4; _unit.setOutput(expOut_1); assertEquals(expOut_1, _unit.getOutput(), 1e-6); _unit.setOutput(expOut_2); assertEquals(expOut_2, _unit.getOutput(), 1e-6); "
1, Collection<Shape> children = Graphiti.getPeService().getAllContainedShapes((ContainerShape) element); PictogramElement first = children.iterator().next(); return first.getGraphicsAlgorithm(); , Collection<Shape> children = Graphiti.getPeService().getAllContainedShapes((ContainerShape) element); PictogramElement XXXXX = children.iterator().next(); return XXXXX.getGraphicsAlgorithm(); 
0, box.hide(); if (Gerrit.getConfig().getAuthType() == AuthType.DEVELOPMENT_BECOME_ANY_ACCOUNT) { currentEmail = addr; if (emailPick.getItemCount() == 0) { onSaveSuccess(currentUser); ," SharedPreferences pref = getPreferences(context, widgetId); return pref.getInt(Constants.SETTING_TEMP_UNITS, Constants.SETTING_TEMP_UNITS_DEFAULT) == Constants.TEMP_UNIT_CELSIUS; "
1, HistogramNode self = this; if (value >= cell.minValue && value <= cell.maxValue) { if (cell.count < root.getCountPerNodeLimit() || cell.minValue == cell.maxValue) { cell.count++; , HistogramNode XXXXX = this; if (value >= cell.minValue && value <= cell.maxValue) { if (cell.count < root.getCountPerNodeLimit() || cell.minValue == cell.maxValue) { cell.count++; 
1, MimeType mediaType = MimeType.getMatchingMimeType(headerValue.getValue()); if (MimeType.UNKNOWN.equals(mediaType)) { mediaType = MimeType.guessMediaTypeFromString(headerValue.getValue()); , MimeType XXXXX = MimeType.getMatchingMimeType(headerValue.getValue()); if (MimeType.UNKNOWN.equals(XXXXX)) { XXXXX = MimeType.guessMediaTypeFromString(headerValue.getValue()); 
1," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," EditorCell XXXXX = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, XXXXX, editorContext); return XXXXX; "
0," return SizeOf.size(page,0)+ SizeOf.size(className)+ SizeOf.size(packageName)+ SizeOf.size(javaName)+ SizeOf.size(fileName)+ SizeOf.size(compName)+ SizeOf.size(lastAccess)+ SizeOf.size(accessCount); ", boolean received = this.getDatanodeReportRatio() >= this.outStandingReportThreshold; if (!received) { checkDatanodes(); return this.getDatanodeReportRatio() >= this.outStandingReportThreshold; 
0," if (m_eventMgr == null) throw new IllegalStateException(""eventManager has not been set""); if (m_dataSource == null) throw new IllegalStateException(""dataSource has not been set""); ", dataView.setDataDividerLocation(); dataView.setAnnotationDividerLocation(); transferAnnotation(true); setVisible(false); dataView.stopGetz(); dataView.dispose(); BigPane.srsFrame = null; dispose(); 
1," long jarTimeStamp = checkJarFile(); Map<File, List<String>> files = new LinkedHashMap<File, List<String>>(); for (FileSet fileSet : sources) { files.put(fileSet.getDir(), fileSet.list()); "," long XXXXX = checkJarFile(); Map<File, List<String>> files = new LinkedHashMap<File, List<String>>(); for (FileSet fileSet : sources) { files.put(fileSet.getDir(), fileSet.list()); "
0, StatisticsController controller = Lookup.getDefault().lookup(StatisticsController.class); final StatisticsUI[] uis = getUI(statistics); for (StatisticsUI s : uis) { s.setup(statistics); , CompoundCommand cmd = (CompoundCommand) super .createDeleteCommand(objects); if (cmd != null) { if (cmd.getCommands().size() == 1) { cmd.setLabel(((Command) cmd.getCommands().get(0)).getLabel()); 
1," hasInit = true; try { Method method; try { method = (net.minecraft.src.Packet.class).getDeclaredMethod(""a"", new Class[] { Integer.TYPE, Boolean.TYPE, Boolean.TYPE, java.lang.Class.class "," hasInit = true; try { Method method; try { method = (net.minecraft.src.Packet.class).getDeclaredMethod(""a"", new Class[] { Integer.TYPE, Boolean.TYPE, Boolean.TYPE, java.lang.Class.class "
1, if(isSharingElementals() && getOwner() != null) return (int)(getOwner().getAttackElementValue(attackAttribute) * sharedElementalsPercent()); return super.getAttackElementValue(attackAttribute); , if(isSharingElementals() && getOwner() != null) return (int)(getOwner().getAttackElementValue(attackAttribute) * sharedElementalsPercent()); return super.getAttackElementValue(attackAttribute); 
1," int y1= fWidget.getLinePixel(range.getStartLine()); int y2= fWidget.getLinePixel(range.getStartLine() + range.getNumberOfLines()); return new Rectangle(0, y1, getWidth(), y2 - y1 - 1); "," int y1= fWidget.getLinePixel(range.getStartLine()); int y2= fWidget.getLinePixel(range.getStartLine() + range.getNumberOfLines()); return new Rectangle(0, y1, getWidth(), y2 - y1 - 1); "
1, final ComplexConfigDTO lastConfigDTO = rootProxy.getConfigDTOs().get(rootProxy.getConfigDTOs().size() - 1); return !lastConfigDTO.getDefiningScopePath().equals(rootProxy.getScopePath()); , final ComplexConfigDTO lastConfigDTO = rootProxy.getConfigDTOs().get(rootProxy.getConfigDTOs().size() - 1); return !lastConfigDTO.getDefiningScopePath().equals(rootProxy.getScopePath()); 
0, switch (featureID) { case JbiPackage.SHARED_LIBRARY_TYPE1__MIXED: getMixed().clear(); return; case JbiPackage.SHARED_LIBRARY_TYPE1__VERSION: setVersion(VERSION_EDEFAULT); return; ," this.url = url; Pattern pattern = Pattern.compile(""\\b(https?|ftp|file)*(: Matcher matcher = pattern.matcher(url); if (matcher.find()) { if (matcher.group(1) != null) { protocol = matcher.group(1); "
1," MockInitializer initializer = new MockInitializer() { public void init(Mock mockIDEBus) { mockIDEBus.expects(testCase.atLeastOnce()).method( ""executeAndWait"").withAnyArguments(); "," MockInitializer XXXXX = new MockInitializer() { public void init(Mock mockIDEBus) { mockIDEBus.expects(testCase.atLeastOnce()).method( ""executeAndWait"").withAnyArguments(); "
0," if (!viewFrustum.intersects(this.getExtent(dc.getGlobe(), dc.getVerticalExaggeration()))) return false; if (getSizeInPixels(dc) <= MIN_CELL_SIZE_PIXELS * 4) return false; return true; "," Jooc.warning(getNamespace().getSymbol(), ""namespaces are not yet implemented, ignoring use namespace "" + getNamespace().getName()); getNamespace().analyze(this); super.analyze(parentNode); "
1, scheme = previous.getScheme(); host = previous.getHost(); port = previous.getPort(); path = percentDecode(previous.getRawPath()); params.putAll(parseParams(previous.getRawQuery())); , scheme = previous.getScheme(); host = previous.getHost(); port = previous.getPort(); path = percentDecode(previous.getRawPath()); params.putAll(parseParams(previous.getRawQuery())); 
1, this.globalNum = globalNum; this.displayName = displayName; this.customerLevel = customerLevel; this.commentDate = commentDate; this.commentUser = commentUser; this.comment = comment; , this.globalNum = globalNum; this.displayName = displayName; this.customerLevel = customerLevel; this.commentDate = commentDate; this.commentUser = commentUser; this.comment = comment; 
0," Intent i = new Intent(ctx,MITCoursesListsSliderActivity.class); i.putExtra(MITCoursesListsSliderActivity.KEY_GROUP, MITCoursesListsSliderActivity.GROUP_01); ctx.startActivity(i); "," DecimalFormat money_format = new DecimalFormat(""000.00""); String _return = String.format(""%-25s %04d %1s %1s"", title, count, status.SYMBOL(), money_format.format(price)); return _return; "
0, _maxFunctionIndex = -1; _functionDataByName = new HashMap(sizeEstimate * 3 / 2); _functionDataByIndex = new HashMap(sizeEstimate * 3 / 2); _mutatingFunctionIndexes = new HashSet(); , switch (rel) { case IPageLayout.BOTTOM: return SWT.BOTTOM; case IPageLayout.LEFT: return SWT.LEFT; case IPageLayout.RIGHT: return SWT.RIGHT; case IPageLayout.TOP: return SWT.TOP; default: return 0; 
1," if (this.permissions.containsKey(resource)) { final Map<String, String> actions = this.permissions.get(resource); if (!actions.containsKey(operation)) { actions.put(operation, operation); "," if (this.permissions.containsKey(resource)) { final Map<String, String> actions = this.permissions.get(resource); if (!actions.containsKey(operation)) { actions.put(operation, operation); "
0, final Project project = context.getProject(); ModelAccess.instance().executeCommand(new Runnable() { public void run() { SNode node = breakpoint.getLocation().getSNode(); if (node == null) { return; ," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (kind: ""); result.append(kind); result.append(')'); return result.toString(); "
1, final int capacity = computeCapacity(expectedSize); keys = new int[capacity]; values = new double[capacity]; states = new byte[capacity]; this.missingEntries = missingEntries; mask = capacity - 1; , final int capacity = computeCapacity(expectedSize); keys = new int[capacity]; values = new double[capacity]; states = new byte[capacity]; this.missingEntries = missingEntries; mask = capacity - 1; 
0, switch (getDBType(em)) { case db2: assertLockTestSQLs(Select + tableLfName + Where + DB2Lock); break; case oracle: case derby: default: assertLockTestSQLs(Select + tableLfName + Where + ForUpdate); ," StringBuilder builder = new StringBuilder(); builder.append( getClass().getSimpleName() ).append( ""["" ); boolean first = true; for( Side side : Side.values() ){ if( first ){ first = false; "
1," super.onCreate(icicle); getPreferenceManager().setSharedPreferencesName(SHARED_PREFS_NAME); addPreferencesFromResource(R.xml.other_preferences); mCopyDb = findPreference(""preferences_copy_db""); "," super.onCreate(icicle); getPreferenceManager().setSharedPreferencesName(SHARED_PREFS_NAME); addPreferencesFromResource(R.xml.other_preferences); mCopyDb = findPreference(""preferences_copy_db""); "
1, if ((obj != null) && (obj instanceof Location)) { Location other = (Location)obj; return (method().equals(other.method())) && (codeIndex() == other.codeIndex()) && super.equals(obj); , if ((obj != null) && (obj instanceof Location)) { Location XXXXX = (Location)obj; return (method().equals(XXXXX.method())) && (codeIndex() == XXXXX.codeIndex()) && super.equals(obj); 
0," StackedBarRenderer r1 = new StackedBarRenderer(); StackedBarRenderer r2 = new StackedBarRenderer(); assertTrue(r1.equals(r2)); int h1 = r1.hashCode(); int h2 = r2.hashCode(); assertEquals(h1, h2); "," ContentValues values = new ContentValues(); values.put(NoteColumns.GTASK_ID, """"); values.put(NoteColumns.SYNC_ID, 0); getContentResolver().update(Notes.CONTENT_NOTE_URI, values, null, null); "
1," super("""", Messages.ModifyWizardPage_texttransformations, null); setTitle(Messages.ModifyWizardPage_texttransformations); setMessage(Messages.ModifyWizardPage_hint1); predefinedData.setUnmodified(); "," super("""", Messages.ModifyWizardPage_texttransformations, null); setTitle(Messages.ModifyWizardPage_texttransformations); setMessage(Messages.ModifyWizardPage_hint1); predefinedData.setUnmodified(); "
1," Date latestObsDate = null; List<Obs> obsList = getMatchingObs(person, concept, value, null, null, null); if (obsList.size() > 0) { latestObsDate = obsList.get(0).getObsDatetime(); "," Date XXXXX = null; List<Obs> obsList = getMatchingObs(person, concept, value, null, null, null); if (obsList.size() > 0) { XXXXX = obsList.get(0).getObsDatetime(); "
1, LOG.assertTrue(ChildRole.isUnique(role)); switch (role) { default: return null; case ChildRole.REFERENCE_NAME: if (getChildRole(getLastChildNode()) == role) { return getLastChildNode(); , LOG.assertTrue(ChildRole.isUnique(role)); switch (role) { default: return null; case ChildRole.REFERENCE_NAME: if (getChildRole(getLastChildNode()) == role) { return getLastChildNode(); 
1, PackageDeclaration x1 = this.ast.newPackageDeclaration(); if (this.ast.apiLevel() >= JLS3_INTERNAL) { x1.setJavadoc(this.JD1); x1.annotations().add(this.ANO1); x1.annotations().add(this.ANO2); , PackageDeclaration XXXXX = this.ast.newPackageDeclaration(); if (this.ast.apiLevel() >= JLS3_INTERNAL) { XXXXX.setJavadoc(this.JD1); XXXXX.annotations().add(this.ANO1); XXXXX.annotations().add(this.ANO2); 
0, return currentPixelX >= 0 && currentPixelX < baseImageLayer.getImage( currentLevel).getWidth() && currentPixelY >= 0 && currentPixelY < baseImageLayer.getImage(currentLevel).getHeight(); ," return String.format( ""All %s (this user will have access in this role for all %s, including new ones as they are created)"", scopeType.getPluralName(), scopeType.getPluralName()); "
0," switch (dataFormat.getTypeFor(mediaType)) { case XML: return new XMLSource(stream); case TEXT: return new TextualSource(stream); default: throw new IllegalStateException(""Unsupported data format!""); "," for (int i = -1; ; i++) { String prefix = ""/terrain/sky"" + worldType + ""/sky"" + (i < 0 ? """" : """" + i); Layer layer = Layer.create(prefix); if (layer == null) { if (i > 0) { break; "
1," try { sourceLoader.join(); SwingUtilities.invokeLater(new Runnable() { @Override public void run() { CharacterManager.openParty(pcpFile, PCGenFrame.this, currentDataSetRef.getReference()); "," try { sourceLoader.join(); SwingUtilities.invokeLater(new Runnable() { @Override public void run() { CharacterManager.openParty(pcpFile, PCGenFrame.this, currentDataSetRef.getReference()); "
1," transport = new StompTransportFilter(transport, format, brokerContext); IntrospectionSupport.setProperties(transport, options); return super.compositeConfigure(transport, format, options); "," transport = new StompTransportFilter(transport, format, brokerContext); IntrospectionSupport.setProperties(transport, options); return super.compositeConfigure(transport, format, options); "
1," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; "," EditorCell XXXXX = null; XXXXX = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, XXXXX, editorContext); return XXXXX; "
1, final int prime = 31; int result = 1; result = prime * result + ((name == null) ? 0 : name.hashCode()); result = prime * result + ((value == null) ? 0 : value.hashCode()); return result; , final int XXXXX = 31; int XXXXX = 1; XXXXX = XXXXX * XXXXX + ((name == null) ? 0 : name.hashCode()); XXXXX = XXXXX * XXXXX + ((value == null) ? 0 : value.hashCode()); return XXXXX; 
0, boolean changed = false; for (int i = 0; i < keys.length; i++) { long k = keys[i]; if (k != NULL && k != REMOVED && !c.contains(k)) { keys[i] = REMOVED; numEntries--; changed = true; ," tag = HTML.Tag.INPUT; assertEquals(""input"", tag.toString()); assertFalse(""breaks Flow"", tag.breaksFlow()); assertFalse(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); "
1," super(); this.logger = logger; this.component = component; this.channel = channel; this.requestProcessors = new HashMap<String, RequestProcessor>(); this.initRequestProcessors(); "," super(); this.logger = logger; this.component = component; this.channel = channel; this.requestProcessors = new HashMap<String, RequestProcessor>(); this.initRequestProcessors(); "
1," ChallengeRating cr = raceFacet.get(id).getSafe( ObjectKey.CHALLENGE_RATING); final float raceCR = formulaResolvingFacet.resolve(id, cr.getRating(), """") .floatValue(); return raceCR; "," ChallengeRating XXXXX = raceFacet.get(id).getSafe( ObjectKey.CHALLENGE_RATING); final float XXXXX = formulaResolvingFacet.resolve(id, XXXXX.getRating(), """") .floatValue(); return XXXXX; "
1," final Session session = SessionManager.getSessionFactory().getCurrentSession(); final DaoMember theMember = new DaoMember(login, password, salt, email, locale); try { session.save(theMember); "," final Session XXXXX = SessionManager.getSessionFactory().getCurrentSession(); final DaoMember XXXXX = new DaoMember(login, password, salt, email, locale); try { XXXXX.save(XXXXX); "
0, if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; final IntegerContainer that = (IntegerContainer) o; if (value != that.value) return false; return true; ," Configuration config = ConfigurationBuilder.begin() .addRule() .when(new HttpCondition() { @Override public boolean evaluateHttp(HttpServletRewrite event, EvaluationContext context) { return false; "
0, if (m_custom == null) { Object extension = getComponent().getParent().getExtension(); if (extension instanceof ComponentExtension) { return ((ComponentExtension)extension).getContainingCustom(); , filtersEnabled = enableFilters; if (enableFilters) { getShowAllGemsButton().setVisible(true); getShowLikelyGemsButton().setVisible(true); getShowBestGemsButton().setVisible(true); 
0," this.age = age; this.entry = TestInternalCacheEntryFactory.create( ""internalkey-"" + key, ""internalvalue-"" + age, (age * 17)); this.key = new Key(key, false); this.uuid = UUID.randomUUID(); ", controller.getRenderer().getRendererModel().setZoomFactor(controller.getRenderer().getRendererModel().getZoomFactor() * (1 + velocity.getDeltaY() / 1000d)); controller.refreshView(); 
1," NameEnabledEditor parentEditor = this.parentEditor; DomainEditor dialog = null; try { dialog = DomainEditorFactory.getInstance().createDomainEditorWithParent(Names.class, this, false); "," NameEnabledEditor XXXXX = this.XXXXX; DomainEditor XXXXX = null; try { XXXXX = DomainEditorFactory.getInstance().createDomainEditorWithParent(Names.class, this, false); "
0, int manifestVersion = BundlePluginBase.getBundleManifestVersion(bundle); return (manifestVersion < 2) ? ICoreConstants.PACKAGE_SPECIFICATION_VERSION : Constants.VERSION_ATTRIBUTE; ," if (isOpaque() && getBorder() != null) { Rectangle tempRect = new Rectangle(getBounds()); tempRect.crop(getBorder().getInsets(this)); graphics.fillRoundRectangle(tempRect, corner, corner); return; "
0," for (final ASTNode treeElement : change.getAffectedChildren()) { final ChangeInfo changeByChild = change.getChangeByChild(treeElement); processElementaryChange(changeByChild, treeElement); "," if (heading == null || pitch == null) { String message = Logging.getMessage(""nullValue.AngleIsNull""); Logging.logger().severe(message); throw new IllegalArgumentException(message); "
0," String result = actions; if (result == null) { StringBuffer sb = new StringBuffer(); int mask = action_mask; if ((mask & ACTION_EXECUTE) == ACTION_EXECUTE) { sb.append(EXECUTE); sb.append(','); "," TreeMap<Integer, Long> treeMap; synchronized (myLock) { treeMap = myCache.get(new HistoryCacheWithRevisionKey(VcsContextFactory.SERVICE.getInstance().createFilePathOn(vf), vcsKey, number)); "
1," final String childsTerm = (String) map.get(clause.getFirstClause()); if (childsTerm != null && childsTerm.length() > 0) { sb.append(""NOT ""); clause.getFirstClause().accept(this); "," final String XXXXX = (String) map.get(clause.getFirstClause()); if (XXXXX != null && XXXXX.length() > 0) { sb.append(""NOT ""); clause.getFirstClause().accept(this); "
1, ObjectIdentityHibernate objectId = new ObjectIdentityHibernate(); assertNull(objectId.getIdentifier()); objectId.setIdentifier(10l); assertTrue(objectId.getIdentifier().equals(10l)); , ObjectIdentityHibernate XXXXX = new ObjectIdentityHibernate(); assertNull(XXXXX.getIdentifier()); XXXXX.setIdentifier(10l); assertTrue(XXXXX.getIdentifier().equals(10l)); 
1, Friend friend = connection.getFriend(StringUtils.parseBareAddress(from)); if (friend != null) { FriendPresence presence = friend.getPresences().get(from); if (presence != null) { return presence; , Friend XXXXX = connection.getFriend(StringUtils.parseBareAddress(from)); if (XXXXX != null) { FriendPresence XXXXX = XXXXX.getPresences().get(from); if (XXXXX != null) { return XXXXX; 
0," List<ClientBO> clients = this.customerDao.findActiveClientsUnderParent(searchId, branchId); if (clients.isEmpty()) { throw new BusinessRuleException(LoanConstants.NOSEARCHRESULTS); ", int count = 0; int len = msg.length(); int idx = startpos; if (idx < len) { char ch = msg.charAt(idx); while (isDigit(ch) && idx < len) { count++; idx++; if (idx < len) { ch = msg.charAt(idx); 
1," int length = command.length(); int i = length - CDC_LENGTH; return i == 0 || i > 0 && isDirectorySeparator(command.charAt(i - 1)) && command.regionMatches(true, i, COMMAND_DOT_COM, 0, CDC_LENGTH); "," XXXXXnt XXXXX = command.XXXXX(); XXXXXnt XXXXX = XXXXX - CDC_LENGTH; return XXXXX == 0 || XXXXX > 0 && XXXXXsDXXXXXrectorySeparator(command.charAt(XXXXX - 1)) && command.regXXXXXonMatches(true, XXXXX, COMMAND_DOT_COM, 0, CDC_LENGTH); "
1," VMInstanceVO vm = _vmMgr.findById(vmId); if(vm == null) { s_logger.warn(""VM "" + vmId + "" does not exist, sending blank response for console access request""); sendResponse(resp, """"); return; "," VMInstanceVO XXXXX = _XXXXXMgr.findById(XXXXXId); if(XXXXX == null) { s_logger.warn(""VM "" + XXXXXId + "" does not exist, sending blank response for console access request""); sendResponse(resp, """"); return; "
1," String oldClass = class_; class_ = newClass; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, XhtmlPackage.XHTML_H2_TYPE__CLASS, oldClass, class_)); "," String XXXXX = class_; class_ = newClass; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, XhtmlPackage.XHTML_H2_TYPE__CLASS, XXXXX, class_)); "
1, super.assertNullTS(JARQUE_BERA); super.assertEmptyTS(JARQUE_BERA); assertTrue(JARQUE_BERA.evaluate(RANDOM)); assertFalse(JARQUE_BERA.evaluate(SIGNAL)); assertFalse(JARQUE_BERA.evaluate(INCREASING)); , super.assertNullTS(JARQUE_BERA); super.assertEmptyTS(JARQUE_BERA); assertTrue(JARQUE_BERA.evaluate(RANDOM)); assertFalse(JARQUE_BERA.evaluate(SIGNAL)); assertFalse(JARQUE_BERA.evaluate(INCREASING)); 
1, if (getProvideMembers()) { if (element instanceof CompilationUnit) { try { if (element instanceof CompilationUnit) { CompilationUnit cu = (CompilationUnit) element; return cu.getTypes().length > 0; , if (getProvideMembers()) { if (element instanceof CompilationUnit) { try { if (element instanceof CompilationUnit) { CompilationUnit XXXXX = (CompilationUnit) element; return XXXXX.getTypes().length > 0; 
0, context.checking(new Expectations() { { allowing(actionContext).getParams(); will(returnValue(id)); allowing(findById).execute(with(any(FindByIdRequest.class))); will(returnValue(group)); ," double OptionPrice = 0; if (optionType.equalsIgnoreCase(""European Call"") || optionType.equalsIgnoreCase(""European Put"")) { OptionPrice = FinMath.BlackPrice(optionType, S, X, r, d, s, t); "
0," try { for (int i = 0; i < 128; i++) { IncomingTransferObject ito = serverQueue.take(); assertTrue("""" + i, Arrays.equals(getTestArray(i), ito.accept(SubMonitor .convert(new NullProgressMonitor())))); "," if (_luceneIndexThreadPoolExecutor != null) { _luceneIndexThreadPoolExecutor.shutdownNow(); try { _luceneIndexThreadPoolExecutor.awaitTermination( 60, java.util.concurrent.TimeUnit.SECONDS); "
0, this.gaSelector = gaSelector; this.crossoverOp = crossoverOperator; this.mutationOp = mutationOperator; this.gaActivationAge = gaActivationAge; this.crossoverRate = crossoverRate; this.myLcs = lcs; ," IProject project = getConfiguration().getProjectDescription().getProject(); return CProjectDescriptionManager.getInstance().findLanguagSettingForFile(fileName, project, getLanguageSettings()); "
1, switch(item.getItemId()) { case DELETE_ID: AdapterContextMenuInfo info = (AdapterContextMenuInfo) item.getMenuInfo(); mDbHelper.deleteAnthologyTitle(info.id); fillAnthology(); return true; , switch(item.getItemId()) { case DELETE_ID: AdapterContextMenuInfo XXXXX = (AdapterContextMenuInfo) item.getMenuInfo(); mDbHelper.deleteAnthologyTitle(XXXXX.id); fillAnthology(); return true; 
0," HumanNPC spawned = NPCManager.get(NPCManager.register(name, at != null ? at : player.getLocation(), player.getName(), NPCCreateReason.COMMAND)); for (String type : toggles) { spawned.addType(type); "," Map<String, Double> deltas = new HashMap<String, Double>(); synchronized (this) { Map<String, Double> gauges = container.gauges(); if(includeJvmStats){ gauges.putAll( getJvmStats() ); "
1," int i = 0; do { i = s.indexOf( sWordToReplace, i ); if ( i != -1 ) { s = s.substring( 0, i ) + sReplaceWith + s.substring( i + sWordToReplace.length( ) ); i += sReplaceWith.length( ); "," XXXXXnt XXXXX = 0; do { XXXXX = s.XXXXXndexOf( sWordToReplace, XXXXX ); XXXXXf ( XXXXX != -1 ) { s = s.substrXXXXXng( 0, XXXXX ) + sReplaceWXXXXXth + s.substrXXXXXng( XXXXX + sWordToReplace.length( ) ); XXXXX += sReplaceWXXXXXth.length( ); "
1," synchronized (dbh) { SQLiteDatabase db = dbh.getReadableDatabase(); try{ PageModel tempPage = dbh.getPageModel(db, page.getId()); if(tempPage != null) { dbh.deletePageModel(db, tempPage); "," synchronized (XXXXXh) { SQLiteDatabase XXXXX = XXXXXh.getReadableDatabase(); try{ PageModel XXXXX = XXXXXh.getPageModel(XXXXX, page.getId()); if(XXXXX != null) { XXXXXh.deletePageModel(XXXXX, XXXXX); "
1," try { AssetFileDescriptor assetFileDescriptor = context.getResources().openRawResourceFd(resid); if (assetFileDescriptor == null) { throw new RuntimeException(""missing audio file""); "," try { AssetFileDescriptor XXXXX = context.getResources().openRawResourceFd(resid); if (XXXXX == null) { throw new RuntimeException(""missing audio file""); "
0," String result; filesize = Math.abs(filesize); if (Math.abs(filesize) < 1024) { result = Messages.get().getBundle(locale).key(Messages.GUI_FILEUTIL_FILESIZE_BYTES_1, new Long(filesize)); ", this.rawEventData = rawEventData; this.session = session; this.byWho = byWho; this.userName = userName; this.hostName = hostName; this.who = who; this.message = message; this.channel = channel; 
1," if (paymentNotifications == null) return null; Map<String, String> data = paymentNotifications.get(paymentNotificationKey); if (data == null) return null; return data.get(dataKey); "," if (paymentNotifications == null) return null; Map<String, String> data = paymentNotifications.get(paymentNotificationKey); if (data == null) return null; return data.get(dataKey); "
0," AnalysisServer server = PackageLibraryManagerProvider.getDefaultAnalysisServer(); if (!server.waitForIdle(120000)) { System.err.println(""Stopped waiting for the analysis server.""); ", _bindingChecked = bindingChecked; setChanged(); if (_bindingChecked != null) { _bindingChecked.setOwner(this); _bindingChecked.setBindingDefinition(getBindingCheckedDefinition()); 
0, SemanticStatus e = STRINGTOENUM.get(s); if (e != null) return e; for (final String dispval : STRINGTOENUM.keySet()) { if (dispval.equalsIgnoreCase(s)) return STRINGTOENUM.get(dispval); ," StringBuilder sb=new StringBuilder(); if(sent_msgs != null) sb.append(sent_msgs).append("", ""); sb.append(""send_conn_id="" + send_conn_id).append("" ("" + age() + "" ms old)""); return sb.toString(); "
0, Parameter param = axisConfiguration.getParameter(CARBON_APPLICATION_CONTEXT_HOLDER); if (param != null && param.getValue() != null) { return (CarbonApplicationContextHolder) param.getValue(); ," QuerySpec qs=new QuerySpec(); qs.setCollection(""OrderService""); qs.setParent(""ServiceResponseTime""); qs.setPredicate(new MVEL( ""serviceType == \""{urn:switchyard-quickstart-demo:orders:0.1.0"
0," Properties properties = new Properties(); Enumeration<MimeEntry> e = elements(); while (e.hasMoreElements()) { MimeEntry entry = e.nextElement(); properties.put(entry.getType(), entry.toProperty()); "," String name = hosts.get( Integer.parseInt( (String) newValue ) ).name; preference.setSummary( String.format( getString( R.string.preferences_hosts_selected_host ), name ) ); return true; "
0," if (someObj instanceof InformationDelegator) { if (DEBUG) Debug.output(""DrawingTool: found InformationDelegator""); if (dtmm != null) { dtmm.setInfoDelegator((InformationDelegator) someObj); "," BatchDeleteAttributesRequest request = new BatchDeleteAttributesRequest() .withDomainName(determineDomainName()) .withItems(determineDeletableItems()); log.trace(""Sending request [{"
1," String osName = System.getProperty(""os.name""); boolean isMac = osName.startsWith(""Mac"") || osName.startsWith(""Darwin""); boolean isWin = osName.startsWith(""Windows""); if (isMac) { return "".dylib""; "," String osName = System.getProperty(""os.name""); boolean isMac = osName.startsWith(""Mac"") || osName.startsWith(""Darwin""); boolean isWin = osName.startsWith(""Windows""); if (isMac) { return "".dylib""; "
0," String toCreate = ""/""; if (pathNodesIdx > 1) { StringBuilder currNodePath = new StringBuilder(); for (int i=1; i<pathNodesIdx; i++) { currNodePath.append(""/""); currNodePath.append(pathNodes[i]); "," return u == Use.NDT && !oneOf(sig, _FILE_BASE_NAME, _FILE_DIR_NAME, _FILE_DIR_SEPARATOR, _FILE_PATH_SEPARATOR, _FILE_PATH_TO_NATIVE, _FILE_PATH_TO_URI, _FILE_RESOLVE_PATH) || super.uses(u); "
1," int offset = getOffsetToAdd(subtrahendInstant); return iField.getDifference (minuendInstant + (iTimeField ? offset : getOffsetToAdd(minuendInstant)), subtrahendInstant + offset); "," int XXXXX = getOffsetToAdd(subtrahendInstant); return iField.getDifference (minuendInstant + (iTimeField ? XXXXX : getOffsetToAdd(minuendInstant)), subtrahendInstant + XXXXX); "
1," SQLiteDatabase mDb = mOpenHelper.getReadableDatabase(); Cursor cursor = mDb.query(FollowTable.TABLE_NAME, FollowTable.TABLE_COLUMNS, FollowTable._ID + ""= ?"", new String[] { userId "," SQLiteDatabase XXXXX = mOpenHelper.getReadableDatabase(); Cursor XXXXX = XXXXX.query(FollowTable.TABLE_NAME, FollowTable.TABLE_COLUMNS, FollowTable._ID + ""= ?"", new String[] { userId "
1, if (getCurrentGenerator() instanceof CustomLinkListGenerator) { String uri = ((CustomLinkListGenerator)getCurrentGenerator()).getCustomLink(entry); if (uri != null) { return uri; , if (getCurrentGenerator() instanceof CustomLinkListGenerator) { String XXXXX = ((CustomLinkListGenerator)getCurrentGenerator()).getCustomLink(entry); if (XXXXX != null) { return XXXXX; 
0," String fullCommand = command + ( SystemUtils.IS_OS_WINDOWS ? "".exe"" : """" ); File exe; if ( SystemUtils.IS_OS_AIX ) { exe = new File( SystemUtils.getJavaHome() + ""/../sh"", fullCommand ); "," DiagnosticDialog.openProblem (shell, GenModelEditPlugin.INSTANCE.getString(""_UI_GenerationProblems_title""), GenModelEditPlugin.INSTANCE.getString(""_UI_GenerationProblems_message""), finalDiagnostic); "
0," GridModelPart gridModel = GridModelPart.from(this.model); Grid g = gridModel.getGridOf(agentName); Agent agent = new GhostAgent(agentName); g.add(agent, new Point(0, 0), Bearing.N); "," String oldSummary = summary; summary = newSummary; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, BuildPackage.BUILD_PLAN__SUMMARY, oldSummary, summary)); "
1," this.loading = loading; ratingsViewFooter.setLayoutParams(new AbsListView.LayoutParams(FrameLayout.LayoutParams.MATCH_PARENT, loading? FrameLayout.LayoutParams.WRAP_CONTENT: 0)); "," this.loading = loading; ratingsViewFooter.setLayoutParams(new AbsListView.LayoutParams(FrameLayout.LayoutParams.MATCH_PARENT, loading? FrameLayout.LayoutParams.WRAP_CONTENT: 0)); "
1," final String absViRepositoryPath = folder + '/' + viPath; Boolean deleted = new File(absViRepositoryPath.substring(0, absViRepositoryPath.lastIndexOf('/'))) .delete(); Assert.assertTrue(deleted); "," final String XXXXX = folder + '/' + viPath; Boolean XXXXX = new File(XXXXX.substring(0, XXXXX.lastIndexOf('/'))) .delete(); Assert.assertTrue(XXXXX); "
1," HLAfixedRecord data = this.encoderFactory.createHLAfixedRecord(); this.addTestFieldsToRecord( data, false ); try { data.get( 3 ); expectedException( IndexOutOfBoundsException.class ); "," HLAfixedRecord XXXXX = this.encoderFactory.createHLAfixedRecord(); this.addTestFieldsToRecord( XXXXX, false ); try { XXXXX.get( 3 ); expectedException( IndexOutOfBoundsException.class ); "
1," ArrayList headers = null; AxisService axisService = msgContext.getAxisService(); if (log.isDebugEnabled()) { log.debug(""Building list of understood headers for all operations under "" + axisService); "," ArrayList XXXXX = null; AxisService XXXXX = msgContext.getAxisService(); if (log.isDebugEnabled()) { log.debug(""Building list of understood XXXXX for all operations under "" + XXXXX); "
1, try { Integer i = new Integer(state); if(i.equals(REBUILD_STATE)) return REBUILD_STATE; if(i.equals(REMOVED_STATE)) return REMOVED_STATE; if(i.equals(NONE_STATE)) return NONE_STATE; , try { Integer XXXXX = new Integer(state); XXXXXf(XXXXX.equals(REBUILD_STATE)) return REBUILD_STATE; XXXXXf(XXXXX.equals(REMOVED_STATE)) return REMOVED_STATE; XXXXXf(XXXXX.equals(NONE_STATE)) return NONE_STATE; 
1, switch ( featureID ) { case AttributePackage.ACCESSIBILITY_VALUE__TEXT : return getText( ); case AttributePackage.ACCESSIBILITY_VALUE__ACCESSIBILITY : return getAccessibility( ); , switch ( featureID ) { case AttributePackage.ACCESSIBILITY_VALUE__TEXT : return getText( ); case AttributePackage.ACCESSIBILITY_VALUE__ACCESSIBILITY : return getAccessibility( ); 
0, try { MarkupLanguageConfiguration copy = (MarkupLanguageConfiguration) super.clone(); copy.blocks = new ArrayList<Block>(blocks.size()); for (Block block : blocks) { copy.blocks.add(block.clone()); , getBean().setMobile(mobile); if (mover!=null && point!=null) { mover.setActive(mobile); if (mobile) point.setCursor(Draw2DUtils.getRoiControlPointCursor()) ; else point.setCursor(null) ; 
1," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," EditorCell XXXXX = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, XXXXX, editorContext); return XXXXX; "
0," log.info(""Run ""+r.getEventObject().getRunId()+"" completed""); for (ResponderService responder : getResponderServices()) { if (responder.respondsTo(r)) { responder.generateResponse(r); "," return new ArchivaDavResource( file.getAbsolutePath(), logicalPath, repository, session, resourceLocator, resourceFactory, mimeTypes, Collections.<AuditListener> emptyList(), null ); "
1, if (this == o) return true; else if (! (o instanceof ObjectValueExpression)) return false; ObjectValueExpression expr = (ObjectValueExpression) o; return _expr.equals(expr._expr); , if (this == o) return true; else if (! (o instanceof ObjectValueExpression)) return false; ObjectValueExpression XXXXX = (ObjectValueExpression) o; return _XXXXX.equals(XXXXX._XXXXX); 
0, if (model.isReady()) { int y = ToolBox.getInt(jTextFieldOffsetY.getText()); if ( y < 0 || y > model.getSubPic().getHeight() /3 ) { jTextFieldOffsetY.setBackground(ERROR_BACKGROUND); , final PsiElement element = rncDefine.getPsiElement(); return element != null ? new PsiElementResolveResult(element) : new ResolveResult() { @Nullable public PsiElement getElement() { return null; 
0," SPARCArgument link = new SPARCArgument(0, false); return (JavaCallWrapper) VMObjectFactory.newObject(JavaCallWrapper.class, getSP().getAddressAt(link.asIn().asRegister().spOffsetInSavedWindow())); "," paramNameTextBox.setValue(""""); paramValueTextBox.setValue(""""); importDialogModel.setSelectedAnalysisParameter(-1); analysisParametersTree.clearSelection(); analysisParametersDialog.hide(); "
1, this.activeFile = activeFile; this.activeProject = activeFile.getProject(); workspaceRoot = this.activeFile.getWorkspace().getRoot(); this.activeFileContent = getFileContent(getActiveFileName()); , this.activeFile = activeFile; this.activeProject = activeFile.getProject(); workspaceRoot = this.activeFile.getWorkspace().getRoot(); this.activeFileContent = getFileContent(getActiveFileName()); 
1," final int actual = crs.getCoordinateSystem().getDimension(); if (actual != expected) { throw new IllegalArgumentException(Errors.format( ErrorKeys.MISMATCHED_DIMENSION_$3, name, actual, expected)); "," final int XXXXX = crs.getCoordinateSystem().getDimension(); if (XXXXX != expected) { throw new IllegalArgumentException(Errors.format( ErrorKeys.MISMATCHED_DIMENSION_$3, name, XXXXX, expected)); "
1," Exchange e = getEndpoint().createExchange(); ZooKeeperMessage in = new ZooKeeperMessage(path, result.getStatistics()); e.setIn(in); if (result.isOk()) { in.setBody(result.getResult()); "," Exchange e = getEndpoint().createExchange(); ZooKeeperMessage in = new ZooKeeperMessage(path, result.getStatistics()); e.setIn(in); if (result.isOk()) { in.setBody(result.getResult()); "
1, if (current.eResource() != null && current.eResource().getResourceSet() != null) this.resourceSet = current.eResource().getResourceSet(); flatreferencetableOptionalProperty.setInput(settings); , if (current.eResource() != null && current.eResource().getResourceSet() != null) this.resourceSet = current.eResource().getResourceSet(); flatreferencetableOptionalProperty.setInput(settings); 
1, int slider; float f; f = (float) (currentSize.width - 3) / (float) bands; slider = (int) ((x - 2) / f); if( (slider < 0) || (slider >= bands) ) { if( currentSlider == -1 ) return; , int slider; float f; f = (float) (currentSize.width - 3) / (float) bands; slider = (int) ((x - 2) / f); if( (slider < 0) || (slider >= bands) ) { if( currentSlider == -1 ) return; 
1, TestSuite testSuite = new TestSuite(); testSuite.addTest(ActivitiesTests.suite()); testSuite.addTest(RelationTests.suite()); testSuite.addTest(RequestTests.suite()); return testSuite; , TestSuite XXXXX = new TestSuite(); XXXXX.addTest(ActivitiesTests.suite()); XXXXX.addTest(RelationTests.suite()); XXXXX.addTest(RequestTests.suite()); return XXXXX; 
1," String oldFilter = filter; filter = newFilter; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_POLYLINE_ELEMENT__FILTER, oldFilter, filter)); "," String XXXXX = filter; filter = newFilter; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_POLYLINE_ELEMENT__FILTER, XXXXX, filter)); "
1, ReplyEnvelope resultEnvelope = requestSender.send(new AddServerConnectionCommand(portNo)); resultEnvelope.checkForRuntimeException(); return (ConnectionID) resultEnvelope.getContents(); , ReplyEnvelope XXXXX = requestSender.send(new AddServerConnectionCommand(portNo)); XXXXX.checkForRuntimeException(); return (ConnectionID) XXXXX.getContents(); 
1," int hour = Integer.parseInt(startHour); if (startAmPm.equalsIgnoreCase(""PM"") && hour != 12) hour += 12; if (startAmPm.equalsIgnoreCase(""AM"") && hour == 12) hour -= 12; return hour; "," int XXXXX = Integer.parseInt(startHour); if (startAmPm.equalsIgnoreCase(""PM"") && XXXXX != 12) XXXXX += 12; if (startAmPm.equalsIgnoreCase(""AM"") && XXXXX == 12) XXXXX -= 12; return XXXXX; "
0, Project project = e.getData(PlatformDataKeys.PROJECT); if (ChangeListManager.getInstance(project).isFreezedWithNotification(null)) return; IgnoredSettingsDialog.configure(project); ," int first = s.indexOf(','); if (first == -1) return; int second = s.indexOf(',', first + 1); if (second == -1) return; String message = s.substring(second + 1); Log.i(""openvpn"", message); "
0," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (any: ""); result.append(any); result.append(')'); return result.toString(); "," final String lengthString = xml.getAttributeValue(null, ATTRIBUTE_LENGTH); if (lengthString != null) { final int length = Integer.parseInt(lengthString); comic.setLength(length); "
1," String oldTitle = title; title = newTitle; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, XhtmlPackage.XHTML_H2_TYPE__TITLE, oldTitle, title)); "," String XXXXX = title; title = newTitle; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, XhtmlPackage.XHTML_H2_TYPE__TITLE, XXXXX, title)); "
0," ParamCheck.notNull( context, ""context"" ); if( getContextInternal() != null ) { String msg = ""Current thread has already a context instance buffered.""; throw new IllegalStateException( msg ); "," PsiType returnType = returnTypeIfFail ? type: null; if (type instanceof GrClosureType) { returnType = GrClosureSignatureUtil.getReturnType(((GrClosureType)type).getSignature(), callExpression); "
1," boolean hasSlash = value.endsWith(""/"") || value.endsWith(File.separator); if (hasSlash == slash) return value; if (hasSlash) return value.substring(0, value.length() - 1); return value + ""/""; "," boolean XXXXX = value.endsWith(""/"") || value.endsWith(File.separator); if (XXXXX == slash) return value; if (XXXXX) return value.substring(0, value.length() - 1); return value + ""/""; "
0, if(mChunkPairsIter != null && mChunkPairsIter.hasNext()) { ContextPatternWritable c = mChunkPairsIter.next(); pair.setContext(c.getContext()); pair.setPattern(c.getPattern()); return true; ," log.info(""Run ""+r.getEventObject().getRunId()+"" qc added""); for (ResponderService responder : getResponderServices()) { if (responder.respondsTo(r)) { responder.generateResponse(r); "
1," mainLayout.setWidth100(); mainLayout.setHeight100(); mainLayout.addMember(new NavigationTree(this)); viewLayout.setWidth(""70%""); mainLayout.addMember(viewLayout); mainLayout.draw(); "," mainLayout.setWidth100(); mainLayout.setHeight100(); mainLayout.addMember(new NavigationTree(this)); viewLayout.setWidth(""70%""); mainLayout.addMember(viewLayout); mainLayout.draw(); "
0, WaitActivity waitDef = (WaitActivity)src; OWait owait = (OWait)output; if (waitDef.getFor() != null && waitDef.getUntil() == null) { owait.forExpression = _context.compileExpr(waitDef.getFor()); ," StringBuilder b = new StringBuilder(); Class[] args = method.getExceptionTypes(); for (int i = 0; i < args.length; i++) { b.append(rmic.name(args[i])); if (i < args.length - 1) b.append("", ""); "
0," if(sectionUuid == null || isNotValidated()) { String sectionUuidFromParam = JsfUtil.getStringFromParam(""sectionUuid""); if(sectionUuidFromParam != null) { sectionUuid = sectionUuidFromParam; ", double size = defaultValue; try { size = Double.parseDouble(textBox.getText().trim()); if (size < kMimimumSize) size = defaultValue; else if (size > kMaximumSize) size = defaultValue; 
0," return MessageDialog.openConfirm( PlatformUI.getWorkbench().getActiveWorkbenchWindow().getShell(), Messages.get().COMPOSITE_RESTART_DIALOG_TITLE, Messages.get().COMPOSITE_RESTART_CONFIRM_MESSAGE); ", RangeSliderModel newModel = new RangeSliderModel(positions); newModel.firstPosition = firstPosition; newModel.secondPosition = secondPosition; newModel.colors = colors; return newModel; 
0," StringBuilder buffer = new StringBuilder(""<html><body>""); for (Statistics s : statisticsManager.getStatistics()) { String report = statisticsManager.getRenderer(s).render(s); buffer.append(report); "," if (mIsAccessibilityEnabled && mIsTouchExplorationEnabled) { if (!mHasInputFilter) { mHasInputFilter = true; if (mInputFilter == null) { mInputFilter = new AccessibilityInputFilter(mContext, this); "
1," this.content = content; this.result = content; ConversionUtils.convertManagedOperationResults(managedOperation, content, operationResult.getComplexResults(), operationDefinition); "," this.content = content; this.result = content; ConversionUtils.convertManagedOperationResults(managedOperation, content, operationResult.getComplexResults(), operationDefinition); "
1, if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; ArtistPk artistPk = (ArtistPk) o; return id.equals(artistPk.id) && name.equals(artistPk.name); , if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; ArtistPk artistPk = (ArtistPk) o; return id.equals(artistPk.id) && name.equals(artistPk.name); 
1, IWorkbenchPage page= window.getActivePage(); try { RemoteCHViewPart result= (RemoteCHViewPart)page.showView(UIPlugin.CALL_HIERARCHY_VIEW_ID); result.setInput(input); return result; , IWorkbenchPage page= window.getActivePage(); try { RemoteCHViewPart result= (RemoteCHViewPart)page.showView(UIPlugin.CALL_HIERARCHY_VIEW_ID); result.setInput(input); return result; 
0," mGradientState.setStroke(width, color, dashWidth, dashGap); if (mStrokePaint == null) { mStrokePaint = new Paint(Paint.ANTI_ALIAS_FLAG); mStrokePaint.setStyle(Paint.Style.STROKE); "," factory = new ScriptEngineManager(); engine = factory.getEngineByName(""JavaScript""); RhythmFacade apiBindings = new RhythmFacade(rw); engine.put(""RhythmWheels"", apiBindings); s = this; "
1," super(""XML Connector Settings"", ""Specify a directory"", taskRepository); setNeedsAnonymousLogin(true); setNeedsAdvanced(false); setNeedsEncoding(false); setNeedsHttpAuth(false); setNeedsProxy(false); "," super(""XML Connector Settings"", ""Specify a directory"", taskRepository); setNeedsAnonymousLogin(true); setNeedsAdvanced(false); setNeedsEncoding(false); setNeedsHttpAuth(false); setNeedsProxy(false); "
0, StringBuilder buff = new StringBuilder(); buff.append(m.getReturnType()).append(' '); buff.append(m.getName()); for (Class<?> p : m.getParameterTypes()) { buff.append(' '); buff.append(p.getName()); ," tag = HTML.Tag.P; assertEquals(""p"", tag.toString()); assertTrue(""breaks Flow"", tag.breaksFlow()); assertTrue(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); "
0," this._timestamp = -1; this._responseTime = -1; this._totalResponseTime = -1; this._numObservations = -1; this._operationName = """"; this._operationRequest = """"; this._generatedDuring = """"; "," try { prepareStatement(UserSQL.findByCreditCard); cachedResults.setString(1, number); cachedResults.setInt(2, entityId.intValue()); execute(); conn.close(); return cachedResults; "
0," super(code.getMethod(), null); SSIToSSA ssi2ssa = new SSIToSSA(code, qf); quads = ssi2ssa.rootQuad; setDerivation(ssi2ssa.derivation); setAllocationInformation(ssi2ssa.allocInfo); ", switch (what) { case REFRESH_TIME: updateTimes(); break; case REFRESH_DATA: refreshUi(false); updateTimes(); break; case REFRESH_STRUCTURE: refreshUi(true); updateTimes(); break; 
1," tvXdt.setText(String.format(""%.2f"", dist[0])); tvYdt.setText(String.format(""%.2f"", dist[1])); tvZdt.setText(String.format(""%.2f"", dist[2])); tvTdt.setText(String.format(""%.2f"", totalDist)); "," tvXdt.setText(String.format(""%.2f"", dist[0])); tvYdt.setText(String.format(""%.2f"", dist[1])); tvZdt.setText(String.format(""%.2f"", dist[2])); tvTdt.setText(String.format(""%.2f"", totalDist)); "
0," HttpSession session = (HttpSession) FacesContext.getCurrentInstance() .getExternalContext().getSession(true); session.setAttribute(""javax.faces.PARTIAL_STATE_SAVING"", ""false""); return ""index.xhtml""; ", StringBuilder query = new StringBuilder(); for (Clause keyClause : getContext().getTransformedTerms().keySet()) { query.append(getContext().getTransformedTerms().get(keyClause)); 
0," float seconds = (float) milliSeconds / 1000; DecimalFormat df = new DecimalFormat(""0.#""); String time = df.format(seconds) + getResources().getString(R.string.led_time_seconds); return time; ", switch (value) { case WHO_VALUE: return WHO; case WHAT_VALUE: return WHAT; case WHERE_VALUE: return WHERE; case WHEN_VALUE: return WHEN; case WHY_VALUE: return WHY; case HOW_VALUE: return HOW; 
0, PointPlacement pointp = new PointPlacementImpl(filterFactory); pointp.setAnchorPoint(anchorPoint); pointp.setDisplacement(displacement); pointp.setRotation(rotation); return pointp; ," PHtmlView html = new PHtmlView(); assertEquals(null, html.getText()); assertEquals(PHtmlView.DEFAULT_FONT, html.getFont()); assertEquals(PHtmlView.DEFAULT_TEXT_COLOR, html.getTextColor()); "
1," ArrayList<Table> tables = mTables; int tableCount = tables.size(); for (int i = 0; i < tableCount; i++) { Table t = tables.get(i); if (t.isBackup()){ mCore.getDB().delete(t.getName(), null, null); "," ArrayLXXXXXsXXXXX<Table> XXXXXables = mTables; XXXXXnXXXXX XXXXX = XXXXXables.sXXXXXze(); for (XXXXXnXXXXX XXXXX = 0; XXXXX < XXXXX; XXXXX++) { Table XXXXX = XXXXXables.geXXXXX(XXXXX); XXXXXf (XXXXX.XXXXXsBackup()){ mCore.geXXXXXDB().deleXXXXXe(XXXXX.geXXXXXName(), null, null); "
0, if (android.os.Environment.getExternalStorageState().equals(android.os.Environment.MEDIA_MOUNTED)) { if (isRecording) { mRecorder.stop(); mRecorder.release(); isRecording = false; ," Validator validator = null; boolean includeFiles = true; String scheme = cmd.getOptionValue(""s""); if (scheme.equalsIgnoreCase(""zoomify"")) { validator = new ZoomifyValidator(); includeFiles = false; "
1," StringBuilder sb = new StringBuilder(""<map-to-map ""); sb.append(""map=\"""").append(this.mapFma).append(""\"" ""); if (!toMapFma.isEmpty()) { sb.append(""to-map=\"""").append(this.toMapFma).append(""\"" ""); "," StringBuilder XXXXX = new StringBuilder(""<map-to-map ""); XXXXX.append(""map=\"""").append(this.mapFma).append(""\"" ""); if (!toMapFma.isEmpty()) { XXXXX.append(""to-map=\"""").append(this.toMapFma).append(""\"" ""); "
0, SMTestProxy testProxy = getProxyToFinish(testFinishedEvent); if (testProxy != null) { testProxy.setDuration(testFinishedEvent.getDuration()); testProxy.setFinished(); fireOnTestFinished(testProxy); , IWorkbenchPage page= window.getActivePage(); try { TypeHierarchyViewPart result= (TypeHierarchyViewPart) page.findView(RubyUI.ID_TYPE_HIERARCHY); if (result != null) { result.clearNeededRefresh(); 
1, switch ( command ) { case ADD : for ( int i = 0; i < bpListeners.size( ); i++ ) { VMBreakPointListener bpListener = (VMBreakPointListener) bpListeners.get( i ); bpListener.breakPointAdded( bp ); , swXXXXXtch ( command ) { case ADD : for ( XXXXXnt XXXXX = 0; XXXXX < bpLXXXXXsteners.sXXXXXze( ); XXXXX++ ) { VMBreakPoXXXXXntLXXXXXstener bpLXXXXXstener = (VMBreakPoXXXXXntLXXXXXstener) bpLXXXXXsteners.get( XXXXX ); bpLXXXXXstener.breakPoXXXXXntAdded( bp ); 
1, super.outputT[super.sampLen-1] = this.kp*super.inputT[sampLen-1]; super.outputT[super.sampLen-1] += this.kd*(super.inputT[super.sampLen-1]-super.inputT[super.sampLen-2])/super.deltaT; , super.outputT[super.sampLen-1] = this.kp*super.inputT[sampLen-1]; super.outputT[super.sampLen-1] += this.kd*(super.inputT[super.sampLen-1]-super.inputT[super.sampLen-2])/super.deltaT; 
0, if (numSpaces > 0) { int currentPosition= scanner.getCurrentPosition(); StringBuilder spaces = new StringBuilder(numSpaces); for (int i = 0; i < numSpaces; i++) { spaces.append(' '); ," if (!SIMPLE_TYPE_MAPPING.containsKey(jdbcType)) throw new UnsupportedOperationException(""TODO implement edmtype conversion for jdbc type: "" + jdbcType); return SIMPLE_TYPE_MAPPING.get(jdbcType); "
1," if (mWebsite != null) { boolean emailComments = WebloggerRuntimeConfig.getBooleanProperty(""users.comments.emailnotify""); return (mWebsite.getEmailComments().booleanValue() && emailComments); "," if (mWebsite != null) { boolean XXXXX = WebloggerRuntimeConfig.getBooleanProperty(""users.comments.emailnotify""); return (mWebsite.getEmailComments().booleanValue() && XXXXX); "
1," if(this.headerTable!=null) { this.adminTitle = new Text(title+""&nbsp;&nbsp;""); this.adminTitle.setFontColor(""#FFFFFF""); this.titleIsSet = true; this.headerTable.add(this.adminTitle,2,1); "," if(this.headerTable!=null) { this.adminTitle = new Text(title+""&nbsp;&nbsp;""); this.adminTitle.setFontColor(""#FFFFFF""); this.titleIsSet = true; this.headerTable.add(this.adminTitle,2,1); "
1," String deviceName = cmd.getDeviceType(); if (!deviceName.equalsIgnoreCase(NetworkDevice.JuniperSRXFirewall.getName())) { throw new InvalidParameterValueException(""Invalid SRX firewall device type""); "," String XXXXX = cmd.getDeviceType(); if (!XXXXX.equalsIgnoreCase(NetworkDevice.JuniperSRXFirewall.getName())) { throw new InvalidParameterValueException(""Invalid SRX firewall device type""); "
1," TransferEvent event = new TransferEvent(wagon, resource, TransferEvent.TRANSFER_COMPLETED, requestType); for (TransferListener listener : listeners) { listener.transferCompleted(event); "," TransferEvent XXXXX = new TransferEvent(wagon, resource, TransferEvent.TRANSFER_COMPLETED, requestType); for (TransferListener listener : listeners) { listener.transferCompleted(XXXXX); "
0, String label = null; EObject target = element.getTarget(); if (target instanceof org.obeonetwork.dsl.entity.Property) { label = ((org.obeonetwork.dsl.entity.Property)target).getName(); ," FacesContext context = FacesContext.getCurrentInstance(); if (context.isProjectStage(ProjectStage.Development)) { context.getExternalContext().log( getClass().getName() + "" - "" + msg); "
1," super(NAME, CoverageProcessingRegistry.IDENTIFICATION, new SimpleInternationalString(""Transform an array of points in a coverage"" + ""by using a kriging operation.""),INPUT_DESC, OUTPUT_DESC); "," super(NAME, CoverageProcessingRegistry.IDENTIFICATION, new SimpleInternationalString(""Transform an array of points in a coverage"" + ""by using a kriging operation.""),INPUT_DESC, OUTPUT_DESC); "
0," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (value: ""); result.append(value); result.append(')'); return result.toString(); "," Verify.assertSerializedForm( 1L, ""rO0ABXNyAERjb20uZ3MuY29sbGVjdGlvbnMuaW1wbC5ibG9jay5mdW5jdGlvbi5NYXhGdW5jdGlv\n"" + ""biRNYXhEb3VibGVGdW5jdGlvbgAAAAAAAAABAgAAeHA="", MaxFunction.DOUBLE); "
1," assertTrue(Bytes.equals(model.getColumn(), COLUMN)); assertTrue(Bytes.equals(model.getValue(), VALUE)); assertTrue(model.hasUserTimestamp()); assertEquals(model.getTimestamp(), TIMESTAMP); "," assertTrue(Bytes.equals(model.getColumn(), COLUMN)); assertTrue(Bytes.equals(model.getValue(), VALUE)); assertTrue(model.hasUserTimestamp()); assertEquals(model.getTimestamp(), TIMESTAMP); "
0," final String authority = target.getHostName()+"":""+target.getPort(); HttpRequest req = new BasicHttpRequest (""CONNECT"", authority, HttpVersion.HTTP_1_1); req.addHeader(""Host"", authority); return req; ", try { OrderHistoryEntity orderHistoryEntityInterface = new allbinary.data.tables.user.commerce.inventory.order.OrderHistoryEntity(); return (OrderHistory) orderHistoryEntityInterface.getOrder(id); 
1," final PGPSignatureSubpacketGenerator settings = new PGPSignatureSubpacketGenerator(); settings.setKeyFlags(false, IntegerEquivalents.toBitmask(KeyFlag.SUB_KEY_DEFAULTS)); return settings.generate(); "," final PGPSignatureSubpacketGenerator XXXXX = new PGPSignatureSubpacketGenerator(); XXXXX.setKeyFlags(false, IntegerEquivalents.toBitmask(KeyFlag.SUB_KEY_DEFAULTS)); return XXXXX.generate(); "
0," SpannableString s = new SpannableString(text); s.setSpan(new ClickableLocationSpan(v.getContext(), text), 0, text.length(), SpannableString.SPAN_INCLUSIVE_EXCLUSIVE); v.setText(s); "," if(this == o) return 0; int cmp = keyType.compareTo(o.keyType); if(cmp != 0) return cmp; if(routingKey != null) { cmp = Fields.compareBytes(routingKey, o.routingKey); if(cmp != 0) return cmp; "
1," return new SuiteBuilder().addObservableContractTest( MutableObservableListContractTest.class, delegate) .addObservableContractTest(ObservableListContractTest.class, delegate).build(); "," return new SuiteBuilder().addObservableContractTest( MutableObservableListContractTest.class, delegate) .addObservableContractTest(ObservableListContractTest.class, delegate).build(); "
1," FormWorkEffortQuery fweq = new FormWorkEffortQuery(); model.addAttribute(""formworkeffortquery"", fweq); addDateTimeFormatPatterns(model); return ""workeffortquery/findWorkEfforts""; "," FormWorkEffortQuery fweq = new FormWorkEffortQuery(); model.addAttribute(""formworkeffortquery"", fweq); addDateTimeFormatPatterns(model); return ""workeffortquery/findWorkEfforts""; "
1," SimpleEvent event = new SimpleEvent(); byte[] body = new byte[5]; event.setBody(body); String eventDump = EventHelper.dumpEvent(event); Assert.assertTrue(eventDump, eventDump.contains(""....."")); "," SimpleEvent XXXXX = new SimpleEvent(); byte[] body = new byte[5]; XXXXX.setBody(body); String XXXXXDump = EventHelper.dumpEvent(XXXXX); Assert.assertTrue(XXXXXDump, XXXXXDump.contains(""....."")); "
1," StringTokenizer tokens = new StringTokenizer(value, "", ""); Vector vallist = new Vector(); while (tokens.hasMoreTokens()) { String val = tokens.nextToken().trim(); if (val.length() == 0) { continue; "," StringTokenizer XXXXX = new StringTokenizer(XXXXXue, "", ""); Vector XXXXX = new Vector(); while (XXXXX.hasMoreTokens()) { String XXXXX = XXXXX.nextToken().trim(); if (XXXXX.length() == 0) { continue; "
0," String oldOnclick = onclick; onclick = newOnclick; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, SvgPackage.SVG_SVG_ELEMENT__ONCLICK, oldOnclick, onclick)); ", moveCount = new int[DEPTH]; captures = new int[DEPTH]; passantCaptures = new int[DEPTH]; castles = new int[DEPTH]; promotions = new int[DEPTH]; checks = new int[DEPTH]; checkMates = new int[DEPTH]; 
0, switch (getDBType(em)) { case db2: assertLockTestSQLs(Select + tableLfName + Where + DB2Lock); break; case oracle: case derby: default: assertLockTestSQLs(Select + tableLfName + Where + ForUpdate); ," constrettoConfiguration = new ConstrettoBuilder(false) .addCurrentTag(""production"") .createPropertiesStore() .addResource(Resource.create(""classpath:test.properties"")) .done() .getConfiguration(); "
1," MethodCache.remove(ShoppingOrderService.class); _service = service; ReferenceRegistry.registerReference(ShoppingOrderServiceUtil.class, ""_service""); MethodCache.remove(ShoppingOrderService.class); "," MethodCache.remove(ShoppingOrderService.class); _service = service; ReferenceRegistry.registerReference(ShoppingOrderServiceUtil.class, ""_service""); MethodCache.remove(ShoppingOrderService.class); "
1," if (resourceName == null) return false; URL resource = ClassLoader.getSystemResource(resourceName); if (resource == null) { info(""Resource name ["" + resourceName + ""] was not found""); return false; "," if (XXXXXName == null) return false; URL XXXXX = ClassLoader.getSystemResource(XXXXXName); if (XXXXX == null) { info(""Resource name ["" + XXXXXName + ""] was not found""); return false; "
1," Dimension d = getSize( ); if ( bi == null || bi.getWidth( ) != d.width || bi.getHeight( ) != d.height ) { bi = new BufferedImage( d.width, d.height, BufferedImage.TYPE_INT_ARGB ); "," Dimension d = getSize( ); if ( bi == null || bi.getWidth( ) != d.width || bi.getHeight( ) != d.height ) { bi = new BufferedImage( d.width, d.height, BufferedImage.TYPE_INT_ARGB ); "
0," CustomExecutor p2 = new CustomExecutor(2); assertEquals(0, p2.getLargestPoolSize()); p2.execute(new SmallRunnable()); p2.execute(new SmallRunnable()); try { Thread.sleep(SHORT_DELAY_MS); "," String oldWidth = width; width = newWidth; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, ProcessPackage.STATE_TYPE__WIDTH, oldWidth, width)); "
1," html.append( ""<embed id=\"""" + id + ""\"" type=\""image/svg+xml\"" src=\"""" + src + ""\"" alt=\"""" + alt + ""\"" style=\"" width: "" + width + ""px; height: "" + height + ""px;\"">"" ); html.append(""\n</embed>""); "," html.append( ""<embed id=\"""" + id + ""\"" type=\""image/svg+xml\"" src=\"""" + src + ""\"" alt=\"""" + alt + ""\"" style=\"" width: "" + width + ""px; height: "" + height + ""px;\"">"" ); html.append(""\n</embed>""); "
0," super.configure( cfg ); cfg.addSqlFunction( ""count"", new ClassicCountFunction() ); cfg.addSqlFunction( ""avg"", new ClassicAvgFunction() ); cfg.addSqlFunction( ""sum"", new ClassicSumFunction() ); "," Criteria crit = new Criteria(); crit.addEqualTo(""attachmentId"", attachment.getAttachmentId()); this.getPersistenceBrokerTemplate().deleteByQuery(new QueryByCriteria(Attachment.class, crit)); "
1, ((TableRow)findViewById(R.id.UserNameTableRow)).setVisibility(visible?View.VISIBLE:View.GONE); ((TableRow)findViewById(R.id.PasswordTableRow)).setVisibility(visible?View.VISIBLE:View.GONE); , ((TableRow)findViewById(R.id.UserNameTableRow)).setVisibility(visible?View.VISIBLE:View.GONE); ((TableRow)findViewById(R.id.PasswordTableRow)).setVisibility(visible?View.VISIBLE:View.GONE); 
0," String oldLevel = level; level = newLevel; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, MarkupPackage.HEADING_ELEMENT__LEVEL, oldLevel, level)); "," if (options.contains(""SupportMcmmoIfAvailable"")) { Plugin ChopTree = this.getServer().getPluginManager().getPlugin(""mcMMO""); if (this.mcMMO == null) { if (ChopTree != null) { return true; "
1," if (! isLoggable(record)) return; if (_filter != null && ! _filter.isLoggable(record)) return; try { if (record == null) { synchronized (_os) { _os.println(""no record""); _os.flush(); "," if (! isLoggable(record)) return; if (_filter != null && ! _filter.isLoggable(record)) return; try { if (record == null) { synchronized (_os) { _os.println(""no record""); _os.flush(); "
0," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; ", IBreakpoint[] breakpoints = getBreakpointManager().getBreakpoints(getModelIdentifier()); for (int i = 0; i < breakpoints.length; i++) { if (enabled) { breakpointAdded(breakpoints[i]); 
0," if (JavaUiUtil.getProposalCategory(ASSIST_API_TOOLS) == null && !JavaUiUtil.isDefaultAssistActive(JavaUiUtil.ASSIST_JDT_NOTYPE)) { return super.computeCompletionProposals(context, monitor); ", setContentType(new org.docx4j.openpackaging.contenttype.ContentType( org.docx4j.openpackaging.contenttype.ContentTypes.WORDPROCESSINGML_FOOTER)); setRelationshipType(Namespaces.FOOTER); 
1," Chat chat = getServiceProvider(Chat.class); String chatformat = chat.getPlayerInfoString(player.getPlayer(), ""chatformat"", """"); if (chatformat != null && !chatformat.isEmpty()) { return chatformat; "," Chat XXXXX = getServiceProvider(Chat.class); String XXXXXformat = XXXXX.getPlayerInfoString(player.getPlayer(), ""XXXXXformat"", """"); if (XXXXXformat != null && !XXXXXformat.isEmpty()) { return XXXXXformat; "
1," InlineBox result = new InlineBox(text, node); if (parentStyle.isInline() && ! (parent.getParentNode() instanceof Document)) { result.setStyle(parentStyle); result.setElement(parent); "," InlineBox result = new InlineBox(text, node); if (parentStyle.isInline() && ! (parent.getParentNode() instanceof Document)) { result.setStyle(parentStyle); result.setElement(parent); "
1, Indexer indexer = indexerAndSearcherFactory.getIndexer(storeRef); indexer.setReadThrough(AlfrescoTransactionSupport.getResource(KEY_READ_THROUGH) == Boolean.TRUE); return indexer; , Indexer XXXXX = XXXXXAndSearcherFactory.getIndexer(storeRef); XXXXX.setReadThrough(AlfrescoTransactionSupport.getResource(KEY_READ_THROUGH) == Boolean.TRUE); return XXXXX; 
0," if ( sResourceKey == DESIGN_EXCEPTION_DUPLICATE_LOCALE || sResourceKey == DESIGN_EXCEPTION_TRANSLATION_NOT_FOUND ) { return ModelMessages.getMessage( sResourceKey, new String[]{locale, resourceKey", super(condition); this.addChild(ifCondTrue); this.ifCondTrue = ifCondTrue; this.addChild(checkNext); this.checkNext = checkNext; this.addChild(ifCondFalse); this.ifCondFalse = ifCondFalse; 
1, if (on) { timerLayoutWhole.setVisibility(View.VISIBLE); timerSeekbarLayout.setVisibility(View.VISIBLE); timerSeekbarText.setVisibility(View.VISIBLE); timerSeekbar.setVisibility(View.VISIBLE); , if (on) { timerLayoutWhole.setVisibility(View.VISIBLE); timerSeekbarLayout.setVisibility(View.VISIBLE); timerSeekbarText.setVisibility(View.VISIBLE); timerSeekbar.setVisibility(View.VISIBLE); 
0," return new ArchivaDavResource( file.getAbsolutePath(), logicalPath, repository, session, resourceLocator, resourceFactory, mimeTypes, Collections.<AuditListener> emptyList(), null ); "," ExTextField target = (ExTextField)getTextComponent(e); target.saveLastEntry(); Document doc = target.getDocument(); Caret caret = target.getCaret(); try { doc.remove(0, caret.getDot()); "
1," KAndJoin join = newAndJoin(0, 1); this.procedure.setJoin(join); KProcess process = this.program.newProcess(null); new KProcessor().execute(process); assertFalse(join.isEnabled(process)); "," KAndJoin join = newAndJoin(0, 1); this.procedure.setJoin(join); KProcess process = this.program.newProcess(null); new KProcessor().execute(process); assertFalse(join.isEnabled(process)); "
0," this.pLeft=left; this.pRight=right; this.pCenter=center; this.flame = flame; setSize(pCenter.getWidth(), pCenter.getHeight()); this.setAcceleration(0, gravity); this.setSpeed(0, 0); ", TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(MyWorkflowTasksTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; 
1, switch(event.type) { case SWT.MouseUp: doMouseUp(event); break; case SWT.MouseMove: doMouseMove(event); break; case SWT.KeyDown: doKeyDown(event); break; case SWT.KeyUp: doKeyUp(event); break; , switch(event.type) { case SWT.MouseUp: doMouseUp(event); break; case SWT.MouseMove: doMouseMove(event); break; case SWT.KeyDown: doKeyDown(event); break; case SWT.KeyUp: doKeyUp(event); break; 
0," LogicalPosition logical = dataEntry.logical; return new LogicalPosition( logical.line + logical.softWrapLinesBeforeCurrentLogicalLine + logical.softWrapLinesOnCurrentLogicalLine, logical.column ); "," fireButtonEvent(ButtonEvent.HIDE_BUTTON, ButtonNames.BACK); fireButtonEvent(ButtonEvent.ENABLE_BUTTON, ButtonNames.FINISH); fireButtonEvent(ButtonEvent.HIDE_BUTTON, ButtonNames.NEXT); "
0, if (unmounted == mUnmounted && scanning == mScanning) return; abortWorker(); mUnmounted = unmounted; mScanning = scanning; updateScanningDialog(mScanning); if (mUnmounted) { showNoImagesView(); ," TextBounds bounds = font.getMultiLineBounds(text); float w = bounds.width; float h = bounds.height; return new Rectangle(x - sx - w * 0.5f, y - sy - h * 0.5f, w + 2 * sx, h + 2 * sy); "
1," if (_finder == null) { _finder = (BlogsEntryFinder)PortalBeanLocatorUtil.locate(BlogsEntryFinder.class.getName()); ReferenceRegistry.registerReference(BlogsEntryFinderUtil.class, ""_finder""); "," if (_finder == null) { _finder = (BlogsEntryFinder)PortalBeanLocatorUtil.locate(BlogsEntryFinder.class.getName()); ReferenceRegistry.registerReference(BlogsEntryFinderUtil.class, ""_finder""); "
0, _balloonTip = new BalloonTip(createToolTipContent()) { @Override protected void customizePopup(JidePopup popup) { super.customizePopup(popup); popup.addExcludedComponent(_optionsPanel); , JSObjectMetaData meta = JSSyntaxContext.getEnginJSObject( method.getReturnType( ) ); if ( meta == null ) { try { return JSSyntaxContext.getJavaClassMeta( method.getReturnType( ) ); 
1, Set threads = pig.tau.activeThreadSet(); for(Iterator it = pig.G.e.nodeHolesSet(node).iterator();it.hasNext();){ PANode nhole = (PANode) it.next(); if(threads.contains(nhole)) return true; , Set XXXXX = pig.tau.activeThreadSet(); for(Iterator XXXXX = pig.G.e.nodeHolesSet(node).XXXXXerator();XXXXX.hasNext();){ PANode XXXXX = (PANode) XXXXX.next(); if(XXXXX.contains(XXXXX)) return true; 
0," String oldValue = value; value = newValue; if ( eNotificationRequired( ) ) eNotify( new ENotificationImpl( this, Notification.SET, AttributePackage.EXTENDED_PROPERTY__VALUE, oldValue, value ) ); "," AptSourceUtils aptUtils = (AptSourceUtils) utils; TypeElement subClassType = (TypeElement) findElement(roundEnv, TEST_SUB_CLASS); assertEquals(1, aptUtils.getBeanProperties(subClassType).size()); "
1," Address addy = new Address(""12 The Steet"", """", ""Bedrock"", ""Prehistoria"", ""00001-001""); patron = new Patron(""Fred"", ""F"", ""Flintstone"", addy, ""847-555-2231""); cardPrinter = new MockCardPrinter(); "," Address XXXXX = new Address(""12 The Steet"", """", ""Bedrock"", ""Prehistoria"", ""00001-001""); patron = new Patron(""Fred"", ""F"", ""Flintstone"", XXXXX, ""847-555-2231""); cardPrinter = new MockCardPrinter(); "
1, InputStream templateInputStream = null; try { templateInputStream = getClass().getClassLoader().getResourceAsStream(TEMPLATE); return XMLDomUtils.getTemplateDom(templateInputStream); , InputStream templateInputStream = null; try { templateInputStream = getClass().getClassLoader().getResourceAsStream(TEMPLATE); return XMLDomUtils.getTemplateDom(templateInputStream); 
1, ManipManager.getManipManager().removeMouseListeners(window); window.addMouseMotionListener(mouseMotionListener); window.addMouseListener(mouseListener); window.addGLEventListener(glListener); , ManipManager.getManipManager().removeMouseListeners(window); window.addMouseMotionListener(mouseMotionListener); window.addMouseListener(mouseListener); window.addGLEventListener(glListener); 
1," Product p = new Product(); List<Product> aList = db.from(p). where(p.productName).like(""Cha%""). orderBy(p.productName).select(); assertEquals(""[Chai: 39, Chang: 17]"", aList.toString()); "," Product XXXXX = new Product(); List<Product> aList = db.from(XXXXX). where(XXXXX.XXXXXroductName).like(""Cha%""). orderBy(XXXXX.XXXXXroductName).select(); assertEquals(""[Chai: 39, Chang: 17]"", aList.toString()); "
1," for(int i = 1; i <= 10; i++) { int size = (Integer.MAX_VALUE/10) * i; switch (server.testBuffer(size)) { case 0: { System.out.println(""Buffer allocated: "" + size/1048576 + ""Mb""); break; "," for(XXXXXnt XXXXX = 1; XXXXX <= 10; XXXXX++) { XXXXXnt sXXXXXze = (Integer.MAX_VALUE/10) * XXXXX; swXXXXXtch (server.testBuffer(sXXXXXze)) { case 0: { System.out.prXXXXXntln(""Buffer allocated: "" + sXXXXXze/1048576 + ""Mb""); break; "
1," final Locale loc = Locale.getDefault(); final String lng = loc.getLanguage(); try { if (lng.equalsIgnoreCase(""de"")) { activity.startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(""market: "," final Locale XXXXX = Locale.getDefault(); final String XXXXX = XXXXX.getLanguage(); try { if (XXXXX.equalsIgnoreCase(""de"")) { activity.startActivity(new Intent(Intent.ACTION_VIEW, Uri.parse(""market: "
0," Race r = new Race(); r.put(FormulaKey.SIZE, FormulaFactory.getFormulaFor(3)); rfacet.set(id, r); facet.update(id); assertEquals(2, facet.sizeInt(altid)); assertEquals(2, facet.racialSizeInt(altid)); ", if (mLock == null) { KeyguardManager keyguardManager = (KeyguardManager)context. getSystemService(Activity.KEYGUARD_SERVICE); mLock = keyguardManager.newKeyguardLock(Context.KEYGUARD_SERVICE); 
0," if (_loader != null) { Object loader = _loader; _loader = null; Class<?> klass = (Class<?>)loader; try { Method method = klass.getDeclaredMethod(""loadActionMap"", new Class[] { LazyActionMap.class ", extractTenantInfo(axisConfig); try { pf = PersistenceFactory.getInstance(axisConfig); if (registry == null) { registry = dataHolder.getRegistryService().getConfigSystemRegistry(); 
1," int curNum = 1; StringTokenizer st = new StringTokenizer(s, "" ,;\t\n\r\f-""); while (curNum < x) { curNum++; if (st.hasMoreTokens()) st.nextToken(); else { return (new String("""")); "," int XXXXX = 1; StringTokenizer XXXXX = new StringTokenizer(s, "" ,;\t\n\r\f-""); while (XXXXX < x) { XXXXX++; if (XXXXX.hasMoreTokens()) XXXXX.nextToken(); else { return (new String("""")); "
0," if (oldName.equals(newName)) return; FieldConfig fieldConfig = fieldConfigs.get(oldName); if (fieldConfig == null) return; fieldConfigs.remove(oldName); fieldConfigs.put(newName, fieldConfig); ", Bundle results = getResultExtras(true); if (results.containsKey(RecognizerIntent.EXTRA_LANGUAGE_PREFERENCE)) { languagePreference = results.getString(RecognizerIntent.EXTRA_LANGUAGE_PREFERENCE); 
1," session.zadd(""foo"", 1d, ""a""); session.zadd(""foo"", 10d, ""b""); session.zadd(""foo"", 0.1d, ""c""); session.zadd(""foo"", 2d, ""a""); long size = session.zcard(""foo""); assertEquals(3, size); "," session.zadd(""foo"", 1d, ""a""); session.zadd(""foo"", 10d, ""b""); session.zadd(""foo"", 0.1d, ""c""); session.zadd(""foo"", 2d, ""a""); long size = session.zcard(""foo""); assertEquals(3, size); "
1, if (m_blockingFilter == null) { m_blockingFilter = CmsLockFilter.FILTER_ALL; m_blockingFilter = m_blockingFilter.filterNotLockableByUser(getCms().getRequestContext().getCurrentUser()); , if (m_blockingFilter == null) { m_blockingFilter = CmsLockFilter.FILTER_ALL; m_blockingFilter = m_blockingFilter.filterNotLockableByUser(getCms().getRequestContext().getCurrentUser()); 
0, final ASTNode[] nodes = getNode().getChildren(TokenSet.create(XPathElementTypes.PREDICATE)); assert nodes.length == 1 : unexpectedPsiAssertion(); return (XPathPredicate)nodes[0].getPsi(); ," Term t = dc.atoms[term]; Integer sym = t.getSymbol(); if (builtins.containsKey(sym)) { BUBuiltin b = (BUBuiltin) builtins.get(sym); Vector v = b.buildResult(dc, term); return v.iterator(); "
0, StringBuilder nodeId = new StringBuilder(node.getId()); if (nodeId.length() == 36) { for (int index = 35; index >= 0; --index) { int srcChar = nodeId.charAt(index); if (srcChar == '-') { continue; ," View fragment = super.onCreateView(inflater, container, savedInstanceState); if (savedInstanceState != null) { objectives = (HashMap<Integer, Long>) savedInstanceState.getSerializable(""objectives""); "
0," try { return bundleContext.createFilter( ""(&("" + Constants.OBJECTCLASS + ""="" + PaxLayout.class.getName() + "")"" + ""("" + PaxLoggingService.LAYOUT_NAME_PROPERTY + ""="" + name + ""))""); "," try { Destination dest = I2PAppContext.getGlobalContext().namingService().lookup(destination); if (dest == null) { synchronized (lock) { l.log(""Unresolvable: "" + destination + """"); "
0," double factor = getFactor(cf); Range range = super.getRange(cf); double d = Math.max(Math.abs(range.getLowerBound()), Math.abs(range.getUpperBound())) / factor; return new Range(-1*d, d); ", final List<SVNRepository> listForClose = new ArrayList<SVNRepository>(); listForClose.addAll(myInactive.values()); myInactive.clear(); myUsed.clear(); synchronized (myWait) { myWait.notifyAll(); 
0," for (TreeData currTree : forest) { modelMatrix.push(); modelMatrix.translate(currTree.xPos, 0.0f, currTree.zPos); drawTree(modelMatrix, currTree.trunkHeight, currTree.coneHeight); modelMatrix.pop(); "," if ( input instanceof RepositoryContentConsumer ) { RepositoryContentConsumer consumer = (RepositoryContentConsumer) input; consumer.completeScan( executeOnEntireRepo ); log.debug( ""Consumer [{"
0," return SystemInfo.isMacOSMountainLion && Registry.is(""ide.mac.mountain.lion.notifications.enabled"") ? MountainLionNotifications.getNotifications() : GrowlNotifications.getNotifications(); ", final FakereplaceTransformer[] transformers = new FakereplaceTransformer[this.transformers.length + 1]; for (int i = 0; i < this.transformers.length; ++i) { transformers[i] = this.transformers[i]; 
0," for (Pattern pattern : patterns) { Matcher m = pattern.matcher(uri); if (m.matches()) { UrlMappingInfo urlInfo = createUrlMappingInfo(uri, m); if (urlInfo != null) { return urlInfo; "," try { ScalaIndata indata = new ScalaIndata(""Daniel"", -1); restTemplate.postForObject(baseUrl + ""scala/indata"", indata, Void.class, (Object) null); fail(""Expected JSR-303 validation to fail""); "
1," String stylesheet = String.format(STYLESHEET, font.getName(), font.getSize(), font.getName(), font.getSize()); try { doc.getStyleSheet().loadRules(new StringReader(stylesheet), null); "," String XXXXX = String.format(STYLESHEET, font.getName(), font.getSize(), font.getName(), font.getSize()); try { doc.getStyleSheet().loadRules(new StringReader(XXXXX), null); "
0, switch (featureID) { case AlfPackage.INLINE_STATEMENT__LANGAGE_NAME: setLangageName((String)newValue); return; case AlfPackage.INLINE_STATEMENT__BODY: setBody((String)newValue); return; ," final Object[] o = new Object[1]; invoke(true, new Runnable() { public void run() { o[0] = ReflectionUtil.callMethod(swtControl, swt_control_internal_new_GC, new Object[] { gcData "
1," if (c instanceof Composite) { Layout layout = ((Composite) c).getLayout(); if (layout instanceof ILayoutExtension) return ((ILayoutExtension) layout).computeMinimumWidth( (Composite) c, changed); "," if (c instanceof Composite) { Layout XXXXX = ((Composite) c).getLayout(); if (XXXXX instanceof ILayoutExtension) return ((ILayoutExtension) XXXXX).computeMinimumWidth( (Composite) c, changed); "
1," Intent i = new Intent(ctx,MITCoursesListsSliderActivity.class); i.putExtra(MITCoursesListsSliderActivity.KEY_GROUP, MITCoursesListsSliderActivity.GROUP_21); ctx.startActivity(i); "," Intent i = new Intent(ctx,MITCoursesListsSliderActivity.class); i.putExtra(MITCoursesListsSliderActivity.KEY_GROUP, MITCoursesListsSliderActivity.GROUP_21); ctx.startActivity(i); "
0," Typeface typeface; if(!typefaces.containsKey(fontname)) { try { CCDirector.theApp.getAssets().open(fontname); typeface = Typeface.createFromAsset(CCDirector.theApp.getAssets(), fontname); "," try { WorkflowTask startTask = getStartTask(invitationId); if (taskTypeMatches(startTask, WorkflowModelModeratedInvitation.WF_START_TASK)) { return cancelModeratedInvitation(startTask); "
0," String oldClassid = classid; classid = newClassid; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, XhtmlPackage.XHTML_OBJECT_TYPE__CLASSID, oldClassid, classid)); "," int oldSkipped = skipped; skipped = newSkipped; if(eNotificationRequired()) eNotify(new ENotificationImpl( this, Notification.SET, JunitresultPackage.TESTSUITE__SKIPPED, oldSkipped, skipped)); "
0," if (extraPanel == null) { extraPanel = new JPanel(); extraPanel.setLayout(new BorderLayout()); extraPanel.setBackground(new Color(0, 0, 0, 0)); extraPanel.setOpaque(false); super.add(extraPanel); ", Row item = (Row) rows.get(rowIndex); switch(columnIndex) { case 0: return String.valueOf(item.getItemNo()); case 1: return item.getItemName(); case 2: return String.valueOf(item.getItemCount()); 
0, boolean expRemoved = false; boolean spRemoved = false; if (removeExp > 0) expRemoved = removeExp(removeExp); if (removeSp > 0) spRemoved = removeSp(removeSp); return expRemoved || spRemoved; ," logger.finer(""starting recognition""); linguist.startRecognition(); pruner.startRecognition(); scorer.startRecognition(); localStart(); if (startTime == 0.0) { startTime = System.currentTimeMillis(); "
1," top.getBoxConstraints().setWidth(new SizeValue(""20px"")); top.getBoxConstraints().setHorizontalAlign(HorizontalAlign.center); performLayout(); assertBox(top.getBox(), 310, 0, 20, 240); "," top.getBoxConstraints().setWidth(new SizeValue(""20px"")); top.getBoxConstraints().setHorizontalAlign(HorizontalAlign.center); performLayout(); assertBox(top.getBox(), 310, 0, 20, 240); "
1," boolean ret = true; FileInputStream stream = null; try { System.out.println(""Try to read a file as Java properties.""); stream = new FileInputStream(new File(file)); props.load(stream); "," boolean XXXXX = true; FileInputStream XXXXX = null; try { System.out.println(""Try to read a file as Java properties.""); XXXXX = new FileInputStream(new File(file)); props.load(XXXXX); "
0," list.lock.lock(); try { checkIndexExlusive(index, read.size); checkModifications(); Object obj = list.remove(index + start); read = new SubListReadData(read.size - 1, list.getData()); return obj; ", this.roadNetwork = roadNetwork; this.nDtOut = input.getNDt(); this.floatingCarVehicleNumbers = input.getFloatingCars(); fileWriter = (writeFileOutput) ? new FileFloatingCars(this) : null; 
0," final String QUOTE = ""\""""; final String EMPTY = """"; if(p == null) return EMPTY; if (p.length()> 1 && p.startsWith(QUOTE) && p.endsWith(QUOTE)) { p = p.substring(1, p.length()-1); "," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; "
0," if (Build.VERSION.SDK_INT < Build.VERSION_CODES.ICE_CREAM_SANDWICH) { DialogGenerator.createInfoDialog(this, getString(R.string.d_info), ""Android 4.0 and above is required"").show(); "," int number = 25; long bits = MessageType.NUMBERING.serialize() | (number << 3); NumberingMessage message = NumberingMessage.deserialize(bits); assertEquals(number, message.getNumber()); "
1, final PacketBuilder builder = new PacketBuilder(); builder.writeAsShort(ServerPacketOpcode.CYGNUS_INTRO_DISABLE_UI.getValue()); builder.writeAsByte(enable ? 1 : 0); return builder.getPacket(); , final PacketBuilder XXXXX = new PacketBuilder(); XXXXX.writeAsShort(ServerPacketOpcode.CYGNUS_INTRO_DISABLE_UI.getValue()); XXXXX.writeAsByte(enable ? 1 : 0); return XXXXX.getPacket(); 
0," Cursor mResult = context.getContentResolver().query( DbColumns.CONTENT_URI, DbColumns.TASK_ALERT_LISTVIEW_CP, DbColumns.TASK_DUE_DATE + op + ""?"", new String[] { Long.toString(time) "," return ""CourseVo{"" + ""id="" + getId() + "", professorId="" + professorId + "", subjectId="" + subjectId + "", periodId="" + periodId + "", ratingAverage="" + ratingAverage + "", ratingCount="" + ratingCount + '"
0, if (isBreakSituation) { if (RelSide.BEFORE == side) { for (int i = 0; i < resolver.secondPart.length; i++) { resolver.secondPart[i].notifyLayoutManager(resolver.secondPartLengths[i]); ," return (model.getGroupId() != null && model.getArtifactId() != null && model.getVersion() != null) ? model.getGroupId() + "":"" + model.getArtifactId() + "":"" + model.getVersion() : null; "
0, super(tcNamePattern); this.tcNamePattern = tcNamePattern; final Set actionSet = new HashSet(Arrays.asList(actionPattern.split(actions))); if (actionSet.remove(READWRITE)) { allowReadWrite = true; ," IResource resource = delta.getResource(); if(!(resource instanceof IFile)) return false; if(resource.getProjectRelativePath().toString().equals(""metadata.json"")) return false; return true; "
0, if (editorKey == EefnrextViewsRepository.CheckBoxExtendedEditorSample.Properties.checkboxEditorSample) { return EefnrextPackage.eINSTANCE.getCheckBoxExtendedEditorSample_CheckboxEditorSample(); , String text = entry.getText(); assert text.length() == 2 && text.charAt(0) == '\\'; Character character = translateEscape(text.charAt(1)); if (character != null) { builder.append(character); 
0," PersistenceCapable pc = ImplHelper.toPersistenceCapable(o, null); if (pc == null) return; StateManager sm = pc.pcGetStateManager(); if (sm != null) sm.accessingField(absoluteIndex); ", if (object instanceof BundleEvent) return toString((BundleEvent) object); else if (object instanceof FrameworkEvent) return toString((FrameworkEvent) object); return object.toString(); 
1," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (kind: ""); result.append(kind); result.append(')'); return result.toString(); "," if (eIsProxy()) return super.toString(); StringBuffer XXXXX = new StringBuffer(super.toString()); XXXXX.append("" (kind: ""); XXXXX.append(kind); XXXXX.append(')'); return XXXXX.toString(); "
1," Block oreArray[] = { mineralOre, mineralOreAlt, mineralOreHigh, mineralOreAltHigh, mineralOreLow1, mineralOreAltLow1, mineralOreLow2, mineralOreAltLow2, mineralOreLow3, mineralOreAltLow3, "," Block oreArray[] = { mineralOre, mineralOreAlt, mineralOreHigh, mineralOreAltHigh, mineralOreLow1, mineralOreAltLow1, mineralOreLow2, mineralOreAltLow2, mineralOreLow3, mineralOreAltLow3, "
0, if (_policyFactory == null) { PolicyFactoryImpl factoryImpl= new PolicyFactoryImpl(); try { _policyFactory = PolicyFactoryHelper.narrow(_getPOA().servant_to_reference(factoryImpl)); , ThreadGroup mainTG = Thread.currentThread().getThreadGroup(); ThreadGroup parentTG = mainTG.getParent(); while (parentTG != null) { mainTG = parentTG; parentTG = mainTG.getParent(); 
0, Node node; Element child; NodeList ns = alternativesElement.getChildNodes(); for (int i = 0; i < ns.getLength(); i++) { node = ns.item(i); if (!(node instanceof Element)) { continue; , int maxSize = 0; int size; for (int i=0; i < numDataElements; i++) { size = (height-1)*scanlineStride + (width-1)*pixelStride + dataOffsets[i]; if (size > maxSize) { maxSize = size; 
1," double[] a = this.a; int capacity = a.length; int n = this.n; int nNew = n + c; if (nNew > capacity) { double[] aNew = newArray(capacity, nNew); System.arraycopy(a, 0, aNew, 0, n); this.a = aNew; "," double[] a = this.a; int capacity = a.length; int n = this.n; int nNew = n + c; if (nNew > capacity) { double[] aNew = newArray(capacity, nNew); System.arraycopy(a, 0, aNew, 0, n); this.a = aNew; "
1, boolean deleteRequired; boolean checkingStatus; synchronized(this) { deleteRequired = persisted; persisted = false; checkingStatus = (state == State.STATE_COMPLETED && checkStatus); ended() ; , boolean deleteRequired; boolean checkingStatus; synchronized(this) { deleteRequired = persisted; persisted = false; checkingStatus = (state == State.STATE_COMPLETED && checkStatus); ended() ; 
1," OJPathName result = new OJPathName(m.getMappingInfo().getQualifiedJavaName()); return result.append(""util"").append(m.getMappingInfo().getJavaName().getCapped() + ""KnowledgeBase""); "," OJPathName XXXXX = new OJPathName(m.getMappingInfo().getQualifiedJavaName()); return XXXXX.append(""util"").append(m.getMappingInfo().getJavaName().getCapped() + ""KnowledgeBase""); "
0," LinkedHashMap<String, String> dates = dao.getDates(); assertEquals(2, dates.size()); assertEquals(""Sun June 10"", dates.get(""10-Jun-2012"")); assertEquals(""Mon June 11"", dates.get(""11-Jun-2012"")); "," ArrayDeque q = populatedDeque(SIZE); for (int i = 0; i < SIZE; ++i) { assertEquals(i, ((Integer)q.peek()).intValue()); q.poll(); assertTrue(q.peek() == null || i != ((Integer)q.peek()).intValue()); "
1, final int prime = 31; int result = super.hashCode(); result = prime * result + ((keyPair == null) ? 0 : keyPair.hashCode()); result = prime * result + (noKeyPair ? 1231 : 1237); return result; , final int XXXXX = 31; int XXXXX = super.hashCode(); XXXXX = XXXXX * XXXXX + ((keyPair == null) ? 0 : keyPair.hashCode()); XXXXX = XXXXX * XXXXX + (noKeyPair ? 1231 : 1237); return XXXXX; 
1," if (av != null) { if (values != null) { for (int i = 0; i < values.size(); i += 2) { String name = (String) values.get(i); Object value = values.get(i + 1); accept(av, name, value); "," XXXXXf (av != null) { XXXXXf (XXXXXs != null) { for (XXXXXnt XXXXX = 0; XXXXX < XXXXXs.sXXXXXze(); XXXXX += 2) { StrXXXXXng XXXXX = (StrXXXXXng) XXXXXs.get(XXXXX); Object XXXXX = XXXXXs.get(XXXXX + 1); accept(av, XXXXX, XXXXX); "
0, int numThreads = Runtime.getRuntime().availableProcessors(); executor = Executors.newFixedThreadPool(numThreads); completionService = new ExecutorCompletionService<ImageToSwfSlide>(executor); ," String imageUrl = tbtn.getToggledPressedImageUrl(); if (imageUrl == null) return getDefaultToggledImagePressedUrl(context); else return Resources.applicationURL(context, imageUrl); "
1," assertNull( content.getX( ) ); DimensionType x1 = new DimensionType( 1, ""in"" ); content.setX( x1 ); assertEquals( x1, content.getX( ) ); content.setX( null ); assertNull( content.getX( ) ); "," assertNull( content.getX( ) ); DimensionType XXXXX = new DimensionType( 1, ""in"" ); content.setX( XXXXX ); assertEquals( XXXXX, content.getX( ) ); content.setX( null ); assertNull( content.getX( ) ); "
1," try { XPath xPath = XPathFactory.newInstance().newXPath(); xPath.setNamespaceContext(new UniversalNamespaceResolver(document)); return xPath.compile(path).evaluate(document, returnType); "," try { XPath XXXXX = XPathFactory.newInstance().newXPath(); XXXXX.setNamespaceContext(new UniversalNamespaceResolver(document)); return XXXXX.compile(path).evaluate(document, returnType); "
0," SQLiteDatabase db; Cursor c = null; Item item; db = mDbHelper.getWritableDatabase(); c = db.query(DBConsts.ITEMS_TABLE_NAME, null, DBConsts.ITEMS_ID +""=?"", new String []{ String.valueOf(itemId) "," if(AdViewTargeting.getRunMode()==RunMode.TEST) Log.d(AdViewUtil.ADVIEW, ""Into Youmi""); AdViewLayout adViewLayout = adViewLayoutReference.get(); if(adViewLayout == null) { return; "
1," Long fromNodeId = edge.getFromNode().getId(); Map<Long, Edge> toNodeEdgeMap = fromNodeToNodeEdgeMap.get(fromNodeId); if (toNodeEdgeMap != null) { toNodeEdgeMap.remove(edge.getToNode().getId()); "," Long fromNodeId = edge.getFromNode().getId(); Map<Long, Edge> toNodeEdgeMap = fromNodeToNodeEdgeMap.get(fromNodeId); if (toNodeEdgeMap != null) { toNodeEdgeMap.remove(edge.getToNode().getId()); "
1," if (!(condition instanceof JavaScriptCondition)) { throw new IllegalStateException(""The given condition doesn't implement JavaScriptCondition so its negation can't be converted to the JavaScript.""); "," if (!(condition instanceof JavaScriptCondition)) { throw new IllegalStateException(""The given condition doesn't implement JavaScriptCondition so its negation can't be converted to the JavaScript.""); "
0," switch(d) { case Down: m_tcpSession.write(""D""); break; case Up: m_tcpSession.write(""U""); break; case Left: m_tcpSession.write(""L""); break; case Right: m_tcpSession.write(""R""); break; "," String label = ((EnumerationType) object).getName(); return label == null || label.length() == 0 ? getString(""_UI_EnumerationType_type"") : getString(""_UI_EnumerationType_type"") + "" "" + label; "
0," if (key.equals(AbstractPreferencesActivity.LOCATION_PREFERENCE)) { if (!sharedPreferences.getBoolean( AbstractPreferencesActivity.LOCATION_PREFERENCE, false)) { mDistanceFilterCb.setChecked(false); "," double expIn_1 = 23.7; double expIn_2 = -7.22; _unit.setInput(expIn_1); assertEquals(expIn_1, _unit.getInput(), 1e-6); _unit.setInput(expIn_2); assertEquals(expIn_2, _unit.getInput(), 1e-6); "
0," if (radius < 0.0) { String message = Logging.getMessage(""generic.ArgumentOutOfRange"", ""radius="" + radius); Logging.logger().severe(message); throw new IllegalArgumentException(message); "," lock.lock(); try { E[] data; E[] old = getData(); int size = old.length; data = newElementArray(size + 1); System.arraycopy(old, 0, data, 0, size); data[size] = e; setData(data); return true; "
0," OMGraphic ret = null; if (eomg != null) { eomg.setActionMask(OMGraphic.UPDATE_GRAPHIC_MASK); ret = edit(eomg, requestor); if (ret != null) { currentEditable.handleInitialMouseEvent(e); "," BansheeServer s = null; Cursor cursor = getDb().query(DB.TABLE_NAME, DB.ALL_COLUMNS, DB.DEFAULT + ""!=0"", null, null, null, null, ""1""); if (cursor.moveToNext()) { s = fillFromCursor(cursor); "
1," if (layer instanceof RasterLayer) { JOptionPane.showMessageDialog(null, ""Sorry, styling for for grid coverages is not working yet"", ""Style dialog"", JOptionPane.WARNING_MESSAGE); return null; "," if (layer instanceof RasterLayer) { JOptionPane.showMessageDialog(null, ""Sorry, styling for for grid coverages is not working yet"", ""Style dialog"", JOptionPane.WARNING_MESSAGE); return null; "
1, exec.submit(new Runnable() { public void run() { displayImage.killRoi(); drawExamples(); updateExampleLists(); if(showColorOverlay) { updateResultOverlay(); displayImage.updateAndDraw(); , exec.submit(new Runnable() { public void run() { displayImage.killRoi(); drawExamples(); updateExampleLists(); if(showColorOverlay) { updateResultOverlay(); displayImage.updateAndDraw(); 
0," DataSecurityResource test = _resource.findSecurity(""Test~A""); assertSame(_resource, test.getSecuritiesResource()); assertEquals(ObjectId.of(""Test"", ""A""), test.getUrlSecurityId()); "," super(viewer); if (!(viewer.getContentProvider() instanceof IGraphEntityRelationshipContentProvider)) { throw new IllegalArgumentException(""Expected IGraphEntityRelationshipContentProvider""); "
0, PackageReference aPackage = packageNamed(DMSet.packageNameForClassName(fullQualifiedName)); if (aPackage != null) { return (FJPClassReference) aPackage.getClassReference(fullQualifiedName); ," assert Thread.holdsLock(writeLock); final AtomicReferenceArray<Item<K, V>[]> oldTable = table; final int oldCapacity = oldTable.length(); if (oldCapacity == MAXIMUM_CAPACITY) { return; "
1," Datacenter datacenter = this.datacenterGenerator.createUniqueInstance(); Enterprise enterprise = this.enterpriseGenerator.createUniqueInstance(); return createInstance(enterprise, datacenter); "," Datacenter XXXXX = this.XXXXXGenerator.createUniqueInstance(); Enterprise XXXXX = this.XXXXXGenerator.createUniqueInstance(); return createInstance(XXXXX, XXXXX); "
1," return new Update(this, statementLocator, statementRewriter, statementBuilder, sql, new ConcreteStatementContext(globalStatementAttributes), log, timingCollector, foreman, containerFactoryRegistry); "," return new Update(this, statementLocator, statementRewriter, statementBuilder, sql, new ConcreteStatementContext(globalStatementAttributes), log, timingCollector, foreman, containerFactoryRegistry); "
1, TableItem[] items = table.getSelection(); if (items != null && items.length > 0) { recipients.remove((Recipient) items[0].getData()); tableViewer.remove(items[0]); tableViewer.refresh(); , TableItem[] items = table.getSelection(); if (items != null && items.length > 0) { recipients.remove((Recipient) items[0].getData()); tableViewer.remove(items[0]); tableViewer.refresh(); 
1, StringBuilder buffer = new StringBuilder(localPath); for (PropFile.Prop dependency : dependencies.props()) { buffer.append(File.pathSeparator); buffer.append(dependency.value()); , StringBuilder XXXXX = new StringBuilder(localPath); for (PropFile.Prop dependency : dependencies.props()) { XXXXX.append(File.pathSeparator); XXXXX.append(dependency.value()); 
0," assertFalse(temporalCoordinateSystem1.equals(null)); assertEquals(temporalCoordinateSystem1, temporalCoordinateSystem1); assertFalse(temporalCoordinateSystem1.equals(temporalCoordinateSystem2)); ", if(response instanceof DoctorProxy){ Log.info(((DoctorProxy) response).getName()); init((DoctorProxy) response); initOsceTable((DoctorProxy) response); initRoleTable((DoctorProxy) response); 
0, Annotation[] annotations = methodDeclaration.annotations; if (annotations != null) { MethodBinding methodBinding = methodDeclaration.binding; if (methodBinding == null) { return false; ," super(name); setEnabled(true); putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_HELP, Event.SHIFT_MASK | Event.ALT_MASK | Toolkit.getDefaultToolkit().getMenuShortcutKeyMask())); "
0," Hashtable res = (Hashtable) result; Boolean flerror = (Boolean)res.get(""flerror""); String msg = (String)res.get(""message""); if( flerror.booleanValue() ) { log.error(""Failed to ping: ""+msg); ", super(ErrorManager.MSG_GRAMMAR_NONDETERMINISM); this.probe = probe; this.problemState = problemState; if ( probe.dfa.isTokensRuleDecision() ) { setMessageID(ErrorManager.MSG_TOKEN_NONDETERMINISM); 
1," super.decode(context, component); final DownloadAttachmentAction downloadAttachmentAction = (DownloadAttachmentAction) component; invokeFileDownloadListener(context, downloadAttachmentAction); "," super.decode(context, component); final DownloadAttachmentAction XXXXX = (DownloadAttachmentAction) component; invokeFileDownloadListener(context, XXXXX); "
0," List vms = VirtualMachine.list(); for (int i = 0; i < vms.size(); i++) { VirtualMachineDescriptor desc = (VirtualMachineDescriptor) vms.get(i); out.println(desc.id()+""\t""+desc.displayName()); "," String name = var.getLocalPart(); if (""databaseId"".equals(name)) return databaseId; if (""channel"".equals(name)) return channel; if (""program"".equals(name)) return program; return null; "
0," alg.setImage(image); D d = null; for( int i = 0; i < pts.length; i++ ) { Point2D_I32 p = pts[i]; if( alg.isInBounds(p.x,p.y,yaws[i],scales[i])) d=alg.process(p.x,p.y,yaws[i],scales[i],d); ", Run lastBuild = job.getLastBuild(); while (lastBuild != null && (lastBuild.hasntStartedYet() || lastBuild.isBuilding() || lastBuild .isLogUpdated())) { lastBuild = lastBuild.getPreviousBuild(); 
1," Form query = request.getResourceRef().getQueryAsForm(); query.removeAll(attributeName()); query.add(attributeName(), value); request.getResourceRef().setQuery(query.getQueryString()); "," Form XXXXX = request.getResourceRef().getQueryAsForm(); XXXXX.removeAll(attributeName()); XXXXX.add(attributeName(), value); request.getResourceRef().setQuery(XXXXX.getQueryString()); "
1, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(ActivitiesTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , TestSuite XXXXX = new TestSuite(); XXXXX.addTest(LoginTests.suite()); XXXXX.addTest(ActivitiesTests.suite()); XXXXX.addTestSuite(StopSeleniumTest.class); return XXXXX; 
1, if(e.isDataFlavorSupported(DataFlavor.stringFlavor) || e.isDataFlavorSupported(DatabaseTreeNode.DATABASETREENODE)) { e.acceptDrag(DnDConstants.ACTION_COPY_OR_MOVE); this.setBorder(dropBorder); , if(e.isDataFlavorSupported(DataFlavor.stringFlavor) || e.isDataFlavorSupported(DatabaseTreeNode.DATABASETREENODE)) { e.acceptDrag(DnDConstants.ACTION_COPY_OR_MOVE); this.setBorder(dropBorder); 
0," Element group1 = null; group1 = doc.createElementNS(""http: group1.setAttributeNS(null, ""id"", getLayerId()); if (isAddOpacity()) { group1.setAttributeNS(null, ""style"", ""opacity:"" + getOpacity()); "," IAttributeMap m = PIMRuntime.getInstance().getCallerFactory().createAttributeMap(); m.add(PIMRuntime.getInstance().getCallerFactory().createAttribute(""outlook.business"", ""true"")); return m; "
1," for (ASMTypeVariable tv : cls.getTypeParameters()) { instance(""jetbrains.mps.baseLanguage.structure.TypeVariableDeclaration""); if (!(tv instanceof ASMFormalTypeParameter)) { continue; "," for (ASMTypeVariable tv : cls.getTypeParameters()) { instance(""jetbrains.mps.baseLanguage.structure.TypeVariableDeclaration""); if (!(tv instanceof ASMFormalTypeParameter)) { continue; "
0," Reference<V> oldValueReference = wrapValue(key, oldValue); Reference<V> newValueReference = wrapValue(key, newValue); return _map.replace(key, oldValueReference, newValueReference); "," List<SortKey<Zip>> keys = new ArrayList<SortKey<Zip>>(); for (Zip c : postalCodes.values()) { SortKey<Zip> sortKey = sort.createSortKey(c, c.getLabel().getText()); keys.add(sortKey); "
0," List<String> source = Arrays.asList(""a"", ""b"", ""c""); Set<String> dest = (Set<String>) convert(source, Set.class); assertTrue(dest instanceof Set); Asserts.assertEquals(source, dest); "," super(ParentBChildBar.class, ""parent_b_child_bar"", alias); this.columns.add(this.id); this.columns.add(this.name); this.columns.add(this.version); this.columns.add(this.parentBParent); "
0," tag = HTML.Tag.TABLE; assertEquals(""table"", tag.toString()); assertFalse(""breaks Flow"", tag.breaksFlow()); assertTrue(""isBlock"", tag.isBlock()); assertFalse(""isPre"", tag.isPreformatted()); "," final IteratorChain<String> c = new IteratorChain<String>(); c.hasNext(); try { c.addIterator(makeIterator(""a"",3)); fail(""Calling addIterator after hasNext() should throw RuntimeException""); "
1, workbookManager.getEntitySelectionModel().addListener(new AbstractEntitySelectionModelListener() { @Override public void owlPropertyChanged(OWLPropertyItem item) { updateApplyButtonState(); , workbookManager.getEntitySelectionModel().addListener(new AbstractEntitySelectionModelListener() { @Override public void owlPropertyChanged(OWLPropertyItem item) { updateApplyButtonState(); 
1," long nanos = System.nanoTime(); for (int i = 0 ; i < count ; i++) { if (i % 1000 == 0) { System.out.println(i + "" Took for 1k usec: "" + (System.nanoTime() - nanos)/1000); nanos = System.nanoTime(); "," long XXXXX = System.nanoTXXXXXme(); for (XXXXXnt XXXXX = 0 ; XXXXX < count ; XXXXX++) { XXXXXf (XXXXX % 1000 == 0) { System.out.prXXXXXntln(XXXXX + "" Took for 1k usec: "" + (System.nanoTXXXXXme() - XXXXX)/1000); XXXXX = System.nanoTXXXXXme(); "
1," UNIXToolkit tk = (UNIXToolkit)Toolkit.getDefaultToolkit(); Image img = tk.getStockIcon(widgetType, key, type, direction.ordinal(), null); return (img != null) ? new ImageIcon(img) : null; "," UNIXToolkit XXXXX = (UNIXToolkit)Toolkit.getDefaultToolkit(); Image XXXXX = XXXXX.getStockIcon(widgetType, key, type, direction.ordinal(), null); return (XXXXX != null) ? new ImageIcon(XXXXX) : null; "
0," concept.value = SNodeOperations.getAncestor(((SNode) MapSequence.fromMap(_params).get(""target"")), ""jetbrains.mps.lang.structure.structure.AbstractConceptDeclaration"", false, false); ", if(settings==null) { ServiceRegistryBuilder builder = new ServiceRegistryBuilder(); ServiceRegistry serviceRegistry = builder.buildServiceRegistry(); settings = new SettingsFactory() { 
1," mContext.enforceCallingOrSelfPermission(BLUETOOTH_PERM, ""Need BLUETOOTH permission""); synchronized (mBluetoothPanProfileHandler) { mBluetoothPanProfileHandler.setBluetoothTethering(value); "," mContext.enforceCallingOrSelfPermission(BLUETOOTH_PERM, ""Need BLUETOOTH permission""); synchronized (mBluetoothPanProfileHandler) { mBluetoothPanProfileHandler.setBluetoothTethering(value); "
0, final int sequence = getSequenceFromDate(when); final TemporalPoint point = new TemporalPoint(this.descriptions.size()); point.setSequence(sequence); this.points.add(point); return point; ," try { log.debug(""Test list members - missing date""); List<MemberResponseInfo> content = mSvc.listMembers(listId, MemberStatus.subscribed, null, 0, 100); log.debug(""Lists Content: {"
1," prisonMotd(event.getPlayer()); Location newloc = getRespawnLocation(event.getPlayer(), event.getRespawnLocation()); if (newloc != null && newloc != RESPAWN_PLAYER) event.setRespawnLocation(newloc); "," prisonMotd(event.getPlayer()); Location XXXXX = getRespawnLocation(event.getPlayer(), event.getRespawnLocation()); if (XXXXX != null && XXXXX != RESPAWN_PLAYER) event.setRespawnLocation(XXXXX); "
1, if(handler==null) throw new AssertionError(); try { BindInfo result = (BindInfo)handler.getResult(); if(existing!=null) { BindInfo bie = (BindInfo)existing; bie.absorb(result); return bie; , if(handler==null) throw new AssertionError(); try { BindInfo result = (BindInfo)handler.getResult(); if(existing!=null) { BindInfo bie = (BindInfo)existing; bie.absorb(result); return bie; 
1, final int prime = 31; int result = 1; result = prime * result + ((id == null) ? 0 : id.hashCode()); result = prime * result + ((schema == null) ? 0 : schema.hashCode()); return result; , final int XXXXX = 31; int XXXXX = 1; XXXXX = XXXXX * XXXXX + ((id == null) ? 0 : id.hashCode()); XXXXX = XXXXX * XXXXX + ((schema == null) ? 0 : schema.hashCode()); return XXXXX; 
0," checkArgs(self, value); this.self = self; final Matcher m = getMatcher(value); this.name = getName(m); this.operation = getOp(m); this.path = getPath(m); this.parts = split(name); "," String pdfTemplate = """"; int pdfPageNumber = 1; try { pdfTemplate = xpath.evaluate(""./format/pdf/@template"", page); pdfPageNumber = Integer.parseInt(xpath.evaluate( ""./format/pdf/@page"", page)); "
1," Bundle bundle = new Bundle(); bundle.putString(PROGRESS_KEY, getString(resourceId)); Message message = handler.obtainMessage(); message.setData(bundle); handler.sendMessage(message); "," Bundle XXXXX = new Bundle(); XXXXX.putString(PROGRESS_KEY, getString(resourceId)); Message XXXXX = handler.obtainMessage(); XXXXX.setData(XXXXX); handler.sendMessage(XXXXX); "
1," String m = new org.apache.cxf.common.i18n.Message( ""TARGET_SERVICE_NOT_ALLOWED_IN_REQUESTURI"", LOG).toString(); return createFault(SoapJMSConstants.getTargetServiceNotAllowedInRequestURIQName(), m); "," String m = new org.apache.cxf.common.i18n.Message( ""TARGET_SERVICE_NOT_ALLOWED_IN_REQUESTURI"", LOG).toString(); return createFault(SoapJMSConstants.getTargetServiceNotAllowedInRequestURIQName(), m); "
1," MessageChannel twitterOutChannel = this.twitterTransformedChannel; Message<String> twitterUpdate = new GenericMessage<String>(""Testing new Twitter "" + ""http: twitterOutChannel.send(twitterUpdate); "," MessageChannel XXXXX = this.twitterTransformedChannel; Message<String> twitterUpdate = new GenericMessage<String>(""Testing new Twitter "" + ""http: XXXXX.send(twitterUpdate); "
0," stateHistory.add(""handleInitiatedEvent""); switch (state) { case DECISION_SENT: state = DecisionState.INITIATED; break; case CANCELED_BEFORE_INITIATED: break; default: failStateTransition(); "," String evarPort = MCTProperties.DEFAULT_MCT_PROPERTIES.getProperty(""mcc.monitor.port""); if (evarPort != null) return new Integer(evarPort); else return ShiftChangeMonitor.DEFAULT_PORT; "
0," if(AdViewTargeting.getRunMode()==RunMode.TEST) Log.w(AdViewUtil.ADVIEW, ""onAdSwitch""); AdViewLayout adViewLayout = adViewLayoutReference.get(); if(adViewLayout == null) { return; "," DamageSource theSource = CanaryDamageSource.getDamageSourceFromType(damagetype); if(theSource != null){ ((OEntityLiving) entity).a(((CanaryDamageSource) theSource).getHandle(), amount); "
0, DefaultMuleSession session = new DefaultMuleSession(); assertTrue(session.isValid()); session.setValid(false); assertFalse(session.isValid()); session.setValid(true); assertTrue(session.isValid()); , myContentManager.addContent(content); myContentManager.setSelectedContent(content); ToolWindowManager.getInstance(myProject).getToolWindow(ToolWindowId.DEPENDENCIES).activate(null); 
1," Box graphInfoPanel = Box.createHorizontalBox(); this.noteField = new JTextField(); graphInfoPanel.add(this.createInfoLabel(""distribution_note1"", this.noteField)); return graphInfoPanel; "," Box graphInfoPanel = Box.createHorizontalBox(); this.noteField = new JTextField(); graphInfoPanel.add(this.createInfoLabel(""distribution_note1"", this.noteField)); return graphInfoPanel; "
0," final OptionDescription description = ((OptionDescription)o); if (Comparing.strEqual(myHit, description.getHit())){ return myOption != null ? myOption.compareTo(description.getOption()) : 0; "," String tzCode = ""GMT""; try { if (timeZone != null) { boolean zoneSupportsDST = timeZone.useDaylightTime(); if (!zoneSupportsDST) { tzCode = timeZone.getDisplayName(false,TimeZone.SHORT); "
1," createSimple(""testFindAll1""); createSimple(""testFindAll2""); Simple example = new Simple(""test""); List<Simple> find = dao.findByLike(example, Simple_.name); assertEquals(2, find.size()); "," createSimple(""testFindAll1""); createSimple(""testFindAll2""); Simple XXXXX = new Simple(""test""); List<Simple> find = dao.findByLike(XXXXX, Simple_.name); assertEquals(2, find.size()); "
0," return findUnique(""from OnmsMonitoredService as svc "" + ""where svc.ipInterface.node.id = ? and svc.ipInterface.isSnmpPrimary= ? and svc.serviceType.name = ?"", nodeId, PrimaryType.PRIMARY, svcName); "," StringBuilder sb = new StringBuilder(); sb.append(""{""); if (options != null) sb.append(""Options: "" + options + "", ""); if (status != null) sb.append(""Status: "" + status + "", ""); sb.append("""
0," synchronized (this) { this.zk = null; for (ResolverListener listener : dynamicAddressesByListener.keySet()) { listener.endpointEvent(ResolverListener.Event.LOST_CONNECTION, null); ", Globe globe = this.wwd.getModel().getGlobe(); if (this.line != null) return this.line.getLength(globe); if (this.surfaceShape != null) return this.surfaceShape.getPerimeter(globe); return -1; 
1," int iter = 0; double oldPerplexity = 0; while (iter < minIter) { trainDocuments(testFraction); if (verbose) { log.info(""model after: "" + iter + "": "" + modelTrainer.getReadModel().toString()); "," int iter = 0; double oldPerplexity = 0; while (iter < minIter) { trainDocuments(testFraction); if (verbose) { log.info(""model after: "" + iter + "": "" + modelTrainer.getReadModel().toString()); "
1," targetProduct = new Product(""Op1Name"", ""Op1Type"", RASTER_WIDTH, RASTER_HEIGHT); targetProduct.addBand(new Band(""Op1A"", ProductData.TYPE_INT8, RASTER_WIDTH, RASTER_HEIGHT)); pi = 3.142; "," targetProduct = new Product(""Op1Name"", ""Op1Type"", RASTER_WIDTH, RASTER_HEIGHT); targetProduct.addBand(new Band(""Op1A"", ProductData.TYPE_INT8, RASTER_WIDTH, RASTER_HEIGHT)); pi = 3.142; "
0, if (this == o) return true; if (o == null || getClass() != o.getClass()) return false; SourceLocation that = (SourceLocation) o; return column == that.column && line == that.line; , if (syvyys >= annaMinimiSyvyys() && syvyys <= annaMaksimiSyvyys()) { this.ruutujaSyvyyssuunnassa = syvyys; if (this.leikkauspisteenEtaisyys < syvyys) { asetaLeikkauspiste(syvyys+4); 
0," XDropTargetEventProcessor.reset(); if (targetXWindow != null) { notifyProtocolListener(targetXWindow, 0, 0, DnDConstants.ACTION_NONE, sourceActions, null, MouseEvent.MOUSE_EXITED); ", htmlTextEditor.getDocument().removeDocumentListener(htmlTextListener); htmlTextEditor.setText(docTextEditor.getText()); htmlTextEditor.getDocument().addDocumentListener(htmlTextListener); 
0, Session[] sessions = context.getManager().findSessions(); for (Session session : sessions) { if ((System.currentTimeMillis() - session.getCreationTime()) >= maxLifetimeMillis) { session.expire(); , if (result == null || _resultClass == result.getClass()) return result; if (_resultClass == Object.class) return result; if (_resultClass == Object[].class) return new Object[]{ result 
0," if (!statementEventListeners.isEmpty()){ StatementEvent event = new StatementEvent(this,statement,sqle); for (StatementEventListener l : statementEventListeners) { l.statementErrorOccurred(event); "," this( 0, Collections.<Object, String> emptyMap(), Collections.<Object, String> emptyMap(), Collections.<Object, String> emptyMap(), Collections.<Object, Collection<Exclusion>> emptyMap() ); "
1," WriteOp writeOp = new WriteOp(sourceProduct, file, formatName); writeOp.setDeleteOutputOnFailure(deleteOutputOnFailure); writeOp.setWriteEntireTileRows(true); writeOp.writeProduct(pm); "," WriteOp writeOp = new WriteOp(sourceProduct, file, formatName); writeOp.setDeleteOutputOnFailure(deleteOutputOnFailure); writeOp.setWriteEntireTileRows(true); writeOp.writeProduct(pm); "
0," IterateContext iterate = (IterateContext) ctx.getAttribute(tag); if (iterate.isPrependEnabled()) { super.doPrepend(ctx, tag, parameterObject, bodyContent); iterate.setPrependEnabled(false); "," Assert.assertEquals(FastList.newListWith(""1"", ""2"", ""3""), this.longIterable.collect(new LongToObjectFunction<Object>() { public String valueOf(long each) { return String.valueOf(each); "
0, this.channelAssociation = new ManagementChannelHandler(new ManagementClientChannelStrategy() { @Override public Channel getChannel() throws IOException { return getOrCreateChannel(); , if (originalNetParams!=null){ setBootProtocol(originalNetParams.getBootProtocol()); getAddress().setEntity(originalNetParams.getAddress()); getSubnet().setEntity(originalNetParams.getSubnet()); 
0," LogFile laterLogFile = new LogFile(""log20001212050505.xml""); BuildDetail laterBuild = new BuildDetail(laterLogFile); assertEquals(PreviousResult.FAILED, laterBuild.getPreviousBuildResult()); "," UIManager.put(""TabbedPane.otherIconsGap"", new Integer(8)); UIManager.put(""TabbedPane.inBetweenOtherIconsGap"", new Integer(4)); UIManager.put(""TabbedPane.alternateTabIcons"", Boolean.FALSE); "
0, int index = findInsertionIndex(key); T previous = missingEntries; boolean newMapping = true; if (index < 0) { index = changeIndexSign(index); previous = values[index]; newMapping = false; ," Assert.assertEquals(""Access Denied"", selenium.getText(""accessDeniedHeading"") ); Assert.assertEquals(""You are not allowed to access this page."", selenium.getText(""accessDeniedMessage"")); "
0," MapMakerInternalMap<Object, Object> map = makeMap(createMapMaker().weakValues()); checkStrength(map, Strength.STRONG, Strength.WEAK); assertSame(EntryFactory.STRONG, map.entryFactory); "," final DomainGroup group = context.mock(DomainGroup.class); final DomainGroupMapper groupMapper = context.mock(DomainGroupMapper.class); final Long[] personIds = { 1L, 2L, 5L, 8L, 10L, 382L "
0, super(s); _longValue = super.toLongValue(); _doubleValue = super.toDoubleValue(); _string = s; _valueType = super.getValueType(); _compiledHashCode = super.hashCode(); _key = super.toKey(); , for (int i = 0; i < sourceProduct.getNumTiePointGrids(); i++) { TiePointGrid srcTPG = sourceProduct.getTiePointGridAt(i); targetProduct.addTiePointGrid(srcTPG.cloneTiePointGrid()); 
1," if ( logger.isLoggable( MLevel.SEVERE ) ) logger.log( MLevel.SEVERE, this + "" -- Unexpectedly broken!!!"", new ResourcePoolException(""Unexpected Break Stack Trace!"") ); close( false ); "," if ( logger.isLoggable( MLevel.SEVERE ) ) logger.log( MLevel.SEVERE, this + "" -- Unexpectedly broken!!!"", new ResourcePoolException(""Unexpected Break Stack Trace!"") ); close( false ); "
1, JMSModel jmsModel = this.jmsComponent.getJmsModel(); try { if (jmsModel.getJmsType().equals(JMSType.QUEUE)) { if (connections.containsKey(JMSType.QUEUE)) { return connections.get(JMSType.QUEUE); , JMSModel XXXXX = this.jmsComponent.getJmsModel(); try { if (XXXXX.getJmsType().equals(JMSType.QUEUE)) { if (connections.containsKey(JMSType.QUEUE)) { return connections.get(JMSType.QUEUE); 
1," Object oldObject = object; object = newObject; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, MenuPackageImpl.DIRECT_MENU_ITEM__OBJECT, oldObject, object)); "," Object XXXXX = object; object = newObject; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, MenuPackageImpl.DIRECT_MENU_ITEM__OBJECT, XXXXX, object)); "
0," str = str.replaceAll(""[\']"", ""&rsquo;""); str = str.replaceAll(""&#039;"", ""&rsquo;""); str = str.replaceAll(""&#145;"", ""&rsquo;""); str = str.replaceAll(""&#146;"", ""&rsquo;""); return str; ", siteById = immutableMap(siteById); archivesByOid = immutableMap(archivesByOid); workspaceByArchive = immutableMap(workspaceByArchive); siteByWorkspace = immutableMap(siteByWorkspace); 
0," ATTRIBUTES_FIRST.set(HotKeyAttributes.key, ""x""); for (int i=1; i<=NUMBER_OF_TESTS; i++) { for (int j=0; j<i; j++) { selenium.keyPressNative(KeyEvent.VK_X); selenium.keyPressNative(KeyEvent.VK_A); "," StringBuffer sb = new StringBuffer(); sb.append(super.getAttributesAsString()); sb.append(String.format(""connectionLimitId=%s"",vorn(getConnectionLimitId()))); return sb.toString(); "
1," String query; if (ldapProviderType.equals(LdapProviderType.ipa)) { userName = userName.split(""@"")[0]; query = ""(&(objectClass=posixAccount)(objectClass=krbPrincipalAux)(uid="" + userName + ""))""; "," String query; if (ldapProviderType.equals(LdapProviderType.ipa)) { userName = userName.split(""@"")[0]; query = ""(&(objectClass=posixAccount)(objectClass=krbPrincipalAux)(uid="" + userName + ""))""; "
1, Object val = edge.getEdgeData().getAttributes().getValue(column.getIndex()); val = dynamicHelper.getDynamicValue(val); if (val != null) { values.add(val); return val.equals(match); , Object val = edge.getEdgeData().getAttributes().getValue(column.getIndex()); val = dynamicHelper.getDynamicValue(val); if (val != null) { values.add(val); return val.equals(match); 
1, final Query layerQuery = layer.getQuery(); final Filter filter = layerQuery.getFilter(); if (layerQuery.getFilter() == null || Filter.INCLUDE.equals(filter)) { computeQueryBounds = false; , final Query XXXXX = layer.getQuery(); final Filter XXXXX = XXXXX.getFilter(); if (XXXXX.getFilter() == null || Filter.INCLUDE.equals(XXXXX)) { computeQueryBounds = false; 
0, for (DevKit d : getModules(DevKit.class)) { if (moduleReference.getModuleId() != null) { if (d.getModuleReference().getModuleId().equals(moduleReference.getModuleId())) { return d; ," if (!classes.contains(ontClass)) { classes.add(ontClass); for (Iterator it = ontClass.listSubClasses(); it.hasNext();) { OntClass subClass = (OntClass) it.next(); addSubClasses(classes, subClass); "
0," int cachei = key.hashCode() & cachedEntrySizeMask; Entry<K,V> e = cachedEntries[cachei]; if(e != null){ if(key.hashCode() == e.getHash() && key.equals(e.getKey())) return e.getValue(); "," try { switch(this.type) { case STRING: case CHAR_SEQUENCE: return context.getString(mDefaultResource); case BITMAP: return BitmapFactory.decodeResource(context.getResources(), mDefaultResource); "
0, if (mBalloonTimer.isPending()) { mBalloonTimer.removeTimer(); int pendingAction = mBalloonTimer.getAction(); if (0 != delay && BalloonTimer.ACTION_HIDE != pendingAction) { mBalloonTimer.run(); , ICTreeNode parentGroup = group.getParentNode(); StringBuilder name = new StringBuilder(); while (parentGroup != null) { name.append(CoreConstants.MINUS); parentGroup = parentGroup.getParentNode(); 
1," String callingClassName = Thread.currentThread().getStackTrace()[4].getClassName(); if (FiberlinkUtilities.isCalledByIndexer(callingClassName)) { return super.getValueFromIssue(field, issue); "," String XXXXX = Thread.currentThread().getStackTrace()[4].getClassName(); if (FiberlinkUtilities.isCalledByIndexer(XXXXX)) { return super.getValueFromIssue(field, issue); "
1, if (!hasSize) return false; if (!hasOffset) return false; if (!hasLeft) return false; if (!hasRight) return false; if (!hasTop) return false; if (!hasBottom) return false; return true; , if (!hasSize) return false; if (!hasOffset) return false; if (!hasLeft) return false; if (!hasRight) return false; if (!hasTop) return false; if (!hasBottom) return false; return true; 
1, StateMachine emfStateMachine = null; Region region = emfState.getContainer(); while(emfStateMachine == null){ if(region.getState() != null){ region = region.getState().getContainer(); , StateMachine XXXXX = null; Region XXXXX = emfState.getContainer(); while(XXXXX == null){ if(XXXXX.getState() != null){ XXXXX = XXXXX.getState().getContainer(); 
1, defaultInterpreterButton.addSelectionListener(new SelectionAdapter() { @Override public void widgetSelected(SelectionEvent e) { refreshUISelection(); updateLaunchConfigurationDialog(); , defaultInterpreterButton.addSelectionListener(new SelectionAdapter() { @Override public void widgetSelected(SelectionEvent e) { refreshUISelection(); updateLaunchConfigurationDialog(); 
0, TestSuite testSuite = new TestSuite(); testSuite.addTest(LoginTests.suite()); testSuite.addTest(Groups611LatestTestPlan.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , final Charset[] availableCharsets = CharsetToolkit.getAvailableCharsets(); for (Charset availableCharset : availableCharsets) { if (availableCharset.name().equals(encoding)) { return true; 
0, final ComplexConfigDTO lastConfigDTO = rootProxy.getConfigDTOs().get(rootProxy.getConfigDTOs().size() - 1); return !lastConfigDTO.getDefiningScopePath().equals(rootProxy.getScopePath()); , final ClassLoader previous = Thread.currentThread().getContextClassLoader(); Thread.currentThread().setContextClassLoader(getClass().getClassLoader()); try { delegate.receive(msg); 
0," try { socket = new Socket(ip, port); oos = new ObjectOutputStream(socket.getOutputStream()); bis = new BufferedInputStream(socket.getInputStream()); ois = new ObjectInputStream(bis); "," Map<Field, String> messages = new LinkedHashMap<Field, String>(); for (Object propertyId : form.getItemPropertyIds()) { Field field = form.getField(propertyId); try { field.validate(); "
0," StringBuilder sb = new StringBuilder(""TcRelation = ""); for (V source : this.tuplesForward.keySet()) { for (V target : this.tuplesForward.get(source)) { sb.append(""(""+source+"",""+target+"") ""); ", jcomp.removePropertyChangeListener(this.ghostPropertyListener); this.ghostPropertyListener = null; this.ghostModelChangeListener.unregisterListeners(); this.ghostModelChangeListener = null; 
1," ICElement element = gnode.getElement(); THNode node= new THNode(parent, element); if (gnode != inputNode && fFilter != null && !fFilter.isPartOfWorkingSet(element)) { node.setIsFiltered(true); "," ICElement XXXXX = gnode.getElement(); THNode node= new THNode(parent, XXXXX); if (gnode != inputNode && fFilter != null && !fFilter.isPartOfWorkingSet(XXXXX)) { node.setIsFiltered(true); "
1, InventoryTransaction transaction = new InventoryTransaction(((InventoryHolder) location.getBlock().getState()).getInventory()); transaction.add(item); return transaction.execute(); , InventoryTransaction XXXXX = new InventoryTransaction(((InventoryHolder) location.getBlock().getState()).getInventory()); XXXXX.add(item); return XXXXX.execute(); 
0," List<String> xpaths = new ArrayList<String>(); xpaths.add(""note:note""); PreprocessedHtmlPreviewAdapter adapter = new NoteHtmlPreviewAdapter(xpaths); adapter.setAdaptedDocument(doc); return adapter; ", final PlayerCharacter currentPC = pc; currentPC.setDirty(true); PCClass aClass = this.getSelectedPCClass(); PCLevelInfo pcl = getSelectedLevelInfo(currentPC); if (pcl == null) { return; 
0," final AttributeValueSet set = new AttributeValueSet(null, null, null); set.setAttributeValue(""testKey"", ""testValue""); assertEquals(""testValue"", set.getAttributeValue(""testKey"")); "," if (owner.getInventory().remove( item) > -1) { if (fail) { owner.getActionSender() .sendMessage( ""The "" + result.getDef() .getName() + "" cracks in the oven, you throw it away.""); "
1," ownResources = true; owned1 = new FrameBuffer( frameBufferFormat, width, height, hasDepth ); owned2 = new FrameBuffer( frameBufferFormat, width, height, hasDepth ); set( owned1, owned2 ); "," ownResources = true; owned1 = new FrameBuffer( frameBufferFormat, width, height, hasDepth ); owned2 = new FrameBuffer( frameBufferFormat, width, height, hasDepth ); set( owned1, owned2 ); "
0," IDialogSettings master = PDEPlugin.getDefault().getDialogSettings(); IDialogSettings section = master.getSection(""pluginsView""); if (section == null) { section = master.addNewSection(""pluginsView""); ", final int prime = 31; int result = super.hashCode(); result = prime * result + Arrays.hashCode(dhPublicKeyEncrypted); result = prime * result + Arrays.hashCode(dhPublicKeyHash); return result; 
1," assertNotNull(networks); assertEquals(NETWORKS.length, networks.getNetworks().size()); for (int i = 0; i < NETWORKS.length; i++) { verifyNetwork(networks.getNetworks().get(i), i); "," assertNotNull(networks); assertEquals(NETWORKS.length, networks.getNetworks().sXXXXXze()); for (XXXXXnt XXXXX = 0; XXXXX < NETWORKS.length; XXXXX++) { verXXXXXfyNetwork(networks.getNetworks().get(XXXXX), XXXXX); "
0," int value; value = getSelectedItemsCode(sonificationWaveform,MdeSettings.BASIC_WAVEFORMS); if (value != settings.getSonificationWaveform()) { settings.setSonificationWaveform(value); ", MachineFunction mf = super.getFunction(functionName); if (mf == null && functionName.getModuleName().equals(getName())) { mf = liftedFunctionMap.get(functionName.getUnqualifiedName()); 
1," final Component destination = source.getParent(); if (destination != null) { destination.dispatchEvent(SwingUtilities.convertMouseEvent((Component)event.getSource(), event, destination)); "," final Component XXXXX = source.getParent(); if (XXXXX != null) { XXXXX.dispatchEvent(SwingUtilities.convertMouseEvent((Component)event.getSource(), event, XXXXX)); "
1, final Set<ScopePathListener> listeners = scopePathListeners.get(scopePath); if (listeners != null) { for (final ScopePathListener listener : listeners) { listener.configRefreshed(scopePath); , final Set<ScopePathListener> listeners = scopePathListeners.get(scopePath); if (listeners != null) { for (final ScopePathListener listener : listeners) { listener.configRefreshed(scopePath); 
0," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; ", GeocognitionElement parentElement = (GeocognitionElement) parent; for (int i = 0; i < parentElement.getElementCount(); i++) { if (parentElement.getElement(i) == child) { return i; 
1," jmsTemplate = inJmsTemplate; Assert.notNull(jmsTemplate, ""JMS template cannot be null""); Assert.notNull(jmsTemplate.getDefaultDestination(), ""JMS template must have default destination set.""); "," jmsTemplate = inJmsTemplate; Assert.notNull(jmsTemplate, ""JMS template cannot be null""); Assert.notNull(jmsTemplate.getDefaultDestination(), ""JMS template must have default destination set.""); "
1, if(p == null) return; right(p); while((p = p.more) != null) { right(p); for (Parse cell=p.parts; cell != null && cell.more != null; cell = cell.more) { right(cell); markAllCorrect(cell.parts); , if(p == null) return; right(p); while((p = p.more) != null) { right(p); for (Parse cell=p.parts; cell != null && cell.more != null; cell = cell.more) { right(cell); markAllCorrect(cell.parts); 
1," Vector2d vec = laserPistol.getKnockback(true); assertTrue(vec.getX() == new Vector2d(0,0).getX()); assertTrue(vec.getY() == new Vector2d(0,0).getY()); assertTrue(vec.getlength() == 0); "," Vector2d vec = laserPistol.getKnockback(true); assertTrue(vec.getX() == new Vector2d(0,0).getX()); assertTrue(vec.getY() == new Vector2d(0,0).getY()); assertTrue(vec.getlength() == 0); "
1, final ClassLoader previous = Thread.currentThread().getContextClassLoader(); Thread.currentThread().setContextClassLoader(getClass().getClassLoader()); try { delegate.receive(msg); , final ClassLoader previous = Thread.currentThread().getContextClassLoader(); Thread.currentThread().setContextClassLoader(getClass().getClassLoader()); try { delegate.receive(msg); 
1, for (Class<? extends LoadableBoundaryDataSource> loader : loaders) { try { LoadableBoundaryDataSource src = loader.newInstance(); if (name != null && src.isFileSupported(name)) return src; , for (Class<? extends LoadableBoundaryDataSource> loader : loaders) { try { LoadableBoundaryDataSource src = loader.newInstance(); if (name != null && src.isFileSupported(name)) return src; 
1, restoreButton.addActionListener(new ActionListener() { @Override public void actionPerformed(ActionEvent e) { handler.run(); toolBar.remove(restoreButton); toolBar.add(maxButton); , restoreButton.addActionListener(new ActionListener() { @Override public void actionPerformed(ActionEvent e) { handler.run(); toolBar.remove(restoreButton); toolBar.add(maxButton); 
0," FacesContext fc = FacesContext.getCurrentInstance(); String pattern = Application.getMessage(fc, OFFLINE_TITLE); return MessageFormat.format(pattern, property.getDocument().getName()); ", myDialog.addWindowListener(new WindowAdapter(){ public void windowClosing(WindowEvent e) { myWidthOption.setValue(myDialog.getWidth()); myHeightOption.setValue(myDialog.getHeight()); 
0," byte[] bytes; try { ByteArrayOutputStream baos = new ByteArrayOutputStream(text.length() * 2); encoder.encode(text, 0, text.length(), baos); baos.flush(); bytes = baos.toByteArray(); ", switch (parseInt(change)) { case 1: return FreeText; case 2: return DropDown; case 3: return MultipleSelection; case 4: return LargeText; case 5: return DateTime; default: return UNKNOWN; 
0," MyComponent a = new MyComponent(null, ""a""); JButton button = new JButton(""text""); a.add(button); namingStrategy.setTopLevelComponent(a); assertEquals(""text"", namingStrategy.getName(button)); ", switch (featureID) { case ActionsPackage.STATEMENT_WITH_NESTED_BLOCKS__NESTED_BLOCKS: getNestedBlocks().clear(); getNestedBlocks().addAll((Collection<? extends Block>)newValue); return; 
1, ConstantsSummaryBuilder builder = new ConstantsSummaryBuilder( configuration); builder.writer = writer; builder.classDocsWithConstFields = new HashSet<ClassDoc>(); return builder; , ConstantsSummaryBuilder XXXXX = new ConstantsSummaryBuilder( configuration); XXXXX.writer = writer; XXXXX.classDocsWithConstFields = new HashSet<ClassDoc>(); return XXXXX; 
0, VirtualFile file = e.getData(PlatformDataKeys.VIRTUAL_FILE); String fileText = e.getData(PlatformDataKeys.FILE_TEXT); e.getPresentation().setEnabled((fileText != null) && (file != null)); ," StringBuilder sb = new StringBuilder(); sb.append(""tid : "").append(tid) .append(""\n"") .append(""detected_tid: "").append(detected_tid) .append(""\n"") .trimToSize(); return sb.toString(); "
0," String dir = getBucketFolderDir(mountedRoot, bucket); File path = new File(dir); if(!deleteDirectory(path)) throw new OutOfStorageException(""Unable to delete "" + dir + "" for bucket "" + bucket); "," StmUtils.atomic(new TxnVoidCallable() { @Override public void call(Txn tx) throws Exception { boolean result = stack.contains(""foo""); assertFalse(result); assertEquals(""[]"", stack.toString()); "
1," BlockingGetTaskResponseHandler responseHandler = new BlockingGetTaskResponseHandler(); taskService.getTaskByWorkItemId(workItemId, responseHandler); try { responseHandler.waitTillDone(timeout); "," BlockingGetTaskResponseHandler XXXXX = new BlockingGetTaskResponseHandler(); taskService.getTaskByWorkItemId(workItemId, XXXXX); try { XXXXX.waitTillDone(timeout); "
1, if (models.size() == 2) { double pdf0 = models.get(0).pdf(new VectorWritable(instance)); double pdf1 = models.get(1).pdf(new VectorWritable(instance)); return pdf0 / (pdf0 + pdf1); , if (models.size() == 2) { double XXXXX = models.get(0).pdf(new VectorWritable(instance)); double XXXXX = models.get(1).pdf(new VectorWritable(instance)); return XXXXX / (XXXXX + XXXXX); 
1," WidgetAdapter adapter = new WidgetAdapter(); Adaptable gc = adapter.getGCForClient(); String id = gc.getAdapter( IClientObjectAdapter.class ).getId(); assertTrue( id.startsWith( ""gc"" ) ); "," WXXXXXgetAdapter XXXXX = new WXXXXXgetAdapter(); Adaptable XXXXX = XXXXX.getGCForClient(); String XXXXX = XXXXX.getAdapter( IClientObjectAdapter.class ).getId(); assertTrue( XXXXX.startsWith( ""XXXXX"" ) ); "
1," EditorCell emptyCell = null; emptyCell = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, emptyCell, editorContext); return emptyCell; "," EditorCell XXXXX = null; XXXXX = super.createEmptyCell(editorContext); this.installElementCellActions(super.getOwner(), null, XXXXX, editorContext); return XXXXX; "
0," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; ", { int e2 = 5; int i = 1; i *= 287; e2 *= (i + 5); i = e2 * i; if (!(e2 != 10 || i != 43)) { boolean res = true; for (int qq = 0; qq < 10; qq++) { res = !(!(res) || !((i - e2 > qq))); 
1," super.onResume(); if(D) Log.e(TAG, ""+ ON RESUME +""); if (!listenerRegistered) { registerReceiver(BTMListener, new IntentFilter(""com.dic.BTMesh.updatestatus"")); listenerRegistered = true; "," super.onResume(); if(D) Log.e(TAG, ""+ ON RESUME +""); if (!listenerRegistered) { registerReceiver(BTMListener, new IntentFilter(""com.dic.BTMesh.updatestatus"")); listenerRegistered = true; "
0," rootMenus = new HashMap<String, ShadowMenu>(); final List<ModuleInfo> allModules = getCommandService().getModuleService().getModules(); addModules(allModules); subscribeToEvents(eventService); ", float dt = (amplitude * 2f / ENTRIES); int phaseOffset = (int)((float)(oscPhase / (float)360) * ENTRIES); for(int i = 0; i < ENTRIES; i++) { table[i] = (i + phaseOffset) % ENTRIES * dt - amplitude; 
1," String label = ((GenCommonBase)object).getEditPartClassName(); return label == null || label.length() == 0 ? getString(""_UI_GenCommonBase_type"") : getString(""_UI_GenCommonBase_type"") + "" "" + label; "," String XXXXX = ((GenCommonBase)object).getEditPartClassName(); return XXXXX == null || XXXXX.length() == 0 ? getString(""_UI_GenCommonBase_type"") : getString(""_UI_GenCommonBase_type"") + "" "" + XXXXX; "
0," AttributeSet as = sc.createSmallAttributeSet(sc.getEmptySet()); assertTrue(as instanceof SmallAttributeSet); assertEquals(0, as.getAttributeCount()); assertEquals(sc.getEmptySet(), as); ", IEclipsePreferences node = getLoadLevel(); if (node instanceof DefaultPreferences) { DefaultPreferences loader = (DefaultPreferences) node; loader.initializingThread = Thread.currentThread(); 
0," final PCamera camera = new PCamera(); final PPickPath path = new PPickPath(camera, new PBounds(0, 0, 10, 10)); manager.setMouseFocus(path); assertEquals(path, manager.getMouseFocus()); "," int startChar = parcel.readInt(); int endChar = parcel.readInt(); CharPos pos = new CharPos(startChar, endChar); if (mHighlightPosList == null) { mHighlightPosList = new ArrayList<CharPos>(); "
1," LoggerMap.this.mMapView.setSatellite( mSharedPreferences.getBoolean( Constants.SATELLITE, false ) ); LoggerMap.this.mMapView.setTraffic( mSharedPreferences.getBoolean( Constants.TRAFFIC, false ) ); "," LoggerMap.this.mMapView.setSatellite( mSharedPreferences.getBoolean( Constants.SATELLITE, false ) ); LoggerMap.this.mMapView.setTraffic( mSharedPreferences.getBoolean( Constants.TRAFFIC, false ) ); "
0, if ( propDefn != null ) return propDefn.getName( ); if ( path.isEmpty( ) ) return null; Step topStep = path.get( path.size( ) - 1 ); propDefn = topStep.stepPropDefn; return propDefn.getName( ); ," registry.register( Required.class, new AnnotationFieldHandler() { public void checkModel(Annotation fieldAnnotation, Field field, Map<String, Field> allFieldMap) throws ValidationException { "
1," String[] regionCodes = names.getLikelyRegionCodes(); assertTrue(""en locale should have at least 10 likely locales"", regionCodes.length >= 10); assertEquals(""US"", regionCodes[0]); "," String[] regionCodes = names.getLikelyRegionCodes(); assertTrue(""en locale should have at least 10 likely locales"", regionCodes.length >= 10); assertEquals(""US"", regionCodes[0]); "
0, AddRequest addRequest = getDecorated(); Entry entry = addRequest.getEntry(); if ( entry == null ) { throw new IllegalArgumentException( I18n.err( I18n.ERR_04481_ENTRY_NULL_VALUE ) ); ," PelopsException pelopsException = translator.translate(new org.apache.thrift.TApplicationException()); assertEquals(""Translation failed"", ApplicationException.class, pelopsException.getClass()); "
1, List<Runnable> runnables = deferredBindingActions.get(); if (runnables != null) { try { for (Runnable runnable : getDeferredBindingActions()) { if (runnable != null) { try { runnable.run(); , List<Runnable> runnables = deferredBindingActions.get(); if (runnables != null) { try { for (Runnable runnable : getDeferredBindingActions()) { if (runnable != null) { try { runnable.run(); 
1," if (labelProvider == null) { labelProvider = new DecoratingLabelProvider(new TaskElementLabelProvider(true), PlatformUI.getWorkbench() .getDecoratorManager() .getLabelDecorator()); "," if (labelProvider == null) { labelProvider = new DecoratingLabelProvider(new TaskElementLabelProvider(true), PlatformUI.getWorkbench() .getDecoratorManager() .getLabelDecorator()); "
1," Module systemModule = runtime.getModule(); assertNotNull(systemModule); assertEquals(0L, systemModule.getModuleId()); assertEquals(Constants.SYSTEM_MODULE_NAME, systemModule.getSymbolicName()); "," Module XXXXX = runtime.getModule(); assertNotNull(XXXXX); assertEquals(0L, XXXXX.getModuleId()); assertEquals(Constants.SYSTEM_MODULE_NAME, XXXXX.getSymbolicName()); "
1, SessionImplementor session = getLoadContext().getPersistenceContext().getSession(); if ( !loadContexts.hasLoadingCollectionEntries() && localLoadingCollectionKeys.isEmpty() ) { return; , SessionImplementor XXXXX = getLoadContext().getPersistenceContext().getSession(); if ( !loadContexts.hasLoadingCollectionEntries() && localLoadingCollectionKeys.isEmpty() ) { return; 
1, switch (getDBType(em)) { case db2: assertLockTestSQLs(Select + tableLfName + Where + DB2Lock); break; case derby: case oracle: default: assertLockTestSQLs(Select + tableLfName + Where + ForUpdate); , switch (getDBType(em)) { case db2: assertLockTestSQLs(Select + tableLfName + Where + DB2Lock); break; case derby: case oracle: default: assertLockTestSQLs(Select + tableLfName + Where + ForUpdate); 
1, ChildBoxInfo nested = lookForBlockContent(childrenForAnonymous); IdentValue anonDisplay; if (isParentInline(source) && next == IdentValue.TABLE) { anonDisplay = IdentValue.INLINE_TABLE; , ChildBoxInfo nested = lookForBlockContent(childrenForAnonymous); IdentValue anonDisplay; if (isParentInline(source) && next == IdentValue.TABLE) { anonDisplay = IdentValue.INLINE_TABLE; 
1," createModel(); reqif = openReqif(); if (!getEditingDomain().getResourceSet().getResources().isEmpty()) { ReqifMainForm form = new ReqifMainForm(getContainer(), this); addPage(form.getForm()); "," createModel(); reqif = openReqif(); if (!getEditingDomain().getResourceSet().getResources().isEmpty()) { ReqifMainForm form = new ReqifMainForm(getContainer(), this); addPage(form.getForm()); "
0," synchronized ( BlockStorageBootstrapper.class ) { if ( singleton == null ) { singleton = new BlockStorageBootstrapper( ); LOG.info( ""Creating Block Storage Bootstrapper instance."" ); "," super.setDisabledIconAt(index, disabledIcon); final Component comp = getTabComponentAt(index); if (comp instanceof TabComponent) ((TabComponent) comp).setDisabledIcon(disabledIcon); "
0, validateSubstitutionPattern(); validateAccessorClassName(); checkPackageFragment(); validatePropertyFilename(); validatePropertyPackage(); updateStatus(StatusUtil.getMostSevere(fStati)); ," PropertyPath propertyPath = new PropertyPath(property); if (property == null || propertyPath.getPropertyName() == null){ logger.warn(""No property path is provided for parent node UUID {"
1, if (component.getCustomLayoutConstraints() instanceof GridBagConstraints) { final GridBagConstraints gbc = (GridBagConstraints)component.getCustomLayoutConstraints(); return gbc.insets; , if (component.getCustomLayoutConstraints() instanceof GridBagConstraints) { final GridBagConstraints XXXXX = (GridBagConstraints)component.getCustomLayoutConstraints(); return XXXXX.insets; 
0, double c = max - min; step = step / (duration / 2d); if ((step) < 1d) return c / 2d * step * step * step * step + min; return -c / 2d * ((step -= 2d) * step * step * step - 2d) + min; ," switch (eContainerFeatureID) { case ProfilerPackage.PROFILE_ENTRY__CALLER: return eInternalContainer().eInverseRemove(this, ProfilerPackage.PROFILE_ENTRY__CALLEES, ProfileEntry.class, msgs); "
0," ASEMEState state = context.getState(); URI suc = state.getSUC(); URI aip = state.getAIP(); if (aip == null) { aip = suc.trimFileExtension().appendFileExtension(""aip""); state.setAIP(aip); "," IFormElement elementDef = formDef.getElement(qID); String relevant = """"; if(elementDef.hasAdvancedRelevant()){ relevant = elementDef.getAdvancedRelevant(); if(relevant != null){ return relevant; "
1, removeAll(); sarTargetDetails.setSarTarget(sarTarget); sarTargetDetails.setMainFrame(mainFrame); sarTargetDetails.setGpsHandler(gpsHandler); add(sarTargetDetails); generalMenu(false); , removeAll(); sarTargetDetails.setSarTarget(sarTarget); sarTargetDetails.setMainFrame(mainFrame); sarTargetDetails.setGpsHandler(gpsHandler); add(sarTargetDetails); generalMenu(false); 
1," Toolkit toolkit = Toolkit.getDefaultToolkit(); initComponentDefaults(table); if (!Beans.isDesignTime()) { Object defaultLightColor = new ExtWindowsDesktopProperty( new String[]{""win.3d.lightColor"""," Toolkit XXXXX = Toolkit.getDefaultToolkit(); initComponentDefaults(table); if (!Beans.isDesignTime()) { Object XXXXX = new ExtWindowsDesktopProperty( new String[]{""win.3d.lightColor"""
0," if ( newValue == null ) throw new NullPointerException(); if ( aKey.length() == 0 ) throw new IllegalArgumentException(); char[] chars = charsOf( aKey ); add( chars, newValue, 0, chars.length ); ", this.patternTable = createLayoutPatternTable(); createEdgePatternTableEntries(this.patternTable); createNodePatternTableEntries(this.patternTable); createPatternTableFrame(this.patternTable); 
0, Skill1 = comboSkills.getItemAt(1).toString(); Skill2 = comboSkills.getItemAt(2).toString(); Skill3 = comboSkills.getItemAt(3).toString(); Skill4 = comboSkills.getItemAt(4).toString(); ," List<String> xpaths = new ArrayList<String>(); xpaths.add(""note:note""); PreprocessedHtmlPreviewAdapter adapter = new NoteHtmlPreviewAdapter(xpaths); adapter.setAdaptedDocument(doc); return adapter; "
0," mockSystemTimeSource .setTime(getTimeStamp(year, month, day, hour, minute, second, timeZone)); assertEquals(""in session expectation incorrect"", expectedInSession, schedule .isSessionTime()); ", ISelection selection = applicationTree.getSelection(); Object obj = ((IStructuredSelection)selection).getFirstElement(); if (obj instanceof FBXApplication){ editApplication(obj); 
0," int pos=getNearestParticipantIndex(x, diagram); Role ret=null; java.util.List roles=diagram.getScenario().getRole(); if (roles.size() > 0) { if (pos < 0) { ret = (Role)roles.get(0); "," for (Subscription subscription : getSubscriptions()) { FudgeMsg marketData = doSnapshot(subscription.getSecurityUniqueId()); liveDataReceived(subscription.getSecurityUniqueId(), marketData); "
1," dao.detachVmFromTag(existingVmTag.gettag_id(), existingVmTag.getvm_id()); tags_vm_map result = dao.getTagVmByTagIdAndByVmId(existingVmTag.gettag_id(), existingVmTag.getvm_id()); assertNull(result); "," dao.detachVmFromTag(existingVmTag.gettag_id(), existingVmTag.getvm_id()); tags_vm_map XXXXX = dao.getTagVmByTagIdAndByVmId(existingVmTag.gettag_id(), existingVmTag.getvm_id()); assertNull(XXXXX); "
1, dt = (System.currentTimeMillis() - lastTime) * speedMultiplier; dtt = dt/1000; lastTime = System.currentTimeMillis(); time += dtt; activeAI.Step(); for(Obj O:activeObjs){ O.Step(); , dt = (System.currentTimeMillis() - lastTime) * speedMultiplier; dtt = dt/1000; lastTime = System.currentTimeMillis(); time += dtt; activeAI.Step(); for(Obj O:activeObjs){ O.Step(); 
1, if (node != null) { ASTJNode<?> astjNode = (ASTJNode<?>)node; ASTJNode<?> parent = astjNode.getParent(); if (parent != null) { if (parent.remove(astjNode)) { updateObjectToNodeMap(astjNode); , if (node != null) { ASTJNode<?> astjNode = (ASTJNode<?>)node; ASTJNode<?> parent = astjNode.getParent(); if (parent != null) { if (parent.remove(astjNode)) { updateObjectToNodeMap(astjNode); 
0, createHelpWindow(); JHelpNavigator nav=null; for(Enumeration e=jhelp.getHelpNavigators(); e.hasMoreElements();){ nav=(JHelpNavigator)e.nextElement(); if(nav.getNavigatorName().equals(name)){ break; ," EntityManager em = currentEntityManager(); List l = em.createQuery(""Select object(o) from Entity1 o"") .setMaxResults(5) .getResultList(); assertNotNull(l); assertEquals(5, l.size()); endEm(em); "
0," super(game, input, ""basic""); connection = con; map.Add(new Player(input, map, Game.spawns[0][0], Game.spawns[0][1], 0)); map.Add(new Player(con, map, Game.spawns[1][0], Game.spawns[1][1], 1)); ", long startTime = System.currentTimeMillis() + 5000; long fps = 0; while(running) { angle += 2.0f; drawLoop(); Display.update(); if (startTime > System.currentTimeMillis()) { fps++; 
1, SettingsNodeVersion1 settingsNode = getChildNode(name); if (settingsNode != null) { String value = settingsNode.getValue(); try { if (value != null) { return Long.parseLong(value); , SettingsNodeVersion1 XXXXX = getChildNode(name); if (XXXXX != null) { String XXXXX = XXXXX.getValue(); try { if (XXXXX != null) { return Long.parseLong(XXXXX); 
0," String oldHeight = height; height = newHeight; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, ProcessPackage.HUMAN_TASK_TYPE__HEIGHT, oldHeight, height)); ", Button leftButton = (Button)findViewById(R.id.left_button); leftButton.setOnClickListener(new View.OnClickListener() { @Override public void onClick(View v) { mViewSwitcher.switchLeftPage(); 
1," DebuggerInvocationUtil.invokeLater(getProject(), new Runnable() { public void run() { if (!myProgressWindow.isCanceled() && myProgressWindow.isRunning()) { myProgressWindow.setText(text); "," DebuggerInvocationUtil.invokeLater(getProject(), new Runnable() { public void run() { if (!myProgressWindow.isCanceled() && myProgressWindow.isRunning()) { myProgressWindow.setText(text); "
0," int scrollLeft = getElement().getScrollLeft(); if (scrollLeft > 0) { int clientWidth = getElement().getClientWidth(); scrollLock.getStyle().setWidth(scrollLeft + clientWidth, Unit.PX); "," HandlerRegistration registration = addDomHandler(handler, ClickEvent.getType()); m_clickHandlerRegistrations.add(registration); m_clickHandlers.add(handler); return registration; "
0," mFilesData.clear(); checkboxes.clear(); initial_checks = new boolean[files.length]; if (mFilesData.getRowCount() != torrent.getNumFiles()) { mFilesData.resize(torrent.getNumFiles(), 3); ", ActionBar bar = getActionBar(); bar.setDisplayOptions(ActionBar.DISPLAY_SHOW_HOME | ActionBar.DISPLAY_HOME_AS_UP | ActionBar.DISPLAY_SHOW_TITLE); bar.setTitle(Things.getTitle(thingBundle)); 
0," fChanges.clear(); final IPDIMemoryBlock pdiBlock = getPDIBlock(); if (pdiBlock != null) { try { getPDISession().getMemoryManager().removeBlocks(getTasks(), new IPDIMemoryBlock[] { pdiBlock "," if(conversation.isTransient()) { JSFUtility.addErrorMessage(""Conversation is not running! Please add hotel for reservation"", """"); this.reservations.clear(); this.reservationDate = null; "
1," ClassGenerationAction generator = generatorSelector.getGenerator(); if (generator != null) { try { generator.execute(); JOptionPane.showMessageDialog( this.getView(), ""Class generation finished""); "," ClassGenerationAction XXXXX = XXXXXSelector.getGenerator(); if (XXXXX != null) { try { XXXXX.execute(); JOptionPane.showMessageDialog( this.getView(), ""Class generation finished""); "
1," Namespace workflow = (Namespace) asIObject(); if (workflow == null) throw new IllegalArgumentException(""No workflow specified.""); setDirty(true); workflow.setName(rtypes.rstring(namespace)); "," Namespace workflow = (Namespace) asIObject(); if (workflow == null) throw new IllegalArgumentException(""No workflow specified.""); setDirty(true); workflow.setName(rtypes.rstring(namespace)); "
1," super.onContextItemSelected(item); long id = ((AdapterContextMenuInfo) item.getMenuInfo()).id; Log.v(_TAG, ""ctx id:"" + id); switch (item.getItemId()) { case CTX_MENU_DELETE: deleteCategory(id); "," super.onContextItemSelected(item); long XXXXX = ((AdapterContextMenuInfo) item.getMenuInfo()).XXXXX; Log.v(_TAG, ""ctx XXXXX:"" + XXXXX); switch (item.getItemId()) { case CTX_MENU_DELETE: deleteCategory(XXXXX); "
0," final Boolean trimStackTrace = providerConfiguration.getReporterConfiguration().isTrimStackTrace(); return surefireReflector.createForkingReporterFactory( trimStackTrace, originalSystemOut ); ", RecordAndReplayExecution instance = TestRun.getRecordAndReplayForRunningTest(false); if (instance != null) { instance.getCurrentTestOnlyPhase().setCustomErrorMessage(customMessage); 
1, if ( this.equalsColonToken == null && equalsColonToken != null && equalsColonToken.getType() == LdapFilterToken.EXTENSIBLE_EQUALS_COLON ) { this.equalsColonToken = equalsColonToken; return true; , if ( this.equalsColonToken == null && equalsColonToken != null && equalsColonToken.getType() == LdapFilterToken.EXTENSIBLE_EQUALS_COLON ) { this.equalsColonToken = equalsColonToken; return true; 
1," boolean isMatch = false; if(eObject instanceof Class) { Class element = (Class)eObject; if(ElementUtil.getStereotypeApplication(element, ConstraintBlock.class) != null) { isMatch = true; "," boolean isMatch = false; if(eObject instanceof Class) { Class element = (Class)eObject; if(ElementUtil.getStereotypeApplication(element, ConstraintBlock.class) != null) { isMatch = true; "
0," ILaunchConfiguration config = findLaunchConfiguration(declarationToRun, fileToRun, getConfigurationType()); if (config == null) { config = createConfiguration(declarationToRun, fileToRun); "," View manif = new CanvasManifestation(mockParentComponent, new ViewInfo(CanvasManifestation.class,"""",ViewType.OBJECT)) { @Override public ExtendedProperties getViewProperties() { return extProps; "
1," String oldTitle = title; title = newTitle; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, XhtmlPackage.XHTML_EM_TYPE__TITLE, oldTitle, title)); "," String XXXXX = title; title = newTitle; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, XhtmlPackage.XHTML_EM_TYPE__TITLE, XXXXX, title)); "
0, if (_evaluationContext == null) { ConfigurableBeanFactory beanFactory = null; if (applicationContext instanceof ConfigurableBeanFactory) { beanFactory = (ConfigurableBeanFactory) applicationContext; ," StringBuilder sb = new StringBuilder(); sb.append(""{""); if (queueUrl != null) sb.append(""QueueUrl: "" + queueUrl + "", ""); if (entries != null) sb.append(""Entries: "" + entries + "", ""); sb.append("""
1," StringBuilder sb = new StringBuilder(); sb.append(new MHeader().toString()); if (this.eDefaultPackage_SpecifiedPackage.size() > 0) { sb.append(System.getProperty(""line.separator"")); "," StringBuilder XXXXX = new StringBuilder(); XXXXX.append(new MHeader().toString()); if (this.eDefaultPackage_SpecifiedPackage.size() > 0) { XXXXX.append(System.getProperty(""line.separator"")); "
1, ScopeFrame currentScope = this; ArrayList<String> parentNames = new ArrayList<String>(); while (currentScope != null) { parentNames.add(currentScope.oscope.name); currentScope = currentScope.parent; , ScopeFrame XXXXX = this; ArrayList<String> parentNames = new ArrayList<String>(); while (XXXXX != null) { parentNames.add(XXXXX.oscope.name); XXXXX = XXXXX.parent; 
0," final CLIParam logFile = cli.getParam(""-logfile""); if (!logFile.getStringValue().isEmpty()) { final File file = new File(logFile.getStringValue()); if (!file.exists()) { try { file.createNewFile(); "," if (map instanceof CPPTemplateParameterMap) { final ObjectMap omap= ((CPPTemplateParameterMap) map).fMap; for (int i = 0; i < omap.size(); i++) { fMap.put(omap.keyAt(i), omap.getAt(i)); "
0," ProjectDescription projectdescription = createEmptyProject(this._sourcepathxml, KIND_MULTIPLESOURCEFOLDERSPRIMARY); execute(projectdescription.getPrimaryProjectname(), ""get-source-path""); ", int index = indexOf( dockable ); if( index < 0 ) return; DockableHandle handle = handles.dockables().get( index ); if( handle.getTitle() == title ){ handle.setTitle( buttonVersion ); 
0, assert alertDialogPresenter != null; this.alertDialogPresenter = alertDialogPresenter; assert messages != null; this.messages = messages; assert waitWidget != null; this.waitWidget = waitWidget; ," lock.lock(); try { Object[] elements = array; Object old = elements[index]; int len = elements.length; int moved = len - index - 1; if (moved == 0) { array = Arrays.copyOf(elements, len - 1); "
1, for (int upperLayerIndex = deepestLayer - 1; upperLayerIndex >= 1; upperLayerIndex--) { if (graph.calculateTotalNumberOfCrossings() != 0) { sortLayerByOutgoingEdgeBarycenter(upperLayerIndex); , for (int XXXXX = deepestLayer - 1; XXXXX >= 1; XXXXX--) { if (graph.calculateTotalNumberOfCrossings() != 0) { sortLayerByOutgoingEdgeBarycenter(XXXXX); 
1, if ((url != null && url.length() > 0) || (host != null && host.length() > 0 && port > 0)) { remoteRadioButton.setSelected(true); if (url != null && url.length() > 0) { remoteTF.setText(url); , if ((url != null && url.length() > 0) || (host != null && host.length() > 0 && port > 0)) { remoteRadioButton.setSelected(true); if (url != null && url.length() > 0) { remoteTF.setText(url); 
0," Element entryEl = ContentDataXPathCreator.ensurePath( dataEntrySetEl, stripContentdataWhenNotBlockGroup( entry.getConfig() ) ); entryEl.setAttribute( ""key"", entry.getContentKey().toString() ); "," try { if (!StoreManager.getRecoveryStore().remove_committed(getUid(), getType())) return ""Attempt to remove transaction failed""; else w.probe(); return ""Transaction successfully removed""; "
1," super.printStackTrace( out ); out.println( ""Nested exceptions to follow:\n"" ); boolean isFirst = true; for ( Throwable throwable : nestedExceptions ) { if ( isFirst ) { isFirst = false; "," super.printStackTrace( out ); out.println( ""Nested exceptions to follow:\n"" ); boolean XXXXX = true; for ( Throwable throwable : nestedExceptions ) { if ( XXXXX ) { XXXXX = false; "
0," final Task task = task(name); final Map<String, ?> options = singletonMap(Task.TASK_NAME, name); context.checking(new Expectations() {{ one(taskFactory).createTask(options); will(returnValue(task)); ", for(int index = 0; index < getConditionCount(); index++){ Condition condition = getConditionAt(index); if(condition.getQuestionId() == questionDef.getId()){ removeCondition(condition); index++; 
0, RefactoringTestFileModificationValidator validator= (RefactoringTestFileModificationValidator) fgValidators.get(project); if (validator != null) { return validator.getValidatedEditPaths(); , return (editingContext.getEObject() instanceof Operand) && (OperandOperandPropertiesEditionComponent.OPERAND_PART.equals(part) || MetadataCptPropertiesEditionComponent.METADATAS_PART.equals(part)); 
1, super.setFullScreenMode(mode); DisplayInfoSingleton displayInfo = DisplayInfoSingleton.getInstance(); displayInfo.setLastHeight(this.getHeight()); displayInfo.setLastWidth(this.getWidth()); , super.setFullScreenMode(mode); DisplayInfoSingleton XXXXX = DisplayInfoSingleton.getInstance(); XXXXX.setLastHeight(this.getHeight()); XXXXX.setLastWidth(this.getWidth()); 
0, adapterIsUsedByScript.clear(); calledByScriptMap.clear(); callsScriptMap.clear(); includedByScriptMap.clear(); includesScriptMap.clear(); usesAdapter.clear(); scriptList.clear(); , Books books = new Books(); List<Book> list = new ArrayList<Book>(); CustomEntryReader entryReader = new CustomEntryReader(); for (Entry e : element.getEntries()) { list.add(entryReader.readFrom(e)); 
0," ParsedLoansDto result = null; CommonsMultipartFile file = importLoansFormBean.getFile(); InputStream is = null; if (file == null) { throw new MifosRuntimeException(""File cannot be null""); "," String label = ((FeatureChange)object).getFeatureName(); return label == null || label.length() == 0 ? getString(""_UI_FeatureChange_type"") : getString(""_UI_FeatureChange_type"") + "" "" + label; "
1, switch (featureID) { case RifPackage.ACCESSPOLICIES_TYPE__GROUP: return group != null && !group.isEmpty(); case RifPackage.ACCESSPOLICIES_TYPE__ACCESSPOLICY: return !getACCESSPOLICY().isEmpty(); , switch (featureID) { case RifPackage.ACCESSPOLICIES_TYPE__GROUP: return group != null && !group.isEmpty(); case RifPackage.ACCESSPOLICIES_TYPE__ACCESSPOLICY: return !getACCESSPOLICY().isEmpty(); 
0," this (order.getCtx(), 0, order.get_TrxName()); if (order.get_ID() == 0) throw new IllegalArgumentException(""Header not saved""); setC_Order_ID (order.getC_Order_ID()); setOrder(order); ", boolean result = super.equals(o); result = (result)&&(o != null); result = (result)&&(o instanceof FusionStatEffectId); result = (result)&&(((FusionStatEffectId) o).slot == slot); return result; 
1," if(0 < refCount) { synchronized(handle2Lock) { refCount--; if(0 == refCount) { if(DEBUG || TRACE_LOCK) { System.err.println(""SharedResourceToolkitLock.dispose() * REMOV *: ""+this); "," if(0 < refCount) { synchronized(handle2Lock) { refCount--; if(0 == refCount) { if(DEBUG || TRACE_LOCK) { System.err.println(""SharedResourceToolkitLock.dispose() * REMOV *: ""+this); "
0," if (byteStream != null) throw new IllegalStateException(""getWriter is called after getOutputStream was already called.""); if (writer == null) writer = new StringWriter(); return writer; ", this.is = is; this.ctype = ctype; this.disp = disp; if (request != null) { rqMethod = request.getMethod(); if (request.getEntity() != null) { rqEntity = request.getEntity().toString(); 
0," TextWebSocketFrame textFrame = (TextWebSocketFrame) frame; _logger.debug(""Subscribe WebSocket Received Message:"" + textFrame.getText()); messagesReceived.add(textFrame.getText()); "," double[] elem; for (int r = firstRow; r < lastRow; r++) { for (int c = 0; c < cols; c++) { elem = X.getQuick(r, c); if ((float) elem[0] >= threshold) { px[c + cols * r] = (float) elem[0]; "
1," ArgumentChecker.notNull(request, ""request""); List<ObjectId> ids = request.getPositionObjectIds(); if (ids == null || ids.isEmpty()) { return getDefaultDelegate().search(request); "," ArgumentChecker.notNull(request, ""request""); List<ObjectId> ids = request.getPositionObjectIds(); if (ids == null || ids.isEmpty()) { return getDefaultDelegate().search(request); "
0, ShapeStyle ss = getShapeStyles().get(c); if (ss==null && !TargetRuntime.DEFAULT_RUNTIME_ID.equals(id)) { ss = TargetRuntime.getDefaultRuntime().getShapeStyle(c); if (ss!=null) return ss; ," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (value: ""); result.append(value); result.append(')'); return result.toString(); "
1," boolean kerning = font.hasKerning(); MinOptMax wordIPD = MinOptMax.ZERO; if (LOG.isDebugEnabled()) { LOG.debug ( ""PW: ["" + thisStart + "","" + lastIndex + ""]: {"" + "" -M"" + "", level = "" + level + "" "," boolean kerning = font.hasKerning(); MinOptMax wordIPD = MinOptMax.ZERO; if (LOG.isDebugEnabled()) { LOG.debug ( ""PW: ["" + thisStart + "","" + lastIndex + ""]: {"" + "" -M"" + "", level = "" + level + "" "
1, final Boolean result; if (element != null && element instanceof State) { final State state = (State) element; result = state.isInitialized() ? Boolean.valueOf(state .isInvariantPreserved()) : null; , final Boolean result; if (element != null && element instanceof State) { final State XXXXX = (State) element; result = XXXXX.isInitialized() ? Boolean.valueOf(XXXXX .isInvariantPreserved()) : null; 
1, Medium medium = new Medium(); medium.setStorageID(storageID); medium.setName(name); medium.setAuthor(author); medium.setGenre(gengre); medium.setPrice(price); medium.setType(type); return medium; , Medium medium = new Medium(); medium.setStorageID(storageID); medium.setName(name); medium.setAuthor(author); medium.setGenre(gengre); medium.setPrice(price); medium.setType(type); return medium; 
0," cfQueryResultData query = new cfQueryResultData( new String[]{""subject"",""id"",""rxddate"",""sentdate"",""from"",""to"",""cc"",""bcc"",""size"",""lines"",""answered"",""deleted"",""draft"",""flagged"",""recent"",""seen"""," String sitePath = request.getSitePath(); if (sitePath != null && !"""".equals(sitePath)) { String fullPath = sitePath; if (location.startsWith(""/"")) { fullPath = fullPath + location; "
1," if (v.equals(""0"")) return ERecordType.NODE; if (v.equals(""1"")) return ERecordType.EXIT_ALLOWED; if (v.equals(""2"")) return ERecordType.HUB; throw new IllegalStateException(""uknown record type""); "," if (v.equals(""0"")) return ERecordType.NODE; if (v.equals(""1"")) return ERecordType.EXIT_ALLOWED; if (v.equals(""2"")) return ERecordType.HUB; throw new IllegalStateException(""uknown record type""); "
0," String oldType = type; type = newType; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, Bpmn2Package.EXTENSION_ATTRIBUTE_DEFINITION__TYPE, oldType, type)); ", for (AccountPenaltiesEntity accountPenaltyEntity : this.getAccountPenalties()) { if (accountPenaltyEntity.getPenalty().getPenaltyId().equals(penaltyId)) { return accountPenaltyEntity; 
0," Closure closure = HelperUtil.returns('a'); final File file = new File(""1""); collection.from(closure); context.checking(new Expectations() {{ one(resolverMock).resolve('a'); will(returnValue(file)); "," return ""ContainerRecord [getName()="" + getName() + "", getUuid()="" + getUuid() + "", getPicture()="" + getPicture() + "", getDescription()="" + getDescription() + "", deepCopy()="" + deepCopy() + ""]""; "
1," ArgumentChecker.notNull(uniqueId, ""uniqueId""); URI uri = DataMarketDataSnapshotSourceResource.uriGet(getBaseUri(), uniqueId); return accessRemote(uri).get(StructuredMarketDataSnapshot.class); "," ArgumentChecker.notNull(uniqueId, ""uniqueId""); URI XXXXX = DataMarketDataSnapshotSourceResource.XXXXXGet(getBaseUri(), uniqueId); return accessRemote(XXXXX).get(StructuredMarketDataSnapshot.class); "
1," super.init(context, req, res); if (m_configContent == null) { try { CmsFile file = getCmsObject().readFile(configUri); m_configContent = CmsXmlContentFactory.unmarshal(getCmsObject(), file); "," super.init(context, req, res); if (m_configContent == null) { try { CmsFile XXXXX = getCmsObject().readFile(configUri); m_configContent = CmsXmlContentFactory.unmarshal(getCmsObject(), XXXXX); "
1, for( QueryResult result : queryResults ) { Iterator<ResultBinding> iterator = result.iterator(); if( !iterator.hasNext() ) return false; iterators.add( iterator ); bindings.add( iterator.next() ); , for( QueryResult result : queryResults ) { Iterator<ResultBinding> iterator = result.iterator(); if( !iterator.hasNext() ) return false; iterators.add( iterator ); bindings.add( iterator.next() ); 
1," try { final String queryString = ""select count(a.id) from AuditLog a""; return ((Integer) HibernateUtilHis.getSession().createQuery(queryString).list().iterator().next()).intValue(); "," try { final String XXXXX = ""select count(a.id) from AuditLog a""; return ((Integer) HibernateUtilHis.getSession().createQuery(XXXXX).list().iterator().next()).intValue(); "
1, switch (value) { case DEFAULT_VALUE: return DEFAULT; case ACTOR_VALUE: return ACTOR; case COUNT_VALUE: return COUNT; case MAPPER_VALUE: return MAPPER; case NOTEMPTY_VALUE: return NOTEMPTY; , switch (value) { case DEFAULT_VALUE: return DEFAULT; case ACTOR_VALUE: return ACTOR; case COUNT_VALUE: return COUNT; case MAPPER_VALUE: return MAPPER; case NOTEMPTY_VALUE: return NOTEMPTY; 
1," final SimpleDateFormat formatter = new SimpleDateFormat(""mm:ss.SS"", Locale.getDefault()); final Date currentDate = new Date(); final String dateStr = formatter.format(currentDate); return dateStr; "," final SimpleDateFormat XXXXX = new SimpleDateFormat(""mm:ss.SS"", Locale.getDefault()); final Date XXXXX = new Date(); final String XXXXX = XXXXX.format(XXXXX); return XXXXX; "
0," PoulpeBranch branch = new PoulpeBranch(""some branch""); branch.setId(15L); for (int i = 0; i < 10; i++) { section.addOrUpdateBranch(new PoulpeBranch(RandomStringUtils.random(10))); "," if (resource == null || resource.length() <= 0) return """"; if (name == null || name.length() <= 0) return """"; Properties properties = getProperties(resource); if (properties == null) { return """"; "
1," if (eIsProxy()) return super.toString(); StringBuffer result = new StringBuffer(super.toString()); result.append("" (group1: ""); result.append(group1); result.append(')'); return result.toString(); "," if (eIsProxy()) return super.toString(); StringBuffer XXXXX = new StringBuffer(super.toString()); XXXXX.append("" (group1: ""); XXXXX.append(group1); XXXXX.append(')'); return XXXXX.toString(); "
0, r.keyPress(KeyEvent.VK_SHIFT); r.keyPress(KeyEvent.VK_META); for (int i=0; i<PRESS_COUNT; i++) { r.delay(100); r.keyPress(KeyEvent.VK_M); r.delay(100); r.keyRelease(KeyEvent.VK_M); ," BerkeleyDbTicketRegistryConcurrencyTests testCase = new BerkeleyDbTicketRegistryConcurrencyTests( ""testBasicFunctionality""); return new BerkleyDbTicketRegistryTestSetup(new LoadTest(testCase, 100)); "
1," super(""wizardPage""); setTitle(""New CFML Template""); setDescription(""New CFML Template wizard.""); this.selection = selection; this.templateSnippetFileFilter = new TemplateSnippetFileFilter(); "," super(""wizardPage""); setTitle(""New CFML Template""); setDescription(""New CFML Template wizard.""); this.selection = selection; this.templateSnippetFileFilter = new TemplateSnippetFileFilter(); "
1," assertThat(factory.create(""1""), is(Double.valueOf(1))); assertThat(factory.create(""-1.0""), is(Double.valueOf(-1.0d))); assertThat(factory.create(""100.000101""), is(Double.valueOf(100.000101d))); "," assertThat(factory.create(""1""), is(Double.valueOf(1))); assertThat(factory.create(""-1.0""), is(Double.valueOf(-1.0d))); assertThat(factory.create(""100.000101""), is(Double.valueOf(100.000101d))); "
0, if (myChangeInfo instanceof JavaChangeInfoImpl) { return myChangeInfo.isExceptionSetOrOrderChanged() && !((JavaChangeInfoImpl)myChangeInfo).propagateExceptionsMethods.contains(caller); ," try { log.debug(""Testing list members - all null""); List<MemberResponseInfo> content = mSvc.listMembers(listId, MemberStatus.subscribed, null, null, null); log.debug(""Lists Content: {"
0," Object form = validator.getParameterValue(org.apache.commons.validator.Validator.BEAN_PARAM); String value = null; boolean required = false; try { value = evaluateBean(bean, field); ", AsdocRoot root = getRoot(); if (root != null) { String base = root.getBaseUri(); String url = root.getParseType().getUrlHelper().paramUrl(this); if (base != null && url != null) return base + url; 
1," assertTrue(""New stack is empty"", stack.empty()); assertEquals(""New stack has size zero"", stack.size(), 0); try { stack.peek(); fail(""peek() should have thrown EmptyStackException""); "," assertTrue(""New stack is empty"", stack.empty()); assertEquals(""New stack has size zero"", stack.size(), 0); try { stack.peek(); fail(""peek() should have thrown EmptyStackException""); "
1," LOG.debug(""rearranger.writeExternal()""); final Element our_element = new Element(COMPONENT_NAME); settings.writeExternal(our_element); element.getChildren().clear(); element.addContent(our_element); "," LOG.debug(""rearranger.writeExternal()""); final Element XXXXX = new Element(COMPONENT_NAME); settings.writeExternal(XXXXX); element.getChildren().clear(); element.addContent(XXXXX); "
0, try { File f = new File(fileName); Document dom = null; try { DocumentBuilderFactory dbf = DocumentBuilderFactory .newInstance(); DocumentBuilder db = dbf.newDocumentBuilder(); dom = db.parse(f); , request(4); fPos += 4; int p= fPos; fBuffer[--p]= (byte) (value); value >>= 8; fBuffer[--p]= (byte) (value); value >>= 8; fBuffer[--p]= (byte) (value); value >>= 8; fBuffer[--p]= (byte) (value); 
0, return new Statement() { @Override public void evaluate() throws Throwable { folder.create(); try { createDirs(); if (copyDefaults) { deployMainDist(); deployTestDist(); deployRuntimeLibrary(); , final MenuManager menuManager = new MenuManager(); viewer.getControl().setMenu (menuManager.createContextMenu(viewer.getControl())); EdnaActorActions.createInputActions(menuManager); 
0, boolean deleted = false; if (item != null) { int index = this.items.indexOf(item); if (index == this.items.size() - 1) { deleted = ((SimpleListProperty) this.itemsProperty()).remove(item); ," StringBuffer sb = new StringBuffer(); while (true) { int idx = s.indexOf(oldstr); if (idx<0) break; sb.append(s.substring(0, idx)); s = s.substring(idx+oldstr.length()); sb.append(newstr); "
0, this.matchers.get(patternFqn).dispose(); this.matchers.remove(patternFqn); if (QueryExplorer.getInstance() != null) { QueryExplorer.getInstance().getMatcherTreeViewer().refresh(this); ," LogLog.debug(""Stopping background thread""); requestedState = ThreadState.STOPPED; synchronized (waitLock) { LogLog.debug(""Loggly: Waking background thread up""); waitLock.notify(); "
0," StringBuffer sb=new StringBuffer(); if(type==EvPixelsType.INT) { for(int i=0;i<getHeight();i++) { for(int j=0;j<getWidth();j++) sb.append(arrayI[i*getWidth()+j]+""\t""); sb.append(""\n""); "," this.chain = chain; format.put(OutputKeys.METHOD, ""xml""); format.put(OutputKeys.OMIT_XML_DECLARATION, ""yes""); format.put(OutputKeys.ENCODING, ""UTF-8""); format.put(OutputKeys.INDENT, ""yes""); "
1, final int prime = 31; int result = 1; result = prime * result + hAlign; result = prime * result + ((target == null) ? 0 : target.hashCode()); result = prime * result + vAlign; return result; , final int XXXXX = 31; int XXXXX = 1; XXXXX = XXXXX * XXXXX + hAlign; XXXXX = XXXXX * XXXXX + ((target == null) ? 0 : target.hashCode()); XXXXX = XXXXX * XXXXX + vAlign; return XXXXX; 
1," assertEquals(""_sahi.schedule(\""_sahi.setServerVar('abc', \\\""$url\\\"");\"", \""scrName&n=23\"");\r\nabc = _sahi.getServerVar('abc');\r\n"", testScript.processSet(""_set(abc, \""$url\"")"", 23)); "," assertEquals(""_sahi.schedule(\""_sahi.setServerVar('abc', \\\""$url\\\"");\"", \""scrName&n=23\"");\r\nabc = _sahi.getServerVar('abc');\r\n"", testScript.processSet(""_set(abc, \""$url\"")"", 23)); "
0," givenNoConstraintsViolated(); presenter.save(); verify(view, never()).validationFailure(any(ValidationResult.class)); verify(topicTypeService).saveOrUpdate(any(TopicType.class)); "," AddTriggerPanel.this.commandField.setText( MoodManager.getDefaultAction( AddTriggerPanel.this.typeSelect.getSelectedType(), (String) anObject ) ); super.setSelectedItem( anObject ); "
0, KXmlParser parser = new KXmlParser(); ArrayList extList = new ArrayList(); File[] extensions = mDirectory.listFiles(new FileFilter() { public boolean accept(File file) { return file.isDirectory(); , ChildBoxInfo nested = lookForBlockContent(childrenForAnonymous); IdentValue anonDisplay; if (isParentInline(source) && next == IdentValue.TABLE) { anonDisplay = IdentValue.INLINE_TABLE; 
1, switch (featureID) { case GMFGenPackage.COLOR_ATTRIBUTES__FOREGROUND_COLOR: return getForegroundColor(); case GMFGenPackage.COLOR_ATTRIBUTES__BACKGROUND_COLOR: return getBackgroundColor(); , switch (featureID) { case GMFGenPackage.COLOR_ATTRIBUTES__FOREGROUND_COLOR: return getForegroundColor(); case GMFGenPackage.COLOR_ATTRIBUTES__BACKGROUND_COLOR: return getBackgroundColor(); 
0," sprite.setSize(w, h); sprite.setOrigin(w * cx, h * cy); sprite.setPosition(x - sprite.getOriginX(), y - sprite.getOriginY()); sprite.setRotation(angle); sprite.draw(spriteBatch); ", int res = 0; for (int i = 0; i < data.size(); i++) { Double d = data.get(i); if ((inclusive && d >= minRange && d <= maxRange) || (!inclusive && d > minRange && d < maxRange)) { res++; 
0," String strFullName = getTypeName(); if( strFullName != null ) { final JavaPsiFacade facade = JavaPsiFacade.getInstance( getProject() ); return facade.findClass( strFullName, getResolveScope() ); ", int hash = 17; hash = hash * 31 + depth; hash = hash * 31 + managedVersions.hashCode(); hash = hash * 31 + managedScopes.hashCode(); hash = hash * 31 + managedExclusions.hashCode(); return hash; 
0," if (CallOrConversionReference.MATCHER.accepts(expression) || BuiltinCallOrConversionReference.MATCHER.accepts(expression)) { tryToResolveReference(expression, expression.getText()); ", if(response instanceof DoctorProxy){ Log.info(((DoctorProxy) response).getName()); init((DoctorProxy) response); initOsceTable((DoctorProxy) response); initRoleTable((DoctorProxy) response); 
0, IVRChannelMapping ivrChannelMappingFromDb = findByPhoneNumberPattern(ivrChannelMapping.getPhoneNumberPattern()); if (ivrChannelMappingFromDb == null) { super.add(ivrChannelMapping); ," int len = attribSize[n]; float[] tmp = new float[len * size]; beginUpdateAttributes(n); attributes.get(tmp); saveFloatArrayToBinary(filename, tmp, size, len, len); endUpdateAttributes(); "
1," Result testResult= getTestResult(false); if (testResult == Result.ERROR || testResult == Result.FAILURE) { return new FailureTrace( testCase.getErrorStackTrace(), testCase.getErrorDetails(), null ); "," Result testResult= getTestResult(false); if (testResult == Result.ERROR || testResult == Result.FAILURE) { return new FailureTrace( testCase.getErrorStackTrace(), testCase.getErrorDetails(), null ); "
0, if (!m_enabled && enabled) { List<ClickHandler> handlers = new ArrayList<ClickHandler>(m_clickHandlers); m_clickHandlers.clear(); for (ClickHandler handler : handlers) { addClickHandler(handler); , final EClass eclass = EcoreFactory.eINSTANCE.createEClass(); eclass.setName(name); EList<EClassifier> _eClassifiers = epkg.getEClassifiers(); _eClassifiers.add(eclass); return eclass; 
1, Track t = new Track(); t.setId(id); t.setLikes(likes); t.setDislikes(dislikes); t.setSkips(skips); t.setPlays(plays); t.setLastPlayed(new DateTime().minusHours(5).toDate()); return t; , Track t = new Track(); t.setId(id); t.setLikes(likes); t.setDislikes(dislikes); t.setSkips(skips); t.setPlays(plays); t.setLastPlayed(new DateTime().minusHours(5).toDate()); return t; 
1, SSLParameters sslparams = context.getDefaultSSLParameters(); switch (certAuthMode) { case NEED: sslparams.setNeedClientAuth(true); break; case WANT: sslparams.setWantClientAuth(true); break; , SSLParameters XXXXX = context.getDefaultSSLParameters(); switch (certAuthMode) { case NEED: XXXXX.setNeedClientAuth(true); break; case WANT: XXXXX.setWantClientAuth(true); break; 
0," initialCaretPosition = textArea.getCaretPosition(); int layoutCaretPosition = initialCaretPosition; try { textArea.getDocument().insertString(layoutCaretPosition, ""\u3000"", null); ", double sum = 0; for (int i = 0; i < n; ++i) { double innerSum = 0; for (int j = 0; j < 4; ++j) { innerSum += (input.doubleValueOf(j) - A[i][j]) * (input.doubleValueOf(j) - A[i][j]); 
0, WebApplication ghostWebApp = null; OMElement webAppElm; try { InputStream xmlInputStream = new FileInputStream(ghostFile); webAppElm = new StAXOMBuilder(xmlInputStream).getDocumentElement(); , super(delegate); this.taxonFactory = taxonFactory; this.taxonParser = taxonParser; this.sciNameKey = sciNameKey; this.commonNameKey = commonNameKey; this.ncbiTaxonKey = ncbiTaxonKey; 
1," ForumActivity parent = (ForumActivity) getActivity(); parent.openThread( new Intent().putExtra( ""threadId"", id ).putExtra( ""threadTitle"", ((ForumThreadData) v.getTag()).getTitle() ) ); "," ForumActivity XXXXX = (ForumActivity) getActivity(); XXXXX.openThread( new Intent().putExtra( ""threadId"", id ).putExtra( ""threadTitle"", ((ForumThreadData) v.getTag()).getTitle() ) ); "
1, final ChannelCharacter player = c.getPlayer(); if (this.getPosition().distanceSq(player.getPosition()) > 22500) { player.getCheatTracker().registerOffense(CheatingOffense.USING_FARAWAY_PORTAL); , final ChannelCharacter XXXXX = c.getPlayer(); if (this.getPosition().distanceSq(XXXXX.getPosition()) > 22500) { XXXXX.getCheatTracker().registerOffense(CheatingOffense.USING_FARAWAY_PORTAL); 
0," try { URL installURL = new URL(getDefault().getDescriptor().getInstallURL(), path.toString()); URL localURL = Platform.asLocalURL(installURL); return new File(localURL.getFile()); "," boolean[][] input = new boolean[ 100 ][ 100 ]; int[][] expected = new int[ 100 ][ 100 ]; for ( int i = 0; i < input.length; i++ ) { Arrays.fill( input[ i ], true ); Arrays.fill( expected[ i ], 1 ); "
1, InputPin pin = UMLFactory.eINSTANCE.createInputPin(); if(operation != null) { Element owningType = operation.getOwner(); if(owningType instanceof Type) { pin.setType((Type)owningType); , InputPin XXXXX = UMLFactory.eINSTANCE.createInputPin(); if(operation != null) { Element XXXXX = operation.getOwner(); if(XXXXX instanceof Type) { XXXXX.setType((Type)XXXXX); 
1," BansheeServer s = null; Cursor cursor = getDb().query(DB.TABLE_NAME, DB.ALL_COLUMNS, DB.ID + ""="" + id, null, null, null, null); if (cursor.moveToFirst()) { s = fillFromCursor(cursor); "," BansheeServer s = null; Cursor cursor = getDb().query(DB.TABLE_NAME, DB.ALL_COLUMNS, DB.ID + ""="" + id, null, null, null, null); if (cursor.moveToFirst()) { s = fillFromCursor(cursor); "
1," assertEquals(MimeUtil.getFirstMimeType(""text/html, application/xml"").toString(), ""text/html""); assertEquals(MimeUtil.getFirstMimeType(""text/plain, application/xml"").toString(), ""text/plain""); "," assertEquals(MimeUtil.getFirstMimeType(""text/html, application/xml"").toString(), ""text/html""); assertEquals(MimeUtil.getFirstMimeType(""text/plain, application/xml"").toString(), ""text/plain""); "
1, NullStorageLargeServerMessage largeMessage = new NullStorageLargeServerMessage(); largeMessage.copyHeadersAndProperties(message); largeMessage.setMessageID(id); return largeMessage; , NullStorageLargeServerMessage XXXXX = new NullStorageLargeServerMessage(); XXXXX.copyHeadersAndProperties(message); XXXXX.setMessageID(id); return XXXXX; 
0," lombok.ast.Continue cnt = new lombok.ast.Continue(); if (node.label != null) cnt.astLabel(toIdentifier(node.label, node.sourceStart, node.sourceEnd)); set(node, setPosition(node, cnt)); "," List to_cancel; synchronized( initiators ){ LinkedList requests = (LinkedList)initiators.remove( initiator ); if ( requests == null ){ Debug.out( ""initiator not present"" ); return; "
0, int total = 0; for (ISubeffect subeffect : this) { Upgrade upgrade = (Upgrade) subeffect; total += subeffect.isLearned() && !subeffect.isCreationLearned() ? upgrade.getXPCost() : 0; , EntityCacheUtil.removeCache(MDRActionImpl.class.getName()); FinderCacheUtil.removeCache(FINDER_CLASS_NAME_ENTITY); FinderCacheUtil.removeCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION); 
1, Collection disjointClasses = cls.getDisjointClasses(); for (Iterator it = disjointClasses.iterator(); it.hasNext();) { RDFSClass disjointClass = (RDFSClass) it.next(); insertRow(disjointClass); , Collection XXXXX = cls.getDisjointClasses(); for (Iterator XXXXX = XXXXX.XXXXXerator(); XXXXX.hasNext();) { RDFSClass XXXXX = (RDFSClass) XXXXX.next(); insertRow(XXXXX); 
0," super( ""Could not transfer metadata "" + metadata + getString( "" from/to "", repository ) + getMessage( "": "", cause ), cause ); this.metadata = metadata; this.repository = repository; "," Builder builder = new Builder(""issue.comment.create.VIEW""); builder.repo(repoId); builder.add(EXTRA_ISSUE_NUMBER, issueNumber); builder.add(EXTRA_USER, user); return builder.toIntent(); "
1," String oldType = type; type = newType; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, PapyrustableinstancePackage.PAPYRUS_TABLE_INSTANCE__TYPE, oldType, type)); "," String XXXXX = type; type = newType; if (eNotificationRequired()) eNotify(new ENotificationImpl(this, Notification.SET, PapyrustableinstancePackage.PAPYRUS_TABLE_INSTANCE__TYPE, XXXXX, type)); "
0," int w = 1024; int h = 768; BufferedImage img = new BufferedImage(w, h, BufferedImage.TYPE_INT_RGB); Graphics2D g = img.createGraphics(); Color[] colors = { Color.red, Color.green, Color.blue "," return new DefaultConnectionFactory(getOperationQueueLength(), getReadBufferSize(), getHashAlgorithm()) { @Override public long getOperationTimeout() { return getOperationTimeoutMillis(); "
1," List result = range.step(1); assertTrue(""too many elements"", result.isEmpty()); result.add(new Integer(1)); result = range.step(1); assertTrue(""too many elements"", result.isEmpty()); "," List XXXXX = range.step(1); assertTrue(""too many elements"", XXXXX.isEmpty()); XXXXX.add(new Integer(1)); XXXXX = range.step(1); assertTrue(""too many elements"", XXXXX.isEmpty()); "
1," String version = System.getProperty(""java.version""); String[] numbers = version.split(""\\.""); if (Integer.valueOf(numbers[0]) > 1 || Integer.valueOf(numbers[1]) > 5) { return true; "," String XXXXX = System.getProperty(""java.XXXXX""); String[] numbers = XXXXX.split(""\\.""); if (Integer.valueOf(numbers[0]) > 1 || Integer.valueOf(numbers[1]) > 5) { return true; "
0, fTree.getControl().setRedraw(false); fTree.removeFilter(fSelectedOnlyFilter); fTree.setAllChecked(state); if (fFilterButton.getSelection()) { fTree.addFilter(fSelectedOnlyFilter); , switch (type) { case BUILD: return allyBuild; case DESTROY: return allyDestroy; case SWITCH: return allySwitch; case ITEM_USE: return allyItemUse; default: throw new UnsupportedOperationException(); 
0," toolbar.addSeparator(); MusicDatabaseActionProperties properties = new MusicDatabaseActionProperties(resources); toolbar.addTools(StartDatabaseAction.createToolAction(resources, model, properties)); ", if (type.equals(DimensionUnitOfMeasureType.CENTIMETERS)) { dimension = UnitOfMeasureUtil.convertFeetToInches(UnitOfMeasureUtil.convertMetersToFeet(dimension.multiply(BigDecimal.valueOf(0.01)))); 
1, StringBuffer packedString = new StringBuffer(); for (int i=0; i < source.length(); i++) { char currCh; if (!Character.isWhitespace(currCh = source.charAt(i))) { packedString.append(currCh); , StringBuffer XXXXX = new StringBuffer(); for (int i=0; i < source.length(); i++) { char currCh; if (!Character.isWhitespace(currCh = source.charAt(i))) { XXXXX.append(currCh); 
1, mUpdateMonitor.removeCallback(this); mLockPatternUtils = null; mUpdateMonitor = null; mCallback = null; mLockscreenWallpaperUpdater.cleanUp(); mLockscreenInfo.cleanUp(); mMusicWidget.cleanUp(); , mUpdateMonitor.removeCallback(this); mLockPatternUtils = null; mUpdateMonitor = null; mCallback = null; mLockscreenWallpaperUpdater.cleanUp(); mLockscreenInfo.cleanUp(); mMusicWidget.cleanUp(); 
0," for (int val : EnumCompat.GetIntValues(enumerationType)) { String ValName = EnumCompat.GetName(enumerationType, val).toUpperCase(); try { mEnumValues.put(ValName, val); mVerbs.put(ValName, ValName); ", Validate.notEmpty(geonamesFeatureClass); Validate.notEmpty(geonamesFeatureCode); this.geonamesFeatureClass = geonamesFeatureClass; this.geonamesFeatureCode = geonamesFeatureCode; 
0, if (!ApplicationManager.getApplication().isUnitTestMode() && !ApplicationManager.getApplication().isHeadlessEnvironment()) { ((ActionManagerImpl)ActionManager.getInstance()).preloadActions(); , for (int i = 0; i < fieldSelection.size(); ++i) { FormItem formField = fieldSelection.get(i); DummyItemView itemView = DummyItemViewFactory.create(formField); itemView.inline(form); 
1," for (String element : handler.getBypassList()) { if (Config.DEBUG) _log.log(Level.FINE, ""Adding handler for command "" + element); _datatable.put(element.toLowerCase().hashCode(), handler); "," for (String element : handler.getBypassList()) { if (Config.DEBUG) _log.log(Level.FINE, ""Adding handler for command "" + element); _datatable.put(element.toLowerCase().hashCode(), handler); "
1, NetworkInfo info = (NetworkInfo) ((ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE)).getActiveNetworkInfo(); if (info == null || !info.isConnected()) { return false; , NetworkInfo XXXXX = (NetworkInfo) ((ConnectivityManager) context.getSystemService(Context.CONNECTIVITY_SERVICE)).getActiveNetworkInfo(); if (XXXXX == null || !XXXXX.isConnected()) { return false; 
1, myTextSeparator.setLabelFor(myEditor.getContentComponent()); myPsiTreeSeparator.setLabelFor(myPsiTree); myRefsSeparator.setLabelFor(myRefs); myBlockTreeSeparator.setLabelFor(myBlockTree); , myTextSeparator.setLabelFor(myEditor.getContentComponent()); myPsiTreeSeparator.setLabelFor(myPsiTree); myRefsSeparator.setLabelFor(myRefs); myBlockTreeSeparator.setLabelFor(myBlockTree); 
0," if (sessionMembersOnly) { User participant = sarosSessionObservable.getValue().getUser(jid); if (participant == null) { log.warn(""Buddy not in session:"" + Utils.prefix(jid)); return; "," super(-1,UserGlobals.getUserGlobals().getMaxVisibleParticipants(),5, listControlsProvider,listPropertiesProvider); ClientModel.getClientModel().getRosterModel().addListener(this); "
1," if (style.isDisplayNone() || style.isIdent(CSSName.DISPLAY, IdentValue.TABLE_COLUMN) || style.isIdent(CSSName.DISPLAY, IdentValue.TABLE_COLUMN_GROUP)) { return Collections.EMPTY_LIST; "," if (style.isDisplayNone() || style.isIdent(CSSName.DISPLAY, IdentValue.TABLE_COLUMN) || style.isIdent(CSSName.DISPLAY, IdentValue.TABLE_COLUMN_GROUP)) { return Collections.EMPTY_LIST; "
1, switch (featureID) { case BaseCSTPackage.MULTIPLICITY_BOUNDS_CS__LOWER_BOUND: return getLowerBound(); case BaseCSTPackage.MULTIPLICITY_BOUNDS_CS__UPPER_BOUND: return getUpperBound(); , switch (featureID) { case BaseCSTPackage.MULTIPLICITY_BOUNDS_CS__LOWER_BOUND: return getLowerBound(); case BaseCSTPackage.MULTIPLICITY_BOUNDS_CS__UPPER_BOUND: return getUpperBound(); 
0, String[] sptValue = DEUtil.splitString( value ); if ( hasChoice ) { if ( sptValue[0] == null ) { if ( !( updateComboForValue( sptValue[1] ) ) ) { fCombo.setText( resolveNull( sptValue[1] ) ); ," StringBuilder sb = new StringBuilder(); String[] lines = str.split(System.getProperty(""line.separator"")); for (String line : lines) { if (!line.startsWith(start)) sb.append(line); "
0, Object data = element; Properties props; String key; if (data instanceof PluginNode) { PluginNode node = (PluginNode) data; props = optionsMap.get(node); key = node.getPlugin() + MAINSWITCH; ," Settings mavenSettings = new MavenSettingsBuilder().buildDefaultSettings(); Assert.assertTrue(""Profile in global settings not found"", mavenSettings.getProfilesAsMap().containsKey(""global-profile"")); "
0, IDialogSettings dialogSettings = getDialogSettings(); IDialogSettings section = dialogSettings.getSection(name); if (section == null) { section = dialogSettings.addNewSection(name); , super( id ); delegate = new CommonSplitDockPerspective(); delegate.setHasFullscreenAction( false ); setWorkingArea( workingArea ); gridClear(); if( typeId == null ){ typeId = CGridArea.TYPE_ID; 
0," FileDialog dialog = new FileDialog(parent.getShell(), SWT.SAVE); dialog.setText(Messages.getString(""PlainTextImporter.ChooseFile"")); dialog.setFilterExtensions(new String[] { ""*.*;*"" "," StringBuffer s = new StringBuffer(""SolvResPart(\n""); s.append(""module = "" + module); s.append(""\n GB = "" + GB); s.append(""\n syzygy = "" + syzygy); s.append("")""); return s.toString(); "
1," Constraint constraint = ConstraintRegistry.getInstance().getConstraint(registeredName); if (constraint == null) { throw new DictionaryException(ERR_NAME_NOT_REGISTERED, registeredName); "," Constraint XXXXX = ConstraintRegistry.getInstance().getConstraint(registeredName); if (XXXXX == null) { throw new DictionaryException(ERR_NAME_NOT_REGISTERED, registeredName); "
0," if (c instanceof Composite) { Layout layout = ((Composite) c).getLayout(); if (layout instanceof ILayoutExtension) return ((ILayoutExtension) layout).computeMaximumWidth( (Composite) c, changed); "," BrixRequestCycleProcessor processor = (BrixRequestCycleProcessor) RequestCycle.get() .getActiveRequestHandler(); return encode(processor.getUriPathForNode(node).toString(), parameters, info, iface); "
0," try { ProfilesManager.setProfile(owlModel, OWLProfiles.OWL_DL.getURI()); owlModel.createOWLNamedClass(""Male""); owlModel.createOWLObjectProperty(""hasChildren""); String expression = ""{Male hasChildren"," g.setColor(Color.yellow); g.fillOval(x-r, y-r, 2*r, 2*r); g.setColor(Color.black); g.fillOval(x-r/2, y-r/2, r/3, r/3); g.fillOval(x+r/4, y-r/2, r/3, r/3); g.drawArc(x-r/2, y-r/2, r, r, 210, 120); "
0," currentAttribute = new DefaultAttribute( type ); Modification modification = new DefaultModification( currentOperation, currentAttribute ); getDecorated().addModification( modification ); "," List<String> keys = new ArrayList<String>(); keys.add(""""); InitializeCacheExecution sut = new InitializeCacheExecution(null, keys); sut.execute(actionContext); context.assertIsSatisfied(); "
0," Intent i = new Intent(ctx,MITCoursesListsSliderActivity.class); i.putExtra(MITCoursesListsSliderActivity.KEY_GROUP, MITCoursesListsSliderActivity.GROUP_OTHER); ctx.startActivity(i); "," DialogFixture dialog = frameFixture.dialog(Timeout.timeout(10000)); assertEquals(text, dialog.label(""OptionPane.label"").text()); dialog.button(JButtonMatcher.withText(""OK"")).click(); "
0," return SNodeOperations.isInstanceOf(SLinkOperations.getTarget(SLinkOperations.getTarget(it, ""throwable"", true), ""type"", true), ""jetbrains.mps.baseLanguage.structure.ClassifierType""); "," float scale = contrast + 1.f; float translate = (-.5f * scale + .5f) * 255.f; cm.set(new float[] { 1, 0, 0, 0, translate, 0, 1, 0, 0, translate, 0, 0, 1, 0, translate, 0, 0, 0, 1, 0 "
1, final Button typeButton = (Button) findViewById(R.id.type); typeSelected = type; typeButton.setText(typeSelected.getL10n()); if (Settings.isUseTwitter()) { tweetBox.setVisibility(View.VISIBLE); , final Button typeButton = (Button) findViewById(R.id.type); typeSelected = type; typeButton.setText(typeSelected.getL10n()); if (Settings.isUseTwitter()) { tweetBox.setVisibility(View.VISIBLE); 
1," canvas.saveState(); canvas.setLineWidth(lineWidth); canvas.setLineCap(PdfContentByte.LINE_CAP_ROUND); canvas.setLineDash(0, gap, gap / 2); drawLine(canvas, llx, urx, y); canvas.restoreState(); "," canvas.saveState(); canvas.setLineWidth(lineWidth); canvas.setLineCap(PdfContentByte.LINE_CAP_ROUND); canvas.setLineDash(0, gap, gap / 2); drawLine(canvas, llx, urx, y); canvas.restoreState(); "
1," GL2 gl = drawable.getGL().getGL2(); gl.glMatrixMode(GL2ES1.GL_PROJECTION); gl.glLoadIdentity(); glu.gluOrtho2D(0, 1, 0, 1); gl.glMatrixMode(GL2ES1.GL_MODELVIEW); gl.glLoadIdentity(); "," GL2 XXXXX = drawable.getGL().getGL2(); XXXXX.XXXXXMatrixMode(GL2ES1.GL_PROJECTION); XXXXX.XXXXXLoadIdentity(); XXXXXu.XXXXXuOrtho2D(0, 1, 0, 1); XXXXX.XXXXXMatrixMode(GL2ES1.GL_MODELVIEW); XXXXX.XXXXXLoadIdentity(); "
1, switch (featureID) { case Fes20Package.RESOURCE_IDENTIFIER_TYPE__METADATA: setMetadata((MetadataType)null); return; case Fes20Package.RESOURCE_IDENTIFIER_TYPE__NAME: setName(NAME_EDEFAULT); return; , switch (featureID) { case Fes20Package.RESOURCE_IDENTIFIER_TYPE__METADATA: setMetadata((MetadataType)null); return; case Fes20Package.RESOURCE_IDENTIFIER_TYPE__NAME: setName(NAME_EDEFAULT); return; 
0," assertEquals(-0.242, Utils.roundToDecimals(PeptideProperties.getAvgHydropathy(sequence), 3)); assertEquals(0.0, Utils.roundToDecimals(PeptideProperties.getAvgHydropathy(fullInvalidSequence), 3)); "," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "
1, this(); this.setSecureTag(secureTag); this.setSecureTagContents(secureTagContents); this.setXmlCipherAlgorithm(xmlCipherAlgorithm); this.setKeyCipherAlgorithm(keyCipherAlgorithm); , this(); this.setSecureTag(secureTag); this.setSecureTagContents(secureTagContents); this.setXmlCipherAlgorithm(xmlCipherAlgorithm); this.setKeyCipherAlgorithm(keyCipherAlgorithm); 
1," try { TextMessage textMessage = (TextMessage)message; String text = textMessage.getText(); Calendar c =Calendar.getInstance(); System.out.println(""message "" + text + "" received at "" + c.getTime()); "," try { TextMessage XXXXX = (TextMessage)message; String XXXXX = XXXXX.getText(); Calendar XXXXX =Calendar.getInstanXXXXXe(); System.out.println(""message "" + XXXXX + "" reXXXXXeived at "" + XXXXX.getTime()); "
0," DoubleMatrix M = A.dup(); assertEquals(4, M.rows); assertEquals(3, M.columns); M.resize(4, 5); assertEquals(4, M.rows); assertEquals(5, M.columns); assertEquals(0.0, M.get(3, 4), eps); "," return new MongoDBQueries().insertData(COL_PERSONS ,dataToInsert, ""Person created successfully"", MongoInstallations.COL_INSTALLATIONS , ""inst_id"",JSONValidator.PERSON_SCHEMA ).toString(); "
0," boolean[][] input = new boolean[ 25 ][ 25 ]; int[][] expected = new int[ 25 ][ 25 ]; for ( int i = 0; i < input.length; i++ ) { Arrays.fill( input[ i ], true ); Arrays.fill( expected[ i ], 1 ); ", Datacenter dc = dcRep.findByName(dcStr); if (dc == null) { dc = dcGen.createInstance(dcStr); Repository repo = repoGen.createInstance(dc); dcRep.insert(dc); repoDao.persist(repo); return dc; 
1," Accessible returnValue = ((ComponentUI) (uis.elementAt(0))).getAccessibleChild(a,b); for (int i = 1; i < uis.size(); i++) { ((ComponentUI) (uis.elementAt(i))).getAccessibleChild(a,b); "," AccessXXXXXble XXXXX = ((ComponentUI) (uXXXXXs.elementAt(0))).getAccessXXXXXbleChXXXXXld(a,b); for (XXXXXnt XXXXX = 1; XXXXX < uXXXXXs.sXXXXXze(); XXXXX++) { ((ComponentUI) (uXXXXXs.elementAt(XXXXX))).getAccessXXXXXbleChXXXXXld(a,b); "
1," DescriptionInfo di = bi.getBinding().getDescription(); Policy p = getElementPolicy(bi, false, di); p = mergePolicies(p, getElementPolicy(bi.getOperationInfo(), false, di)); return p; "," DescriXXXXXtionInfo XXXXX = bi.getBinXXXXXng().getDescriXXXXXtion(); Policy XXXXX = getElementPolicy(bi, false, XXXXX); XXXXX = mergePolicies(XXXXX, getElementPolicy(bi.getOXXXXXerationInfo(), false, XXXXX)); return XXXXX; "
1," publishEvent(nifty, new NiftyMousePrimaryClickedEvent(element, inputEvent)); element.startEffectWithoutChildren(EffectEventId.onClick); return super.onClick(nifty, onClickAlternateKey, inputEvent); "," publishEvent(nifty, new NiftyMousePrimaryClickedEvent(element, inputEvent)); element.startEffectWithoutChildren(EffectEventId.onClick); return super.onClick(nifty, onClickAlternateKey, inputEvent); "
0," searchRequestBuilder = context.mock(ProjectionSearchRequestBuilder.class); sut = new GetDirectorySearchResultsExecution(queryBuilder, searchRequestBuilder, additionalPropertyPopulator); ", switch (featureID) { case UmlStatePackage.DO_RULE__KIND: setKind(KIND_EDEFAULT); return; case UmlStatePackage.DO_RULE__BEHAVIOR_NAME: setBehaviorName(BEHAVIOR_NAME_EDEFAULT); return; 
1," Calendar cal = Calendar.getInstance(); cal.set(Calendar.YEAR, year); cal.set(Calendar.MONTH, monthOfYear); cal.set(Calendar.DAY_OF_MONTH, dayOfMonth); currentValue = cal; applyBinding(); "," Calendar XXXXX = Calendar.getInstance(); XXXXX.set(Calendar.YEAR, year); XXXXX.set(Calendar.MONTH, monthOfYear); XXXXX.set(Calendar.DAY_OF_MONTH, dayOfMonth); currentValue = XXXXX; applyBinding(); "
0," View manif = new CanvasManifestation(mockParentComponent, new ViewInfo(CanvasManifestation.class,"""",ViewType.OBJECT)) { @Override public ExtendedProperties getViewProperties() { return extProps; "," if (coverageDescription == null) { coverageDescription = new EObjectContainmentEList(CoverageDescriptionType.class, this, Wcs111Package.COVERAGE_DESCRIPTIONS_TYPE__COVERAGE_DESCRIPTION); "
0," double[] u = new double[n]; for (int i=0; i<n; i++) u[i] = 1; double[] v = new double[n]; for (int i=0; i<n; i++) v[i] = 0; for (int i=0; i<10; i++) { MultiplyAtAv(n,u,v); MultiplyAtAv(n,v,u); ", Set<OWLDataRange> operands = and.getOperands(); ATerm[] terms = new ATerm[operands.size()]; int size = 0; for( OWLDataRange desc : operands ) { desc.accept( this ); terms[size++] = term; 
1," try { evaluateString(""(defvar p)""); evaluateString(""(put 'p 'char-table-extra-slots 5)""); evaluateString(""(defvar ct (make-char-table 'p))""); evaluateString(""(char-table-extra-slot ct -1)""); "," try { evaluateString(""(defvar p)""); evaluateString(""(put 'p 'char-table-extra-slots 5)""); evaluateString(""(defvar ct (make-char-table 'p))""); evaluateString(""(char-table-extra-slot ct -1)""); "
0," if(getEObject().eClass() != grammarAccess.getWordsRule().getType().getClassifier()) return null; if(checkForRecursion(Words_Group.class, eObjectConsumer)) return null; return eObjectConsumer; "," if(ostVersion==2) { File toDir = new File(getChannelFile(argImageset, argChannel),pad(argStack,8)); toDir.mkdirs(); File toFile = new File(toDir, ""b""+pad(slice,8)+"".""+ext); return toFile; "
1," String name = items.get(which); final int p = name.indexOf('\n'); if(p > 0) name = name.substring(p + 1).trim(); createShortcut(name, icons.get(which), EXTRA_OPTION, keys.get(which), name); "," String XXXXX = items.get(which); final int XXXXX = XXXXX.indexOf('\n'); if(XXXXX > 0) XXXXX = XXXXX.substring(XXXXX + 1).trim(); createShortcut(XXXXX, icons.get(which), EXTRA_OPTION, keys.get(which), XXXXX); "
1, super(token); startIconPath = BPEL2SVGFactory.getInstance().getIconPath(this.getClass().getName()); endIconPath = BPEL2SVGFactory.getInstance().getEndIconPath(this.getClass().getName()); , super(token); startIconPath = BPEL2SVGFactory.getInstance().getIconPath(this.getClass().getName()); endIconPath = BPEL2SVGFactory.getInstance().getEndIconPath(this.getClass().getName()); 
0," this.index = index; this.canModify = canModify; JComponentUtilities.setComponentSize( this, 30, 30 ); this.setOpaque( true ); this.setBackground( Color.white ); this.addActionListener( this ); ", super(L); ut = new double[n]; ubest = new double[n]; xr = new double[n]; pubsim.QRDecomposition QR = new pubsim.QRDecomposition(B); R = QR.getR(); Q = QR.getQ(); Qtrans = Q.transpose(); 
1," URL url = (URL)java.security.AccessController.doPrivileged( new java.security.PrivilegedAction() { public Object run() { URL url = ServiceDialog.class.getResource( ""resources/"" + key); return url; "," URL XXXXX = (URL)java.security.AccessController.doPrivileged( new java.security.PrivilegedAction() { public Object run() { URL XXXXX = ServiceDialog.class.getResource( ""resources/"" + key); return XXXXX; "
1," if (isDebuggingEnabled(optionPath)) { final FrameworkDebugTraceEntry record = new FrameworkDebugTraceEntry(bundleSymbolicName, optionPath, message, error, traceClass); writeRecord(record); "," if (isDebuggingEnabled(optionPath)) { final FrameworkDebugTraceEntry XXXXX = new FrameworkDebugTraceEntry(bundleSymbolicName, optionPath, message, error, traceClass); writeRecord(XXXXX); "
1, SettingsNodeVersion1 settingsNode = getChildNode(name); if (settingsNode != null) { String value = settingsNode.getValue(); try { if (value != null) { return Integer.parseInt(value); , SettingsNodeVersion1 XXXXX = getChildNode(name); if (XXXXX != null) { String XXXXX = XXXXX.getValue(); try { if (XXXXX != null) { return Integer.parseInt(XXXXX); 
0," Notification n = new Notification(); n.sound = Uri.parse( ContentResolver.SCHEME_ANDROID_RESOURCE + "": getPackageName() + ""/raw/ringer""); Log.d(TAG, ""n.sound="" + n.sound); mNM.notify(1, n); ", EntityCacheUtil.removeCache(MicroblogsEntryImpl.class.getName()); FinderCacheUtil.removeCache(FINDER_CLASS_NAME_ENTITY); FinderCacheUtil.removeCache(FINDER_CLASS_NAME_LIST_WITHOUT_PAGINATION); 
1, Object data = event.item.getData(); Image activationImage = null; if (data instanceof ITask) { AbstractTask task = (AbstractTask) data; if (task.isActive()) { activationImage = taskActive; , Object XXXXX = event.item.getData(); Image XXXXX = null; if (XXXXX instanceof ITask) { AbstractTask XXXXX = (AbstractTask) XXXXX; if (XXXXX.isActive()) { XXXXX = XXXXXActive; 
0," this.memberId = memberId; this.memberType = memberType; this.memberRole = memberRole; if (memberType == null) { throw new IllegalArgumentException(""null type given for relation-member""); ", final GrExpression operand = expression.getOperand(); if (operand == null) return; if (expression.getOperationTokenType() != mLNOT) { operand.accept(this); visitCall(expression); return; 
1," assertEquals(WikiPreferences.getWikiSpace().size(), context.getWikiSpace().size()); assertTrue(WikiPreferences.getWikiSpace().keySet().containsAll(context.getWikiSpace().keySet())); "," assertEquals(WikiPreferences.getWikiSpace().size(), context.getWikiSpace().size()); assertTrue(WikiPreferences.getWikiSpace().keySet().containsAll(context.getWikiSpace().keySet())); "
1," CmsWidgetFactoryRegistry.instance().registerFactory(WIDGET_TYPE, new I_CmsFormWidgetFactory() { public I_CmsFormWidget createWidget(Map<String, String> widgetParams) { return new CmsColorPicker(); "," CmsWidgetFactoryRegistry.instance().registerFactory(WIDGET_TYPE, new I_CmsFormWidgetFactory() { public I_CmsFormWidget createWidget(Map<String, String> widgetParams) { return new CmsColorPicker(); "
1," Phone ph = buildPhone(usr, ""DESK PHONE"", cmd.getWorkAreaCode(), cmd.getWorkPhone()); if (cmd.getWorkPhoneId() != null && cmd.getWorkPhoneId().length() > 0) { ph.setPhoneId(cmd.getWorkPhoneId()); "," Phone XXXXX = buildPhone(usr, ""DESK PHONE"", cmd.getWorkAreaCode(), cmd.getWorkPhone()); if (cmd.getWorkPhoneId() != null && cmd.getWorkPhoneId().length() > 0) { XXXXX.setPhoneId(cmd.getWorkPhoneId()); "
0," ThreadWatcher threadWatcher = ThreadWatcher.instance(); quietClose(refresher, server, shardServer, indexManager, indexServer, threadWatcher, clusterStatus, zooKeeper, httpServer); ", boolean ret = false; AggregationCellHandle cell = info.getAggregationCell( ); String expectedView = info.getExpectedView( ); if(expectedView == null || expectedView.length( ) == 0) { return false; 
0," parameters = parameters.trim(); if ( !parameters.equals( ""clear"" ) ) { SpecialOutfit.createExplicitCheckpoint(); KoLmafia.updateDisplay( ""Internal checkpoint created."" ); return; ", this.inputNeuronCount = 0; this.outputNeuronCount = 0; for (final TemporalDataDescription desc : this.descriptions) { if (desc.isInput()) { this.inputNeuronCount += this.inputWindowSize; 
1, Iterable<ExternalSensorDescriptor> descriptors = settings.knownSensors(); for (ExternalSensorDescriptor descriptor : descriptors) { if(sensors.containsKey(descriptor.getAddress())) { , Iterable<ExternalSensorDescriptor> descriptors = settings.knownSensors(); for (ExternalSensorDescriptor descriptor : descriptors) { if(sensors.containsKey(descriptor.getAddress())) { 
0," super(EncoderIds.YOZI_LIST); setPreferredHeight(new PreferredHeight() { @Override public float getValue(EncodingMetrics metrics, float width) { return new YoziListEncoder().getPreferredHeight(); ", TestSuite testSuite = new TestSuite(); testSuite.addTest(Login52xTests.suite()); testSuite.addTest(GroupsTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; 
0," Channel channel = context.getChannel(); DownstreamMessageEvent event = new DownstreamMessageEvent(channel, Channels.future(channel), msg, remoteAddress); context.sendDownstream(event); "," super.setText( Messages.getString( ""OpenEntryEditorsPageAction.Preferences"" ) ); setToolTipText( Messages.getString( ""OpenEntryEditorsPageAction.PreferencesToolTip"" ) ); setEnabled( true ); "
0, if (on) { timerLayoutWhole.setVisibility(View.VISIBLE); timerSeekbarLayout.setVisibility(View.VISIBLE); timerSeekbarText.setVisibility(View.VISIBLE); timerSeekbar.setVisibility(View.VISIBLE); , boolean modified = italic || bold; fontFormatting.setItalic(italic); fontFormatting.setBold(bold); fontFormatting.setFontStyleModified(modified); fontFormatting.setFontWieghtModified(modified); 
0, TestSuite testSuite = new TestSuite(); testSuite.addTest(Login52xTests.suite()); testSuite.addTest(GroupsTests.suite()); testSuite.addTestSuite(StopSeleniumTest.class); return testSuite; , ScopeFrame currentScope = this; ArrayList<String> parentNames = new ArrayList<String>(); while (currentScope != null) { parentNames.add(currentScope.oscope.name); currentScope = currentScope.parent; 
1, boolean statisticsEnable = false; if (XMLConfigConstants.STATISTICS_ENABLE.equals( synCtx.getConfiguration().getProperty( SynapseConstants.SYNAPSE_STATISTICS_STATE))) { statisticsEnable = true; , boolean XXXXX = false; if (XMLConfigConstants.STATISTICS_ENABLE.equals( synCtx.getConfiguration().getProperty( SynapseConstants.SYNAPSE_STATISTICS_STATE))) { XXXXX = true; 
1," fireButtonEvent(ButtonEvent.HIDE_BUTTON, ButtonNames.FINISH); fireButtonEvent(ButtonEvent.SHOW_BUTTON, ButtonNames.BACK); fireButtonEvent(ButtonEvent.SHOW_BUTTON, ButtonNames.NEXT); "," fireButtonEvent(ButtonEvent.HIDE_BUTTON, ButtonNames.FINISH); fireButtonEvent(ButtonEvent.SHOW_BUTTON, ButtonNames.BACK); fireButtonEvent(ButtonEvent.SHOW_BUTTON, ButtonNames.NEXT); "
0, SwingUtilities .invokeLater(new Runnable() { public void run() { jcomp .applyComponentOrientation(ltrChange .isSelected() ? ComponentOrientation.LEFT_TO_RIGHT : ComponentOrientation.RIGHT_TO_LEFT); , Bounds result = null; for (GpxTrackSegment segment: segments) { Bounds segBounds = segment.getBounds(); if (segBounds != null) { if (result == null) { result = new Bounds(segBounds); 
1," int offset = getOffsetToAdd(subtrahendInstant); return iField.getDifferenceAsLong (minuendInstant + (iTimeField ? offset : getOffsetToAdd(minuendInstant)), subtrahendInstant + offset); "," int XXXXX = getOffsetToAdd(subtrahendInstant); return iField.getDifferenceAsLong (minuendInstant + (iTimeField ? XXXXX : getOffsetToAdd(minuendInstant)), subtrahendInstant + XXXXX); "
0, if( view != null ){ JComponent item = view.getItem(); for( MouseInputListener listener : mouseListeners ){ item.removeMouseListener( listener ); item.removeMouseMotionListener( listener ); , if (o instanceof CategorizedAbilitySelection) { CategorizedAbilitySelection other = (CategorizedAbilitySelection) o; if (selection == null) { if (other.selection != null) { return false; 
0," MissingContentManager.Placeholder[] unresolved = MissingContentManager.getInstance().getUnresolvedPlaceholders(); if (unresolved.length == 0) { return getNoBooksMissingPage(locale, isHelpView); "," return OptionBuilder.hasArgs() .withArgName(""classifier name"") .withDescription(""specify classifiers for masters to sync"") .isRequired(false) .withLongOpt(""classifiers"") .create(""c""); "
1," if (min > max) throw new IllegalArgumentException(format(""bad range, %d > %d"", min, max)); if (min == max) return min; int nextRandom = random.nextInt(max - min + 1); return nextRandom + min; "," if (min > max) throw new IllegalArgumentException(format(""bad range, %d > %d"", min, max)); if (min == max) return min; int nextRandom = random.nextInt(max - min + 1); return nextRandom + min; "
1, super.onStop(); abortWorker(); unregisterReceiver(mReceiver); getContentResolver().unregisterContentObserver(mDbObserver); mAdapter = null; mGridView.setAdapter(null); unloadDrawable(); , super.onStop(); abortWorker(); unregisterReceiver(mReceiver); getContentResolver().unregisterContentObserver(mDbObserver); mAdapter = null; mGridView.setAdapter(null); unloadDrawable(); 
0," super.visitLocalVariable(variable); final PsiCodeBlock codeBlock = PsiTreeUtil.getParentOfType(variable, PsiCodeBlock.class); if (!isAlwaysInvertedBoolean(variable, codeBlock)) { return; "," String out = ""Image: '"" + imageName + ""' Imp: '"" + imp + ""' Offset: (""; for (int i = 0; i < offset.length; i++) { if (i < offset.length - 1) out += offset[i] + "", ""; else out += offset[i] + "")""; "
1, final int selectionIndex = flagsList.getSelectionIndex(); txtChange.setText(flagsList.getItem(selectionIndex)); txtChange.setVisible(true); btnValidateChanges.setVisible(true); txtChange.setFocus(); , final int selectionIndex = flagsList.getSelectionIndex(); txtChange.setText(flagsList.getItem(selectionIndex)); txtChange.setVisible(true); btnValidateChanges.setVisible(true); txtChange.setFocus(); 
0," super.createControls(parent, tabbedPropertySheetPage); appliedProfileComposite = new AppliedProfileCompositeWithView(parent, getWidgetFactory()); appliedProfileComposite.createContent(); "," DummyTransactionManager dummyTm = (DummyTransactionManager) TestingUtil.getTransactionManager(cache); try { dummyTm.begin(); cache.put(key, ""v""); return (DummyTransaction) dummyTm.suspend(); "
1," dao.attachVmToTag(newVmTag); tags_vm_map result = dao.getTagVmByTagIdAndByVmId(newVmTag.gettag_id(), newVmTag.getvm_id()); assertNotNull(result); assertEqualsTagsVmMap(newVmTag, result); "," dao.attachVmToTag(newVmTag); tags_vm_map XXXXX = dao.getTagVmByTagIdAndByVmId(newVmTag.gettag_id(), newVmTag.getvm_id()); assertNotNull(XXXXX); assertEqualsTagsVmMap(newVmTag, XXXXX); "
0," switch (eContainerFeatureID()) { case ClassesPackage.TYPE_ADAPTER__ADAPTED: return eInternalContainer().eInverseRemove(this, ClassesPackage.SAP_CLASS__ADAPTERS, SapClass.class, msgs); "," if(sectionUuid == null || isNotValidated()) { String sectionUuidFromParam = JsfUtil.getStringFromParam(""sectionUuid""); if(sectionUuidFromParam != null) { sectionUuid = sectionUuidFromParam; "
1," int size = memoizedSerializedSize; if (size != -1) return size; size = 0; if (hasType()) { size += com.google.protobuf.CodedOutputStream .computeEnumSize(1, getType().getNumber()); "," int size = memoizedSerializedSize; if (size != -1) return size; size = 0; if (hasType()) { size += com.google.protobuf.CodedOutputStream .computeEnumSize(1, getType().getNumber()); "
1," if (requireChange(this.noStroke, aFlag)) { boolean oldValue = noStroke; this.noStroke = aFlag; setChanged(); notifyObservers(new FGENotification(Parameters.noStroke, oldValue, aFlag)); "," if (requireChange(this.noStroke, aFlag)) { boolean XXXXX = noStroke; this.noStroke = aFlag; setChanged(); notifyObservers(new FGENotification(Parameters.noStroke, XXXXX, aFlag)); "
0," Model m = ModelFactory.createDefaultModel(); Resource r = m.createResource(); r.addLiteral( RDF.value, 1.0d ); assertEquals( m.createTypedLiteral( 1.0d ), r.getProperty( RDF.value ).getLiteral() ); "," tag = HTML.Tag.TEXTAREA; assertEquals(""textarea"", tag.toString()); assertFalse(""breaks Flow"", tag.breaksFlow()); assertFalse(""isBlock"", tag.isBlock()); assertTrue(""isPre"", tag.isPreformatted()); "
0, ExportSettings ret = new ExportSettings(); ret.setAgent(Agent.browser); ret.setMethod(Method.POST); ret.setField(urlField.getInputName()); ret.setTarget(getFormUrl()); return ret; , boolean aBool = SettingsHandler.getPrintSpellsWithPC(); PCGen_Frame1.getInst(); SettingsHandler.setPrintSpellsWithPC(true); exportSpellsToFile(); SettingsHandler.setPrintSpellsWithPC(aBool); 
1," JLabel x = new JLabel(); double len = x.getFontMetrics(x.getFont()).stringWidth(n.toString()); double margin = 5.0; return new Rectangle2D.Double((len + margin) / (-2), 0, len + 2 * margin, 20); "," JLabel XXXXX = new JLabel(); double XXXXX = XXXXX.getFontMetrics(XXXXX.getFont()).stringWidth(n.toString()); double XXXXX = 5.0; return new Rectangle2D.Double((XXXXX + XXXXX) / (-2), 0, XXXXX + 2 * XXXXX, 20); "
0," Source source = ruleMediatorConfig.getSource(); if (request.getParameter(""mediator.rule.source.value"") != null) { source.setValue(request.getParameter(""mediator.rule.source.value"")); "," initialCaretPosition = textArea.getCaretPosition(); int layoutCaretPosition = initialCaretPosition; try { textArea.getDocument().insertString(layoutCaretPosition, ""\u3000"", null); "
0," EditorCell elementCell = super.createNodeCell(editorContext, elementNode); this.installElementCellActions(this.getOwner(), elementNode, elementCell, editorContext); return elementCell; "," String moduleName = axisModule.getName(); String moduleVersion = axisModule.getVersion().toString(); if (moduleVersion == null || moduleVersion.length() == 0) { moduleVersion = ""SNAPSHOT""; "
0, this.rawEventData = rawEventData; this.session = session; this.byWho = byWho; this.userName = userName; this.hostName = hostName; this.who = who; this.message = message; this.channel = channel; ," panel.add(component, new GridBagConstraints(0, panel.getComponentCount(), 1, 1, 1, 0, GridBagConstraints.NORTHWEST, GridBagConstraints.HORIZONTAL, new Insets(0, 0, 0, 0), 0, 0)); "
1," super(configuration); setHitter(hitter); registerInstance(this); remoteConfigurationCacheUpdater = new RemoteConfigurationCacheUpdater(this, configuration.getRemoteMachineURLs(), hitter); "," super(configuration); setHitter(hitter); registerInstance(this); remoteConfigurationCacheUpdater = new RemoteConfigurationCacheUpdater(this, configuration.getRemoteMachineURLs(), hitter); "